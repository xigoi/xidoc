[inject head.xd]
[section Installation;
  [p You need [link Nim; https://nim-lang.org/] and [link Nimble; https://github.com/nim-lang/nimble]. Make sure that [ms ~/.nimble/bin] is in your [ms PATH].]
  [section From the Nimble package repository;
    [code-block shell; nimble install xidoc]
  ]
  [section Building from source;
    [code-block shell; [raw
git clone https://git.sr.ht/~xigoi/xidoc
cd xidoc
nimble install
    ]];
  ]
]
[section Usage;
  [section Compile some documents;
    [code-block shell; [raw
xidoc foo.xd bar.xd
    ]]
    [p The default target is HTML. To choose a different target:]
    [code-block shell; [raw
xidoc --target:latex foo.xd
xidoc -t:latex foo.xd
# Permitted values: -t:html, -t:latex, -t:gemtext
    ]]
  ]
  [section Snippet mode;
    [p By default, xidoc automatically includes wrappers like [code html; <html>] or [code latex; \begin{document}]. To disable this behavior, use [" snippet mode]:]
    [code-block shell; [raw
xidoc --snippet snip.xd
xidoc -s snip.xd
    ]]
  ]
  [section Get help;
    [code-block shell; [raw
xidoc --help
xidoc -h
    ]]
  ]
]
[section Syntax;
  [p The only special characters in xidoc are square brackets, semicolons and whitespace. Everything except these characters is treated as literal text.]
  [p [term Commands] are the basic building block of xidoc. Every command invocation is enclosed in square brackets. The first sequence of non-whitespace characters inside the brackets is treated as the command name[;] the remaining text is given to the command. Most commands ignore the leading whitespace. Many commands can take multiple arguments, in which case they split the text on semicolons[;] whitespace around the semicolons is ignored. A trailing semicolon followed by a newline is ignored, to allow for easy multiline lists. If the text contains more square brackets, they may or may not be treated as a command invocation (depending on the surrounding command), but they should always be balanced.]
  [p Multiple whitespace in a row is changed into a single space in the output, which allows you to indent your code as you want without affecting the generated code.]
]
