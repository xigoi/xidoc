/* Generated by the Nim Compiler v1.6.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1476395074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476395071 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476395068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476395011 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1006632967 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275074034 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275074220 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275073794 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275074036 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275073797 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1275073791 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275073792 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275073793 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275074035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068438 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068436 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1275068431 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1275068422 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068428 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1275068423 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068425 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068429 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068949 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068421 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1258295965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459620817 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637534705 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1258295862 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI637534694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1342177287 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1342177286 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1342177283 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1342177284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1258293149 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI452985127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI872415304 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI872415311 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1493172227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1476395054 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476395082 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1476395047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476395044 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476395041 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476395015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459617795 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI637535411 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI687865917 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1526726758 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1526726735 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1526726734 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1526726738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1526726730 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1526726727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1543503913 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1577058308 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1577058341 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1577058339 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1543503915 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1543503914 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1459618069 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1459618080 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1459618078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835566 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835564 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1124073475 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1476395032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476395029 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476395026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1459618060 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1426063364 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1476395013 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI1476395013 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "rendered", len: 0, typ: NTI33554466, name: "rendered", sons: null}, 
{kind: 1, offset: "str", len: 0, typ: NTI33554439, name: "str", sons: null}]};
NTI1476395013.node = NNI1476395013;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI1426063364 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1426063364.node = NNI1426063364;
NTI1426063364.base = NTI33555114;
var NNI1476395032 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073475, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}]};
NTI1476395032.node = NNI1476395032;
NTI1476395029.base = NTI1476395032;
var NNI1476395026 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1476395029, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1476395026.node = NNI1476395026;
NTI1593835566.base = NTI33554456;
var NNI1593835564 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554456, name: "top", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554456, name: "max", sons: null}, 
{kind: 1, offset: "frames", len: 0, typ: NTI1593835566, name: "frames", sons: null}]};
NTI1593835564.node = NNI1593835564;
var NNI1543503914 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1543503914, name: "cftOpen", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1543503914, name: "cftClose", len: 0, sons: null}}};
NTI1543503914.node = NNI1543503914;
var NNI1543503915 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1543503915, name: "ckVal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1543503915, name: "ckPushed", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1543503915, name: "ckAction", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1543503915, name: "ckRef", len: 0, sons: null}}};
NTI1543503915.node = NNI1543503915;
var NNI1459618069 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cft", len: 0, typ: NTI1543503914, name: "cft", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554456, name: "si", sons: null}, 
{kind: 1, offset: "ck", len: 0, typ: NTI1543503915, name: "ck", sons: null}, 
{kind: 1, offset: "sPushed", len: 0, typ: NTI33554439, name: "sPushed", sons: null}]};
NTI1459618069.node = NNI1459618069;
NTI1459618080.base = NTI1459618069;
var NNI1459618078 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554456, name: "top", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554456, name: "max", sons: null}, 
{kind: 1, offset: "frames", len: 0, typ: NTI1459618080, name: "frames", sons: null}]};
NTI1459618078.node = NNI1459618078;
var NNI1577058308 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ip", len: 0, typ: NTI33554456, name: "ip", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554456, name: "si", sons: null}, 
{kind: 1, offset: "rp", len: 0, typ: NTI33554456, name: "rp", sons: null}, 
{kind: 1, offset: "cp", len: 0, typ: NTI33554456, name: "cp", sons: null}, 
{kind: 1, offset: "pp", len: 0, typ: NTI33554456, name: "pp", sons: null}]};
NTI1577058308.node = NNI1577058308;
NTI1577058341.base = NTI1577058308;
var NNI1577058339 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554456, name: "top", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554456, name: "max", sons: null}, 
{kind: 1, offset: "frames", len: 0, typ: NTI1577058341, name: "frames", sons: null}]};
NTI1577058339.node = NNI1577058339;
var NNI1459618060 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ip", len: 0, typ: NTI33554456, name: "ip", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554456, name: "si", sons: null}, 
{kind: 1, offset: "simax", len: 0, typ: NTI33554456, name: "simax", sons: null}, 
{kind: 1, offset: "refs", len: 0, typ: NTI1476395026, name: "refs", sons: null}, 
{kind: 1, offset: "retStack", len: 0, typ: NTI1593835564, name: "retStack", sons: null}, 
{kind: 1, offset: "capStack", len: 0, typ: NTI1459618078, name: "capStack", sons: null}, 
{kind: 1, offset: "backStack", len: 0, typ: NTI1577058339, name: "backStack", sons: null}, 
{kind: 1, offset: "precStack", len: 0, typ: NTI1593835564, name: "precStack", sons: null}]};
NTI1459618060.node = NNI1459618060;
var NNI1543503913 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "matchLen", len: 0, typ: NTI33554456, name: "matchLen", sons: null}, 
{kind: 1, offset: "matchMax", len: 0, typ: NTI33554456, name: "matchMax", sons: null}]};
NTI1543503913.node = NNI1543503913;
NTI1543503913.base = NTI33555114;
var NNI1526726735 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ck", len: 0, typ: NTI1543503915, name: "ck", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554456, name: "si", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "len", len: 0, typ: NTI33554456, name: "len", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI33554439, name: "s", sons: null}]};
NTI1526726735.node = NNI1526726735;
NTI1526726734.base = NTI1526726735;
NTI1526726738.base = NTI1526726734;
var NNI1526726730 = {kind: 1, offset: "capList", len: 0, typ: NTI1526726738, name: "capList", sons: null};
NTI1526726730.node = NNI1526726730;
var NNI1526726727 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ok", len: 0, typ: NTI33554466, name: "ok", sons: null}, 
{kind: 1, offset: "matchLen", len: 0, typ: NTI33554456, name: "matchLen", sons: null}, 
{kind: 1, offset: "matchMax", len: 0, typ: NTI33554456, name: "matchMax", sons: null}, 
{kind: 1, offset: "cs", len: 0, typ: NTI1526726730, name: "cs", sons: null}]};
NTI1526726727.node = NNI1526726727;
NTI1526726758.base = NTI1526726734;
var NNI687865917 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI687865917.node = NNI687865917;
NTI637535411.base = NTI33554438;
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
NTI33555129.base = NTI33555113;
var NNI1459617795 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1459617795, name: "xnkString", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1459617795, name: "xnkWhitespace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1459617795, name: "xnkCommand", len: 0, sons: null}}};
NTI1459617795.node = NNI1459617795;
var NNI1476395047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073475, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1476395082, name: "Field2", sons: null}]};
NTI1476395047.node = NNI1476395047;
NTI1476395044.base = NTI1476395047;
var NNI1476395041 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1476395044, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1476395041.node = NNI1476395041;
var NNI1493172227 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1493172227, name: "lEnglish", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493172227, name: "lCzech", len: 0, sons: null}}};
NTI1493172227.node = NNI1493172227;
var NNI1476395054 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1493172227, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1476395054.node = NNI1476395054;
var NNI1476395015 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "args", len: 0, typ: NTI1476395026, name: "args", sons: null}, 
{kind: 1, offset: "cmdArg", len: 0, typ: NTI33554439, name: "cmdArg", sons: null}, 
{kind: 1, offset: "cmdName", len: 0, typ: NTI33554439, name: "cmdName", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1476395041, name: "commands", sons: null}, 
{kind: 1, offset: "lang", len: 0, typ: NTI1476395054, name: "lang", sons: null}]};
NTI1476395015.node = NNI1476395015;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
NTI33555126.base = NTI33555125;
var NNI872415311 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI872415304, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI872415311.node = NNI872415311;
NTI452985127.base = NTI33554439;
var NNI33555132 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555132.node = NNI33555132;
NTI33555132.base = NTI33555113;
var NNI1258293149 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554439, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1258293149.node = NNI1258293149;
var NNI1509949460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1509949460.node = NNI1509949460;
NTI1509949460.base = NTI33555113;
var NNI1342177283 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1342177283, name: "kClosure", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1342177283, name: "kNoconv", len: 0, sons: null}}};
NTI1342177283.node = NNI1342177283;
var NNI1342177284 = {kind: 3, offset: "kind", len: 2, typ: NTI1342177283, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "fun1", len: 0, typ: NTI1342177286, name: "fun1", sons: null}], 
[setConstr(1), {kind: 1, offset: "fun2", len: 0, typ: NTI1342177287, name: "fun2", sons: null}]]};
NTI1342177284.node = NNI1342177284;
NTI637534694.base = NTI33554439;
var NNI1258295862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI637534694, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1258295862.node = NNI1258295862;
NTI637534705.base = NTI33554439;
NTI1459620817.base = NTI33554439;
var NNI1258295965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}]};
NTI1258295965.node = NNI1258295965;
var NNI1275068421 = {kind: 2, offset: 0, typ: null, name: null, len: 33, sons: {"0": {kind: 1, offset: 0, typ: NTI1275068421, name: "pkEmpty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275068421, name: "pkAny", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068421, name: "pkAnyRune", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068421, name: "pkNewLine", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068421, name: "pkLetter", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068421, name: "pkLower", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068421, name: "pkUpper", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068421, name: "pkTitle", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068421, name: "pkWhitespace", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068421, name: "pkTerminal", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068421, name: "pkTerminalIgnoreCase", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068421, name: "pkTerminalIgnoreStyle", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068421, name: "pkChar", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1275068421, name: "pkCharChoice", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1275068421, name: "pkNonTerminal", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1275068421, name: "pkSequence", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1275068421, name: "pkOrderedChoice", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1275068421, name: "pkGreedyRep", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1275068421, name: "pkGreedyRepChar", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1275068421, name: "pkGreedyRepSet", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1275068421, name: "pkGreedyAny", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1275068421, name: "pkOption", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1275068421, name: "pkAndPredicate", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1275068421, name: "pkNotPredicate", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1275068421, name: "pkCapture", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1275068421, name: "pkBackRef", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1275068421, name: "pkBackRefIgnoreCase", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1275068421, name: "pkBackRefIgnoreStyle", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1275068421, name: "pkSearch", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1275068421, name: "pkCapturedSearch", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1275068421, name: "pkRule", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1275068421, name: "pkList", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1275068421, name: "pkStartAnchor", len: 0, sons: null}}};
NTI1275068421.node = NNI1275068421;
var NNI1275068949 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1275068949.node = NNI1275068949;
NTI1275068429.base = NTI33554438;
NTI1275068430.base = NTI1275068429;
var NNI1275068422 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1275068422, name: "ntDeclared", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275068422, name: "ntUsed", len: 0, sons: null}}};
NTI1275068422.node = NNI1275068422;
NTI1275068428.base = NTI1275068422;
var NNI1275068423 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554456, name: "line", sons: null}, 
{kind: 1, offset: "col", len: 0, typ: NTI33554456, name: "col", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI1275068428, name: "flags", sons: null}, 
{kind: 1, offset: "rule", len: 0, typ: NTI1275068424, name: "rule", sons: null}]};
NTI1275068423.node = NNI1275068423;
NTI1275068425.base = NTI1275068423;
NTI1275068431.base = NTI1275068436;
NTI1275068438.base = NTI1275068424;
var NNI1275068424 = {kind: 3, offset: "kind", len: 33, typ: NTI1275068421, name: "kind", sons: [[setConstr([0, 8]), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(9, 10, 11), {kind: 1, offset: "term", len: 0, typ: NTI33554439, name: "term", sons: null}], 
[setConstr(12, 18), {kind: 1, offset: "ch", len: 0, typ: NTI33554438, name: "ch", sons: null}], 
[setConstr(13, 19), {kind: 1, offset: "charChoice", len: 0, typ: NTI1275068430, name: "charChoice", sons: null}], 
[setConstr(14), {kind: 1, offset: "nt", len: 0, typ: NTI1275068425, name: "nt", sons: null}], 
[setConstr([25, 27]), {kind: 1, offset: "index", len: 0, typ: NTI1275068431, name: "index", sons: null}], 
[setConstr(33), {kind: 1, offset: "sons", len: 0, typ: NTI1275068438, name: "sons", sons: null}]]};
NTI1275068424.node = NNI1275068424;
var NNI1275073792 = {kind: 2, offset: 0, typ: null, name: null, len: 26, sons: {"0": {kind: 1, offset: 0, typ: NTI1275073792, name: "tkInvalid", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275073792, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275073792, name: "tkAny", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275073792, name: "tkAnyRune", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275073792, name: "tkIdentifier", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275073792, name: "tkStringLit", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275073792, name: "tkCharSet", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275073792, name: "tkParLe", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275073792, name: "tkParRi", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275073792, name: "tkCurlyLe", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275073792, name: "tkCurlyRi", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275073792, name: "tkCurlyAt", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275073792, name: "tkEmptyCurl", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1275073792, name: "tkArrow", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1275073792, name: "tkBar", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1275073792, name: "tkStar", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1275073792, name: "tkPlus", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1275073792, name: "tkAmp", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1275073792, name: "tkNot", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1275073792, name: "tkOption", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1275073792, name: "tkAt", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1275073792, name: "tkBuiltin", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1275073792, name: "tkEscaped", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1275073792, name: "tkBackref", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1275073792, name: "tkDollar", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1275073792, name: "tkHat", len: 0, sons: null}}};
NTI1275073792.node = NNI1275073792;
var NNI1275073791 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1275073791, name: "modNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275073791, name: "modVerbatim", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275073791, name: "modIgnoreCase", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275073791, name: "modIgnoreStyle", len: 0, sons: null}}};
NTI1275073791.node = NNI1275073791;
NTI1275073797.base = NTI33554438;
var NNI1275073793 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1275073792, name: "kind", sons: null}, 
{kind: 1, offset: "modifier", len: 0, typ: NTI1275073791, name: "modifier", sons: null}, 
{kind: 1, offset: "literal", len: 0, typ: NTI33554439, name: "literal", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI1275073797, name: "charset", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554456, name: "index", sons: null}]};
NTI1275073793.node = NNI1275073793;
NTI1275074036.base = NTI1275068425;
var NNI1275074035 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tok", len: 0, typ: NTI1275073793, name: "tok", sons: null}, 
{kind: 1, offset: "nonterms", len: 0, typ: NTI1275074036, name: "nonterms", sons: null}, 
{kind: 1, offset: "modifier", len: 0, typ: NTI1275073791, name: "modifier", sons: null}, 
{kind: 1, offset: "captures", len: 0, typ: NTI33554456, name: "captures", sons: null}, 
{kind: 1, offset: "identIsVerbatim", len: 0, typ: NTI33554466, name: "identIsVerbatim", sons: null}, 
{kind: 1, offset: "skip", len: 0, typ: NTI1275068424, name: "skip", sons: null}]};
NTI1275074035.node = NNI1275074035;
var NNI1275073794 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554456, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554439, name: "buf", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554456, name: "lineNumber", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554456, name: "lineStart", sons: null}, 
{kind: 1, offset: "colOffset", len: 0, typ: NTI33554456, name: "colOffset", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554439, name: "filename", sons: null}]};
NTI1275073794.node = NNI1275073794;
NTI1275074035.base = NTI1275073794;
NTI1275074220.base = NTI1275068425;
var NNI1275074034 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275074034.node = NNI1275074034;
NTI1275074034.base = NTI33555125;
var NNI1006632967 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1006632967.node = NNI1006632967;
var NNI33555115 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555115.node = NNI33555115;
NTI33555115.base = NTI33555114;
var NNI1476395011 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1476395011, name: "html", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1476395011, name: "latex", len: 0, sons: null}}};
NTI1476395011.node = NNI1476395011;
var NNI1476395074 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073475, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}]};
NTI1476395074.node = NNI1476395074;
NTI1476395071.base = NTI1476395074;
var NNI1476395068 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1476395071, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI1476395068.node = NNI1476395068;

function cstrToNimstr(c_33556805) {
      var ln = c_33556805.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556805.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556805.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function makeNimstrLit(c_33556802) {
      var result = [];
  for (var i = 0; i < c_33556802.length; ++i) {
    result[i] = c_33556802.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556894) {
        return new Array(len_33556894);
  

  
}

function toJSStr(s_33556808) {
                    var Temporary5;
            var Temporary7;

  var result_33556809 = null;

    var res_33556843 = newSeq_33556826((s_33556808).length);
    var i_33556844 = 0;
    var j_33556845 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556844 < (s_33556808).length)) break Label2;
          var c_33556846 = s_33556808[i_33556844];
          if ((c_33556846 < 128)) {
          res_33556843[j_33556845] = String.fromCharCode(c_33556846);
          i_33556844 += 1;
          }
          else {
            var helper_33556858 = newSeq_33556826(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556859 = c_33556846.toString(16);
                  if ((((code_33556859) == null ? 0 : (code_33556859).length) == 1)) {
                  helper_33556858.push("%0");;
                  }
                  else {
                  helper_33556858.push("%");;
                  }
                  
                  helper_33556858.push(code_33556859);;
                  i_33556844 += 1;
                    if (((s_33556808).length <= i_33556844)) Temporary5 = true; else {                      Temporary5 = (s_33556808[i_33556844] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556846 = s_33556808[i_33556844];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556843[j_33556845] = decodeURIComponent(helper_33556858.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556843[j_33556845] = helper_33556858.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556845 += 1;
        }
    } while (false);
    if (res_33556843.length < j_33556845) { for (var i = res_33556843.length ; i < j_33556845 ; ++i) res_33556843.push(null); }
               else { res_33556843.length = j_33556845; };
    result_33556809 = res_33556843.join("");

  return result_33556809;

}

function raiseException(e_33556668, ename_33556669) {
    e_33556668.name = ename_33556669;
    if ((excHandler == 0)) {
    unhandledException(e_33556668);
    }
    
    throw e_33556668;

  
}

function addInt(a_33556941, b_33556942) {
        var result = a_33556941 + b_33556942;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557190, a_33557191, b_33557192) {
      var Temporary1;

  var result_33557193 = 0;

  BeforeRet: do {
      if (!(a_33557191 <= i_33557190)) Temporary1 = false; else {        Temporary1 = (i_33557190 <= b_33557192);      }    if (Temporary1) {
    result_33557193 = i_33557190;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557193;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557141, src_33557142, ti_33557143) {
  var result_33557152 = null;

    switch (ti_33557143.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557132(ti_33557143))) {
      result_33557152 = src_33557142;
      }
      else {
        result_33557152 = [src_33557142[0], src_33557142[1]];
      }
      
      break;
    case 19:
            if (dest_33557141 === null || dest_33557141 === undefined) {
        dest_33557141 = {};
      }
      else {
        for (var key in dest_33557141) { delete dest_33557141[key]; }
      }
      for (var key in src_33557142) { dest_33557141[key] = src_33557142[key]; }
      result_33557152 = dest_33557141;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557143.base == null))) {
      result_33557152 = nimCopy(dest_33557141, src_33557142, ti_33557143.base);
      }
      else {
      if ((ti_33557143.kind == 17)) {
      result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {m_type: ti_33557143} : dest_33557141;
      }
      else {
        result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {} : dest_33557141;
      }
      }
      nimCopyAux(result_33557152, src_33557142, ti_33557143.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557142 === null) {
        result_33557152 = null;
      }
      else {
        if (dest_33557141 === null || dest_33557141 === undefined || dest_33557141.length != src_33557142.length) {
          dest_33557141 = new Array(src_33557142.length);
        }
        result_33557152 = dest_33557141;
        for (var i = 0; i < src_33557142.length; ++i) {
          result_33557152[i] = nimCopy(result_33557152[i], src_33557142[i], ti_33557143.base);
        }
      }
    
      break;
    case 28:
            if (src_33557142 !== null) {
        result_33557152 = src_33557142.slice(0);
      }
    
      break;
    default: 
      result_33557152 = src_33557142;
      break;
    }

  return result_33557152;

}

function chckIndx(i_33557185, a_33557186, b_33557187) {
      var Temporary1;

  var result_33557188 = 0;

  BeforeRet: do {
      if (!(a_33557186 <= i_33557185)) Temporary1 = false; else {        Temporary1 = (i_33557185 <= b_33557187);      }    if (Temporary1) {
    result_33557188 = i_33557185;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557185, a_33557186, b_33557187);
    }
    
  } while (false);

  return result_33557188;

}

function divInt(a_33556953, b_33556954) {
        if (b_33556954 == 0) raiseDivByZero();
    if (b_33556954 == -1 && a_33556953 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556953 / b_33556954);
  

  
}

function mulInt(a_33556949, b_33556950) {
        var result = a_33556949 * b_33556950;
    checkOverflowInt(result);
    return result;
  

  
}

function subInt(a_33556945, b_33556946) {
        var result = a_33556945 - b_33556946;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33556957, b_33556958) {
        if (b_33556958 == 0) raiseDivByZero();
    if (b_33556958 == -1 && a_33556957 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556957 % b_33556958);
  

  
}

function eqStrings(a_33556932, b_33556933) {
        if (a_33556932 == b_33556933) return true;
    if (a_33556932 === null && b_33556933.length == 0) return true;
    if (b_33556933 === null && a_33556932.length == 0) return true;
    if ((!a_33556932) || (!b_33556933)) return false;
    var alen = a_33556932.length;
    if (alen != b_33556933.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556932[i] != b_33556933[i]) return false;
    return true;
  

  
}

function addChar(x_33557256, c_33557257) {
    x_33557256.push(c_33557257);

  
}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr(0, 125);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([65, 90]);

function nimMax(a_33556999, b_33557000) {
    var Temporary1;

  var result_33557001 = 0;

  BeforeRet: do {
    if ((b_33557000 <= a_33556999)) {
    Temporary1 = a_33556999;
    }
    else {
    Temporary1 = b_33557000;
    }
    
    result_33557001 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557001;

}

function nimMin(a_33556995, b_33556996) {
    var Temporary1;

  var result_33556997 = 0;

  BeforeRet: do {
    if ((a_33556995 <= b_33556996)) {
    Temporary1 = a_33556995;
    }
    else {
    Temporary1 = b_33556996;
    }
    
    result_33556997 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556997;

}
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet7 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet8 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet9 = setConstr(0, 1, 2);
var ConstSet10 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet11 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet12 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet13 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet14 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
    var xidocParser_1459620476 = {fn: fnHEX60gensym54_1459618173};
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(0);

function raiseFieldError2(f_33556779, discVal_33556780) {
    raiseException({message: (f_33556779 || []).concat(discVal_33556780 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556515) {
  var result_33556516 = [];

    if (x_33556515) {
    result_33556516 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556516 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556516;

}

function reprDiscriminant(e_33557410, typ_33557411) {
    var Temporary1;

  var result_33557412 = [];

    switch (typ_33557411.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557410, typ_33557411);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557410 == 0)));
      break;
    default: 
      Temporary1 = HEX24_335544323(e_33557410);
      break;
    }
    result_33557412 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557412;

}
var ConstSet17 = setConstr(2);
var ConstSet18 = setConstr(60, 62, 94);
var ConstSet19 = setConstr(60, 62, 94);
var ConstSet20 = setConstr(45, 43, 32);
var ConstSet21 = setConstr([48, 57]);
var ConstSet22 = setConstr([48, 57]);
var ConstSet23 = setConstr([48, 57]);
var ConstSet24 = setConstr([65, 90], [97, 122]);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet28 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet29 = setConstr(0);
var ConstSet30 = setConstr(2);
var ConstSet31 = setConstr(2);
var ConstSet32 = setConstr(2);
var ConstSet33 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet34 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet35 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet36 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet37 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet38 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet39 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet40 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet41 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet42 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
      var xidocArgumentParser_1459622439 = {fn: fnHEX60gensym314_1459620731};

function isObj(obj_33557239, subclass_33557240) {
  var result_33557241 = false;

  BeforeRet: do {
    var x_33557242 = obj_33557239;
    if ((x_33557242 == subclass_33557240)) {
    result_33557241 = true;
    break BeforeRet;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!!((x_33557242 == subclass_33557240))) break Label2;
          if ((x_33557242 == null)) {
          result_33557241 = false;
          break BeforeRet;
          }
          
          x_33557242 = x_33557242.base;
        }
    } while (false);
    result_33557241 = true;
    break BeforeRet;
  } while (false);

  return result_33557241;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: makeNimstrLit("no exception to reraise"), parent: null, m_type: NTI33555132, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556520()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet43 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet44 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet45 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet46 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet47 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet48 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet49 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet50 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet51 = setConstr(0);
var ConstSet52 = setConstr(1);
var ConstSet53 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet54 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet55 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet56 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet57 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet58 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet59 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet60 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet61 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet62 = setConstr(32, 9, 11, 13, 10, 12);
    var translations_1493172241 = [[makeNimstrLit("Definition"), makeNimstrLit("Definice")], [makeNimstrLit("Example"), makeNimstrLit("P\xC5\x99\xC3\xADklad")], [makeNimstrLit("Exercise"), makeNimstrLit("Cvi\xC4\x8Den\xC3\xAD")], [makeNimstrLit("Proof"), makeNimstrLit("D\xC5\xAFkaz")], [makeNimstrLit("Solution"), makeNimstrLit("\xC5\x98e\xC5\xA1en\xC3\xAD")], [makeNimstrLit("Theorem"), makeNimstrLit("V\xC4\x9Bta")]];
var ConstSet63 = setConstr(32, 9, 11, 13, 10, 12);
    var toLowerRanges_939525019 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_939525020 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
    var toUpperRanges_939525021 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_939525022 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var alphaRanges_939525024 = new Int32Array([65, 90, 97, 122, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 880, 884, 886, 887, 890, 893, 904, 906, 910, 929, 931, 1013, 1015, 1153, 1162, 1327, 1329, 1366, 1376, 1416, 1488, 1514, 1519, 1522, 1568, 1610, 1646, 1647, 1649, 1747, 1765, 1766, 1774, 1775, 1786, 1788, 1810, 1839, 1869, 1957, 1994, 2026, 2036, 2037, 2048, 2069, 2112, 2136, 2144, 2154, 2208, 2228, 2230, 2237, 2308, 2361, 2392, 2401, 2417, 2432, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2486, 2489, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2674, 2676, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2784, 2785, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2908, 2909, 2911, 2913, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3129, 3160, 3162, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3296, 3297, 3313, 3314, 3333, 3340, 3342, 3344, 3346, 3386, 3412, 3414, 3423, 3425, 3450, 3455, 3461, 3478, 3482, 3505, 3507, 3515, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3718, 3722, 3724, 3747, 3751, 3760, 3762, 3763, 3776, 3780, 3804, 3807, 3904, 3911, 3913, 3948, 3976, 3980, 4096, 4138, 4176, 4181, 4186, 4189, 4197, 4198, 4206, 4208, 4213, 4225, 4256, 4293, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024, 5109, 5112, 5117, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5873, 5880, 5888, 5900, 5902, 5905, 5920, 5937, 5952, 5969, 5984, 5996, 5998, 6000, 6016, 6067, 6176, 6264, 6272, 6276, 6279, 6312, 6320, 6389, 6400, 6430, 6480, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6656, 6678, 6688, 6740, 6917, 6963, 6981, 6987, 7043, 7072, 7086, 7087, 7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7296, 7304, 7312, 7354, 7357, 7359, 7401, 7404, 7406, 7411, 7413, 7414, 7424, 7615, 7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8031, 8061, 8064, 8116, 8118, 8124, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8336, 8348, 8458, 8467, 8473, 8477, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8579, 8580, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11502, 11506, 11507, 11520, 11557, 11568, 11623, 11648, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 12293, 12294, 12337, 12341, 12347, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12591, 12593, 12686, 12704, 12730, 12784, 12799, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42527, 42538, 42539, 42560, 42606, 42623, 42653, 42656, 42725, 42775, 42783, 42786, 42888, 42891, 42943, 42946, 42950, 42999, 43009, 43011, 43013, 43015, 43018, 43020, 43042, 43072, 43123, 43138, 43187, 43250, 43255, 43261, 43262, 43274, 43301, 43312, 43334, 43360, 43388, 43396, 43442, 43488, 43492, 43494, 43503, 43514, 43518, 43520, 43560, 43584, 43586, 43588, 43595, 43616, 43638, 43646, 43695, 43701, 43702, 43705, 43709, 43739, 43741, 43744, 43754, 43762, 43764, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43824, 43866, 43868, 43879, 43888, 44002, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64287, 64296, 64298, 64310, 64312, 64316, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 65536, 65547, 65549, 65574, 65576, 65594, 65596, 65597, 65599, 65613, 65616, 65629, 65664, 65786, 66176, 66204, 66208, 66256, 66304, 66335, 66349, 66368, 66370, 66377, 66384, 66421, 66432, 66461, 66464, 66499, 66504, 66511, 66560, 66717, 66736, 66771, 66776, 66811, 66816, 66855, 66864, 66915, 67072, 67382, 67392, 67413, 67424, 67431, 67584, 67589, 67594, 67637, 67639, 67640, 67647, 67669, 67680, 67702, 67712, 67742, 67808, 67826, 67828, 67829, 67840, 67861, 67872, 67897, 67968, 68023, 68030, 68031, 68112, 68115, 68117, 68119, 68121, 68149, 68192, 68220, 68224, 68252, 68288, 68295, 68297, 68324, 68352, 68405, 68416, 68437, 68448, 68466, 68480, 68497, 68608, 68680, 68736, 68786, 68800, 68850, 68864, 68899, 69376, 69404, 69424, 69445, 69600, 69622, 69635, 69687, 69763, 69807, 69840, 69864, 69891, 69926, 69968, 70002, 70019, 70066, 70081, 70084, 70144, 70161, 70163, 70187, 70272, 70278, 70282, 70285, 70287, 70301, 70303, 70312, 70320, 70366, 70405, 70412, 70415, 70416, 70419, 70440, 70442, 70448, 70450, 70451, 70453, 70457, 70493, 70497, 70656, 70708, 70727, 70730, 70784, 70831, 70852, 70853, 71040, 71086, 71128, 71131, 71168, 71215, 71296, 71338, 71424, 71450, 71680, 71723, 71840, 71903, 72096, 72103, 72106, 72144, 72203, 72242, 72284, 72329, 72384, 72440, 72704, 72712, 72714, 72750, 72818, 72847, 72960, 72966, 72968, 72969, 72971, 73008, 73056, 73061, 73063, 73064, 73066, 73097, 73440, 73458, 73728, 74649, 74880, 75075, 77824, 78894, 82944, 83526, 92160, 92728, 92736, 92766, 92880, 92909, 92928, 92975, 92992, 92995, 93027, 93047, 93053, 93071, 93760, 93823, 93952, 94026, 94099, 94111, 94176, 94177, 100352, 101106, 110592, 110878, 110928, 110930, 110948, 110951, 110960, 111355, 113664, 113770, 113776, 113788, 113792, 113800, 113808, 113817, 119808, 119892, 119894, 119964, 119966, 119967, 119973, 119974, 119977, 119980, 119982, 119993, 119997, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120138, 120144, 120146, 120485, 120488, 120512, 120514, 120538, 120540, 120570, 120572, 120596, 120598, 120628, 120630, 120654, 120656, 120686, 120688, 120712, 120714, 120744, 120746, 120770, 120772, 120779, 123136, 123180, 123191, 123197, 123584, 123627, 124928, 125124, 125184, 125251, 126464, 126467, 126469, 126495, 126497, 126498, 126505, 126514, 126516, 126519, 126541, 126543, 126545, 126546, 126561, 126562, 126567, 126570, 126572, 126578, 126580, 126583, 126585, 126588, 126592, 126601, 126603, 126619, 126625, 126627, 126629, 126633, 126635, 126651, 194560, 195101]);
    var alphaSinglets_939525025 = new Int32Array([170, 181, 186, 748, 750, 895, 902, 908, 1369, 1749, 1791, 1808, 1969, 2042, 2074, 2084, 2088, 2365, 2384, 2482, 2493, 2510, 2556, 2654, 2749, 2768, 2809, 2877, 2929, 2947, 2972, 3024, 3133, 3200, 3261, 3294, 3389, 3406, 3517, 3716, 3749, 3773, 3782, 3840, 4159, 4193, 4238, 4295, 4301, 4696, 4800, 6103, 6108, 6314, 6823, 7418, 8025, 8027, 8029, 8126, 8305, 8319, 8450, 8455, 8469, 8484, 8486, 8488, 8526, 11559, 11565, 11631, 11823, 13312, 19893, 19968, 40943, 43259, 43471, 43642, 43697, 43712, 43714, 44032, 55203, 64285, 64318, 67592, 67644, 68096, 69415, 69956, 70006, 70106, 70108, 70280, 70461, 70480, 70751, 70855, 71236, 71352, 71935, 72161, 72163, 72192, 72250, 72272, 72349, 72768, 73030, 73112, 94032, 94179, 94208, 100343, 119970, 119995, 120134, 123214, 125259, 126500, 126503, 126521, 126523, 126530, 126535, 126537, 126539, 126548, 126551, 126553, 126555, 126557, 126559, 126564, 126590, 131072, 173782, 173824, 177972, 177984, 178205, 178208, 183969, 183984, 191456]);
    var spaceRanges_939525026 = new Int32Array([9, 13, 32, 32, 133, 133, 160, 160, 5760, 5760, 8192, 8202, 8232, 8233, 8239, 8239, 8287, 8287, 12288, 12288]);
var ConstSet64 = setConstr(9, 10, 11);
var ConstSet65 = setConstr(9, 10, 11);
var ConstSet66 = setConstr(9, 10, 11);
var ConstSet67 = setConstr(9, 10, 11);
var ConstSet68 = setConstr(9, 10, 11);
var ConstSet69 = setConstr(9, 10, 11);
var ConstSet70 = setConstr(9, 10, 11);
var ConstSet71 = setConstr(9, 10, 11);
var ConstSet72 = setConstr(9, 10, 11);
var ConstSet73 = setConstr(9, 10, 11);
var ConstSet74 = setConstr(9, 10, 11);
var ConstSet75 = setConstr(9, 10, 11);
var ConstSet76 = setConstr(9, 10, 11);
var ConstSet77 = setConstr(9, 10, 11);
var ConstSet78 = setConstr(9, 10, 11);
var ConstSet79 = setConstr(9, 10, 11);
var ConstSet80 = setConstr(9, 10, 11);
var ConstSet81 = setConstr(9, 10, 11);
var ConstSet82 = setConstr(9, 10, 11);
var ConstSet83 = setConstr(9, 10, 11);
var ConstSet84 = setConstr(9, 10, 11);
var ConstSet85 = setConstr(9, 10, 11);
var ConstSet86 = setConstr(9, 10, 11);
var ConstSet87 = setConstr(9, 10, 11);
var ConstSet88 = setConstr(9, 10, 11);
var ConstSet89 = setConstr(9, 10, 11);
var ConstSet90 = setConstr(9, 10, 11);
var ConstSet91 = setConstr(9, 10, 11);
var ConstSet92 = setConstr(9, 10, 11);
var ConstSet93 = setConstr(9, 10, 11);
var ConstSet94 = setConstr(9, 10, 11);
var ConstSet95 = setConstr(9, 10, 11);
var ConstSet96 = setConstr(9, 10, 11);
var ConstSet97 = setConstr(9, 10, 11);
var ConstSet98 = setConstr(9, 10, 11);
var ConstSet99 = setConstr(9, 10, 11);
var ConstSet100 = setConstr(9, 10, 11);
var ConstSet101 = setConstr(9, 10, 11);
var ConstSet102 = setConstr(9, 10, 11);
var ConstSet103 = setConstr(9, 10, 11);
var ConstSet104 = setConstr(9, 10, 11);
var ConstSet105 = setConstr(9, 10, 11);
var ConstSet106 = setConstr(9, 10, 11);
var ConstSet107 = setConstr(9, 10, 11);
var ConstSet108 = setConstr(9, 10, 11);
var ConstSet109 = setConstr(9, 10, 11);
var ConstSet110 = setConstr(9, 10, 11);
var ConstSet111 = setConstr(9, 10, 11);
var ConstSet112 = setConstr(9, 10, 11);
var ConstSet113 = setConstr(9, 10, 11);
var ConstSet114 = setConstr(9, 10, 11);
var ConstSet115 = setConstr(9, 10, 11);
var ConstSet116 = setConstr(9, 10, 11);
var ConstSet117 = setConstr(9, 10, 11);
var ConstSet118 = setConstr(9, 10, 11);
var ConstSet119 = setConstr(9, 10, 11);
var ConstSet120 = setConstr(9, 10, 11);
var ConstSet121 = setConstr(9, 10, 11);
var ConstSet122 = setConstr(9, 10, 11);
var ConstSet123 = setConstr(9, 10, 11);
var ConstSet124 = setConstr(9, 10, 11);
var ConstSet125 = setConstr(9, 10, 11);
var ConstSet126 = setConstr(9, 10, 11);
var ConstSet127 = setConstr(9, 10, 11);
var ConstSet128 = setConstr(9, 10, 11);
var ConstSet129 = setConstr(9, 10, 11);
var ConstSet130 = setConstr(9, 10, 11);
var ConstSet131 = setConstr(9, 10, 11);
var ConstSet132 = setConstr(9, 10, 11);
var ConstSet133 = setConstr(9, 10, 11);
var ConstSet134 = setConstr(9, 10, 11);
var ConstSet135 = setConstr(9, 10, 11);
var ConstSet136 = setConstr(12, 18);
var ConstSet137 = setConstr(13, 19);
var ConstSet138 = setConstr(14);
var ConstSet139 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet140 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet141 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet142 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet143 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet144 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet145 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet146 = setConstr(12, 18);
var ConstSet147 = setConstr(13, 19);
var ConstSet148 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet149 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet150 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet151 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet152 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet153 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet154 = setConstr([25, 27]);
var ConstSet155 = setConstr();
var ConstSet156 = setConstr(13, 10, 0);
var ConstSet157 = setConstr();
var ConstSet158 = setConstr([48, 57]);
var ConstSet159 = setConstr([65, 90], [97, 122]);

function SetMinus(a_33556920, b_33556921) {
        var result = {};
    for (var elem in a_33556920) {
      if (!b_33556921[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet160 = setConstr([1, 255]);
var ConstSet161 = setConstr([65, 90], [97, 122]);
var ConstSet162 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet163 = setConstr([48, 57]);
var ConstSet164 = setConstr([48, 57]);

function negInt(a_33556983) {
  var result_33556984 = 0;

    result_33556984 = (a_33556983 * -1);

  return result_33556984;

}
var ConstSet165 = setConstr(39, 34);
var ConstSet166 = setConstr(94, [48, 57]);

function absInt(a_33556989) {
    var Temporary1;

  var result_33556990 = 0;

    if ((a_33556989 < 0)) {
    Temporary1 = (a_33556989 * -1);
    }
    else {
    Temporary1 = a_33556989;
    }
    
    result_33556990 = Temporary1;

  return result_33556990;

}
var ConstSet167 = setConstr(21, 17, 20, 18, 19);
var ConstSet168 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet169 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet170 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet171 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet172 = setConstr(9, 10, 11);
var ConstSet173 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet174 = setConstr(9, 10, 11);
var ConstSet175 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet176 = setConstr(9, 10, 11);
var ConstSet177 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet178 = setConstr(12, 18);
var ConstSet179 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet180 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet181 = setConstr(9, 32);
var ConstSet182 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet183 = setConstr(13, 19);
var ConstSet184 = setConstr(13, 19);
var ConstSet185 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet186 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet187 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);

function SetPlus(a_33556916, b_33556917) {
        var result = {};
    for (var elem in a_33556916) { result[elem] = true; }
    for (var elem in b_33556917) { result[elem] = true; }
    return result;
  

  
}
var ConstSet188 = setConstr(13, 19);
var ConstSet189 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet190 = setConstr(13, 19);
var ConstSet191 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet192 = setConstr(13, 19);
var ConstSet193 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet194 = setConstr(12, 18);
var ConstSet195 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
      var tokKindToStr_1275071630 = [makeNimstrLit("invalid"), makeNimstrLit("[EOF]"), makeNimstrLit("."), makeNimstrLit("_"), makeNimstrLit("identifier"), makeNimstrLit("string literal"), makeNimstrLit("character set"), makeNimstrLit("("), makeNimstrLit(")"), makeNimstrLit("{"), makeNimstrLit("}"), makeNimstrLit("{@}"), makeNimstrLit("{}"), makeNimstrLit("<-"), makeNimstrLit("/"), makeNimstrLit("*"), makeNimstrLit("+"), makeNimstrLit("&"), makeNimstrLit("!"), makeNimstrLit("?"), makeNimstrLit("@"), makeNimstrLit("built-in"), makeNimstrLit("escaped"), makeNimstrLit("$"), makeNimstrLit("$"), makeNimstrLit("^")];
var ConstSet196 = setConstr([48, 57]);
var ConstSet197 = setConstr([1, 47], [58, 255]);
var ConstSet198 = setConstr(32, [9, 13]);
var ConstSet199 = setConstr([1, 8], [14, 31], [33, 255]);
var ConstSet200 = setConstr([97, 122], [65, 90], 95, [48, 57]);
var ConstSet201 = setConstr([1, 47], [58, 64], [91, 94], 96, [123, 255]);
var ConstSet202 = setConstr([97, 122], [65, 90]);
var ConstSet203 = setConstr([1, 64], [91, 96], [123, 255]);
var ConstSet204 = setConstr([97, 122], [65, 90], 95);
var ConstSet205 = setConstr(12, 18);
var ConstSet206 = setConstr(13, 19);
var ConstSet207 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet208 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet209 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet210 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet211 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet212 = setConstr(47, 47);
var ConstSet213 = setConstr(47, 47);
var ConstSet214 = setConstr(47, 47);
var ConstSet215 = setConstr(47, 47);
var ConstSet216 = setConstr(47, 47);
var ConstSet217 = setConstr(47, 47);
var ConstSet218 = setConstr(47, 47);
var ConstSet219 = setConstr(47, 47);
var ConstSet220 = setConstr(47, 47);
var ConstSet221 = setConstr(47, 47);
var ConstSet222 = setConstr(47, 47);
var ConstSet223 = setConstr(47, 47);
var ConstSet224 = setConstr(47, 47);
var ConstSet225 = setConstr(47, 47);
    var FormatOpen_452985184 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet226 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet227 = setConstr([65, 90]);
var ConstSet228 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet229 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet230 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet231 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet232 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet233 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet234 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet235 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet236 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet237 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet238 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet239 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet240 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet241 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet242 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet243 = setConstr(32, 9, 11, 13, 10, 12);
              var htmlTags_1258291227 = [makeNimstrLit("!--"), makeNimstrLit("!DOCTYPE"), makeNimstrLit("a"), makeNimstrLit("abbr"), makeNimstrLit("acronym"), makeNimstrLit("address"), makeNimstrLit("applet"), makeNimstrLit("area"), makeNimstrLit("article"), makeNimstrLit("aside"), makeNimstrLit("audio"), makeNimstrLit("b"), makeNimstrLit("base"), makeNimstrLit("basefont"), makeNimstrLit("bdi"), makeNimstrLit("bdo"), makeNimstrLit("big"), makeNimstrLit("blockquote"), makeNimstrLit("body"), makeNimstrLit("br"), makeNimstrLit("button"), makeNimstrLit("canvas"), makeNimstrLit("caption"), makeNimstrLit("center"), makeNimstrLit("cite"), makeNimstrLit("code"), makeNimstrLit("col"), makeNimstrLit("colgroup"), makeNimstrLit("data"), makeNimstrLit("datalist"), makeNimstrLit("dd"), makeNimstrLit("del"), makeNimstrLit("details"), makeNimstrLit("dfn"), makeNimstrLit("dialog"), makeNimstrLit("dir"), makeNimstrLit("div"), makeNimstrLit("dl"), makeNimstrLit("dt"), makeNimstrLit("em"), makeNimstrLit("embed"), makeNimstrLit("fieldset"), makeNimstrLit("figcaption"), makeNimstrLit("figure"), makeNimstrLit("font"), makeNimstrLit("footer"), makeNimstrLit("form"), makeNimstrLit("frame"), makeNimstrLit("frameset"), makeNimstrLit("h1"), makeNimstrLit("h2"), makeNimstrLit("h3"), makeNimstrLit("h4"), makeNimstrLit("h5"), makeNimstrLit("h6"), makeNimstrLit("head"), makeNimstrLit("header"), makeNimstrLit("hr"), makeNimstrLit("html"), makeNimstrLit("i"), makeNimstrLit("iframe"), makeNimstrLit("img"), makeNimstrLit("input"), makeNimstrLit("ins"), makeNimstrLit("kbd"), makeNimstrLit("label"), makeNimstrLit("legend"), makeNimstrLit("li"), makeNimstrLit("link"), makeNimstrLit("main"), makeNimstrLit("map"), makeNimstrLit("mark"), makeNimstrLit("meta"), makeNimstrLit("meter"), makeNimstrLit("nav"), makeNimstrLit("noframes"), makeNimstrLit("noscript"), makeNimstrLit("object"), makeNimstrLit("ol"), makeNimstrLit("optgroup"), makeNimstrLit("option"), makeNimstrLit("output"), makeNimstrLit("p"), makeNimstrLit("param"), makeNimstrLit("picture"), makeNimstrLit("pre"), makeNimstrLit("progress"), makeNimstrLit("q"), makeNimstrLit("rp"), makeNimstrLit("rt"), makeNimstrLit("ruby"), makeNimstrLit("s"), makeNimstrLit("samp"), makeNimstrLit("script"), makeNimstrLit("section"), makeNimstrLit("select"), makeNimstrLit("small"), makeNimstrLit("source"), makeNimstrLit("span"), makeNimstrLit("strike"), makeNimstrLit("strong"), makeNimstrLit("style"), makeNimstrLit("sub"), makeNimstrLit("summary"), makeNimstrLit("sup"), makeNimstrLit("svg"), makeNimstrLit("table"), makeNimstrLit("tbody"), makeNimstrLit("td"), makeNimstrLit("template"), makeNimstrLit("textarea"), makeNimstrLit("tfoot"), makeNimstrLit("th"), makeNimstrLit("thead"), makeNimstrLit("time"), makeNimstrLit("title"), makeNimstrLit("tr"), makeNimstrLit("track"), makeNimstrLit("tt"), makeNimstrLit("u"), makeNimstrLit("ul"), makeNimstrLit("var"), makeNimstrLit("video"), makeNimstrLit("wbr")];
                    var htmlUnpairedTags_1258292683 = {data: [{Field0: 1180690720, Field1: makeNimstrLit("img")}, {Field0: 0, Field1: []}, {Field0: -1605015950, Field1: makeNimstrLit("input")}, {Field0: 0, Field1: []}, {Field0: 446026292, Field1: makeNimstrLit("link")}, {Field0: -1695041947, Field1: makeNimstrLit("meta")}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 0, Field1: []}, {Field0: 1754867886, Field1: makeNimstrLit("br")}, {Field0: 0, Field1: []}], counter: 5};
      var templates_486540815 = {data: [{Field0: 0, Field1: 0, Field2: []}, {Field0: 2006744169, Field1: 0, Field2: makeNimstrLit("<!DOCTYPE html><html><head><meta charset=\"utf8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">$1</head><body>$2</body></html>")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 975549885, Field1: 1, Field2: makeNimstrLit("\\documentclass{article}\\usepackage[utf8]{inputenc}\\usepackage{geometry}$1\\begin{document}$2\\end{document}")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}], counter: 2};
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_1124073634 = [0];

function initLock_1358954556(lock_1358954557) {
  
}
var gFunsLock_1342177294 = [({})];
var gFuns_1342177295 = [[]];
initLock_1358954556(gFunsLock_1342177294[0]);

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function newSeq_33556826(len_33556828) {
  var result_33556829 = [];

    result_33556829 = new Array(len_33556828); for (var i = 0 ; i < len_33556828 ; ++i) { result_33556829[i] = null; }
  return result_33556829;

}

function unhandledException(e_33556664) {
    var buf_33556665 = [[]];
    if (!(((e_33556664.message).length == 0))) {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556665[0].push.apply(buf_33556665[0], e_33556664.message);;
    }
    else {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556665, 0, e_33556664.name);
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556666 = toJSStr(buf_33556665[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556666);
  }
  else {
    throw cbuf_33556666;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556939) {
        if (a_33556939 > 2147483647 || a_33556939 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_486541997 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541997 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_486541997;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_486541997 = addInt(i_486541997, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function isFatPointer_33557132(ti_33557133) {
  var result_33557134 = false;

  BeforeRet: do {
    result_33557134 = !((ConstSet1[ti_33557133.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557134;

}

function nimCopyAux(dest_33557145, src_33557146, n_33557147) {
    switch (n_33557147.kind) {
    case 0:
      break;
    case 1:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557147.sons.length; i++) {
      nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i]);
    }
    
      break;
    case 3:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
      for (var i = 0; i < n_33557147.sons.length; ++i) {
        nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556755, a_33556756, b_33556757) {
    var Temporary1;

    if ((b_33556757 < a_33556756)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556755) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556756) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556757) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function nextPowerOfTwo_671088843(x_671088844) {
  var result_671088845 = 0;

    result_671088845 = (x_671088844 - 1);
    result_671088845 = (result_671088845 | (result_671088845 >> 16));
    result_671088845 = (result_671088845 | (result_671088845 >> 8));
    result_671088845 = (result_671088845 | (result_671088845 >> 4));
    result_671088845 = (result_671088845 | (result_671088845 >> 2));
    result_671088845 = (result_671088845 | (result_671088845 >> 1));
    result_671088845 += (1 + ((x_671088844 <= 0) ? 1 : 0));

  return result_671088845;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_1224736810(count_1224736811) {
  var result_1224736812 = 0;

    result_1224736812 = nextPowerOfTwo_671088843(addInt(divInt(mulInt(count_1224736811, 3), 2), 4));

  return result_1224736812;

}

function imul_1124073762(a_1124073763, b_1124073764) {
  var result_1124073765 = 0;

    var mask_1124073766 = 65535;
    var aHi_1124073771 = ((a_1124073763 >>> 16) & mask_1124073766);
    var aLo_1124073772 = (a_1124073763 & mask_1124073766);
    var bHi_1124073777 = ((b_1124073764 >>> 16) & mask_1124073766);
    var bLo_1124073778 = (b_1124073764 & mask_1124073766);
    result_1124073765 = ((((aLo_1124073772 * bLo_1124073778) >>> 0) + (((((aHi_1124073771 * bLo_1124073778) >>> 0) + ((aLo_1124073772 * bHi_1124073777) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1124073765;

}

function rotl32_1124073783(x_1124073784, r_1124073785) {
  var result_1124073786 = 0;

    result_1124073786 = ((x_1124073784 << r_1124073785) | (x_1124073784 >>> subInt(32, r_1124073785)));

  return result_1124073786;

}

function murmurHash_1124073795(x_1124073796) {
  var result_1124073797 = 0;

  BeforeRet: do {
    var size_1124073806 = (x_1124073796).length;
    var stepSize_1124073807 = 4;
    var n_1124073808 = divInt(size_1124073806, stepSize_1124073807);
    var h1_1124073809 = 0;
    var i_1124073810 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1124073810 < mulInt(n_1124073808, stepSize_1124073807))) break Label2;
          var k1_1124073811 = 0;
          var j_1124073812 = stepSize_1124073807;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_1124073812)) break Label4;
                j_1124073812 = subInt(j_1124073812, 1);
                k1_1124073811 = ((k1_1124073811 << 8) | x_1124073796[chckIndx(addInt(i_1124073810, j_1124073812), 0, (x_1124073796).length - 1)]);
              }
          } while (false);
          i_1124073810 = addInt(i_1124073810, stepSize_1124073807);
          k1_1124073811 = imul_1124073762(k1_1124073811, 3432918353);
          k1_1124073811 = rotl32_1124073783(k1_1124073811, 15);
          k1_1124073811 = imul_1124073762(k1_1124073811, 461845907);
          h1_1124073809 = (h1_1124073809 ^ k1_1124073811);
          h1_1124073809 = rotl32_1124073783(h1_1124073809, 13);
          h1_1124073809 = ((((h1_1124073809 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_1124073829 = 0;
    var rem_1124073830 = modInt(size_1124073806, stepSize_1124073807);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_1124073830)) break Label6;
          rem_1124073830 = subInt(rem_1124073830, 1);
          k1_1124073829 = ((k1_1124073829 << 8) | x_1124073796[chckIndx(addInt(i_1124073810, rem_1124073830), 0, (x_1124073796).length - 1)]);
        }
    } while (false);
    k1_1124073829 = imul_1124073762(k1_1124073829, 3432918353);
    k1_1124073829 = rotl32_1124073783(k1_1124073829, 15);
    k1_1124073829 = imul_1124073762(k1_1124073829, 461845907);
    h1_1124073809 = (h1_1124073809 ^ k1_1124073829);
    h1_1124073809 = (h1_1124073809 ^ size_1124073806);
    h1_1124073809 = (h1_1124073809 ^ (h1_1124073809 >>> 16));
    h1_1124073809 = imul_1124073762(h1_1124073809, 2246822507);
    h1_1124073809 = (h1_1124073809 ^ (h1_1124073809 >>> 13));
    h1_1124073809 = imul_1124073762(h1_1124073809, 3266489909);
    h1_1124073809 = (h1_1124073809 ^ (h1_1124073809 >>> 16));
    result_1124073797 = (h1_1124073809 | 0);
    break BeforeRet;
  } while (false);

  return result_1124073797;

}

function hash_1124073894(x_1124073895) {
  var result_1124073896 = 0;

    result_1124073896 = murmurHash_1124073795((x_1124073895.slice(0, (x_1124073895).length - 1 + 1)));

  return result_1124073896;

}

function isFilled_1224736799(hcode_1224736800) {
  var result_1224736801 = false;

    result_1224736801 = !((hcode_1224736800 == 0));

  return result_1224736801;

}

function nextTry_1224736802(h_1224736803, maxHash_1224736804) {
  var result_1224736805 = 0;

    result_1224736805 = (addInt(h_1224736803, 1) & maxHash_1224736804);

  return result_1224736805;

}

function rawGet_1442840689(t_1442840692, key_1442840693, hc_1442840694, hc_1442840694_Idx) {
            var Temporary3;

  var result_1442840695 = 0;

  BeforeRet: do {
    hc_1442840694[hc_1442840694_Idx] = hash_1124073894(key_1442840693);
    if ((hc_1442840694[hc_1442840694_Idx] == 0)) {
    hc_1442840694[hc_1442840694_Idx] = 314159265;
    }
    
    if (((t_1442840692.data).length == 0)) {
    result_1442840695 = -1;
    break BeforeRet;
    }
    
    var h_1442840707 = (hc_1442840694[hc_1442840694_Idx] & (t_1442840692.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1224736799(t_1442840692.data[chckIndx(h_1442840707, 0, (t_1442840692.data).length - 1)].Field0)) break Label2;
            if (!(t_1442840692.data[chckIndx(h_1442840707, 0, (t_1442840692.data).length - 1)].Field0 == hc_1442840694[hc_1442840694_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1442840692.data[chckIndx(h_1442840707, 0, (t_1442840692.data).length - 1)].Field1, key_1442840693);            }          if (Temporary3) {
          result_1442840695 = h_1442840707;
          break BeforeRet;
          }
          
          h_1442840707 = nextTry_1224736802(h_1442840707, (t_1442840692.data).length - 1);
        }
    } while (false);
    result_1442840695 = subInt(-1, h_1442840707);
  } while (false);

  return result_1442840695;

}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function mustRehash_1258293749(t_1258293751) {
  var result_1258293752 = false;

    if (!((t_1258293751.counter < (t_1258293751.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1258293752 = ((mulInt((t_1258293751.data).length, 2) < mulInt(t_1258293751.counter, 3)) || (subInt((t_1258293751.data).length, t_1258293751.counter) < 4));

  return result_1258293752;

}

function rawInsert_1258294258(t_1258294262, data_1258294263, data_1258294263_Idx, key_1258294264, val_1258294265, hc_1258294266, h_1258294267) {
    data_1258294263[data_1258294263_Idx][chckIndx(h_1258294267, 0, (data_1258294263[data_1258294263_Idx]).length - 1)].Field1 = nimCopy(null, key_1258294264, NTI33554439);
    data_1258294263[data_1258294263_Idx][chckIndx(h_1258294267, 0, (data_1258294263[data_1258294263_Idx]).length - 1)].Field2 = val_1258294265;
    data_1258294263[data_1258294263_Idx][chckIndx(h_1258294267, 0, (data_1258294263[data_1258294263_Idx]).length - 1)].Field0 = hc_1258294266;

  
}

function enlarge_1258293937(t_1258293940) {
    var n_1258293943 = [];
    n_1258293943 = new Array(chckRange(mulInt((t_1258293940.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1258293940.data).length, 2), 0, 2147483647) ; ++i) { n_1258293943[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1258293940.data; t_1258293940.data = n_1258293943; n_1258293943 = Temporary1;    Label2: do {
      var i_1258294018 = 0;
      var colontmp__486542077 = 0;
      colontmp__486542077 = (n_1258293943).length - 1;
      var res_486542078 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_486542078 <= colontmp__486542077)) break Label4;
            i_1258294018 = res_486542078;
            var eh_1258294076 = n_1258293943[chckIndx(i_1258294018, 0, (n_1258293943).length - 1)].Field0;
            if (isFilled_1224736799(eh_1258294076)) {
            var j_1258294080 = (eh_1258294076 & (t_1258293940.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_1224736799(t_1258293940.data[chckIndx(j_1258294080, 0, (t_1258293940.data).length - 1)].Field0)) break Label6;
                  j_1258294080 = nextTry_1224736802(j_1258294080, (t_1258293940.data).length - 1);
                }
            } while (false);
            rawInsert_1258294258(t_1258293940, t_1258293940, "data", n_1258293943[chckIndx(i_1258294018, 0, (n_1258293943).length - 1)].Field1, n_1258293943[chckIndx(i_1258294018, 0, (n_1258293943).length - 1)].Field2, eh_1258294076, j_1258294080);
            }
            
            res_486542078 = addInt(res_486542078, 1);
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_1258294440(t_1258294443, key_1258294444, hc_1258294445) {
  var result_1258294446 = 0;

  BeforeRet: do {
    if (((t_1258294443.data).length == 0)) {
    result_1258294446 = -1;
    break BeforeRet;
    }
    
    var h_1258294508 = (hc_1258294445 & (t_1258294443.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1224736799(t_1258294443.data[chckIndx(h_1258294508, 0, (t_1258294443.data).length - 1)].Field0)) break Label2;
          if (((t_1258294443.data[chckIndx(h_1258294508, 0, (t_1258294443.data).length - 1)].Field0 == hc_1258294445) && eqStrings(t_1258294443.data[chckIndx(h_1258294508, 0, (t_1258294443.data).length - 1)].Field1, key_1258294444))) {
          result_1258294446 = h_1258294508;
          break BeforeRet;
          }
          
          h_1258294508 = nextTry_1224736802(h_1258294508, (t_1258294443.data).length - 1);
        }
    } while (false);
    result_1258294446 = subInt(-1, h_1258294508);
  } while (false);

  return result_1258294446;

}

function HEX5BHEX5DHEX3D_1258293550(t_1258293553, key_1258293554, val_1258293555) {
    if (((t_1258293553.data).length == 0)) {
    var correctSizeHEX60gensym39_1258293615 = slotsNeeded_1224736810(32);
    t_1258293553.counter = 0;
    t_1258293553.data = new Array(chckRange(correctSizeHEX60gensym39_1258293615, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1258293615, 0, 2147483647) ; ++i) { t_1258293553.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1258293620 = [0];
    var index_1258293627 = rawGet_1442840689(t_1258293553, key_1258293554, hc_1258293620, 0);
    if ((0 <= index_1258293627)) {
    t_1258293553.data[chckIndx(index_1258293627, 0, (t_1258293553.data).length - 1)].Field2 = val_1258293555;
    }
    else {
      if (((t_1258293553.data).length == 0)) {
      var correctSizeHEX60gensym42_1258293744 = slotsNeeded_1224736810(32);
      t_1258293553.counter = 0;
      t_1258293553.data = new Array(chckRange(correctSizeHEX60gensym42_1258293744, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_1258293744, 0, 2147483647) ; ++i) { t_1258293553.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1258293749(t_1258293553)) {
      enlarge_1258293937(t_1258293553);
      index_1258293627 = rawGetKnownHC_1258294440(t_1258293553, key_1258293554, hc_1258293620[0]);
      }
      
      index_1258293627 = subInt(-1, index_1258293627);
      rawInsert_1258294258(t_1258293553, t_1258293553, "data", key_1258293554, val_1258293555, hc_1258293620[0], index_1258293627);
      t_1258293553.counter = addInt(t_1258293553.counter, 1);
    }
    

  
}

function invalidFormatString_637536333() {
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_973078529(c_973078530) {
  var result_973078531 = 0;

    if ((ConstSet5[c_973078530] != undefined)) {
    result_973078531 = chckRange(addInt(c_973078530, 32), 0, 255);
    }
    else {
      result_973078531 = c_973078530;
    }
    

  return result_973078531;

}

function nsuCmpIgnoreStyle(a_637534398, b_637534399) {
          var Temporary7;
          var Temporary8;

  var result_637534400 = 0;

  BeforeRet: do {
    var aLenHEX60gensym25_637534409 = (a_637534398).length;
    var bLenHEX60gensym25_637534410 = (b_637534399).length;
    var iHEX60gensym25_637534411 = 0;
    var jHEX60gensym25_637534412 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: do {
              Label4: while (true) {
              if (!((iHEX60gensym25_637534411 < aLenHEX60gensym25_637534409) && (a_637534398[iHEX60gensym25_637534411] == 95))) break Label4;
                iHEX60gensym25_637534411 += 1;
              }
          } while (false);
          Label5: do {
              Label6: while (true) {
              if (!((jHEX60gensym25_637534412 < bLenHEX60gensym25_637534410) && (b_637534399[jHEX60gensym25_637534412] == 95))) break Label6;
                jHEX60gensym25_637534412 += 1;
              }
          } while (false);
          if ((iHEX60gensym25_637534411 < aLenHEX60gensym25_637534409)) {
          Temporary7 = toLowerAscii_973078529(a_637534398[iHEX60gensym25_637534411]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym25_637534421 = Temporary7;
          if ((jHEX60gensym25_637534412 < bLenHEX60gensym25_637534410)) {
          Temporary8 = toLowerAscii_973078529(b_637534399[jHEX60gensym25_637534412]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym25_637534422 = Temporary8;
          result_637534400 = (aaHEX60gensym25_637534421 - bbHEX60gensym25_637534422);
          if (!((result_637534400 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym25_637534409 <= iHEX60gensym25_637534411)) {
          if ((bLenHEX60gensym25_637534410 <= jHEX60gensym25_637534412)) {
          result_637534400 = 0;
          break BeforeRet;
          }
          
          result_637534400 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym25_637534410 <= jHEX60gensym25_637534412)) {
          result_637534400 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym25_637534411 += 1;
          jHEX60gensym25_637534412 += 1;
        }
    } while (false);
  } while (false);

  return result_637534400;

}

function findNormalized_637536321(x_637536322, inArray_637536323) {
  var result_637536324 = 0;

  BeforeRet: do {
    var i_637536325 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_637536325 < (inArray_637536323).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_637536322, inArray_637536323[chckIndx(i_637536325, 0, (inArray_637536323).length - 1)]) == 0)) {
          result_637536324 = i_637536325;
          break BeforeRet;
          }
          
          i_637536325 = addInt(i_637536325, 2);
        }
    } while (false);
    result_637536324 = -1;
    break BeforeRet;
  } while (false);

  return result_637536324;

}

function substr_33557907(s_33557908, first_33557909, last_33557910) {
  var result_33557911 = [];

    var first_33557912 = nimMax(first_33557909, 0);
    var L_33557913 = nimMax(addInt(subInt(nimMin(last_33557910, (s_33557908).length - 1), first_33557912), 1), 0);
    result_33557911 = nimCopy(null, mnewString(chckRange(L_33557913, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_33557918 = 0;
      var colontmp__1459617869 = 0;
      colontmp__1459617869 = subInt(L_33557913, 1);
      var res_1459617870 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1459617870 <= colontmp__1459617869)) break Label3;
            i_33557918 = res_1459617870;
            result_33557911[chckIndx(i_33557918, 0, (result_33557911).length - 1)] = s_33557908[chckIndx(addInt(i_33557918, first_33557912), 0, (s_33557908).length - 1)];
            res_1459617870 = addInt(res_1459617870, 1);
          }
      } while (false);
    } while (false);

  return result_33557911;

}

function nsuAddf(s_637536336, s_637536336_Idx, formatstr_637536337, a_637536338) {
                  var Temporary5;
            var Temporary6;
              var Temporary7;
            var Temporary10;
              var Temporary11;
                var Temporary12;
                  var Temporary15;
              var Temporary16;

    var i_637536340 = 0;
    var num_637536341 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_637536340 < (formatstr_637536337).length)) break Label2;
          if (((formatstr_637536337[chckIndx(i_637536340, 0, (formatstr_637536337).length - 1)] == 36) && (addInt(i_637536340, 1) < (formatstr_637536337).length))) {
          switch (formatstr_637536337[chckIndx(addInt(i_637536340, 1), 0, (formatstr_637536337).length - 1)]) {
          case 35:
            if (((a_637536338).length - 1 < num_637536341)) {
            invalidFormatString_637536333();
            }
            
            s_637536336[s_637536336_Idx].push.apply(s_637536336[s_637536336_Idx], a_637536338[chckIndx(num_637536341, 0, (a_637536338).length - 1)]);;
            i_637536340 = addInt(i_637536340, 2);
            num_637536341 = addInt(num_637536341, 1);
            break;
          case 36:
            addChar(s_637536336[s_637536336_Idx], 36);;
            i_637536340 = addInt(i_637536340, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_637536357 = 0;
            i_637536340 = addInt(i_637536340, 1);
            var negative_637536362 = (formatstr_637536337[chckIndx(i_637536340, 0, (formatstr_637536337).length - 1)] == 45);
            if (negative_637536362) {
            i_637536340 = addInt(i_637536340, 1);
            }
            
            Label3: do {
                Label4: while (true) {
                  if (!(i_637536340 < (formatstr_637536337).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet2[formatstr_637536337[chckIndx(i_637536340, 0, (formatstr_637536337).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_637536357 = subInt(addInt(mulInt(j_637536357, 10), formatstr_637536337[chckIndx(i_637536340, 0, (formatstr_637536337).length - 1)]), 48);
                  i_637536340 = addInt(i_637536340, 1);
                }
            } while (false);
            if (!(negative_637536362)) {
            Temporary6 = subInt(j_637536357, 1);
            }
            else {
            Temporary6 = subInt((a_637536338).length, j_637536357);
            }
            
            var idx_637536385 = Temporary6;
              if ((idx_637536385 < 0)) Temporary7 = true; else {                Temporary7 = ((a_637536338).length - 1 < idx_637536385);              }            if (Temporary7) {
            invalidFormatString_637536333();
            }
            
            s_637536336[s_637536336_Idx].push.apply(s_637536336[s_637536336_Idx], a_637536338[chckIndx(idx_637536385, 0, (a_637536338).length - 1)]);;
            break;
          case 123:
            var j_637536389 = addInt(i_637536340, 2);
            var k_637536390 = 0;
            var negative_637536391 = (formatstr_637536337[chckIndx(j_637536389, 0, (formatstr_637536337).length - 1)] == 45);
            if (negative_637536391) {
            j_637536389 = addInt(j_637536389, 1);
            }
            
            var isNumber_637536396 = 0;
            Label8: do {
                Label9: while (true) {
                if (!((j_637536389 < (formatstr_637536337).length) && !((ConstSet3[formatstr_637536337[chckIndx(j_637536389, 0, (formatstr_637536337).length - 1)]] != undefined)))) break Label9;
                  if ((ConstSet4[formatstr_637536337[chckIndx(j_637536389, 0, (formatstr_637536337).length - 1)]] != undefined)) {
                  k_637536390 = subInt(addInt(mulInt(k_637536390, 10), formatstr_637536337[chckIndx(j_637536389, 0, (formatstr_637536337).length - 1)]), 48);
                  if ((isNumber_637536396 == 0)) {
                  isNumber_637536396 = 1;
                  }
                  
                  }
                  else {
                    isNumber_637536396 = -1;
                  }
                  
                  j_637536389 = addInt(j_637536389, 1);
                }
            } while (false);
            if ((isNumber_637536396 == 1)) {
            if (!(negative_637536391)) {
            Temporary10 = subInt(k_637536390, 1);
            }
            else {
            Temporary10 = subInt((a_637536338).length, k_637536390);
            }
            
            var idx_637536418 = Temporary10;
              if ((idx_637536418 < 0)) Temporary11 = true; else {                Temporary11 = ((a_637536338).length - 1 < idx_637536418);              }            if (Temporary11) {
            invalidFormatString_637536333();
            }
            
            s_637536336[s_637536336_Idx].push.apply(s_637536336[s_637536336_Idx], a_637536338[chckIndx(idx_637536418, 0, (a_637536338).length - 1)]);;
            }
            else {
              var x_637536422 = findNormalized_637536321(substr_33557907(formatstr_637536337, addInt(i_637536340, 2), subInt(j_637536389, 1)), a_637536338);
                if (!(0 <= x_637536422)) Temporary12 = false; else {                  Temporary12 = (x_637536422 < (a_637536338).length - 1);                }              if (Temporary12) {
              s_637536336[s_637536336_Idx].push.apply(s_637536336[s_637536336_Idx], a_637536338[chckIndx(addInt(x_637536422, 1), 0, (a_637536338).length - 1)]);;
              }
              else {
              invalidFormatString_637536333();
              }
              
            }
            
            i_637536340 = addInt(j_637536389, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_637536426 = addInt(i_637536340, 1);
            Label13: do {
                Label14: while (true) {
                  if (!(j_637536426 < (formatstr_637536337).length)) Temporary15 = false; else {                    Temporary15 = (ConstSet6[formatstr_637536337[chckIndx(j_637536426, 0, (formatstr_637536337).length - 1)]] != undefined);                  }                if (!Temporary15) break Label14;
                  j_637536426 = addInt(j_637536426, 1);
                }
            } while (false);
            var x_637536435 = findNormalized_637536321(substr_33557907(formatstr_637536337, addInt(i_637536340, 1), subInt(j_637536426, 1)), a_637536338);
              if (!(0 <= x_637536435)) Temporary16 = false; else {                Temporary16 = (x_637536435 < (a_637536338).length - 1);              }            if (Temporary16) {
            s_637536336[s_637536336_Idx].push.apply(s_637536336[s_637536336_Idx], a_637536338[chckIndx(addInt(x_637536435, 1), 0, (a_637536338).length - 1)]);;
            }
            else {
            invalidFormatString_637536333();
            }
            
            i_637536340 = j_637536426;
            break;
          default: 
            invalidFormatString_637536333();
            break;
          }
          }
          else {
            addChar(s_637536336[s_637536336_Idx], formatstr_637536337[chckIndx(i_637536340, 0, (formatstr_637536337).length - 1)]);;
            i_637536340 = addInt(i_637536340, 1);
          }
          
        }
    } while (false);

  
}

function nsuFormatOpenArray(formatstr_637536444, a_637536445) {
  var result_637536446 = [[]];

    result_637536446[0] = nimCopy(null, mnewString(0), NTI33554439);
    nsuAddf(result_637536446, 0, formatstr_637536444, a_637536445);

  return result_637536446[0];

}

function initStack_1593835581(name_1593835583, len_1593835584, max_1593835585) {
  var result_1593835590 = ({name: [], top: 0, max: 0, frames: []});

    result_1593835590.name = nimCopy(null, name_1593835583, NTI33554439);
    if (result_1593835590.frames.length < chckRange(len_1593835584, 0, 2147483647)) { for (var i = result_1593835590.frames.length ; i < chckRange(len_1593835584, 0, 2147483647) ; ++i) result_1593835590.frames.push(0); }
               else { result_1593835590.frames.length = chckRange(len_1593835584, 0, 2147483647); };
    result_1593835590.max = max_1593835585;

  return result_1593835590;

}

function initStack_1459620517(name_1459620519, len_1459620520, max_1459620521) {
  var result_1459620522 = ({name: [], top: 0, max: 0, frames: []});

    result_1459620522.name = nimCopy(null, name_1459620519, NTI33554439);
    if (result_1459620522.frames.length < chckRange(len_1459620520, 0, 2147483647)) { for (var i = result_1459620522.frames.length ; i < chckRange(len_1459620520, 0, 2147483647) ; ++i) result_1459620522.frames.push(({cft: 0, name: [], si: 0, ck: 0, sPushed: []})); }
               else { result_1459620522.frames.length = chckRange(len_1459620520, 0, 2147483647); };
    result_1459620522.max = max_1459620521;

  return result_1459620522;

}

function initStack_1459620527(name_1459620529, len_1459620530, max_1459620531) {
  var result_1459620532 = ({name: [], top: 0, max: 0, frames: []});

    result_1459620532.name = nimCopy(null, name_1459620529, NTI33554439);
    if (result_1459620532.frames.length < chckRange(len_1459620530, 0, 2147483647)) { for (var i = result_1459620532.frames.length ; i < chckRange(len_1459620530, 0, 2147483647) ; ++i) result_1459620532.frames.push(({ip: 0, si: 0, rp: 0, cp: 0, pp: 0})); }
               else { result_1459620532.frames.length = chckRange(len_1459620530, 0, 2147483647); };
    result_1459620532.max = max_1459620531;

  return result_1459620532;

}

function grow_1593835610(s_1593835612) {
    var Temporary1;

    if ((s_1593835612.max <= s_1593835612.top)) {
    raiseException({message: (s_1593835612.name || []).concat(makeNimstrLit(" stack overflow, depth>") || [],HEX24_335544323(s_1593835612.max) || []), parent: null, m_type: NTI1543503913, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegException");
    }
    
    if (s_1593835612.frames.length < (Temporary1 = chckRange(mulInt((s_1593835612.frames).length, 2), 0, 2147483647), Temporary1)) { for (var i = s_1593835612.frames.length ; i < Temporary1 ; ++i) s_1593835612.frames.push(0); }
               else { s_1593835612.frames.length = Temporary1; };

  
}

function initMatchState_1459620507() {
  var result_1459620509 = ({ip: 0, si: 0, simax: 0, refs: ({data: [], counter: 0}), retStack: ({name: [], top: 0, max: 0, frames: []}), capStack: ({name: [], top: 0, max: 0, frames: []}), backStack: ({name: [], top: 0, max: 0, frames: []}), precStack: ({name: [], top: 0, max: 0, frames: []})});

    result_1459620509 = nimCopy(result_1459620509, {retStack: initStack_1593835581(makeNimstrLit("return"), 8, 1024), capStack: initStack_1459620517(makeNimstrLit("capture"), 8, 2147483647), backStack: initStack_1459620527(makeNimstrLit("backtrace"), 8, 1024), precStack: initStack_1593835581(makeNimstrLit("precedence"), 8, 16), ip: 0, si: 0, simax: 0, refs: ({data: [], counter: 0})}, NTI1459618060);
    if (((result_1459620509.precStack.frames).length <= result_1459620509.precStack.top)) {
    grow_1593835610(result_1459620509.precStack);
    }
    
    result_1459620509.precStack.frames[chckIndx(result_1459620509.precStack.top, 0, (result_1459620509.precStack.frames).length - 1)] = 0;
    result_1459620509.precStack.top = addInt(result_1459620509.precStack.top, 1);

  return result_1459620509;

}

function match_1459620499(p_1459620503, s_1459620504, userData_1459620505, userData_1459620505_Idx) {
  var result_1459620506 = ({ok: false, matchLen: 0, matchMax: 0, cs: ({capList: []})});

    var ms_1459620584 = [initMatchState_1459620507()];
    result_1459620506 = nimCopy(result_1459620506, p_1459620503.fn(ms_1459620584[0], s_1459620504, userData_1459620505, userData_1459620505_Idx), NTI1526726727);

  return result_1459620506;

}

function grow_1459618224(s_1459618226) {
    var Temporary1;

    if ((s_1459618226.max <= s_1459618226.top)) {
    raiseException({message: (s_1459618226.name || []).concat(makeNimstrLit(" stack overflow, depth>") || [],HEX24_335544323(s_1459618226.max) || []), parent: null, m_type: NTI1543503913, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegException");
    }
    
    if (s_1459618226.frames.length < (Temporary1 = chckRange(mulInt((s_1459618226.frames).length, 2), 0, 2147483647), Temporary1)) { for (var i = s_1459618226.frames.length ; i < Temporary1 ; ++i) s_1459618226.frames.push(({ip: 0, si: 0, rp: 0, cp: 0, pp: 0})); }
               else { s_1459618226.frames.length = Temporary1; };

  
}

function grow_1459618460(s_1459618462) {
    var Temporary1;

    if ((s_1459618462.max <= s_1459618462.top)) {
    raiseException({message: (s_1459618462.name || []).concat(makeNimstrLit(" stack overflow, depth>") || [],HEX24_335544323(s_1459618462.max) || []), parent: null, m_type: NTI1543503913, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegException");
    }
    
    if (s_1459618462.frames.length < (Temporary1 = chckRange(mulInt((s_1459618462.frames).length, 2), 0, 2147483647), Temporary1)) { for (var i = s_1459618462.frames.length ; i < Temporary1 ; ++i) s_1459618462.frames.push(({cft: 0, name: [], si: 0, ck: 0, sPushed: []})); }
               else { s_1459618462.frames.length = Temporary1; };

  
}

function newSeq_1526726837(len_1526726839) {
  var result_1526726840 = [];

    result_1526726840 = new Array(len_1526726839); for (var i = 0 ; i < len_1526726839 ; ++i) { result_1526726840[i] = null; }
  return result_1526726840;

}

function collectCaptures_1526726831(caps_1526726833) {
  var result_1526726834 = ({capList: []});

    var resultHEX60gensym1_1526726863 = newSeq_1526726837(0);
    Label1: do {
      var it_1526726885 = null;
      var it_1526726885_Idx = 0;
      var i_486542101 = 0;
      var L_486542102 = (caps_1526726833.capList).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542101 < L_486542102)) break Label3;
            it_1526726885 = caps_1526726833.capList; it_1526726885_Idx = chckIndx(i_486542101, 0, (caps_1526726833.capList).length - 1);
            if ((ConstSet9[it_1526726885[it_1526726885_Idx].ck] != undefined)) {
            resultHEX60gensym1_1526726863.push(it_1526726885[it_1526726885_Idx]);;
            }
            
            i_486542101 = addInt(i_486542101, 1);
            if (!(((caps_1526726833.capList).length == L_486542102))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_1526726834 = nimCopy(result_1526726834, {capList: nimCopy(null, resultHEX60gensym1_1526726863, NTI1526726758)}, NTI1526726730);

  return result_1526726834;

}

function findTop_1459618825(capStack_1459618831, fm_1459618832) {
  var result_1459618833 = 0;

    if ((fm_1459618832 == 1)) {
    var i_1459618839 = subInt(capStack_1459618831.top, 1);
    var depth_1459618840 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
            if (!((i_1459618839 < capStack_1459618831.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(45, 10) `i < capStack.top` "));
            }
            
          if ((capStack_1459618831.frames[chckIndx(i_1459618839, 0, (capStack_1459618831.frames).length - 1)].cft == 1)) {
          depth_1459618840 = addInt(depth_1459618840, 1);
          }
          else {
          depth_1459618840 = subInt(depth_1459618840, 1);
          }
          
          if ((depth_1459618840 == 0)) {
          break Label1;
          }
          
          i_1459618839 = subInt(i_1459618839, 1);
        }
    } while (false);
    result_1459618833 = i_1459618839;
    }
    

  return result_1459618833;

}

function HEX5BHEX5D_1459619169(cs_1459619171, i_1459619172) {
  var result_1459619173 = null;

    if (((cs_1459619171.capList).length <= i_1459619172)) {
    var msg_1459619180 = (makeNimstrLit("Capture out of range, ") || []).concat(HEX24_335544323(i_1459619172) || [],makeNimstrLit(" is not in [0..") || [],HEX24_335544323((cs_1459619171.capList).length - 1) || [],makeNimstrLit("]") || []);
    raiseException({message: nimCopy(null, msg_1459619180, NTI33554439), parent: null, m_type: NTI1543503913, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegException");
    }
    
    result_1459619173 = cs_1459619171.capList[chckIndx(i_1459619172, 0, (cs_1459619171.capList).length - 1)];

  return result_1459619173;

}

function slice_1543506816(s_1543506817, iFrom_1543506818, iTo_1543506819) {
  var result_1543506820 = [];

    var len_1543506821 = subInt(iTo_1543506819, iFrom_1543506818);
    (result_1543506820.length = chckRange(len_1543506821, 0, 2147483647));
    Label1: do {
      var i_1543506826 = 0;
      var i_486542109 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542109 < len_1543506821)) break Label3;
            i_1543506826 = i_486542109;
            result_1543506820[chckIndx(i_1543506826, 0, (result_1543506820).length - 1)] = s_1543506817[chckIndx(addInt(i_1543506826, iFrom_1543506818), 0, (s_1543506817).length - 1)];
            i_486542109 = addInt(i_486542109, 1);
          }
      } while (false);
    } while (false);

  return result_1543506820;

}

function fixCaptures_1459618778(s_1459618780, capStack_1459618785, fm_1459618786) {
              var Temporary4;

  var result_1459618787 = ({capList: []});

    if (!((0 < capStack_1459618785.top))) {
    failedAssertImpl_218103864(makeNimstrLit("capture.nim(41, 10) `\x0A0 < capStack.top` "));
    }
    
      if (!((0 < capStack_1459618785.top))) {
      failedAssertImpl_218103864(makeNimstrLit("stack.nim(41, 10) `capStack.top > 0` "));
      }
      
    if (!((capStack_1459618785.frames[chckIndx(subInt(capStack_1459618785.top, 1), 0, (capStack_1459618785.frames).length - 1)].cft == 1))) {
    failedAssertImpl_218103864(makeNimstrLit("capture.nim(42, 10) `capStack.peek.cft == cftClose` "));
    }
    
    var stack_1459618814 = [initStack_1593835581(makeNimstrLit("captures"), 8, 2147483647)];
    var iFrom_1459618948 = findTop_1459618825(capStack_1459618785, fm_1459618786);
    Label1: do {
      var i_1459618953 = 0;
      var i_486542105 = iFrom_1459618948;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542105 < capStack_1459618785.top)) break Label3;
            i_1459618953 = i_486542105;
            if (!((i_1459618953 < capStack_1459618785.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(45, 10) `i < capStack.top` "));
            }
            
            var c_1459619045 = nimCopy(null, capStack_1459618785.frames[chckIndx(i_1459618953, 0, (capStack_1459618785.frames).length - 1)], NTI1459618069);
            if ((c_1459619045.cft == 0)) {
            if (((stack_1459618814[0].frames).length <= stack_1459618814[0].top)) {
            grow_1593835610(stack_1459618814[0]);
            }
            
            stack_1459618814[0].frames[chckIndx(stack_1459618814[0].top, 0, (stack_1459618814[0].frames).length - 1)] = (result_1459618787.capList).length;
            stack_1459618814[0].top = addInt(stack_1459618814[0].top, 1);
            result_1459618787.capList.push({ck: c_1459619045.ck, si: c_1459619045.si, name: nimCopy(null, c_1459619045.name, NTI33554439), len: 0, s: []});;
            }
            else {
              if (!((0 < stack_1459618814[0].top))) {
              failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `stack.top > 0` "));
              }
              
              stack_1459618814[0].top = subInt(stack_1459618814[0].top, 1);
              var i2_1459619083 = stack_1459618814[0].frames[chckIndx(stack_1459618814[0].top, 0, (stack_1459618814[0].frames).length - 1)];
              if (!((HEX5BHEX5D_1459619169(result_1459618787, i2_1459619083).ck == c_1459619045.ck))) {
              failedAssertImpl_218103864(makeNimstrLit("capture.nim(57, 14) `result[i2].ck == c.ck` "));
              }
              
              if ((c_1459619045.ck == 1)) {
              Temporary4 = c_1459619045.sPushed;
              }
              else {
              Temporary4 = slice_1543506816(s_1459618780, HEX5BHEX5D_1459619169(result_1459618787, i2_1459619083).si, c_1459619045.si);
              }
              
              HEX5BHEX5D_1459619169(result_1459618787, i2_1459619083).s = nimCopy(null, Temporary4, NTI33554439);
              HEX5BHEX5D_1459619169(result_1459618787, i2_1459619083).len = subInt(subInt((result_1459618787.capList).length, i2_1459619083), 1);
            }
            
            i_486542105 = addInt(i_486542105, 1);
          }
      } while (false);
    } while (false);
    if (!((stack_1459618814[0].top == 0))) {
    failedAssertImpl_218103864(makeNimstrLit("capture.nim(63, 10) `stack.top == 0` "));
    }
    
    capStack_1459618785.top = iFrom_1459618948;

  return result_1459618787;

}

function fnHEX60gensym54_1459618173(ms_NP_1459618176, s_NP_1459618177, output_1459618178, output_1459618178_Idx) {
              
function fn_1459619500(capture_1459619502, ms_NP_1459619504, output_1459619505, output_1459619505_Idx) {
                var result_1459619506 = false;

                  result_1459619506 = true;
                  output_1459619505[output_1459619505_Idx].push({kind: 2, name: nimCopy(null, HEX5BHEX5D_1459619169(capture_1459619502, 1).s, NTI33554439), arg: nimCopy(null, HEX5BHEX5D_1459619169(capture_1459619502, 2).s, NTI33554439), str: []});;

                return result_1459619506;

              }
              
function fn_1459619911(capture_1459619913, ms_NP_1459619915, output_1459619916, output_1459619916_Idx) {
                var result_1459619917 = false;

                  result_1459619917 = true;
                  output_1459619916[output_1459619916_Idx].push({kind: 0, str: nimCopy(null, HEX5BHEX5D_1459619169(capture_1459619913, 1).s, NTI33554439), name: [], arg: []});;

                return result_1459619917;

              }
              
function fn_1459620145(capture_1459620147, ms_NP_1459620149, output_1459620150, output_1459620150_Idx) {
                var result_1459620151 = false;

                  result_1459620151 = true;
                  output_1459620150[output_1459620150_Idx].push({kind: 1, str: [], name: [], arg: []});;

                return result_1459620151;

              }
      var Temporary9;

  var result_1459618179 = ({ok: false, matchLen: 0, matchMax: 0, cs: ({capList: []})});

    var ip_NP_1459618180 = chckRange(ms_NP_1459618176.ip, 0, 51);
    var si_NP_1459618181 = ms_NP_1459618176.si;
    var simax_NP_1459618182 = ms_NP_1459618176.simax;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (ip_NP_1459618180) {
          case 0:
            if (((ms_NP_1459618176.backStack.frames).length <= ms_NP_1459618176.backStack.top)) {
            grow_1459618224(ms_NP_1459618176.backStack);
            }
            
            ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], {ip: 3, si: addInt(si_NP_1459618181, 0), rp: ms_NP_1459618176.retStack.top, cp: ms_NP_1459618176.capStack.top, pp: ms_NP_1459618176.precStack.top}, NTI1577058308);
            ms_NP_1459618176.backStack.top = addInt(ms_NP_1459618176.backStack.top, 1);
            ip_NP_1459618180 = 1;
            break;
          case 1:
            if (((ms_NP_1459618176.retStack.frames).length <= ms_NP_1459618176.retStack.top)) {
            grow_1593835610(ms_NP_1459618176.retStack);
            }
            
            ms_NP_1459618176.retStack.frames[chckIndx(ms_NP_1459618176.retStack.top, 0, (ms_NP_1459618176.retStack.frames).length - 1)] = addInt(ip_NP_1459618180, 1);
            ms_NP_1459618176.retStack.top = addInt(ms_NP_1459618176.retStack.top, 1);
            ip_NP_1459618180 = 8;
            break;
          case 2:
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var _ = ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)];
            ip_NP_1459618180 = 0;
            break;
          case 3:
            if ((si_NP_1459618181 < (s_NP_1459618177).length)) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 4;
            }
            else {
              ip_NP_1459618180 = 7;
            }
            
            break;
          case 4:
            ip_NP_1459618180 = 6;
            break;
          case 5:
            ip_NP_1459618180 = 6;
            break;
          case 6:
            simax_NP_1459618182 = nimMax(simax_NP_1459618182, si_NP_1459618181);
            if ((0 < ms_NP_1459618176.backStack.top)) {
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var tHEX60gensym7_1459618367 = nimCopy(null, ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], NTI1577058308);
            var __1459618368 = {Field0: tHEX60gensym7_1459618367.ip, Field1: tHEX60gensym7_1459618367.si, Field2: tHEX60gensym7_1459618367.rp, Field3: tHEX60gensym7_1459618367.cp, Field4: tHEX60gensym7_1459618367.pp};
            ip_NP_1459618180 = chckRange(__1459618368["Field0"], 0, 51);
            si_NP_1459618181 = __1459618368["Field1"];
            ms_NP_1459618176.retStack.top = __1459618368["Field2"];
            ms_NP_1459618176.capStack.top = __1459618368["Field3"];
            ms_NP_1459618176.precStack.top = __1459618368["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          case 7:
            if ((0 < ms_NP_1459618176.retStack.top)) {
            if (!((0 < ms_NP_1459618176.retStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.retStack.top > 0` "));
            }
            
            ms_NP_1459618176.retStack.top = subInt(ms_NP_1459618176.retStack.top, 1);
            ip_NP_1459618180 = chckRange(ms_NP_1459618176.retStack.frames[chckIndx(ms_NP_1459618176.retStack.top, 0, (ms_NP_1459618176.retStack.frames).length - 1)], 0, 51);
            }
            else {
              result_1459618179.ok = true;
              simax_NP_1459618182 = nimMax(simax_NP_1459618182, si_NP_1459618181);
              break Label1;
            }
            
            break;
          case 8:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)] == 91))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 9;
            }
            else {
              ip_NP_1459618180 = 29;
            }
            
            break;
          case 9:
            if (((ms_NP_1459618176.backStack.frames).length <= ms_NP_1459618176.backStack.top)) {
            grow_1459618224(ms_NP_1459618176.backStack);
            }
            
            ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], {ip: 29, si: addInt(si_NP_1459618181, -1), rp: ms_NP_1459618176.retStack.top, cp: ms_NP_1459618176.capStack.top, pp: ms_NP_1459618176.precStack.top}, NTI1577058308);
            ms_NP_1459618176.backStack.top = addInt(ms_NP_1459618176.backStack.top, 1);
            ip_NP_1459618180 = 10;
            break;
          case 10:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459618181, -1), ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 11;
            break;
          case 11:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459618181, 0), ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 12;
            break;
          case 12:
            Label3: do {
                Label4: while (true) {
                if (!((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet7[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) break Label4;
                  si_NP_1459618181 = addInt(si_NP_1459618181, 1);
                }
            } while (false);
            ip_NP_1459618180 = 13;
            break;
          case 13:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459618181, ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 14;
            break;
          case 14:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459618181, 0), ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 15;
            break;
          case 15:
            if (((ms_NP_1459618176.backStack.frames).length <= ms_NP_1459618176.backStack.top)) {
            grow_1459618224(ms_NP_1459618176.backStack);
            }
            
            ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], {ip: 25, si: addInt(si_NP_1459618181, 0), rp: ms_NP_1459618176.retStack.top, cp: ms_NP_1459618176.capStack.top, pp: ms_NP_1459618176.precStack.top}, NTI1577058308);
            ms_NP_1459618176.backStack.top = addInt(ms_NP_1459618176.backStack.top, 1);
            ip_NP_1459618180 = 16;
            break;
          case 16:
            if (((ms_NP_1459618176.backStack.frames).length <= ms_NP_1459618176.backStack.top)) {
            grow_1459618224(ms_NP_1459618176.backStack);
            }
            
            ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], {ip: 24, si: addInt(si_NP_1459618181, 0), rp: ms_NP_1459618176.retStack.top, cp: ms_NP_1459618176.capStack.top, pp: ms_NP_1459618176.precStack.top}, NTI1577058308);
            ms_NP_1459618176.backStack.top = addInt(ms_NP_1459618176.backStack.top, 1);
            ip_NP_1459618180 = 17;
            break;
          case 17:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet8[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 18;
            }
            else {
              ip_NP_1459618180 = 20;
            }
            
            break;
          case 18:
            ip_NP_1459618180 = 23;
            break;
          case 19:
            ip_NP_1459618180 = 20;
            break;
          case 20:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)] == 91))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 21;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 21:
            if (((ms_NP_1459618176.retStack.frames).length <= ms_NP_1459618176.retStack.top)) {
            grow_1593835610(ms_NP_1459618176.retStack);
            }
            
            ms_NP_1459618176.retStack.frames[chckIndx(ms_NP_1459618176.retStack.top, 0, (ms_NP_1459618176.retStack.frames).length - 1)] = addInt(ip_NP_1459618180, 1);
            ms_NP_1459618176.retStack.top = addInt(ms_NP_1459618176.retStack.top, 1);
            ip_NP_1459618180 = 42;
            break;
          case 22:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)] == 93))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 23;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 23:
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var _ = ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)];
            ip_NP_1459618180 = 16;
            break;
          case 24:
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var _ = ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)];
            ip_NP_1459618180 = 25;
            break;
          case 25:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459618181, ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 26;
            break;
          case 26:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)] == 93))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 27;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 27:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459618181, ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            var captureHEX60gensym28_1459619499 = collectCaptures_1526726831(fixCaptures_1459618778(s_NP_1459618177, ms_NP_1459618176.capStack, 1));
            if (fn_1459619500(captureHEX60gensym28_1459619499, ms_NP_1459618176, output_1459618178, output_1459618178_Idx)) {
            ip_NP_1459618180 = 28;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 28:
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var _ = ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)];
            ip_NP_1459618180 = 41;
            break;
          case 29:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet10[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 30;
            }
            else {
              ip_NP_1459618180 = 37;
            }
            
            break;
          case 30:
            if (((ms_NP_1459618176.backStack.frames).length <= ms_NP_1459618176.backStack.top)) {
            grow_1459618224(ms_NP_1459618176.backStack);
            }
            
            ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], {ip: 37, si: addInt(si_NP_1459618181, -1), rp: ms_NP_1459618176.retStack.top, cp: ms_NP_1459618176.capStack.top, pp: ms_NP_1459618176.precStack.top}, NTI1577058308);
            ms_NP_1459618176.backStack.top = addInt(ms_NP_1459618176.backStack.top, 1);
            ip_NP_1459618180 = 31;
            break;
          case 31:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459618181, -1), ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 32;
            break;
          case 32:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459618181, -1), ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 33;
            break;
          case 33:
            Label5: do {
                Label6: while (true) {
                if (!((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet11[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) break Label6;
                  si_NP_1459618181 = addInt(si_NP_1459618181, 1);
                }
            } while (false);
            ip_NP_1459618180 = 34;
            break;
          case 34:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459618181, ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 35;
            break;
          case 35:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459618181, ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            var captureHEX60gensym36_1459619910 = collectCaptures_1526726831(fixCaptures_1459618778(s_NP_1459618177, ms_NP_1459618176.capStack, 1));
            if (fn_1459619911(captureHEX60gensym36_1459619910, ms_NP_1459618176, output_1459618178, output_1459618178_Idx)) {
            ip_NP_1459618180 = 36;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 36:
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var _ = ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)];
            ip_NP_1459618180 = 41;
            break;
          case 37:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet12[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 38;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 38:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459618181, -1), ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            ip_NP_1459618180 = 39;
            break;
          case 39:
            Label7: do {
                Label8: while (true) {
                if (!((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet13[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) break Label8;
                  si_NP_1459618181 = addInt(si_NP_1459618181, 1);
                }
            } while (false);
            ip_NP_1459618180 = 40;
            break;
          case 40:
            if (((ms_NP_1459618176.capStack.frames).length <= ms_NP_1459618176.capStack.top)) {
            grow_1459618460(ms_NP_1459618176.capStack);
            }
            
            ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.capStack.frames[chckIndx(ms_NP_1459618176.capStack.top, 0, (ms_NP_1459618176.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459618181, ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459618176.capStack.top = addInt(ms_NP_1459618176.capStack.top, 1);
            var captureHEX60gensym41_1459620144 = collectCaptures_1526726831(fixCaptures_1459618778(s_NP_1459618177, ms_NP_1459618176.capStack, 1));
            if (fn_1459620145(captureHEX60gensym41_1459620144, ms_NP_1459618176, output_1459618178, output_1459618178_Idx)) {
            ip_NP_1459618180 = 41;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 41:
            if ((0 < ms_NP_1459618176.retStack.top)) {
            if (!((0 < ms_NP_1459618176.retStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.retStack.top > 0` "));
            }
            
            ms_NP_1459618176.retStack.top = subInt(ms_NP_1459618176.retStack.top, 1);
            ip_NP_1459618180 = chckRange(ms_NP_1459618176.retStack.frames[chckIndx(ms_NP_1459618176.retStack.top, 0, (ms_NP_1459618176.retStack.frames).length - 1)], 0, 51);
            }
            else {
              result_1459618179.ok = true;
              simax_NP_1459618182 = nimMax(simax_NP_1459618182, si_NP_1459618181);
              break Label1;
            }
            
            break;
          case 42:
            if (((ms_NP_1459618176.backStack.frames).length <= ms_NP_1459618176.backStack.top)) {
            grow_1459618224(ms_NP_1459618176.backStack);
            }
            
            ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)] = nimCopy(ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], {ip: 50, si: addInt(si_NP_1459618181, 0), rp: ms_NP_1459618176.retStack.top, cp: ms_NP_1459618176.capStack.top, pp: ms_NP_1459618176.precStack.top}, NTI1577058308);
            ms_NP_1459618176.backStack.top = addInt(ms_NP_1459618176.backStack.top, 1);
            ip_NP_1459618180 = 43;
            break;
          case 43:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (ConstSet14[s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)]] != undefined))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 44;
            }
            else {
              ip_NP_1459618180 = 46;
            }
            
            break;
          case 44:
            ip_NP_1459618180 = 49;
            break;
          case 45:
            ip_NP_1459618180 = 46;
            break;
          case 46:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)] == 91))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 47;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 47:
            if (((ms_NP_1459618176.retStack.frames).length <= ms_NP_1459618176.retStack.top)) {
            grow_1593835610(ms_NP_1459618176.retStack);
            }
            
            ms_NP_1459618176.retStack.frames[chckIndx(ms_NP_1459618176.retStack.top, 0, (ms_NP_1459618176.retStack.frames).length - 1)] = addInt(ip_NP_1459618180, 1);
            ms_NP_1459618176.retStack.top = addInt(ms_NP_1459618176.retStack.top, 1);
            ip_NP_1459618180 = 42;
            break;
          case 48:
            if (((si_NP_1459618181 < (s_NP_1459618177).length) && (s_NP_1459618177[chckIndx(si_NP_1459618181, 0, (s_NP_1459618177).length - 1)] == 93))) {
            si_NP_1459618181 = addInt(si_NP_1459618181, 1);
            ip_NP_1459618180 = 49;
            }
            else {
              ip_NP_1459618180 = 51;
            }
            
            break;
          case 49:
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var _ = ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)];
            ip_NP_1459618180 = 42;
            break;
          case 50:
            if ((0 < ms_NP_1459618176.retStack.top)) {
            if (!((0 < ms_NP_1459618176.retStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.retStack.top > 0` "));
            }
            
            ms_NP_1459618176.retStack.top = subInt(ms_NP_1459618176.retStack.top, 1);
            ip_NP_1459618180 = chckRange(ms_NP_1459618176.retStack.frames[chckIndx(ms_NP_1459618176.retStack.top, 0, (ms_NP_1459618176.retStack.frames).length - 1)], 0, 51);
            }
            else {
              result_1459618179.ok = true;
              simax_NP_1459618182 = nimMax(simax_NP_1459618182, si_NP_1459618181);
              break Label1;
            }
            
            break;
          case 51:
            simax_NP_1459618182 = nimMax(simax_NP_1459618182, si_NP_1459618181);
            if ((0 < ms_NP_1459618176.backStack.top)) {
            if (!((0 < ms_NP_1459618176.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459618176.backStack.top = subInt(ms_NP_1459618176.backStack.top, 1);
            var tHEX60gensym52_1459620424 = nimCopy(null, ms_NP_1459618176.backStack.frames[chckIndx(ms_NP_1459618176.backStack.top, 0, (ms_NP_1459618176.backStack.frames).length - 1)], NTI1577058308);
            var __1459620425 = {Field0: tHEX60gensym52_1459620424.ip, Field1: tHEX60gensym52_1459620424.si, Field2: tHEX60gensym52_1459620424.rp, Field3: tHEX60gensym52_1459620424.cp, Field4: tHEX60gensym52_1459620424.pp};
            ip_NP_1459618180 = chckRange(__1459620425["Field0"], 0, 51);
            si_NP_1459618181 = __1459620425["Field1"];
            ms_NP_1459618176.retStack.top = __1459620425["Field2"];
            ms_NP_1459618176.capStack.top = __1459620425["Field3"];
            ms_NP_1459618176.precStack.top = __1459620425["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          }
        }
    } while (false);
    ms_NP_1459618176.ip = ip_NP_1459618180;
    ms_NP_1459618176.si = si_NP_1459618181;
    ms_NP_1459618176.simax = simax_NP_1459618182;
    result_1459618179.matchLen = ms_NP_1459618176.si;
    result_1459618179.matchMax = ms_NP_1459618176.simax;
      if (!result_1459618179.ok) Temporary9 = false; else {        Temporary9 = (0 < ms_NP_1459618176.capStack.top);      }    if (Temporary9) {
    result_1459618179.cs = nimCopy(result_1459618179.cs, fixCaptures_1459618778(s_NP_1459618177, ms_NP_1459618176.capStack, 0), NTI1526726730);
    }
    

  return result_1459618179;

}

function nsuFormatSingleElem(formatstr_637536455, a_637536456) {
  var result_637536457 = [[]];

    result_637536457[0] = nimCopy(null, mnewString(0), NTI33554439);
    nsuAddf(result_637536457, 0, formatstr_637536455, [nimCopy(null, a_637536456, NTI33554439)]);

  return result_637536457[0];

}

function HEX5BHEX5D_939524972(s_939524975, x_939524976) {
  var result_939524977 = [];

    var a_939524979 = x_939524976.a;
    var L_939524981 = addInt(subInt(x_939524976.b, a_939524979), 1);
    result_939524977 = nimCopy(null, mnewString(chckRange(L_939524981, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_939524986 = 0;
      var i_1728053415 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1728053415 < L_939524981)) break Label3;
            i_939524986 = i_1728053415;
            result_939524977[chckIndx(i_939524986, 0, (result_939524977).length - 1)] = s_939524975[chckIndx(addInt(i_939524986, a_939524979), 0, (s_939524975).length - 1)];
            i_1728053415 = addInt(i_1728053415, 1);
          }
      } while (false);
    } while (false);

  return result_939524977;

}

function HEX2EHEX2E_939524947(a_939524950, b_939524951) {
  var result_939524952 = ({a: 0, b: 0});

    result_939524952 = nimCopy(result_939524952, {a: a_939524950, b: b_939524951}, NTI687865917);

  return result_939524952;

}

function parseXidoc_1459620495(body_1459620496, verbose_1459620497) {
  var result_1459620498 = [[]];

    var match_1459620596 = match_1459620499(xidocParser_1459620476, body_1459620496, result_1459620498, 0);
    if (!(match_1459620596.ok)) {
    if (verbose_1459620497) {
    raiseException({message: nsuFormatSingleElem(makeNimstrLit("Parse error\x0ASuccessfully parsed: $1"), HEX5BHEX5D_939524972(body_1459620496, HEX2EHEX2E_939524947(0, match_1459620596.matchMax))), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
      raiseException({message: makeNimstrLit("Parse error"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    }
    

  return result_1459620498[0];

}

function nsuContinuesWith(s_637535557, substr_637535558, start_637535559) {
            var Temporary3;

  var result_637535560 = false;

  BeforeRet: do {
    var i_637535561 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_637535558).length <= i_637535561)) {
          result_637535560 = true;
          break BeforeRet;
          }
          
            if (((s_637535557).length <= addInt(i_637535561, start_637535559))) Temporary3 = true; else {              Temporary3 = !((s_637535557[chckIndx(addInt(i_637535561, start_637535559), 0, (s_637535557).length - 1)] == substr_637535558[chckIndx(i_637535561, 0, (substr_637535558).length - 1)]));            }          if (Temporary3) {
          result_637535560 = false;
          break BeforeRet;
          }
          
          i_637535561 = addInt(i_637535561, 1);
        }
    } while (false);
  } while (false);

  return result_637535560;

}

function multiReplace_637535946(s_637535947, replacements_637535948) {
                      var Temporary10;

  var result_637535949 = [];

    result_637535949 = nimCopy(null, mnewString(0), NTI33554439);
    var i_637535950 = 0;
    var fastChk_637535951 = nimCopy(null, ConstSet15, NTI637535411);
    Label1: do {
      var sub_637535964 = null;
      var sub_637535964_Idx = 0;
      var by_637535965 = null;
      var by_637535965_Idx = 0;
      var i_486542112 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542112 < (replacements_637535948).length)) break Label3;
            sub_637535964 = replacements_637535948[chckIndx(i_486542112, 0, (replacements_637535948).length - 1)]; sub_637535964_Idx = "Field0";
            by_637535965 = replacements_637535948[chckIndx(i_486542112, 0, (replacements_637535948).length - 1)]; by_637535965_Idx = "Field1";
            if ((0 < (sub_637535964[sub_637535964_Idx]).length)) {
            fastChk_637535951[sub_637535964[sub_637535964_Idx][chckIndx(0, 0, (sub_637535964[sub_637535964_Idx]).length - 1)]] = true;
            }
            
            i_486542112 = addInt(i_486542112, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
        Label5: while (true) {
        if (!(i_637535950 < (s_637535947).length)) break Label5;
          Label6: do {
            if ((fastChk_637535951[s_637535947[chckIndx(i_637535950, 0, (s_637535947).length - 1)]] != undefined)) {
            Label7: do {
              var sub_637535978 = null;
              var sub_637535978_Idx = 0;
              var by_637535979 = null;
              var by_637535979_Idx = 0;
              var i_486542116 = 0;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_486542116 < (replacements_637535948).length)) break Label9;
                    sub_637535978 = replacements_637535948[chckIndx(i_486542116, 0, (replacements_637535948).length - 1)]; sub_637535978_Idx = "Field0";
                    by_637535979 = replacements_637535948[chckIndx(i_486542116, 0, (replacements_637535948).length - 1)]; by_637535979_Idx = "Field1";
                      if (!(0 < (sub_637535978[sub_637535978_Idx]).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_637535947, sub_637535978[sub_637535978_Idx], chckRange(i_637535950, 0, 2147483647));                      }                    if (Temporary10) {
                    result_637535949.push.apply(result_637535949, by_637535979[by_637535979_Idx]);;
                    i_637535950 = addInt(i_637535950, (sub_637535978[sub_637535978_Idx]).length);
                    break Label6;
                    }
                    
                    i_486542116 = addInt(i_486542116, 1);
                  }
              } while (false);
            } while (false);
            }
            
            addChar(result_637535949, s_637535947[chckIndx(i_637535950, 0, (s_637535947).length - 1)]);;
            i_637535950 = addInt(i_637535950, 1);
          } while (false);
        }
    } while (false);

  return result_637535949;

}

function escapeText_1442840582(text_1442840583, target_1442840584) {
    var Temporary1;

  var result_1442840585 = [];

    switch (target_1442840584) {
    case 0:
      Temporary1 = multiReplace_637535946(text_1442840583, [{Field0: makeNimstrLit("<"), Field1: makeNimstrLit("&lt;")}, {Field0: makeNimstrLit(">"), Field1: makeNimstrLit("&gt;")}, {Field0: makeNimstrLit("&"), Field1: makeNimstrLit("&amp;")}]);
      break;
    case 1:
      Temporary1 = text_1442840583;
      break;
    }
    result_1442840585 = nimCopy(null, Temporary1, NTI33554439);

  return result_1442840585;

}

function reprEnum(e_33557386, typ_33557387) {
  var result_33557388 = [];

    var tmp_33557389 = false;
    var item_33557390 = typ_33557387.node.sons[e_33557386];
    tmp_33557389 = item_33557390 !== undefined
    if (tmp_33557389) {
    result_33557388 = nimCopy(null, makeNimstrLit(item_33557390.name), NTI33554439);
    }
    else {
      result_33557388 = nimCopy(null, (HEX24_335544323(e_33557386) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557388;

}

function hasKey_1442840682(t_1442840685, key_1442840686) {
  var result_1442840687 = false;

    var hc_1442840688 = [0];
    result_1442840687 = (0 <= rawGet_1442840689(t_1442840685, key_1442840686, hc_1442840688, 0));

  return result_1442840687;

}

function raiseKeyError_1677723108(key_1677723110) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_1677723110 || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1442840786(t_1442840789, key_1442840790) {
  var result_1442840791 = null;

    var hcHEX60gensym20_1442840792 = [0];
    var indexHEX60gensym20_1442840799 = rawGet_1442840689(t_1442840789, key_1442840790, hcHEX60gensym20_1442840792, 0);
    if ((0 <= indexHEX60gensym20_1442840799)) {
    result_1442840791 = t_1442840789.data[chckIndx(indexHEX60gensym20_1442840799, 0, (t_1442840789.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1677723108(key_1442840790);
    }
    

  return result_1442840791;

}

function parseSaturatedNatural_654311758(s_654311759, b_654311760, b_654311760_Idx, start_654311761) {
      var Temporary1;
          var Temporary4;

  var result_654311762 = 0;

    var i_654311763 = start_654311761;
    if (((i_654311763 < (s_654311759).length) && (s_654311759[chckIndx(i_654311763, 0, (s_654311759).length - 1)] == 43))) {
    i_654311763 = addInt(i_654311763, 1);
    }
    
      if (!(i_654311763 < (s_654311759).length)) Temporary1 = false; else {        Temporary1 = (ConstSet22[s_654311759[chckIndx(i_654311763, 0, (s_654311759).length - 1)]] != undefined);      }    if (Temporary1) {
    b_654311760[b_654311760_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_654311763 < (s_654311759).length)) Temporary4 = false; else {            Temporary4 = (ConstSet23[s_654311759[chckIndx(i_654311763, 0, (s_654311759).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_654311782 = subInt(s_654311759[chckIndx(i_654311763, 0, (s_654311759).length - 1)], 48);
          if ((b_654311760[b_654311760_Idx] <= divInt(subInt(2147483647, c_654311782), 10))) {
          b_654311760[b_654311760_Idx] = addInt(mulInt(b_654311760[b_654311760_Idx], 10), c_654311782);
          }
          else {
            b_654311760[b_654311760_Idx] = 2147483647;
          }
          
          i_654311763 = addInt(i_654311763, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_654311763 < (s_654311759).length) && (s_654311759[chckIndx(i_654311763, 0, (s_654311759).length - 1)] == 95))) break Label6;
                i_654311763 = addInt(i_654311763, 1);
              }
          } while (false);
        }
    } while (false);
    result_654311762 = subInt(i_654311763, start_654311761);
    }
    

  return result_654311762;

}

function HEX5BHEX5D_939527322(s_939527325, x_939527326) {
  var result_939527327 = [];

    var a_939527329 = x_939527326.a;
    var L_939527331 = addInt(subInt(subInt((s_939527325).length, x_939527326.b), a_939527329), 1);
    result_939527327 = nimCopy(null, mnewString(chckRange(L_939527331, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_939527336 = 0;
      var i_1459617977 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1459617977 < L_939527331)) break Label3;
            i_939527336 = i_1459617977;
            result_939527327[chckIndx(i_939527336, 0, (result_939527327).length - 1)] = s_939527325[chckIndx(addInt(i_939527336, a_939527329), 0, (s_939527325).length - 1)];
            i_1459617977 = addInt(i_1459617977, 1);
          }
      } while (false);
    } while (false);

  return result_939527327;

}

function HEX2EHEX2E_872415312(a_872415315, b_872415316) {
  var result_872415319 = ({a: 0, b: 0});

    result_872415319 = nimCopy(result_872415319, {a: a_872415315, b: b_872415316}, NTI872415311);

  return result_872415319;

}

function parseStandardFormatSpecifier_1191182394(s_1191182395, start_1191182396, ignoreUnknownSuffix_1191182397) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1191182398 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1191182398.fill = 32;
    result_1191182398.align = 0;
    result_1191182398.sign = 45;
    var i_1191182400 = start_1191182396;
    if (((addInt(i_1191182400, 1) < (s_1191182395).length) && (ConstSet18[s_1191182395[chckIndx(addInt(i_1191182400, 1), 0, (s_1191182395).length - 1)]] != undefined))) {
    result_1191182398.fill = s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)];
    result_1191182398.align = s_1191182395[chckIndx(addInt(i_1191182400, 1), 0, (s_1191182395).length - 1)];
    i_1191182400 = addInt(i_1191182400, 2);
    }
    else {
    if (((i_1191182400 < (s_1191182395).length) && (ConstSet19[s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)]] != undefined))) {
    result_1191182398.align = s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)];
    i_1191182400 = addInt(i_1191182400, 1);
    }
    }
    if (((i_1191182400 < (s_1191182395).length) && (ConstSet20[s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)]] != undefined))) {
    result_1191182398.sign = s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)];
    i_1191182400 = addInt(i_1191182400, 1);
    }
    
    if (((i_1191182400 < (s_1191182395).length) && (s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)] == 35))) {
    result_1191182398.alternateForm = true;
    i_1191182400 = addInt(i_1191182400, 1);
    }
    
      if (!((addInt(i_1191182400, 1) < (s_1191182395).length) && (s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet21[s_1191182395[chckIndx(addInt(i_1191182400, 1), 0, (s_1191182395).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1191182398.padWithZero = true;
    i_1191182400 = addInt(i_1191182400, 1);
    }
    
    var parsedLength_1191182437 = parseSaturatedNatural_654311758(s_1191182395, result_1191182398, "minimumWidth", i_1191182400);
    i_1191182400 = addInt(i_1191182400, parsedLength_1191182437);
    if (((i_1191182400 < (s_1191182395).length) && (s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)] == 46))) {
    i_1191182400 = addInt(i_1191182400, 1);
    var parsedLengthB_1191182446 = parseSaturatedNatural_654311758(s_1191182395, result_1191182398, "precision", i_1191182400);
    i_1191182400 = addInt(i_1191182400, parsedLengthB_1191182446);
    }
    else {
      result_1191182398.precision = -1;
    }
    
      if (!(i_1191182400 < (s_1191182395).length)) Temporary2 = false; else {        Temporary2 = (ConstSet24[s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1191182398.typ = s_1191182395[chckIndx(i_1191182400, 0, (s_1191182395).length - 1)];
    i_1191182400 = addInt(i_1191182400, 1);
    }
    
    result_1191182398.endPosition = i_1191182400;
      if (!!((i_1191182400 == (s_1191182395).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1191182397);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_939527322(s_1191182395, HEX2EHEX2E_872415312(i_1191182400, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1191182398;

}

function nucruneLen(s_939524106) {
  var result_939524107 = 0;

    result_939524107 = 0;
    var i_939524108 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_939524108 < (s_939524106).length)) break Label2;
          if ((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] <= 127)) {
          i_939524108 = addInt(i_939524108, 1);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 5) == 6)) {
          i_939524108 = addInt(i_939524108, 2);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 4) == 14)) {
          i_939524108 = addInt(i_939524108, 3);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 3) == 30)) {
          i_939524108 = addInt(i_939524108, 4);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 2) == 62)) {
          i_939524108 = addInt(i_939524108, 5);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 1) == 126)) {
          i_939524108 = addInt(i_939524108, 6);
          }
          else {
          i_939524108 = addInt(i_939524108, 1);
          }
          }}}}}
          result_939524107 = addInt(result_939524107, 1);
        }
    } while (false);

  return result_939524107;

}

function runeLenAt_939524161(s_939524162, i_939524163) {
  var result_939524164 = 0;

    if ((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] <= 127)) {
    result_939524164 = 1;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 5) == 6)) {
    result_939524164 = 2;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 4) == 14)) {
    result_939524164 = 3;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 3) == 30)) {
    result_939524164 = 4;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 2) == 62)) {
    result_939524164 = 5;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 1) == 126)) {
    result_939524164 = 6;
    }
    else {
      result_939524164 = 1;
    }
    }}}}}

  return result_939524164;

}

function runeOffset_939524733(s_939524734, pos_939524735, start_939524736) {
  var result_939524737 = 0;

  BeforeRet: do {
    var i_939524738 = 0;
    var o_939524739 = start_939524736;
    Label1: do {
        Label2: while (true) {
        if (!(i_939524738 < pos_939524735)) break Label2;
          o_939524739 = addInt(o_939524739, chckRange(runeLenAt_939524161(s_939524734, o_939524739), 0, 2147483647));
          if (((s_939524734).length <= o_939524739)) {
          result_939524737 = -1;
          break BeforeRet;
          }
          
          i_939524738 = addInt(i_939524738, 1);
        }
    } while (false);
    result_939524737 = o_939524739;
    break BeforeRet;
  } while (false);

  return result_939524737;

}

function validateUtf8_939524373(s_939524374) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_939524375 = 0;

  BeforeRet: do {
    var i_939524376 = 0;
    var L_939524377 = (s_939524374).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_939524376 < L_939524377)) break Label2;
          if ((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] <= 127)) {
          i_939524376 = addInt(i_939524376, 1);
          }
          else {
          if (((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] >>> 5) == 6)) {
          if ((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] < 194)) {
          result_939524375 = i_939524376;
          break BeforeRet;
          }
          
            if (!(addInt(i_939524376, 1) < L_939524377)) Temporary3 = false; else {              Temporary3 = ((s_939524374[chckIndx(addInt(i_939524376, 1), 0, (s_939524374).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_939524376 = addInt(i_939524376, 2);
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_939524376, 2) < L_939524377)) Temporary5 = false; else {              Temporary5 = ((s_939524374[chckIndx(addInt(i_939524376, 1), 0, (s_939524374).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_939524374[chckIndx(addInt(i_939524376, 2), 0, (s_939524374).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_939524376 = addInt(i_939524376, 3);
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_939524376, 3) < L_939524377)) Temporary8 = false; else {              Temporary8 = ((s_939524374[chckIndx(addInt(i_939524376, 1), 0, (s_939524374).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_939524374[chckIndx(addInt(i_939524376, 2), 0, (s_939524374).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_939524374[chckIndx(addInt(i_939524376, 3), 0, (s_939524374).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_939524376 = addInt(i_939524376, 4);
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_939524375 = -1;
    break BeforeRet;
  } while (false);

  return result_939524375;

}

function nsuRepeatChar(c_637535227, count_637535228) {
  var result_637535229 = [];

    result_637535229 = nimCopy(null, mnewString(count_637535228), NTI33554439);
    Label1: do {
      var i_637535234 = 0;
      var colontmp__486542129 = 0;
      colontmp__486542129 = subInt(count_637535228, 1);
      var res_486542130 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486542130 <= colontmp__486542129)) break Label3;
            i_637535234 = res_486542130;
            result_637535229[chckIndx(i_637535234, 0, (result_637535229).length - 1)] = c_637535227;
            res_486542130 = addInt(res_486542130, 1);
          }
      } while (false);
    } while (false);

  return result_637535229;

}

function alignString_1191182356(s_1191182357, minimumWidth_1191182358, align_1191182359, fill_1191182360) {
      var Temporary1;

  var result_1191182361 = [];

    if ((minimumWidth_1191182358 == 0)) {
    result_1191182361 = nimCopy(null, s_1191182357, NTI33554439);
    }
    else {
      if ((validateUtf8_939524373(s_1191182357) == -1)) {
      Temporary1 = nucruneLen(s_1191182357);
      }
      else {
      Temporary1 = (s_1191182357).length;
      }
      
      var sRuneLen_1191182362 = Temporary1;
      var toFill_1191182363 = subInt(minimumWidth_1191182358, sRuneLen_1191182362);
      if ((toFill_1191182363 <= 0)) {
      result_1191182361 = nimCopy(null, s_1191182357, NTI33554439);
      }
      else {
      if (((align_1191182359 == 60) || (align_1191182359 == 0))) {
      result_1191182361 = nimCopy(null, (s_1191182357 || []).concat(nsuRepeatChar(fill_1191182360, chckRange(toFill_1191182363, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_1191182359 == 94)) {
      var half_1191182364 = divInt(toFill_1191182363, 2);
      result_1191182361 = nimCopy(null, (nsuRepeatChar(fill_1191182360, chckRange(half_1191182364, 0, 2147483647)) || []).concat(s_1191182357 || [],nsuRepeatChar(fill_1191182360, chckRange(subInt(toFill_1191182363, half_1191182364), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        result_1191182361 = nimCopy(null, (nsuRepeatChar(fill_1191182360, chckRange(toFill_1191182363, 0, 2147483647)) || []).concat(s_1191182357 || []), NTI33554439);
      }
      }}
    }
    

  return result_1191182361;

}

function formatValue_1191182498(result_1191182499, result_1191182499_Idx, value_1191182500, specifier_1191182501) {
    var spec_1191182502 = parseStandardFormatSpecifier_1191182394(specifier_1191182501, 0, false);
    var value_1191182503 = nimCopy(null, value_1191182500, NTI33554439);
    switch (spec_1191182502.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_1191182502.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1191182502.precision == -1))) {
    if ((spec_1191182502.precision < nucruneLen(value_1191182503))) {
    (value_1191182503.length = chckRange(runeOffset_939524733(value_1191182503, chckRange(spec_1191182502.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_1191182499[result_1191182499_Idx].push.apply(result_1191182499[result_1191182499_Idx], alignString_1191182356(value_1191182503, spec_1191182502.minimumWidth, spec_1191182502.align, spec_1191182502.fill));;

  
}

function pop_1442840840(s_1442840842, s_1442840842_Idx) {
  var result_1442840843 = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false})});

    var L_1442840847 = subInt((s_1442840842[s_1442840842_Idx]).length, 1);
    result_1442840843 = nimCopy(result_1442840843, s_1442840842[s_1442840842_Idx][chckIndx(L_1442840847, 0, (s_1442840842[s_1442840842_Idx]).length - 1)], NTI1476395015);
    if (s_1442840842[s_1442840842_Idx].length < chckRange(L_1442840847, 0, 2147483647)) { for (var i = s_1442840842[s_1442840842_Idx].length ; i < chckRange(L_1442840847, 0, 2147483647) ; ++i) s_1442840842[s_1442840842_Idx].push(({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false})})); }
               else { s_1442840842[s_1442840842_Idx].length = chckRange(L_1442840847, 0, 2147483647); };

  return result_1442840843;

}

function renderStr_1442840879(doc_1442840880, str_1442840881) {
            var Temporary4;
              var Temporary5;
              var Temporary6;
              
function HEX3Aanonymous_1442840895() {
                var result_1442840896 = null;

                BeforeRet: do {
                  Label1: do {
                    var iHEX60gensym8_1442840905 = 0;
                    var colontmp__486542120 = 0;
                    colontmp__486542120 = subInt((doc_1442840880.stack).length, 1);
                    var res_486542121 = colontmp__486542120;
                    Label2: do {
                        Label3: while (true) {
                        if (!(0 <= res_486542121)) break Label3;
                          iHEX60gensym8_1442840905 = res_486542121;
                          var frameHEX60gensym8_1442840906 = nimCopy(null, doc_1442840880.stack[chckIndx(iHEX60gensym8_1442840905, 0, (doc_1442840880.stack).length - 1)], NTI1476395015);
                          if (hasKey_1442840682(frameHEX60gensym8_1442840906.commands, name_1442840892)) {
                          result_1442840896 = HEX5BHEX5D_1442840786(frameHEX60gensym8_1442840906.commands, name_1442840892);
                          break BeforeRet;
                          }
                          
                          res_486542121 = subInt(res_486542121, 1);
                        }
                    } while (false);
                  } while (false);
                } while (false);

                return result_1442840896;

              }
              var Temporary7;
              var Temporary9;
              var Temporary10;

  var result_1442840882 = [];

    Label1: do {
      var nodeHEX60gensym7_1442840891 = null;
      var nodeHEX60gensym7_1442840891_Idx = 0;
      var colontmp__486542090 = [];
      colontmp__486542090 = parseXidoc_1459620495(str_1442840881, doc_1442840880.verbose);
      var i_486542092 = 0;
      var L_486542093 = (colontmp__486542090).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542092 < L_486542093)) break Label3;
            nodeHEX60gensym7_1442840891 = colontmp__486542090; nodeHEX60gensym7_1442840891_Idx = chckIndx(i_486542092, 0, (colontmp__486542090).length - 1);
            switch (nodeHEX60gensym7_1442840891[nodeHEX60gensym7_1442840891_Idx].kind) {
            case 0:
              var Temporary5 = nodeHEX60gensym7_1442840891[nodeHEX60gensym7_1442840891_Idx];
              if (ConstSet16[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1459617795)); }
              Temporary4 = escapeText_1442840582(Temporary5.str, doc_1442840880.target);
              break;
            case 1:
              Temporary4 = makeNimstrLit(" ");
              break;
            case 2:
              var Temporary6 = nodeHEX60gensym7_1442840891[nodeHEX60gensym7_1442840891_Idx];
              if (ConstSet17[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1459617795)); }
              var name_1442840892 = nimCopy(null, Temporary6.name, NTI33554439);
              var commandHEX60gensym7_1442841014 = HEX3Aanonymous_1442840895();
              if ((commandHEX60gensym7_1442841014 == null)) {
              var fmtRes_1442841018 = [mnewString(0)];
              fmtRes_1442841018[0].push.apply(fmtRes_1442841018[0], makeNimstrLit("Command not found: "));;
              formatValue_1191182498(fmtRes_1442841018, 0, name_1442840892, []);
              raiseException({message: nimCopy(null, fmtRes_1442841018[0], NTI33554439), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
              }
              
              var Temporary7 = nodeHEX60gensym7_1442840891[nodeHEX60gensym7_1442840891_Idx];
              if (ConstSet25[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1459617795)); }
              var frameHEX60gensym7_1442841019 = {cmdName: nimCopy(null, name_1442840892, NTI33554439), cmdArg: nimCopy(null, Temporary7.arg, NTI33554439), args: ({data: [], counter: 0}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false})};
              var Temporary8 = nimCopy(null, frameHEX60gensym7_1442841019, NTI1476395015);
              doc_1442840880.stack.push(Temporary8);;
              var Temporary9 = nodeHEX60gensym7_1442840891[nodeHEX60gensym7_1442840891_Idx];
              if (ConstSet26[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1459617795)); }
              var xstrHEX60gensym7_1442841024 = commandHEX60gensym7_1442841014(Temporary9.arg);
              var _ = pop_1442840840(doc_1442840880, "stack");
              if ((true && !(xstrHEX60gensym7_1442841024.rendered))) {
              Temporary10 = escapeText_1442840582(xstrHEX60gensym7_1442841024.str, doc_1442840880.target);
              }
              else {
              Temporary10 = xstrHEX60gensym7_1442841024.str;
              }
              
              Temporary4 = Temporary10;
              break;
            }
            result_1442840882.push.apply(result_1442840882, Temporary4);;
            i_486542092 = addInt(i_486542092, 1);
            if (!(((colontmp__486542090).length == L_486542093))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_1442840882;

}

function nsuStrip(s_637536475, leading_637536476, trailing_637536477, chars_637536478) {
          var Temporary5;

  var result_637536479 = [];

    var first_637536480 = 0;
    var last_637536481 = subInt((s_637536475).length, 1);
    if (leading_637536476) {
    Label1: do {
        Label2: while (true) {
        if (!((first_637536480 <= last_637536481) && (chars_637536478[s_637536475[chckIndx(first_637536480, 0, (s_637536475).length - 1)]] != undefined))) break Label2;
          first_637536480 = addInt(first_637536480, 1);
        }
    } while (false);
    }
    
    if (trailing_637536477) {
    Label3: do {
        Label4: while (true) {
          if (!(first_637536480 <= last_637536481)) Temporary5 = false; else {            Temporary5 = (chars_637536478[s_637536475[chckIndx(last_637536481, 0, (s_637536475).length - 1)]] != undefined);          }        if (!Temporary5) break Label4;
          last_637536481 = subInt(last_637536481, 1);
        }
    } while (false);
    }
    
    result_637536479 = nimCopy(null, substr_33557907(s_637536475, first_637536480, last_637536481), NTI33554439);

  return result_637536479;

}

function HEX5BHEX5D_1258294877(s_1258294879, i_1258294880) {
  var result_1258294881 = null;

    result_1258294881 = s_1258294879[chckIndx(subInt((s_1258294879).length, i_1258294880), 0, (s_1258294879).length - 1)];

  return result_1258294881;

}

function expandStr_1442840595(doc_1442840596, str_1442840597) {
            var Temporary4;
              var Temporary5;
              var Temporary6;
              
function HEX3Aanonymous_1442840629() {
                var result_1442840630 = null;

                BeforeRet: do {
                  Label1: do {
                    var iHEX60gensym3_1442840640 = 0;
                    var colontmp__486542140 = 0;
                    colontmp__486542140 = subInt((doc_1442840596.stack).length, 1);
                    var res_486542141 = colontmp__486542140;
                    Label2: do {
                        Label3: while (true) {
                        if (!(0 <= res_486542141)) break Label3;
                          iHEX60gensym3_1442840640 = res_486542141;
                          var frameHEX60gensym3_1442840641 = nimCopy(null, doc_1442840596.stack[chckIndx(iHEX60gensym3_1442840640, 0, (doc_1442840596.stack).length - 1)], NTI1476395015);
                          if (hasKey_1442840682(frameHEX60gensym3_1442840641.commands, name_1442840626)) {
                          result_1442840630 = HEX5BHEX5D_1442840786(frameHEX60gensym3_1442840641.commands, name_1442840626);
                          break BeforeRet;
                          }
                          
                          res_486542141 = subInt(res_486542141, 1);
                        }
                    } while (false);
                  } while (false);
                } while (false);

                return result_1442840630;

              }
              var Temporary7;
              var Temporary9;
              var Temporary10;

  var result_1442840598 = [];

    Label1: do {
      var nodeHEX60gensym0_1442840625 = null;
      var nodeHEX60gensym0_1442840625_Idx = 0;
      var colontmp__486542135 = [];
      colontmp__486542135 = parseXidoc_1459620495(str_1442840597, doc_1442840596.verbose);
      var i_486542136 = 0;
      var L_486542137 = (colontmp__486542135).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542136 < L_486542137)) break Label3;
            nodeHEX60gensym0_1442840625 = colontmp__486542135; nodeHEX60gensym0_1442840625_Idx = chckIndx(i_486542136, 0, (colontmp__486542135).length - 1);
            switch (nodeHEX60gensym0_1442840625[nodeHEX60gensym0_1442840625_Idx].kind) {
            case 0:
              var Temporary5 = nodeHEX60gensym0_1442840625[nodeHEX60gensym0_1442840625_Idx];
              if (ConstSet29[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1459617795)); }
              Temporary4 = Temporary5.str;
              break;
            case 1:
              Temporary4 = makeNimstrLit(" ");
              break;
            case 2:
              var Temporary6 = nodeHEX60gensym0_1442840625[nodeHEX60gensym0_1442840625_Idx];
              if (ConstSet30[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1459617795)); }
              var name_1442840626 = nimCopy(null, Temporary6.name, NTI33554439);
              var commandHEX60gensym0_1442840821 = HEX3Aanonymous_1442840629();
              if ((commandHEX60gensym0_1442840821 == null)) {
              var fmtRes_1442840829 = [mnewString(0)];
              fmtRes_1442840829[0].push.apply(fmtRes_1442840829[0], makeNimstrLit("Command not found: "));;
              formatValue_1191182498(fmtRes_1442840829, 0, name_1442840626, []);
              raiseException({message: nimCopy(null, fmtRes_1442840829[0], NTI33554439), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
              }
              
              var Temporary7 = nodeHEX60gensym0_1442840625[nodeHEX60gensym0_1442840625_Idx];
              if (ConstSet31[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1459617795)); }
              var frameHEX60gensym0_1442840834 = {cmdName: nimCopy(null, name_1442840626, NTI33554439), cmdArg: nimCopy(null, Temporary7.arg, NTI33554439), args: ({data: [], counter: 0}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false})};
              var Temporary8 = nimCopy(null, frameHEX60gensym0_1442840834, NTI1476395015);
              doc_1442840596.stack.push(Temporary8);;
              var Temporary9 = nodeHEX60gensym0_1442840625[nodeHEX60gensym0_1442840625_Idx];
              if (ConstSet32[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1459617795)); }
              var xstrHEX60gensym0_1442840839 = commandHEX60gensym0_1442840821(Temporary9.arg);
              var _ = pop_1442840840(doc_1442840596, "stack");
              if ((false && !(xstrHEX60gensym0_1442840839.rendered))) {
              Temporary10 = escapeText_1442840582(xstrHEX60gensym0_1442840839.str, doc_1442840596.target);
              }
              else {
              Temporary10 = xstrHEX60gensym0_1442840839.str;
              }
              
              Temporary4 = Temporary10;
              break;
            }
            result_1442840598.push.apply(result_1442840598, Temporary4);;
            i_486542136 = addInt(i_486542136, 1);
            if (!(((colontmp__486542135).length == L_486542137))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_1442840598;

}

function newSeq_452985301(len_452985303) {
  var result_452985304 = [];

    result_452985304 = new Array(len_452985303); for (var i = 0 ; i < len_452985303 ; ++i) { result_452985304[i] = []; }
  return result_452985304;

}

function match_1459622468(p_1459622472, s_1459622473, userData_1459622474, userData_1459622474_Idx) {
  var result_1459622475 = ({ok: false, matchLen: 0, matchMax: 0, cs: ({capList: []})});

    var ms_1459622478 = [initMatchState_1459620507()];
    result_1459622475 = nimCopy(result_1459622475, p_1459622472.fn(ms_1459622478[0], s_1459622473, userData_1459622474, userData_1459622474_Idx), NTI1526726727);

  return result_1459622475;

}

function fnHEX60gensym314_1459620731(ms_NP_1459620734, s_NP_1459620735, output_1459620736, output_1459620736_Idx) {
              
function fn_1459621304(capture_1459621306, ms_NP_1459621308, output_1459621309, output_1459621309_Idx) {
                var result_1459621310 = false;

                  result_1459621310 = true;
                  output_1459621309[output_1459621309_Idx].push(nsuStrip(HEX5BHEX5D_1459619169(capture_1459621306, 1).s, true, true, ConstSet37));;

                return result_1459621310;

              }
              
function fn_1459621944(capture_1459621946, ms_NP_1459621948, output_1459621949, output_1459621949_Idx) {
                var result_1459621950 = false;

                  result_1459621950 = true;
                  output_1459621949[output_1459621949_Idx].push(nsuStrip(HEX5BHEX5D_1459619169(capture_1459621946, 1).s, true, true, ConstSet41));;

                return result_1459621950;

              }
      var Temporary7;

  var result_1459620737 = ({ok: false, matchLen: 0, matchMax: 0, cs: ({capList: []})});

    var ip_NP_1459620738 = chckRange(ms_NP_1459620734.ip, 0, 71);
    var si_NP_1459620739 = ms_NP_1459620734.si;
    var simax_NP_1459620740 = ms_NP_1459620734.simax;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (ip_NP_1459620738) {
          case 0:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 61, si: addInt(si_NP_1459620739, 0), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 1;
            break;
          case 1:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459620739, 0), ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            ip_NP_1459620738 = 2;
            break;
          case 2:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 10))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 3;
            }
            else {
              ip_NP_1459620738 = 11;
            }
            
            break;
          case 3:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 11, si: addInt(si_NP_1459620739, -1), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 4;
            break;
          case 4:
            Label3: do {
                Label4: while (true) {
                if (!((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet34[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) break Label4;
                  si_NP_1459620739 = addInt(si_NP_1459620739, 1);
                }
            } while (false);
            ip_NP_1459620738 = 5;
            break;
          case 5:
            if ((si_NP_1459620739 < (s_NP_1459620735).length)) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 6;
            }
            else {
              ip_NP_1459620738 = 9;
            }
            
            break;
          case 6:
            ip_NP_1459620738 = 8;
            break;
          case 7:
            ip_NP_1459620738 = 8;
            break;
          case 8:
            simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
            if ((0 < ms_NP_1459620734.backStack.top)) {
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var tHEX60gensym249_1459620906 = nimCopy(null, ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], NTI1577058308);
            var __1459620907 = {Field0: tHEX60gensym249_1459620906.ip, Field1: tHEX60gensym249_1459620906.si, Field2: tHEX60gensym249_1459620906.rp, Field3: tHEX60gensym249_1459620906.cp, Field4: tHEX60gensym249_1459620906.pp};
            ip_NP_1459620738 = chckRange(__1459620907["Field0"], 0, 71);
            si_NP_1459620739 = __1459620907["Field1"];
            ms_NP_1459620734.retStack.top = __1459620907["Field2"];
            ms_NP_1459620734.capStack.top = __1459620907["Field3"];
            ms_NP_1459620734.precStack.top = __1459620907["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          case 9:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 10;
            break;
          case 10:
            simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
            if ((0 < ms_NP_1459620734.backStack.top)) {
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var tHEX60gensym251_1459621011 = nimCopy(null, ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], NTI1577058308);
            var __1459621012 = {Field0: tHEX60gensym251_1459621011.ip, Field1: tHEX60gensym251_1459621011.si, Field2: tHEX60gensym251_1459621011.rp, Field3: tHEX60gensym251_1459621011.cp, Field4: tHEX60gensym251_1459621011.pp};
            ip_NP_1459620738 = chckRange(__1459621012["Field0"], 0, 71);
            si_NP_1459620739 = __1459621012["Field1"];
            ms_NP_1459620734.retStack.top = __1459621012["Field2"];
            ms_NP_1459620734.capStack.top = __1459621012["Field3"];
            ms_NP_1459620734.precStack.top = __1459621012["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          case 11:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459620739, 0), ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            ip_NP_1459620738 = 12;
            break;
          case 12:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 27, si: addInt(si_NP_1459620739, 0), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 13;
            break;
          case 13:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet35[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 14;
            }
            else {
              ip_NP_1459620738 = 16;
            }
            
            break;
          case 14:
            ip_NP_1459620738 = 26;
            break;
          case 15:
            ip_NP_1459620738 = 16;
            break;
          case 16:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 91))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 17;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 17:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 25, si: addInt(si_NP_1459620739, 0), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 18;
            break;
          case 18:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet36[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 19;
            }
            else {
              ip_NP_1459620738 = 21;
            }
            
            break;
          case 19:
            ip_NP_1459620738 = 24;
            break;
          case 20:
            ip_NP_1459620738 = 21;
            break;
          case 21:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 91))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 22;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 22:
            if (((ms_NP_1459620734.retStack.frames).length <= ms_NP_1459620734.retStack.top)) {
            grow_1593835610(ms_NP_1459620734.retStack);
            }
            
            ms_NP_1459620734.retStack.frames[chckIndx(ms_NP_1459620734.retStack.top, 0, (ms_NP_1459620734.retStack.frames).length - 1)] = addInt(ip_NP_1459620738, 1);
            ms_NP_1459620734.retStack.top = addInt(ms_NP_1459620734.retStack.top, 1);
            ip_NP_1459620738 = 62;
            break;
          case 23:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 93))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 24;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 24:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 17;
            break;
          case 25:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 93))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 26;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 26:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 12;
            break;
          case 27:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459620739, ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            ip_NP_1459620738 = 28;
            break;
          case 28:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459620739, ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            var captureHEX60gensym269_1459621303 = collectCaptures_1526726831(fixCaptures_1459618778(s_NP_1459620735, ms_NP_1459620734.capStack, 1));
            if (fn_1459621304(captureHEX60gensym269_1459621303, ms_NP_1459620734, output_1459620736, output_1459620736_Idx)) {
            ip_NP_1459620738 = 29;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 29:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 59))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 30;
            }
            else {
              ip_NP_1459620738 = 60;
            }
            
            break;
          case 30:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 60, si: addInt(si_NP_1459620739, -1), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 31;
            break;
          case 31:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459620739, 0), ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            ip_NP_1459620738 = 32;
            break;
          case 32:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 10))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 33;
            }
            else {
              ip_NP_1459620738 = 41;
            }
            
            break;
          case 33:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 41, si: addInt(si_NP_1459620739, -1), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 34;
            break;
          case 34:
            Label5: do {
                Label6: while (true) {
                if (!((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet38[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) break Label6;
                  si_NP_1459620739 = addInt(si_NP_1459620739, 1);
                }
            } while (false);
            ip_NP_1459620738 = 35;
            break;
          case 35:
            if ((si_NP_1459620739 < (s_NP_1459620735).length)) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 36;
            }
            else {
              ip_NP_1459620738 = 39;
            }
            
            break;
          case 36:
            ip_NP_1459620738 = 38;
            break;
          case 37:
            ip_NP_1459620738 = 38;
            break;
          case 38:
            simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
            if ((0 < ms_NP_1459620734.backStack.top)) {
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var tHEX60gensym279_1459621546 = nimCopy(null, ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], NTI1577058308);
            var __1459621547 = {Field0: tHEX60gensym279_1459621546.ip, Field1: tHEX60gensym279_1459621546.si, Field2: tHEX60gensym279_1459621546.rp, Field3: tHEX60gensym279_1459621546.cp, Field4: tHEX60gensym279_1459621546.pp};
            ip_NP_1459620738 = chckRange(__1459621547["Field0"], 0, 71);
            si_NP_1459620739 = __1459621547["Field1"];
            ms_NP_1459620734.retStack.top = __1459621547["Field2"];
            ms_NP_1459620734.capStack.top = __1459621547["Field3"];
            ms_NP_1459620734.precStack.top = __1459621547["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          case 39:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 40;
            break;
          case 40:
            simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
            if ((0 < ms_NP_1459620734.backStack.top)) {
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var tHEX60gensym281_1459621651 = nimCopy(null, ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], NTI1577058308);
            var __1459621652 = {Field0: tHEX60gensym281_1459621651.ip, Field1: tHEX60gensym281_1459621651.si, Field2: tHEX60gensym281_1459621651.rp, Field3: tHEX60gensym281_1459621651.cp, Field4: tHEX60gensym281_1459621651.pp};
            ip_NP_1459620738 = chckRange(__1459621652["Field0"], 0, 71);
            si_NP_1459620739 = __1459621652["Field1"];
            ms_NP_1459620734.retStack.top = __1459621652["Field2"];
            ms_NP_1459620734.capStack.top = __1459621652["Field3"];
            ms_NP_1459620734.precStack.top = __1459621652["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          case 41:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_1459620739, 0), ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            ip_NP_1459620738 = 42;
            break;
          case 42:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 57, si: addInt(si_NP_1459620739, 0), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 43;
            break;
          case 43:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet39[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 44;
            }
            else {
              ip_NP_1459620738 = 46;
            }
            
            break;
          case 44:
            ip_NP_1459620738 = 56;
            break;
          case 45:
            ip_NP_1459620738 = 46;
            break;
          case 46:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 91))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 47;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 47:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 55, si: addInt(si_NP_1459620739, 0), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 48;
            break;
          case 48:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet40[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 49;
            }
            else {
              ip_NP_1459620738 = 51;
            }
            
            break;
          case 49:
            ip_NP_1459620738 = 54;
            break;
          case 50:
            ip_NP_1459620738 = 51;
            break;
          case 51:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 91))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 52;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 52:
            if (((ms_NP_1459620734.retStack.frames).length <= ms_NP_1459620734.retStack.top)) {
            grow_1593835610(ms_NP_1459620734.retStack);
            }
            
            ms_NP_1459620734.retStack.frames[chckIndx(ms_NP_1459620734.retStack.top, 0, (ms_NP_1459620734.retStack.frames).length - 1)] = addInt(ip_NP_1459620738, 1);
            ms_NP_1459620734.retStack.top = addInt(ms_NP_1459620734.retStack.top, 1);
            ip_NP_1459620738 = 62;
            break;
          case 53:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 93))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 54;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 54:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 47;
            break;
          case 55:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 93))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 56;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 56:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 42;
            break;
          case 57:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459620739, ck: 0, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            ip_NP_1459620738 = 58;
            break;
          case 58:
            if (((ms_NP_1459620734.capStack.frames).length <= ms_NP_1459620734.capStack.top)) {
            grow_1459618460(ms_NP_1459620734.capStack);
            }
            
            ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.capStack.frames[chckIndx(ms_NP_1459620734.capStack.top, 0, (ms_NP_1459620734.capStack.frames).length - 1)], {cft: 1, si: si_NP_1459620739, ck: 2, name: [], sPushed: []}, NTI1459618069);
            ms_NP_1459620734.capStack.top = addInt(ms_NP_1459620734.capStack.top, 1);
            var captureHEX60gensym299_1459621943 = collectCaptures_1526726831(fixCaptures_1459618778(s_NP_1459620735, ms_NP_1459620734.capStack, 1));
            if (fn_1459621944(captureHEX60gensym299_1459621943, ms_NP_1459620734, output_1459620736, output_1459620736_Idx)) {
            ip_NP_1459620738 = 59;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 59:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 29;
            break;
          case 60:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 61;
            break;
          case 61:
            if ((0 < ms_NP_1459620734.retStack.top)) {
            if (!((0 < ms_NP_1459620734.retStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.retStack.top > 0` "));
            }
            
            ms_NP_1459620734.retStack.top = subInt(ms_NP_1459620734.retStack.top, 1);
            ip_NP_1459620738 = chckRange(ms_NP_1459620734.retStack.frames[chckIndx(ms_NP_1459620734.retStack.top, 0, (ms_NP_1459620734.retStack.frames).length - 1)], 0, 71);
            }
            else {
              result_1459620737.ok = true;
              simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
              break Label1;
            }
            
            break;
          case 62:
            if (((ms_NP_1459620734.backStack.frames).length <= ms_NP_1459620734.backStack.top)) {
            grow_1459618224(ms_NP_1459620734.backStack);
            }
            
            ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)] = nimCopy(ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], {ip: 70, si: addInt(si_NP_1459620739, 0), rp: ms_NP_1459620734.retStack.top, cp: ms_NP_1459620734.capStack.top, pp: ms_NP_1459620734.precStack.top}, NTI1577058308);
            ms_NP_1459620734.backStack.top = addInt(ms_NP_1459620734.backStack.top, 1);
            ip_NP_1459620738 = 63;
            break;
          case 63:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (ConstSet42[s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)]] != undefined))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 64;
            }
            else {
              ip_NP_1459620738 = 66;
            }
            
            break;
          case 64:
            ip_NP_1459620738 = 69;
            break;
          case 65:
            ip_NP_1459620738 = 66;
            break;
          case 66:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 91))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 67;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 67:
            if (((ms_NP_1459620734.retStack.frames).length <= ms_NP_1459620734.retStack.top)) {
            grow_1593835610(ms_NP_1459620734.retStack);
            }
            
            ms_NP_1459620734.retStack.frames[chckIndx(ms_NP_1459620734.retStack.top, 0, (ms_NP_1459620734.retStack.frames).length - 1)] = addInt(ip_NP_1459620738, 1);
            ms_NP_1459620734.retStack.top = addInt(ms_NP_1459620734.retStack.top, 1);
            ip_NP_1459620738 = 62;
            break;
          case 68:
            if (((si_NP_1459620739 < (s_NP_1459620735).length) && (s_NP_1459620735[chckIndx(si_NP_1459620739, 0, (s_NP_1459620735).length - 1)] == 93))) {
            si_NP_1459620739 = addInt(si_NP_1459620739, 1);
            ip_NP_1459620738 = 69;
            }
            else {
              ip_NP_1459620738 = 71;
            }
            
            break;
          case 69:
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var _ = ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)];
            ip_NP_1459620738 = 62;
            break;
          case 70:
            if ((0 < ms_NP_1459620734.retStack.top)) {
            if (!((0 < ms_NP_1459620734.retStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.retStack.top > 0` "));
            }
            
            ms_NP_1459620734.retStack.top = subInt(ms_NP_1459620734.retStack.top, 1);
            ip_NP_1459620738 = chckRange(ms_NP_1459620734.retStack.frames[chckIndx(ms_NP_1459620734.retStack.top, 0, (ms_NP_1459620734.retStack.frames).length - 1)], 0, 71);
            }
            else {
              result_1459620737.ok = true;
              simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
              break Label1;
            }
            
            break;
          case 71:
            simax_NP_1459620740 = nimMax(simax_NP_1459620740, si_NP_1459620739);
            if ((0 < ms_NP_1459620734.backStack.top)) {
            if (!((0 < ms_NP_1459620734.backStack.top))) {
            failedAssertImpl_218103864(makeNimstrLit("stack.nim(36, 10) `ms_NP.backStack.top > 0` "));
            }
            
            ms_NP_1459620734.backStack.top = subInt(ms_NP_1459620734.backStack.top, 1);
            var tHEX60gensym312_1459622414 = nimCopy(null, ms_NP_1459620734.backStack.frames[chckIndx(ms_NP_1459620734.backStack.top, 0, (ms_NP_1459620734.backStack.frames).length - 1)], NTI1577058308);
            var __1459622415 = {Field0: tHEX60gensym312_1459622414.ip, Field1: tHEX60gensym312_1459622414.si, Field2: tHEX60gensym312_1459622414.rp, Field3: tHEX60gensym312_1459622414.cp, Field4: tHEX60gensym312_1459622414.pp};
            ip_NP_1459620738 = chckRange(__1459622415["Field0"], 0, 71);
            si_NP_1459620739 = __1459622415["Field1"];
            ms_NP_1459620734.retStack.top = __1459622415["Field2"];
            ms_NP_1459620734.capStack.top = __1459622415["Field3"];
            ms_NP_1459620734.precStack.top = __1459622415["Field4"];
            }
            else {
              break Label1;
            }
            
            break;
          }
        }
    } while (false);
    ms_NP_1459620734.ip = ip_NP_1459620738;
    ms_NP_1459620734.si = si_NP_1459620739;
    ms_NP_1459620734.simax = simax_NP_1459620740;
    result_1459620737.matchLen = ms_NP_1459620734.si;
    result_1459620737.matchMax = ms_NP_1459620734.simax;
      if (!result_1459620737.ok) Temporary7 = false; else {        Temporary7 = (0 < ms_NP_1459620734.capStack.top);      }    if (Temporary7) {
    result_1459620737.cs = nimCopy(result_1459620737.cs, fixCaptures_1459618778(s_NP_1459620735, ms_NP_1459620734.capStack, 0), NTI1526726730);
    }
    

  return result_1459620737;

}

function isNimException_33556520() {
    return lastJSError && lastJSError.m_type;

  
}

function parseXidocArguments_1459622458(body_1459622459) {
    var Temporary2;

  var result_1459622460 = [[]];

  BeforeRet: do {
++excHandler;
    Temporary2 = framePtr;
    try {
    if (eqStrings(body_1459622459, [])) {
    result_1459622460[0] = nimCopy(null, newSeq_452985301(0), NTI452985127);
    break BeforeRet;
    }
    
    if (!(match_1459622468(xidocArgumentParser_1459622439, body_1459622459, result_1459622460, 0).ok)) {
    raiseException({message: makeNimstrLit("Parse error"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1543503913))) {
    raiseException({message: makeNimstrLit("Parse error"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary2;
    }
  } while (false);

  return result_1459622460[0];

}

function some_1258294850(val_1258294852) {
  var result_1258294857 = ({val: [], has: false});

    result_1258294857.has = true;
    result_1258294857.val = nimCopy(null, val_1258294852, NTI33554439);

  return result_1258294857;

}

function none_1258294859() {
  var result_1258294866 = ({val: [], has: false});

  return result_1258294866;

}

function HEX5BHEX5D_1258293496(s_1258293498, i_1258293499) {
  var result_1258293500 = [];

    result_1258293500 = nimCopy(null, s_1258293498[chckIndx(subInt((s_1258293498).length, i_1258293499), 0, (s_1258293498).length - 1)], NTI33554439);

  return result_1258293500;

}

function isSome_1258294872(self_1258294874) {
  var result_1258294875 = false;

    result_1258294875 = self_1258294874.has;

  return result_1258294875;

}

function isNone_1258294915(self_1258294917) {
  var result_1258294918 = false;

    result_1258294918 = !(self_1258294917.has);

  return result_1258294918;

}

function get_1258294907(self_1258294909) {
  var result_1258294910 = null;
  var result_1258294910_Idx = 0;

    if (isNone_1258294915(self_1258294909)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1509949460, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1258294910 = self_1258294909; result_1258294910_Idx = "val";

  return [result_1258294910, result_1258294910_Idx];

}

function mathCommands_1258295030(doc_1258295031) {
    
function HEX3Aanonymous_1258295044(arg_1258295038) {
      var result_1258295045 = ({rendered: false, str: []});

        var arg_1258295046 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258295038, true, true, ConstSet33));
        var fmtRes_1258295047 = [mnewString(0)];
        fmtRes_1258295047[0].push.apply(fmtRes_1258295047[0], makeNimstrLit("["));;
        formatValue_1191182498(fmtRes_1258295047, 0, arg_1258295046, []);
        fmtRes_1258295047[0].push.apply(fmtRes_1258295047[0], makeNimstrLit("]"));;
        result_1258295045 = nimCopy(result_1258295045, {rendered: false, str: nimCopy(null, fmtRes_1258295047[0], NTI33554439)}, NTI1476395013);

      return result_1258295045;

    }
    
function HEX3Aanonymous_1258295101(arg_1258295094) {
          var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;

      var result_1258295102 = ({rendered: false, str: []});

        var args_1258295095 = parseXidocArguments_1459622458(arg_1258295094);
          if (((args_1258295095).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258295095).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("/"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258295095).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258295095).length, 1))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258295031, args_1258295095[chckIndx(0, 0, (args_1258295095).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var a_1258295125 = nimCopy(null, Temporary2, NTI1258293149);
        var b_1258295130 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295095, 1));
        if (isSome_1258294872(a_1258295125)) {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{$1}{$2}"), [nimCopy(null, (Temporary4 = get_1258294907(a_1258295125), Temporary4)[0][Temporary4[1]], NTI33554439), nimCopy(null, b_1258295130, NTI33554439)]);
        }
        else {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{1}{$1}"), [nimCopy(null, b_1258295130, NTI33554439)]);
        }
        
        result_1258295102 = nimCopy(result_1258295102, {rendered: false, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258295102;

    }
    
function HEX3Aanonymous_1258295205(arg_1258295199) {
      var result_1258295206 = ({rendered: false, str: []});

        var arg_1258295207 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258295199, true, true, ConstSet43));
        result_1258295206 = nimCopy(result_1258295206, {rendered: false, str: nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\left($1\\right)"), arg_1258295207), NTI33554439)}, NTI1476395013);

      return result_1258295206;

    }
    
function HEX3Aanonymous_1258295260(arg_1258295254) {
      var result_1258295261 = ({rendered: false, str: []});

        var arg_1258295262 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258295254, true, true, ConstSet44));
        result_1258295261 = nimCopy(result_1258295261, {rendered: false, str: nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\left[$1\\right]"), arg_1258295262), NTI33554439)}, NTI1476395013);

      return result_1258295261;

    }
    
function HEX3Aanonymous_1258295315(arg_1258295309) {
      var result_1258295316 = ({rendered: false, str: []});

        var arg_1258295317 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258295309, true, true, ConstSet45));
        result_1258295316 = nimCopy(result_1258295316, {rendered: false, str: nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\left\\{$1\\right\\}"), arg_1258295317), NTI33554439)}, NTI1476395013);

      return result_1258295316;

    }
    
function HEX3Aanonymous_1258295370(arg_1258295364) {
      var result_1258295371 = ({rendered: false, str: []});

        var arg_1258295372 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258295364, true, true, ConstSet46));
        result_1258295371 = nimCopy(result_1258295371, {rendered: false, str: nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\left\\langle $1\\right\\rangle"), arg_1258295372), NTI33554439)}, NTI1476395013);

      return result_1258295371;

    }
    
function HEX3Aanonymous_1258295426(arg_1258295419) {
          var Temporary1;

      var result_1258295427 = ({rendered: false, str: []});

        var args_1258295420 = parseXidocArguments_1459622458(arg_1258295419);
          if (((args_1258295420).length < 1)) Temporary1 = true; else {            Temporary1 = (1 < (args_1258295420).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("dd"), makeNimstrLit("1"), makeNimstrLit("1"), HEX24_335544323((args_1258295420).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var x_1258295441 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295420, 1));
        result_1258295427 = nimCopy(result_1258295427, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("{\\mathrm d$1}"), [nimCopy(null, x_1258295441, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258295427;

    }
    
function HEX3Aanonymous_1258295495(arg_1258295488) {
          var Temporary1;

      var result_1258295496 = ({rendered: false, str: []});

        var args_1258295489 = parseXidocArguments_1459622458(arg_1258295488);
          if (((args_1258295489).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258295489).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("dd^"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258295489).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var n_1258295510 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295489, 2));
        var x_1258295515 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295489, 1));
        result_1258295496 = nimCopy(result_1258295496, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("{\\mathrm d^{$1}$2}"), [nimCopy(null, n_1258295510, NTI33554439), nimCopy(null, x_1258295515, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258295496;

    }
    
function HEX3Aanonymous_1258295569(arg_1258295562) {
          var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;

      var result_1258295570 = ({rendered: false, str: []});

        var args_1258295563 = parseXidocArguments_1459622458(arg_1258295562);
          if (((args_1258295563).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258295563).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("dv"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258295563).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258295563).length, 1))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258295031, args_1258295563[chckIndx(0, 0, (args_1258295563).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var f_1258295593 = nimCopy(null, Temporary2, NTI1258293149);
        var x_1258295598 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295563, 1));
        if (isSome_1258294872(f_1258295593)) {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d$1}{\\mathrm d$2}"), [nimCopy(null, (Temporary4 = get_1258294907(f_1258295593), Temporary4)[0][Temporary4[1]], NTI33554439), nimCopy(null, x_1258295598, NTI33554439)]);
        }
        else {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d}{\\mathrm d$1}"), [nimCopy(null, x_1258295598, NTI33554439)]);
        }
        
        result_1258295570 = nimCopy(result_1258295570, {rendered: false, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258295570;

    }
    
function HEX3Aanonymous_1258295674(arg_1258295667) {
          var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;

      var result_1258295675 = ({rendered: false, str: []});

        var args_1258295668 = parseXidocArguments_1459622458(arg_1258295667);
          if (((args_1258295668).length < 2)) Temporary1 = true; else {            Temporary1 = (3 < (args_1258295668).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("dv^"), makeNimstrLit("2"), makeNimstrLit("3"), HEX24_335544323((args_1258295668).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var n_1258295685 = expandStr_1442840595(doc_1258295031, args_1258295668[chckIndx(0, 0, (args_1258295668).length - 1)]);
        if ((0 < subInt((args_1258295668).length, 2))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258295031, args_1258295668[chckIndx(1, 0, (args_1258295668).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var f_1258295699 = nimCopy(null, Temporary2, NTI1258293149);
        var x_1258295704 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295668, 1));
        if (isSome_1258294872(f_1258295699)) {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d^{$1}$2}{\\mathrm d$3^{$1}}"), [nimCopy(null, n_1258295685, NTI33554439), nimCopy(null, (Temporary4 = get_1258294907(f_1258295699), Temporary4)[0][Temporary4[1]], NTI33554439), nimCopy(null, x_1258295704, NTI33554439)]);
        }
        else {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d^{$1}}{\\mathrm d$2^{$1}}"), [nimCopy(null, n_1258295685, NTI33554439), nimCopy(null, x_1258295704, NTI33554439)]);
        }
        
        result_1258295675 = nimCopy(result_1258295675, {rendered: false, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258295675;

    }
    
function HEX3Aanonymous_1258295780(arg_1258295773) {
          var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;

      var result_1258295781 = ({rendered: false, str: []});

        var args_1258295774 = parseXidocArguments_1459622458(arg_1258295773);
          if (((args_1258295774).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258295774).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("pdv"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258295774).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258295774).length, 1))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258295031, args_1258295774[chckIndx(0, 0, (args_1258295774).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var f_1258295804 = nimCopy(null, Temporary2, NTI1258293149);
        var x_1258295809 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295774, 1));
        if (isSome_1258294872(f_1258295804)) {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial $1}{\\partial $2}"), [nimCopy(null, (Temporary4 = get_1258294907(f_1258295804), Temporary4)[0][Temporary4[1]], NTI33554439), nimCopy(null, x_1258295809, NTI33554439)]);
        }
        else {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial}{\\partial $1}"), [nimCopy(null, x_1258295809, NTI33554439)]);
        }
        
        result_1258295781 = nimCopy(result_1258295781, {rendered: false, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258295781;

    }
    
function HEX3Aanonymous_1258295885(arg_1258295878) {
          var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;

      var result_1258295886 = ({rendered: false, str: []});

        var args_1258295879 = parseXidocArguments_1459622458(arg_1258295878);
          if (((args_1258295879).length < 2)) Temporary1 = true; else {            Temporary1 = (3 < (args_1258295879).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("pdv^"), makeNimstrLit("2"), makeNimstrLit("3"), HEX24_335544323((args_1258295879).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var n_1258295896 = expandStr_1442840595(doc_1258295031, args_1258295879[chckIndx(0, 0, (args_1258295879).length - 1)]);
        if ((0 < subInt((args_1258295879).length, 2))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258295031, args_1258295879[chckIndx(1, 0, (args_1258295879).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var f_1258295910 = nimCopy(null, Temporary2, NTI1258293149);
        var x_1258295915 = expandStr_1442840595(doc_1258295031, HEX5BHEX5D_1258293496(args_1258295879, 1));
        if (isSome_1258294872(f_1258295910)) {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial^{$1}$2}{\\partial $3^{$1}}"), [nimCopy(null, n_1258295896, NTI33554439), nimCopy(null, (Temporary4 = get_1258294907(f_1258295910), Temporary4)[0][Temporary4[1]], NTI33554439), nimCopy(null, x_1258295915, NTI33554439)]);
        }
        else {
        Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial^{$1}}{\\partial $2^{$1}}"), [nimCopy(null, n_1258295896, NTI33554439), nimCopy(null, x_1258295915, NTI33554439)]);
        }
        
        result_1258295886 = nimCopy(result_1258295886, {rendered: false, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258295886;

    }
    
function HEX3Aanonymous_1258295990(arg_1258295984) {
      var result_1258295991 = ({rendered: false, str: []});

        var arg_1258295992 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258295984, true, true, ConstSet47));
        result_1258295991 = nimCopy(result_1258295991, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{matrix}$1\\end{matrix}"), [nimCopy(null, arg_1258295992, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258295991;

    }
    
function HEX3Aanonymous_1258296045(arg_1258296039) {
      var result_1258296046 = ({rendered: false, str: []});

        var arg_1258296047 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258296039, true, true, ConstSet48));
        result_1258296046 = nimCopy(result_1258296046, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{pmatrix}$1\\end{pmatrix}"), [nimCopy(null, arg_1258296047, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258296046;

    }
    
function HEX3Aanonymous_1258296100(arg_1258296094) {
      var result_1258296101 = ({rendered: false, str: []});

        var arg_1258296102 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258296094, true, true, ConstSet49));
        result_1258296101 = nimCopy(result_1258296101, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{bmatrix}$1\\end{bmatrix}"), [nimCopy(null, arg_1258296102, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258296101;

    }
    
function HEX3Aanonymous_1258296155(arg_1258296149) {
      var result_1258296156 = ({rendered: false, str: []});

        var arg_1258296157 = expandStr_1442840595(doc_1258295031, nsuStrip(arg_1258296149, true, true, ConstSet50));
        result_1258296156 = nimCopy(result_1258296156, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{vmatrix}$1\\end{vmatrix}"), [nimCopy(null, arg_1258296157, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258296156;

    }

  var result_1258295034 = ({data: [], counter: 0});

    var commands_1258295037 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("_"), HEX3Aanonymous_1258295044);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("/"), HEX3Aanonymous_1258295101);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("."), HEX3Aanonymous_1258295205);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("()"), HEX3Aanonymous_1258295260);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("{}"), HEX3Aanonymous_1258295315);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("<>"), HEX3Aanonymous_1258295370);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("dd"), HEX3Aanonymous_1258295426);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("dd^"), HEX3Aanonymous_1258295495);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("dv"), HEX3Aanonymous_1258295569);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("dv^"), HEX3Aanonymous_1258295674);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("pdv"), HEX3Aanonymous_1258295780);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("pdv^"), HEX3Aanonymous_1258295885);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("mat"), HEX3Aanonymous_1258295990);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit(".mat"), HEX3Aanonymous_1258296045);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("(mat)"), HEX3Aanonymous_1258296100);
    HEX5BHEX5DHEX3D_1258293550(commands_1258295037[0], makeNimstrLit("|mat|"), HEX3Aanonymous_1258296155);
    result_1258295034 = nimCopy(result_1258295034, commands_1258295037[0], NTI1476395041);

  return result_1258295034;

}

function slotsNeeded_1107296305(count_1107296306) {
  var result_1107296307 = 0;

    result_1107296307 = nextPowerOfTwo_671088843(addInt(divInt(mulInt(count_1107296306, 3), 2), 4));

  return result_1107296307;

}

function isFilled_1107296294(hcode_1107296295) {
  var result_1107296296 = false;

    result_1107296296 = !((hcode_1107296295 == 0));

  return result_1107296296;

}

function nextTry_1107296297(h_1107296298, maxHash_1107296299) {
  var result_1107296300 = 0;

    result_1107296300 = (addInt(h_1107296298, 1) & maxHash_1107296299);

  return result_1107296300;

}

function rawGet_1258296335(t_1258296337, key_1258296338, hc_1258296339, hc_1258296339_Idx) {
            var Temporary3;

  var result_1258296340 = 0;

  BeforeRet: do {
    hc_1258296339[hc_1258296339_Idx] = hash_1124073894(key_1258296338);
    if ((hc_1258296339[hc_1258296339_Idx] == 0)) {
    hc_1258296339[hc_1258296339_Idx] = 314159265;
    }
    
    if (((t_1258296337.data).length == 0)) {
    result_1258296340 = -1;
    break BeforeRet;
    }
    
    var h_1258296402 = (hc_1258296339[hc_1258296339_Idx] & (t_1258296337.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1107296294(t_1258296337.data[chckIndx(h_1258296402, 0, (t_1258296337.data).length - 1)].Field0)) break Label2;
            if (!(t_1258296337.data[chckIndx(h_1258296402, 0, (t_1258296337.data).length - 1)].Field0 == hc_1258296339[hc_1258296339_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1258296337.data[chckIndx(h_1258296402, 0, (t_1258296337.data).length - 1)].Field2, key_1258296338);            }          if (Temporary3) {
          result_1258296340 = h_1258296402;
          break BeforeRet;
          }
          
          h_1258296402 = nextTry_1107296297(h_1258296402, (t_1258296337.data).length - 1);
        }
    } while (false);
    result_1258296340 = subInt(-1, h_1258296402);
  } while (false);

  return result_1258296340;

}

function mustRehash_1258296578(t_1258296580) {
  var result_1258296581 = false;

    if (!((t_1258296580.counter < (t_1258296580.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1258296581 = ((mulInt((t_1258296580.data).length, 2) < mulInt(t_1258296580.counter, 3)) || (subInt((t_1258296580.data).length, t_1258296580.counter) < 4));

  return result_1258296581;

}

function rawGetKnownHC_1258297073(t_1258297076, key_1258297077, hc_1258297078) {
  var result_1258297079 = 0;

  BeforeRet: do {
    if (((t_1258297076.data).length == 0)) {
    result_1258297079 = -1;
    break BeforeRet;
    }
    
    var h_1258297141 = (hc_1258297078 & (t_1258297076.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1107296294(t_1258297076.data[chckIndx(h_1258297141, 0, (t_1258297076.data).length - 1)].Field0)) break Label2;
          if (((t_1258297076.data[chckIndx(h_1258297141, 0, (t_1258297076.data).length - 1)].Field0 == hc_1258297078) && eqStrings(t_1258297076.data[chckIndx(h_1258297141, 0, (t_1258297076.data).length - 1)].Field2, key_1258297077))) {
          result_1258297079 = h_1258297141;
          break BeforeRet;
          }
          
          h_1258297141 = nextTry_1107296297(h_1258297141, (t_1258297076.data).length - 1);
        }
    } while (false);
    result_1258297079 = subInt(-1, h_1258297141);
  } while (false);

  return result_1258297079;

}

function rawInsert_1258297442(s_1258297444, data_1258297445, data_1258297445_Idx, key_1258297446, hc_1258297447, h_1258297448) {
    if (((data_1258297445[data_1258297445_Idx]).length == 0)) {
    var correctSizeHEX60gensym165_1258297508 = slotsNeeded_1107296305(64);
    s_1258297444.first = -1;
    s_1258297444.last = -1;
    s_1258297444.counter = 0;
    s_1258297444.data = new Array(chckRange(correctSizeHEX60gensym165_1258297508, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym165_1258297508, 0, 2147483647) ; ++i) { s_1258297444.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    data_1258297445[data_1258297445_Idx][chckIndx(h_1258297448, 0, (data_1258297445[data_1258297445_Idx]).length - 1)].Field2 = nimCopy(null, key_1258297446, NTI33554439);
    data_1258297445[data_1258297445_Idx][chckIndx(h_1258297448, 0, (data_1258297445[data_1258297445_Idx]).length - 1)].Field0 = hc_1258297447;
    data_1258297445[data_1258297445_Idx][chckIndx(h_1258297448, 0, (data_1258297445[data_1258297445_Idx]).length - 1)].Field1 = -1;
    if ((s_1258297444.first < 0)) {
    s_1258297444.first = h_1258297448;
    }
    
    if ((0 <= s_1258297444.last)) {
    data_1258297445[data_1258297445_Idx][chckIndx(s_1258297444.last, 0, (data_1258297445[data_1258297445_Idx]).length - 1)].Field1 = h_1258297448;
    }
    
    s_1258297444.last = h_1258297448;

  
}

function enlarge_1258296772(s_1258296774) {
    var n_1258296776 = [];
    n_1258296776 = new Array(chckRange(mulInt((s_1258296774.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_1258296774.data).length, 2), 0, 2147483647) ; ++i) { n_1258296776[i] = {Field0: 0, Field1: 0, Field2: []}; }    var h_1258296839 = s_1258296774.first;
    s_1258296774.first = -1;
    s_1258296774.last = -1;
    var Temporary1 = s_1258296774.data; s_1258296774.data = n_1258296776; n_1258296776 = Temporary1;    Label2: do {
        Label3: while (true) {
        if (!(0 <= h_1258296839)) break Label3;
          var nxt_1258296901 = n_1258296776[chckIndx(h_1258296839, 0, (n_1258296776).length - 1)].Field1;
          if (isFilled_1107296294(n_1258296776[chckIndx(h_1258296839, 0, (n_1258296776).length - 1)].Field0)) {
          var j_1258297316 = subInt(-1, rawGetKnownHC_1258297073(s_1258296774, n_1258296776[chckIndx(h_1258296839, 0, (n_1258296776).length - 1)].Field2, n_1258296776[chckIndx(h_1258296839, 0, (n_1258296776).length - 1)].Field0));
          rawInsert_1258297442(s_1258296774, s_1258296774, "data", n_1258296776[chckIndx(h_1258296839, 0, (n_1258296776).length - 1)].Field2, n_1258296776[chckIndx(h_1258296839, 0, (n_1258296776).length - 1)].Field0, j_1258297316);
          }
          
          h_1258296839 = nxt_1258296901;
        }
    } while (false);

  
}

function incl_1258296248(s_1258296250, key_1258296251) {
    if (((s_1258296250.data).length == 0)) {
    var correctSizeHEX60gensym156_1258296312 = slotsNeeded_1107296305(64);
    s_1258296250.first = -1;
    s_1258296250.last = -1;
    s_1258296250.counter = 0;
    s_1258296250.data = new Array(chckRange(correctSizeHEX60gensym156_1258296312, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_1258296312, 0, 2147483647) ; ++i) { s_1258296250.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_1258296327 = [0];
    var index_1258296577 = rawGet_1258296335(s_1258296250, key_1258296251, hc_1258296327, 0);
    if ((index_1258296577 < 0)) {
    if (mustRehash_1258296578(s_1258296250)) {
    enlarge_1258296772(s_1258296250);
    index_1258296577 = rawGetKnownHC_1258297073(s_1258296250, key_1258296251, hc_1258296327[0]);
    }
    
    rawInsert_1258297442(s_1258296250, s_1258296250, "data", key_1258296251, hc_1258296327[0], subInt(-1, index_1258296577));
    s_1258296250.counter = addInt(s_1258296250.counter, 1);
    }
    

  
}

function acquire_1358954563(lock_1358954564) {
  
}

function addAtExit_1342177296(quitProc_1342177298) {
            window.onbeforeunload = quitProc_1342177298;
      

  
}

function release_1358954565(lock_1358954566) {
  
}

function callClosures_1342177317() {
    var Temporary2;
              var Temporary6;
              var Temporary7;

    acquire_1358954563(gFunsLock_1342177294[0]);
    Temporary2 = framePtr;
    try {
    Label3: do {
      var i_1342177327 = 0;
      var colontmp__486542151 = 0;
      colontmp__486542151 = subInt((gFuns_1342177295[0]).length, 1);
      var res_486542152 = colontmp__486542151;
      Label4: do {
          Label5: while (true) {
          if (!(0 <= res_486542152)) break Label5;
            i_1342177327 = res_486542152;
            var fun_1342177328 = nimCopy(null, gFuns_1342177295[0][chckIndx(i_1342177327, 0, (gFuns_1342177295[0]).length - 1)], NTI1342177284);
            switch (fun_1342177328.kind) {
            case 0:
              var Temporary6 = fun_1342177328;
              if (ConstSet51[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fun1\' is not accessible for type \'Fun\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1342177283)); }
              Temporary6.fun1();
              break;
            case 1:
              var Temporary7 = fun_1342177328;
              if (ConstSet52[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fun2\' is not accessible for type \'Fun\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1342177283)); }
              Temporary7.fun2();
              break;
            }
            res_486542152 = subInt(res_486542152, 1);
          }
      } while (false);
    } while (false);
    } finally {
    framePtr = Temporary2;
    release_1358954565(gFunsLock_1342177294[0]);
    }

  
}

function addExitProc_1342177346(cl_1342177348) {
    var Temporary2;

    acquire_1358954563(gFunsLock_1342177294[0]);
    Temporary2 = framePtr;
    try {
    if (((gFuns_1342177295[0]).length == 0)) {
    addAtExit_1342177296(callClosures_1342177317);
    }
    
    gFuns_1342177295[0].push({kind: 0, fun1: cl_1342177348, fun2: null});;
    } finally {
    framePtr = Temporary2;
    release_1358954565(gFunsLock_1342177294[0]);
    }

  
}

function renderMathKatex_1325400078(math_1325400079, displayMode_1325400080) {
    
function HEX3Aanonymous_1325400085() {
        duk_destroy_heap(ctx_1325400082[0]);

      
    }

  var result_1325400081 = [];

    if (globalThis.ctx_1325400082 === undefined) {
      globalThis.ctx_1325400082 = [null];
    }
    if (globalThis.alreadyExecutedHEX60gensym0_1325400084 === undefined) {
      globalThis.alreadyExecutedHEX60gensym0_1325400084 = [false];
    }
    if (!(alreadyExecutedHEX60gensym0_1325400084[0])) {
    alreadyExecutedHEX60gensym0_1325400084[0] = true;
    ctx_1325400082[0] = duk_create_heap_default();
    addExitProc_1342177346(HEX3Aanonymous_1325400085);
    duk_eval_string(ctx_1325400082[0], "!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.katex=t():e.katex=t()}(\"undefined\"!=typeof self?self:this,(function(){return function(){\"use strict\";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},t={};e.d(t,{default:function(){return Zn}});var r=function e(t,r){this.position=void 0;var n,a=\"KaTeX parse error: \"+t,i=r&&r.loc;if(i&&i.start<=i.end){var o=i.lexer.input;n=i.start;var s=i.end;n===o.length?a+=\" at end of input: \":a+=\" at position \"+(n+1)+\": \";var l=o.slice(n,s).replace(/[^]/g,\"$&\\u0332\");a+=(n>15?\"\\u2026\"+o.slice(n-15,n):o.slice(0,n))+l+(s+15<o.length?o.slice(s,s+15)+\"\\u2026\":o.slice(s))}var h=new Error(a);return h.name=\"ParseError\",h.__proto__=e.prototype,h.position=n,h};r.prototype.__proto__=Error.prototype;var n=r,a=/([A-Z])/g,i={\"&\":\"&amp;\",\">\":\"&gt;\",\"<\":\"&lt;\",'\"':\"&quot;\",\"'\":\"&#x27;\"},o=/[&><\"']/g;var s=function e(t){return\"ordgroup\"===t.type||\"color\"===t.type?1===t.body.length?e(t.body[0]):t:\"font\"===t.type?e(t.body):t},l={contains:function(e,t){return-1!==e.indexOf(t)},deflt:function(e,t){return void 0===e?t:e},escape:function(e){return String(e).replace(o,(function(e){return i[e]}))},hyphenate:function(e){return e.replace(a,\"-$1\").toLowerCase()},getBaseElem:s,isCharacterBox:function(e){var t=s(e);return\"mathord\"===t.type||\"textord\"===t.type||\"atom\"===t.type},protocolFromUrl:function(e){var t=/^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(e);return null!=t?t[1]:\"_relative\"}},h=function(){function e(e){this.displayMode=void 0,this.output=void 0,this.leqno=void 0,this.fleqn=void 0,this.throwOnError=void 0,this.errorColor=void 0,this.macros=void 0,this.minRuleThickness=void 0,this.colorIsTextColor=void 0,this.strict=void 0,this.trust=void 0,this.maxSize=void 0,this.maxExpand=void 0,this.globalGroup=void 0,e=e||{},this.displayMode=l.deflt(e.displayMode,!1),this.output=l.deflt(e.output,\"htmlAndMathml\"),this.leqno=l.deflt(e.leqno,!1),this.fleqn=l.deflt(e.fleqn,!1),this.throwOnError=l.deflt(e.throwOnError,!0),this.errorColor=l.deflt(e.errorColor,\"#cc0000\"),this.macros=e.macros||{},this.minRuleThickness=Math.max(0,l.deflt(e.minRuleThickness,0)),this.colorIsTextColor=l.deflt(e.colorIsTextColor,!1),this.strict=l.deflt(e.strict,\"warn\"),this.trust=l.deflt(e.trust,!1),this.maxSize=Math.max(0,l.deflt(e.maxSize,1/0)),this.maxExpand=Math.max(0,l.deflt(e.maxExpand,1e3)),this.globalGroup=l.deflt(e.globalGroup,!1)}var t=e.prototype;return t.reportNonstrict=function(e,t,r){var a=this.strict;if(\"function\"==typeof a&&(a=a(e,t,r)),a&&\"ignore\"!==a){if(!0===a||\"error\"===a)throw new n(\"LaTeX-incompatible input and strict mode is set to 'error': \"+t+\" [\"+e+\"]\",r);\"warn\"===a?\"undefined\"!=typeof console&&console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \"+t+\" [\"+e+\"]\"):\"undefined\"!=typeof console&&console.warn(\"LaTeX-incompatible input and strict mode is set to unrecognized '\"+a+\"': \"+t+\" [\"+e+\"]\")}},t.useStrictBehavior=function(e,t,r){var n=this.strict;if(\"function\"==typeof n)try{n=n(e,t,r)}catch(e){n=\"error\"}return!(!n||\"ignore\"===n)&&(!0===n||\"error\"===n||(\"warn\"===n?(\"undefined\"!=typeof console&&console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \"+t+\" [\"+e+\"]\"),!1):(\"undefined\"!=typeof console&&console.warn(\"LaTeX-incompatible input and strict mode is set to unrecognized '\"+n+\"': \"+t+\" [\"+e+\"]\"),!1)))},t.isTrusted=function(e){e.url&&!e.protocol&&(e.protocol=l.protocolFromUrl(e.url));var t=\"function\"==typeof this.trust?this.trust(e):this.trust;return Boolean(t)},e}(),m=function(){function e(e,t,r){this.id=void 0,this.size=void 0,this.cramped=void 0,this.id=e,this.size=t,this.cramped=r}var t=e.prototype;return t.sup=function(){return c[u[this.id]]},t.sub=function(){return c[p[this.id]]},t.fracNum=function(){return c[d[this.id]]},t.fracDen=function(){return c[f[this.id]]},t.cramp=function(){return c[g[this.id]]},t.text=function(){return c[v[this.id]]},t.isTight=function(){return this.size>=2},e}(),c=[new m(0,0,!1),new m(1,0,!0),new m(2,1,!1),new m(3,1,!0),new m(4,2,!1),new m(5,2,!0),new m(6,3,!1),new m(7,3,!0)],u=[4,5,4,5,6,7,6,7],p=[5,5,5,5,7,7,7,7],d=[2,3,4,5,6,7,6,7],f=[3,3,5,5,7,7,7,7],g=[1,1,3,3,5,5,7,7],v=[0,1,2,3,2,3,2,3],b={DISPLAY:c[0],TEXT:c[2],SCRIPT:c[4],SCRIPTSCRIPT:c[6]},y=[{name:\"latin\",blocks:[[256,591],[768,879]]},{name:\"cyrillic\",blocks:[[1024,1279]]},{name:\"armenian\",blocks:[[1328,1423]]},{name:\"brahmic\",blocks:[[2304,4255]]},{name:\"georgian\",blocks:[[4256,4351]]},{name:\"cjk\",blocks:[[12288,12543],[19968,40879],[65280,65376]]},{name:\"hangul\",blocks:[[44032,55215]]}];var x=[];function w(e){for(var t=0;t<x.length;t+=2)if(e>=x[t]&&e<=x[t+1])return!0;return!1}y.forEach((function(e){return e.blocks.forEach((function(e){return x.push.apply(x,e)}))}));var k=80,S={doubleleftarrow:\"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",doublerightarrow:\"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",leftarrow:\"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",leftbrace:\"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",leftbraceunder:\"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",leftgroup:\"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",leftgroupunder:\"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",leftharpoon:\"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",leftharpoonplus:\"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",leftharpoondown:\"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",leftharpoondownplus:\"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",lefthook:\"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",leftlinesegment:\"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",leftmapsto:\"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",leftToFrom:\"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",longequal:\"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",midbrace:\"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",midbraceunder:\"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",oiintSize1:\"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",oiintSize2:\"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",oiiintSize1:\"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",oiiintSize2:\"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",rightarrow:\"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",rightbrace:\"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",rightbraceunder:\"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",rightgroup:\"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",rightgroupunder:\"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",rightharpoon:\"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",rightharpoonplus:\"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",rightharpoondown:\"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",rightharpoondownplus:\"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",righthook:\"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",rightlinesegment:\"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",rightToFrom:\"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",twoheadleftarrow:\"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",twoheadrightarrow:\"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",tilde1:\"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",tilde2:\"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",tilde3:\"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",tilde4:\"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",vec:\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",widehat1:\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",widehat2:\"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",widehat3:\"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",widehat4:\"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",widecheck1:\"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",widecheck2:\"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",widecheck3:\"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",widecheck4:\"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",baraboveleftarrow:\"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",rightarrowabovebar:\"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",baraboveshortleftharpoon:\"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",rightharpoonaboveshortbar:\"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",shortbaraboveleftharpoon:\"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",shortrightharpoonabovebar:\"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"},M=function(){function e(e){this.children=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.children=e,this.classes=[],this.height=0,this.depth=0,this.maxFontSize=0,this.style={}}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){for(var e=document.createDocumentFragment(),t=0;t<this.children.length;t++)e.appendChild(this.children[t].toNode());return e},t.toMarkup=function(){for(var e=\"\",t=0;t<this.children.length;t++)e+=this.children[t].toMarkup();return e},t.toText=function(){var e=function(e){return e.toText()};return this.children.map(e).join(\"\")},e}(),z=function(e){return e.filter((function(e){return e})).join(\" \")},A=function(e,t,r){if(this.classes=e||[],this.attributes={},this.height=0,this.depth=0,this.maxFontSize=0,this.style=r||{},t){t.style.isTight()&&this.classes.push(\"mtight\");var n=t.getColor();n&&(this.style.color=n)}},T=function(e){var t=document.createElement(e);for(var r in t.className=z(this.classes),this.style)this.style.hasOwnProperty(r)&&(t.style[r]=this.style[r]);for(var n in this.attributes)this.attributes.hasOwnProperty(n)&&t.setAttribute(n,this.attributes[n]);for(var a=0;a<this.children.length;a++)t.appendChild(this.children[a].toNode());return t},B=function(e){var t=\"<\"+e;this.classes.length&&(t+=' class=\"'+l.escape(z(this.classes))+'\"');var r=\"\";for(var n in this.style)this.style.hasOwnProperty(n)&&(r+=l.hyphenate(n)+\":\"+this.style[n]+\";\");for(var a in r&&(t+=' style=\"'+l.escape(r)+'\"'),this.attributes)this.attributes.hasOwnProperty(a)&&(t+=\" \"+a+'=\"'+l.escape(this.attributes[a])+'\"');t+=\">\";for(var i=0;i<this.children.length;i++)t+=this.children[i].toMarkup();return t+=\"</\"+e+\">\"},N=function(){function e(e,t,r,n){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.width=void 0,this.maxFontSize=void 0,this.style=void 0,A.call(this,e,r,n),this.children=t||[]}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){return T.call(this,\"span\")},t.toMarkup=function(){return B.call(this,\"span\")},e}(),q=function(){function e(e,t,r,n){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,A.call(this,t,n),this.children=r||[],this.setAttribute(\"href\",e)}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){return T.call(this,\"a\")},t.toMarkup=function(){return B.call(this,\"a\")},e}(),C=function(){function e(e,t,r){this.src=void 0,this.alt=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.alt=t,this.src=e,this.classes=[\"mord\"],this.style=r}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){var e=document.createElement(\"img\");for(var t in e.src=this.src,e.alt=this.alt,e.className=\"mord\",this.style)this.style.hasOwnProperty(t)&&(e.style[t]=this.style[t]);return e},t.toMarkup=function(){var e=\"<img  src='\"+this.src+\" 'alt='\"+this.alt+\"' \",t=\"\";for(var r in this.style)this.style.hasOwnProperty(r)&&(t+=l.hyphenate(r)+\":\"+this.style[r]+\";\");return t&&(e+=' style=\"'+l.escape(t)+'\"'),e+=\"'/>\"},e}(),I={\"\\xee\":\"\\u0131\\u0302\",\"\\xef\":\"\\u0131\\u0308\",\"\\xed\":\"\\u0131\\u0301\",\"\\xec\":\"\\u0131\\u0300\"},R=function(){function e(e,t,r,n,a,i,o,s){this.text=void 0,this.height=void 0,this.depth=void 0,this.italic=void 0,this.skew=void 0,this.width=void 0,this.maxFontSize=void 0,this.classes=void 0,this.style=void 0,this.text=e,this.height=t||0,this.depth=r||0,this.italic=n||0,this.skew=a||0,this.width=i||0,this.classes=o||[],this.style=s||{},this.maxFontSize=0;var l=function(e){for(var t=0;t<y.length;t++)for(var r=y[t],n=0;n<r.blocks.length;n++){var a=r.blocks[n];if(e>=a[0]&&e<=a[1])return r.name}return null}(this.text.charCodeAt(0));l&&this.classes.push(l+\"_fallback\"),/[\\xee\\xef\\xed\\xec]/.test(this.text)&&(this.text=I[this.text])}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){var e=document.createTextNode(this.text),t=null;for(var r in this.italic>0&&((t=document.createElement(\"span\")).style.marginRight=this.italic+\"em\"),this.classes.length>0&&((t=t||document.createElement(\"span\")).className=z(this.classes)),this.style)this.style.hasOwnProperty(r)&&((t=t||document.createElement(\"span\")).style[r]=this.style[r]);return t?(t.appendChild(e),t):e},t.toMarkup=function(){var e=!1,t=\"<span\";this.classes.length&&(e=!0,t+=' class=\"',t+=l.escape(z(this.classes)),t+='\"');var r=\"\";for(var n in this.italic>0&&(r+=\"margin-right:\"+this.italic+\"em;\"),this.style)this.style.hasOwnProperty(n)&&(r+=l.hyphenate(n)+\":\"+this.style[n]+\";\");r&&(e=!0,t+=' style=\"'+l.escape(r)+'\"');var a=l.escape(this.text);return e?(t+=\">\",t+=a,t+=\"</span>\"):a},e}(),O=function(){function e(e,t){this.children=void 0,this.attributes=void 0,this.children=e||[],this.attributes=t||{}}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);for(var r=0;r<this.children.length;r++)e.appendChild(this.children[r].toNode());return e},t.toMarkup=function(){var e='<svg xmlns=\"http://www.w3.org/2000/svg\"';for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=\" \"+t+\"='\"+this.attributes[t]+\"'\");e+=\">\";for(var r=0;r<this.children.length;r++)e+=this.children[r].toMarkup();return e+=\"</svg>\"},e}(),E=function(){function e(e,t){this.pathName=void 0,this.alternate=void 0,this.pathName=e,this.alternate=t}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");return this.alternate?e.setAttribute(\"d\",this.alternate):e.setAttribute(\"d\",S[this.pathName]),e},t.toMarkup=function(){return this.alternate?\"<path d='\"+this.alternate+\"'/>\":\"<path d='\"+S[this.pathName]+\"'/>\"},e}(),H=function(){function e(e){this.attributes=void 0,this.attributes=e||{}}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS(\"http://www.w3.org/2000/svg\",\"line\");for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);return e},t.toMarkup=function(){var e=\"<line\";for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=\" \"+t+\"='\"+this.attributes[t]+\"'\");return e+=\"/>\"},e}();function L(e){if(e instanceof R)return e;throw new Error(\"Expected symbolNode but got \"+String(e)+\".\")}var D={\"AMS-Regular\":{32:[0,0,0,0,.25],65:[0,.68889,0,0,.72222],66:[0,.68889,0,0,.66667],67:[0,.68889,0,0,.72222],68:[0,.68889,0,0,.72222],69:[0,.68889,0,0,.66667],70:[0,.68889,0,0,.61111],71:[0,.68889,0,0,.77778],72:[0,.68889,0,0,.77778],73:[0,.68889,0,0,.38889],74:[.16667,.68889,0,0,.5],75:[0,.68889,0,0,.77778],76:[0,.68889,0,0,.66667],77:[0,.68889,0,0,.94445],78:[0,.68889,0,0,.72222],79:[.16667,.68889,0,0,.77778],80:[0,.68889,0,0,.61111],81:[.16667,.68889,0,0,.77778],82:[0,.68889,0,0,.72222],83:[0,.68889,0,0,.55556],84:[0,.68889,0,0,.66667],85:[0,.68889,0,0,.72222],86:[0,.68889,0,0,.72222],87:[0,.68889,0,0,1],88:[0,.68889,0,0,.72222],89:[0,.68889,0,0,.72222],90:[0,.68889,0,0,.66667],107:[0,.68889,0,0,.55556],160:[0,0,0,0,.25],165:[0,.675,.025,0,.75],174:[.15559,.69224,0,0,.94666],240:[0,.68889,0,0,.55556],295:[0,.68889,0,0,.54028],710:[0,.825,0,0,2.33334],732:[0,.9,0,0,2.33334],770:[0,.825,0,0,2.33334],771:[0,.9,0,0,2.33334],989:[.08167,.58167,0,0,.77778],1008:[0,.43056,.04028,0,.66667],8245:[0,.54986,0,0,.275],8463:[0,.68889,0,0,.54028],8487:[0,.68889,0,0,.72222],8498:[0,.68889,0,0,.55556],8502:[0,.68889,0,0,.66667],8503:[0,.68889,0,0,.44445],8504:[0,.68889,0,0,.66667],8513:[0,.68889,0,0,.63889],8592:[-.03598,.46402,0,0,.5],8594:[-.03598,.46402,0,0,.5],8602:[-.13313,.36687,0,0,1],8603:[-.13313,.36687,0,0,1],8606:[.01354,.52239,0,0,1],8608:[.01354,.52239,0,0,1],8610:[.01354,.52239,0,0,1.11111],8611:[.01354,.52239,0,0,1.11111],8619:[0,.54986,0,0,1],8620:[0,.54986,0,0,1],8621:[-.13313,.37788,0,0,1.38889],8622:[-.13313,.36687,0,0,1],8624:[0,.69224,0,0,.5],8625:[0,.69224,0,0,.5],8630:[0,.43056,0,0,1],8631:[0,.43056,0,0,1],8634:[.08198,.58198,0,0,.77778],8635:[.08198,.58198,0,0,.77778],8638:[.19444,.69224,0,0,.41667],8639:[.19444,.69224,0,0,.41667],8642:[.19444,.69224,0,0,.41667],8643:[.19444,.69224,0,0,.41667],8644:[.1808,.675,0,0,1],8646:[.1808,.675,0,0,1],8647:[.1808,.675,0,0,1],8648:[.19444,.69224,0,0,.83334],8649:[.1808,.675,0,0,1],8650:[.19444,.69224,0,0,.83334],8651:[.01354,.52239,0,0,1],8652:[.01354,.52239,0,0,1],8653:[-.13313,.36687,0,0,1],8654:[-.13313,.36687,0,0,1],8655:[-.13313,.36687,0,0,1],8666:[.13667,.63667,0,0,1],8667:[.13667,.63667,0,0,1],8669:[-.13313,.37788,0,0,1],8672:[-.064,.437,0,0,1.334],8674:[-.064,.437,0,0,1.334],8705:[0,.825,0,0,.5],8708:[0,.68889,0,0,.55556],8709:[.08167,.58167,0,0,.77778],8717:[0,.43056,0,0,.42917],8722:[-.03598,.46402,0,0,.5],8724:[.08198,.69224,0,0,.77778],8726:[.08167,.58167,0,0,.77778],8733:[0,.69224,0,0,.77778],8736:[0,.69224,0,0,.72222],8737:[0,.69224,0,0,.72222],8738:[.03517,.52239,0,0,.72222],8739:[.08167,.58167,0,0,.22222],8740:[.25142,.74111,0,0,.27778],8741:[.08167,.58167,0,0,.38889],8742:[.25142,.74111,0,0,.5],8756:[0,.69224,0,0,.66667],8757:[0,.69224,0,0,.66667],8764:[-.13313,.36687,0,0,.77778],8765:[-.13313,.37788,0,0,.77778],8769:[-.13313,.36687,0,0,.77778],8770:[-.03625,.46375,0,0,.77778],8774:[.30274,.79383,0,0,.77778],8776:[-.01688,.48312,0,0,.77778],8778:[.08167,.58167,0,0,.77778],8782:[.06062,.54986,0,0,.77778],8783:[.06062,.54986,0,0,.77778],8785:[.08198,.58198,0,0,.77778],8786:[.08198,.58198,0,0,.77778],8787:[.08198,.58198,0,0,.77778],8790:[0,.69224,0,0,.77778],8791:[.22958,.72958,0,0,.77778],8796:[.08198,.91667,0,0,.77778],8806:[.25583,.75583,0,0,.77778],8807:[.25583,.75583,0,0,.77778],8808:[.25142,.75726,0,0,.77778],8809:[.25142,.75726,0,0,.77778],8812:[.25583,.75583,0,0,.5],8814:[.20576,.70576,0,0,.77778],8815:[.20576,.70576,0,0,.77778],8816:[.30274,.79383,0,0,.77778],8817:[.30274,.79383,0,0,.77778],8818:[.22958,.72958,0,0,.77778],8819:[.22958,.72958,0,0,.77778],8822:[.1808,.675,0,0,.77778],8823:[.1808,.675,0,0,.77778],8828:[.13667,.63667,0,0,.77778],8829:[.13667,.63667,0,0,.77778],8830:[.22958,.72958,0,0,.77778],8831:[.22958,.72958,0,0,.77778],8832:[.20576,.70576,0,0,.77778],8833:[.20576,.70576,0,0,.77778],8840:[.30274,.79383,0,0,.77778],8841:[.30274,.79383,0,0,.77778],8842:[.13597,.63597,0,0,.77778],8843:[.13597,.63597,0,0,.77778],8847:[.03517,.54986,0,0,.77778],8848:[.03517,.54986,0,0,.77778],8858:[.08198,.58198,0,0,.77778],8859:[.08198,.58198,0,0,.77778],8861:[.08198,.58198,0,0,.77778],8862:[0,.675,0,0,.77778],8863:[0,.675,0,0,.77778],8864:[0,.675,0,0,.77778],8865:[0,.675,0,0,.77778],8872:[0,.69224,0,0,.61111],8873:[0,.69224,0,0,.72222],8874:[0,.69224,0,0,.88889],8876:[0,.68889,0,0,.61111],8877:[0,.68889,0,0,.61111],8878:[0,.68889,0,0,.72222],8879:[0,.68889,0,0,.72222],8882:[.03517,.54986,0,0,.77778],8883:[.03517,.54986,0,0,.77778],8884:[.13667,.63667,0,0,.77778],8885:[.13667,.63667,0,0,.77778],8888:[0,.54986,0,0,1.11111],8890:[.19444,.43056,0,0,.55556],8891:[.19444,.69224,0,0,.61111],8892:[.19444,.69224,0,0,.61111],8901:[0,.54986,0,0,.27778],8903:[.08167,.58167,0,0,.77778],8905:[.08167,.58167,0,0,.77778],8906:[.08167,.58167,0,0,.77778],8907:[0,.69224,0,0,.77778],8908:[0,.69224,0,0,.77778],8909:[-.03598,.46402,0,0,.77778],8910:[0,.54986,0,0,.76042],8911:[0,.54986,0,0,.76042],8912:[.03517,.54986,0,0,.77778],8913:[.03517,.54986,0,0,.77778],8914:[0,.54986,0,0,.66667],8915:[0,.54986,0,0,.66667],8916:[0,.69224,0,0,.66667],8918:[.0391,.5391,0,0,.77778],8919:[.0391,.5391,0,0,.77778],8920:[.03517,.54986,0,0,1.33334],8921:[.03517,.54986,0,0,1.33334],8922:[.38569,.88569,0,0,.77778],8923:[.38569,.88569,0,0,.77778],8926:[.13667,.63667,0,0,.77778],8927:[.13667,.63667,0,0,.77778],8928:[.30274,.79383,0,0,.77778],8929:[.30274,.79383,0,0,.77778],8934:[.23222,.74111,0,0,.77778],8935:[.23222,.74111,0,0,.77778],8936:[.23222,.74111,0,0,.77778],8937:[.23222,.74111,0,0,.77778],8938:[.20576,.70576,0,0,.77778],8939:[.20576,.70576,0,0,.77778],8940:[.30274,.79383,0,0,.77778],8941:[.30274,.79383,0,0,.77778],8994:[.19444,.69224,0,0,.77778],8995:[.19444,.69224,0,0,.77778],9416:[.15559,.69224,0,0,.90222],9484:[0,.69224,0,0,.5],9488:[0,.69224,0,0,.5],9492:[0,.37788,0,0,.5],9496:[0,.37788,0,0,.5],9585:[.19444,.68889,0,0,.88889],9586:[.19444,.74111,0,0,.88889],9632:[0,.675,0,0,.77778],9633:[0,.675,0,0,.77778],9650:[0,.54986,0,0,.72222],9651:[0,.54986,0,0,.72222],9654:[.03517,.54986,0,0,.77778],9660:[0,.54986,0,0,.72222],9661:[0,.54986,0,0,.72222],9664:[.03517,.54986,0,0,.77778],9674:[.11111,.69224,0,0,.66667],9733:[.19444,.69224,0,0,.94445],10003:[0,.69224,0,0,.83334],10016:[0,.69224,0,0,.83334],10731:[.11111,.69224,0,0,.66667],10846:[.19444,.75583,0,0,.61111],10877:[.13667,.63667,0,0,.77778],10878:[.13667,.63667,0,0,.77778],10885:[.25583,.75583,0,0,.77778],10886:[.25583,.75583,0,0,.77778],10887:[.13597,.63597,0,0,.77778],10888:[.13597,.63597,0,0,.77778],10889:[.26167,.75726,0,0,.77778],10890:[.26167,.75726,0,0,.77778],10891:[.48256,.98256,0,0,.77778],10892:[.48256,.98256,0,0,.77778],10901:[.13667,.63667,0,0,.77778],10902:[.13667,.63667,0,0,.77778],10933:[.25142,.75726,0,0,.77778],10934:[.25142,.75726,0,0,.77778],10935:[.26167,.75726,0,0,.77778],10936:[.26167,.75726,0,0,.77778],10937:[.26167,.75726,0,0,.77778],10938:[.26167,.75726,0,0,.77778],10949:[.25583,.75583,0,0,.77778],10950:[.25583,.75583,0,0,.77778],10955:[.28481,.79383,0,0,.77778],10956:[.28481,.79383,0,0,.77778],57350:[.08167,.58167,0,0,.22222],57351:[.08167,.58167,0,0,.38889],57352:[.08167,.58167,0,0,.77778],57353:[0,.43056,.04028,0,.66667],57356:[.25142,.75726,0,0,.77778],57357:[.25142,.75726,0,0,.77778],57358:[.41951,.91951,0,0,.77778],57359:[.30274,.79383,0,0,.77778],57360:[.30274,.79383,0,0,.77778],57361:[.41951,.91951,0,0,.77778],57366:[.25142,.75726,0,0,.77778],57367:[.25142,.75726,0,0,.77778],57368:[.25142,.75726,0,0,.77778],57369:[.25142,.75726,0,0,.77778],57370:[.13597,.63597,0,0,.77778],57371:[.13597,.63597,0,0,.77778]},\"Caligraphic-Regular\":{32:[0,0,0,0,.25],65:[0,.68333,0,.19445,.79847],66:[0,.68333,.03041,.13889,.65681],67:[0,.68333,.05834,.13889,.52653],68:[0,.68333,.02778,.08334,.77139],69:[0,.68333,.08944,.11111,.52778],70:[0,.68333,.09931,.11111,.71875],71:[.09722,.68333,.0593,.11111,.59487],72:[0,.68333,.00965,.11111,.84452],73:[0,.68333,.07382,0,.54452],74:[.09722,.68333,.18472,.16667,.67778],75:[0,.68333,.01445,.05556,.76195],76:[0,.68333,0,.13889,.68972],77:[0,.68333,0,.13889,1.2009],78:[0,.68333,.14736,.08334,.82049],79:[0,.68333,.02778,.11111,.79611],80:[0,.68333,.08222,.08334,.69556],81:[.09722,.68333,0,.11111,.81667],82:[0,.68333,0,.08334,.8475],83:[0,.68333,.075,.13889,.60556],84:[0,.68333,.25417,0,.54464],85:[0,.68333,.09931,.08334,.62583],86:[0,.68333,.08222,0,.61278],87:[0,.68333,.08222,.08334,.98778],88:[0,.68333,.14643,.13889,.7133],89:[.09722,.68333,.08222,.08334,.66834],90:[0,.68333,.07944,.13889,.72473],160:[0,0,0,0,.25]},\"Fraktur-Regular\":{32:[0,0,0,0,.25],33:[0,.69141,0,0,.29574],34:[0,.69141,0,0,.21471],38:[0,.69141,0,0,.73786],39:[0,.69141,0,0,.21201],40:[.24982,.74947,0,0,.38865],41:[.24982,.74947,0,0,.38865],42:[0,.62119,0,0,.27764],43:[.08319,.58283,0,0,.75623],44:[0,.10803,0,0,.27764],45:[.08319,.58283,0,0,.75623],46:[0,.10803,0,0,.27764],47:[.24982,.74947,0,0,.50181],48:[0,.47534,0,0,.50181],49:[0,.47534,0,0,.50181],50:[0,.47534,0,0,.50181],51:[.18906,.47534,0,0,.50181],52:[.18906,.47534,0,0,.50181],53:[.18906,.47534,0,0,.50181],54:[0,.69141,0,0,.50181],55:[.18906,.47534,0,0,.50181],56:[0,.69141,0,0,.50181],57:[.18906,.47534,0,0,.50181],58:[0,.47534,0,0,.21606],59:[.12604,.47534,0,0,.21606],61:[-.13099,.36866,0,0,.75623],63:[0,.69141,0,0,.36245],65:[0,.69141,0,0,.7176],66:[0,.69141,0,0,.88397],67:[0,.69141,0,0,.61254],68:[0,.69141,0,0,.83158],69:[0,.69141,0,0,.66278],70:[.12604,.69141,0,0,.61119],71:[0,.69141,0,0,.78539],72:[.06302,.69141,0,0,.7203],73:[0,.69141,0,0,.55448],74:[.12604,.69141,0,0,.55231],75:[0,.69141,0,0,.66845],76:[0,.69141,0,0,.66602],77:[0,.69141,0,0,1.04953],78:[0,.69141,0,0,.83212],79:[0,.69141,0,0,.82699],80:[.18906,.69141,0,0,.82753],81:[.03781,.69141,0,0,.82699],82:[0,.69141,0,0,.82807],83:[0,.69141,0,0,.82861],84:[0,.69141,0,0,.66899],85:[0,.69141,0,0,.64576],86:[0,.69141,0,0,.83131],87:[0,.69141,0,0,1.04602],88:[0,.69141,0,0,.71922],89:[.18906,.69141,0,0,.83293],90:[.12604,.69141,0,0,.60201],91:[.24982,.74947,0,0,.27764],93:[.24982,.74947,0,0,.27764],94:[0,.69141,0,0,.49965],97:[0,.47534,0,0,.50046],98:[0,.69141,0,0,.51315],99:[0,.47534,0,0,.38946],100:[0,.62119,0,0,.49857],101:[0,.47534,0,0,.40053],102:[.18906,.69141,0,0,.32626],103:[.18906,.47534,0,0,.5037],104:[.18906,.69141,0,0,.52126],105:[0,.69141,0,0,.27899],106:[0,.69141,0,0,.28088],107:[0,.69141,0,0,.38946],108:[0,.69141,0,0,.27953],109:[0,.47534,0,0,.76676],110:[0,.47534,0,0,.52666],111:[0,.47534,0,0,.48885],112:[.18906,.52396,0,0,.50046],113:[.18906,.47534,0,0,.48912],114:[0,.47534,0,0,.38919],115:[0,.47534,0,0,.44266],116:[0,.62119,0,0,.33301],117:[0,.47534,0,0,.5172],118:[0,.52396,0,0,.5118],119:[0,.52396,0,0,.77351],120:[.18906,.47534,0,0,.38865],121:[.18906,.47534,0,0,.49884],122:[.18906,.47534,0,0,.39054],160:[0,0,0,0,.25],8216:[0,.69141,0,0,.21471],8217:[0,.69141,0,0,.21471],58112:[0,.62119,0,0,.49749],58113:[0,.62119,0,0,.4983],58114:[.18906,.69141,0,0,.33328],58115:[.18906,.69141,0,0,.32923],58116:[.18906,.47534,0,0,.50343],58117:[0,.69141,0,0,.33301],58118:[0,.62119,0,0,.33409],58119:[0,.47534,0,0,.50073]},\"Main-Bold\":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.35],34:[0,.69444,0,0,.60278],35:[.19444,.69444,0,0,.95833],36:[.05556,.75,0,0,.575],37:[.05556,.75,0,0,.95833],38:[0,.69444,0,0,.89444],39:[0,.69444,0,0,.31944],40:[.25,.75,0,0,.44722],41:[.25,.75,0,0,.44722],42:[0,.75,0,0,.575],43:[.13333,.63333,0,0,.89444],44:[.19444,.15556,0,0,.31944],45:[0,.44444,0,0,.38333],46:[0,.15556,0,0,.31944],47:[.25,.75,0,0,.575],48:[0,.64444,0,0,.575],49:[0,.64444,0,0,.575],50:[0,.64444,0,0,.575],51:[0,.64444,0,0,.575],52:[0,.64444,0,0,.575],53:[0,.64444,0,0,.575],54:[0,.64444,0,0,.575],55:[0,.64444,0,0,.575],56:[0,.64444,0,0,.575],57:[0,.64444,0,0,.575],58:[0,.44444,0,0,.31944],59:[.19444,.44444,0,0,.31944],60:[.08556,.58556,0,0,.89444],61:[-.10889,.39111,0,0,.89444],62:[.08556,.58556,0,0,.89444],63:[0,.69444,0,0,.54305],64:[0,.69444,0,0,.89444],65:[0,.68611,0,0,.86944],66:[0,.68611,0,0,.81805],67:[0,.68611,0,0,.83055],68:[0,.68611,0,0,.88194],69:[0,.68611,0,0,.75555],70:[0,.68611,0,0,.72361],71:[0,.68611,0,0,.90416],72:[0,.68611,0,0,.9],73:[0,.68611,0,0,.43611],74:[0,.68611,0,0,.59444],75:[0,.68611,0,0,.90138],76:[0,.68611,0,0,.69166],77:[0,.68611,0,0,1.09166],78:[0,.68611,0,0,.9],79:[0,.68611,0,0,.86388],80:[0,.68611,0,0,.78611],81:[.19444,.68611,0,0,.86388],82:[0,.68611,0,0,.8625],83:[0,.68611,0,0,.63889],84:[0,.68611,0,0,.8],85:[0,.68611,0,0,.88472],86:[0,.68611,.01597,0,.86944],87:[0,.68611,.01597,0,1.18888],88:[0,.68611,0,0,.86944],89:[0,.68611,.02875,0,.86944],90:[0,.68611,0,0,.70277],91:[.25,.75,0,0,.31944],92:[.25,.75,0,0,.575],93:[.25,.75,0,0,.31944],94:[0,.69444,0,0,.575],95:[.31,.13444,.03194,0,.575],97:[0,.44444,0,0,.55902],98:[0,.69444,0,0,.63889],99:[0,.44444,0,0,.51111],100:[0,.69444,0,0,.63889],101:[0,.44444,0,0,.52708],102:[0,.69444,.10903,0,.35139],103:[.19444,.44444,.01597,0,.575],104:[0,.69444,0,0,.63889],105:[0,.69444,0,0,.31944],106:[.19444,.69444,0,0,.35139],107:[0,.69444,0,0,.60694],108:[0,.69444,0,0,.31944],109:[0,.44444,0,0,.95833],110:[0,.44444,0,0,.63889],111:[0,.44444,0,0,.575],112:[.19444,.44444,0,0,.63889],113:[.19444,.44444,0,0,.60694],114:[0,.44444,0,0,.47361],115:[0,.44444,0,0,.45361],116:[0,.63492,0,0,.44722],117:[0,.44444,0,0,.63889],118:[0,.44444,.01597,0,.60694],119:[0,.44444,.01597,0,.83055],120:[0,.44444,0,0,.60694],121:[.19444,.44444,.01597,0,.60694],122:[0,.44444,0,0,.51111],123:[.25,.75,0,0,.575],124:[.25,.75,0,0,.31944],125:[.25,.75,0,0,.575],126:[.35,.34444,0,0,.575],160:[0,0,0,0,.25],163:[0,.69444,0,0,.86853],168:[0,.69444,0,0,.575],172:[0,.44444,0,0,.76666],176:[0,.69444,0,0,.86944],177:[.13333,.63333,0,0,.89444],184:[.17014,0,0,0,.51111],198:[0,.68611,0,0,1.04166],215:[.13333,.63333,0,0,.89444],216:[.04861,.73472,0,0,.89444],223:[0,.69444,0,0,.59722],230:[0,.44444,0,0,.83055],247:[.13333,.63333,0,0,.89444],248:[.09722,.54167,0,0,.575],305:[0,.44444,0,0,.31944],338:[0,.68611,0,0,1.16944],339:[0,.44444,0,0,.89444],567:[.19444,.44444,0,0,.35139],710:[0,.69444,0,0,.575],711:[0,.63194,0,0,.575],713:[0,.59611,0,0,.575],714:[0,.69444,0,0,.575],715:[0,.69444,0,0,.575],728:[0,.69444,0,0,.575],729:[0,.69444,0,0,.31944],730:[0,.69444,0,0,.86944],732:[0,.69444,0,0,.575],733:[0,.69444,0,0,.575],915:[0,.68611,0,0,.69166],916:[0,.68611,0,0,.95833],920:[0,.68611,0,0,.89444],923:[0,.68611,0,0,.80555],926:[0,.68611,0,0,.76666],928:[0,.68611,0,0,.9],931:[0,.68611,0,0,.83055],933:[0,.68611,0,0,.89444],934:[0,.68611,0,0,.83055],936:[0,.68611,0,0,.89444],937:[0,.68611,0,0,.83055],8211:[0,.44444,.03194,0,.575],8212:[0,.44444,.03194,0,1.14999],8216:[0,.69444,0,0,.31944],8217:[0,.69444,0,0,.31944],8220:[0,.69444,0,0,.60278],8221:[0,.69444,0,0,.60278],8224:[.19444,.69444,0,0,.51111],8225:[.19444,.69444,0,0,.51111],8242:[0,.55556,0,0,.34444],8407:[0,.72444,.15486,0,.575],8463:[0,.69444,0,0,.66759],8465:[0,.69444,0,0,.83055],8467:[0,.69444,0,0,.47361],8472:[.19444,.44444,0,0,.74027],8476:[0,.69444,0,0,.83055],8501:[0,.69444,0,0,.70277],8592:[-.10889,.39111,0,0,1.14999],8593:[.19444,.69444,0,0,.575],8594:[-.10889,.39111,0,0,1.14999],8595:[.19444,.69444,0,0,.575],8596:[-.10889,.39111,0,0,1.14999],8597:[.25,.75,0,0,.575],8598:[.19444,.69444,0,0,1.14999],8599:[.19444,.69444,0,0,1.14999],8600:[.19444,.69444,0,0,1.14999],8601:[.19444,.69444,0,0,1.14999],8636:[-.10889,.39111,0,0,1.14999],8637:[-.10889,.39111,0,0,1.14999],8640:[-.10889,.39111,0,0,1.14999],8641:[-.10889,.39111,0,0,1.14999],8656:[-.10889,.39111,0,0,1.14999],8657:[.19444,.69444,0,0,.70277],8658:[-.10889,.39111,0,0,1.14999],8659:[.19444,.69444,0,0,.70277],8660:[-.10889,.39111,0,0,1.14999],8661:[.25,.75,0,0,.70277],8704:[0,.69444,0,0,.63889],8706:[0,.69444,.06389,0,.62847],8707:[0,.69444,0,0,.63889],8709:[.05556,.75,0,0,.575],8711:[0,.68611,0,0,.95833],8712:[.08556,.58556,0,0,.76666],8715:[.08556,.58556,0,0,.76666],8722:[.13333,.63333,0,0,.89444],8723:[.13333,.63333,0,0,.89444],8725:[.25,.75,0,0,.575],8726:[.25,.75,0,0,.575],8727:[-.02778,.47222,0,0,.575],8728:[-.02639,.47361,0,0,.575],8729:[-.02639,.47361,0,0,.575],8730:[.18,.82,0,0,.95833],8733:[0,.44444,0,0,.89444],8734:[0,.44444,0,0,1.14999],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.31944],8741:[.25,.75,0,0,.575],8743:[0,.55556,0,0,.76666],8744:[0,.55556,0,0,.76666],8745:[0,.55556,0,0,.76666],8746:[0,.55556,0,0,.76666],8747:[.19444,.69444,.12778,0,.56875],8764:[-.10889,.39111,0,0,.89444],8768:[.19444,.69444,0,0,.31944],8771:[.00222,.50222,0,0,.89444],8776:[.02444,.52444,0,0,.89444],8781:[.00222,.50222,0,0,.89444],8801:[.00222,.50222,0,0,.89444],8804:[.19667,.69667,0,0,.89444],8805:[.19667,.69667,0,0,.89444],8810:[.08556,.58556,0,0,1.14999],8811:[.08556,.58556,0,0,1.14999],8826:[.08556,.58556,0,0,.89444],8827:[.08556,.58556,0,0,.89444],8834:[.08556,.58556,0,0,.89444],8835:[.08556,.58556,0,0,.89444],8838:[.19667,.69667,0,0,.89444],8839:[.19667,.69667,0,0,.89444],8846:[0,.55556,0,0,.76666],8849:[.19667,.69667,0,0,.89444],8850:[.19667,.69667,0,0,.89444],8851:[0,.55556,0,0,.76666],8852:[0,.55556,0,0,.76666],8853:[.13333,.63333,0,0,.89444],8854:[.13333,.63333,0,0,.89444],8855:[.13333,.63333,0,0,.89444],8856:[.13333,.63333,0,0,.89444],8857:[.13333,.63333,0,0,.89444],8866:[0,.69444,0,0,.70277],8867:[0,.69444,0,0,.70277],8868:[0,.69444,0,0,.89444],8869:[0,.69444,0,0,.89444],8900:[-.02639,.47361,0,0,.575],8901:[-.02639,.47361,0,0,.31944],8902:[-.02778,.47222,0,0,.575],8968:[.25,.75,0,0,.51111],8969:[.25,.75,0,0,.51111],8970:[.25,.75,0,0,.51111],8971:[.25,.75,0,0,.51111],8994:[-.13889,.36111,0,0,1.14999],8995:[-.13889,.36111,0,0,1.14999],9651:[.19444,.69444,0,0,1.02222],9657:[-.02778,.47222,0,0,.575],9661:[.19444,.69444,0,0,1.02222],9667:[-.02778,.47222,0,0,.575],9711:[.19444,.69444,0,0,1.14999],9824:[.12963,.69444,0,0,.89444],9825:[.12963,.69444,0,0,.89444],9826:[.12963,.69444,0,0,.89444],9827:[.12963,.69444,0,0,.89444],9837:[0,.75,0,0,.44722],9838:[.19444,.69444,0,0,.44722],9839:[.19444,.69444,0,0,.44722],10216:[.25,.75,0,0,.44722],10217:[.25,.75,0,0,.44722],10815:[0,.68611,0,0,.9],10927:[.19667,.69667,0,0,.89444],10928:[.19667,.69667,0,0,.89444],57376:[.19444,.69444,0,0,0]},\"Main-BoldItalic\":{32:[0,0,0,0,.25],33:[0,.69444,.11417,0,.38611],34:[0,.69444,.07939,0,.62055],35:[.19444,.69444,.06833,0,.94444],37:[.05556,.75,.12861,0,.94444],38:[0,.69444,.08528,0,.88555],39:[0,.69444,.12945,0,.35555],40:[.25,.75,.15806,0,.47333],41:[.25,.75,.03306,0,.47333],42:[0,.75,.14333,0,.59111],43:[.10333,.60333,.03306,0,.88555],44:[.19444,.14722,0,0,.35555],45:[0,.44444,.02611,0,.41444],46:[0,.14722,0,0,.35555],47:[.25,.75,.15806,0,.59111],48:[0,.64444,.13167,0,.59111],49:[0,.64444,.13167,0,.59111],50:[0,.64444,.13167,0,.59111],51:[0,.64444,.13167,0,.59111],52:[.19444,.64444,.13167,0,.59111],53:[0,.64444,.13167,0,.59111],54:[0,.64444,.13167,0,.59111],55:[.19444,.64444,.13167,0,.59111],56:[0,.64444,.13167,0,.59111],57:[0,.64444,.13167,0,.59111],58:[0,.44444,.06695,0,.35555],59:[.19444,.44444,.06695,0,.35555],61:[-.10889,.39111,.06833,0,.88555],63:[0,.69444,.11472,0,.59111],64:[0,.69444,.09208,0,.88555],65:[0,.68611,0,0,.86555],66:[0,.68611,.0992,0,.81666],67:[0,.68611,.14208,0,.82666],68:[0,.68611,.09062,0,.87555],69:[0,.68611,.11431,0,.75666],70:[0,.68611,.12903,0,.72722],71:[0,.68611,.07347,0,.89527],72:[0,.68611,.17208,0,.8961],73:[0,.68611,.15681,0,.47166],74:[0,.68611,.145,0,.61055],75:[0,.68611,.14208,0,.89499],76:[0,.68611,0,0,.69777],77:[0,.68611,.17208,0,1.07277],78:[0,.68611,.17208,0,.8961],79:[0,.68611,.09062,0,.85499],80:[0,.68611,.0992,0,.78721],81:[.19444,.68611,.09062,0,.85499],82:[0,.68611,.02559,0,.85944],83:[0,.68611,.11264,0,.64999],84:[0,.68611,.12903,0,.7961],85:[0,.68611,.17208,0,.88083],86:[0,.68611,.18625,0,.86555],87:[0,.68611,.18625,0,1.15999],88:[0,.68611,.15681,0,.86555],89:[0,.68611,.19803,0,.86555],90:[0,.68611,.14208,0,.70888],91:[.25,.75,.1875,0,.35611],93:[.25,.75,.09972,0,.35611],94:[0,.69444,.06709,0,.59111],95:[.31,.13444,.09811,0,.59111],97:[0,.44444,.09426,0,.59111],98:[0,.69444,.07861,0,.53222],99:[0,.44444,.05222,0,.53222],100:[0,.69444,.10861,0,.59111],101:[0,.44444,.085,0,.53222],102:[.19444,.69444,.21778,0,.4],103:[.19444,.44444,.105,0,.53222],104:[0,.69444,.09426,0,.59111],105:[0,.69326,.11387,0,.35555],106:[.19444,.69326,.1672,0,.35555],107:[0,.69444,.11111,0,.53222],108:[0,.69444,.10861,0,.29666],109:[0,.44444,.09426,0,.94444],110:[0,.44444,.09426,0,.64999],111:[0,.44444,.07861,0,.59111],112:[.19444,.44444,.07861,0,.59111],113:[.19444,.44444,.105,0,.53222],114:[0,.44444,.11111,0,.50167],115:[0,.44444,.08167,0,.48694],116:[0,.63492,.09639,0,.385],117:[0,.44444,.09426,0,.62055],118:[0,.44444,.11111,0,.53222],119:[0,.44444,.11111,0,.76777],120:[0,.44444,.12583,0,.56055],121:[.19444,.44444,.105,0,.56166],122:[0,.44444,.13889,0,.49055],126:[.35,.34444,.11472,0,.59111],160:[0,0,0,0,.25],168:[0,.69444,.11473,0,.59111],176:[0,.69444,0,0,.94888],184:[.17014,0,0,0,.53222],198:[0,.68611,.11431,0,1.02277],216:[.04861,.73472,.09062,0,.88555],223:[.19444,.69444,.09736,0,.665],230:[0,.44444,.085,0,.82666],248:[.09722,.54167,.09458,0,.59111],305:[0,.44444,.09426,0,.35555],338:[0,.68611,.11431,0,1.14054],339:[0,.44444,.085,0,.82666],567:[.19444,.44444,.04611,0,.385],710:[0,.69444,.06709,0,.59111],711:[0,.63194,.08271,0,.59111],713:[0,.59444,.10444,0,.59111],714:[0,.69444,.08528,0,.59111],715:[0,.69444,0,0,.59111],728:[0,.69444,.10333,0,.59111],729:[0,.69444,.12945,0,.35555],730:[0,.69444,0,0,.94888],732:[0,.69444,.11472,0,.59111],733:[0,.69444,.11472,0,.59111],915:[0,.68611,.12903,0,.69777],916:[0,.68611,0,0,.94444],920:[0,.68611,.09062,0,.88555],923:[0,.68611,0,0,.80666],926:[0,.68611,.15092,0,.76777],928:[0,.68611,.17208,0,.8961],931:[0,.68611,.11431,0,.82666],933:[0,.68611,.10778,0,.88555],934:[0,.68611,.05632,0,.82666],936:[0,.68611,.10778,0,.88555],937:[0,.68611,.0992,0,.82666],8211:[0,.44444,.09811,0,.59111],8212:[0,.44444,.09811,0,1.18221],8216:[0,.69444,.12945,0,.35555],8217:[0,.69444,.12945,0,.35555],8220:[0,.69444,.16772,0,.62055],8221:[0,.69444,.07939,0,.62055]},\"Main-Italic\":{32:[0,0,0,0,.25],33:[0,.69444,.12417,0,.30667],34:[0,.69444,.06961,0,.51444],35:[.19444,.69444,.06616,0,.81777],37:[.05556,.75,.13639,0,.81777],38:[0,.69444,.09694,0,.76666],39:[0,.69444,.12417,0,.30667],40:[.25,.75,.16194,0,.40889],41:[.25,.75,.03694,0,.40889],42:[0,.75,.14917,0,.51111],43:[.05667,.56167,.03694,0,.76666],44:[.19444,.10556,0,0,.30667],45:[0,.43056,.02826,0,.35778],46:[0,.10556,0,0,.30667],47:[.25,.75,.16194,0,.51111],48:[0,.64444,.13556,0,.51111],49:[0,.64444,.13556,0,.51111],50:[0,.64444,.13556,0,.51111],51:[0,.64444,.13556,0,.51111],52:[.19444,.64444,.13556,0,.51111],53:[0,.64444,.13556,0,.51111],54:[0,.64444,.13556,0,.51111],55:[.19444,.64444,.13556,0,.51111],56:[0,.64444,.13556,0,.51111],57:[0,.64444,.13556,0,.51111],58:[0,.43056,.0582,0,.30667],59:[.19444,.43056,.0582,0,.30667],61:[-.13313,.36687,.06616,0,.76666],63:[0,.69444,.1225,0,.51111],64:[0,.69444,.09597,0,.76666],65:[0,.68333,0,0,.74333],66:[0,.68333,.10257,0,.70389],67:[0,.68333,.14528,0,.71555],68:[0,.68333,.09403,0,.755],69:[0,.68333,.12028,0,.67833],70:[0,.68333,.13305,0,.65277],71:[0,.68333,.08722,0,.77361],72:[0,.68333,.16389,0,.74333],73:[0,.68333,.15806,0,.38555],74:[0,.68333,.14028,0,.525],75:[0,.68333,.14528,0,.76888],76:[0,.68333,0,0,.62722],77:[0,.68333,.16389,0,.89666],78:[0,.68333,.16389,0,.74333],79:[0,.68333,.09403,0,.76666],80:[0,.68333,.10257,0,.67833],81:[.19444,.68333,.09403,0,.76666],82:[0,.68333,.03868,0,.72944],83:[0,.68333,.11972,0,.56222],84:[0,.68333,.13305,0,.71555],85:[0,.68333,.16389,0,.74333],86:[0,.68333,.18361,0,.74333],87:[0,.68333,.18361,0,.99888],88:[0,.68333,.15806,0,.74333],89:[0,.68333,.19383,0,.74333],90:[0,.68333,.14528,0,.61333],91:[.25,.75,.1875,0,.30667],93:[.25,.75,.10528,0,.30667],94:[0,.69444,.06646,0,.51111],95:[.31,.12056,.09208,0,.51111],97:[0,.43056,.07671,0,.51111],98:[0,.69444,.06312,0,.46],99:[0,.43056,.05653,0,.46],100:[0,.69444,.10333,0,.51111],101:[0,.43056,.07514,0,.46],102:[.19444,.69444,.21194,0,.30667],103:[.19444,.43056,.08847,0,.46],104:[0,.69444,.07671,0,.51111],105:[0,.65536,.1019,0,.30667],106:[.19444,.65536,.14467,0,.30667],107:[0,.69444,.10764,0,.46],108:[0,.69444,.10333,0,.25555],109:[0,.43056,.07671,0,.81777],110:[0,.43056,.07671,0,.56222],111:[0,.43056,.06312,0,.51111],112:[.19444,.43056,.06312,0,.51111],113:[.19444,.43056,.08847,0,.46],114:[0,.43056,.10764,0,.42166],115:[0,.43056,.08208,0,.40889],116:[0,.61508,.09486,0,.33222],117:[0,.43056,.07671,0,.53666],118:[0,.43056,.10764,0,.46],119:[0,.43056,.10764,0,.66444],120:[0,.43056,.12042,0,.46389],121:[.19444,.43056,.08847,0,.48555],122:[0,.43056,.12292,0,.40889],126:[.35,.31786,.11585,0,.51111],160:[0,0,0,0,.25],168:[0,.66786,.10474,0,.51111],176:[0,.69444,0,0,.83129],184:[.17014,0,0,0,.46],198:[0,.68333,.12028,0,.88277],216:[.04861,.73194,.09403,0,.76666],223:[.19444,.69444,.10514,0,.53666],230:[0,.43056,.07514,0,.71555],248:[.09722,.52778,.09194,0,.51111],338:[0,.68333,.12028,0,.98499],339:[0,.43056,.07514,0,.71555],710:[0,.69444,.06646,0,.51111],711:[0,.62847,.08295,0,.51111],713:[0,.56167,.10333,0,.51111],714:[0,.69444,.09694,0,.51111],715:[0,.69444,0,0,.51111],728:[0,.69444,.10806,0,.51111],729:[0,.66786,.11752,0,.30667],730:[0,.69444,0,0,.83129],732:[0,.66786,.11585,0,.51111],733:[0,.69444,.1225,0,.51111],915:[0,.68333,.13305,0,.62722],916:[0,.68333,0,0,.81777],920:[0,.68333,.09403,0,.76666],923:[0,.68333,0,0,.69222],926:[0,.68333,.15294,0,.66444],928:[0,.68333,.16389,0,.74333],931:[0,.68333,.12028,0,.71555],933:[0,.68333,.11111,0,.76666],934:[0,.68333,.05986,0,.71555],936:[0,.68333,.11111,0,.76666],937:[0,.68333,.10257,0,.71555],8211:[0,.43056,.09208,0,.51111],8212:[0,.43056,.09208,0,1.02222],8216:[0,.69444,.12417,0,.30667],8217:[0,.69444,.12417,0,.30667],8220:[0,.69444,.1685,0,.51444],8221:[0,.69444,.06961,0,.51444],8463:[0,.68889,0,0,.54028]},\"Main-Regular\":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.27778],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.77778],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.19444,.10556,0,0,.27778],45:[0,.43056,0,0,.33333],46:[0,.10556,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.64444,0,0,.5],49:[0,.64444,0,0,.5],50:[0,.64444,0,0,.5],51:[0,.64444,0,0,.5],52:[0,.64444,0,0,.5],53:[0,.64444,0,0,.5],54:[0,.64444,0,0,.5],55:[0,.64444,0,0,.5],56:[0,.64444,0,0,.5],57:[0,.64444,0,0,.5],58:[0,.43056,0,0,.27778],59:[.19444,.43056,0,0,.27778],60:[.0391,.5391,0,0,.77778],61:[-.13313,.36687,0,0,.77778],62:[.0391,.5391,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.77778],65:[0,.68333,0,0,.75],66:[0,.68333,0,0,.70834],67:[0,.68333,0,0,.72222],68:[0,.68333,0,0,.76389],69:[0,.68333,0,0,.68056],70:[0,.68333,0,0,.65278],71:[0,.68333,0,0,.78472],72:[0,.68333,0,0,.75],73:[0,.68333,0,0,.36111],74:[0,.68333,0,0,.51389],75:[0,.68333,0,0,.77778],76:[0,.68333,0,0,.625],77:[0,.68333,0,0,.91667],78:[0,.68333,0,0,.75],79:[0,.68333,0,0,.77778],80:[0,.68333,0,0,.68056],81:[.19444,.68333,0,0,.77778],82:[0,.68333,0,0,.73611],83:[0,.68333,0,0,.55556],84:[0,.68333,0,0,.72222],85:[0,.68333,0,0,.75],86:[0,.68333,.01389,0,.75],87:[0,.68333,.01389,0,1.02778],88:[0,.68333,0,0,.75],89:[0,.68333,.025,0,.75],90:[0,.68333,0,0,.61111],91:[.25,.75,0,0,.27778],92:[.25,.75,0,0,.5],93:[.25,.75,0,0,.27778],94:[0,.69444,0,0,.5],95:[.31,.12056,.02778,0,.5],97:[0,.43056,0,0,.5],98:[0,.69444,0,0,.55556],99:[0,.43056,0,0,.44445],100:[0,.69444,0,0,.55556],101:[0,.43056,0,0,.44445],102:[0,.69444,.07778,0,.30556],103:[.19444,.43056,.01389,0,.5],104:[0,.69444,0,0,.55556],105:[0,.66786,0,0,.27778],106:[.19444,.66786,0,0,.30556],107:[0,.69444,0,0,.52778],108:[0,.69444,0,0,.27778],109:[0,.43056,0,0,.83334],110:[0,.43056,0,0,.55556],111:[0,.43056,0,0,.5],112:[.19444,.43056,0,0,.55556],113:[.19444,.43056,0,0,.52778],114:[0,.43056,0,0,.39167],115:[0,.43056,0,0,.39445],116:[0,.61508,0,0,.38889],117:[0,.43056,0,0,.55556],118:[0,.43056,.01389,0,.52778],119:[0,.43056,.01389,0,.72222],120:[0,.43056,0,0,.52778],121:[.19444,.43056,.01389,0,.52778],122:[0,.43056,0,0,.44445],123:[.25,.75,0,0,.5],124:[.25,.75,0,0,.27778],125:[.25,.75,0,0,.5],126:[.35,.31786,0,0,.5],160:[0,0,0,0,.25],163:[0,.69444,0,0,.76909],167:[.19444,.69444,0,0,.44445],168:[0,.66786,0,0,.5],172:[0,.43056,0,0,.66667],176:[0,.69444,0,0,.75],177:[.08333,.58333,0,0,.77778],182:[.19444,.69444,0,0,.61111],184:[.17014,0,0,0,.44445],198:[0,.68333,0,0,.90278],215:[.08333,.58333,0,0,.77778],216:[.04861,.73194,0,0,.77778],223:[0,.69444,0,0,.5],230:[0,.43056,0,0,.72222],247:[.08333,.58333,0,0,.77778],248:[.09722,.52778,0,0,.5],305:[0,.43056,0,0,.27778],338:[0,.68333,0,0,1.01389],339:[0,.43056,0,0,.77778],567:[.19444,.43056,0,0,.30556],710:[0,.69444,0,0,.5],711:[0,.62847,0,0,.5],713:[0,.56778,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.66786,0,0,.27778],730:[0,.69444,0,0,.75],732:[0,.66786,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.68333,0,0,.625],916:[0,.68333,0,0,.83334],920:[0,.68333,0,0,.77778],923:[0,.68333,0,0,.69445],926:[0,.68333,0,0,.66667],928:[0,.68333,0,0,.75],931:[0,.68333,0,0,.72222],933:[0,.68333,0,0,.77778],934:[0,.68333,0,0,.72222],936:[0,.68333,0,0,.77778],937:[0,.68333,0,0,.72222],8211:[0,.43056,.02778,0,.5],8212:[0,.43056,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5],8224:[.19444,.69444,0,0,.44445],8225:[.19444,.69444,0,0,.44445],8230:[0,.123,0,0,1.172],8242:[0,.55556,0,0,.275],8407:[0,.71444,.15382,0,.5],8463:[0,.68889,0,0,.54028],8465:[0,.69444,0,0,.72222],8467:[0,.69444,0,.11111,.41667],8472:[.19444,.43056,0,.11111,.63646],8476:[0,.69444,0,0,.72222],8501:[0,.69444,0,0,.61111],8592:[-.13313,.36687,0,0,1],8593:[.19444,.69444,0,0,.5],8594:[-.13313,.36687,0,0,1],8595:[.19444,.69444,0,0,.5],8596:[-.13313,.36687,0,0,1],8597:[.25,.75,0,0,.5],8598:[.19444,.69444,0,0,1],8599:[.19444,.69444,0,0,1],8600:[.19444,.69444,0,0,1],8601:[.19444,.69444,0,0,1],8614:[.011,.511,0,0,1],8617:[.011,.511,0,0,1.126],8618:[.011,.511,0,0,1.126],8636:[-.13313,.36687,0,0,1],8637:[-.13313,.36687,0,0,1],8640:[-.13313,.36687,0,0,1],8641:[-.13313,.36687,0,0,1],8652:[.011,.671,0,0,1],8656:[-.13313,.36687,0,0,1],8657:[.19444,.69444,0,0,.61111],8658:[-.13313,.36687,0,0,1],8659:[.19444,.69444,0,0,.61111],8660:[-.13313,.36687,0,0,1],8661:[.25,.75,0,0,.61111],8704:[0,.69444,0,0,.55556],8706:[0,.69444,.05556,.08334,.5309],8707:[0,.69444,0,0,.55556],8709:[.05556,.75,0,0,.5],8711:[0,.68333,0,0,.83334],8712:[.0391,.5391,0,0,.66667],8715:[.0391,.5391,0,0,.66667],8722:[.08333,.58333,0,0,.77778],8723:[.08333,.58333,0,0,.77778],8725:[.25,.75,0,0,.5],8726:[.25,.75,0,0,.5],8727:[-.03472,.46528,0,0,.5],8728:[-.05555,.44445,0,0,.5],8729:[-.05555,.44445,0,0,.5],8730:[.2,.8,0,0,.83334],8733:[0,.43056,0,0,.77778],8734:[0,.43056,0,0,1],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.27778],8741:[.25,.75,0,0,.5],8743:[0,.55556,0,0,.66667],8744:[0,.55556,0,0,.66667],8745:[0,.55556,0,0,.66667],8746:[0,.55556,0,0,.66667],8747:[.19444,.69444,.11111,0,.41667],8764:[-.13313,.36687,0,0,.77778],8768:[.19444,.69444,0,0,.27778],8771:[-.03625,.46375,0,0,.77778],8773:[-.022,.589,0,0,1],8776:[-.01688,.48312,0,0,.77778],8781:[-.03625,.46375,0,0,.77778],8784:[-.133,.673,0,0,.778],8801:[-.03625,.46375,0,0,.77778],8804:[.13597,.63597,0,0,.77778],8805:[.13597,.63597,0,0,.77778],8810:[.0391,.5391,0,0,1],8811:[.0391,.5391,0,0,1],8826:[.0391,.5391,0,0,.77778],8827:[.0391,.5391,0,0,.77778],8834:[.0391,.5391,0,0,.77778],8835:[.0391,.5391,0,0,.77778],8838:[.13597,.63597,0,0,.77778],8839:[.13597,.63597,0,0,.77778],8846:[0,.55556,0,0,.66667],8849:[.13597,.63597,0,0,.77778],8850:[.13597,.63597,0,0,.77778],8851:[0,.55556,0,0,.66667],8852:[0,.55556,0,0,.66667],8853:[.08333,.58333,0,0,.77778],8854:[.08333,.58333,0,0,.77778],8855:[.08333,.58333,0,0,.77778],8856:[.08333,.58333,0,0,.77778],8857:[.08333,.58333,0,0,.77778],8866:[0,.69444,0,0,.61111],8867:[0,.69444,0,0,.61111],8868:[0,.69444,0,0,.77778],8869:[0,.69444,0,0,.77778],8872:[.249,.75,0,0,.867],8900:[-.05555,.44445,0,0,.5],8901:[-.05555,.44445,0,0,.27778],8902:[-.03472,.46528,0,0,.5],8904:[.005,.505,0,0,.9],8942:[.03,.903,0,0,.278],8943:[-.19,.313,0,0,1.172],8945:[-.1,.823,0,0,1.282],8968:[.25,.75,0,0,.44445],8969:[.25,.75,0,0,.44445],8970:[.25,.75,0,0,.44445],8971:[.25,.75,0,0,.44445],8994:[-.14236,.35764,0,0,1],8995:[-.14236,.35764,0,0,1],9136:[.244,.744,0,0,.412],9137:[.244,.745,0,0,.412],9651:[.19444,.69444,0,0,.88889],9657:[-.03472,.46528,0,0,.5],9661:[.19444,.69444,0,0,.88889],9667:[-.03472,.46528,0,0,.5],9711:[.19444,.69444,0,0,1],9824:[.12963,.69444,0,0,.77778],9825:[.12963,.69444,0,0,.77778],9826:[.12963,.69444,0,0,.77778],9827:[.12963,.69444,0,0,.77778],9837:[0,.75,0,0,.38889],9838:[.19444,.69444,0,0,.38889],9839:[.19444,.69444,0,0,.38889],10216:[.25,.75,0,0,.38889],10217:[.25,.75,0,0,.38889],10222:[.244,.744,0,0,.412],10223:[.244,.745,0,0,.412],10229:[.011,.511,0,0,1.609],10230:[.011,.511,0,0,1.638],10231:[.011,.511,0,0,1.859],10232:[.024,.525,0,0,1.609],10233:[.024,.525,0,0,1.638],10234:[.024,.525,0,0,1.858],10236:[.011,.511,0,0,1.638],10815:[0,.68333,0,0,.75],10927:[.13597,.63597,0,0,.77778],10928:[.13597,.63597,0,0,.77778],57376:[.19444,.69444,0,0,0]},\"Math-BoldItalic\":{32:[0,0,0,0,.25],48:[0,.44444,0,0,.575],49:[0,.44444,0,0,.575],50:[0,.44444,0,0,.575],51:[.19444,.44444,0,0,.575],52:[.19444,.44444,0,0,.575],53:[.19444,.44444,0,0,.575],54:[0,.64444,0,0,.575],55:[.19444,.44444,0,0,.575],56:[0,.64444,0,0,.575],57:[.19444,.44444,0,0,.575],65:[0,.68611,0,0,.86944],66:[0,.68611,.04835,0,.8664],67:[0,.68611,.06979,0,.81694],68:[0,.68611,.03194,0,.93812],69:[0,.68611,.05451,0,.81007],70:[0,.68611,.15972,0,.68889],71:[0,.68611,0,0,.88673],72:[0,.68611,.08229,0,.98229],73:[0,.68611,.07778,0,.51111],74:[0,.68611,.10069,0,.63125],75:[0,.68611,.06979,0,.97118],76:[0,.68611,0,0,.75555],77:[0,.68611,.11424,0,1.14201],78:[0,.68611,.11424,0,.95034],79:[0,.68611,.03194,0,.83666],80:[0,.68611,.15972,0,.72309],81:[.19444,.68611,0,0,.86861],82:[0,.68611,.00421,0,.87235],83:[0,.68611,.05382,0,.69271],84:[0,.68611,.15972,0,.63663],85:[0,.68611,.11424,0,.80027],86:[0,.68611,.25555,0,.67778],87:[0,.68611,.15972,0,1.09305],88:[0,.68611,.07778,0,.94722],89:[0,.68611,.25555,0,.67458],90:[0,.68611,.06979,0,.77257],97:[0,.44444,0,0,.63287],98:[0,.69444,0,0,.52083],99:[0,.44444,0,0,.51342],100:[0,.69444,0,0,.60972],101:[0,.44444,0,0,.55361],102:[.19444,.69444,.11042,0,.56806],103:[.19444,.44444,.03704,0,.5449],104:[0,.69444,0,0,.66759],105:[0,.69326,0,0,.4048],106:[.19444,.69326,.0622,0,.47083],107:[0,.69444,.01852,0,.6037],108:[0,.69444,.0088,0,.34815],109:[0,.44444,0,0,1.0324],110:[0,.44444,0,0,.71296],111:[0,.44444,0,0,.58472],112:[.19444,.44444,0,0,.60092],113:[.19444,.44444,.03704,0,.54213],114:[0,.44444,.03194,0,.5287],115:[0,.44444,0,0,.53125],116:[0,.63492,0,0,.41528],117:[0,.44444,0,0,.68102],118:[0,.44444,.03704,0,.56666],119:[0,.44444,.02778,0,.83148],120:[0,.44444,0,0,.65903],121:[.19444,.44444,.03704,0,.59028],122:[0,.44444,.04213,0,.55509],160:[0,0,0,0,.25],915:[0,.68611,.15972,0,.65694],916:[0,.68611,0,0,.95833],920:[0,.68611,.03194,0,.86722],923:[0,.68611,0,0,.80555],926:[0,.68611,.07458,0,.84125],928:[0,.68611,.08229,0,.98229],931:[0,.68611,.05451,0,.88507],933:[0,.68611,.15972,0,.67083],934:[0,.68611,0,0,.76666],936:[0,.68611,.11653,0,.71402],937:[0,.68611,.04835,0,.8789],945:[0,.44444,0,0,.76064],946:[.19444,.69444,.03403,0,.65972],947:[.19444,.44444,.06389,0,.59003],948:[0,.69444,.03819,0,.52222],949:[0,.44444,0,0,.52882],950:[.19444,.69444,.06215,0,.50833],951:[.19444,.44444,.03704,0,.6],952:[0,.69444,.03194,0,.5618],953:[0,.44444,0,0,.41204],954:[0,.44444,0,0,.66759],955:[0,.69444,0,0,.67083],956:[.19444,.44444,0,0,.70787],957:[0,.44444,.06898,0,.57685],958:[.19444,.69444,.03021,0,.50833],959:[0,.44444,0,0,.58472],960:[0,.44444,.03704,0,.68241],961:[.19444,.44444,0,0,.6118],962:[.09722,.44444,.07917,0,.42361],963:[0,.44444,.03704,0,.68588],964:[0,.44444,.13472,0,.52083],965:[0,.44444,.03704,0,.63055],966:[.19444,.44444,0,0,.74722],967:[.19444,.44444,0,0,.71805],968:[.19444,.69444,.03704,0,.75833],969:[0,.44444,.03704,0,.71782],977:[0,.69444,0,0,.69155],981:[.19444,.69444,0,0,.7125],982:[0,.44444,.03194,0,.975],1009:[.19444,.44444,0,0,.6118],1013:[0,.44444,0,0,.48333],57649:[0,.44444,0,0,.39352],57911:[.19444,.44444,0,0,.43889]},\"Math-Italic\":{32:[0,0,0,0,.25],48:[0,.43056,0,0,.5],49:[0,.43056,0,0,.5],50:[0,.43056,0,0,.5],51:[.19444,.43056,0,0,.5],52:[.19444,.43056,0,0,.5],53:[.19444,.43056,0,0,.5],54:[0,.64444,0,0,.5],55:[.19444,.43056,0,0,.5],56:[0,.64444,0,0,.5],57:[.19444,.43056,0,0,.5],65:[0,.68333,0,.13889,.75],66:[0,.68333,.05017,.08334,.75851],67:[0,.68333,.07153,.08334,.71472],68:[0,.68333,.02778,.05556,.82792],69:[0,.68333,.05764,.08334,.7382],70:[0,.68333,.13889,.08334,.64306],71:[0,.68333,0,.08334,.78625],72:[0,.68333,.08125,.05556,.83125],73:[0,.68333,.07847,.11111,.43958],74:[0,.68333,.09618,.16667,.55451],75:[0,.68333,.07153,.05556,.84931],76:[0,.68333,0,.02778,.68056],77:[0,.68333,.10903,.08334,.97014],78:[0,.68333,.10903,.08334,.80347],79:[0,.68333,.02778,.08334,.76278],80:[0,.68333,.13889,.08334,.64201],81:[.19444,.68333,0,.08334,.79056],82:[0,.68333,.00773,.08334,.75929],83:[0,.68333,.05764,.08334,.6132],84:[0,.68333,.13889,.08334,.58438],85:[0,.68333,.10903,.02778,.68278],86:[0,.68333,.22222,0,.58333],87:[0,.68333,.13889,0,.94445],88:[0,.68333,.07847,.08334,.82847],89:[0,.68333,.22222,0,.58056],90:[0,.68333,.07153,.08334,.68264],97:[0,.43056,0,0,.52859],98:[0,.69444,0,0,.42917],99:[0,.43056,0,.05556,.43276],100:[0,.69444,0,.16667,.52049],101:[0,.43056,0,.05556,.46563],102:[.19444,.69444,.10764,.16667,.48959],103:[.19444,.43056,.03588,.02778,.47697],104:[0,.69444,0,0,.57616],105:[0,.65952,0,0,.34451],106:[.19444,.65952,.05724,0,.41181],107:[0,.69444,.03148,0,.5206],108:[0,.69444,.01968,.08334,.29838],109:[0,.43056,0,0,.87801],110:[0,.43056,0,0,.60023],111:[0,.43056,0,.05556,.48472],112:[.19444,.43056,0,.08334,.50313],113:[.19444,.43056,.03588,.08334,.44641],114:[0,.43056,.02778,.05556,.45116],115:[0,.43056,0,.05556,.46875],116:[0,.61508,0,.08334,.36111],117:[0,.43056,0,.02778,.57246],118:[0,.43056,.03588,.02778,.48472],119:[0,.43056,.02691,.08334,.71592],120:[0,.43056,0,.02778,.57153],121:[.19444,.43056,.03588,.05556,.49028],122:[0,.43056,.04398,.05556,.46505],160:[0,0,0,0,.25],915:[0,.68333,.13889,.08334,.61528],916:[0,.68333,0,.16667,.83334],920:[0,.68333,.02778,.08334,.76278],923:[0,.68333,0,.16667,.69445],926:[0,.68333,.07569,.08334,.74236],928:[0,.68333,.08125,.05556,.83125],931:[0,.68333,.05764,.08334,.77986],933:[0,.68333,.13889,.05556,.58333],934:[0,.68333,0,.08334,.66667],936:[0,.68333,.11,.05556,.61222],937:[0,.68333,.05017,.08334,.7724],945:[0,.43056,.0037,.02778,.6397],946:[.19444,.69444,.05278,.08334,.56563],947:[.19444,.43056,.05556,0,.51773],948:[0,.69444,.03785,.05556,.44444],949:[0,.43056,0,.08334,.46632],950:[.19444,.69444,.07378,.08334,.4375],951:[.19444,.43056,.03588,.05556,.49653],952:[0,.69444,.02778,.08334,.46944],953:[0,.43056,0,.05556,.35394],954:[0,.43056,0,0,.57616],955:[0,.69444,0,0,.58334],956:[.19444,.43056,0,.02778,.60255],957:[0,.43056,.06366,.02778,.49398],958:[.19444,.69444,.04601,.11111,.4375],959:[0,.43056,0,.05556,.48472],960:[0,.43056,.03588,0,.57003],961:[.19444,.43056,0,.08334,.51702],962:[.09722,.43056,.07986,.08334,.36285],963:[0,.43056,.03588,0,.57141],964:[0,.43056,.1132,.02778,.43715],965:[0,.43056,.03588,.02778,.54028],966:[.19444,.43056,0,.08334,.65417],967:[.19444,.43056,0,.05556,.62569],968:[.19444,.69444,.03588,.11111,.65139],969:[0,.43056,.03588,0,.62245],977:[0,.69444,0,.08334,.59144],981:[.19444,.69444,0,.08334,.59583],982:[0,.43056,.02778,0,.82813],1009:[.19444,.43056,0,.08334,.51702],1013:[0,.43056,0,.05556,.4059],57649:[0,.43056,0,.02778,.32246],57911:[.19444,.43056,0,.08334,.38403]},\"SansSerif-Bold\":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.36667],34:[0,.69444,0,0,.55834],35:[.19444,.69444,0,0,.91667],36:[.05556,.75,0,0,.55],37:[.05556,.75,0,0,1.02912],38:[0,.69444,0,0,.83056],39:[0,.69444,0,0,.30556],40:[.25,.75,0,0,.42778],41:[.25,.75,0,0,.42778],42:[0,.75,0,0,.55],43:[.11667,.61667,0,0,.85556],44:[.10556,.13056,0,0,.30556],45:[0,.45833,0,0,.36667],46:[0,.13056,0,0,.30556],47:[.25,.75,0,0,.55],48:[0,.69444,0,0,.55],49:[0,.69444,0,0,.55],50:[0,.69444,0,0,.55],51:[0,.69444,0,0,.55],52:[0,.69444,0,0,.55],53:[0,.69444,0,0,.55],54:[0,.69444,0,0,.55],55:[0,.69444,0,0,.55],56:[0,.69444,0,0,.55],57:[0,.69444,0,0,.55],58:[0,.45833,0,0,.30556],59:[.10556,.45833,0,0,.30556],61:[-.09375,.40625,0,0,.85556],63:[0,.69444,0,0,.51945],64:[0,.69444,0,0,.73334],65:[0,.69444,0,0,.73334],66:[0,.69444,0,0,.73334],67:[0,.69444,0,0,.70278],68:[0,.69444,0,0,.79445],69:[0,.69444,0,0,.64167],70:[0,.69444,0,0,.61111],71:[0,.69444,0,0,.73334],72:[0,.69444,0,0,.79445],73:[0,.69444,0,0,.33056],74:[0,.69444,0,0,.51945],75:[0,.69444,0,0,.76389],76:[0,.69444,0,0,.58056],77:[0,.69444,0,0,.97778],78:[0,.69444,0,0,.79445],79:[0,.69444,0,0,.79445],80:[0,.69444,0,0,.70278],81:[.10556,.69444,0,0,.79445],82:[0,.69444,0,0,.70278],83:[0,.69444,0,0,.61111],84:[0,.69444,0,0,.73334],85:[0,.69444,0,0,.76389],86:[0,.69444,.01528,0,.73334],87:[0,.69444,.01528,0,1.03889],88:[0,.69444,0,0,.73334],89:[0,.69444,.0275,0,.73334],90:[0,.69444,0,0,.67223],91:[.25,.75,0,0,.34306],93:[.25,.75,0,0,.34306],94:[0,.69444,0,0,.55],95:[.35,.10833,.03056,0,.55],97:[0,.45833,0,0,.525],98:[0,.69444,0,0,.56111],99:[0,.45833,0,0,.48889],100:[0,.69444,0,0,.56111],101:[0,.45833,0,0,.51111],102:[0,.69444,.07639,0,.33611],103:[.19444,.45833,.01528,0,.55],104:[0,.69444,0,0,.56111],105:[0,.69444,0,0,.25556],106:[.19444,.69444,0,0,.28611],107:[0,.69444,0,0,.53056],108:[0,.69444,0,0,.25556],109:[0,.45833,0,0,.86667],110:[0,.45833,0,0,.56111],111:[0,.45833,0,0,.55],112:[.19444,.45833,0,0,.56111],113:[.19444,.45833,0,0,.56111],114:[0,.45833,.01528,0,.37222],115:[0,.45833,0,0,.42167],116:[0,.58929,0,0,.40417],117:[0,.45833,0,0,.56111],118:[0,.45833,.01528,0,.5],119:[0,.45833,.01528,0,.74445],120:[0,.45833,0,0,.5],121:[.19444,.45833,.01528,0,.5],122:[0,.45833,0,0,.47639],126:[.35,.34444,0,0,.55],160:[0,0,0,0,.25],168:[0,.69444,0,0,.55],176:[0,.69444,0,0,.73334],180:[0,.69444,0,0,.55],184:[.17014,0,0,0,.48889],305:[0,.45833,0,0,.25556],567:[.19444,.45833,0,0,.28611],710:[0,.69444,0,0,.55],711:[0,.63542,0,0,.55],713:[0,.63778,0,0,.55],728:[0,.69444,0,0,.55],729:[0,.69444,0,0,.30556],730:[0,.69444,0,0,.73334],732:[0,.69444,0,0,.55],733:[0,.69444,0,0,.55],915:[0,.69444,0,0,.58056],916:[0,.69444,0,0,.91667],920:[0,.69444,0,0,.85556],923:[0,.69444,0,0,.67223],926:[0,.69444,0,0,.73334],928:[0,.69444,0,0,.79445],931:[0,.69444,0,0,.79445],933:[0,.69444,0,0,.85556],934:[0,.69444,0,0,.79445],936:[0,.69444,0,0,.85556],937:[0,.69444,0,0,.79445],8211:[0,.45833,.03056,0,.55],8212:[0,.45833,.03056,0,1.10001],8216:[0,.69444,0,0,.30556],8217:[0,.69444,0,0,.30556],8220:[0,.69444,0,0,.55834],8221:[0,.69444,0,0,.55834]},\"SansSerif-Italic\":{32:[0,0,0,0,.25],33:[0,.69444,.05733,0,.31945],34:[0,.69444,.00316,0,.5],35:[.19444,.69444,.05087,0,.83334],36:[.05556,.75,.11156,0,.5],37:[.05556,.75,.03126,0,.83334],38:[0,.69444,.03058,0,.75834],39:[0,.69444,.07816,0,.27778],40:[.25,.75,.13164,0,.38889],41:[.25,.75,.02536,0,.38889],42:[0,.75,.11775,0,.5],43:[.08333,.58333,.02536,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,.01946,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,.13164,0,.5],48:[0,.65556,.11156,0,.5],49:[0,.65556,.11156,0,.5],50:[0,.65556,.11156,0,.5],51:[0,.65556,.11156,0,.5],52:[0,.65556,.11156,0,.5],53:[0,.65556,.11156,0,.5],54:[0,.65556,.11156,0,.5],55:[0,.65556,.11156,0,.5],56:[0,.65556,.11156,0,.5],57:[0,.65556,.11156,0,.5],58:[0,.44444,.02502,0,.27778],59:[.125,.44444,.02502,0,.27778],61:[-.13,.37,.05087,0,.77778],63:[0,.69444,.11809,0,.47222],64:[0,.69444,.07555,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,.08293,0,.66667],67:[0,.69444,.11983,0,.63889],68:[0,.69444,.07555,0,.72223],69:[0,.69444,.11983,0,.59722],70:[0,.69444,.13372,0,.56945],71:[0,.69444,.11983,0,.66667],72:[0,.69444,.08094,0,.70834],73:[0,.69444,.13372,0,.27778],74:[0,.69444,.08094,0,.47222],75:[0,.69444,.11983,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,.08094,0,.875],78:[0,.69444,.08094,0,.70834],79:[0,.69444,.07555,0,.73611],80:[0,.69444,.08293,0,.63889],81:[.125,.69444,.07555,0,.73611],82:[0,.69444,.08293,0,.64584],83:[0,.69444,.09205,0,.55556],84:[0,.69444,.13372,0,.68056],85:[0,.69444,.08094,0,.6875],86:[0,.69444,.1615,0,.66667],87:[0,.69444,.1615,0,.94445],88:[0,.69444,.13372,0,.66667],89:[0,.69444,.17261,0,.66667],90:[0,.69444,.11983,0,.61111],91:[.25,.75,.15942,0,.28889],93:[.25,.75,.08719,0,.28889],94:[0,.69444,.0799,0,.5],95:[.35,.09444,.08616,0,.5],97:[0,.44444,.00981,0,.48056],98:[0,.69444,.03057,0,.51667],99:[0,.44444,.08336,0,.44445],100:[0,.69444,.09483,0,.51667],101:[0,.44444,.06778,0,.44445],102:[0,.69444,.21705,0,.30556],103:[.19444,.44444,.10836,0,.5],104:[0,.69444,.01778,0,.51667],105:[0,.67937,.09718,0,.23889],106:[.19444,.67937,.09162,0,.26667],107:[0,.69444,.08336,0,.48889],108:[0,.69444,.09483,0,.23889],109:[0,.44444,.01778,0,.79445],110:[0,.44444,.01778,0,.51667],111:[0,.44444,.06613,0,.5],112:[.19444,.44444,.0389,0,.51667],113:[.19444,.44444,.04169,0,.51667],114:[0,.44444,.10836,0,.34167],115:[0,.44444,.0778,0,.38333],116:[0,.57143,.07225,0,.36111],117:[0,.44444,.04169,0,.51667],118:[0,.44444,.10836,0,.46111],119:[0,.44444,.10836,0,.68334],120:[0,.44444,.09169,0,.46111],121:[.19444,.44444,.10836,0,.46111],122:[0,.44444,.08752,0,.43472],126:[.35,.32659,.08826,0,.5],160:[0,0,0,0,.25],168:[0,.67937,.06385,0,.5],176:[0,.69444,0,0,.73752],184:[.17014,0,0,0,.44445],305:[0,.44444,.04169,0,.23889],567:[.19444,.44444,.04169,0,.26667],710:[0,.69444,.0799,0,.5],711:[0,.63194,.08432,0,.5],713:[0,.60889,.08776,0,.5],714:[0,.69444,.09205,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,.09483,0,.5],729:[0,.67937,.07774,0,.27778],730:[0,.69444,0,0,.73752],732:[0,.67659,.08826,0,.5],733:[0,.69444,.09205,0,.5],915:[0,.69444,.13372,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,.07555,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,.12816,0,.66667],928:[0,.69444,.08094,0,.70834],931:[0,.69444,.11983,0,.72222],933:[0,.69444,.09031,0,.77778],934:[0,.69444,.04603,0,.72222],936:[0,.69444,.09031,0,.77778],937:[0,.69444,.08293,0,.72222],8211:[0,.44444,.08616,0,.5],8212:[0,.44444,.08616,0,1],8216:[0,.69444,.07816,0,.27778],8217:[0,.69444,.07816,0,.27778],8220:[0,.69444,.14205,0,.5],8221:[0,.69444,.00316,0,.5]},\"SansSerif-Regular\":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.31945],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.75834],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,0,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.65556,0,0,.5],49:[0,.65556,0,0,.5],50:[0,.65556,0,0,.5],51:[0,.65556,0,0,.5],52:[0,.65556,0,0,.5],53:[0,.65556,0,0,.5],54:[0,.65556,0,0,.5],55:[0,.65556,0,0,.5],56:[0,.65556,0,0,.5],57:[0,.65556,0,0,.5],58:[0,.44444,0,0,.27778],59:[.125,.44444,0,0,.27778],61:[-.13,.37,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,0,0,.66667],67:[0,.69444,0,0,.63889],68:[0,.69444,0,0,.72223],69:[0,.69444,0,0,.59722],70:[0,.69444,0,0,.56945],71:[0,.69444,0,0,.66667],72:[0,.69444,0,0,.70834],73:[0,.69444,0,0,.27778],74:[0,.69444,0,0,.47222],75:[0,.69444,0,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,0,0,.875],78:[0,.69444,0,0,.70834],79:[0,.69444,0,0,.73611],80:[0,.69444,0,0,.63889],81:[.125,.69444,0,0,.73611],82:[0,.69444,0,0,.64584],83:[0,.69444,0,0,.55556],84:[0,.69444,0,0,.68056],85:[0,.69444,0,0,.6875],86:[0,.69444,.01389,0,.66667],87:[0,.69444,.01389,0,.94445],88:[0,.69444,0,0,.66667],89:[0,.69444,.025,0,.66667],90:[0,.69444,0,0,.61111],91:[.25,.75,0,0,.28889],93:[.25,.75,0,0,.28889],94:[0,.69444,0,0,.5],95:[.35,.09444,.02778,0,.5],97:[0,.44444,0,0,.48056],98:[0,.69444,0,0,.51667],99:[0,.44444,0,0,.44445],100:[0,.69444,0,0,.51667],101:[0,.44444,0,0,.44445],102:[0,.69444,.06944,0,.30556],103:[.19444,.44444,.01389,0,.5],104:[0,.69444,0,0,.51667],105:[0,.67937,0,0,.23889],106:[.19444,.67937,0,0,.26667],107:[0,.69444,0,0,.48889],108:[0,.69444,0,0,.23889],109:[0,.44444,0,0,.79445],110:[0,.44444,0,0,.51667],111:[0,.44444,0,0,.5],112:[.19444,.44444,0,0,.51667],113:[.19444,.44444,0,0,.51667],114:[0,.44444,.01389,0,.34167],115:[0,.44444,0,0,.38333],116:[0,.57143,0,0,.36111],117:[0,.44444,0,0,.51667],118:[0,.44444,.01389,0,.46111],119:[0,.44444,.01389,0,.68334],120:[0,.44444,0,0,.46111],121:[.19444,.44444,.01389,0,.46111],122:[0,.44444,0,0,.43472],126:[.35,.32659,0,0,.5],160:[0,0,0,0,.25],168:[0,.67937,0,0,.5],176:[0,.69444,0,0,.66667],184:[.17014,0,0,0,.44445],305:[0,.44444,0,0,.23889],567:[.19444,.44444,0,0,.26667],710:[0,.69444,0,0,.5],711:[0,.63194,0,0,.5],713:[0,.60889,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.67937,0,0,.27778],730:[0,.69444,0,0,.66667],732:[0,.67659,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.69444,0,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,0,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,0,0,.66667],928:[0,.69444,0,0,.70834],931:[0,.69444,0,0,.72222],933:[0,.69444,0,0,.77778],934:[0,.69444,0,0,.72222],936:[0,.69444,0,0,.77778],937:[0,.69444,0,0,.72222],8211:[0,.44444,.02778,0,.5],8212:[0,.44444,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5]},\"Script-Regular\":{32:[0,0,0,0,.25],65:[0,.7,.22925,0,.80253],66:[0,.7,.04087,0,.90757],67:[0,.7,.1689,0,.66619],68:[0,.7,.09371,0,.77443],69:[0,.7,.18583,0,.56162],70:[0,.7,.13634,0,.89544],71:[0,.7,.17322,0,.60961],72:[0,.7,.29694,0,.96919],73:[0,.7,.19189,0,.80907],74:[.27778,.7,.19189,0,1.05159],75:[0,.7,.31259,0,.91364],76:[0,.7,.19189,0,.87373],77:[0,.7,.15981,0,1.08031],78:[0,.7,.3525,0,.9015],79:[0,.7,.08078,0,.73787],80:[0,.7,.08078,0,1.01262],81:[0,.7,.03305,0,.88282],82:[0,.7,.06259,0,.85],83:[0,.7,.19189,0,.86767],84:[0,.7,.29087,0,.74697],85:[0,.7,.25815,0,.79996],86:[0,.7,.27523,0,.62204],87:[0,.7,.27523,0,.80532],88:[0,.7,.26006,0,.94445],89:[0,.7,.2939,0,.70961],90:[0,.7,.24037,0,.8212],160:[0,0,0,0,.25]},\"Size1-Regular\":{32:[0,0,0,0,.25],40:[.35001,.85,0,0,.45834],41:[.35001,.85,0,0,.45834],47:[.35001,.85,0,0,.57778],91:[.35001,.85,0,0,.41667],92:[.35001,.85,0,0,.57778],93:[.35001,.85,0,0,.41667],123:[.35001,.85,0,0,.58334],125:[.35001,.85,0,0,.58334],160:[0,0,0,0,.25],710:[0,.72222,0,0,.55556],732:[0,.72222,0,0,.55556],770:[0,.72222,0,0,.55556],771:[0,.72222,0,0,.55556],8214:[-99e-5,.601,0,0,.77778],8593:[1e-5,.6,0,0,.66667],8595:[1e-5,.6,0,0,.66667],8657:[1e-5,.6,0,0,.77778],8659:[1e-5,.6,0,0,.77778],8719:[.25001,.75,0,0,.94445],8720:[.25001,.75,0,0,.94445],8721:[.25001,.75,0,0,1.05556],8730:[.35001,.85,0,0,1],8739:[-.00599,.606,0,0,.33333],8741:[-.00599,.606,0,0,.55556],8747:[.30612,.805,.19445,0,.47222],8748:[.306,.805,.19445,0,.47222],8749:[.306,.805,.19445,0,.47222],8750:[.30612,.805,.19445,0,.47222],8896:[.25001,.75,0,0,.83334],8897:[.25001,.75,0,0,.83334],8898:[.25001,.75,0,0,.83334],8899:[.25001,.75,0,0,.83334],8968:[.35001,.85,0,0,.47222],8969:[.35001,.85,0,0,.47222],8970:[.35001,.85,0,0,.47222],8971:[.35001,.85,0,0,.47222],9168:[-99e-5,.601,0,0,.66667],10216:[.35001,.85,0,0,.47222],10217:[.35001,.85,0,0,.47222],10752:[.25001,.75,0,0,1.11111],10753:[.25001,.75,0,0,1.11111],10754:[.25001,.75,0,0,1.11111],10756:[.25001,.75,0,0,.83334],10758:[.25001,.75,0,0,.83334]},\"Size2-Regular\":{32:[0,0,0,0,.25],40:[.65002,1.15,0,0,.59722],41:[.65002,1.15,0,0,.59722],47:[.65002,1.15,0,0,.81111],91:[.65002,1.15,0,0,.47222],92:[.65002,1.15,0,0,.81111],93:[.65002,1.15,0,0,.47222],123:[.65002,1.15,0,0,.66667],125:[.65002,1.15,0,0,.66667],160:[0,0,0,0,.25],710:[0,.75,0,0,1],732:[0,.75,0,0,1],770:[0,.75,0,0,1],771:[0,.75,0,0,1],8719:[.55001,1.05,0,0,1.27778],8720:[.55001,1.05,0,0,1.27778],8721:[.55001,1.05,0,0,1.44445],8730:[.65002,1.15,0,0,1],8747:[.86225,1.36,.44445,0,.55556],8748:[.862,1.36,.44445,0,.55556],8749:[.862,1.36,.44445,0,.55556],8750:[.86225,1.36,.44445,0,.55556],8896:[.55001,1.05,0,0,1.11111],8897:[.55001,1.05,0,0,1.11111],8898:[.55001,1.05,0,0,1.11111],8899:[.55001,1.05,0,0,1.11111],8968:[.65002,1.15,0,0,.52778],8969:[.65002,1.15,0,0,.52778],8970:[.65002,1.15,0,0,.52778],8971:[.65002,1.15,0,0,.52778],10216:[.65002,1.15,0,0,.61111],10217:[.65002,1.15,0,0,.61111],10752:[.55001,1.05,0,0,1.51112],10753:[.55001,1.05,0,0,1.51112],10754:[.55001,1.05,0,0,1.51112],10756:[.55001,1.05,0,0,1.11111],10758:[.55001,1.05,0,0,1.11111]},\"Size3-Regular\":{32:[0,0,0,0,.25],40:[.95003,1.45,0,0,.73611],41:[.95003,1.45,0,0,.73611],47:[.95003,1.45,0,0,1.04445],91:[.95003,1.45,0,0,.52778],92:[.95003,1.45,0,0,1.04445],93:[.95003,1.45,0,0,.52778],123:[.95003,1.45,0,0,.75],125:[.95003,1.45,0,0,.75],160:[0,0,0,0,.25],710:[0,.75,0,0,1.44445],732:[0,.75,0,0,1.44445],770:[0,.75,0,0,1.44445],771:[0,.75,0,0,1.44445],8730:[.95003,1.45,0,0,1],8968:[.95003,1.45,0,0,.58334],8969:[.95003,1.45,0,0,.58334],8970:[.95003,1.45,0,0,.58334],8971:[.95003,1.45,0,0,.58334],10216:[.95003,1.45,0,0,.75],10217:[.95003,1.45,0,0,.75]},\"Size4-Regular\":{32:[0,0,0,0,.25],40:[1.25003,1.75,0,0,.79167],41:[1.25003,1.75,0,0,.79167],47:[1.25003,1.75,0,0,1.27778],91:[1.25003,1.75,0,0,.58334],92:[1.25003,1.75,0,0,1.27778],93:[1.25003,1.75,0,0,.58334],123:[1.25003,1.75,0,0,.80556],125:[1.25003,1.75,0,0,.80556],160:[0,0,0,0,.25],710:[0,.825,0,0,1.8889],732:[0,.825,0,0,1.8889],770:[0,.825,0,0,1.8889],771:[0,.825,0,0,1.8889],8730:[1.25003,1.75,0,0,1],8968:[1.25003,1.75,0,0,.63889],8969:[1.25003,1.75,0,0,.63889],8970:[1.25003,1.75,0,0,.63889],8971:[1.25003,1.75,0,0,.63889],9115:[.64502,1.155,0,0,.875],9116:[1e-5,.6,0,0,.875],9117:[.64502,1.155,0,0,.875],9118:[.64502,1.155,0,0,.875],9119:[1e-5,.6,0,0,.875],9120:[.64502,1.155,0,0,.875],9121:[.64502,1.155,0,0,.66667],9122:[-99e-5,.601,0,0,.66667],9123:[.64502,1.155,0,0,.66667],9124:[.64502,1.155,0,0,.66667],9125:[-99e-5,.601,0,0,.66667],9126:[.64502,1.155,0,0,.66667],9127:[1e-5,.9,0,0,.88889],9128:[.65002,1.15,0,0,.88889],9129:[.90001,0,0,0,.88889],9130:[0,.3,0,0,.88889],9131:[1e-5,.9,0,0,.88889],9132:[.65002,1.15,0,0,.88889],9133:[.90001,0,0,0,.88889],9143:[.88502,.915,0,0,1.05556],10216:[1.25003,1.75,0,0,.80556],10217:[1.25003,1.75,0,0,.80556],57344:[-.00499,.605,0,0,1.05556],57345:[-.00499,.605,0,0,1.05556],57680:[0,.12,0,0,.45],57681:[0,.12,0,0,.45],57682:[0,.12,0,0,.45],57683:[0,.12,0,0,.45]},\"Typewriter-Regular\":{32:[0,0,0,0,.525],33:[0,.61111,0,0,.525],34:[0,.61111,0,0,.525],35:[0,.61111,0,0,.525],36:[.08333,.69444,0,0,.525],37:[.08333,.69444,0,0,.525],38:[0,.61111,0,0,.525],39:[0,.61111,0,0,.525],40:[.08333,.69444,0,0,.525],41:[.08333,.69444,0,0,.525],42:[0,.52083,0,0,.525],43:[-.08056,.53055,0,0,.525],44:[.13889,.125,0,0,.525],45:[-.08056,.53055,0,0,.525],46:[0,.125,0,0,.525],47:[.08333,.69444,0,0,.525],48:[0,.61111,0,0,.525],49:[0,.61111,0,0,.525],50:[0,.61111,0,0,.525],51:[0,.61111,0,0,.525],52:[0,.61111,0,0,.525],53:[0,.61111,0,0,.525],54:[0,.61111,0,0,.525],55:[0,.61111,0,0,.525],56:[0,.61111,0,0,.525],57:[0,.61111,0,0,.525],58:[0,.43056,0,0,.525],59:[.13889,.43056,0,0,.525],60:[-.05556,.55556,0,0,.525],61:[-.19549,.41562,0,0,.525],62:[-.05556,.55556,0,0,.525],63:[0,.61111,0,0,.525],64:[0,.61111,0,0,.525],65:[0,.61111,0,0,.525],66:[0,.61111,0,0,.525],67:[0,.61111,0,0,.525],68:[0,.61111,0,0,.525],69:[0,.61111,0,0,.525],70:[0,.61111,0,0,.525],71:[0,.61111,0,0,.525],72:[0,.61111,0,0,.525],73:[0,.61111,0,0,.525],74:[0,.61111,0,0,.525],75:[0,.61111,0,0,.525],76:[0,.61111,0,0,.525],77:[0,.61111,0,0,.525],78:[0,.61111,0,0,.525],79:[0,.61111,0,0,.525],80:[0,.61111,0,0,.525],81:[.13889,.61111,0,0,.525],82:[0,.61111,0,0,.525],83:[0,.61111,0,0,.525],84:[0,.61111,0,0,.525],85:[0,.61111,0,0,.525],86:[0,.61111,0,0,.525],87:[0,.61111,0,0,.525],88:[0,.61111,0,0,.525],89:[0,.61111,0,0,.525],90:[0,.61111,0,0,.525],91:[.08333,.69444,0,0,.525],92:[.08333,.69444,0,0,.525],93:[.08333,.69444,0,0,.525],94:[0,.61111,0,0,.525],95:[.09514,0,0,0,.525],96:[0,.61111,0,0,.525],97:[0,.43056,0,0,.525],98:[0,.61111,0,0,.525],99:[0,.43056,0,0,.525],100:[0,.61111,0,0,.525],101:[0,.43056,0,0,.525],102:[0,.61111,0,0,.525],103:[.22222,.43056,0,0,.525],104:[0,.61111,0,0,.525],105:[0,.61111,0,0,.525],106:[.22222,.61111,0,0,.525],107:[0,.61111,0,0,.525],108:[0,.61111,0,0,.525],109:[0,.43056,0,0,.525],110:[0,.43056,0,0,.525],111:[0,.43056,0,0,.525],112:[.22222,.43056,0,0,.525],113:[.22222,.43056,0,0,.525],114:[0,.43056,0,0,.525],115:[0,.43056,0,0,.525],116:[0,.55358,0,0,.525],117:[0,.43056,0,0,.525],118:[0,.43056,0,0,.525],119:[0,.43056,0,0,.525],120:[0,.43056,0,0,.525],121:[.22222,.43056,0,0,.525],122:[0,.43056,0,0,.525],123:[.08333,.69444,0,0,.525],124:[.08333,.69444,0,0,.525],125:[.08333,.69444,0,0,.525],126:[0,.61111,0,0,.525],127:[0,.61111,0,0,.525],160:[0,0,0,0,.525],176:[0,.61111,0,0,.525],184:[.19445,0,0,0,.525],305:[0,.43056,0,0,.525],567:[.22222,.43056,0,0,.525],711:[0,.56597,0,0,.525],713:[0,.56555,0,0,.525],714:[0,.61111,0,0,.525],715:[0,.61111,0,0,.525],728:[0,.61111,0,0,.525],730:[0,.61111,0,0,.525],770:[0,.61111,0,0,.525],771:[0,.61111,0,0,.525],776:[0,.61111,0,0,.525],915:[0,.61111,0,0,.525],916:[0,.61111,0,0,.525],920:[0,.61111,0,0,.525],923:[0,.61111,0,0,.525],926:[0,.61111,0,0,.525],928:[0,.61111,0,0,.525],931:[0,.61111,0,0,.525],933:[0,.61111,0,0,.525],934:[0,.61111,0,0,.525],936:[0,.61111,0,0,.525],937:[0,.61111,0,0,.525],8216:[0,.61111,0,0,.525],8217:[0,.61111,0,0,.525],8242:[0,.61111,0,0,.525],9251:[.11111,.21944,0,0,.525]}},P={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2],arrayRuleWidth:[.04,.04,.04],fboxsep:[.3,.3,.3],fboxrule:[.04,.04,.04]},F={\"\\xc5\":\"A\",\"\\xd0\":\"D\",\"\\xde\":\"o\",\"\\xe5\":\"a\",\"\\xf0\":\"d\",\"\\xfe\":\"o\",\"\\u0410\":\"A\",\"\\u0411\":\"B\",\"\\u0412\":\"B\",\"\\u0413\":\"F\",\"\\u0414\":\"A\",\"\\u0415\":\"E\",\"\\u0416\":\"K\",\"\\u0417\":\"3\",\"\\u0418\":\"N\",\"\\u0419\":\"N\",\"\\u041a\":\"K\",\"\\u041b\":\"N\",\"\\u041c\":\"M\",\"\\u041d\":\"H\",\"\\u041e\":\"O\",\"\\u041f\":\"N\",\"\\u0420\":\"P\",\"\\u0421\":\"C\",\"\\u0422\":\"T\",\"\\u0423\":\"y\",\"\\u0424\":\"O\",\"\\u0425\":\"X\",\"\\u0426\":\"U\",\"\\u0427\":\"h\",\"\\u0428\":\"W\",\"\\u0429\":\"W\",\"\\u042a\":\"B\",\"\\u042b\":\"X\",\"\\u042c\":\"B\",\"\\u042d\":\"3\",\"\\u042e\":\"X\",\"\\u042f\":\"R\",\"\\u0430\":\"a\",\"\\u0431\":\"b\",\"\\u0432\":\"a\",\"\\u0433\":\"r\",\"\\u0434\":\"y\",\"\\u0435\":\"e\",\"\\u0436\":\"m\",\"\\u0437\":\"e\",\"\\u0438\":\"n\",\"\\u0439\":\"n\",\"\\u043a\":\"n\",\"\\u043b\":\"n\",\"\\u043c\":\"m\",\"\\u043d\":\"n\",\"\\u043e\":\"o\",\"\\u043f\":\"n\",\"\\u0440\":\"p\",\"\\u0441\":\"c\",\"\\u0442\":\"o\",\"\\u0443\":\"y\",\"\\u0444\":\"b\",\"\\u0445\":\"x\",\"\\u0446\":\"n\",\"\\u0447\":\"n\",\"\\u0448\":\"w\",\"\\u0449\":\"w\",\"\\u044a\":\"a\",\"\\u044b\":\"m\",\"\\u044c\":\"a\",\"\\u044d\":\"e\",\"\\u044e\":\"m\",\"\\u044f\":\"r\"};function V(e,t,r){if(!D[t])throw new Error(\"Font metrics not found for font: \"+t+\".\");var n=e.charCodeAt(0),a=D[t][n];if(!a&&e[0]in F&&(n=F[e[0]].charCodeAt(0),a=D[t][n]),a||\"text\"!==r||w(n)&&(a=D[t][77]),a)return{depth:a[0],height:a[1],italic:a[2],skew:a[3],width:a[4]}}var G={};var U={bin:1,close:1,inner:1,open:1,punct:1,rel:1},Y={\"accent-token\":1,mathord:1,\"op-token\":1,spacing:1,textord:1},W={math:{},text:{}},X=W;function _(e,t,r,n,a,i){W[e][a]={font:t,group:r,replace:n},i&&n&&(W[e][n]=W[e][a])}var j=\"math\",$=\"text\",Z=\"main\",K=\"ams\",J=\"accent-token\",Q=\"bin\",ee=\"close\",te=\"inner\",re=\"mathord\",ne=\"op-token\",ae=\"open\",ie=\"punct\",oe=\"rel\",se=\"spacing\",le=\"textord\";_(j,Z,oe,\"\\u2261\",\"\\\\equiv\",!0),_(j,Z,oe,\"\\u227a\",\"\\\\prec\",!0),_(j,Z,oe,\"\\u227b\",\"\\\\succ\",!0),_(j,Z,oe,\"\\u223c\",\"\\\\sim\",!0),_(j,Z,oe,\"\\u22a5\",\"\\\\perp\"),_(j,Z,oe,\"\\u2aaf\",\"\\\\preceq\",!0),_(j,Z,oe,\"\\u2ab0\",\"\\\\succeq\",!0),_(j,Z,oe,\"\\u2243\",\"\\\\simeq\",!0),_(j,Z,oe,\"\\u2223\",\"\\\\mid\",!0),_(j,Z,oe,\"\\u226a\",\"\\\\ll\",!0),_(j,Z,oe,\"\\u226b\",\"\\\\gg\",!0),_(j,Z,oe,\"\\u224d\",\"\\\\asymp\",!0),_(j,Z,oe,\"\\u2225\",\"\\\\parallel\"),_(j,Z,oe,\"\\u22c8\",\"\\\\bowtie\",!0),_(j,Z,oe,\"\\u2323\",\"\\\\smile\",!0),_(j,Z,oe,\"\\u2291\",\"\\\\sqsubseteq\",!0),_(j,Z,oe,\"\\u2292\",\"\\\\sqsupseteq\",!0),_(j,Z,oe,\"\\u2250\",\"\\\\doteq\",!0),_(j,Z,oe,\"\\u2322\",\"\\\\frown\",!0),_(j,Z,oe,\"\\u220b\",\"\\\\ni\",!0),_(j,Z,oe,\"\\u221d\",\"\\\\propto\",!0),_(j,Z,oe,\"\\u22a2\",\"\\\\vdash\",!0),_(j,Z,oe,\"\\u22a3\",\"\\\\dashv\",!0),_(j,Z,oe,\"\\u220b\",\"\\\\owns\"),_(j,Z,ie,\".\",\"\\\\ldotp\"),_(j,Z,ie,\"\\u22c5\",\"\\\\cdotp\"),_(j,Z,le,\"#\",\"\\\\#\"),_($,Z,le,\"#\",\"\\\\#\"),_(j,Z,le,\"&\",\"\\\\&\"),_($,Z,le,\"&\",\"\\\\&\"),_(j,Z,le,\"\\u2135\",\"\\\\aleph\",!0),_(j,Z,le,\"\\u2200\",\"\\\\forall\",!0),_(j,Z,le,\"\\u210f\",\"\\\\hbar\",!0),_(j,Z,le,\"\\u2203\",\"\\\\exists\",!0),_(j,Z,le,\"\\u2207\",\"\\\\nabla\",!0),_(j,Z,le,\"\\u266d\",\"\\\\flat\",!0),_(j,Z,le,\"\\u2113\",\"\\\\ell\",!0),_(j,Z,le,\"\\u266e\",\"\\\\natural\",!0),_(j,Z,le,\"\\u2663\",\"\\\\clubsuit\",!0),_(j,Z,le,\"\\u2118\",\"\\\\wp\",!0),_(j,Z,le,\"\\u266f\",\"\\\\sharp\",!0),_(j,Z,le,\"\\u2662\",\"\\\\diamondsuit\",!0),_(j,Z,le,\"\\u211c\",\"\\\\Re\",!0),_(j,Z,le,\"\\u2661\",\"\\\\heartsuit\",!0),_(j,Z,le,\"\\u2111\",\"\\\\Im\",!0),_(j,Z,le,\"\\u2660\",\"\\\\spadesuit\",!0),_(j,Z,le,\"\\xa7\",\"\\\\S\",!0),_($,Z,le,\"\\xa7\",\"\\\\S\"),_(j,Z,le,\"\\xb6\",\"\\\\P\",!0),_($,Z,le,\"\\xb6\",\"\\\\P\"),_(j,Z,le,\"\\u2020\",\"\\\\dag\"),_($,Z,le,\"\\u2020\",\"\\\\dag\"),_($,Z,le,\"\\u2020\",\"\\\\textdagger\"),_(j,Z,le,\"\\u2021\",\"\\\\ddag\"),_($,Z,le,\"\\u2021\",\"\\\\ddag\"),_($,Z,le,\"\\u2021\",\"\\\\textdaggerdbl\"),_(j,Z,ee,\"\\u23b1\",\"\\\\rmoustache\",!0),_(j,Z,ae,\"\\u23b0\",\"\\\\lmoustache\",!0),_(j,Z,ee,\"\\u27ef\",\"\\\\rgroup\",!0),_(j,Z,ae,\"\\u27ee\",\"\\\\lgroup\",!0),_(j,Z,Q,\"\\u2213\",\"\\\\mp\",!0),_(j,Z,Q,\"\\u2296\",\"\\\\ominus\",!0),_(j,Z,Q,\"\\u228e\",\"\\\\uplus\",!0),_(j,Z,Q,\"\\u2293\",\"\\\\sqcap\",!0),_(j,Z,Q,\"\\u2217\",\"\\\\ast\"),_(j,Z,Q,\"\\u2294\",\"\\\\sqcup\",!0),_(j,Z,Q,\"\\u25ef\",\"\\\\bigcirc\",!0),_(j,Z,Q,\"\\u2219\",\"\\\\bullet\"),_(j,Z,Q,\"\\u2021\",\"\\\\ddagger\"),_(j,Z,Q,\"\\u2240\",\"\\\\wr\",!0),_(j,Z,Q,\"\\u2a3f\",\"\\\\amalg\"),_(j,Z,Q,\"&\",\"\\\\And\"),_(j,Z,oe,\"\\u27f5\",\"\\\\longleftarrow\",!0),_(j,Z,oe,\"\\u21d0\",\"\\\\Leftarrow\",!0),_(j,Z,oe,\"\\u27f8\",\"\\\\Longleftarrow\",!0),_(j,Z,oe,\"\\u27f6\",\"\\\\longrightarrow\",!0),_(j,Z,oe,\"\\u21d2\",\"\\\\Rightarrow\",!0),_(j,Z,oe,\"\\u27f9\",\"\\\\Longrightarrow\",!0),_(j,Z,oe,\"\\u2194\",\"\\\\leftrightarrow\",!0),_(j,Z,oe,\"\\u27f7\",\"\\\\longleftrightarrow\",!0),_(j,Z,oe,\"\\u21d4\",\"\\\\Leftrightarrow\",!0),_(j,Z,oe,\"\\u27fa\",\"\\\\Longleftrightarrow\",!0),_(j,Z,oe,\"\\u21a6\",\"\\\\mapsto\",!0),_(j,Z,oe,\"\\u27fc\",\"\\\\longmapsto\",!0),_(j,Z,oe,\"\\u2197\",\"\\\\nearrow\",!0),_(j,Z,oe,\"\\u21a9\",\"\\\\hookleftarrow\",!0),_(j,Z,oe,\"\\u21aa\",\"\\\\hookrightarrow\",!0),_(j,Z,oe,\"\\u2198\",\"\\\\searrow\",!0),_(j,Z,oe,\"\\u21bc\",\"\\\\leftharpoonup\",!0),_(j,Z,oe,\"\\u21c0\",\"\\\\rightharpoonup\",!0),_(j,Z,oe,\"\\u2199\",\"\\\\swarrow\",!0),_(j,Z,oe,\"\\u21bd\",\"\\\\leftharpoondown\",!0),_(j,Z,oe,\"\\u21c1\",\"\\\\rightharpoondown\",!0),_(j,Z,oe,\"\\u2196\",\"\\\\nwarrow\",!0),_(j,Z,oe,\"\\u21cc\",\"\\\\rightleftharpoons\",!0),_(j,K,oe,\"\\u226e\",\"\\\\nless\",!0),_(j,K,oe,\"\\ue010\",\"\\\\@nleqslant\"),_(j,K,oe,\"\\ue011\",\"\\\\@nleqq\"),_(j,K,oe,\"\\u2a87\",\"\\\\lneq\",!0),_(j,K,oe,\"\\u2268\",\"\\\\lneqq\",!0),_(j,K,oe,\"\\ue00c\",\"\\\\@lvertneqq\"),_(j,K,oe,\"\\u22e6\",\"\\\\lnsim\",!0),_(j,K,oe,\"\\u2a89\",\"\\\\lnapprox\",!0),_(j,K,oe,\"\\u2280\",\"\\\\nprec\",!0),_(j,K,oe,\"\\u22e0\",\"\\\\npreceq\",!0),_(j,K,oe,\"\\u22e8\",\"\\\\precnsim\",!0),_(j,K,oe,\"\\u2ab9\",\"\\\\precnapprox\",!0),_(j,K,oe,\"\\u2241\",\"\\\\nsim\",!0),_(j,K,oe,\"\\ue006\",\"\\\\@nshortmid\"),_(j,K,oe,\"\\u2224\",\"\\\\nmid\",!0),_(j,K,oe,\"\\u22ac\",\"\\\\nvdash\",!0),_(j,K,oe,\"\\u22ad\",\"\\\\nvDash\",!0),_(j,K,oe,\"\\u22ea\",\"\\\\ntriangleleft\"),_(j,K,oe,\"\\u22ec\",\"\\\\ntrianglelefteq\",!0),_(j,K,oe,\"\\u228a\",\"\\\\subsetneq\",!0),_(j,K,oe,\"\\ue01a\",\"\\\\@varsubsetneq\"),_(j,K,oe,\"\\u2acb\",\"\\\\subsetneqq\",!0),_(j,K,oe,\"\\ue017\",\"\\\\@varsubsetneqq\"),_(j,K,oe,\"\\u226f\",\"\\\\ngtr\",!0),_(j,K,oe,\"\\ue00f\",\"\\\\@ngeqslant\"),_(j,K,oe,\"\\ue00e\",\"\\\\@ngeqq\"),_(j,K,oe,\"\\u2a88\",\"\\\\gneq\",!0),_(j,K,oe,\"\\u2269\",\"\\\\gneqq\",!0),_(j,K,oe,\"\\ue00d\",\"\\\\@gvertneqq\"),_(j,K,oe,\"\\u22e7\",\"\\\\gnsim\",!0),_(j,K,oe,\"\\u2a8a\",\"\\\\gnapprox\",!0),_(j,K,oe,\"\\u2281\",\"\\\\nsucc\",!0),_(j,K,oe,\"\\u22e1\",\"\\\\nsucceq\",!0),_(j,K,oe,\"\\u22e9\",\"\\\\succnsim\",!0),_(j,K,oe,\"\\u2aba\",\"\\\\succnapprox\",!0),_(j,K,oe,\"\\u2246\",\"\\\\ncong\",!0),_(j,K,oe,\"\\ue007\",\"\\\\@nshortparallel\"),_(j,K,oe,\"\\u2226\",\"\\\\nparallel\",!0),_(j,K,oe,\"\\u22af\",\"\\\\nVDash\",!0),_(j,K,oe,\"\\u22eb\",\"\\\\ntriangleright\"),_(j,K,oe,\"\\u22ed\",\"\\\\ntrianglerighteq\",!0),_(j,K,oe,\"\\ue018\",\"\\\\@nsupseteqq\"),_(j,K,oe,\"\\u228b\",\"\\\\supsetneq\",!0),_(j,K,oe,\"\\ue01b\",\"\\\\@varsupsetneq\"),_(j,K,oe,\"\\u2acc\",\"\\\\supsetneqq\",!0),_(j,K,oe,\"\\ue019\",\"\\\\@varsupsetneqq\"),_(j,K,oe,\"\\u22ae\",\"\\\\nVdash\",!0),_(j,K,oe,\"\\u2ab5\",\"\\\\precneqq\",!0),_(j,K,oe,\"\\u2ab6\",\"\\\\succneqq\",!0),_(j,K,oe,\"\\ue016\",\"\\\\@nsubseteqq\"),_(j,K,Q,\"\\u22b4\",\"\\\\unlhd\"),_(j,K,Q,\"\\u22b5\",\"\\\\unrhd\"),_(j,K,oe,\"\\u219a\",\"\\\\nleftarrow\",!0),_(j,K,oe,\"\\u219b\",\"\\\\nrightarrow\",!0),_(j,K,oe,\"\\u21cd\",\"\\\\nLeftarrow\",!0),_(j,K,oe,\"\\u21cf\",\"\\\\nRightarrow\",!0),_(j,K,oe,\"\\u21ae\",\"\\\\nleftrightarrow\",!0),_(j,K,oe,\"\\u21ce\",\"\\\\nLeftrightarrow\",!0),_(j,K,oe,\"\\u25b3\",\"\\\\vartriangle\"),_(j,K,le,\"\\u210f\",\"\\\\hslash\"),_(j,K,le,\"\\u25bd\",\"\\\\triangledown\"),_(j,K,le,\"\\u25ca\",\"\\\\lozenge\"),_(j,K,le,\"\\u24c8\",\"\\\\circledS\"),_(j,K,le,\"\\xae\",\"\\\\circledR\"),_($,K,le,\"\\xae\",\"\\\\circledR\"),_(j,K,le,\"\\u2221\",\"\\\\measuredangle\",!0),_(j,K,le,\"\\u2204\",\"\\\\nexists\"),_(j,K,le,\"\\u2127\",\"\\\\mho\"),_(j,K,le,\"\\u2132\",\"\\\\Finv\",!0),_(j,K,le,\"\\u2141\",\"\\\\Game\",!0),_(j,K,le,\"\\u2035\",\"\\\\backprime\"),_(j,K,le,\"\\u25b2\",\"\\\\blacktriangle\"),_(j,K,le,\"\\u25bc\",\"\\\\blacktriangledown\"),_(j,K,le,\"\\u25a0\",\"\\\\blacksquare\"),_(j,K,le,\"\\u29eb\",\"\\\\blacklozenge\"),_(j,K,le,\"\\u2605\",\"\\\\bigstar\"),_(j,K,le,\"\\u2222\",\"\\\\sphericalangle\",!0),_(j,K,le,\"\\u2201\",\"\\\\complement\",!0),_(j,K,le,\"\\xf0\",\"\\\\eth\",!0),_($,Z,le,\"\\xf0\",\"\\xf0\"),_(j,K,le,\"\\u2571\",\"\\\\diagup\"),_(j,K,le,\"\\u2572\",\"\\\\diagdown\"),_(j,K,le,\"\\u25a1\",\"\\\\square\"),_(j,K,le,\"\\u25a1\",\"\\\\Box\"),_(j,K,le,\"\\u25ca\",\"\\\\Diamond\"),_(j,K,le,\"\\xa5\",\"\\\\yen\",!0),_($,K,le,\"\\xa5\",\"\\\\yen\",!0),_(j,K,le,\"\\u2713\",\"\\\\checkmark\",!0),_($,K,le,\"\\u2713\",\"\\\\checkmark\"),_(j,K,le,\"\\u2136\",\"\\\\beth\",!0),_(j,K,le,\"\\u2138\",\"\\\\daleth\",!0),_(j,K,le,\"\\u2137\",\"\\\\gimel\",!0),_(j,K,le,\"\\u03dd\",\"\\\\digamma\",!0),_(j,K,le,\"\\u03f0\",\"\\\\varkappa\"),_(j,K,ae,\"\\u250c\",\"\\\\@ulcorner\",!0),_(j,K,ee,\"\\u2510\",\"\\\\@urcorner\",!0),_(j,K,ae,\"\\u2514\",\"\\\\@llcorner\",!0),_(j,K,ee,\"\\u2518\",\"\\\\@lrcorner\",!0),_(j,K,oe,\"\\u2266\",\"\\\\leqq\",!0),_(j,K,oe,\"\\u2a7d\",\"\\\\leqslant\",!0),_(j,K,oe,\"\\u2a95\",\"\\\\eqslantless\",!0),_(j,K,oe,\"\\u2272\",\"\\\\lesssim\",!0),_(j,K,oe,\"\\u2a85\",\"\\\\lessapprox\",!0),_(j,K,oe,\"\\u224a\",\"\\\\approxeq\",!0),_(j,K,Q,\"\\u22d6\",\"\\\\lessdot\"),_(j,K,oe,\"\\u22d8\",\"\\\\lll\",!0),_(j,K,oe,\"\\u2276\",\"\\\\lessgtr\",!0),_(j,K,oe,\"\\u22da\",\"\\\\lesseqgtr\",!0),_(j,K,oe,\"\\u2a8b\",\"\\\\lesseqqgtr\",!0),_(j,K,oe,\"\\u2251\",\"\\\\doteqdot\"),_(j,K,oe,\"\\u2253\",\"\\\\risingdotseq\",!0),_(j,K,oe,\"\\u2252\",\"\\\\fallingdotseq\",!0),_(j,K,oe,\"\\u223d\",\"\\\\backsim\",!0),_(j,K,oe,\"\\u22cd\",\"\\\\backsimeq\",!0),_(j,K,oe,\"\\u2ac5\",\"\\\\subseteqq\",!0),_(j,K,oe,\"\\u22d0\",\"\\\\Subset\",!0),_(j,K,oe,\"\\u228f\",\"\\\\sqsubset\",!0),_(j,K,oe,\"\\u227c\",\"\\\\preccurlyeq\",!0),_(j,K,oe,\"\\u22de\",\"\\\\curlyeqprec\",!0),_(j,K,oe,\"\\u227e\",\"\\\\precsim\",!0),_(j,K,oe,\"\\u2ab7\",\"\\\\precapprox\",!0),_(j,K,oe,\"\\u22b2\",\"\\\\vartriangleleft\"),_(j,K,oe,\"\\u22b4\",\"\\\\trianglelefteq\"),_(j,K,oe,\"\\u22a8\",\"\\\\vDash\",!0),_(j,K,oe,\"\\u22aa\",\"\\\\Vvdash\",!0),_(j,K,oe,\"\\u2323\",\"\\\\smallsmile\"),_(j,K,oe,\"\\u2322\",\"\\\\smallfrown\"),_(j,K,oe,\"\\u224f\",\"\\\\bumpeq\",!0),_(j,K,oe,\"\\u224e\",\"\\\\Bumpeq\",!0),_(j,K,oe,\"\\u2267\",\"\\\\geqq\",!0),_(j,K,oe,\"\\u2a7e\",\"\\\\geqslant\",!0),_(j,K,oe,\"\\u2a96\",\"\\\\eqslantgtr\",!0),_(j,K,oe,\"\\u2273\",\"\\\\gtrsim\",!0),_(j,K,oe,\"\\u2a86\",\"\\\\gtrapprox\",!0),_(j,K,Q,\"\\u22d7\",\"\\\\gtrdot\"),_(j,K,oe,\"\\u22d9\",\"\\\\ggg\",!0),_(j,K,oe,\"\\u2277\",\"\\\\gtrless\",!0),_(j,K,oe,\"\\u22db\",\"\\\\gtreqless\",!0),_(j,K,oe,\"\\u2a8c\",\"\\\\gtreqqless\",!0),_(j,K,oe,\"\\u2256\",\"\\\\eqcirc\",!0),_(j,K,oe,\"\\u2257\",\"\\\\circeq\",!0),_(j,K,oe,\"\\u225c\",\"\\\\triangleq\",!0),_(j,K,oe,\"\\u223c\",\"\\\\thicksim\"),_(j,K,oe,\"\\u2248\",\"\\\\thickapprox\"),_(j,K,oe,\"\\u2ac6\",\"\\\\supseteqq\",!0),_(j,K,oe,\"\\u22d1\",\"\\\\Supset\",!0),_(j,K,oe,\"\\u2290\",\"\\\\sqsupset\",!0),_(j,K,oe,\"\\u227d\",\"\\\\succcurlyeq\",!0),_(j,K,oe,\"\\u22df\",\"\\\\curlyeqsucc\",!0),_(j,K,oe,\"\\u227f\",\"\\\\succsim\",!0),_(j,K,oe,\"\\u2ab8\",\"\\\\succapprox\",!0),_(j,K,oe,\"\\u22b3\",\"\\\\vartriangleright\"),_(j,K,oe,\"\\u22b5\",\"\\\\trianglerighteq\"),_(j,K,oe,\"\\u22a9\",\"\\\\Vdash\",!0),_(j,K,oe,\"\\u2223\",\"\\\\shortmid\"),_(j,K,oe,\"\\u2225\",\"\\\\shortparallel\"),_(j,K,oe,\"\\u226c\",\"\\\\between\",!0),_(j,K,oe,\"\\u22d4\",\"\\\\pitchfork\",!0),_(j,K,oe,\"\\u221d\",\"\\\\varpropto\"),_(j,K,oe,\"\\u25c0\",\"\\\\blacktriangleleft\"),_(j,K,oe,\"\\u2234\",\"\\\\therefore\",!0),_(j,K,oe,\"\\u220d\",\"\\\\backepsilon\"),_(j,K,oe,\"\\u25b6\",\"\\\\blacktriangleright\"),_(j,K,oe,\"\\u2235\",\"\\\\because\",!0),_(j,K,oe,\"\\u22d8\",\"\\\\llless\"),_(j,K,oe,\"\\u22d9\",\"\\\\gggtr\"),_(j,K,Q,\"\\u22b2\",\"\\\\lhd\"),_(j,K,Q,\"\\u22b3\",\"\\\\rhd\"),_(j,K,oe,\"\\u2242\",\"\\\\eqsim\",!0),_(j,Z,oe,\"\\u22c8\",\"\\\\Join\"),_(j,K,oe,\"\\u2251\",\"\\\\Doteq\",!0),_(j,K,Q,\"\\u2214\",\"\\\\dotplus\",!0),_(j,K,Q,\"\\u2216\",\"\\\\smallsetminus\"),_(j,K,Q,\"\\u22d2\",\"\\\\Cap\",!0),_(j,K,Q,\"\\u22d3\",\"\\\\Cup\",!0),_(j,K,Q,\"\\u2a5e\",\"\\\\doublebarwedge\",!0),_(j,K,Q,\"\\u229f\",\"\\\\boxminus\",!0),_(j,K,Q,\"\\u229e\",\"\\\\boxplus\",!0),_(j,K,Q,\"\\u22c7\",\"\\\\divideontimes\",!0),_(j,K,Q,\"\\u22c9\",\"\\\\ltimes\",!0),_(j,K,Q,\"\\u22ca\",\"\\\\rtimes\",!0),_(j,K,Q,\"\\u22cb\",\"\\\\leftthreetimes\",!0),_(j,K,Q,\"\\u22cc\",\"\\\\rightthreetimes\",!0),_(j,K,Q,\"\\u22cf\",\"\\\\curlywedge\",!0),_(j,K,Q,\"\\u22ce\",\"\\\\curlyvee\",!0),_(j,K,Q,\"\\u229d\",\"\\\\circleddash\",!0),_(j,K,Q,\"\\u229b\",\"\\\\circledast\",!0),_(j,K,Q,\"\\u22c5\",\"\\\\centerdot\"),_(j,K,Q,\"\\u22ba\",\"\\\\intercal\",!0),_(j,K,Q,\"\\u22d2\",\"\\\\doublecap\"),_(j,K,Q,\"\\u22d3\",\"\\\\doublecup\"),_(j,K,Q,\"\\u22a0\",\"\\\\boxtimes\",!0),_(j,K,oe,\"\\u21e2\",\"\\\\dashrightarrow\",!0),_(j,K,oe,\"\\u21e0\",\"\\\\dashleftarrow\",!0),_(j,K,oe,\"\\u21c7\",\"\\\\leftleftarrows\",!0),_(j,K,oe,\"\\u21c6\",\"\\\\leftrightarrows\",!0),_(j,K,oe,\"\\u21da\",\"\\\\Lleftarrow\",!0),_(j,K,oe,\"\\u219e\",\"\\\\twoheadleftarrow\",!0),_(j,K,oe,\"\\u21a2\",\"\\\\leftarrowtail\",!0),_(j,K,oe,\"\\u21ab\",\"\\\\looparrowleft\",!0),_(j,K,oe,\"\\u21cb\",\"\\\\leftrightharpoons\",!0),_(j,K,oe,\"\\u21b6\",\"\\\\curvearrowleft\",!0),_(j,K,oe,\"\\u21ba\",\"\\\\circlearrowleft\",!0),_(j,K,oe,\"\\u21b0\",\"\\\\Lsh\",!0),_(j,K,oe,\"\\u21c8\",\"\\\\upuparrows\",!0),_(j,K,oe,\"\\u21bf\",\"\\\\upharpoonleft\",!0),_(j,K,oe,\"\\u21c3\",\"\\\\downharpoonleft\",!0),_(j,Z,oe,\"\\u22b6\",\"\\\\origof\",!0),_(j,Z,oe,\"\\u22b7\",\"\\\\imageof\",!0),_(j,K,oe,\"\\u22b8\",\"\\\\multimap\",!0),_(j,K,oe,\"\\u21ad\",\"\\\\leftrightsquigarrow\",!0),_(j,K,oe,\"\\u21c9\",\"\\\\rightrightarrows\",!0),_(j,K,oe,\"\\u21c4\",\"\\\\rightleftarrows\",!0),_(j,K,oe,\"\\u21a0\",\"\\\\twoheadrightarrow\",!0),_(j,K,oe,\"\\u21a3\",\"\\\\rightarrowtail\",!0),_(j,K,oe,\"\\u21ac\",\"\\\\looparrowright\",!0),_(j,K,oe,\"\\u21b7\",\"\\\\curvearrowright\",!0),_(j,K,oe,\"\\u21bb\",\"\\\\circlearrowright\",!0),_(j,K,oe,\"\\u21b1\",\"\\\\Rsh\",!0),_(j,K,oe,\"\\u21ca\",\"\\\\downdownarrows\",!0),_(j,K,oe,\"\\u21be\",\"\\\\upharpoonright\",!0),_(j,K,oe,\"\\u21c2\",\"\\\\downharpoonright\",!0),_(j,K,oe,\"\\u21dd\",\"\\\\rightsquigarrow\",!0),_(j,K,oe,\"\\u21dd\",\"\\\\leadsto\"),_(j,K,oe,\"\\u21db\",\"\\\\Rrightarrow\",!0),_(j,K,oe,\"\\u21be\",\"\\\\restriction\"),_(j,Z,le,\"\\u2018\",\"`\"),_(j,Z,le,\"$\",\"\\\\$\"),_($,Z,le,\"$\",\"\\\\$\"),_($,Z,le,\"$\",\"\\\\textdollar\"),_(j,Z,le,\"%\",\"\\\\%\"),_($,Z,le,\"%\",\"\\\\%\"),_(j,Z,le,\"_\",\"\\\\_\"),_($,Z,le,\"_\",\"\\\\_\"),_($,Z,le,\"_\",\"\\\\textunderscore\"),_(j,Z,le,\"\\u2220\",\"\\\\angle\",!0),_(j,Z,le,\"\\u221e\",\"\\\\infty\",!0),_(j,Z,le,\"\\u2032\",\"\\\\prime\"),_(j,Z,le,\"\\u25b3\",\"\\\\triangle\"),_(j,Z,le,\"\\u0393\",\"\\\\Gamma\",!0),_(j,Z,le,\"\\u0394\",\"\\\\Delta\",!0),_(j,Z,le,\"\\u0398\",\"\\\\Theta\",!0),_(j,Z,le,\"\\u039b\",\"\\\\Lambda\",!0),_(j,Z,le,\"\\u039e\",\"\\\\Xi\",!0),_(j,Z,le,\"\\u03a0\",\"\\\\Pi\",!0),_(j,Z,le,\"\\u03a3\",\"\\\\Sigma\",!0),_(j,Z,le,\"\\u03a5\",\"\\\\Upsilon\",!0),_(j,Z,le,\"\\u03a6\",\"\\\\Phi\",!0),_(j,Z,le,\"\\u03a8\",\"\\\\Psi\",!0),_(j,Z,le,\"\\u03a9\",\"\\\\Omega\",!0),_(j,Z,le,\"A\",\"\\u0391\"),_(j,Z,le,\"B\",\"\\u0392\"),_(j,Z,le,\"E\",\"\\u0395\"),_(j,Z,le,\"Z\",\"\\u0396\"),_(j,Z,le,\"H\",\"\\u0397\"),_(j,Z,le,\"I\",\"\\u0399\"),_(j,Z,le,\"K\",\"\\u039a\"),_(j,Z,le,\"M\",\"\\u039c\"),_(j,Z,le,\"N\",\"\\u039d\"),_(j,Z,le,\"O\",\"\\u039f\"),_(j,Z,le,\"P\",\"\\u03a1\"),_(j,Z,le,\"T\",\"\\u03a4\"),_(j,Z,le,\"X\",\"\\u03a7\"),_(j,Z,le,\"\\xac\",\"\\\\neg\",!0),_(j,Z,le,\"\\xac\",\"\\\\lnot\"),_(j,Z,le,\"\\u22a4\",\"\\\\top\"),_(j,Z,le,\"\\u22a5\",\"\\\\bot\"),_(j,Z,le,\"\\u2205\",\"\\\\emptyset\"),_(j,K,le,\"\\u2205\",\"\\\\varnothing\"),_(j,Z,re,\"\\u03b1\",\"\\\\alpha\",!0),_(j,Z,re,\"\\u03b2\",\"\\\\beta\",!0),_(j,Z,re,\"\\u03b3\",\"\\\\gamma\",!0),_(j,Z,re,\"\\u03b4\",\"\\\\delta\",!0),_(j,Z,re,\"\\u03f5\",\"\\\\epsilon\",!0),_(j,Z,re,\"\\u03b6\",\"\\\\zeta\",!0),_(j,Z,re,\"\\u03b7\",\"\\\\eta\",!0),_(j,Z,re,\"\\u03b8\",\"\\\\theta\",!0),_(j,Z,re,\"\\u03b9\",\"\\\\iota\",!0),_(j,Z,re,\"\\u03ba\",\"\\\\kappa\",!0),_(j,Z,re,\"\\u03bb\",\"\\\\lambda\",!0),_(j,Z,re,\"\\u03bc\",\"\\\\mu\",!0),_(j,Z,re,\"\\u03bd\",\"\\\\nu\",!0),_(j,Z,re,\"\\u03be\",\"\\\\xi\",!0),_(j,Z,re,\"\\u03bf\",\"\\\\omicron\",!0),_(j,Z,re,\"\\u03c0\",\"\\\\pi\",!0),_(j,Z,re,\"\\u03c1\",\"\\\\rho\",!0),_(j,Z,re,\"\\u03c3\",\"\\\\sigma\",!0),_(j,Z,re,\"\\u03c4\",\"\\\\tau\",!0),_(j,Z,re,\"\\u03c5\",\"\\\\upsilon\",!0),_(j,Z,re,\"\\u03d5\",\"\\\\phi\",!0),_(j,Z,re,\"\\u03c7\",\"\\\\chi\",!0),_(j,Z,re,\"\\u03c8\",\"\\\\psi\",!0),_(j,Z,re,\"\\u03c9\",\"\\\\omega\",!0),_(j,Z,re,\"\\u03b5\",\"\\\\varepsilon\",!0),_(j,Z,re,\"\\u03d1\",\"\\\\vartheta\",!0),_(j,Z,re,\"\\u03d6\",\"\\\\varpi\",!0),_(j,Z,re,\"\\u03f1\",\"\\\\varrho\",!0),_(j,Z,re,\"\\u03c2\",\"\\\\varsigma\",!0),_(j,Z,re,\"\\u03c6\",\"\\\\varphi\",!0),_(j,Z,Q,\"\\u2217\",\"*\",!0),_(j,Z,Q,\"+\",\"+\"),_(j,Z,Q,\"\\u2212\",\"-\",!0),_(j,Z,Q,\"\\u22c5\",\"\\\\cdot\",!0),_(j,Z,Q,\"\\u2218\",\"\\\\circ\"),_(j,Z,Q,\"\\xf7\",\"\\\\div\",!0),_(j,Z,Q,\"\\xb1\",\"\\\\pm\",!0),_(j,Z,Q,\"\\xd7\",\"\\\\times\",!0),_(j,Z,Q,\"\\u2229\",\"\\\\cap\",!0),_(j,Z,Q,\"\\u222a\",\"\\\\cup\",!0),_(j,Z,Q,\"\\u2216\",\"\\\\setminus\"),_(j,Z,Q,\"\\u2227\",\"\\\\land\"),_(j,Z,Q,\"\\u2228\",\"\\\\lor\"),_(j,Z,Q,\"\\u2227\",\"\\\\wedge\",!0),_(j,Z,Q,\"\\u2228\",\"\\\\vee\",!0),_(j,Z,le,\"\\u221a\",\"\\\\surd\"),_(j,Z,ae,\"\\u27e8\",\"\\\\langle\",!0),_(j,Z,ae,\"\\u2223\",\"\\\\lvert\"),_(j,Z,ae,\"\\u2225\",\"\\\\lVert\"),_(j,Z,ee,\"?\",\"?\"),_(j,Z,ee,\"!\",\"!\"),_(j,Z,ee,\"\\u27e9\",\"\\\\rangle\",!0),_(j,Z,ee,\"\\u2223\",\"\\\\rvert\"),_(j,Z,ee,\"\\u2225\",\"\\\\rVert\"),_(j,Z,oe,\"=\",\"=\"),_(j,Z,oe,\":\",\":\"),_(j,Z,oe,\"\\u2248\",\"\\\\approx\",!0),_(j,Z,oe,\"\\u2245\",\"\\\\cong\",!0),_(j,Z,oe,\"\\u2265\",\"\\\\ge\"),_(j,Z,oe,\"\\u2265\",\"\\\\geq\",!0),_(j,Z,oe,\"\\u2190\",\"\\\\gets\"),_(j,Z,oe,\">\",\"\\\\gt\",!0),_(j,Z,oe,\"\\u2208\",\"\\\\in\",!0),_(j,Z,oe,\"\\ue020\",\"\\\\@not\"),_(j,Z,oe,\"\\u2282\",\"\\\\subset\",!0),_(j,Z,oe,\"\\u2283\",\"\\\\supset\",!0),_(j,Z,oe,\"\\u2286\",\"\\\\subseteq\",!0),_(j,Z,oe,\"\\u2287\",\"\\\\supseteq\",!0),_(j,K,oe,\"\\u2288\",\"\\\\nsubseteq\",!0),_(j,K,oe,\"\\u2289\",\"\\\\nsupseteq\",!0),_(j,Z,oe,\"\\u22a8\",\"\\\\models\"),_(j,Z,oe,\"\\u2190\",\"\\\\leftarrow\",!0),_(j,Z,oe,\"\\u2264\",\"\\\\le\"),_(j,Z,oe,\"\\u2264\",\"\\\\leq\",!0),_(j,Z,oe,\"<\",\"\\\\lt\",!0),_(j,Z,oe,\"\\u2192\",\"\\\\rightarrow\",!0),_(j,Z,oe,\"\\u2192\",\"\\\\to\"),_(j,K,oe,\"\\u2271\",\"\\\\ngeq\",!0),_(j,K,oe,\"\\u2270\",\"\\\\nleq\",!0),_(j,Z,se,\"\\xa0\",\"\\\\ \"),_(j,Z,se,\"\\xa0\",\"\\\\space\"),_(j,Z,se,\"\\xa0\",\"\\\\nobreakspace\"),_($,Z,se,\"\\xa0\",\"\\\\ \"),_($,Z,se,\"\\xa0\",\" \"),_($,Z,se,\"\\xa0\",\"\\\\space\"),_($,Z,se,\"\\xa0\",\"\\\\nobreakspace\"),_(j,Z,se,null,\"\\\\nobreak\"),_(j,Z,se,null,\"\\\\allowbreak\"),_(j,Z,ie,\",\",\",\"),_(j,Z,ie,\";\",\";\"),_(j,K,Q,\"\\u22bc\",\"\\\\barwedge\",!0),_(j,K,Q,\"\\u22bb\",\"\\\\veebar\",!0),_(j,Z,Q,\"\\u2299\",\"\\\\odot\",!0),_(j,Z,Q,\"\\u2295\",\"\\\\oplus\",!0),_(j,Z,Q,\"\\u2297\",\"\\\\otimes\",!0),_(j,Z,le,\"\\u2202\",\"\\\\partial\",!0),_(j,Z,Q,\"\\u2298\",\"\\\\oslash\",!0),_(j,K,Q,\"\\u229a\",\"\\\\circledcirc\",!0),_(j,K,Q,\"\\u22a1\",\"\\\\boxdot\",!0),_(j,Z,Q,\"\\u25b3\",\"\\\\bigtriangleup\"),_(j,Z,Q,\"\\u25bd\",\"\\\\bigtriangledown\"),_(j,Z,Q,\"\\u2020\",\"\\\\dagger\"),_(j,Z,Q,\"\\u22c4\",\"\\\\diamond\"),_(j,Z,Q,\"\\u22c6\",\"\\\\star\"),_(j,Z,Q,\"\\u25c3\",\"\\\\triangleleft\"),_(j,Z,Q,\"\\u25b9\",\"\\\\triangleright\"),_(j,Z,ae,\"{\",\"\\\\{\"),_($,Z,le,\"{\",\"\\\\{\"),_($,Z,le,\"{\",\"\\\\textbraceleft\"),_(j,Z,ee,\"}\",\"\\\\}\"),_($,Z,le,\"}\",\"\\\\}\"),_($,Z,le,\"}\",\"\\\\textbraceright\"),_(j,Z,ae,\"{\",\"\\\\lbrace\"),_(j,Z,ee,\"}\",\"\\\\rbrace\"),_(j,Z,ae,\"[\",\"\\\\lbrack\",!0),_($,Z,le,\"[\",\"\\\\lbrack\",!0),_(j,Z,ee,\"]\",\"\\\\rbrack\",!0),_($,Z,le,\"]\",\"\\\\rbrack\",!0),_(j,Z,ae,\"(\",\"\\\\lparen\",!0),_(j,Z,ee,\")\",\"\\\\rparen\",!0),_($,Z,le,\"<\",\"\\\\textless\",!0),_($,Z,le,\">\",\"\\\\textgreater\",!0),_(j,Z,ae,\"\\u230a\",\"\\\\lfloor\",!0),_(j,Z,ee,\"\\u230b\",\"\\\\rfloor\",!0),_(j,Z,ae,\"\\u2308\",\"\\\\lceil\",!0),_(j,Z,ee,\"\\u2309\",\"\\\\rceil\",!0),_(j,Z,le,\"\\\\\",\"\\\\backslash\"),_(j,Z,le,\"\\u2223\",\"|\"),_(j,Z,le,\"\\u2223\",\"\\\\vert\"),_($,Z,le,\"|\",\"\\\\textbar\",!0),_(j,Z,le,\"\\u2225\",\"\\\\|\"),_(j,Z,le,\"\\u2225\",\"\\\\Vert\"),_($,Z,le,\"\\u2225\",\"\\\\textbardbl\"),_($,Z,le,\"~\",\"\\\\textasciitilde\"),_($,Z,le,\"\\\\\",\"\\\\textbackslash\"),_($,Z,le,\"^\",\"\\\\textasciicircum\"),_(j,Z,oe,\"\\u2191\",\"\\\\uparrow\",!0),_(j,Z,oe,\"\\u21d1\",\"\\\\Uparrow\",!0),_(j,Z,oe,\"\\u2193\",\"\\\\downarrow\",!0),_(j,Z,oe,\"\\u21d3\",\"\\\\Downarrow\",!0),_(j,Z,oe,\"\\u2195\",\"\\\\updownarrow\",!0),_(j,Z,oe,\"\\u21d5\",\"\\\\Updownarrow\",!0),_(j,Z,ne,\"\\u2210\",\"\\\\coprod\"),_(j,Z,ne,\"\\u22c1\",\"\\\\bigvee\"),_(j,Z,ne,\"\\u22c0\",\"\\\\bigwedge\"),_(j,Z,ne,\"\\u2a04\",\"\\\\biguplus\"),_(j,Z,ne,\"\\u22c2\",\"\\\\bigcap\"),_(j,Z,ne,\"\\u22c3\",\"\\\\bigcup\"),_(j,Z,ne,\"\\u222b\",\"\\\\int\"),_(j,Z,ne,\"\\u222b\",\"\\\\intop\"),_(j,Z,ne,\"\\u222c\",\"\\\\iint\"),_(j,Z,ne,\"\\u222d\",\"\\\\iiint\"),_(j,Z,ne,\"\\u220f\",\"\\\\prod\"),_(j,Z,ne,\"\\u2211\",\"\\\\sum\"),_(j,Z,ne,\"\\u2a02\",\"\\\\bigotimes\"),_(j,Z,ne,\"\\u2a01\",\"\\\\bigoplus\"),_(j,Z,ne,\"\\u2a00\",\"\\\\bigodot\"),_(j,Z,ne,\"\\u222e\",\"\\\\oint\"),_(j,Z,ne,\"\\u222f\",\"\\\\oiint\"),_(j,Z,ne,\"\\u2230\",\"\\\\oiiint\"),_(j,Z,ne,\"\\u2a06\",\"\\\\bigsqcup\"),_(j,Z,ne,\"\\u222b\",\"\\\\smallint\"),_($,Z,te,\"\\u2026\",\"\\\\textellipsis\"),_(j,Z,te,\"\\u2026\",\"\\\\mathellipsis\"),_($,Z,te,\"\\u2026\",\"\\\\ldots\",!0),_(j,Z,te,\"\\u2026\",\"\\\\ldots\",!0),_(j,Z,te,\"\\u22ef\",\"\\\\@cdots\",!0),_(j,Z,te,\"\\u22f1\",\"\\\\ddots\",!0),_(j,Z,le,\"\\u22ee\",\"\\\\varvdots\"),_(j,Z,J,\"\\u02ca\",\"\\\\acute\"),_(j,Z,J,\"\\u02cb\",\"\\\\grave\"),_(j,Z,J,\"\\xa8\",\"\\\\ddot\"),_(j,Z,J,\"~\",\"\\\\tilde\"),_(j,Z,J,\"\\u02c9\",\"\\\\bar\"),_(j,Z,J,\"\\u02d8\",\"\\\\breve\"),_(j,Z,J,\"\\u02c7\",\"\\\\check\"),_(j,Z,J,\"^\",\"\\\\hat\"),_(j,Z,J,\"\\u20d7\",\"\\\\vec\"),_(j,Z,J,\"\\u02d9\",\"\\\\dot\"),_(j,Z,J,\"\\u02da\",\"\\\\mathring\"),_(j,Z,re,\"\\ue131\",\"\\\\@imath\"),_(j,Z,re,\"\\ue237\",\"\\\\@jmath\"),_(j,Z,le,\"\\u0131\",\"\\u0131\"),_(j,Z,le,\"\\u0237\",\"\\u0237\"),_($,Z,le,\"\\u0131\",\"\\\\i\",!0),_($,Z,le,\"\\u0237\",\"\\\\j\",!0),_($,Z,le,\"\\xdf\",\"\\\\ss\",!0),_($,Z,le,\"\\xe6\",\"\\\\ae\",!0),_($,Z,le,\"\\u0153\",\"\\\\oe\",!0),_($,Z,le,\"\\xf8\",\"\\\\o\",!0),_($,Z,le,\"\\xc6\",\"\\\\AE\",!0),_($,Z,le,\"\\u0152\",\"\\\\OE\",!0),_($,Z,le,\"\\xd8\",\"\\\\O\",!0),_($,Z,J,\"\\u02ca\",\"\\\\'\"),_($,Z,J,\"\\u02cb\",\"\\\\`\"),_($,Z,J,\"\\u02c6\",\"\\\\^\"),_($,Z,J,\"\\u02dc\",\"\\\\~\"),_($,Z,J,\"\\u02c9\",\"\\\\=\"),_($,Z,J,\"\\u02d8\",\"\\\\u\"),_($,Z,J,\"\\u02d9\",\"\\\\.\"),_($,Z,J,\"\\xb8\",\"\\\\c\"),_($,Z,J,\"\\u02da\",\"\\\\r\"),_($,Z,J,\"\\u02c7\",\"\\\\v\"),_($,Z,J,\"\\xa8\",'\\\\\"'),_($,Z,J,\"\\u02dd\",\"\\\\H\"),_($,Z,J,\"\\u25ef\",\"\\\\textcircled\");var he={\"--\":!0,\"---\":!0,\"``\":!0,\"''\":!0};_($,Z,le,\"\\u2013\",\"--\",!0),_($,Z,le,\"\\u2013\",\"\\\\textendash\"),_($,Z,le,\"\\u2014\",\"---\",!0),_($,Z,le,\"\\u2014\",\"\\\\textemdash\"),_($,Z,le,\"\\u2018\",\"`\",!0),_($,Z,le,\"\\u2018\",\"\\\\textquoteleft\"),_($,Z,le,\"\\u2019\",\"'\",!0),_($,Z,le,\"\\u2019\",\"\\\\textquoteright\"),_($,Z,le,\"\\u201c\",\"``\",!0),_($,Z,le,\"\\u201c\",\"\\\\textquotedblleft\"),_($,Z,le,\"\\u201d\",\"''\",!0),_($,Z,le,\"\\u201d\",\"\\\\textquotedblright\"),_(j,Z,le,\"\\xb0\",\"\\\\degree\",!0),_($,Z,le,\"\\xb0\",\"\\\\degree\"),_($,Z,le,\"\\xb0\",\"\\\\textdegree\",!0),_(j,Z,le,\"\\xa3\",\"\\\\pounds\"),_(j,Z,le,\"\\xa3\",\"\\\\mathsterling\",!0),_($,Z,le,\"\\xa3\",\"\\\\pounds\"),_($,Z,le,\"\\xa3\",\"\\\\textsterling\",!0),_(j,K,le,\"\\u2720\",\"\\\\maltese\"),_($,K,le,\"\\u2720\",\"\\\\maltese\");for(var me='0123456789/@.\"',ce=0;ce<me.length;ce++){var ue=me.charAt(ce);_(j,Z,le,ue,ue)}for(var pe='0123456789!@*()-=+\";:?/.,',de=0;de<pe.length;de++){var fe=pe.charAt(de);_($,Z,le,fe,fe)}for(var ge=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",ve=0;ve<ge.length;ve++){var be=ge.charAt(ve);_(j,Z,re,be,be),_($,Z,le,be,be)}_(j,K,le,\"C\",\"\\u2102\"),_($,K,le,\"C\",\"\\u2102\"),_(j,K,le,\"H\",\"\\u210d\"),_($,K,le,\"H\",\"\\u210d\"),_(j,K,le,\"N\",\"\\u2115\"),_($,K,le,\"N\",\"\\u2115\"),_(j,K,le,\"P\",\"\\u2119\"),_($,K,le,\"P\",\"\\u2119\"),_(j,K,le,\"Q\",\"\\u211a\"),_($,K,le,\"Q\",\"\\u211a\"),_(j,K,le,\"R\",\"\\u211d\"),_($,K,le,\"R\",\"\\u211d\"),_(j,K,le,\"Z\",\"\\u2124\"),_($,K,le,\"Z\",\"\\u2124\"),_(j,Z,re,\"h\",\"\\u210e\"),_($,Z,re,\"h\",\"\\u210e\");for(var ye=\"\",xe=0;xe<ge.length;xe++){var we=ge.charAt(xe);_(j,Z,re,we,ye=String.fromCharCode(55349,56320+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56372+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56424+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56580+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56736+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56788+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56840+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56944+xe)),_($,Z,le,we,ye),xe<26&&(_(j,Z,re,we,ye=String.fromCharCode(55349,56632+xe)),_($,Z,le,we,ye),_(j,Z,re,we,ye=String.fromCharCode(55349,56476+xe)),_($,Z,le,we,ye))}_(j,Z,re,\"k\",ye=String.fromCharCode(55349,56668)),_($,Z,le,\"k\",ye);for(var ke=0;ke<10;ke++){var Se=ke.toString();_(j,Z,re,Se,ye=String.fromCharCode(55349,57294+ke)),_($,Z,le,Se,ye),_(j,Z,re,Se,ye=String.fromCharCode(55349,57314+ke)),_($,Z,le,Se,ye),_(j,Z,re,Se,ye=String.fromCharCode(55349,57324+ke)),_($,Z,le,Se,ye),_(j,Z,re,Se,ye=String.fromCharCode(55349,57334+ke)),_($,Z,le,Se,ye)}for(var Me=\"\\xd0\\xde\\xfe\",ze=0;ze<Me.length;ze++){var Ae=Me.charAt(ze);_(j,Z,re,Ae,Ae),_($,Z,le,Ae,Ae)}var Te=[[\"mathbf\",\"textbf\",\"Main-Bold\"],[\"mathbf\",\"textbf\",\"Main-Bold\"],[\"mathnormal\",\"textit\",\"Math-Italic\"],[\"mathnormal\",\"textit\",\"Math-Italic\"],[\"boldsymbol\",\"boldsymbol\",\"Main-BoldItalic\"],[\"boldsymbol\",\"boldsymbol\",\"Main-BoldItalic\"],[\"mathscr\",\"textscr\",\"Script-Regular\"],[\"\",\"\",\"\"],[\"\",\"\",\"\"],[\"\",\"\",\"\"],[\"mathfrak\",\"textfrak\",\"Fraktur-Regular\"],[\"mathfrak\",\"textfrak\",\"Fraktur-Regular\"],[\"mathbb\",\"textbb\",\"AMS-Regular\"],[\"mathbb\",\"textbb\",\"AMS-Regular\"],[\"\",\"\",\"\"],[\"\",\"\",\"\"],[\"mathsf\",\"textsf\",\"SansSerif-Regular\"],[\"mathsf\",\"textsf\",\"SansSerif-Regular\"],[\"mathboldsf\",\"textboldsf\",\"SansSerif-Bold\"],[\"mathboldsf\",\"textboldsf\",\"SansSerif-Bold\"],[\"mathitsf\",\"textitsf\",\"SansSerif-Italic\"],[\"mathitsf\",\"textitsf\",\"SansSerif-Italic\"],[\"\",\"\",\"\"],[\"\",\"\",\"\"],[\"mathtt\",\"texttt\",\"Typewriter-Regular\"],[\"mathtt\",\"texttt\",\"Typewriter-Regular\"]],Be=[[\"mathbf\",\"textbf\",\"Main-Bold\"],[\"\",\"\",\"\"],[\"mathsf\",\"textsf\",\"SansSerif-Regular\"],[\"mathboldsf\",\"textboldsf\",\"SansSerif-Bold\"],[\"mathtt\",\"texttt\",\"Typewriter-Regular\"]],Ne=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]],qe=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488],Ce=function(e,t){return t.size<2?e:Ne[e-1][t.size-1]},Ie=function(){function e(t){this.style=void 0,this.color=void 0,this.size=void 0,this.textSize=void 0,this.phantom=void 0,this.font=void 0,this.fontFamily=void 0,this.fontWeight=void 0,this.fontShape=void 0,this.sizeMultiplier=void 0,this.maxSize=void 0,this.minRuleThickness=void 0,this._fontMetrics=void 0,this.style=t.style,this.color=t.color,this.size=t.size||e.BASESIZE,this.textSize=t.textSize||this.size,this.phantom=!!t.phantom,this.font=t.font||\"\",this.fontFamily=t.fontFamily||\"\",this.fontWeight=t.fontWeight||\"\",this.fontShape=t.fontShape||\"\",this.sizeMultiplier=qe[this.size-1],this.maxSize=t.maxSize,this.minRuleThickness=t.minRuleThickness,this._fontMetrics=void 0}var t=e.prototype;return t.extend=function(t){var r={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,fontFamily:this.fontFamily,fontWeight:this.fontWeight,fontShape:this.fontShape,maxSize:this.maxSize,minRuleThickness:this.minRuleThickness};for(var n in t)t.hasOwnProperty(n)&&(r[n]=t[n]);return new e(r)},t.havingStyle=function(e){return this.style===e?this:this.extend({style:e,size:Ce(this.textSize,e)})},t.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())},t.havingSize=function(e){return this.size===e&&this.textSize===e?this:this.extend({style:this.style.text(),size:e,textSize:e,sizeMultiplier:qe[e-1]})},t.havingBaseStyle=function(t){t=t||this.style.text();var r=Ce(e.BASESIZE,t);return this.size===r&&this.textSize===e.BASESIZE&&this.style===t?this:this.extend({style:t,size:r})},t.havingBaseSizing=function(){var e;switch(this.style.id){case 4:case 5:e=3;break;case 6:case 7:e=1;break;default:e=6}return this.extend({style:this.style.text(),size:e})},t.withColor=function(e){return this.extend({color:e})},t.withPhantom=function(){return this.extend({phantom:!0})},t.withFont=function(e){return this.extend({font:e})},t.withTextFontFamily=function(e){return this.extend({fontFamily:e,font:\"\"})},t.withTextFontWeight=function(e){return this.extend({fontWeight:e,font:\"\"})},t.withTextFontShape=function(e){return this.extend({fontShape:e,font:\"\"})},t.sizingClasses=function(e){return e.size!==this.size?[\"sizing\",\"reset-size\"+e.size,\"size\"+this.size]:[]},t.baseSizingClasses=function(){return this.size!==e.BASESIZE?[\"sizing\",\"reset-size\"+this.size,\"size\"+e.BASESIZE]:[]},t.fontMetrics=function(){return this._fontMetrics||(this._fontMetrics=function(e){var t;if(!G[t=e>=5?0:e>=3?1:2]){var r=G[t]={cssEmPerMu:P.quad[t]/18};for(var n in P)P.hasOwnProperty(n)&&(r[n]=P[n][t])}return G[t]}(this.size)),this._fontMetrics},t.getColor=function(){return this.phantom?\"transparent\":this.color},e}();Ie.BASESIZE=6;var Re=Ie,Oe={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:1.00375,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:1.00375},Ee={ex:!0,em:!0,mu:!0},He=function(e){return\"string\"!=typeof e&&(e=e.unit),e in Oe||e in Ee||\"ex\"===e},Le=function(e,t){var r;if(e.unit in Oe)r=Oe[e.unit]/t.fontMetrics().ptPerEm/t.sizeMultiplier;else if(\"mu\"===e.unit)r=t.fontMetrics().cssEmPerMu;else{var a;if(a=t.style.isTight()?t.havingStyle(t.style.text()):t,\"ex\"===e.unit)r=a.fontMetrics().xHeight;else{if(\"em\"!==e.unit)throw new n(\"Invalid unit: '\"+e.unit+\"'\");r=a.fontMetrics().quad}a!==t&&(r*=a.sizeMultiplier/t.sizeMultiplier)}return Math.min(e.number*r,t.maxSize)},De=function(e,t,r){return X[r][e]&&X[r][e].replace&&(e=X[r][e].replace),{value:e,metrics:V(e,t,r)}},Pe=function(e,t,r,n,a){var i,o=De(e,t,r),s=o.metrics;if(e=o.value,s){var l=s.italic;(\"text\"===r||n&&\"mathit\"===n.font)&&(l=0),i=new R(e,s.height,s.depth,l,s.skew,s.width,a)}else\"undefined\"!=typeof console&&console.warn(\"No character metrics for '\"+e+\"' in style '\"+t+\"' and mode '\"+r+\"'\"),i=new R(e,0,0,0,0,0,a);if(n){i.maxFontSize=n.sizeMultiplier,n.style.isTight()&&i.classes.push(\"mtight\");var h=n.getColor();h&&(i.style.color=h)}return i},Fe=function(e,t){if(z(e.classes)!==z(t.classes)||e.skew!==t.skew||e.maxFontSize!==t.maxFontSize)return!1;if(1===e.classes.length){var r=e.classes[0];if(\"mbin\"===r||\"mord\"===r)return!1}for(var n in e.style)if(e.style.hasOwnProperty(n)&&e.style[n]!==t.style[n])return!1;for(var a in t.style)if(t.style.hasOwnProperty(a)&&e.style[a]!==t.style[a])return!1;return!0},Ve=function(e){for(var t=0,r=0,n=0,a=0;a<e.children.length;a++){var i=e.children[a];i.height>t&&(t=i.height),i.depth>r&&(r=i.depth),i.maxFontSize>n&&(n=i.maxFontSize)}e.height=t,e.depth=r,e.maxFontSize=n},Ge=function(e,t,r,n){var a=new N(e,t,r,n);return Ve(a),a},Ue=function(e,t,r,n){return new N(e,t,r,n)},Ye=function(e){var t=new M(e);return Ve(t),t},We=function(e,t,r){var n=\"\";switch(e){case\"amsrm\":n=\"AMS\";break;case\"textrm\":n=\"Main\";break;case\"textsf\":n=\"SansSerif\";break;case\"texttt\":n=\"Typewriter\";break;default:n=e}return n+\"-\"+(\"textbf\"===t&&\"textit\"===r?\"BoldItalic\":\"textbf\"===t?\"Bold\":\"textit\"===t?\"Italic\":\"Regular\")},Xe={mathbf:{variant:\"bold\",fontName:\"Main-Bold\"},mathrm:{variant:\"normal\",fontName:\"Main-Regular\"},textit:{variant:\"italic\",fontName:\"Main-Italic\"},mathit:{variant:\"italic\",fontName:\"Main-Italic\"},mathnormal:{variant:\"italic\",fontName:\"Math-Italic\"},mathbb:{variant:\"double-struck\",fontName:\"AMS-Regular\"},mathcal:{variant:\"script\",fontName:\"Caligraphic-Regular\"},mathfrak:{variant:\"fraktur\",fontName:\"Fraktur-Regular\"},mathscr:{variant:\"script\",fontName:\"Script-Regular\"},mathsf:{variant:\"sans-serif\",fontName:\"SansSerif-Regular\"},mathtt:{variant:\"monospace\",fontName:\"Typewriter-Regular\"}},_e={vec:[\"vec\",.471,.714],oiintSize1:[\"oiintSize1\",.957,.499],oiintSize2:[\"oiintSize2\",1.472,.659],oiiintSize1:[\"oiiintSize1\",1.304,.499],oiiintSize2:[\"oiiintSize2\",1.98,.659]},je={fontMap:Xe,makeSymbol:Pe,mathsym:function(e,t,r,n){return void 0===n&&(n=[]),\"boldsymbol\"===r.font&&De(e,\"Main-Bold\",t).metrics?Pe(e,\"Main-Bold\",t,r,n.concat([\"mathbf\"])):\"\\\\\"===e||\"main\"===X[t][e].font?Pe(e,\"Main-Regular\",t,r,n):Pe(e,\"AMS-Regular\",t,r,n.concat([\"amsrm\"]))},makeSpan:Ge,makeSvgSpan:Ue,makeLineSpan:function(e,t,r){var n=Ge([e],[],t);return n.height=Math.max(r||t.fontMetrics().defaultRuleThickness,t.minRuleThickness),n.style.borderBottomWidth=n.height+\"em\",n.maxFontSize=1,n},makeAnchor:function(e,t,r,n){var a=new q(e,t,r,n);return Ve(a),a},makeFragment:Ye,wrapFragment:function(e,t){return e instanceof M?Ge([],[e],t):e},makeVList:function(e,t){for(var r=function(e){if(\"individualShift\"===e.positionType){for(var t=e.children,r=[t[0]],n=-t[0].shift-t[0].elem.depth,a=n,i=1;i<t.length;i++){var o=-t[i].shift-a-t[i].elem.depth,s=o-(t[i-1].elem.height+t[i-1].elem.depth);a+=o,r.push({type:\"kern\",size:s}),r.push(t[i])}return{children:r,depth:n}}var l;if(\"top\"===e.positionType){for(var h=e.positionData,m=0;m<e.children.length;m++){var c=e.children[m];h-=\"kern\"===c.type?c.size:c.elem.height+c.elem.depth}l=h}else if(\"bottom\"===e.positionType)l=-e.positionData;else{var u=e.children[0];if(\"elem\"!==u.type)throw new Error('First child must have type \"elem\".');if(\"shift\"===e.positionType)l=-u.elem.depth-e.positionData;else{if(\"firstBaseline\"!==e.positionType)throw new Error(\"Invalid positionType \"+e.positionType+\".\");l=-u.elem.depth}}return{children:e.children,depth:l}}(e),n=r.children,a=r.depth,i=0,o=0;o<n.length;o++){var s=n[o];if(\"elem\"===s.type){var l=s.elem;i=Math.max(i,l.maxFontSize,l.height)}}i+=2;var h=Ge([\"pstrut\"],[]);h.style.height=i+\"em\";for(var m=[],c=a,u=a,p=a,d=0;d<n.length;d++){var f=n[d];if(\"kern\"===f.type)p+=f.size;else{var g=f.elem,v=f.wrapperClasses||[],b=f.wrapperStyle||{},y=Ge(v,[h,g],void 0,b);y.style.top=-i-p-g.depth+\"em\",f.marginLeft&&(y.style.marginLeft=f.marginLeft),f.marginRight&&(y.style.marginRight=f.marginRight),m.push(y),p+=g.height+g.depth}c=Math.min(c,p),u=Math.max(u,p)}var x,w=Ge([\"vlist\"],m);if(w.style.height=u+\"em\",c<0){var k=Ge([],[]),S=Ge([\"vlist\"],[k]);S.style.height=-c+\"em\";var M=Ge([\"vlist-s\"],[new R(\"\\u200b\")]);x=[Ge([\"vlist-r\"],[w,M]),Ge([\"vlist-r\"],[S])]}else x=[Ge([\"vlist-r\"],[w])];var z=Ge([\"vlist-t\"],x);return 2===x.length&&z.classes.push(\"vlist-t2\"),z.height=u,z.depth=-c,z},makeOrd:function(e,t,r){var a=e.mode,i=e.text,o=[\"mord\"],s=\"math\"===a||\"text\"===a&&t.font,l=s?t.font:t.fontFamily;if(55349===i.charCodeAt(0)){var h=function(e,t){var r=1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320)+65536,a=\"math\"===t?0:1;if(119808<=r&&r<120484){var i=Math.floor((r-119808)/26);return[Te[i][2],Te[i][a]]}if(120782<=r&&r<=120831){var o=Math.floor((r-120782)/10);return[Be[o][2],Be[o][a]]}if(120485===r||120486===r)return[Te[0][2],Te[0][a]];if(120486<r&&r<120782)return[\"\",\"\"];throw new n(\"Unsupported character: \"+e)}(i,a),m=h[0],c=h[1];return Pe(i,m,a,t,o.concat(c))}if(l){var u,p;if(\"boldsymbol\"===l){var d=function(e,t,r,n,a){return\"textord\"!==a&&De(e,\"Math-BoldItalic\",t).metrics?{fontName:\"Math-BoldItalic\",fontClass:\"boldsymbol\"}:{fontName:\"Main-Bold\",fontClass:\"mathbf\"}}(i,a,0,0,r);u=d.fontName,p=[d.fontClass]}else s?(u=Xe[l].fontName,p=[l]):(u=We(l,t.fontWeight,t.fontShape),p=[l,t.fontWeight,t.fontShape]);if(De(i,u,a).metrics)return Pe(i,u,a,t,o.concat(p));if(he.hasOwnProperty(i)&&\"Typewriter\"===u.substr(0,10)){for(var f=[],g=0;g<i.length;g++)f.push(Pe(i[g],u,a,t,o.concat(p)));return Ye(f)}}if(\"mathord\"===r)return Pe(i,\"Math-Italic\",a,t,o.concat([\"mathnormal\"]));if(\"textord\"===r){var v=X[a][i]&&X[a][i].font;if(\"ams\"===v){var b=We(\"amsrm\",t.fontWeight,t.fontShape);return Pe(i,b,a,t,o.concat(\"amsrm\",t.fontWeight,t.fontShape))}if(\"main\"!==v&&v){var y=We(v,t.fontWeight,t.fontShape);return Pe(i,y,a,t,o.concat(y,t.fontWeight,t.fontShape))}var x=We(\"textrm\",t.fontWeight,t.fontShape);return Pe(i,x,a,t,o.concat(t.fontWeight,t.fontShape))}throw new Error(\"unexpected type: \"+r+\" in makeOrd\")},makeGlue:function(e,t){var r=Ge([\"mspace\"],[],t),n=Le(e,t);return r.style.marginRight=n+\"em\",r},staticSvg:function(e,t){var r=_e[e],n=r[0],a=r[1],i=r[2],o=new E(n),s=new O([o],{width:a+\"em\",height:i+\"em\",style:\"width:\"+a+\"em\",viewBox:\"0 0 \"+1e3*a+\" \"+1e3*i,preserveAspectRatio:\"xMinYMin\"}),l=Ue([\"overlay\"],[s],t);return l.height=i,l.style.height=i+\"em\",l.style.width=a+\"em\",l},svgData:_e,tryCombineChars:function(e){for(var t=0;t<e.length-1;t++){var r=e[t],n=e[t+1];r instanceof R&&n instanceof R&&Fe(r,n)&&(r.text+=n.text,r.height=Math.max(r.height,n.height),r.depth=Math.max(r.depth,n.depth),r.italic=n.italic,e.splice(t+1,1),t--)}return e}},$e={number:3,unit:\"mu\"},Ze={number:4,unit:\"mu\"},Ke={number:5,unit:\"mu\"},Je={mord:{mop:$e,mbin:Ze,mrel:Ke,minner:$e},mop:{mord:$e,mop:$e,mrel:Ke,minner:$e},mbin:{mord:Ze,mop:Ze,mopen:Ze,minner:Ze},mrel:{mord:Ke,mop:Ke,mopen:Ke,minner:Ke},mopen:{},mclose:{mop:$e,mbin:Ze,mrel:Ke,minner:$e},mpunct:{mord:$e,mop:$e,mrel:Ke,mopen:$e,mclose:$e,mpunct:$e,minner:$e},minner:{mord:$e,mop:$e,mbin:Ze,mrel:Ke,mopen:$e,mpunct:$e,minner:$e}},Qe={mord:{mop:$e},mop:{mord:$e,mop:$e},mbin:{},mrel:{},mopen:{},mclose:{mop:$e},mpunct:{},minner:{mop:$e}},et={},tt={},rt={};function nt(e){for(var t=e.type,r=e.names,n=e.props,a=e.handler,i=e.htmlBuilder,o=e.mathmlBuilder,s={type:t,numArgs:n.numArgs,argTypes:n.argTypes,allowedInArgument:!!n.allowedInArgument,allowedInText:!!n.allowedInText,allowedInMath:void 0===n.allowedInMath||n.allowedInMath,numOptionalArgs:n.numOptionalArgs||0,infix:!!n.infix,primitive:!!n.primitive,handler:a},l=0;l<r.length;++l)et[r[l]]=s;t&&(i&&(tt[t]=i),o&&(rt[t]=o))}function at(e){nt({type:e.type,names:[],props:{numArgs:0},handler:function(){throw new Error(\"Should never be called.\")},htmlBuilder:e.htmlBuilder,mathmlBuilder:e.mathmlBuilder})}var it=function(e){return\"ordgroup\"===e.type&&1===e.body.length?e.body[0]:e},ot=function(e){return\"ordgroup\"===e.type?e.body:[e]},st=je.makeSpan,lt=[\"leftmost\",\"mbin\",\"mopen\",\"mrel\",\"mop\",\"mpunct\"],ht=[\"rightmost\",\"mrel\",\"mclose\",\"mpunct\"],mt={display:b.DISPLAY,text:b.TEXT,script:b.SCRIPT,scriptscript:b.SCRIPTSCRIPT},ct={mord:\"mord\",mop:\"mop\",mbin:\"mbin\",mrel:\"mrel\",mopen:\"mopen\",mclose:\"mclose\",mpunct:\"mpunct\",minner:\"minner\"},ut=function(e,t,r,n){void 0===n&&(n=[null,null]);for(var a=[],i=0;i<e.length;i++){var o=bt(e[i],t);if(o instanceof M){var s=o.children;a.push.apply(a,s)}else a.push(o)}if(je.tryCombineChars(a),!r)return a;var h=t;if(1===e.length){var m=e[0];\"sizing\"===m.type?h=t.havingSize(m.size):\"styling\"===m.type&&(h=t.havingStyle(mt[m.style]))}var c=st([n[0]||\"leftmost\"],[],t),u=st([n[1]||\"rightmost\"],[],t),p=\"root\"===r;return pt(a,(function(e,t){var r=t.classes[0],n=e.classes[0];\"mbin\"===r&&l.contains(ht,n)?t.classes[0]=\"mord\":\"mbin\"===n&&l.contains(lt,r)&&(e.classes[0]=\"mord\")}),{node:c},u,p),pt(a,(function(e,t){var r=gt(t),n=gt(e),a=r&&n?e.hasClass(\"mtight\")?Qe[r][n]:Je[r][n]:null;if(a)return je.makeGlue(a,h)}),{node:c},u,p),a},pt=function e(t,r,n,a,i){a&&t.push(a);for(var o=0;o<t.length;o++){var s=t[o],l=dt(s);if(l)e(l.children,r,n,null,i);else{var h=!s.hasClass(\"mspace\");if(h){var m=r(s,n.node);m&&(n.insertAfter?n.insertAfter(m):(t.unshift(m),o++))}h?n.node=s:i&&s.hasClass(\"newline\")&&(n.node=st([\"leftmost\"])),n.insertAfter=function(e){return function(r){t.splice(e+1,0,r),o++}}(o)}}a&&t.pop()},dt=function(e){return e instanceof M||e instanceof q||e instanceof N&&e.hasClass(\"enclosing\")?e:null},ft=function e(t,r){var n=dt(t);if(n){var a=n.children;if(a.length){if(\"right\"===r)return e(a[a.length-1],\"right\");if(\"left\"===r)return e(a[0],\"left\")}}return t},gt=function(e,t){return e?(t&&(e=ft(e,t)),ct[e.classes[0]]||null):null},vt=function(e,t){var r=[\"nulldelimiter\"].concat(e.baseSizingClasses());return st(t.concat(r))},bt=function(e,t,r){if(!e)return st();if(tt[e.type]){var a=tt[e.type](e,t);if(r&&t.size!==r.size){a=st(t.sizingClasses(r),[a],t);var i=t.sizeMultiplier/r.sizeMultiplier;a.height*=i,a.depth*=i}return a}throw new n(\"Got group of unknown type: '\"+e.type+\"'\")};function yt(e,t){var r=st([\"base\"],e,t),n=st([\"strut\"]);return n.style.height=r.height+r.depth+\"em\",n.style.verticalAlign=-r.depth+\"em\",r.children.unshift(n),r}function xt(e,t){var r=null;1===e.length&&\"tag\"===e[0].type&&(r=e[0].tag,e=e[0].body);var n,a=ut(e,t,\"root\");2===a.length&&a[1].hasClass(\"tag\")&&(n=a.pop());for(var i,o=[],s=[],l=0;l<a.length;l++)if(s.push(a[l]),a[l].hasClass(\"mbin\")||a[l].hasClass(\"mrel\")||a[l].hasClass(\"allowbreak\")){for(var h=!1;l<a.length-1&&a[l+1].hasClass(\"mspace\")&&!a[l+1].hasClass(\"newline\");)l++,s.push(a[l]),a[l].hasClass(\"nobreak\")&&(h=!0);h||(o.push(yt(s,t)),s=[])}else a[l].hasClass(\"newline\")&&(s.pop(),s.length>0&&(o.push(yt(s,t)),s=[]),o.push(a[l]));s.length>0&&o.push(yt(s,t)),r?((i=yt(ut(r,t,!0))).classes=[\"tag\"],o.push(i)):n&&o.push(n);var m=st([\"katex-html\"],o);if(m.setAttribute(\"aria-hidden\",\"true\"),i){var c=i.children[0];c.style.height=m.height+m.depth+\"em\",c.style.verticalAlign=-m.depth+\"em\"}return m}function wt(e){return new M(e)}var kt=function(){function e(e,t,r){this.type=void 0,this.attributes=void 0,this.children=void 0,this.classes=void 0,this.type=e,this.attributes={},this.children=t||[],this.classes=r||[]}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.getAttribute=function(e){return this.attributes[e]},t.toNode=function(){var e=document.createElementNS(\"http://www.w3.org/1998/Math/MathML\",this.type);for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);this.classes.length>0&&(e.className=z(this.classes));for(var r=0;r<this.children.length;r++)e.appendChild(this.children[r].toNode());return e},t.toMarkup=function(){var e=\"<\"+this.type;for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=\" \"+t+'=\"',e+=l.escape(this.attributes[t]),e+='\"');this.classes.length>0&&(e+=' class =\"'+l.escape(z(this.classes))+'\"'),e+=\">\";for(var r=0;r<this.children.length;r++)e+=this.children[r].toMarkup();return e+=\"</\"+this.type+\">\"},t.toText=function(){return this.children.map((function(e){return e.toText()})).join(\"\")},e}(),St=function(){function e(e){this.text=void 0,this.text=e}var t=e.prototype;return t.toNode=function(){return document.createTextNode(this.text)},t.toMarkup=function(){return l.escape(this.toText())},t.toText=function(){return this.text},e}(),Mt={MathNode:kt,TextNode:St,SpaceNode:function(){function e(e){this.width=void 0,this.character=void 0,this.width=e,this.character=e>=.05555&&e<=.05556?\"\\u200a\":e>=.1666&&e<=.1667?\"\\u2009\":e>=.2222&&e<=.2223?\"\\u2005\":e>=.2777&&e<=.2778?\"\\u2005\\u200a\":e>=-.05556&&e<=-.05555?\"\\u200a\\u2063\":e>=-.1667&&e<=-.1666?\"\\u2009\\u2063\":e>=-.2223&&e<=-.2222?\"\\u205f\\u2063\":e>=-.2778&&e<=-.2777?\"\\u2005\\u2063\":null}var t=e.prototype;return t.toNode=function(){if(this.character)return document.createTextNode(this.character);var e=document.createElementNS(\"http://www.w3.org/1998/Math/MathML\",\"mspace\");return e.setAttribute(\"width\",this.width+\"em\"),e},t.toMarkup=function(){return this.character?\"<mtext>\"+this.character+\"</mtext>\":'<mspace width=\"'+this.width+'em\"/>'},t.toText=function(){return this.character?this.character:\" \"},e}(),newDocumentFragment:wt},zt=function(e,t,r){return!X[t][e]||!X[t][e].replace||55349===e.charCodeAt(0)||he.hasOwnProperty(e)&&r&&(r.fontFamily&&\"tt\"===r.fontFamily.substr(4,2)||r.font&&\"tt\"===r.font.substr(4,2))||(e=X[t][e].replace),new Mt.TextNode(e)},At=function(e){return 1===e.length?e[0]:new Mt.MathNode(\"mrow\",e)},Tt=function(e,t){if(\"texttt\"===t.fontFamily)return\"monospace\";if(\"textsf\"===t.fontFamily)return\"textit\"===t.fontShape&&\"textbf\"===t.fontWeight?\"sans-serif-bold-italic\":\"textit\"===t.fontShape?\"sans-serif-italic\":\"textbf\"===t.fontWeight?\"bold-sans-serif\":\"sans-serif\";if(\"textit\"===t.fontShape&&\"textbf\"===t.fontWeight)return\"bold-italic\";if(\"textit\"===t.fontShape)return\"italic\";if(\"textbf\"===t.fontWeight)return\"bold\";var r=t.font;if(!r||\"mathnormal\"===r)return null;var n=e.mode;if(\"mathit\"===r)return\"italic\";if(\"boldsymbol\"===r)return\"textord\"===e.type?\"bold\":\"bold-italic\";if(\"mathbf\"===r)return\"bold\";if(\"mathbb\"===r)return\"double-struck\";if(\"mathfrak\"===r)return\"fraktur\";if(\"mathscr\"===r||\"mathcal\"===r)return\"script\";if(\"mathsf\"===r)return\"sans-serif\";if(\"mathtt\"===r)return\"monospace\";var a=e.text;return l.contains([\"\\\\imath\",\"\\\\jmath\"],a)?null:(X[n][a]&&X[n][a].replace&&(a=X[n][a].replace),V(a,je.fontMap[r].fontName,n)?je.fontMap[r].variant:null)},Bt=function(e,t,r){if(1===e.length){var n=qt(e[0],t);return r&&n instanceof kt&&\"mo\"===n.type&&(n.setAttribute(\"lspace\",\"0em\"),n.setAttribute(\"rspace\",\"0em\")),[n]}for(var a,i=[],o=0;o<e.length;o++){var s=qt(e[o],t);if(s instanceof kt&&a instanceof kt){if(\"mtext\"===s.type&&\"mtext\"===a.type&&s.getAttribute(\"mathvariant\")===a.getAttribute(\"mathvariant\")){var l;(l=a.children).push.apply(l,s.children);continue}if(\"mn\"===s.type&&\"mn\"===a.type){var h;(h=a.children).push.apply(h,s.children);continue}if(\"mi\"===s.type&&1===s.children.length&&\"mn\"===a.type){var m=s.children[0];if(m instanceof St&&\".\"===m.text){var c;(c=a.children).push.apply(c,s.children);continue}}else if(\"mi\"===a.type&&1===a.children.length){var u=a.children[0];if(u instanceof St&&\"\\u0338\"===u.text&&(\"mo\"===s.type||\"mi\"===s.type||\"mn\"===s.type)){var p=s.children[0];p instanceof St&&p.text.length>0&&(p.text=p.text.slice(0,1)+\"\\u0338\"+p.text.slice(1),i.pop())}}}i.push(s),a=s}return i},Nt=function(e,t,r){return At(Bt(e,t,r))},qt=function(e,t){if(!e)return new Mt.MathNode(\"mrow\");if(rt[e.type])return rt[e.type](e,t);throw new n(\"Got group of unknown type: '\"+e.type+\"'\")};function Ct(e,t,r,n,a){var i,o=Bt(e,r);i=1===o.length&&o[0]instanceof kt&&l.contains([\"mrow\",\"mtable\"],o[0].type)?o[0]:new Mt.MathNode(\"mrow\",o);var s=new Mt.MathNode(\"annotation\",[new Mt.TextNode(t)]);s.setAttribute(\"encoding\",\"application/x-tex\");var h=new Mt.MathNode(\"semantics\",[i,s]),m=new Mt.MathNode(\"math\",[h]);m.setAttribute(\"xmlns\",\"http://www.w3.org/1998/Math/MathML\"),n&&m.setAttribute(\"display\",\"block\");var c=a?\"katex\":\"katex-mathml\";return je.makeSpan([c],[m])}var It=function(e){return new Re({style:e.displayMode?b.DISPLAY:b.TEXT,maxSize:e.maxSize,minRuleThickness:e.minRuleThickness})},Rt=function(e,t){if(t.displayMode){var r=[\"katex-display\"];t.leqno&&r.push(\"leqno\"),t.fleqn&&r.push(\"fleqn\"),e=je.makeSpan(r,[e])}return e},Ot=function(e,t,r){var n,a=It(r);if(\"mathml\"===r.output)return Ct(e,t,a,r.displayMode,!0);if(\"html\"===r.output){var i=xt(e,a);n=je.makeSpan([\"katex\"],[i])}else{var o=Ct(e,t,a,r.displayMode,!1),s=xt(e,a);n=je.makeSpan([\"katex\"],[o,s])}return Rt(n,r)},Et={widehat:\"^\",widecheck:\"\\u02c7\",widetilde:\"~\",utilde:\"~\",overleftarrow:\"\\u2190\",underleftarrow:\"\\u2190\",xleftarrow:\"\\u2190\",overrightarrow:\"\\u2192\",underrightarrow:\"\\u2192\",xrightarrow:\"\\u2192\",underbrace:\"\\u23df\",overbrace:\"\\u23de\",overgroup:\"\\u23e0\",undergroup:\"\\u23e1\",overleftrightarrow:\"\\u2194\",underleftrightarrow:\"\\u2194\",xleftrightarrow:\"\\u2194\",Overrightarrow:\"\\u21d2\",xRightarrow:\"\\u21d2\",overleftharpoon:\"\\u21bc\",xleftharpoonup:\"\\u21bc\",overrightharpoon:\"\\u21c0\",xrightharpoonup:\"\\u21c0\",xLeftarrow:\"\\u21d0\",xLeftrightarrow:\"\\u21d4\",xhookleftarrow:\"\\u21a9\",xhookrightarrow:\"\\u21aa\",xmapsto:\"\\u21a6\",xrightharpoondown:\"\\u21c1\",xleftharpoondown:\"\\u21bd\",xrightleftharpoons:\"\\u21cc\",xleftrightharpoons:\"\\u21cb\",xtwoheadleftarrow:\"\\u219e\",xtwoheadrightarrow:\"\\u21a0\",xlongequal:\"=\",xtofrom:\"\\u21c4\",xrightleftarrows:\"\\u21c4\",xrightequilibrium:\"\\u21cc\",xleftequilibrium:\"\\u21cb\",\"\\\\cdrightarrow\":\"\\u2192\",\"\\\\cdleftarrow\":\"\\u2190\",\"\\\\cdlongequal\":\"=\"},Ht={overrightarrow:[[\"rightarrow\"],.888,522,\"xMaxYMin\"],overleftarrow:[[\"leftarrow\"],.888,522,\"xMinYMin\"],underrightarrow:[[\"rightarrow\"],.888,522,\"xMaxYMin\"],underleftarrow:[[\"leftarrow\"],.888,522,\"xMinYMin\"],xrightarrow:[[\"rightarrow\"],1.469,522,\"xMaxYMin\"],\"\\\\cdrightarrow\":[[\"rightarrow\"],3,522,\"xMaxYMin\"],xleftarrow:[[\"leftarrow\"],1.469,522,\"xMinYMin\"],\"\\\\cdleftarrow\":[[\"leftarrow\"],3,522,\"xMinYMin\"],Overrightarrow:[[\"doublerightarrow\"],.888,560,\"xMaxYMin\"],xRightarrow:[[\"doublerightarrow\"],1.526,560,\"xMaxYMin\"],xLeftarrow:[[\"doubleleftarrow\"],1.526,560,\"xMinYMin\"],overleftharpoon:[[\"leftharpoon\"],.888,522,\"xMinYMin\"],xleftharpoonup:[[\"leftharpoon\"],.888,522,\"xMinYMin\"],xleftharpoondown:[[\"leftharpoondown\"],.888,522,\"xMinYMin\"],overrightharpoon:[[\"rightharpoon\"],.888,522,\"xMaxYMin\"],xrightharpoonup:[[\"rightharpoon\"],.888,522,\"xMaxYMin\"],xrightharpoondown:[[\"rightharpoondown\"],.888,522,\"xMaxYMin\"],xlongequal:[[\"longequal\"],.888,334,\"xMinYMin\"],\"\\\\cdlongequal\":[[\"longequal\"],3,334,\"xMinYMin\"],xtwoheadleftarrow:[[\"twoheadleftarrow\"],.888,334,\"xMinYMin\"],xtwoheadrightarrow:[[\"twoheadrightarrow\"],.888,334,\"xMaxYMin\"],overleftrightarrow:[[\"leftarrow\",\"rightarrow\"],.888,522],overbrace:[[\"leftbrace\",\"midbrace\",\"rightbrace\"],1.6,548],underbrace:[[\"leftbraceunder\",\"midbraceunder\",\"rightbraceunder\"],1.6,548],underleftrightarrow:[[\"leftarrow\",\"rightarrow\"],.888,522],xleftrightarrow:[[\"leftarrow\",\"rightarrow\"],1.75,522],xLeftrightarrow:[[\"doubleleftarrow\",\"doublerightarrow\"],1.75,560],xrightleftharpoons:[[\"leftharpoondownplus\",\"rightharpoonplus\"],1.75,716],xleftrightharpoons:[[\"leftharpoonplus\",\"rightharpoondownplus\"],1.75,716],xhookleftarrow:[[\"leftarrow\",\"righthook\"],1.08,522],xhookrightarrow:[[\"lefthook\",\"rightarrow\"],1.08,522],overlinesegment:[[\"leftlinesegment\",\"rightlinesegment\"],.888,522],underlinesegment:[[\"leftlinesegment\",\"rightlinesegment\"],.888,522],overgroup:[[\"leftgroup\",\"rightgroup\"],.888,342],undergroup:[[\"leftgroupunder\",\"rightgroupunder\"],.888,342],xmapsto:[[\"leftmapsto\",\"rightarrow\"],1.5,522],xtofrom:[[\"leftToFrom\",\"rightToFrom\"],1.75,528],xrightleftarrows:[[\"baraboveleftarrow\",\"rightarrowabovebar\"],1.75,901],xrightequilibrium:[[\"baraboveshortleftharpoon\",\"rightharpoonaboveshortbar\"],1.75,716],xleftequilibrium:[[\"shortbaraboveleftharpoon\",\"shortrightharpoonabovebar\"],1.75,716]},Lt=function(e,t,r,n,a){var i,o=e.height+e.depth+r+n;if(/fbox|color|angl/.test(t)){if(i=je.makeSpan([\"stretchy\",t],[],a),\"fbox\"===t){var s=a.color&&a.getColor();s&&(i.style.borderColor=s)}}else{var l=[];/^[bx]cancel$/.test(t)&&l.push(new H({x1:\"0\",y1:\"0\",x2:\"100%\",y2:\"100%\",\"stroke-width\":\"0.046em\"})),/^x?cancel$/.test(t)&&l.push(new H({x1:\"0\",y1:\"100%\",x2:\"100%\",y2:\"0\",\"stroke-width\":\"0.046em\"}));var h=new O(l,{width:\"100%\",height:o+\"em\"});i=je.makeSvgSpan([],[h],a)}return i.height=o,i.style.height=o+\"em\",i},Dt=function(e){var t=new Mt.MathNode(\"mo\",[new Mt.TextNode(Et[e.replace(/^\\\\/,\"\")])]);return t.setAttribute(\"stretchy\",\"true\"),t},Pt=function(e,t){var r=function(){var r=4e5,n=e.label.substr(1);if(l.contains([\"widehat\",\"widecheck\",\"widetilde\",\"utilde\"],n)){var a,i,o,s=\"ordgroup\"===(d=e.base).type?d.body.length:1;if(s>5)\"widehat\"===n||\"widecheck\"===n?(a=420,r=2364,o=.42,i=n+\"4\"):(a=312,r=2340,o=.34,i=\"tilde4\");else{var h=[1,1,2,2,3,3][s];\"widehat\"===n||\"widecheck\"===n?(r=[0,1062,2364,2364,2364][h],a=[0,239,300,360,420][h],o=[0,.24,.3,.3,.36,.42][h],i=n+h):(r=[0,600,1033,2339,2340][h],a=[0,260,286,306,312][h],o=[0,.26,.286,.3,.306,.34][h],i=\"tilde\"+h)}var m=new E(i),c=new O([m],{width:\"100%\",height:o+\"em\",viewBox:\"0 0 \"+r+\" \"+a,preserveAspectRatio:\"none\"});return{span:je.makeSvgSpan([],[c],t),minWidth:0,height:o}}var u,p,d,f=[],g=Ht[n],v=g[0],b=g[1],y=g[2],x=y/1e3,w=v.length;if(1===w)u=[\"hide-tail\"],p=[g[3]];else if(2===w)u=[\"halfarrow-left\",\"halfarrow-right\"],p=[\"xMinYMin\",\"xMaxYMin\"];else{if(3!==w)throw new Error(\"Correct katexImagesData or update code here to support\\n                    \"+w+\" children.\");u=[\"brace-left\",\"brace-center\",\"brace-right\"],p=[\"xMinYMin\",\"xMidYMin\",\"xMaxYMin\"]}for(var k=0;k<w;k++){var S=new E(v[k]),M=new O([S],{width:\"400em\",height:x+\"em\",viewBox:\"0 0 \"+r+\" \"+y,preserveAspectRatio:p[k]+\" slice\"}),z=je.makeSvgSpan([u[k]],[M],t);if(1===w)return{span:z,minWidth:b,height:x};z.style.height=x+\"em\",f.push(z)}return{span:je.makeSpan([\"stretchy\"],f,t),minWidth:b,height:x}}(),n=r.span,a=r.minWidth,i=r.height;return n.height=i,n.style.height=i+\"em\",a>0&&(n.style.minWidth=a+\"em\"),n};function Ft(e,t){if(!e||e.type!==t)throw new Error(\"Expected node of type \"+t+\", but got \"+(e?\"node of type \"+e.type:String(e)));return e}function Vt(e){var t=Gt(e);if(!t)throw new Error(\"Expected node of symbol group type, but got \"+(e?\"node of type \"+e.type:String(e)));return t}function Gt(e){return e&&(\"atom\"===e.type||Y.hasOwnProperty(e.type))?e:null}var Ut=function(e,t){var r,n,a;e&&\"supsub\"===e.type?(r=(n=Ft(e.base,\"accent\")).base,e.base=r,a=function(e){if(e instanceof N)return e;throw new Error(\"Expected span<HtmlDomNode> but got \"+String(e)+\".\")}(bt(e,t)),e.base=n):r=(n=Ft(e,\"accent\")).base;var i=bt(r,t.havingCrampedStyle()),o=0;if(n.isShifty&&l.isCharacterBox(r)){var s=l.getBaseElem(r);o=L(bt(s,t.havingCrampedStyle())).skew}var h,m=\"\\\\c\"===n.label,c=m?i.height+i.depth:Math.min(i.height,t.fontMetrics().xHeight);if(n.isStretchy)h=Pt(n,t),h=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:i},{type:\"elem\",elem:h,wrapperClasses:[\"svg-align\"],wrapperStyle:o>0?{width:\"calc(100% - \"+2*o+\"em)\",marginLeft:2*o+\"em\"}:void 0}]},t);else{var u,p;\"\\\\vec\"===n.label?(u=je.staticSvg(\"vec\",t),p=je.svgData.vec[1]):((u=L(u=je.makeOrd({mode:n.mode,text:n.label},t,\"textord\"))).italic=0,p=u.width,m&&(c+=u.depth)),h=je.makeSpan([\"accent-body\"],[u]);var d=\"\\\\textcircled\"===n.label;d&&(h.classes.push(\"accent-full\"),c=i.height);var f=o;d||(f-=p/2),h.style.left=f+\"em\",\"\\\\textcircled\"===n.label&&(h.style.top=\".2em\"),h=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:i},{type:\"kern\",size:-c},{type:\"elem\",elem:h}]},t)}var g=je.makeSpan([\"mord\",\"accent\"],[h],t);return a?(a.children[0]=g,a.height=Math.max(g.height,a.height),a.classes[0]=\"mord\",a):g},Yt=function(e,t){var r=e.isStretchy?Dt(e.label):new Mt.MathNode(\"mo\",[zt(e.label,e.mode)]),n=new Mt.MathNode(\"mover\",[qt(e.base,t),r]);return n.setAttribute(\"accent\",\"true\"),n},Wt=new RegExp([\"\\\\acute\",\"\\\\grave\",\"\\\\ddot\",\"\\\\tilde\",\"\\\\bar\",\"\\\\breve\",\"\\\\check\",\"\\\\hat\",\"\\\\vec\",\"\\\\dot\",\"\\\\mathring\"].map((function(e){return\"\\\\\"+e})).join(\"|\"));nt({type:\"accent\",names:[\"\\\\acute\",\"\\\\grave\",\"\\\\ddot\",\"\\\\tilde\",\"\\\\bar\",\"\\\\breve\",\"\\\\check\",\"\\\\hat\",\"\\\\vec\",\"\\\\dot\",\"\\\\mathring\",\"\\\\widecheck\",\"\\\\widehat\",\"\\\\widetilde\",\"\\\\overrightarrow\",\"\\\\overleftarrow\",\"\\\\Overrightarrow\",\"\\\\overleftrightarrow\",\"\\\\overgroup\",\"\\\\overlinesegment\",\"\\\\overleftharpoon\",\"\\\\overrightharpoon\"],props:{numArgs:1},handler:function(e,t){var r=it(t[0]),n=!Wt.test(e.funcName),a=!n||\"\\\\widehat\"===e.funcName||\"\\\\widetilde\"===e.funcName||\"\\\\widecheck\"===e.funcName;return{type:\"accent\",mode:e.parser.mode,label:e.funcName,isStretchy:n,isShifty:a,base:r}},htmlBuilder:Ut,mathmlBuilder:Yt}),nt({type:\"accent\",names:[\"\\\\'\",\"\\\\`\",\"\\\\^\",\"\\\\~\",\"\\\\=\",\"\\\\u\",\"\\\\.\",'\\\\\"',\"\\\\c\",\"\\\\r\",\"\\\\H\",\"\\\\v\",\"\\\\textcircled\"],props:{numArgs:1,allowedInText:!0,allowedInMath:!0,argTypes:[\"primitive\"]},handler:function(e,t){var r=t[0],n=e.parser.mode;return\"math\"===n&&(e.parser.settings.reportNonstrict(\"mathVsTextAccents\",\"LaTeX's accent \"+e.funcName+\" works only in text mode\"),n=\"text\"),{type:\"accent\",mode:n,label:e.funcName,isStretchy:!1,isShifty:!0,base:r}},htmlBuilder:Ut,mathmlBuilder:Yt}),nt({type:\"accentUnder\",names:[\"\\\\underleftarrow\",\"\\\\underrightarrow\",\"\\\\underleftrightarrow\",\"\\\\undergroup\",\"\\\\underlinesegment\",\"\\\\utilde\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:\"accentUnder\",mode:r.mode,label:n,base:a}},htmlBuilder:function(e,t){var r=bt(e.base,t),n=Pt(e,t),a=\"\\\\utilde\"===e.label?.12:0,i=je.makeVList({positionType:\"top\",positionData:r.height,children:[{type:\"elem\",elem:n,wrapperClasses:[\"svg-align\"]},{type:\"kern\",size:a},{type:\"elem\",elem:r}]},t);return je.makeSpan([\"mord\",\"accentunder\"],[i],t)},mathmlBuilder:function(e,t){var r=Dt(e.label),n=new Mt.MathNode(\"munder\",[qt(e.base,t),r]);return n.setAttribute(\"accentunder\",\"true\"),n}});var Xt=function(e){var t=new Mt.MathNode(\"mpadded\",e?[e]:[]);return t.setAttribute(\"width\",\"+0.6em\"),t.setAttribute(\"lspace\",\"0.3em\"),t};nt({type:\"xArrow\",names:[\"\\\\xleftarrow\",\"\\\\xrightarrow\",\"\\\\xLeftarrow\",\"\\\\xRightarrow\",\"\\\\xleftrightarrow\",\"\\\\xLeftrightarrow\",\"\\\\xhookleftarrow\",\"\\\\xhookrightarrow\",\"\\\\xmapsto\",\"\\\\xrightharpoondown\",\"\\\\xrightharpoonup\",\"\\\\xleftharpoondown\",\"\\\\xleftharpoonup\",\"\\\\xrightleftharpoons\",\"\\\\xleftrightharpoons\",\"\\\\xlongequal\",\"\\\\xtwoheadrightarrow\",\"\\\\xtwoheadleftarrow\",\"\\\\xtofrom\",\"\\\\xrightleftarrows\",\"\\\\xrightequilibrium\",\"\\\\xleftequilibrium\",\"\\\\\\\\cdrightarrow\",\"\\\\\\\\cdleftarrow\",\"\\\\\\\\cdlongequal\"],props:{numArgs:1,numOptionalArgs:1},handler:function(e,t,r){var n=e.parser,a=e.funcName;return{type:\"xArrow\",mode:n.mode,label:a,body:t[0],below:r[0]}},htmlBuilder:function(e,t){var r,n=t.style,a=t.havingStyle(n.sup()),i=je.wrapFragment(bt(e.body,a,t),t),o=\"\\\\x\"===e.label.slice(0,2)?\"x\":\"cd\";i.classes.push(o+\"-arrow-pad\"),e.below&&(a=t.havingStyle(n.sub()),(r=je.wrapFragment(bt(e.below,a,t),t)).classes.push(o+\"-arrow-pad\"));var s,l=Pt(e,t),h=-t.fontMetrics().axisHeight+.5*l.height,m=-t.fontMetrics().axisHeight-.5*l.height-.111;if((i.depth>.25||\"\\\\xleftequilibrium\"===e.label)&&(m-=i.depth),r){var c=-t.fontMetrics().axisHeight+r.height+.5*l.height+.111;s=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:i,shift:m},{type:\"elem\",elem:l,shift:h},{type:\"elem\",elem:r,shift:c}]},t)}else s=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:i,shift:m},{type:\"elem\",elem:l,shift:h}]},t);return s.children[0].children[0].children[1].classes.push(\"svg-align\"),je.makeSpan([\"mrel\",\"x-arrow\"],[s],t)},mathmlBuilder:function(e,t){var r,n=Dt(e.label);if(n.setAttribute(\"minsize\",\"x\"===e.label.charAt(0)?\"1.75em\":\"3.0em\"),e.body){var a=Xt(qt(e.body,t));if(e.below){var i=Xt(qt(e.below,t));r=new Mt.MathNode(\"munderover\",[n,i,a])}else r=new Mt.MathNode(\"mover\",[n,a])}else if(e.below){var o=Xt(qt(e.below,t));r=new Mt.MathNode(\"munder\",[n,o])}else r=Xt(),r=new Mt.MathNode(\"mover\",[n,r]);return r}});var _t={\">\":\"\\\\\\\\cdrightarrow\",\"<\":\"\\\\\\\\cdleftarrow\",\"=\":\"\\\\\\\\cdlongequal\",A:\"\\\\uparrow\",V:\"\\\\downarrow\",\"|\":\"\\\\Vert\",\".\":\"no arrow\"},jt=function(e){return\"textord\"===e.type&&\"@\"===e.text};function $t(e,t,r){var n=_t[e];switch(n){case\"\\\\\\\\cdrightarrow\":case\"\\\\\\\\cdleftarrow\":return r.callFunction(n,[t[0]],[t[1]]);case\"\\\\uparrow\":case\"\\\\downarrow\":var a={type:\"atom\",text:n,mode:\"math\",family:\"rel\"},i={type:\"ordgroup\",mode:\"math\",body:[r.callFunction(\"\\\\\\\\cdleft\",[t[0]],[]),r.callFunction(\"\\\\Big\",[a],[]),r.callFunction(\"\\\\\\\\cdright\",[t[1]],[])]};return r.callFunction(\"\\\\\\\\cdparent\",[i],[]);case\"\\\\\\\\cdlongequal\":return r.callFunction(\"\\\\\\\\cdlongequal\",[],[]);case\"\\\\Vert\":return r.callFunction(\"\\\\Big\",[{type:\"textord\",text:\"\\\\Vert\",mode:\"math\"}],[]);default:return{type:\"textord\",text:\" \",mode:\"math\"}}}nt({type:\"cdlabel\",names:[\"\\\\\\\\cdleft\",\"\\\\\\\\cdright\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName;return{type:\"cdlabel\",mode:r.mode,side:n.slice(4),label:t[0]}},htmlBuilder:function(e,t){var r=t.havingStyle(t.style.sup()),n=je.wrapFragment(bt(e.label,r,t),t);return n.classes.push(\"cd-label-\"+e.side),n.style.bottom=.8-n.depth+\"em\",n.height=0,n.depth=0,n},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mrow\",[qt(e.label,t)]);return(r=new Mt.MathNode(\"mpadded\",[r])).setAttribute(\"width\",\"0\"),\"left\"===e.side&&r.setAttribute(\"lspace\",\"-1width\"),r.setAttribute(\"voffset\",\"0.7em\"),(r=new Mt.MathNode(\"mstyle\",[r])).setAttribute(\"displaystyle\",\"false\"),r.setAttribute(\"scriptlevel\",\"1\"),r}}),nt({type:\"cdlabelparent\",names:[\"\\\\\\\\cdparent\"],props:{numArgs:1},handler:function(e,t){return{type:\"cdlabelparent\",mode:e.parser.mode,fragment:t[0]}},htmlBuilder:function(e,t){var r=je.wrapFragment(bt(e.fragment,t),t);return r.classes.push(\"cd-vert-arrow\"),r},mathmlBuilder:function(e,t){return new Mt.MathNode(\"mrow\",[qt(e.fragment,t)])}}),nt({type:\"textord\",names:[\"\\\\@char\"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){for(var r=e.parser,a=Ft(t[0],\"ordgroup\").body,i=\"\",o=0;o<a.length;o++){i+=Ft(a[o],\"textord\").text}var s,l=parseInt(i);if(isNaN(l))throw new n(\"\\\\@char has non-numeric argument \"+i);if(l<0||l>=1114111)throw new n(\"\\\\@char with invalid code point \"+i);return l<=65535?s=String.fromCharCode(l):(l-=65536,s=String.fromCharCode(55296+(l>>10),56320+(1023&l))),{type:\"textord\",mode:r.mode,text:s}}});var Zt=function(e,t){var r=ut(e.body,t.withColor(e.color),!1);return je.makeFragment(r)},Kt=function(e,t){var r=Bt(e.body,t.withColor(e.color)),n=new Mt.MathNode(\"mstyle\",r);return n.setAttribute(\"mathcolor\",e.color),n};nt({type:\"color\",names:[\"\\\\textcolor\"],props:{numArgs:2,allowedInText:!0,argTypes:[\"color\",\"original\"]},handler:function(e,t){var r=e.parser,n=Ft(t[0],\"color-token\").color,a=t[1];return{type:\"color\",mode:r.mode,color:n,body:ot(a)}},htmlBuilder:Zt,mathmlBuilder:Kt}),nt({type:\"color\",names:[\"\\\\color\"],props:{numArgs:1,allowedInText:!0,argTypes:[\"color\"]},handler:function(e,t){var r=e.parser,n=e.breakOnTokenText,a=Ft(t[0],\"color-token\").color;r.gullet.macros.set(\"\\\\current@color\",a);var i=r.parseExpression(!0,n);return{type:\"color\",mode:r.mode,color:a,body:i}},htmlBuilder:Zt,mathmlBuilder:Kt}),nt({type:\"cr\",names:[\"\\\\\\\\\"],props:{numArgs:0,numOptionalArgs:1,argTypes:[\"size\"],allowedInText:!0},handler:function(e,t,r){var n=e.parser,a=r[0],i=!n.settings.displayMode||!n.settings.useStrictBehavior(\"newLineInDisplayMode\",\"In LaTeX, \\\\\\\\ or \\\\newline does nothing in display mode\");return{type:\"cr\",mode:n.mode,newLine:i,size:a&&Ft(a,\"size\").value}},htmlBuilder:function(e,t){var r=je.makeSpan([\"mspace\"],[],t);return e.newLine&&(r.classes.push(\"newline\"),e.size&&(r.style.marginTop=Le(e.size,t)+\"em\")),r},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mspace\");return e.newLine&&(r.setAttribute(\"linebreak\",\"newline\"),e.size&&r.setAttribute(\"height\",Le(e.size,t)+\"em\")),r}});var Jt={\"\\\\global\":\"\\\\global\",\"\\\\long\":\"\\\\\\\\globallong\",\"\\\\\\\\globallong\":\"\\\\\\\\globallong\",\"\\\\def\":\"\\\\gdef\",\"\\\\gdef\":\"\\\\gdef\",\"\\\\edef\":\"\\\\xdef\",\"\\\\xdef\":\"\\\\xdef\",\"\\\\let\":\"\\\\\\\\globallet\",\"\\\\futurelet\":\"\\\\\\\\globalfuture\"},Qt=function(e){var t=e.text;if(/^(?:[\\\\{}$&#^_]|EOF)$/.test(t))throw new n(\"Expected a control sequence\",e);return t},er=function(e,t,r,n){var a=e.gullet.macros.get(r.text);null==a&&(r.noexpand=!0,a={tokens:[r],numArgs:0,unexpandable:!e.gullet.isExpandable(r.text)}),e.gullet.macros.set(t,a,n)};nt({type:\"internal\",names:[\"\\\\global\",\"\\\\long\",\"\\\\\\\\globallong\"],props:{numArgs:0,allowedInText:!0},handler:function(e){var t=e.parser,r=e.funcName;t.consumeSpaces();var a=t.fetch();if(Jt[a.text])return\"\\\\global\"!==r&&\"\\\\\\\\globallong\"!==r||(a.text=Jt[a.text]),Ft(t.parseFunction(),\"internal\");throw new n(\"Invalid token after macro prefix\",a)}}),nt({type:\"internal\",names:[\"\\\\def\",\"\\\\gdef\",\"\\\\edef\",\"\\\\xdef\"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,a=t.gullet.popToken(),i=a.text;if(/^(?:[\\\\{}$&#^_]|EOF)$/.test(i))throw new n(\"Expected a control sequence\",a);for(var o,s=0,l=[[]];\"{\"!==t.gullet.future().text;)if(\"#\"===(a=t.gullet.popToken()).text){if(\"{\"===t.gullet.future().text){o=t.gullet.future(),l[s].push(\"{\");break}if(a=t.gullet.popToken(),!/^[1-9]$/.test(a.text))throw new n('Invalid argument number \"'+a.text+'\"');if(parseInt(a.text)!==s+1)throw new n('Argument number \"'+a.text+'\" out of order');s++,l.push([])}else{if(\"EOF\"===a.text)throw new n(\"Expected a macro definition\");l[s].push(a.text)}var h=t.gullet.consumeArg().tokens;return o&&h.unshift(o),\"\\\\edef\"!==r&&\"\\\\xdef\"!==r||(h=t.gullet.expandTokens(h)).reverse(),t.gullet.macros.set(i,{tokens:h,numArgs:s,delimiters:l},r===Jt[r]),{type:\"internal\",mode:t.mode}}}),nt({type:\"internal\",names:[\"\\\\let\",\"\\\\\\\\globallet\"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,n=Qt(t.gullet.popToken());t.gullet.consumeSpaces();var a=function(e){var t=e.gullet.popToken();return\"=\"===t.text&&\" \"===(t=e.gullet.popToken()).text&&(t=e.gullet.popToken()),t}(t);return er(t,n,a,\"\\\\\\\\globallet\"===r),{type:\"internal\",mode:t.mode}}}),nt({type:\"internal\",names:[\"\\\\futurelet\",\"\\\\\\\\globalfuture\"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,n=Qt(t.gullet.popToken()),a=t.gullet.popToken(),i=t.gullet.popToken();return er(t,n,i,\"\\\\\\\\globalfuture\"===r),t.gullet.pushToken(i),t.gullet.pushToken(a),{type:\"internal\",mode:t.mode}}});var tr=function(e,t,r){var n=V(X.math[e]&&X.math[e].replace||e,t,r);if(!n)throw new Error(\"Unsupported symbol \"+e+\" and font size \"+t+\".\");return n},rr=function(e,t,r,n){var a=r.havingBaseStyle(t),i=je.makeSpan(n.concat(a.sizingClasses(r)),[e],r),o=a.sizeMultiplier/r.sizeMultiplier;return i.height*=o,i.depth*=o,i.maxFontSize=a.sizeMultiplier,i},nr=function(e,t,r){var n=t.havingBaseStyle(r),a=(1-t.sizeMultiplier/n.sizeMultiplier)*t.fontMetrics().axisHeight;e.classes.push(\"delimcenter\"),e.style.top=a+\"em\",e.height-=a,e.depth+=a},ar=function(e,t,r,n,a,i){var o=function(e,t,r,n){return je.makeSymbol(e,\"Size\"+t+\"-Regular\",r,n)}(e,t,a,n),s=rr(je.makeSpan([\"delimsizing\",\"size\"+t],[o],n),b.TEXT,n,i);return r&&nr(s,n,b.TEXT),s},ir=function(e,t,r){var n;return n=\"Size1-Regular\"===t?\"delim-size1\":\"delim-size4\",{type:\"elem\",elem:je.makeSpan([\"delimsizinginner\",n],[je.makeSpan([],[je.makeSymbol(e,t,r)])])}},or=function(e,t,r){var n=D[\"Size4-Regular\"][e.charCodeAt(0)]?D[\"Size4-Regular\"][e.charCodeAt(0)][4].toFixed(3):D[\"Size1-Regular\"][e.charCodeAt(0)][4].toFixed(3),a=new E(\"inner\",function(e,t){switch(e){case\"\\u239c\":return\"M291 0 H417 V\"+t+\" H291z M291 0 H417 V\"+t+\" H291z\";case\"\\u2223\":return\"M145 0 H188 V\"+t+\" H145z M145 0 H188 V\"+t+\" H145z\";case\"\\u2225\":return\"M145 0 H188 V\"+t+\" H145z M145 0 H188 V\"+t+\" H145zM367 0 H410 V\"+t+\" H367z M367 0 H410 V\"+t+\" H367z\";case\"\\u239f\":return\"M457 0 H583 V\"+t+\" H457z M457 0 H583 V\"+t+\" H457z\";case\"\\u23a2\":return\"M319 0 H403 V\"+t+\" H319z M319 0 H403 V\"+t+\" H319z\";case\"\\u23a5\":return\"M263 0 H347 V\"+t+\" H263z M263 0 H347 V\"+t+\" H263z\";case\"\\u23aa\":return\"M384 0 H504 V\"+t+\" H384z M384 0 H504 V\"+t+\" H384z\";case\"\\u23d0\":return\"M312 0 H355 V\"+t+\" H312z M312 0 H355 V\"+t+\" H312z\";case\"\\u2016\":return\"M257 0 H300 V\"+t+\" H257z M257 0 H300 V\"+t+\" H257zM478 0 H521 V\"+t+\" H478z M478 0 H521 V\"+t+\" H478z\";default:return\"\"}}(e,Math.round(1e3*t))),i=new O([a],{width:n+\"em\",height:t+\"em\",style:\"width:\"+n+\"em\",viewBox:\"0 0 \"+1e3*n+\" \"+Math.round(1e3*t),preserveAspectRatio:\"xMinYMin\"}),o=je.makeSvgSpan([],[i],r);return o.height=t,o.style.height=t+\"em\",o.style.width=n+\"em\",{type:\"elem\",elem:o}},sr={type:\"kern\",size:-.008},lr=[\"|\",\"\\\\lvert\",\"\\\\rvert\",\"\\\\vert\"],hr=[\"\\\\|\",\"\\\\lVert\",\"\\\\rVert\",\"\\\\Vert\"],mr=function(e,t,r,n,a,i){var o,s,h,m;o=h=m=e,s=null;var c=\"Size1-Regular\";\"\\\\uparrow\"===e?h=m=\"\\u23d0\":\"\\\\Uparrow\"===e?h=m=\"\\u2016\":\"\\\\downarrow\"===e?o=h=\"\\u23d0\":\"\\\\Downarrow\"===e?o=h=\"\\u2016\":\"\\\\updownarrow\"===e?(o=\"\\\\uparrow\",h=\"\\u23d0\",m=\"\\\\downarrow\"):\"\\\\Updownarrow\"===e?(o=\"\\\\Uparrow\",h=\"\\u2016\",m=\"\\\\Downarrow\"):l.contains(lr,e)?h=\"\\u2223\":l.contains(hr,e)?h=\"\\u2225\":\"[\"===e||\"\\\\lbrack\"===e?(o=\"\\u23a1\",h=\"\\u23a2\",m=\"\\u23a3\",c=\"Size4-Regular\"):\"]\"===e||\"\\\\rbrack\"===e?(o=\"\\u23a4\",h=\"\\u23a5\",m=\"\\u23a6\",c=\"Size4-Regular\"):\"\\\\lfloor\"===e||\"\\u230a\"===e?(h=o=\"\\u23a2\",m=\"\\u23a3\",c=\"Size4-Regular\"):\"\\\\lceil\"===e||\"\\u2308\"===e?(o=\"\\u23a1\",h=m=\"\\u23a2\",c=\"Size4-Regular\"):\"\\\\rfloor\"===e||\"\\u230b\"===e?(h=o=\"\\u23a5\",m=\"\\u23a6\",c=\"Size4-Regular\"):\"\\\\rceil\"===e||\"\\u2309\"===e?(o=\"\\u23a4\",h=m=\"\\u23a5\",c=\"Size4-Regular\"):\"(\"===e||\"\\\\lparen\"===e?(o=\"\\u239b\",h=\"\\u239c\",m=\"\\u239d\",c=\"Size4-Regular\"):\")\"===e||\"\\\\rparen\"===e?(o=\"\\u239e\",h=\"\\u239f\",m=\"\\u23a0\",c=\"Size4-Regular\"):\"\\\\{\"===e||\"\\\\lbrace\"===e?(o=\"\\u23a7\",s=\"\\u23a8\",m=\"\\u23a9\",h=\"\\u23aa\",c=\"Size4-Regular\"):\"\\\\}\"===e||\"\\\\rbrace\"===e?(o=\"\\u23ab\",s=\"\\u23ac\",m=\"\\u23ad\",h=\"\\u23aa\",c=\"Size4-Regular\"):\"\\\\lgroup\"===e||\"\\u27ee\"===e?(o=\"\\u23a7\",m=\"\\u23a9\",h=\"\\u23aa\",c=\"Size4-Regular\"):\"\\\\rgroup\"===e||\"\\u27ef\"===e?(o=\"\\u23ab\",m=\"\\u23ad\",h=\"\\u23aa\",c=\"Size4-Regular\"):\"\\\\lmoustache\"===e||\"\\u23b0\"===e?(o=\"\\u23a7\",m=\"\\u23ad\",h=\"\\u23aa\",c=\"Size4-Regular\"):\"\\\\rmoustache\"!==e&&\"\\u23b1\"!==e||(o=\"\\u23ab\",m=\"\\u23a9\",h=\"\\u23aa\",c=\"Size4-Regular\");var u=tr(o,c,a),p=u.height+u.depth,d=tr(h,c,a),f=d.height+d.depth,g=tr(m,c,a),v=g.height+g.depth,y=0,x=1;if(null!==s){var w=tr(s,c,a);y=w.height+w.depth,x=2}var k=p+v+y,S=k+Math.max(0,Math.ceil((t-k)/(x*f)))*x*f,M=n.fontMetrics().axisHeight;r&&(M*=n.sizeMultiplier);var z=S/2-M,A=[];if(A.push(ir(m,c,a)),A.push(sr),null===s){var T=S-p-v+.016;A.push(or(h,T,n))}else{var B=(S-p-v-y)/2+.016;A.push(or(h,B,n)),A.push(sr),A.push(ir(s,c,a)),A.push(sr),A.push(or(h,B,n))}A.push(sr),A.push(ir(o,c,a));var N=n.havingBaseStyle(b.TEXT),q=je.makeVList({positionType:\"bottom\",positionData:z,children:A},N);return rr(je.makeSpan([\"delimsizing\",\"mult\"],[q],N),b.TEXT,n,i)},cr=.08,ur=function(e,t,r,n,a){var i=function(e,t,r){t*=1e3;var n=\"\";switch(e){case\"sqrtMain\":n=function(e,t){return\"M95,\"+(622+e+t)+\"\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl\"+e/2.075+\" -\"+e+\"\\nc5.3,-9.3,12,-14,20,-14\\nH400000v\"+(40+e)+\"H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM\"+(834+e)+\" \"+t+\"h400000v\"+(40+e)+\"h-400000z\"}(t,k);break;case\"sqrtSize1\":n=function(e,t){return\"M263,\"+(601+e+t)+\"c0.7,0,18,39.7,52,119\\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\\nc340,-704.7,510.7,-1060.3,512,-1067\\nl\"+e/2.084+\" -\"+e+\"\\nc4.7,-7.3,11,-11,19,-11\\nH40000v\"+(40+e)+\"H1012.3\\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\\nM\"+(1001+e)+\" \"+t+\"h400000v\"+(40+e)+\"h-400000z\"}(t,k);break;case\"sqrtSize2\":n=function(e,t){return\"M983 \"+(10+e+t)+\"\\nl\"+e/3.13+\" -\"+e+\"\\nc4,-6.7,10,-10,18,-10 H400000v\"+(40+e)+\"\\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\\nM\"+(1001+e)+\" \"+t+\"h400000v\"+(40+e)+\"h-400000z\"}(t,k);break;case\"sqrtSize3\":n=function(e,t){return\"M424,\"+(2398+e+t)+\"\\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\\nl\"+e/4.223+\" -\"+e+\"c4,-6.7,10,-10,18,-10 H400000\\nv\"+(40+e)+\"H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\\nc-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M\"+(1001+e)+\" \"+t+\"\\nh400000v\"+(40+e)+\"h-400000z\"}(t,k);break;case\"sqrtSize4\":n=function(e,t){return\"M473,\"+(2713+e+t)+\"\\nc339.3,-1799.3,509.3,-2700,510,-2702 l\"+e/5.298+\" -\"+e+\"\\nc3.3,-7.3,9.3,-11,18,-11 H400000v\"+(40+e)+\"H1017.7\\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\\n606zM\"+(1001+e)+\" \"+t+\"h400000v\"+(40+e)+\"H1017.7z\"}(t,k);break;case\"sqrtTall\":n=function(e,t,r){return\"M702 \"+(e+t)+\"H400000\"+(40+e)+\"\\nH742v\"+(r-54-t-e)+\"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\\n219 661 l218 661zM702 \"+t+\"H400000v\"+(40+e)+\"H742z\"}(t,k,r)}return n}(e,n,r),o=new E(e,i),s=new O([o],{width:\"400em\",height:t+\"em\",viewBox:\"0 0 400000 \"+r,preserveAspectRatio:\"xMinYMin slice\"});return je.makeSvgSpan([\"hide-tail\"],[s],a)},pr=[\"(\",\"\\\\lparen\",\")\",\"\\\\rparen\",\"[\",\"\\\\lbrack\",\"]\",\"\\\\rbrack\",\"\\\\{\",\"\\\\lbrace\",\"\\\\}\",\"\\\\rbrace\",\"\\\\lfloor\",\"\\\\rfloor\",\"\\u230a\",\"\\u230b\",\"\\\\lceil\",\"\\\\rceil\",\"\\u2308\",\"\\u2309\",\"\\\\surd\"],dr=[\"\\\\uparrow\",\"\\\\downarrow\",\"\\\\updownarrow\",\"\\\\Uparrow\",\"\\\\Downarrow\",\"\\\\Updownarrow\",\"|\",\"\\\\|\",\"\\\\vert\",\"\\\\Vert\",\"\\\\lvert\",\"\\\\rvert\",\"\\\\lVert\",\"\\\\rVert\",\"\\\\lgroup\",\"\\\\rgroup\",\"\\u27ee\",\"\\u27ef\",\"\\\\lmoustache\",\"\\\\rmoustache\",\"\\u23b0\",\"\\u23b1\"],fr=[\"<\",\">\",\"\\\\langle\",\"\\\\rangle\",\"/\",\"\\\\backslash\",\"\\\\lt\",\"\\\\gt\"],gr=[0,1.2,1.8,2.4,3],vr=[{type:\"small\",style:b.SCRIPTSCRIPT},{type:\"small\",style:b.SCRIPT},{type:\"small\",style:b.TEXT},{type:\"large\",size:1},{type:\"large\",size:2},{type:\"large\",size:3},{type:\"large\",size:4}],br=[{type:\"small\",style:b.SCRIPTSCRIPT},{type:\"small\",style:b.SCRIPT},{type:\"small\",style:b.TEXT},{type:\"stack\"}],yr=[{type:\"small\",style:b.SCRIPTSCRIPT},{type:\"small\",style:b.SCRIPT},{type:\"small\",style:b.TEXT},{type:\"large\",size:1},{type:\"large\",size:2},{type:\"large\",size:3},{type:\"large\",size:4},{type:\"stack\"}],xr=function(e){if(\"small\"===e.type)return\"Main-Regular\";if(\"large\"===e.type)return\"Size\"+e.size+\"-Regular\";if(\"stack\"===e.type)return\"Size4-Regular\";throw new Error(\"Add support for delim type '\"+e.type+\"' here.\")},wr=function(e,t,r,n){for(var a=Math.min(2,3-n.style.size);a<r.length&&\"stack\"!==r[a].type;a++){var i=tr(e,xr(r[a]),\"math\"),o=i.height+i.depth;if(\"small\"===r[a].type&&(o*=n.havingBaseStyle(r[a].style).sizeMultiplier),o>t)return r[a]}return r[r.length-1]},kr=function(e,t,r,n,a,i){var o;\"<\"===e||\"\\\\lt\"===e||\"\\u27e8\"===e?e=\"\\\\langle\":\">\"!==e&&\"\\\\gt\"!==e&&\"\\u27e9\"!==e||(e=\"\\\\rangle\"),o=l.contains(fr,e)?vr:l.contains(pr,e)?yr:br;var s=wr(e,t,o,n);return\"small\"===s.type?function(e,t,r,n,a,i){var o=je.makeSymbol(e,\"Main-Regular\",a,n),s=rr(o,t,n,i);return r&&nr(s,n,t),s}(e,s.style,r,n,a,i):\"large\"===s.type?ar(e,s.size,r,n,a,i):mr(e,t,r,n,a,i)},Sr=function(e,t){var r,n,a=t.havingBaseSizing(),i=wr(\"\\\\surd\",e*a.sizeMultiplier,yr,a),o=a.sizeMultiplier,s=Math.max(0,t.minRuleThickness-t.fontMetrics().sqrtRuleThickness),l=0,h=0,m=0;return\"small\"===i.type?(e<1?o=1:e<1.4&&(o=.7),h=(1+s)/o,(r=ur(\"sqrtMain\",l=(1+s+cr)/o,m=1e3+1e3*s+80,s,t)).style.minWidth=\"0.853em\",n=.833/o):\"large\"===i.type?(m=1080*gr[i.size],h=(gr[i.size]+s)/o,l=(gr[i.size]+s+cr)/o,(r=ur(\"sqrtSize\"+i.size,l,m,s,t)).style.minWidth=\"1.02em\",n=1/o):(l=e+s+cr,h=e+s,m=Math.floor(1e3*e+s)+80,(r=ur(\"sqrtTall\",l,m,s,t)).style.minWidth=\"0.742em\",n=1.056),r.height=h,r.style.height=l+\"em\",{span:r,advanceWidth:n,ruleWidth:(t.fontMetrics().sqrtRuleThickness+s)*o}},Mr=function(e,t,r,a,i){if(\"<\"===e||\"\\\\lt\"===e||\"\\u27e8\"===e?e=\"\\\\langle\":\">\"!==e&&\"\\\\gt\"!==e&&\"\\u27e9\"!==e||(e=\"\\\\rangle\"),l.contains(pr,e)||l.contains(fr,e))return ar(e,t,!1,r,a,i);if(l.contains(dr,e))return mr(e,gr[t],!1,r,a,i);throw new n(\"Illegal delimiter: '\"+e+\"'\")},zr=gr,Ar=kr,Tr=function(e,t,r,n,a,i){var o=n.fontMetrics().axisHeight*n.sizeMultiplier,s=5/n.fontMetrics().ptPerEm,l=Math.max(t-o,r+o),h=Math.max(l/500*901,2*l-s);return kr(e,h,!0,n,a,i)},Br={\"\\\\bigl\":{mclass:\"mopen\",size:1},\"\\\\Bigl\":{mclass:\"mopen\",size:2},\"\\\\biggl\":{mclass:\"mopen\",size:3},\"\\\\Biggl\":{mclass:\"mopen\",size:4},\"\\\\bigr\":{mclass:\"mclose\",size:1},\"\\\\Bigr\":{mclass:\"mclose\",size:2},\"\\\\biggr\":{mclass:\"mclose\",size:3},\"\\\\Biggr\":{mclass:\"mclose\",size:4},\"\\\\bigm\":{mclass:\"mrel\",size:1},\"\\\\Bigm\":{mclass:\"mrel\",size:2},\"\\\\biggm\":{mclass:\"mrel\",size:3},\"\\\\Biggm\":{mclass:\"mrel\",size:4},\"\\\\big\":{mclass:\"mord\",size:1},\"\\\\Big\":{mclass:\"mord\",size:2},\"\\\\bigg\":{mclass:\"mord\",size:3},\"\\\\Bigg\":{mclass:\"mord\",size:4}},Nr=[\"(\",\"\\\\lparen\",\")\",\"\\\\rparen\",\"[\",\"\\\\lbrack\",\"]\",\"\\\\rbrack\",\"\\\\{\",\"\\\\lbrace\",\"\\\\}\",\"\\\\rbrace\",\"\\\\lfloor\",\"\\\\rfloor\",\"\\u230a\",\"\\u230b\",\"\\\\lceil\",\"\\\\rceil\",\"\\u2308\",\"\\u2309\",\"<\",\">\",\"\\\\langle\",\"\\u27e8\",\"\\\\rangle\",\"\\u27e9\",\"\\\\lt\",\"\\\\gt\",\"\\\\lvert\",\"\\\\rvert\",\"\\\\lVert\",\"\\\\rVert\",\"\\\\lgroup\",\"\\\\rgroup\",\"\\u27ee\",\"\\u27ef\",\"\\\\lmoustache\",\"\\\\rmoustache\",\"\\u23b0\",\"\\u23b1\",\"/\",\"\\\\backslash\",\"|\",\"\\\\vert\",\"\\\\|\",\"\\\\Vert\",\"\\\\uparrow\",\"\\\\Uparrow\",\"\\\\downarrow\",\"\\\\Downarrow\",\"\\\\updownarrow\",\"\\\\Updownarrow\",\".\"];function qr(e,t){var r=Gt(e);if(r&&l.contains(Nr,r.text))return r;throw new n(r?\"Invalid delimiter '\"+r.text+\"' after '\"+t.funcName+\"'\":\"Invalid delimiter type '\"+e.type+\"'\",e)}function Cr(e){if(!e.body)throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\")}nt({type:\"delimsizing\",names:[\"\\\\bigl\",\"\\\\Bigl\",\"\\\\biggl\",\"\\\\Biggl\",\"\\\\bigr\",\"\\\\Bigr\",\"\\\\biggr\",\"\\\\Biggr\",\"\\\\bigm\",\"\\\\Bigm\",\"\\\\biggm\",\"\\\\Biggm\",\"\\\\big\",\"\\\\Big\",\"\\\\bigg\",\"\\\\Bigg\"],props:{numArgs:1,argTypes:[\"primitive\"]},handler:function(e,t){var r=qr(t[0],e);return{type:\"delimsizing\",mode:e.parser.mode,size:Br[e.funcName].size,mclass:Br[e.funcName].mclass,delim:r.text}},htmlBuilder:function(e,t){return\".\"===e.delim?je.makeSpan([e.mclass]):Mr(e.delim,e.size,t,e.mode,[e.mclass])},mathmlBuilder:function(e){var t=[];\".\"!==e.delim&&t.push(zt(e.delim,e.mode));var r=new Mt.MathNode(\"mo\",t);return\"mopen\"===e.mclass||\"mclose\"===e.mclass?r.setAttribute(\"fence\",\"true\"):r.setAttribute(\"fence\",\"false\"),r.setAttribute(\"stretchy\",\"true\"),r.setAttribute(\"minsize\",zr[e.size]+\"em\"),r.setAttribute(\"maxsize\",zr[e.size]+\"em\"),r}}),nt({type:\"leftright-right\",names:[\"\\\\right\"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser.gullet.macros.get(\"\\\\current@color\");if(r&&\"string\"!=typeof r)throw new n(\"\\\\current@color set to non-string in \\\\right\");return{type:\"leftright-right\",mode:e.parser.mode,delim:qr(t[0],e).text,color:r}}}),nt({type:\"leftright\",names:[\"\\\\left\"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=qr(t[0],e),n=e.parser;++n.leftrightDepth;var a=n.parseExpression(!1);--n.leftrightDepth,n.expect(\"\\\\right\",!1);var i=Ft(n.parseFunction(),\"leftright-right\");return{type:\"leftright\",mode:n.mode,body:a,left:r.text,right:i.delim,rightColor:i.color}},htmlBuilder:function(e,t){Cr(e);for(var r,n,a=ut(e.body,t,!0,[\"mopen\",\"mclose\"]),i=0,o=0,s=!1,l=0;l<a.length;l++)a[l].isMiddle?s=!0:(i=Math.max(a[l].height,i),o=Math.max(a[l].depth,o));if(i*=t.sizeMultiplier,o*=t.sizeMultiplier,r=\".\"===e.left?vt(t,[\"mopen\"]):Tr(e.left,i,o,t,e.mode,[\"mopen\"]),a.unshift(r),s)for(var h=1;h<a.length;h++){var m=a[h].isMiddle;m&&(a[h]=Tr(m.delim,i,o,m.options,e.mode,[]))}if(\".\"===e.right)n=vt(t,[\"mclose\"]);else{var c=e.rightColor?t.withColor(e.rightColor):t;n=Tr(e.right,i,o,c,e.mode,[\"mclose\"])}return a.push(n),je.makeSpan([\"minner\"],a,t)},mathmlBuilder:function(e,t){Cr(e);var r=Bt(e.body,t);if(\".\"!==e.left){var n=new Mt.MathNode(\"mo\",[zt(e.left,e.mode)]);n.setAttribute(\"fence\",\"true\"),r.unshift(n)}if(\".\"!==e.right){var a=new Mt.MathNode(\"mo\",[zt(e.right,e.mode)]);a.setAttribute(\"fence\",\"true\"),e.rightColor&&a.setAttribute(\"mathcolor\",e.rightColor),r.push(a)}return At(r)}}),nt({type:\"middle\",names:[\"\\\\middle\"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=qr(t[0],e);if(!e.parser.leftrightDepth)throw new n(\"\\\\middle without preceding \\\\left\",r);return{type:\"middle\",mode:e.parser.mode,delim:r.text}},htmlBuilder:function(e,t){var r;if(\".\"===e.delim)r=vt(t,[]);else{r=Mr(e.delim,1,t,e.mode,[]);var n={delim:e.delim,options:t};r.isMiddle=n}return r},mathmlBuilder:function(e,t){var r=\"\\\\vert\"===e.delim||\"|\"===e.delim?zt(\"|\",\"text\"):zt(e.delim,e.mode),n=new Mt.MathNode(\"mo\",[r]);return n.setAttribute(\"fence\",\"true\"),n.setAttribute(\"lspace\",\"0.05em\"),n.setAttribute(\"rspace\",\"0.05em\"),n}});var Ir=function(e,t){var r,n,a,i=je.wrapFragment(bt(e.body,t),t),o=e.label.substr(1),s=t.sizeMultiplier,h=0,m=l.isCharacterBox(e.body);if(\"sout\"===o)(r=je.makeSpan([\"stretchy\",\"sout\"])).height=t.fontMetrics().defaultRuleThickness/s,h=-.5*t.fontMetrics().xHeight;else if(\"phase\"===o){var c=Le({number:.6,unit:\"pt\"},t),u=Le({number:.35,unit:\"ex\"},t);s/=t.havingBaseSizing().sizeMultiplier;var p=i.height+i.depth+c+u;i.style.paddingLeft=p/2+c+\"em\";var d=Math.floor(1e3*p*s),f=\"M400000 \"+(n=d)+\" H0 L\"+n/2+\" 0 l65 45 L145 \"+(n-80)+\" H400000z\",g=new O([new E(\"phase\",f)],{width:\"400em\",height:d/1e3+\"em\",viewBox:\"0 0 400000 \"+d,preserveAspectRatio:\"xMinYMin slice\"});(r=je.makeSvgSpan([\"hide-tail\"],[g],t)).style.height=p+\"em\",h=i.depth+c+u}else{/cancel/.test(o)?m||i.classes.push(\"cancel-pad\"):\"angl\"===o?i.classes.push(\"anglpad\"):i.classes.push(\"boxpad\");var v=0,b=0,y=0;/box/.test(o)?(y=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness),b=v=t.fontMetrics().fboxsep+(\"colorbox\"===o?0:y)):\"angl\"===o?(v=4*(y=Math.max(t.fontMetrics().defaultRuleThickness,t.minRuleThickness)),b=Math.max(0,.25-i.depth)):b=v=m?.2:0,r=Lt(i,o,v,b,t),/fbox|boxed|fcolorbox/.test(o)?(r.style.borderStyle=\"solid\",r.style.borderWidth=y+\"em\"):\"angl\"===o&&.049!==y&&(r.style.borderTopWidth=y+\"em\",r.style.borderRightWidth=y+\"em\"),h=i.depth+b,e.backgroundColor&&(r.style.backgroundColor=e.backgroundColor,e.borderColor&&(r.style.borderColor=e.borderColor))}if(e.backgroundColor)a=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:r,shift:h},{type:\"elem\",elem:i,shift:0}]},t);else{var x=/cancel|phase/.test(o)?[\"svg-align\"]:[];a=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:i,shift:0},{type:\"elem\",elem:r,shift:h,wrapperClasses:x}]},t)}return/cancel/.test(o)&&(a.height=i.height,a.depth=i.depth),/cancel/.test(o)&&!m?je.makeSpan([\"mord\",\"cancel-lap\"],[a],t):je.makeSpan([\"mord\"],[a],t)},Rr=function(e,t){var r=0,n=new Mt.MathNode(e.label.indexOf(\"colorbox\")>-1?\"mpadded\":\"menclose\",[qt(e.body,t)]);switch(e.label){case\"\\\\cancel\":n.setAttribute(\"notation\",\"updiagonalstrike\");break;case\"\\\\bcancel\":n.setAttribute(\"notation\",\"downdiagonalstrike\");break;case\"\\\\phase\":n.setAttribute(\"notation\",\"phasorangle\");break;case\"\\\\sout\":n.setAttribute(\"notation\",\"horizontalstrike\");break;case\"\\\\fbox\":n.setAttribute(\"notation\",\"box\");break;case\"\\\\angl\":n.setAttribute(\"notation\",\"actuarial\");break;case\"\\\\fcolorbox\":case\"\\\\colorbox\":if(r=t.fontMetrics().fboxsep*t.fontMetrics().ptPerEm,n.setAttribute(\"width\",\"+\"+2*r+\"pt\"),n.setAttribute(\"height\",\"+\"+2*r+\"pt\"),n.setAttribute(\"lspace\",r+\"pt\"),n.setAttribute(\"voffset\",r+\"pt\"),\"\\\\fcolorbox\"===e.label){var a=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness);n.setAttribute(\"style\",\"border: \"+a+\"em solid \"+String(e.borderColor))}break;case\"\\\\xcancel\":n.setAttribute(\"notation\",\"updiagonalstrike downdiagonalstrike\")}return e.backgroundColor&&n.setAttribute(\"mathbackground\",e.backgroundColor),n};nt({type:\"enclose\",names:[\"\\\\colorbox\"],props:{numArgs:2,allowedInText:!0,argTypes:[\"color\",\"text\"]},handler:function(e,t,r){var n=e.parser,a=e.funcName,i=Ft(t[0],\"color-token\").color,o=t[1];return{type:\"enclose\",mode:n.mode,label:a,backgroundColor:i,body:o}},htmlBuilder:Ir,mathmlBuilder:Rr}),nt({type:\"enclose\",names:[\"\\\\fcolorbox\"],props:{numArgs:3,allowedInText:!0,argTypes:[\"color\",\"color\",\"text\"]},handler:function(e,t,r){var n=e.parser,a=e.funcName,i=Ft(t[0],\"color-token\").color,o=Ft(t[1],\"color-token\").color,s=t[2];return{type:\"enclose\",mode:n.mode,label:a,backgroundColor:o,borderColor:i,body:s}},htmlBuilder:Ir,mathmlBuilder:Rr}),nt({type:\"enclose\",names:[\"\\\\fbox\"],props:{numArgs:1,argTypes:[\"hbox\"],allowedInText:!0},handler:function(e,t){return{type:\"enclose\",mode:e.parser.mode,label:\"\\\\fbox\",body:t[0]}}}),nt({type:\"enclose\",names:[\"\\\\cancel\",\"\\\\bcancel\",\"\\\\xcancel\",\"\\\\sout\",\"\\\\phase\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:\"enclose\",mode:r.mode,label:n,body:a}},htmlBuilder:Ir,mathmlBuilder:Rr}),nt({type:\"enclose\",names:[\"\\\\angl\"],props:{numArgs:1,argTypes:[\"hbox\"],allowedInText:!1},handler:function(e,t){return{type:\"enclose\",mode:e.parser.mode,label:\"\\\\angl\",body:t[0]}}});var Or={};function Er(e){for(var t=e.type,r=e.names,n=e.props,a=e.handler,i=e.htmlBuilder,o=e.mathmlBuilder,s={type:t,numArgs:n.numArgs||0,allowedInText:!1,numOptionalArgs:0,handler:a},l=0;l<r.length;++l)Or[r[l]]=s;i&&(tt[t]=i),o&&(rt[t]=o)}function Hr(e){var t=[];e.consumeSpaces();for(var r=e.fetch().text;\"\\\\hline\"===r||\"\\\\hdashline\"===r;)e.consume(),t.push(\"\\\\hdashline\"===r),e.consumeSpaces(),r=e.fetch().text;return t}var Lr=function(e){if(!e.parser.settings.displayMode)throw new n(\"{\"+e.envName+\"} can be used only in display mode.\")};function Dr(e,t,r){var a=t.hskipBeforeAndAfter,i=t.addJot,o=t.cols,s=t.arraystretch,l=t.colSeparationType,h=t.addEqnNum,m=t.singleRow,c=t.emptySingleRow,u=t.maxNumCols,p=t.leqno;if(e.gullet.beginGroup(),m||e.gullet.macros.set(\"\\\\cr\",\"\\\\\\\\\\\\relax\"),!s){var d=e.gullet.expandMacroAsText(\"\\\\arraystretch\");if(null==d)s=1;else if(!(s=parseFloat(d))||s<0)throw new n(\"Invalid \\\\arraystretch: \"+d)}e.gullet.beginGroup();var f=[],g=[f],v=[],b=[];for(b.push(Hr(e));;){var y=e.parseExpression(!1,m?\"\\\\end\":\"\\\\\\\\\");e.gullet.endGroup(),e.gullet.beginGroup(),y={type:\"ordgroup\",mode:e.mode,body:y},r&&(y={type:\"styling\",mode:e.mode,style:r,body:[y]}),f.push(y);var x=e.fetch().text;if(\"&\"===x){if(u&&f.length===u){if(m||l)throw new n(\"Too many tab characters: &\",e.nextToken);e.settings.reportNonstrict(\"textEnv\",\"Too few columns specified in the {array} column argument.\")}e.consume()}else{if(\"\\\\end\"===x){1===f.length&&\"styling\"===y.type&&0===y.body[0].body.length&&(g.length>1||!c)&&g.pop(),b.length<g.length+1&&b.push([]);break}if(\"\\\\\\\\\"!==x)throw new n(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\",e.nextToken);e.consume();var w=void 0;\" \"!==e.gullet.future().text&&(w=e.parseSizeGroup(!0)),v.push(w?w.value:null),b.push(Hr(e)),f=[],g.push(f)}}return e.gullet.endGroup(),e.gullet.endGroup(),{type:\"array\",mode:e.mode,addJot:i,arraystretch:s,body:g,cols:o,rowGaps:v,hskipBeforeAndAfter:a,hLinesBeforeRow:b,colSeparationType:l,addEqnNum:h,leqno:p}}function Pr(e){return\"d\"===e.substr(0,1)?\"display\":\"text\"}var Fr=function(e,t){var r,a,i=e.body.length,o=e.hLinesBeforeRow,s=0,h=new Array(i),m=[],c=Math.max(t.fontMetrics().arrayRuleWidth,t.minRuleThickness),u=1/t.fontMetrics().ptPerEm,p=5*u;e.colSeparationType&&\"small\"===e.colSeparationType&&(p=t.havingStyle(b.SCRIPT).sizeMultiplier/t.sizeMultiplier*.2778);var d=\"CD\"===e.colSeparationType?Le({number:3,unit:\"ex\"},t):12*u,f=3*u,g=e.arraystretch*d,v=.7*g,y=.3*g,x=0;function w(e){for(var t=0;t<e.length;++t)t>0&&(x+=.25),m.push({pos:x,isDashed:e[t]})}for(w(o[0]),r=0;r<e.body.length;++r){var k=e.body[r],S=v,M=y;s<k.length&&(s=k.length);var z=new Array(k.length);for(a=0;a<k.length;++a){var A=bt(k[a],t);M<A.depth&&(M=A.depth),S<A.height&&(S=A.height),z[a]=A}var T=e.rowGaps[r],B=0;T&&(B=Le(T,t))>0&&(M<(B+=y)&&(M=B),B=0),e.addJot&&(M+=f),z.height=S,z.depth=M,x+=S,z.pos=x,x+=M+B,h[r]=z,w(o[r+1])}var N,q,C=x/2+t.fontMetrics().axisHeight,I=e.cols||[],R=[],O=[];if(e.addEqnNum)for(r=0;r<i;++r){var E=h[r],H=E.pos-C,L=je.makeSpan([\"eqn-num\"],[],t);L.depth=E.depth,L.height=E.height,O.push({type:\"elem\",elem:L,shift:H})}for(a=0,q=0;a<s||q<I.length;++a,++q){for(var D=I[q]||{},P=!0;\"separator\"===D.type;){if(P||((N=je.makeSpan([\"arraycolsep\"],[])).style.width=t.fontMetrics().doubleRuleSep+\"em\",R.push(N)),\"|\"!==D.separator&&\":\"!==D.separator)throw new n(\"Invalid separator type: \"+D.separator);var F=\"|\"===D.separator?\"solid\":\"dashed\",V=je.makeSpan([\"vertical-separator\"],[],t);V.style.height=x+\"em\",V.style.borderRightWidth=c+\"em\",V.style.borderRightStyle=F,V.style.margin=\"0 -\"+c/2+\"em\",V.style.verticalAlign=-(x-C)+\"em\",R.push(V),D=I[++q]||{},P=!1}if(!(a>=s)){var G=void 0;(a>0||e.hskipBeforeAndAfter)&&0!==(G=l.deflt(D.pregap,p))&&((N=je.makeSpan([\"arraycolsep\"],[])).style.width=G+\"em\",R.push(N));var U=[];for(r=0;r<i;++r){var Y=h[r],W=Y[a];if(W){var X=Y.pos-C;W.depth=Y.depth,W.height=Y.height,U.push({type:\"elem\",elem:W,shift:X})}}U=je.makeVList({positionType:\"individualShift\",children:U},t),U=je.makeSpan([\"col-align-\"+(D.align||\"c\")],[U]),R.push(U),(a<s-1||e.hskipBeforeAndAfter)&&0!==(G=l.deflt(D.postgap,p))&&((N=je.makeSpan([\"arraycolsep\"],[])).style.width=G+\"em\",R.push(N))}}if(h=je.makeSpan([\"mtable\"],R),m.length>0){for(var _=je.makeLineSpan(\"hline\",t,c),j=je.makeLineSpan(\"hdashline\",t,c),$=[{type:\"elem\",elem:h,shift:0}];m.length>0;){var Z=m.pop(),K=Z.pos-C;Z.isDashed?$.push({type:\"elem\",elem:j,shift:K}):$.push({type:\"elem\",elem:_,shift:K})}h=je.makeVList({positionType:\"individualShift\",children:$},t)}if(e.addEqnNum){var J=je.makeVList({positionType:\"individualShift\",children:O},t);return J=je.makeSpan([\"tag\"],[J],t),je.makeFragment([h,J])}return je.makeSpan([\"mord\"],[h],t)},Vr={c:\"center \",l:\"left \",r:\"right \"},Gr=function(e,t){for(var r=[],n=new Mt.MathNode(\"mtd\",[],[\"mtr-glue\"]),a=new Mt.MathNode(\"mtd\",[],[\"mml-eqn-num\"]),i=0;i<e.body.length;i++){for(var o=e.body[i],s=[],l=0;l<o.length;l++)s.push(new Mt.MathNode(\"mtd\",[qt(o[l],t)]));e.addEqnNum&&(s.unshift(n),s.push(n),e.leqno?s.unshift(a):s.push(a)),r.push(new Mt.MathNode(\"mtr\",s))}var h=new Mt.MathNode(\"mtable\",r),m=.5===e.arraystretch?.1:.16+e.arraystretch-1+(e.addJot?.09:0);h.setAttribute(\"rowspacing\",m.toFixed(4)+\"em\");var c=\"\",u=\"\";if(e.cols&&e.cols.length>0){var p=e.cols,d=\"\",f=!1,g=0,v=p.length;\"separator\"===p[0].type&&(c+=\"top \",g=1),\"separator\"===p[p.length-1].type&&(c+=\"bottom \",v-=1);for(var b=g;b<v;b++)\"align\"===p[b].type?(u+=Vr[p[b].align],f&&(d+=\"none \"),f=!0):\"separator\"===p[b].type&&f&&(d+=\"|\"===p[b].separator?\"solid \":\"dashed \",f=!1);h.setAttribute(\"columnalign\",u.trim()),/[sd]/.test(d)&&h.setAttribute(\"columnlines\",d.trim())}if(\"align\"===e.colSeparationType){for(var y=e.cols||[],x=\"\",w=1;w<y.length;w++)x+=w%2?\"0em \":\"1em \";h.setAttribute(\"columnspacing\",x.trim())}else\"alignat\"===e.colSeparationType||\"gather\"===e.colSeparationType?h.setAttribute(\"columnspacing\",\"0em\"):\"small\"===e.colSeparationType?h.setAttribute(\"columnspacing\",\"0.2778em\"):\"CD\"===e.colSeparationType?h.setAttribute(\"columnspacing\",\"0.5em\"):h.setAttribute(\"columnspacing\",\"1em\");var k=\"\",S=e.hLinesBeforeRow;c+=S[0].length>0?\"left \":\"\",c+=S[S.length-1].length>0?\"right \":\"\";for(var M=1;M<S.length-1;M++)k+=0===S[M].length?\"none \":S[M][0]?\"dashed \":\"solid \";return/[sd]/.test(k)&&h.setAttribute(\"rowlines\",k.trim()),\"\"!==c&&(h=new Mt.MathNode(\"menclose\",[h])).setAttribute(\"notation\",c.trim()),e.arraystretch&&e.arraystretch<1&&(h=new Mt.MathNode(\"mstyle\",[h])).setAttribute(\"scriptlevel\",\"1\"),h},Ur=function(e,t){-1===e.envName.indexOf(\"ed\")&&Lr(e);var r,a=[],i=e.envName.indexOf(\"at\")>-1?\"alignat\":\"align\",o=Dr(e.parser,{cols:a,addJot:!0,addEqnNum:\"align\"===e.envName||\"alignat\"===e.envName,emptySingleRow:!0,colSeparationType:i,maxNumCols:\"split\"===e.envName?2:void 0,leqno:e.parser.settings.leqno},\"display\"),s=0,l={type:\"ordgroup\",mode:e.mode,body:[]};if(t[0]&&\"ordgroup\"===t[0].type){for(var h=\"\",m=0;m<t[0].body.length;m++){h+=Ft(t[0].body[m],\"textord\").text}r=Number(h),s=2*r}var c=!s;o.body.forEach((function(e){for(var t=1;t<e.length;t+=2){var a=Ft(e[t],\"styling\");Ft(a.body[0],\"ordgroup\").body.unshift(l)}if(c)s<e.length&&(s=e.length);else{var i=e.length/2;if(r<i)throw new n(\"Too many math in a row: expected \"+r+\", but got \"+i,e[0])}}));for(var u=0;u<s;++u){var p=\"r\",d=0;u%2==1?p=\"l\":u>0&&c&&(d=1),a[u]={type:\"align\",align:p,pregap:d,postgap:0}}return o.colSeparationType=c?\"align\":\"alignat\",o};Er({type:\"array\",names:[\"array\",\"darray\"],props:{numArgs:1},handler:function(e,t){var r=(Gt(t[0])?[t[0]]:Ft(t[0],\"ordgroup\").body).map((function(e){var t=Vt(e).text;if(-1!==\"lcr\".indexOf(t))return{type:\"align\",align:t};if(\"|\"===t)return{type:\"separator\",separator:\"|\"};if(\":\"===t)return{type:\"separator\",separator:\":\"};throw new n(\"Unknown column alignment: \"+t,e)})),a={cols:r,hskipBeforeAndAfter:!0,maxNumCols:r.length};return Dr(e.parser,a,Pr(e.envName))},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"matrix\",\"pmatrix\",\"bmatrix\",\"Bmatrix\",\"vmatrix\",\"Vmatrix\",\"matrix*\",\"pmatrix*\",\"bmatrix*\",\"Bmatrix*\",\"vmatrix*\",\"Vmatrix*\"],props:{numArgs:0},handler:function(e){var t={matrix:null,pmatrix:[\"(\",\")\"],bmatrix:[\"[\",\"]\"],Bmatrix:[\"\\\\{\",\"\\\\}\"],vmatrix:[\"|\",\"|\"],Vmatrix:[\"\\\\Vert\",\"\\\\Vert\"]}[e.envName.replace(\"*\",\"\")],r=\"c\",a={hskipBeforeAndAfter:!1,cols:[{type:\"align\",align:r}]};if(\"*\"===e.envName.charAt(e.envName.length-1)){var i=e.parser;if(i.consumeSpaces(),\"[\"===i.fetch().text){if(i.consume(),i.consumeSpaces(),r=i.fetch().text,-1===\"lcr\".indexOf(r))throw new n(\"Expected l or c or r\",i.nextToken);i.consume(),i.consumeSpaces(),i.expect(\"]\"),i.consume(),a.cols=[{type:\"align\",align:r}]}}var o=Dr(e.parser,a,Pr(e.envName)),s=Math.max.apply(Math,[0].concat(o.body.map((function(e){return e.length}))));return o.cols=new Array(s).fill({type:\"align\",align:r}),t?{type:\"leftright\",mode:e.mode,body:[o],left:t[0],right:t[1],rightColor:void 0}:o},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"smallmatrix\"],props:{numArgs:0},handler:function(e){var t=Dr(e.parser,{arraystretch:.5},\"script\");return t.colSeparationType=\"small\",t},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"subarray\"],props:{numArgs:1},handler:function(e,t){var r=(Gt(t[0])?[t[0]]:Ft(t[0],\"ordgroup\").body).map((function(e){var t=Vt(e).text;if(-1!==\"lc\".indexOf(t))return{type:\"align\",align:t};throw new n(\"Unknown column alignment: \"+t,e)}));if(r.length>1)throw new n(\"{subarray} can contain only one column\");var a={cols:r,hskipBeforeAndAfter:!1,arraystretch:.5};if((a=Dr(e.parser,a,\"script\")).body.length>0&&a.body[0].length>1)throw new n(\"{subarray} can contain only one column\");return a},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"cases\",\"dcases\",\"rcases\",\"drcases\"],props:{numArgs:0},handler:function(e){var t=Dr(e.parser,{arraystretch:1.2,cols:[{type:\"align\",align:\"l\",pregap:0,postgap:1},{type:\"align\",align:\"l\",pregap:0,postgap:0}]},Pr(e.envName));return{type:\"leftright\",mode:e.mode,body:[t],left:e.envName.indexOf(\"r\")>-1?\".\":\"\\\\{\",right:e.envName.indexOf(\"r\")>-1?\"\\\\}\":\".\",rightColor:void 0}},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"align\",\"align*\",\"aligned\",\"split\"],props:{numArgs:0},handler:Ur,htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"gathered\",\"gather\",\"gather*\"],props:{numArgs:0},handler:function(e){l.contains([\"gather\",\"gather*\"],e.envName)&&Lr(e);var t={cols:[{type:\"align\",align:\"c\"}],addJot:!0,colSeparationType:\"gather\",addEqnNum:\"gather\"===e.envName,emptySingleRow:!0,leqno:e.parser.settings.leqno};return Dr(e.parser,t,\"display\")},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"alignat\",\"alignat*\",\"alignedat\"],props:{numArgs:1},handler:Ur,htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"equation\",\"equation*\"],props:{numArgs:0},handler:function(e){Lr(e);var t={addEqnNum:\"equation\"===e.envName,emptySingleRow:!0,singleRow:!0,maxNumCols:1,leqno:e.parser.settings.leqno};return Dr(e.parser,t,\"display\")},htmlBuilder:Fr,mathmlBuilder:Gr}),Er({type:\"array\",names:[\"CD\"],props:{numArgs:0},handler:function(e){return Lr(e),function(e){var t=[];for(e.gullet.beginGroup(),e.gullet.macros.set(\"\\\\cr\",\"\\\\\\\\\\\\relax\"),e.gullet.beginGroup();;){t.push(e.parseExpression(!1,\"\\\\\\\\\")),e.gullet.endGroup(),e.gullet.beginGroup();var r=e.fetch().text;if(\"&\"!==r&&\"\\\\\\\\\"!==r){if(\"\\\\end\"===r){0===t[t.length-1].length&&t.pop();break}throw new n(\"Expected \\\\\\\\ or \\\\cr or \\\\end\",e.nextToken)}e.consume()}for(var a,i,o=[],s=[o],l=0;l<t.length;l++){for(var h=t[l],m={type:\"styling\",body:[],mode:\"math\",style:\"display\"},c=0;c<h.length;c++)if(jt(h[c])){o.push(m);var u=Vt(h[c+=1]).text,p=new Array(2);if(p[0]={type:\"ordgroup\",mode:\"math\",body:[]},p[1]={type:\"ordgroup\",mode:\"math\",body:[]},\"=|.\".indexOf(u)>-1);else{if(!(\"<>AV\".indexOf(u)>-1))throw new n('Expected one of \"<>AV=|.\" after @',h[c]);for(var d=0;d<2;d++){for(var f=!0,g=c+1;g<h.length;g++){if(i=u,(\"mathord\"===(a=h[g]).type||\"atom\"===a.type)&&a.text===i){f=!1,c=g;break}if(jt(h[g]))throw new n(\"Missing a \"+u+\" character to complete a CD arrow.\",h[g]);p[d].body.push(h[g])}if(f)throw new n(\"Missing a \"+u+\" character to complete a CD arrow.\",h[c])}}var v={type:\"styling\",body:[$t(u,p,e)],mode:\"math\",style:\"display\"};o.push(v),m={type:\"styling\",body:[],mode:\"math\",style:\"display\"}}else m.body.push(h[c]);l%2==0?o.push(m):o.shift(),o=[],s.push(o)}return e.gullet.endGroup(),e.gullet.endGroup(),{type:\"array\",mode:\"math\",body:s,arraystretch:1,addJot:!0,rowGaps:[null],cols:new Array(s[0].length).fill({type:\"align\",align:\"c\",pregap:.25,postgap:.25}),colSeparationType:\"CD\",hLinesBeforeRow:new Array(s.length+1).fill([])}}(e.parser)},htmlBuilder:Fr,mathmlBuilder:Gr}),nt({type:\"text\",names:[\"\\\\hline\",\"\\\\hdashline\"],props:{numArgs:0,allowedInText:!0,allowedInMath:!0},handler:function(e,t){throw new n(e.funcName+\" valid only within array environment\")}});var Yr=Or;nt({type:\"environment\",names:[\"\\\\begin\",\"\\\\end\"],props:{numArgs:1,argTypes:[\"text\"]},handler:function(e,t){var r=e.parser,a=e.funcName,i=t[0];if(\"ordgroup\"!==i.type)throw new n(\"Invalid environment name\",i);for(var o=\"\",s=0;s<i.body.length;++s)o+=Ft(i.body[s],\"textord\").text;if(\"\\\\begin\"===a){if(!Yr.hasOwnProperty(o))throw new n(\"No such environment: \"+o,i);var l=Yr[o],h=r.parseArguments(\"\\\\begin{\"+o+\"}\",l),m=h.args,c=h.optArgs,u={mode:r.mode,envName:o,parser:r},p=l.handler(u,m,c);r.expect(\"\\\\end\",!1);var d=r.nextToken,f=Ft(r.parseFunction(),\"environment\");if(f.name!==o)throw new n(\"Mismatch: \\\\begin{\"+o+\"} matched by \\\\end{\"+f.name+\"}\",d);return p}return{type:\"environment\",mode:r.mode,name:o,nameGroup:i}}});var Wr=je.makeSpan;function Xr(e,t){var r=ut(e.body,t,!0);return Wr([e.mclass],r,t)}function _r(e,t){var r,n=Bt(e.body,t);return\"minner\"===e.mclass?Mt.newDocumentFragment(n):(\"mord\"===e.mclass?e.isCharacterBox?(r=n[0]).type=\"mi\":r=new Mt.MathNode(\"mi\",n):(e.isCharacterBox?(r=n[0]).type=\"mo\":r=new Mt.MathNode(\"mo\",n),\"mbin\"===e.mclass?(r.attributes.lspace=\"0.22em\",r.attributes.rspace=\"0.22em\"):\"mpunct\"===e.mclass?(r.attributes.lspace=\"0em\",r.attributes.rspace=\"0.17em\"):\"mopen\"!==e.mclass&&\"mclose\"!==e.mclass||(r.attributes.lspace=\"0em\",r.attributes.rspace=\"0em\")),r)}nt({type:\"mclass\",names:[\"\\\\mathord\",\"\\\\mathbin\",\"\\\\mathrel\",\"\\\\mathopen\",\"\\\\mathclose\",\"\\\\mathpunct\",\"\\\\mathinner\"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:\"mclass\",mode:r.mode,mclass:\"m\"+n.substr(5),body:ot(a),isCharacterBox:l.isCharacterBox(a)}},htmlBuilder:Xr,mathmlBuilder:_r});var jr=function(e){var t=\"ordgroup\"===e.type&&e.body.length?e.body[0]:e;return\"atom\"!==t.type||\"bin\"!==t.family&&\"rel\"!==t.family?\"mord\":\"m\"+t.family};nt({type:\"mclass\",names:[\"\\\\@binrel\"],props:{numArgs:2},handler:function(e,t){return{type:\"mclass\",mode:e.parser.mode,mclass:jr(t[0]),body:ot(t[1]),isCharacterBox:l.isCharacterBox(t[1])}}}),nt({type:\"mclass\",names:[\"\\\\stackrel\",\"\\\\overset\",\"\\\\underset\"],props:{numArgs:2},handler:function(e,t){var r,n=e.parser,a=e.funcName,i=t[1],o=t[0];r=\"\\\\stackrel\"!==a?jr(i):\"mrel\";var s={type:\"op\",mode:i.mode,limits:!0,alwaysHandleSupSub:!0,parentIsSupSub:!1,symbol:!1,suppressBaseShift:\"\\\\stackrel\"!==a,body:ot(i)},h={type:\"supsub\",mode:o.mode,base:s,sup:\"\\\\underset\"===a?null:o,sub:\"\\\\underset\"===a?o:null};return{type:\"mclass\",mode:n.mode,mclass:r,body:[h],isCharacterBox:l.isCharacterBox(h)}},htmlBuilder:Xr,mathmlBuilder:_r});var $r=function(e,t){var r=e.font,n=t.withFont(r);return bt(e.body,n)},Zr=function(e,t){var r=e.font,n=t.withFont(r);return qt(e.body,n)},Kr={\"\\\\Bbb\":\"\\\\mathbb\",\"\\\\bold\":\"\\\\mathbf\",\"\\\\frak\":\"\\\\mathfrak\",\"\\\\bm\":\"\\\\boldsymbol\"};nt({type:\"font\",names:[\"\\\\mathrm\",\"\\\\mathit\",\"\\\\mathbf\",\"\\\\mathnormal\",\"\\\\mathbb\",\"\\\\mathcal\",\"\\\\mathfrak\",\"\\\\mathscr\",\"\\\\mathsf\",\"\\\\mathtt\",\"\\\\Bbb\",\"\\\\bold\",\"\\\\frak\"],props:{numArgs:1,allowedInArgument:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=it(t[0]),i=n;return i in Kr&&(i=Kr[i]),{type:\"font\",mode:r.mode,font:i.slice(1),body:a}},htmlBuilder:$r,mathmlBuilder:Zr}),nt({type:\"mclass\",names:[\"\\\\boldsymbol\",\"\\\\bm\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=t[0],a=l.isCharacterBox(n);return{type:\"mclass\",mode:r.mode,mclass:jr(n),body:[{type:\"font\",mode:r.mode,font:\"boldsymbol\",body:n}],isCharacterBox:a}}}),nt({type:\"font\",names:[\"\\\\rm\",\"\\\\sf\",\"\\\\tt\",\"\\\\bf\",\"\\\\it\",\"\\\\cal\"],props:{numArgs:0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=e.breakOnTokenText,i=r.mode,o=r.parseExpression(!0,a);return{type:\"font\",mode:i,font:\"math\"+n.slice(1),body:{type:\"ordgroup\",mode:r.mode,body:o}}},htmlBuilder:$r,mathmlBuilder:Zr});var Jr=function(e,t){var r=t;return\"display\"===e?r=r.id>=b.SCRIPT.id?r.text():b.DISPLAY:\"text\"===e&&r.size===b.DISPLAY.size?r=b.TEXT:\"script\"===e?r=b.SCRIPT:\"scriptscript\"===e&&(r=b.SCRIPTSCRIPT),r},Qr=function(e,t){var r,n=Jr(e.size,t.style),a=n.fracNum(),i=n.fracDen();r=t.havingStyle(a);var o=bt(e.numer,r,t);if(e.continued){var s=8.5/t.fontMetrics().ptPerEm,l=3.5/t.fontMetrics().ptPerEm;o.height=o.height<s?s:o.height,o.depth=o.depth<l?l:o.depth}r=t.havingStyle(i);var h,m,c,u,p,d,f,g,v,y,x=bt(e.denom,r,t);if(e.hasBarLine?(e.barSize?(m=Le(e.barSize,t),h=je.makeLineSpan(\"frac-line\",t,m)):h=je.makeLineSpan(\"frac-line\",t),m=h.height,c=h.height):(h=null,m=0,c=t.fontMetrics().defaultRuleThickness),n.size===b.DISPLAY.size||\"display\"===e.size?(u=t.fontMetrics().num1,p=m>0?3*c:7*c,d=t.fontMetrics().denom1):(m>0?(u=t.fontMetrics().num2,p=c):(u=t.fontMetrics().num3,p=3*c),d=t.fontMetrics().denom2),h){var w=t.fontMetrics().axisHeight;u-o.depth-(w+.5*m)<p&&(u+=p-(u-o.depth-(w+.5*m))),w-.5*m-(x.height-d)<p&&(d+=p-(w-.5*m-(x.height-d)));var k=-(w-.5*m);f=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:x,shift:d},{type:\"elem\",elem:h,shift:k},{type:\"elem\",elem:o,shift:-u}]},t)}else{var S=u-o.depth-(x.height-d);S<p&&(u+=.5*(p-S),d+=.5*(p-S)),f=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:x,shift:d},{type:\"elem\",elem:o,shift:-u}]},t)}return r=t.havingStyle(n),f.height*=r.sizeMultiplier/t.sizeMultiplier,f.depth*=r.sizeMultiplier/t.sizeMultiplier,g=n.size===b.DISPLAY.size?t.fontMetrics().delim1:n.size===b.SCRIPTSCRIPT.size?t.havingStyle(b.SCRIPT).fontMetrics().delim2:t.fontMetrics().delim2,v=null==e.leftDelim?vt(t,[\"mopen\"]):Ar(e.leftDelim,g,!0,t.havingStyle(n),e.mode,[\"mopen\"]),y=e.continued?je.makeSpan([]):null==e.rightDelim?vt(t,[\"mclose\"]):Ar(e.rightDelim,g,!0,t.havingStyle(n),e.mode,[\"mclose\"]),je.makeSpan([\"mord\"].concat(r.sizingClasses(t)),[v,je.makeSpan([\"mfrac\"],[f]),y],t)},en=function(e,t){var r=new Mt.MathNode(\"mfrac\",[qt(e.numer,t),qt(e.denom,t)]);if(e.hasBarLine){if(e.barSize){var n=Le(e.barSize,t);r.setAttribute(\"linethickness\",n+\"em\")}}else r.setAttribute(\"linethickness\",\"0px\");var a=Jr(e.size,t.style);if(a.size!==t.style.size){r=new Mt.MathNode(\"mstyle\",[r]);var i=a.size===b.DISPLAY.size?\"true\":\"false\";r.setAttribute(\"displaystyle\",i),r.setAttribute(\"scriptlevel\",\"0\")}if(null!=e.leftDelim||null!=e.rightDelim){var o=[];if(null!=e.leftDelim){var s=new Mt.MathNode(\"mo\",[new Mt.TextNode(e.leftDelim.replace(\"\\\\\",\"\"))]);s.setAttribute(\"fence\",\"true\"),o.push(s)}if(o.push(r),null!=e.rightDelim){var l=new Mt.MathNode(\"mo\",[new Mt.TextNode(e.rightDelim.replace(\"\\\\\",\"\"))]);l.setAttribute(\"fence\",\"true\"),o.push(l)}return At(o)}return r};nt({type:\"genfrac\",names:[\"\\\\dfrac\",\"\\\\frac\",\"\\\\tfrac\",\"\\\\dbinom\",\"\\\\binom\",\"\\\\tbinom\",\"\\\\\\\\atopfrac\",\"\\\\\\\\bracefrac\",\"\\\\\\\\brackfrac\"],props:{numArgs:2,allowedInArgument:!0},handler:function(e,t){var r,n=e.parser,a=e.funcName,i=t[0],o=t[1],s=null,l=null,h=\"auto\";switch(a){case\"\\\\dfrac\":case\"\\\\frac\":case\"\\\\tfrac\":r=!0;break;case\"\\\\\\\\atopfrac\":r=!1;break;case\"\\\\dbinom\":case\"\\\\binom\":case\"\\\\tbinom\":r=!1,s=\"(\",l=\")\";break;case\"\\\\\\\\bracefrac\":r=!1,s=\"\\\\{\",l=\"\\\\}\";break;case\"\\\\\\\\brackfrac\":r=!1,s=\"[\",l=\"]\";break;default:throw new Error(\"Unrecognized genfrac command\")}switch(a){case\"\\\\dfrac\":case\"\\\\dbinom\":h=\"display\";break;case\"\\\\tfrac\":case\"\\\\tbinom\":h=\"text\"}return{type:\"genfrac\",mode:n.mode,continued:!1,numer:i,denom:o,hasBarLine:r,leftDelim:s,rightDelim:l,size:h,barSize:null}},htmlBuilder:Qr,mathmlBuilder:en}),nt({type:\"genfrac\",names:[\"\\\\cfrac\"],props:{numArgs:2},handler:function(e,t){var r=e.parser,n=(e.funcName,t[0]),a=t[1];return{type:\"genfrac\",mode:r.mode,continued:!0,numer:n,denom:a,hasBarLine:!0,leftDelim:null,rightDelim:null,size:\"display\",barSize:null}}}),nt({type:\"infix\",names:[\"\\\\over\",\"\\\\choose\",\"\\\\atop\",\"\\\\brace\",\"\\\\brack\"],props:{numArgs:0,infix:!0},handler:function(e){var t,r=e.parser,n=e.funcName,a=e.token;switch(n){case\"\\\\over\":t=\"\\\\frac\";break;case\"\\\\choose\":t=\"\\\\binom\";break;case\"\\\\atop\":t=\"\\\\\\\\atopfrac\";break;case\"\\\\brace\":t=\"\\\\\\\\bracefrac\";break;case\"\\\\brack\":t=\"\\\\\\\\brackfrac\";break;default:throw new Error(\"Unrecognized infix genfrac command\")}return{type:\"infix\",mode:r.mode,replaceWith:t,token:a}}});var tn=[\"display\",\"text\",\"script\",\"scriptscript\"],rn=function(e){var t=null;return e.length>0&&(t=\".\"===(t=e)?null:t),t};nt({type:\"genfrac\",names:[\"\\\\genfrac\"],props:{numArgs:6,allowedInArgument:!0,argTypes:[\"math\",\"math\",\"size\",\"text\",\"math\",\"math\"]},handler:function(e,t){var r,n=e.parser,a=t[4],i=t[5],o=it(t[0]),s=\"atom\"===o.type&&\"open\"===o.family?rn(o.text):null,l=it(t[1]),h=\"atom\"===l.type&&\"close\"===l.family?rn(l.text):null,m=Ft(t[2],\"size\"),c=null;r=!!m.isBlank||(c=m.value).number>0;var u=\"auto\",p=t[3];if(\"ordgroup\"===p.type){if(p.body.length>0){var d=Ft(p.body[0],\"textord\");u=tn[Number(d.text)]}}else p=Ft(p,\"textord\"),u=tn[Number(p.text)];return{type:\"genfrac\",mode:n.mode,numer:a,denom:i,continued:!1,hasBarLine:r,barSize:c,leftDelim:s,rightDelim:h,size:u}},htmlBuilder:Qr,mathmlBuilder:en}),nt({type:\"infix\",names:[\"\\\\above\"],props:{numArgs:1,argTypes:[\"size\"],infix:!0},handler:function(e,t){var r=e.parser,n=(e.funcName,e.token);return{type:\"infix\",mode:r.mode,replaceWith:\"\\\\\\\\abovefrac\",size:Ft(t[0],\"size\").value,token:n}}}),nt({type:\"genfrac\",names:[\"\\\\\\\\abovefrac\"],props:{numArgs:3,argTypes:[\"math\",\"size\",\"math\"]},handler:function(e,t){var r=e.parser,n=(e.funcName,t[0]),a=function(e){if(!e)throw new Error(\"Expected non-null, but got \"+String(e));return e}(Ft(t[1],\"infix\").size),i=t[2],o=a.number>0;return{type:\"genfrac\",mode:r.mode,numer:n,denom:i,continued:!1,hasBarLine:o,barSize:a,leftDelim:null,rightDelim:null,size:\"auto\"}},htmlBuilder:Qr,mathmlBuilder:en});var nn=function(e,t){var r,n,a=t.style;\"supsub\"===e.type?(r=e.sup?bt(e.sup,t.havingStyle(a.sup()),t):bt(e.sub,t.havingStyle(a.sub()),t),n=Ft(e.base,\"horizBrace\")):n=Ft(e,\"horizBrace\");var i,o=bt(n.base,t.havingBaseStyle(b.DISPLAY)),s=Pt(n,t);if(n.isOver?(i=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:o},{type:\"kern\",size:.1},{type:\"elem\",elem:s}]},t)).children[0].children[0].children[1].classes.push(\"svg-align\"):(i=je.makeVList({positionType:\"bottom\",positionData:o.depth+.1+s.height,children:[{type:\"elem\",elem:s},{type:\"kern\",size:.1},{type:\"elem\",elem:o}]},t)).children[0].children[0].children[0].classes.push(\"svg-align\"),r){var l=je.makeSpan([\"mord\",n.isOver?\"mover\":\"munder\"],[i],t);i=n.isOver?je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:l},{type:\"kern\",size:.2},{type:\"elem\",elem:r}]},t):je.makeVList({positionType:\"bottom\",positionData:l.depth+.2+r.height+r.depth,children:[{type:\"elem\",elem:r},{type:\"kern\",size:.2},{type:\"elem\",elem:l}]},t)}return je.makeSpan([\"mord\",n.isOver?\"mover\":\"munder\"],[i],t)};nt({type:\"horizBrace\",names:[\"\\\\overbrace\",\"\\\\underbrace\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName;return{type:\"horizBrace\",mode:r.mode,label:n,isOver:/^\\\\over/.test(n),base:t[0]}},htmlBuilder:nn,mathmlBuilder:function(e,t){var r=Dt(e.label);return new Mt.MathNode(e.isOver?\"mover\":\"munder\",[qt(e.base,t),r])}}),nt({type:\"href\",names:[\"\\\\href\"],props:{numArgs:2,argTypes:[\"url\",\"original\"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[1],a=Ft(t[0],\"url\").url;return r.settings.isTrusted({command:\"\\\\href\",url:a})?{type:\"href\",mode:r.mode,href:a,body:ot(n)}:r.formatUnsupportedCmd(\"\\\\href\")},htmlBuilder:function(e,t){var r=ut(e.body,t,!1);return je.makeAnchor(e.href,[],r,t)},mathmlBuilder:function(e,t){var r=Nt(e.body,t);return r instanceof kt||(r=new kt(\"mrow\",[r])),r.setAttribute(\"href\",e.href),r}}),nt({type:\"href\",names:[\"\\\\url\"],props:{numArgs:1,argTypes:[\"url\"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=Ft(t[0],\"url\").url;if(!r.settings.isTrusted({command:\"\\\\url\",url:n}))return r.formatUnsupportedCmd(\"\\\\url\");for(var a=[],i=0;i<n.length;i++){var o=n[i];\"~\"===o&&(o=\"\\\\textasciitilde\"),a.push({type:\"textord\",mode:\"text\",text:o})}var s={type:\"text\",mode:r.mode,font:\"\\\\texttt\",body:a};return{type:\"href\",mode:r.mode,href:n,body:ot(s)}}}),nt({type:\"hbox\",names:[\"\\\\hbox\"],props:{numArgs:1,argTypes:[\"text\"],allowedInText:!0,primitive:!0},handler:function(e,t){return{type:\"hbox\",mode:e.parser.mode,body:ot(t[0])}},htmlBuilder:function(e,t){var r=ut(e.body,t,!1);return je.makeFragment(r)},mathmlBuilder:function(e,t){return new Mt.MathNode(\"mrow\",Bt(e.body,t))}}),nt({type:\"html\",names:[\"\\\\htmlClass\",\"\\\\htmlId\",\"\\\\htmlStyle\",\"\\\\htmlData\"],props:{numArgs:2,argTypes:[\"raw\",\"original\"],allowedInText:!0},handler:function(e,t){var r,a=e.parser,i=e.funcName,o=(e.token,Ft(t[0],\"raw\").string),s=t[1];a.settings.strict&&a.settings.reportNonstrict(\"htmlExtension\",\"HTML extension is disabled on strict mode\");var l={};switch(i){case\"\\\\htmlClass\":l.class=o,r={command:\"\\\\htmlClass\",class:o};break;case\"\\\\htmlId\":l.id=o,r={command:\"\\\\htmlId\",id:o};break;case\"\\\\htmlStyle\":l.style=o,r={command:\"\\\\htmlStyle\",style:o};break;case\"\\\\htmlData\":for(var h=o.split(\",\"),m=0;m<h.length;m++){var c=h[m].split(\"=\");if(2!==c.length)throw new n(\"Error parsing key-value for \\\\htmlData\");l[\"data-\"+c[0].trim()]=c[1].trim()}r={command:\"\\\\htmlData\",attributes:l};break;default:throw new Error(\"Unrecognized html command\")}return a.settings.isTrusted(r)?{type:\"html\",mode:a.mode,attributes:l,body:ot(s)}:a.formatUnsupportedCmd(i)},htmlBuilder:function(e,t){var r=ut(e.body,t,!1),n=[\"enclosing\"];e.attributes.class&&n.push.apply(n,e.attributes.class.trim().split(/\\s+/));var a=je.makeSpan(n,r,t);for(var i in e.attributes)\"class\"!==i&&e.attributes.hasOwnProperty(i)&&a.setAttribute(i,e.attributes[i]);return a},mathmlBuilder:function(e,t){return Nt(e.body,t)}}),nt({type:\"htmlmathml\",names:[\"\\\\html@mathml\"],props:{numArgs:2,allowedInText:!0},handler:function(e,t){return{type:\"htmlmathml\",mode:e.parser.mode,html:ot(t[0]),mathml:ot(t[1])}},htmlBuilder:function(e,t){var r=ut(e.html,t,!1);return je.makeFragment(r)},mathmlBuilder:function(e,t){return Nt(e.mathml,t)}});var an=function(e){if(/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(e))return{number:+e,unit:\"bp\"};var t=/([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(e);if(!t)throw new n(\"Invalid size: '\"+e+\"' in \\\\includegraphics\");var r={number:+(t[1]+t[2]),unit:t[3]};if(!He(r))throw new n(\"Invalid unit: '\"+r.unit+\"' in \\\\includegraphics.\");return r};nt({type:\"includegraphics\",names:[\"\\\\includegraphics\"],props:{numArgs:1,numOptionalArgs:1,argTypes:[\"raw\",\"url\"],allowedInText:!1},handler:function(e,t,r){var a=e.parser,i={number:0,unit:\"em\"},o={number:.9,unit:\"em\"},s={number:0,unit:\"em\"},l=\"\";if(r[0])for(var h=Ft(r[0],\"raw\").string.split(\",\"),m=0;m<h.length;m++){var c=h[m].split(\"=\");if(2===c.length){var u=c[1].trim();switch(c[0].trim()){case\"alt\":l=u;break;case\"width\":i=an(u);break;case\"height\":o=an(u);break;case\"totalheight\":s=an(u);break;default:throw new n(\"Invalid key: '\"+c[0]+\"' in \\\\includegraphics.\")}}}var p=Ft(t[0],\"url\").url;return\"\"===l&&(l=(l=(l=p).replace(/^.*[\\\\/]/,\"\")).substring(0,l.lastIndexOf(\".\"))),a.settings.isTrusted({command:\"\\\\includegraphics\",url:p})?{type:\"includegraphics\",mode:a.mode,alt:l,width:i,height:o,totalheight:s,src:p}:a.formatUnsupportedCmd(\"\\\\includegraphics\")},htmlBuilder:function(e,t){var r=Le(e.height,t),n=0;e.totalheight.number>0&&(n=Le(e.totalheight,t)-r,n=Number(n.toFixed(2)));var a=0;e.width.number>0&&(a=Le(e.width,t));var i={height:r+n+\"em\"};a>0&&(i.width=a+\"em\"),n>0&&(i.verticalAlign=-n+\"em\");var o=new C(e.src,e.alt,i);return o.height=r,o.depth=n,o},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mglyph\",[]);r.setAttribute(\"alt\",e.alt);var n=Le(e.height,t),a=0;if(e.totalheight.number>0&&(a=(a=Le(e.totalheight,t)-n).toFixed(2),r.setAttribute(\"valign\",\"-\"+a+\"em\")),r.setAttribute(\"height\",n+a+\"em\"),e.width.number>0){var i=Le(e.width,t);r.setAttribute(\"width\",i+\"em\")}return r.setAttribute(\"src\",e.src),r}}),nt({type:\"kern\",names:[\"\\\\kern\",\"\\\\mkern\",\"\\\\hskip\",\"\\\\mskip\"],props:{numArgs:1,argTypes:[\"size\"],primitive:!0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=Ft(t[0],\"size\");if(r.settings.strict){var i=\"m\"===n[1],o=\"mu\"===a.value.unit;i?(o||r.settings.reportNonstrict(\"mathVsTextUnits\",\"LaTeX's \"+n+\" supports only mu units, not \"+a.value.unit+\" units\"),\"math\"!==r.mode&&r.settings.reportNonstrict(\"mathVsTextUnits\",\"LaTeX's \"+n+\" works only in math mode\")):o&&r.settings.reportNonstrict(\"mathVsTextUnits\",\"LaTeX's \"+n+\" doesn't support mu units\")}return{type:\"kern\",mode:r.mode,dimension:a.value}},htmlBuilder:function(e,t){return je.makeGlue(e.dimension,t)},mathmlBuilder:function(e,t){var r=Le(e.dimension,t);return new Mt.SpaceNode(r)}}),nt({type:\"lap\",names:[\"\\\\mathllap\",\"\\\\mathrlap\",\"\\\\mathclap\"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:\"lap\",mode:r.mode,alignment:n.slice(5),body:a}},htmlBuilder:function(e,t){var r;\"clap\"===e.alignment?(r=je.makeSpan([],[bt(e.body,t)]),r=je.makeSpan([\"inner\"],[r],t)):r=je.makeSpan([\"inner\"],[bt(e.body,t)]);var n=je.makeSpan([\"fix\"],[]),a=je.makeSpan([e.alignment],[r,n],t),i=je.makeSpan([\"strut\"]);return i.style.height=a.height+a.depth+\"em\",i.style.verticalAlign=-a.depth+\"em\",a.children.unshift(i),a=je.makeSpan([\"thinbox\"],[a],t),je.makeSpan([\"mord\",\"vbox\"],[a],t)},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mpadded\",[qt(e.body,t)]);if(\"rlap\"!==e.alignment){var n=\"llap\"===e.alignment?\"-1\":\"-0.5\";r.setAttribute(\"lspace\",n+\"width\")}return r.setAttribute(\"width\",\"0px\"),r}}),nt({type:\"styling\",names:[\"\\\\(\",\"$\"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(e,t){var r=e.funcName,n=e.parser,a=n.mode;n.switchMode(\"math\");var i=\"\\\\(\"===r?\"\\\\)\":\"$\",o=n.parseExpression(!1,i);return n.expect(i),n.switchMode(a),{type:\"styling\",mode:n.mode,style:\"text\",body:o}}}),nt({type:\"text\",names:[\"\\\\)\",\"\\\\]\"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(e,t){throw new n(\"Mismatched \"+e.funcName)}});var on=function(e,t){switch(t.style.size){case b.DISPLAY.size:return e.display;case b.TEXT.size:return e.text;case b.SCRIPT.size:return e.script;case b.SCRIPTSCRIPT.size:return e.scriptscript;default:return e.text}};nt({type:\"mathchoice\",names:[\"\\\\mathchoice\"],props:{numArgs:4,primitive:!0},handler:function(e,t){return{type:\"mathchoice\",mode:e.parser.mode,display:ot(t[0]),text:ot(t[1]),script:ot(t[2]),scriptscript:ot(t[3])}},htmlBuilder:function(e,t){var r=on(e,t),n=ut(r,t,!1);return je.makeFragment(n)},mathmlBuilder:function(e,t){var r=on(e,t);return Nt(r,t)}});var sn=function(e,t,r,n,a,i,o){e=je.makeSpan([],[e]);var s,h,m,c=r&&l.isCharacterBox(r);if(t){var u=bt(t,n.havingStyle(a.sup()),n);h={elem:u,kern:Math.max(n.fontMetrics().bigOpSpacing1,n.fontMetrics().bigOpSpacing3-u.depth)}}if(r){var p=bt(r,n.havingStyle(a.sub()),n);s={elem:p,kern:Math.max(n.fontMetrics().bigOpSpacing2,n.fontMetrics().bigOpSpacing4-p.height)}}if(h&&s){var d=n.fontMetrics().bigOpSpacing5+s.elem.height+s.elem.depth+s.kern+e.depth+o;m=je.makeVList({positionType:\"bottom\",positionData:d,children:[{type:\"kern\",size:n.fontMetrics().bigOpSpacing5},{type:\"elem\",elem:s.elem,marginLeft:-i+\"em\"},{type:\"kern\",size:s.kern},{type:\"elem\",elem:e},{type:\"kern\",size:h.kern},{type:\"elem\",elem:h.elem,marginLeft:i+\"em\"},{type:\"kern\",size:n.fontMetrics().bigOpSpacing5}]},n)}else if(s){var f=e.height-o;m=je.makeVList({positionType:\"top\",positionData:f,children:[{type:\"kern\",size:n.fontMetrics().bigOpSpacing5},{type:\"elem\",elem:s.elem,marginLeft:-i+\"em\"},{type:\"kern\",size:s.kern},{type:\"elem\",elem:e}]},n)}else{if(!h)return e;var g=e.depth+o;m=je.makeVList({positionType:\"bottom\",positionData:g,children:[{type:\"elem\",elem:e},{type:\"kern\",size:h.kern},{type:\"elem\",elem:h.elem,marginLeft:i+\"em\"},{type:\"kern\",size:n.fontMetrics().bigOpSpacing5}]},n)}var v=[m];if(s&&0!==i&&!c){var b=je.makeSpan([\"mspace\"],[],n);b.style.marginRight=i+\"em\",v.unshift(b)}return je.makeSpan([\"mop\",\"op-limits\"],v,n)},ln=[\"\\\\smallint\"],hn=function(e,t){var r,n,a,i=!1;\"supsub\"===e.type?(r=e.sup,n=e.sub,a=Ft(e.base,\"op\"),i=!0):a=Ft(e,\"op\");var o,s=t.style,h=!1;if(s.size===b.DISPLAY.size&&a.symbol&&!l.contains(ln,a.name)&&(h=!0),a.symbol){var m=h?\"Size2-Regular\":\"Size1-Regular\",c=\"\";if(\"\\\\oiint\"!==a.name&&\"\\\\oiiint\"!==a.name||(c=a.name.substr(1),a.name=\"oiint\"===c?\"\\\\iint\":\"\\\\iiint\"),o=je.makeSymbol(a.name,m,\"math\",t,[\"mop\",\"op-symbol\",h?\"large-op\":\"small-op\"]),c.length>0){var u=o.italic,p=je.staticSvg(c+\"Size\"+(h?\"2\":\"1\"),t);o=je.makeVList({positionType:\"individualShift\",children:[{type:\"elem\",elem:o,shift:0},{type:\"elem\",elem:p,shift:h?.08:0}]},t),a.name=\"\\\\\"+c,o.classes.unshift(\"mop\"),o.italic=u}}else if(a.body){var d=ut(a.body,t,!0);1===d.length&&d[0]instanceof R?(o=d[0]).classes[0]=\"mop\":o=je.makeSpan([\"mop\"],d,t)}else{for(var f=[],g=1;g<a.name.length;g++)f.push(je.mathsym(a.name[g],a.mode,t));o=je.makeSpan([\"mop\"],f,t)}var v=0,y=0;return(o instanceof R||\"\\\\oiint\"===a.name||\"\\\\oiiint\"===a.name)&&!a.suppressBaseShift&&(v=(o.height-o.depth)/2-t.fontMetrics().axisHeight,y=o.italic),i?sn(o,r,n,t,s,y,v):(v&&(o.style.position=\"relative\",o.style.top=v+\"em\"),o)},mn=function(e,t){var r;if(e.symbol)r=new kt(\"mo\",[zt(e.name,e.mode)]),l.contains(ln,e.name)&&r.setAttribute(\"largeop\",\"false\");else if(e.body)r=new kt(\"mo\",Bt(e.body,t));else{r=new kt(\"mi\",[new St(e.name.slice(1))]);var n=new kt(\"mo\",[zt(\"\\u2061\",\"text\")]);r=e.parentIsSupSub?new kt(\"mrow\",[r,n]):wt([r,n])}return r},cn={\"\\u220f\":\"\\\\prod\",\"\\u2210\":\"\\\\coprod\",\"\\u2211\":\"\\\\sum\",\"\\u22c0\":\"\\\\bigwedge\",\"\\u22c1\":\"\\\\bigvee\",\"\\u22c2\":\"\\\\bigcap\",\"\\u22c3\":\"\\\\bigcup\",\"\\u2a00\":\"\\\\bigodot\",\"\\u2a01\":\"\\\\bigoplus\",\"\\u2a02\":\"\\\\bigotimes\",\"\\u2a04\":\"\\\\biguplus\",\"\\u2a06\":\"\\\\bigsqcup\"};nt({type:\"op\",names:[\"\\\\coprod\",\"\\\\bigvee\",\"\\\\bigwedge\",\"\\\\biguplus\",\"\\\\bigcap\",\"\\\\bigcup\",\"\\\\intop\",\"\\\\prod\",\"\\\\sum\",\"\\\\bigotimes\",\"\\\\bigoplus\",\"\\\\bigodot\",\"\\\\bigsqcup\",\"\\\\smallint\",\"\\u220f\",\"\\u2210\",\"\\u2211\",\"\\u22c0\",\"\\u22c1\",\"\\u22c2\",\"\\u22c3\",\"\\u2a00\",\"\\u2a01\",\"\\u2a02\",\"\\u2a04\",\"\\u2a06\"],props:{numArgs:0},handler:function(e,t){var r=e.parser,n=e.funcName;return 1===n.length&&(n=cn[n]),{type:\"op\",mode:r.mode,limits:!0,parentIsSupSub:!1,symbol:!0,name:n}},htmlBuilder:hn,mathmlBuilder:mn}),nt({type:\"op\",names:[\"\\\\mathop\"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:\"op\",mode:r.mode,limits:!1,parentIsSupSub:!1,symbol:!1,body:ot(n)}},htmlBuilder:hn,mathmlBuilder:mn});var un={\"\\u222b\":\"\\\\int\",\"\\u222c\":\"\\\\iint\",\"\\u222d\":\"\\\\iiint\",\"\\u222e\":\"\\\\oint\",\"\\u222f\":\"\\\\oiint\",\"\\u2230\":\"\\\\oiiint\"};nt({type:\"op\",names:[\"\\\\arcsin\",\"\\\\arccos\",\"\\\\arctan\",\"\\\\arctg\",\"\\\\arcctg\",\"\\\\arg\",\"\\\\ch\",\"\\\\cos\",\"\\\\cosec\",\"\\\\cosh\",\"\\\\cot\",\"\\\\cotg\",\"\\\\coth\",\"\\\\csc\",\"\\\\ctg\",\"\\\\cth\",\"\\\\deg\",\"\\\\dim\",\"\\\\exp\",\"\\\\hom\",\"\\\\ker\",\"\\\\lg\",\"\\\\ln\",\"\\\\log\",\"\\\\sec\",\"\\\\sin\",\"\\\\sinh\",\"\\\\sh\",\"\\\\tan\",\"\\\\tanh\",\"\\\\tg\",\"\\\\th\"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return{type:\"op\",mode:t.mode,limits:!1,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:hn,mathmlBuilder:mn}),nt({type:\"op\",names:[\"\\\\det\",\"\\\\gcd\",\"\\\\inf\",\"\\\\lim\",\"\\\\max\",\"\\\\min\",\"\\\\Pr\",\"\\\\sup\"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return{type:\"op\",mode:t.mode,limits:!0,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:hn,mathmlBuilder:mn}),nt({type:\"op\",names:[\"\\\\int\",\"\\\\iint\",\"\\\\iiint\",\"\\\\oint\",\"\\\\oiint\",\"\\\\oiiint\",\"\\u222b\",\"\\u222c\",\"\\u222d\",\"\\u222e\",\"\\u222f\",\"\\u2230\"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return 1===r.length&&(r=un[r]),{type:\"op\",mode:t.mode,limits:!1,parentIsSupSub:!1,symbol:!0,name:r}},htmlBuilder:hn,mathmlBuilder:mn});var pn={};function dn(e,t){pn[e]=t}var fn=function(e,t){var r,n,a,i,o=!1;if(\"supsub\"===e.type?(r=e.sup,n=e.sub,a=Ft(e.base,\"operatorname\"),o=!0):a=Ft(e,\"operatorname\"),a.body.length>0){for(var s=a.body.map((function(e){var t=e.text;return\"string\"==typeof t?{type:\"textord\",mode:e.mode,text:t}:e})),l=ut(s,t.withFont(\"mathrm\"),!0),h=0;h<l.length;h++){var m=l[h];m instanceof R&&(m.text=m.text.replace(/\\u2212/,\"-\").replace(/\\u2217/,\"*\"))}i=je.makeSpan([\"mop\"],l,t)}else i=je.makeSpan([\"mop\"],[],t);return o?sn(i,r,n,t,t.style,0,0):i};function gn(e,t,r){for(var n=ut(e,t,!1),a=t.sizeMultiplier/r.sizeMultiplier,i=0;i<n.length;i++){var o=n[i].classes.indexOf(\"sizing\");o<0?Array.prototype.push.apply(n[i].classes,t.sizingClasses(r)):n[i].classes[o+1]===\"reset-size\"+t.size&&(n[i].classes[o+1]=\"reset-size\"+r.size),n[i].height*=a,n[i].depth*=a}return je.makeFragment(n)}nt({type:\"operatorname\",names:[\"\\\\operatorname@\",\"\\\\operatornamewithlimits\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:\"operatorname\",mode:r.mode,body:ot(a),alwaysHandleSupSub:\"\\\\operatornamewithlimits\"===n,limits:!1,parentIsSupSub:!1}},htmlBuilder:fn,mathmlBuilder:function(e,t){for(var r=Bt(e.body,t.withFont(\"mathrm\")),n=!0,a=0;a<r.length;a++){var i=r[a];if(i instanceof Mt.SpaceNode);else if(i instanceof Mt.MathNode)switch(i.type){case\"mi\":case\"mn\":case\"ms\":case\"mspace\":case\"mtext\":break;case\"mo\":var o=i.children[0];1===i.children.length&&o instanceof Mt.TextNode?o.text=o.text.replace(/\\u2212/,\"-\").replace(/\\u2217/,\"*\"):n=!1;break;default:n=!1}else n=!1}if(n){var s=r.map((function(e){return e.toText()})).join(\"\");r=[new Mt.TextNode(s)]}var l=new Mt.MathNode(\"mi\",r);l.setAttribute(\"mathvariant\",\"normal\");var h=new Mt.MathNode(\"mo\",[zt(\"\\u2061\",\"text\")]);return e.parentIsSupSub?new Mt.MathNode(\"mrow\",[l,h]):Mt.newDocumentFragment([l,h])}}),dn(\"\\\\operatorname\",\"\\\\@ifstar\\\\operatornamewithlimits\\\\operatorname@\"),at({type:\"ordgroup\",htmlBuilder:function(e,t){return e.semisimple?je.makeFragment(ut(e.body,t,!1)):je.makeSpan([\"mord\"],ut(e.body,t,!0),t)},mathmlBuilder:function(e,t){return Nt(e.body,t,!0)}}),nt({type:\"overline\",names:[\"\\\\overline\"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=t[0];return{type:\"overline\",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=bt(e.body,t.havingCrampedStyle()),n=je.makeLineSpan(\"overline-line\",t),a=t.fontMetrics().defaultRuleThickness,i=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:r},{type:\"kern\",size:3*a},{type:\"elem\",elem:n},{type:\"kern\",size:a}]},t);return je.makeSpan([\"mord\",\"overline\"],[i],t)},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mo\",[new Mt.TextNode(\"\\u203e\")]);r.setAttribute(\"stretchy\",\"true\");var n=new Mt.MathNode(\"mover\",[qt(e.body,t),r]);return n.setAttribute(\"accent\",\"true\"),n}}),nt({type:\"phantom\",names:[\"\\\\phantom\"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:\"phantom\",mode:r.mode,body:ot(n)}},htmlBuilder:function(e,t){var r=ut(e.body,t.withPhantom(),!1);return je.makeFragment(r)},mathmlBuilder:function(e,t){var r=Bt(e.body,t);return new Mt.MathNode(\"mphantom\",r)}}),nt({type:\"hphantom\",names:[\"\\\\hphantom\"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:\"hphantom\",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=je.makeSpan([],[bt(e.body,t.withPhantom())]);if(r.height=0,r.depth=0,r.children)for(var n=0;n<r.children.length;n++)r.children[n].height=0,r.children[n].depth=0;return r=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:r}]},t),je.makeSpan([\"mord\"],[r],t)},mathmlBuilder:function(e,t){var r=Bt(ot(e.body),t),n=new Mt.MathNode(\"mphantom\",r),a=new Mt.MathNode(\"mpadded\",[n]);return a.setAttribute(\"height\",\"0px\"),a.setAttribute(\"depth\",\"0px\"),a}}),nt({type:\"vphantom\",names:[\"\\\\vphantom\"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:\"vphantom\",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=je.makeSpan([\"inner\"],[bt(e.body,t.withPhantom())]),n=je.makeSpan([\"fix\"],[]);return je.makeSpan([\"mord\",\"rlap\"],[r,n],t)},mathmlBuilder:function(e,t){var r=Bt(ot(e.body),t),n=new Mt.MathNode(\"mphantom\",r),a=new Mt.MathNode(\"mpadded\",[n]);return a.setAttribute(\"width\",\"0px\"),a}}),nt({type:\"raisebox\",names:[\"\\\\raisebox\"],props:{numArgs:2,argTypes:[\"size\",\"hbox\"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=Ft(t[0],\"size\").value,a=t[1];return{type:\"raisebox\",mode:r.mode,dy:n,body:a}},htmlBuilder:function(e,t){var r=bt(e.body,t),n=Le(e.dy,t);return je.makeVList({positionType:\"shift\",positionData:-n,children:[{type:\"elem\",elem:r}]},t)},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mpadded\",[qt(e.body,t)]),n=e.dy.number+e.dy.unit;return r.setAttribute(\"voffset\",n),r}}),nt({type:\"rule\",names:[\"\\\\rule\"],props:{numArgs:2,numOptionalArgs:1,argTypes:[\"size\",\"size\",\"size\"]},handler:function(e,t,r){var n=e.parser,a=r[0],i=Ft(t[0],\"size\"),o=Ft(t[1],\"size\");return{type:\"rule\",mode:n.mode,shift:a&&Ft(a,\"size\").value,width:i.value,height:o.value}},htmlBuilder:function(e,t){var r=je.makeSpan([\"mord\",\"rule\"],[],t),n=Le(e.width,t),a=Le(e.height,t),i=e.shift?Le(e.shift,t):0;return r.style.borderRightWidth=n+\"em\",r.style.borderTopWidth=a+\"em\",r.style.bottom=i+\"em\",r.width=n,r.height=a+i,r.depth=-i,r.maxFontSize=1.125*a*t.sizeMultiplier,r},mathmlBuilder:function(e,t){var r=Le(e.width,t),n=Le(e.height,t),a=e.shift?Le(e.shift,t):0,i=t.color&&t.getColor()||\"black\",o=new Mt.MathNode(\"mspace\");o.setAttribute(\"mathbackground\",i),o.setAttribute(\"width\",r+\"em\"),o.setAttribute(\"height\",n+\"em\");var s=new Mt.MathNode(\"mpadded\",[o]);return a>=0?s.setAttribute(\"height\",\"+\"+a+\"em\"):(s.setAttribute(\"height\",a+\"em\"),s.setAttribute(\"depth\",\"+\"+-a+\"em\")),s.setAttribute(\"voffset\",a+\"em\"),s}});var vn=[\"\\\\tiny\",\"\\\\sixptsize\",\"\\\\scriptsize\",\"\\\\footnotesize\",\"\\\\small\",\"\\\\normalsize\",\"\\\\large\",\"\\\\Large\",\"\\\\LARGE\",\"\\\\huge\",\"\\\\Huge\"];nt({type:\"sizing\",names:vn,props:{numArgs:0,allowedInText:!0},handler:function(e,t){var r=e.breakOnTokenText,n=e.funcName,a=e.parser,i=a.parseExpression(!1,r);return{type:\"sizing\",mode:a.mode,size:vn.indexOf(n)+1,body:i}},htmlBuilder:function(e,t){var r=t.havingSize(e.size);return gn(e.body,r,t)},mathmlBuilder:function(e,t){var r=t.havingSize(e.size),n=Bt(e.body,r),a=new Mt.MathNode(\"mstyle\",n);return a.setAttribute(\"mathsize\",r.sizeMultiplier+\"em\"),a}}),nt({type:\"smash\",names:[\"\\\\smash\"],props:{numArgs:1,numOptionalArgs:1,allowedInText:!0},handler:function(e,t,r){var n=e.parser,a=!1,i=!1,o=r[0]&&Ft(r[0],\"ordgroup\");if(o)for(var s=\"\",l=0;l<o.body.length;++l){if(\"t\"===(s=o.body[l].text))a=!0;else{if(\"b\"!==s){a=!1,i=!1;break}i=!0}}else a=!0,i=!0;var h=t[0];return{type:\"smash\",mode:n.mode,body:h,smashHeight:a,smashDepth:i}},htmlBuilder:function(e,t){var r=je.makeSpan([],[bt(e.body,t)]);if(!e.smashHeight&&!e.smashDepth)return r;if(e.smashHeight&&(r.height=0,r.children))for(var n=0;n<r.children.length;n++)r.children[n].height=0;if(e.smashDepth&&(r.depth=0,r.children))for(var a=0;a<r.children.length;a++)r.children[a].depth=0;var i=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:r}]},t);return je.makeSpan([\"mord\"],[i],t)},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mpadded\",[qt(e.body,t)]);return e.smashHeight&&r.setAttribute(\"height\",\"0px\"),e.smashDepth&&r.setAttribute(\"depth\",\"0px\"),r}}),nt({type:\"sqrt\",names:[\"\\\\sqrt\"],props:{numArgs:1,numOptionalArgs:1},handler:function(e,t,r){var n=e.parser,a=r[0],i=t[0];return{type:\"sqrt\",mode:n.mode,body:i,index:a}},htmlBuilder:function(e,t){var r=bt(e.body,t.havingCrampedStyle());0===r.height&&(r.height=t.fontMetrics().xHeight),r=je.wrapFragment(r,t);var n=t.fontMetrics().defaultRuleThickness,a=n;t.style.id<b.TEXT.id&&(a=t.fontMetrics().xHeight);var i=n+a/4,o=r.height+r.depth+i+n,s=Sr(o,t),l=s.span,h=s.ruleWidth,m=s.advanceWidth,c=l.height-h;c>r.height+r.depth+i&&(i=(i+c-r.height-r.depth)/2);var u=l.height-r.height-i-h;r.style.paddingLeft=m+\"em\";var p=je.makeVList({positionType:\"firstBaseline\",children:[{type:\"elem\",elem:r,wrapperClasses:[\"svg-align\"]},{type:\"kern\",size:-(r.height+u)},{type:\"elem\",elem:l},{type:\"kern\",size:h}]},t);if(e.index){var d=t.havingStyle(b.SCRIPTSCRIPT),f=bt(e.index,d,t),g=.6*(p.height-p.depth),v=je.makeVList({positionType:\"shift\",positionData:-g,children:[{type:\"elem\",elem:f}]},t),y=je.makeSpan([\"root\"],[v]);return je.makeSpan([\"mord\",\"sqrt\"],[y,p],t)}return je.makeSpan([\"mord\",\"sqrt\"],[p],t)},mathmlBuilder:function(e,t){var r=e.body,n=e.index;return n?new Mt.MathNode(\"mroot\",[qt(r,t),qt(n,t)]):new Mt.MathNode(\"msqrt\",[qt(r,t)])}});var bn={display:b.DISPLAY,text:b.TEXT,script:b.SCRIPT,scriptscript:b.SCRIPTSCRIPT};nt({type:\"styling\",names:[\"\\\\displaystyle\",\"\\\\textstyle\",\"\\\\scriptstyle\",\"\\\\scriptscriptstyle\"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e,t){var r=e.breakOnTokenText,n=e.funcName,a=e.parser,i=a.parseExpression(!0,r),o=n.slice(1,n.length-5);return{type:\"styling\",mode:a.mode,style:o,body:i}},htmlBuilder:function(e,t){var r=bn[e.style],n=t.havingStyle(r).withFont(\"\");return gn(e.body,n,t)},mathmlBuilder:function(e,t){var r=bn[e.style],n=t.havingStyle(r),a=Bt(e.body,n),i=new Mt.MathNode(\"mstyle\",a),o={display:[\"0\",\"true\"],text:[\"0\",\"false\"],script:[\"1\",\"false\"],scriptscript:[\"2\",\"false\"]}[e.style];return i.setAttribute(\"scriptlevel\",o[0]),i.setAttribute(\"displaystyle\",o[1]),i}});var yn=function(e,t){var r=e.base;return r?\"op\"===r.type?r.limits&&(t.style.size===b.DISPLAY.size||r.alwaysHandleSupSub)?hn:null:\"operatorname\"===r.type?r.alwaysHandleSupSub&&(t.style.size===b.DISPLAY.size||r.limits)?fn:null:\"accent\"===r.type?l.isCharacterBox(r.base)?Ut:null:\"horizBrace\"===r.type&&!e.sub===r.isOver?nn:null:null};at({type:\"supsub\",htmlBuilder:function(e,t){var r=yn(e,t);if(r)return r(e,t);var n,a,i,o=e.base,s=e.sup,h=e.sub,m=bt(o,t),c=t.fontMetrics(),u=0,p=0,d=o&&l.isCharacterBox(o);if(s){var f=t.havingStyle(t.style.sup());n=bt(s,f,t),d||(u=m.height-f.fontMetrics().supDrop*f.sizeMultiplier/t.sizeMultiplier)}if(h){var g=t.havingStyle(t.style.sub());a=bt(h,g,t),d||(p=m.depth+g.fontMetrics().subDrop*g.sizeMultiplier/t.sizeMultiplier)}i=t.style===b.DISPLAY?c.sup1:t.style.cramped?c.sup3:c.sup2;var v,y=t.sizeMultiplier,x=.5/c.ptPerEm/y+\"em\",w=null;if(a){var k=e.base&&\"op\"===e.base.type&&e.base.name&&(\"\\\\oiint\"===e.base.name||\"\\\\oiiint\"===e.base.name);(m instanceof R||k)&&(w=-m.italic+\"em\")}if(n&&a){u=Math.max(u,i,n.depth+.25*c.xHeight),p=Math.max(p,c.sub2);var S=4*c.defaultRuleThickness;if(u-n.depth-(a.height-p)<S){p=S-(u-n.depth)+a.height;var M=.8*c.xHeight-(u-n.depth);M>0&&(u+=M,p-=M)}var z=[{type:\"elem\",elem:a,shift:p,marginRight:x,marginLeft:w},{type:\"elem\",elem:n,shift:-u,marginRight:x}];v=je.makeVList({positionType:\"individualShift\",children:z},t)}else if(a){p=Math.max(p,c.sub1,a.height-.8*c.xHeight);var A=[{type:\"elem\",elem:a,marginLeft:w,marginRight:x}];v=je.makeVList({positionType:\"shift\",positionData:p,children:A},t)}else{if(!n)throw new Error(\"supsub must have either sup or sub.\");u=Math.max(u,i,n.depth+.25*c.xHeight),v=je.makeVList({positionType:\"shift\",positionData:-u,children:[{type:\"elem\",elem:n,marginRight:x}]},t)}var T=gt(m,\"right\")||\"mord\";return je.makeSpan([T],[m,je.makeSpan([\"msupsub\"],[v])],t)},mathmlBuilder:function(e,t){var r,n=!1;e.base&&\"horizBrace\"===e.base.type&&!!e.sup===e.base.isOver&&(n=!0,r=e.base.isOver),!e.base||\"op\"!==e.base.type&&\"operatorname\"!==e.base.type||(e.base.parentIsSupSub=!0);var a,i=[qt(e.base,t)];if(e.sub&&i.push(qt(e.sub,t)),e.sup&&i.push(qt(e.sup,t)),n)a=r?\"mover\":\"munder\";else if(e.sub)if(e.sup){var o=e.base;a=o&&\"op\"===o.type&&o.limits&&t.style===b.DISPLAY||o&&\"operatorname\"===o.type&&o.alwaysHandleSupSub&&(t.style===b.DISPLAY||o.limits)?\"munderover\":\"msubsup\"}else{var s=e.base;a=s&&\"op\"===s.type&&s.limits&&(t.style===b.DISPLAY||s.alwaysHandleSupSub)||s&&\"operatorname\"===s.type&&s.alwaysHandleSupSub&&(s.limits||t.style===b.DISPLAY)?\"munder\":\"msub\"}else{var l=e.base;a=l&&\"op\"===l.type&&l.limits&&(t.style===b.DISPLAY||l.alwaysHandleSupSub)||l&&\"operatorname\"===l.type&&l.alwaysHandleSupSub&&(l.limits||t.style===b.DISPLAY)?\"mover\":\"msup\"}return new Mt.MathNode(a,i)}}),at({type:\"atom\",htmlBuilder:function(e,t){return je.mathsym(e.text,e.mode,t,[\"m\"+e.family])},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mo\",[zt(e.text,e.mode)]);if(\"bin\"===e.family){var n=Tt(e,t);\"bold-italic\"===n&&r.setAttribute(\"mathvariant\",n)}else\"punct\"===e.family?r.setAttribute(\"separator\",\"true\"):\"open\"!==e.family&&\"close\"!==e.family||r.setAttribute(\"stretchy\",\"false\");return r}});var xn={mi:\"italic\",mn:\"normal\",mtext:\"normal\"};at({type:\"mathord\",htmlBuilder:function(e,t){return je.makeOrd(e,t,\"mathord\")},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mi\",[zt(e.text,e.mode,t)]),n=Tt(e,t)||\"italic\";return n!==xn[r.type]&&r.setAttribute(\"mathvariant\",n),r}}),at({type:\"textord\",htmlBuilder:function(e,t){return je.makeOrd(e,t,\"textord\")},mathmlBuilder:function(e,t){var r,n=zt(e.text,e.mode,t),a=Tt(e,t)||\"normal\";return r=\"text\"===e.mode?new Mt.MathNode(\"mtext\",[n]):/[0-9]/.test(e.text)?new Mt.MathNode(\"mn\",[n]):\"\\\\prime\"===e.text?new Mt.MathNode(\"mo\",[n]):new Mt.MathNode(\"mi\",[n]),a!==xn[r.type]&&r.setAttribute(\"mathvariant\",a),r}});var wn={\"\\\\nobreak\":\"nobreak\",\"\\\\allowbreak\":\"allowbreak\"},kn={\" \":{},\"\\\\ \":{},\"~\":{className:\"nobreak\"},\"\\\\space\":{},\"\\\\nobreakspace\":{className:\"nobreak\"}};at({type:\"spacing\",htmlBuilder:function(e,t){if(kn.hasOwnProperty(e.text)){var r=kn[e.text].className||\"\";if(\"text\"===e.mode){var a=je.makeOrd(e,t,\"textord\");return a.classes.push(r),a}return je.makeSpan([\"mspace\",r],[je.mathsym(e.text,e.mode,t)],t)}if(wn.hasOwnProperty(e.text))return je.makeSpan([\"mspace\",wn[e.text]],[],t);throw new n('Unknown type of space \"'+e.text+'\"')},mathmlBuilder:function(e,t){if(!kn.hasOwnProperty(e.text)){if(wn.hasOwnProperty(e.text))return new Mt.MathNode(\"mspace\");throw new n('Unknown type of space \"'+e.text+'\"')}return new Mt.MathNode(\"mtext\",[new Mt.TextNode(\"\\xa0\")])}});var Sn=function(){var e=new Mt.MathNode(\"mtd\",[]);return e.setAttribute(\"width\",\"50%\"),e};at({type:\"tag\",mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mtable\",[new Mt.MathNode(\"mtr\",[Sn(),new Mt.MathNode(\"mtd\",[Nt(e.body,t)]),Sn(),new Mt.MathNode(\"mtd\",[Nt(e.tag,t)])])]);return r.setAttribute(\"width\",\"100%\"),r}});var Mn={\"\\\\text\":void 0,\"\\\\textrm\":\"textrm\",\"\\\\textsf\":\"textsf\",\"\\\\texttt\":\"texttt\",\"\\\\textnormal\":\"textrm\"},zn={\"\\\\textbf\":\"textbf\",\"\\\\textmd\":\"textmd\"},An={\"\\\\textit\":\"textit\",\"\\\\textup\":\"textup\"},Tn=function(e,t){var r=e.font;return r?Mn[r]?t.withTextFontFamily(Mn[r]):zn[r]?t.withTextFontWeight(zn[r]):t.withTextFontShape(An[r]):t};nt({type:\"text\",names:[\"\\\\text\",\"\\\\textrm\",\"\\\\textsf\",\"\\\\texttt\",\"\\\\textnormal\",\"\\\\textbf\",\"\\\\textmd\",\"\\\\textit\",\"\\\\textup\"],props:{numArgs:1,argTypes:[\"text\"],allowedInArgument:!0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:\"text\",mode:r.mode,body:ot(a),font:n}},htmlBuilder:function(e,t){var r=Tn(e,t),n=ut(e.body,r,!0);return je.makeSpan([\"mord\",\"text\"],n,r)},mathmlBuilder:function(e,t){var r=Tn(e,t);return Nt(e.body,r)}}),nt({type:\"underline\",names:[\"\\\\underline\"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){return{type:\"underline\",mode:e.parser.mode,body:t[0]}},htmlBuilder:function(e,t){var r=bt(e.body,t),n=je.makeLineSpan(\"underline-line\",t),a=t.fontMetrics().defaultRuleThickness,i=je.makeVList({positionType:\"top\",positionData:r.height,children:[{type:\"kern\",size:a},{type:\"elem\",elem:n},{type:\"kern\",size:3*a},{type:\"elem\",elem:r}]},t);return je.makeSpan([\"mord\",\"underline\"],[i],t)},mathmlBuilder:function(e,t){var r=new Mt.MathNode(\"mo\",[new Mt.TextNode(\"\\u203e\")]);r.setAttribute(\"stretchy\",\"true\");var n=new Mt.MathNode(\"munder\",[qt(e.body,t),r]);return n.setAttribute(\"accentunder\",\"true\"),n}}),nt({type:\"vcenter\",names:[\"\\\\vcenter\"],props:{numArgs:1,argTypes:[\"original\"],allowedInText:!1},handler:function(e,t){return{type:\"vcenter\",mode:e.parser.mode,body:t[0]}},htmlBuilder:function(e,t){var r=bt(e.body,t),n=t.fontMetrics().axisHeight,a=.5*(r.height-n-(r.depth+n));return je.makeVList({positionType:\"shift\",positionData:a,children:[{type:\"elem\",elem:r}]},t)},mathmlBuilder:function(e,t){return new Mt.MathNode(\"mpadded\",[qt(e.body,t)],[\"vcenter\"])}}),nt({type:\"verb\",names:[\"\\\\verb\"],props:{numArgs:0,allowedInText:!0},handler:function(e,t,r){throw new n(\"\\\\verb ended by end of line instead of matching delimiter\")},htmlBuilder:function(e,t){for(var r=Bn(e),n=[],a=t.havingStyle(t.style.text()),i=0;i<r.length;i++){var o=r[i];\"~\"===o&&(o=\"\\\\textasciitilde\"),n.push(je.makeSymbol(o,\"Typewriter-Regular\",e.mode,a,[\"mord\",\"texttt\"]))}return je.makeSpan([\"mord\",\"text\"].concat(a.sizingClasses(t)),je.tryCombineChars(n),a)},mathmlBuilder:function(e,t){var r=new Mt.TextNode(Bn(e)),n=new Mt.MathNode(\"mtext\",[r]);return n.setAttribute(\"mathvariant\",\"monospace\"),n}});var Bn=function(e){return e.body.replace(/ /g,e.star?\"\\u2423\":\"\\xa0\")},Nn=et,qn=function(){function e(e,t,r){this.lexer=void 0,this.start=void 0,this.end=void 0,this.lexer=e,this.start=t,this.end=r}return e.range=function(t,r){return r?t&&t.loc&&r.loc&&t.loc.lexer===r.loc.lexer?new e(t.loc.lexer,t.loc.start,r.loc.end):null:t&&t.loc},e}(),Cn=function(){function e(e,t){this.text=void 0,this.loc=void 0,this.noexpand=void 0,this.treatAsRelax=void 0,this.text=e,this.loc=t}return e.prototype.range=function(t,r){return new e(r,qn.range(this,t))},e}(),In=new RegExp(\"[\\u0300-\\u036f]+$\"),Rn=function(){function e(e,t){this.input=void 0,this.settings=void 0,this.tokenRegex=void 0,this.catcodes=void 0,this.input=e,this.settings=t,this.tokenRegex=new RegExp(\"([ \\r\\n\\t]+)|\\\\\\\\(\\n|[ \\r\\t]+\\n?)[ \\r\\t]*|([!-\\\\[\\\\]-\\u2027\\u202a-\\ud7ff\\uf900-\\uffff][\\u0300-\\u036f]*|[\\ud800-\\udbff][\\udc00-\\udfff][\\u0300-\\u036f]*|\\\\\\\\verb\\\\*([^]).*?\\\\4|\\\\\\\\verb([^*a-zA-Z]).*?\\\\5|(\\\\\\\\[a-zA-Z@]+)[ \\r\\n\\t]*|\\\\\\\\[^\\ud800-\\udfff])\",\"g\"),this.catcodes={\"%\":14,\"~\":13}}var t=e.prototype;return t.setCatcode=function(e,t){this.catcodes[e]=t},t.lex=function(){var e=this.input,t=this.tokenRegex.lastIndex;if(t===e.length)return new Cn(\"EOF\",new qn(this,t,t));var r=this.tokenRegex.exec(e);if(null===r||r.index!==t)throw new n(\"Unexpected character: '\"+e[t]+\"'\",new Cn(e[t],new qn(this,t,t+1)));var a=r[6]||r[3]||(r[2]?\"\\\\ \":\" \");if(14===this.catcodes[a]){var i=e.indexOf(\"\\n\",this.tokenRegex.lastIndex);return-1===i?(this.tokenRegex.lastIndex=e.length,this.settings.reportNonstrict(\"commentAtEnd\",\"% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)\")):this.tokenRegex.lastIndex=i+1,this.lex()}return new Cn(a,new qn(this,t,this.tokenRegex.lastIndex))},e}(),On=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={}),this.current=void 0,this.builtins=void 0,this.undefStack=void 0,this.current=t,this.builtins=e,this.undefStack=[]}var t=e.prototype;return t.beginGroup=function(){this.undefStack.push({})},t.endGroup=function(){if(0===this.undefStack.length)throw new n(\"Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug\");var e=this.undefStack.pop();for(var t in e)e.hasOwnProperty(t)&&(void 0===e[t]?delete this.current[t]:this.current[t]=e[t])},t.endGroups=function(){for(;this.undefStack.length>0;)this.endGroup()},t.has=function(e){return this.current.hasOwnProperty(e)||this.builtins.hasOwnProperty(e)},t.get=function(e){return this.current.hasOwnProperty(e)?this.current[e]:this.builtins[e]},t.set=function(e,t,r){if(void 0===r&&(r=!1),r){for(var n=0;n<this.undefStack.length;n++)delete this.undefStack[n][e];this.undefStack.length>0&&(this.undefStack[this.undefStack.length-1][e]=t)}else{var a=this.undefStack[this.undefStack.length-1];a&&!a.hasOwnProperty(e)&&(a[e]=this.current[e])}this.current[e]=t},e}(),En=pn;dn(\"\\\\noexpand\",(function(e){var t=e.popToken();return e.isExpandable(t.text)&&(t.noexpand=!0,t.treatAsRelax=!0),{tokens:[t],numArgs:0}})),dn(\"\\\\expandafter\",(function(e){var t=e.popToken();return e.expandOnce(!0),{tokens:[t],numArgs:0}})),dn(\"\\\\@firstoftwo\",(function(e){return{tokens:e.consumeArgs(2)[0],numArgs:0}})),dn(\"\\\\@secondoftwo\",(function(e){return{tokens:e.consumeArgs(2)[1],numArgs:0}})),dn(\"\\\\@ifnextchar\",(function(e){var t=e.consumeArgs(3);e.consumeSpaces();var r=e.future();return 1===t[0].length&&t[0][0].text===r.text?{tokens:t[1],numArgs:0}:{tokens:t[2],numArgs:0}})),dn(\"\\\\@ifstar\",\"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"),dn(\"\\\\TextOrMath\",(function(e){var t=e.consumeArgs(2);return\"text\"===e.mode?{tokens:t[0],numArgs:0}:{tokens:t[1],numArgs:0}}));var Hn={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15};dn(\"\\\\char\",(function(e){var t,r=e.popToken(),a=\"\";if(\"'\"===r.text)t=8,r=e.popToken();else if('\"'===r.text)t=16,r=e.popToken();else if(\"`\"===r.text)if(\"\\\\\"===(r=e.popToken()).text[0])a=r.text.charCodeAt(1);else{if(\"EOF\"===r.text)throw new n(\"\\\\char` missing argument\");a=r.text.charCodeAt(0)}else t=10;if(t){if(null==(a=Hn[r.text])||a>=t)throw new n(\"Invalid base-\"+t+\" digit \"+r.text);for(var i;null!=(i=Hn[e.future().text])&&i<t;)a*=t,a+=i,e.popToken()}return\"\\\\@char{\"+a+\"}\"}));var Ln=function(e,t,r){var a=e.consumeArg().tokens;if(1!==a.length)throw new n(\"\\\\newcommand's first argument must be a macro name\");var i=a[0].text,o=e.isDefined(i);if(o&&!t)throw new n(\"\\\\newcommand{\"+i+\"} attempting to redefine \"+i+\"; use \\\\renewcommand\");if(!o&&!r)throw new n(\"\\\\renewcommand{\"+i+\"} when command \"+i+\" does not yet exist; use \\\\newcommand\");var s=0;if(1===(a=e.consumeArg().tokens).length&&\"[\"===a[0].text){for(var l=\"\",h=e.expandNextToken();\"]\"!==h.text&&\"EOF\"!==h.text;)l+=h.text,h=e.expandNextToken();if(!l.match(/^\\s*[0-9]+\\s*$/))throw new n(\"Invalid number of arguments: \"+l);s=parseInt(l),a=e.consumeArg().tokens}return e.macros.set(i,{tokens:a,numArgs:s}),\"\"};dn(\"\\\\newcommand\",(function(e){return Ln(e,!1,!0)})),dn(\"\\\\renewcommand\",(function(e){return Ln(e,!0,!1)})),dn(\"\\\\providecommand\",(function(e){return Ln(e,!0,!0)})),dn(\"\\\\message\",(function(e){var t=e.consumeArgs(1)[0];return console.log(t.reverse().map((function(e){return e.text})).join(\"\")),\"\"})),dn(\"\\\\errmessage\",(function(e){var t=e.consumeArgs(1)[0];return console.error(t.reverse().map((function(e){return e.text})).join(\"\")),\"\"})),dn(\"\\\\show\",(function(e){var t=e.popToken(),r=t.text;return console.log(t,e.macros.get(r),Nn[r],X.math[r],X.text[r]),\"\"})),dn(\"\\\\bgroup\",\"{\"),dn(\"\\\\egroup\",\"}\"),dn(\"~\",\"\\\\nobreakspace\"),dn(\"\\\\lq\",\"`\"),dn(\"\\\\rq\",\"'\"),dn(\"\\\\aa\",\"\\\\r a\"),dn(\"\\\\AA\",\"\\\\r A\"),dn(\"\\\\textcopyright\",\"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`\\xa9}\"),dn(\"\\\\copyright\",\"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\"),dn(\"\\\\textregistered\",\"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`\\xae}\"),dn(\"\\u212c\",\"\\\\mathscr{B}\"),dn(\"\\u2130\",\"\\\\mathscr{E}\"),dn(\"\\u2131\",\"\\\\mathscr{F}\"),dn(\"\\u210b\",\"\\\\mathscr{H}\"),dn(\"\\u2110\",\"\\\\mathscr{I}\"),dn(\"\\u2112\",\"\\\\mathscr{L}\"),dn(\"\\u2133\",\"\\\\mathscr{M}\"),dn(\"\\u211b\",\"\\\\mathscr{R}\"),dn(\"\\u212d\",\"\\\\mathfrak{C}\"),dn(\"\\u210c\",\"\\\\mathfrak{H}\"),dn(\"\\u2128\",\"\\\\mathfrak{Z}\"),dn(\"\\\\Bbbk\",\"\\\\Bbb{k}\"),dn(\"\\xb7\",\"\\\\cdotp\"),dn(\"\\\\llap\",\"\\\\mathllap{\\\\textrm{#1}}\"),dn(\"\\\\rlap\",\"\\\\mathrlap{\\\\textrm{#1}}\"),dn(\"\\\\clap\",\"\\\\mathclap{\\\\textrm{#1}}\"),dn(\"\\\\mathstrut\",\"\\\\vphantom{(}\"),dn(\"\\\\underbar\",\"\\\\underline{\\\\text{#1}}\"),dn(\"\\\\not\",'\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'),dn(\"\\\\neq\",\"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`\\u2260}}\"),dn(\"\\\\ne\",\"\\\\neq\"),dn(\"\\u2260\",\"\\\\neq\"),dn(\"\\\\notin\",\"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}{\\\\mathrel{\\\\char`\\u2209}}\"),dn(\"\\u2209\",\"\\\\notin\"),dn(\"\\u2258\",\"\\\\html@mathml{\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}}{\\\\mathrel{\\\\char`\\u2258}}\"),dn(\"\\u2259\",\"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\"),dn(\"\\u225a\",\"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225a}}\"),dn(\"\\u225b\",\"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}{\\\\mathrel{\\\\char`\\u225b}}\"),dn(\"\\u225d\",\"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}{\\\\mathrel{\\\\char`\\u225d}}\"),dn(\"\\u225e\",\"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}{\\\\mathrel{\\\\char`\\u225e}}\"),dn(\"\\u225f\",\"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225f}}\"),dn(\"\\u27c2\",\"\\\\perp\"),dn(\"\\u203c\",\"\\\\mathclose{!\\\\mkern-0.8mu!}\"),dn(\"\\u220c\",\"\\\\notni\"),dn(\"\\u231c\",\"\\\\ulcorner\"),dn(\"\\u231d\",\"\\\\urcorner\"),dn(\"\\u231e\",\"\\\\llcorner\"),dn(\"\\u231f\",\"\\\\lrcorner\"),dn(\"\\xa9\",\"\\\\copyright\"),dn(\"\\xae\",\"\\\\textregistered\"),dn(\"\\ufe0f\",\"\\\\textregistered\"),dn(\"\\\\ulcorner\",'\\\\html@mathml{\\\\@ulcorner}{\\\\mathop{\\\\char\"231c}}'),dn(\"\\\\urcorner\",'\\\\html@mathml{\\\\@urcorner}{\\\\mathop{\\\\char\"231d}}'),dn(\"\\\\llcorner\",'\\\\html@mathml{\\\\@llcorner}{\\\\mathop{\\\\char\"231e}}'),dn(\"\\\\lrcorner\",'\\\\html@mathml{\\\\@lrcorner}{\\\\mathop{\\\\char\"231f}}'),dn(\"\\\\vdots\",\"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\"),dn(\"\\u22ee\",\"\\\\vdots\"),dn(\"\\\\varGamma\",\"\\\\mathit{\\\\Gamma}\"),dn(\"\\\\varDelta\",\"\\\\mathit{\\\\Delta}\"),dn(\"\\\\varTheta\",\"\\\\mathit{\\\\Theta}\"),dn(\"\\\\varLambda\",\"\\\\mathit{\\\\Lambda}\"),dn(\"\\\\varXi\",\"\\\\mathit{\\\\Xi}\"),dn(\"\\\\varPi\",\"\\\\mathit{\\\\Pi}\"),dn(\"\\\\varSigma\",\"\\\\mathit{\\\\Sigma}\"),dn(\"\\\\varUpsilon\",\"\\\\mathit{\\\\Upsilon}\"),dn(\"\\\\varPhi\",\"\\\\mathit{\\\\Phi}\"),dn(\"\\\\varPsi\",\"\\\\mathit{\\\\Psi}\"),dn(\"\\\\varOmega\",\"\\\\mathit{\\\\Omega}\"),dn(\"\\\\substack\",\"\\\\begin{subarray}{c}#1\\\\end{subarray}\"),dn(\"\\\\colon\",\"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"),dn(\"\\\\boxed\",\"\\\\fbox{$\\\\displaystyle{#1}$}\"),dn(\"\\\\iff\",\"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\"),dn(\"\\\\implies\",\"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\"),dn(\"\\\\impliedby\",\"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\");var Dn={\",\":\"\\\\dotsc\",\"\\\\not\":\"\\\\dotsb\",\"+\":\"\\\\dotsb\",\"=\":\"\\\\dotsb\",\"<\":\"\\\\dotsb\",\">\":\"\\\\dotsb\",\"-\":\"\\\\dotsb\",\"*\":\"\\\\dotsb\",\":\":\"\\\\dotsb\",\"\\\\DOTSB\":\"\\\\dotsb\",\"\\\\coprod\":\"\\\\dotsb\",\"\\\\bigvee\":\"\\\\dotsb\",\"\\\\bigwedge\":\"\\\\dotsb\",\"\\\\biguplus\":\"\\\\dotsb\",\"\\\\bigcap\":\"\\\\dotsb\",\"\\\\bigcup\":\"\\\\dotsb\",\"\\\\prod\":\"\\\\dotsb\",\"\\\\sum\":\"\\\\dotsb\",\"\\\\bigotimes\":\"\\\\dotsb\",\"\\\\bigoplus\":\"\\\\dotsb\",\"\\\\bigodot\":\"\\\\dotsb\",\"\\\\bigsqcup\":\"\\\\dotsb\",\"\\\\And\":\"\\\\dotsb\",\"\\\\longrightarrow\":\"\\\\dotsb\",\"\\\\Longrightarrow\":\"\\\\dotsb\",\"\\\\longleftarrow\":\"\\\\dotsb\",\"\\\\Longleftarrow\":\"\\\\dotsb\",\"\\\\longleftrightarrow\":\"\\\\dotsb\",\"\\\\Longleftrightarrow\":\"\\\\dotsb\",\"\\\\mapsto\":\"\\\\dotsb\",\"\\\\longmapsto\":\"\\\\dotsb\",\"\\\\hookrightarrow\":\"\\\\dotsb\",\"\\\\doteq\":\"\\\\dotsb\",\"\\\\mathbin\":\"\\\\dotsb\",\"\\\\mathrel\":\"\\\\dotsb\",\"\\\\relbar\":\"\\\\dotsb\",\"\\\\Relbar\":\"\\\\dotsb\",\"\\\\xrightarrow\":\"\\\\dotsb\",\"\\\\xleftarrow\":\"\\\\dotsb\",\"\\\\DOTSI\":\"\\\\dotsi\",\"\\\\int\":\"\\\\dotsi\",\"\\\\oint\":\"\\\\dotsi\",\"\\\\iint\":\"\\\\dotsi\",\"\\\\iiint\":\"\\\\dotsi\",\"\\\\iiiint\":\"\\\\dotsi\",\"\\\\idotsint\":\"\\\\dotsi\",\"\\\\DOTSX\":\"\\\\dotsx\"};dn(\"\\\\dots\",(function(e){var t=\"\\\\dotso\",r=e.expandAfterFuture().text;return r in Dn?t=Dn[r]:(\"\\\\not\"===r.substr(0,4)||r in X.math&&l.contains([\"bin\",\"rel\"],X.math[r].group))&&(t=\"\\\\dotsb\"),t}));var Pn={\")\":!0,\"]\":!0,\"\\\\rbrack\":!0,\"\\\\}\":!0,\"\\\\rbrace\":!0,\"\\\\rangle\":!0,\"\\\\rceil\":!0,\"\\\\rfloor\":!0,\"\\\\rgroup\":!0,\"\\\\rmoustache\":!0,\"\\\\right\":!0,\"\\\\bigr\":!0,\"\\\\biggr\":!0,\"\\\\Bigr\":!0,\"\\\\Biggr\":!0,$:!0,\";\":!0,\".\":!0,\",\":!0};dn(\"\\\\dotso\",(function(e){return e.future().text in Pn?\"\\\\ldots\\\\,\":\"\\\\ldots\"})),dn(\"\\\\dotsc\",(function(e){var t=e.future().text;return t in Pn&&\",\"!==t?\"\\\\ldots\\\\,\":\"\\\\ldots\"})),dn(\"\\\\cdots\",(function(e){return e.future().text in Pn?\"\\\\@cdots\\\\,\":\"\\\\@cdots\"})),dn(\"\\\\dotsb\",\"\\\\cdots\"),dn(\"\\\\dotsm\",\"\\\\cdots\"),dn(\"\\\\dotsi\",\"\\\\!\\\\cdots\"),dn(\"\\\\dotsx\",\"\\\\ldots\\\\,\"),dn(\"\\\\DOTSI\",\"\\\\relax\"),dn(\"\\\\DOTSB\",\"\\\\relax\"),dn(\"\\\\DOTSX\",\"\\\\relax\"),dn(\"\\\\tmspace\",\"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"),dn(\"\\\\,\",\"\\\\tmspace+{3mu}{.1667em}\"),dn(\"\\\\thinspace\",\"\\\\,\"),dn(\"\\\\>\",\"\\\\mskip{4mu}\"),dn(\"\\\\:\",\"\\\\tmspace+{4mu}{.2222em}\"),dn(\"\\\\medspace\",\"\\\\:\"),dn(\"\\\\;\",\"\\\\tmspace+{5mu}{.2777em}\"),dn(\"\\\\thickspace\",\"\\\\;\"),dn(\"\\\\!\",\"\\\\tmspace-{3mu}{.1667em}\"),dn(\"\\\\negthinspace\",\"\\\\!\"),dn(\"\\\\negmedspace\",\"\\\\tmspace-{4mu}{.2222em}\"),dn(\"\\\\negthickspace\",\"\\\\tmspace-{5mu}{.277em}\"),dn(\"\\\\enspace\",\"\\\\kern.5em \"),dn(\"\\\\enskip\",\"\\\\hskip.5em\\\\relax\"),dn(\"\\\\quad\",\"\\\\hskip1em\\\\relax\"),dn(\"\\\\qquad\",\"\\\\hskip2em\\\\relax\"),dn(\"\\\\tag\",\"\\\\@ifstar\\\\tag@literal\\\\tag@paren\"),dn(\"\\\\tag@paren\",\"\\\\tag@literal{({#1})}\"),dn(\"\\\\tag@literal\",(function(e){if(e.macros.get(\"\\\\df@tag\"))throw new n(\"Multiple \\\\tag\");return\"\\\\gdef\\\\df@tag{\\\\text{#1}}\"})),dn(\"\\\\bmod\",\"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\\\\mathbin{\\\\rm mod}\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\"),dn(\"\\\\pod\",\"\\\\allowbreak\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\"),dn(\"\\\\pmod\",\"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\"),dn(\"\\\\mod\",\"\\\\allowbreak\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\rm mod}\\\\,\\\\,#1\"),dn(\"\\\\pmb\",\"\\\\html@mathml{\\\\@binrel{#1}{\\\\mathrlap{#1}\\\\kern0.5px#1}}{\\\\mathbf{#1}}\"),dn(\"\\\\newline\",\"\\\\\\\\\\\\relax\"),dn(\"\\\\TeX\",\"\\\\textrm{\\\\html@mathml{T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX}{TeX}}\");var Fn=D[\"Main-Regular\"][\"T\".charCodeAt(0)][1]-.7*D[\"Main-Regular\"][\"A\".charCodeAt(0)][1]+\"em\";dn(\"\\\\LaTeX\",\"\\\\textrm{\\\\html@mathml{L\\\\kern-.36em\\\\raisebox{\"+Fn+\"}{\\\\scriptstyle A}\\\\kern-.15em\\\\TeX}{LaTeX}}\"),dn(\"\\\\KaTeX\",\"\\\\textrm{\\\\html@mathml{K\\\\kern-.17em\\\\raisebox{\"+Fn+\"}{\\\\scriptstyle A}\\\\kern-.15em\\\\TeX}{KaTeX}}\"),dn(\"\\\\hspace\",\"\\\\@ifstar\\\\@hspacer\\\\@hspace\"),dn(\"\\\\@hspace\",\"\\\\hskip #1\\\\relax\"),dn(\"\\\\@hspacer\",\"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"),dn(\"\\\\ordinarycolon\",\":\"),dn(\"\\\\vcentcolon\",\"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"),dn(\"\\\\dblcolon\",'\\\\html@mathml{\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}{\\\\mathop{\\\\char\"2237}}'),dn(\"\\\\coloneqq\",'\\\\html@mathml{\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}{\\\\mathop{\\\\char\"2254}}'),dn(\"\\\\Coloneqq\",'\\\\html@mathml{\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}{\\\\mathop{\\\\char\"2237\\\\char\"3d}}'),dn(\"\\\\coloneq\",'\\\\html@mathml{\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}{\\\\mathop{\\\\char\"3a\\\\char\"2212}}'),dn(\"\\\\Coloneq\",'\\\\html@mathml{\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}{\\\\mathop{\\\\char\"2237\\\\char\"2212}}'),dn(\"\\\\eqqcolon\",'\\\\html@mathml{\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}{\\\\mathop{\\\\char\"2255}}'),dn(\"\\\\Eqqcolon\",'\\\\html@mathml{\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}{\\\\mathop{\\\\char\"3d\\\\char\"2237}}'),dn(\"\\\\eqcolon\",'\\\\html@mathml{\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}{\\\\mathop{\\\\char\"2239}}'),dn(\"\\\\Eqcolon\",'\\\\html@mathml{\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}{\\\\mathop{\\\\char\"2212\\\\char\"2237}}'),dn(\"\\\\colonapprox\",'\\\\html@mathml{\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}{\\\\mathop{\\\\char\"3a\\\\char\"2248}}'),dn(\"\\\\Colonapprox\",'\\\\html@mathml{\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}{\\\\mathop{\\\\char\"2237\\\\char\"2248}}'),dn(\"\\\\colonsim\",'\\\\html@mathml{\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}{\\\\mathop{\\\\char\"3a\\\\char\"223c}}'),dn(\"\\\\Colonsim\",'\\\\html@mathml{\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}{\\\\mathop{\\\\char\"2237\\\\char\"223c}}'),dn(\"\\u2237\",\"\\\\dblcolon\"),dn(\"\\u2239\",\"\\\\eqcolon\"),dn(\"\\u2254\",\"\\\\coloneqq\"),dn(\"\\u2255\",\"\\\\eqqcolon\"),dn(\"\\u2a74\",\"\\\\Coloneqq\"),dn(\"\\\\ratio\",\"\\\\vcentcolon\"),dn(\"\\\\coloncolon\",\"\\\\dblcolon\"),dn(\"\\\\colonequals\",\"\\\\coloneqq\"),dn(\"\\\\coloncolonequals\",\"\\\\Coloneqq\"),dn(\"\\\\equalscolon\",\"\\\\eqqcolon\"),dn(\"\\\\equalscoloncolon\",\"\\\\Eqqcolon\"),dn(\"\\\\colonminus\",\"\\\\coloneq\"),dn(\"\\\\coloncolonminus\",\"\\\\Coloneq\"),dn(\"\\\\minuscolon\",\"\\\\eqcolon\"),dn(\"\\\\minuscoloncolon\",\"\\\\Eqcolon\"),dn(\"\\\\coloncolonapprox\",\"\\\\Colonapprox\"),dn(\"\\\\coloncolonsim\",\"\\\\Colonsim\"),dn(\"\\\\simcolon\",\"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\"),dn(\"\\\\simcoloncolon\",\"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"),dn(\"\\\\approxcolon\",\"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\"),dn(\"\\\\approxcoloncolon\",\"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"),dn(\"\\\\notni\",\"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220c}}\"),dn(\"\\\\limsup\",\"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\"),dn(\"\\\\liminf\",\"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\"),dn(\"\\\\injlim\",\"\\\\DOTSB\\\\operatorname*{inj\\\\,lim}\"),dn(\"\\\\projlim\",\"\\\\DOTSB\\\\operatorname*{proj\\\\,lim}\"),dn(\"\\\\varlimsup\",\"\\\\DOTSB\\\\operatorname*{\\\\overline{lim}}\"),dn(\"\\\\varliminf\",\"\\\\DOTSB\\\\operatorname*{\\\\underline{lim}}\"),dn(\"\\\\varinjlim\",\"\\\\DOTSB\\\\operatorname*{\\\\underrightarrow{lim}}\"),dn(\"\\\\varprojlim\",\"\\\\DOTSB\\\\operatorname*{\\\\underleftarrow{lim}}\"),dn(\"\\\\gvertneqq\",\"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\"),dn(\"\\\\lvertneqq\",\"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\"),dn(\"\\\\ngeqq\",\"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\"),dn(\"\\\\ngeqslant\",\"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\"),dn(\"\\\\nleqq\",\"\\\\html@mathml{\\\\@nleqq}{\\u2270}\"),dn(\"\\\\nleqslant\",\"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\"),dn(\"\\\\nshortmid\",\"\\\\html@mathml{\\\\@nshortmid}{\\u2224}\"),dn(\"\\\\nshortparallel\",\"\\\\html@mathml{\\\\@nshortparallel}{\\u2226}\"),dn(\"\\\\nsubseteqq\",\"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\"),dn(\"\\\\nsupseteqq\",\"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\"),dn(\"\\\\varsubsetneq\",\"\\\\html@mathml{\\\\@varsubsetneq}{\\u228a}\"),dn(\"\\\\varsubsetneqq\",\"\\\\html@mathml{\\\\@varsubsetneqq}{\\u2acb}\"),dn(\"\\\\varsupsetneq\",\"\\\\html@mathml{\\\\@varsupsetneq}{\\u228b}\"),dn(\"\\\\varsupsetneqq\",\"\\\\html@mathml{\\\\@varsupsetneqq}{\\u2acc}\"),dn(\"\\\\imath\",\"\\\\html@mathml{\\\\@imath}{\\u0131}\"),dn(\"\\\\jmath\",\"\\\\html@mathml{\\\\@jmath}{\\u0237}\"),dn(\"\\\\llbracket\",\"\\\\html@mathml{\\\\mathopen{[\\\\mkern-3.2mu[}}{\\\\mathopen{\\\\char`\\u27e6}}\"),dn(\"\\\\rrbracket\",\"\\\\html@mathml{\\\\mathclose{]\\\\mkern-3.2mu]}}{\\\\mathclose{\\\\char`\\u27e7}}\"),dn(\"\\u27e6\",\"\\\\llbracket\"),dn(\"\\u27e7\",\"\\\\rrbracket\"),dn(\"\\\\lBrace\",\"\\\\html@mathml{\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}{\\\\mathopen{\\\\char`\\u2983}}\"),dn(\"\\\\rBrace\",\"\\\\html@mathml{\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}{\\\\mathclose{\\\\char`\\u2984}}\"),dn(\"\\u2983\",\"\\\\lBrace\"),dn(\"\\u2984\",\"\\\\rBrace\"),dn(\"\\\\minuso\",\"\\\\mathbin{\\\\html@mathml{{\\\\mathrlap{\\\\mathchoice{\\\\kern{0.145em}}{\\\\kern{0.145em}}{\\\\kern{0.1015em}}{\\\\kern{0.0725em}}\\\\circ}{-}}}{\\\\char`\\u29b5}}\"),dn(\"\\u29b5\",\"\\\\minuso\"),dn(\"\\\\darr\",\"\\\\downarrow\"),dn(\"\\\\dArr\",\"\\\\Downarrow\"),dn(\"\\\\Darr\",\"\\\\Downarrow\"),dn(\"\\\\lang\",\"\\\\langle\"),dn(\"\\\\rang\",\"\\\\rangle\"),dn(\"\\\\uarr\",\"\\\\uparrow\"),dn(\"\\\\uArr\",\"\\\\Uparrow\"),dn(\"\\\\Uarr\",\"\\\\Uparrow\"),dn(\"\\\\N\",\"\\\\mathbb{N}\"),dn(\"\\\\R\",\"\\\\mathbb{R}\"),dn(\"\\\\Z\",\"\\\\mathbb{Z}\"),dn(\"\\\\alef\",\"\\\\aleph\"),dn(\"\\\\alefsym\",\"\\\\aleph\"),dn(\"\\\\Alpha\",\"\\\\mathrm{A}\"),dn(\"\\\\Beta\",\"\\\\mathrm{B}\"),dn(\"\\\\bull\",\"\\\\bullet\"),dn(\"\\\\Chi\",\"\\\\mathrm{X}\"),dn(\"\\\\clubs\",\"\\\\clubsuit\"),dn(\"\\\\cnums\",\"\\\\mathbb{C}\"),dn(\"\\\\Complex\",\"\\\\mathbb{C}\"),dn(\"\\\\Dagger\",\"\\\\ddagger\"),dn(\"\\\\diamonds\",\"\\\\diamondsuit\"),dn(\"\\\\empty\",\"\\\\emptyset\"),dn(\"\\\\Epsilon\",\"\\\\mathrm{E}\"),dn(\"\\\\Eta\",\"\\\\mathrm{H}\"),dn(\"\\\\exist\",\"\\\\exists\"),dn(\"\\\\harr\",\"\\\\leftrightarrow\"),dn(\"\\\\hArr\",\"\\\\Leftrightarrow\"),dn(\"\\\\Harr\",\"\\\\Leftrightarrow\"),dn(\"\\\\hearts\",\"\\\\heartsuit\"),dn(\"\\\\image\",\"\\\\Im\"),dn(\"\\\\infin\",\"\\\\infty\"),dn(\"\\\\Iota\",\"\\\\mathrm{I}\"),dn(\"\\\\isin\",\"\\\\in\"),dn(\"\\\\Kappa\",\"\\\\mathrm{K}\"),dn(\"\\\\larr\",\"\\\\leftarrow\"),dn(\"\\\\lArr\",\"\\\\Leftarrow\"),dn(\"\\\\Larr\",\"\\\\Leftarrow\"),dn(\"\\\\lrarr\",\"\\\\leftrightarrow\"),dn(\"\\\\lrArr\",\"\\\\Leftrightarrow\"),dn(\"\\\\Lrarr\",\"\\\\Leftrightarrow\"),dn(\"\\\\Mu\",\"\\\\mathrm{M}\"),dn(\"\\\\natnums\",\"\\\\mathbb{N}\"),dn(\"\\\\Nu\",\"\\\\mathrm{N}\"),dn(\"\\\\Omicron\",\"\\\\mathrm{O}\"),dn(\"\\\\plusmn\",\"\\\\pm\"),dn(\"\\\\rarr\",\"\\\\rightarrow\"),dn(\"\\\\rArr\",\"\\\\Rightarrow\"),dn(\"\\\\Rarr\",\"\\\\Rightarrow\"),dn(\"\\\\real\",\"\\\\Re\"),dn(\"\\\\reals\",\"\\\\mathbb{R}\"),dn(\"\\\\Reals\",\"\\\\mathbb{R}\"),dn(\"\\\\Rho\",\"\\\\mathrm{P}\"),dn(\"\\\\sdot\",\"\\\\cdot\"),dn(\"\\\\sect\",\"\\\\S\"),dn(\"\\\\spades\",\"\\\\spadesuit\"),dn(\"\\\\sub\",\"\\\\subset\"),dn(\"\\\\sube\",\"\\\\subseteq\"),dn(\"\\\\supe\",\"\\\\supseteq\"),dn(\"\\\\Tau\",\"\\\\mathrm{T}\"),dn(\"\\\\thetasym\",\"\\\\vartheta\"),dn(\"\\\\weierp\",\"\\\\wp\"),dn(\"\\\\Zeta\",\"\\\\mathrm{Z}\"),dn(\"\\\\argmin\",\"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\"),dn(\"\\\\argmax\",\"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\"),dn(\"\\\\plim\",\"\\\\DOTSB\\\\mathop{\\\\operatorname{plim}}\\\\limits\"),dn(\"\\\\bra\",\"\\\\mathinner{\\\\langle{#1}|}\"),dn(\"\\\\ket\",\"\\\\mathinner{|{#1}\\\\rangle}\"),dn(\"\\\\braket\",\"\\\\mathinner{\\\\langle{#1}\\\\rangle}\"),dn(\"\\\\Bra\",\"\\\\left\\\\langle#1\\\\right|\"),dn(\"\\\\Ket\",\"\\\\left|#1\\\\right\\\\rangle\"),dn(\"\\\\angln\",\"{\\\\angl n}\"),dn(\"\\\\blue\",\"\\\\textcolor{##6495ed}{#1}\"),dn(\"\\\\orange\",\"\\\\textcolor{##ffa500}{#1}\"),dn(\"\\\\pink\",\"\\\\textcolor{##ff00af}{#1}\"),dn(\"\\\\red\",\"\\\\textcolor{##df0030}{#1}\"),dn(\"\\\\green\",\"\\\\textcolor{##28ae7b}{#1}\"),dn(\"\\\\gray\",\"\\\\textcolor{gray}{#1}\"),dn(\"\\\\purple\",\"\\\\textcolor{##9d38bd}{#1}\"),dn(\"\\\\blueA\",\"\\\\textcolor{##ccfaff}{#1}\"),dn(\"\\\\blueB\",\"\\\\textcolor{##80f6ff}{#1}\"),dn(\"\\\\blueC\",\"\\\\textcolor{##63d9ea}{#1}\"),dn(\"\\\\blueD\",\"\\\\textcolor{##11accd}{#1}\"),dn(\"\\\\blueE\",\"\\\\textcolor{##0c7f99}{#1}\"),dn(\"\\\\tealA\",\"\\\\textcolor{##94fff5}{#1}\"),dn(\"\\\\tealB\",\"\\\\textcolor{##26edd5}{#1}\"),dn(\"\\\\tealC\",\"\\\\textcolor{##01d1c1}{#1}\"),dn(\"\\\\tealD\",\"\\\\textcolor{##01a995}{#1}\"),dn(\"\\\\tealE\",\"\\\\textcolor{##208170}{#1}\"),dn(\"\\\\greenA\",\"\\\\textcolor{##b6ffb0}{#1}\"),dn(\"\\\\greenB\",\"\\\\textcolor{##8af281}{#1}\"),dn(\"\\\\greenC\",\"\\\\textcolor{##74cf70}{#1}\"),dn(\"\\\\greenD\",\"\\\\textcolor{##1fab54}{#1}\"),dn(\"\\\\greenE\",\"\\\\textcolor{##0d923f}{#1}\"),dn(\"\\\\goldA\",\"\\\\textcolor{##ffd0a9}{#1}\"),dn(\"\\\\goldB\",\"\\\\textcolor{##ffbb71}{#1}\"),dn(\"\\\\goldC\",\"\\\\textcolor{##ff9c39}{#1}\"),dn(\"\\\\goldD\",\"\\\\textcolor{##e07d10}{#1}\"),dn(\"\\\\goldE\",\"\\\\textcolor{##a75a05}{#1}\"),dn(\"\\\\redA\",\"\\\\textcolor{##fca9a9}{#1}\"),dn(\"\\\\redB\",\"\\\\textcolor{##ff8482}{#1}\"),dn(\"\\\\redC\",\"\\\\textcolor{##f9685d}{#1}\"),dn(\"\\\\redD\",\"\\\\textcolor{##e84d39}{#1}\"),dn(\"\\\\redE\",\"\\\\textcolor{##bc2612}{#1}\"),dn(\"\\\\maroonA\",\"\\\\textcolor{##ffbde0}{#1}\"),dn(\"\\\\maroonB\",\"\\\\textcolor{##ff92c6}{#1}\"),dn(\"\\\\maroonC\",\"\\\\textcolor{##ed5fa6}{#1}\"),dn(\"\\\\maroonD\",\"\\\\textcolor{##ca337c}{#1}\"),dn(\"\\\\maroonE\",\"\\\\textcolor{##9e034e}{#1}\"),dn(\"\\\\purpleA\",\"\\\\textcolor{##ddd7ff}{#1}\"),dn(\"\\\\purpleB\",\"\\\\textcolor{##c6b9fc}{#1}\"),dn(\"\\\\purpleC\",\"\\\\textcolor{##aa87ff}{#1}\"),dn(\"\\\\purpleD\",\"\\\\textcolor{##7854ab}{#1}\"),dn(\"\\\\purpleE\",\"\\\\textcolor{##543b78}{#1}\"),dn(\"\\\\mintA\",\"\\\\textcolor{##f5f9e8}{#1}\"),dn(\"\\\\mintB\",\"\\\\textcolor{##edf2df}{#1}\"),dn(\"\\\\mintC\",\"\\\\textcolor{##e0e5cc}{#1}\"),dn(\"\\\\grayA\",\"\\\\textcolor{##f6f7f7}{#1}\"),dn(\"\\\\grayB\",\"\\\\textcolor{##f0f1f2}{#1}\"),dn(\"\\\\grayC\",\"\\\\textcolor{##e3e5e6}{#1}\"),dn(\"\\\\grayD\",\"\\\\textcolor{##d6d8da}{#1}\"),dn(\"\\\\grayE\",\"\\\\textcolor{##babec2}{#1}\"),dn(\"\\\\grayF\",\"\\\\textcolor{##888d93}{#1}\"),dn(\"\\\\grayG\",\"\\\\textcolor{##626569}{#1}\"),dn(\"\\\\grayH\",\"\\\\textcolor{##3b3e40}{#1}\"),dn(\"\\\\grayI\",\"\\\\textcolor{##21242c}{#1}\"),dn(\"\\\\kaBlue\",\"\\\\textcolor{##314453}{#1}\"),dn(\"\\\\kaGreen\",\"\\\\textcolor{##71B307}{#1}\");var Vn={\"\\\\relax\":!0,\"^\":!0,_:!0,\"\\\\limits\":!0,\"\\\\nolimits\":!0},Gn=function(){function e(e,t,r){this.settings=void 0,this.expansionCount=void 0,this.lexer=void 0,this.macros=void 0,this.stack=void 0,this.mode=void 0,this.settings=t,this.expansionCount=0,this.feed(e),this.macros=new On(En,t.macros),this.mode=r,this.stack=[]}var t=e.prototype;return t.feed=function(e){this.lexer=new Rn(e,this.settings)},t.switchMode=function(e){this.mode=e},t.beginGroup=function(){this.macros.beginGroup()},t.endGroup=function(){this.macros.endGroup()},t.endGroups=function(){this.macros.endGroups()},t.future=function(){return 0===this.stack.length&&this.pushToken(this.lexer.lex()),this.stack[this.stack.length-1]},t.popToken=function(){return this.future(),this.stack.pop()},t.pushToken=function(e){this.stack.push(e)},t.pushTokens=function(e){var t;(t=this.stack).push.apply(t,e)},t.scanArgument=function(e){var t,r,n;if(e){if(this.consumeSpaces(),\"[\"!==this.future().text)return null;t=this.popToken();var a=this.consumeArg([\"]\"]);n=a.tokens,r=a.end}else{var i=this.consumeArg();n=i.tokens,t=i.start,r=i.end}return this.pushToken(new Cn(\"EOF\",r.loc)),this.pushTokens(n),t.range(r,\"\")},t.consumeSpaces=function(){for(;;){if(\" \"!==this.future().text)break;this.stack.pop()}},t.consumeArg=function(e){var t=[],r=e&&e.length>0;r||this.consumeSpaces();var a,i=this.future(),o=0,s=0;do{if(a=this.popToken(),t.push(a),\"{\"===a.text)++o;else if(\"}\"===a.text){if(-1===--o)throw new n(\"Extra }\",a)}else if(\"EOF\"===a.text)throw new n(\"Unexpected end of input in a macro argument, expected '\"+(e&&r?e[s]:\"}\")+\"'\",a);if(e&&r)if((0===o||1===o&&\"{\"===e[s])&&a.text===e[s]){if(++s===e.length){t.splice(-s,s);break}}else s=0}while(0!==o||r);return\"{\"===i.text&&\"}\"===t[t.length-1].text&&(t.pop(),t.shift()),t.reverse(),{tokens:t,start:i,end:a}},t.consumeArgs=function(e,t){if(t){if(t.length!==e+1)throw new n(\"The length of delimiters doesn't match the number of args!\");for(var r=t[0],a=0;a<r.length;a++){var i=this.popToken();if(r[a]!==i.text)throw new n(\"Use of the macro doesn't match its definition\",i)}}for(var o=[],s=0;s<e;s++)o.push(this.consumeArg(t&&t[s+1]).tokens);return o},t.expandOnce=function(e){var t=this.popToken(),r=t.text,a=t.noexpand?null:this._getExpansion(r);if(null==a||e&&a.unexpandable){if(e&&null==a&&\"\\\\\"===r[0]&&!this.isDefined(r))throw new n(\"Undefined control sequence: \"+r);return this.pushToken(t),t}if(this.expansionCount++,this.expansionCount>this.settings.maxExpand)throw new n(\"Too many expansions: infinite loop or need to increase maxExpand setting\");var i=a.tokens,o=this.consumeArgs(a.numArgs,a.delimiters);if(a.numArgs)for(var s=(i=i.slice()).length-1;s>=0;--s){var l=i[s];if(\"#\"===l.text){if(0===s)throw new n(\"Incomplete placeholder at end of macro body\",l);if(\"#\"===(l=i[--s]).text)i.splice(s+1,1);else{if(!/^[1-9]$/.test(l.text))throw new n(\"Not a valid argument number\",l);var h;(h=i).splice.apply(h,[s,2].concat(o[+l.text-1]))}}}return this.pushTokens(i),i},t.expandAfterFuture=function(){return this.expandOnce(),this.future()},t.expandNextToken=function(){for(;;){var e=this.expandOnce();if(e instanceof Cn){if(\"\\\\relax\"!==e.text&&!e.treatAsRelax)return this.stack.pop();this.stack.pop()}}throw new Error},t.expandMacro=function(e){return this.macros.has(e)?this.expandTokens([new Cn(e)]):void 0},t.expandTokens=function(e){var t=[],r=this.stack.length;for(this.pushTokens(e);this.stack.length>r;){var n=this.expandOnce(!0);n instanceof Cn&&(n.treatAsRelax&&(n.noexpand=!1,n.treatAsRelax=!1),t.push(this.stack.pop()))}return t},t.expandMacroAsText=function(e){var t=this.expandMacro(e);return t?t.map((function(e){return e.text})).join(\"\"):t},t._getExpansion=function(e){var t=this.macros.get(e);if(null==t)return t;if(1===e.length){var r=this.lexer.catcodes[e];if(null!=r&&13!==r)return}var n=\"function\"==typeof t?t(this):t;if(\"string\"==typeof n){var a=0;if(-1!==n.indexOf(\"#\"))for(var i=n.replace(/##/g,\"\");-1!==i.indexOf(\"#\"+(a+1));)++a;for(var o=new Rn(n,this.settings),s=[],l=o.lex();\"EOF\"!==l.text;)s.push(l),l=o.lex();return s.reverse(),{tokens:s,numArgs:a}}return n},t.isDefined=function(e){return this.macros.has(e)||Nn.hasOwnProperty(e)||X.math.hasOwnProperty(e)||X.text.hasOwnProperty(e)||Vn.hasOwnProperty(e)},t.isExpandable=function(e){var t=this.macros.get(e);return null!=t?\"string\"==typeof t||\"function\"==typeof t||!t.unexpandable:Nn.hasOwnProperty(e)&&!Nn[e].primitive},e}(),Un={\"\\u0301\":{text:\"\\\\'\",math:\"\\\\acute\"},\"\\u0300\":{text:\"\\\\`\",math:\"\\\\grave\"},\"\\u0308\":{text:'\\\\\"',math:\"\\\\ddot\"},\"\\u0303\":{text:\"\\\\~\",math:\"\\\\tilde\"},\"\\u0304\":{text:\"\\\\=\",math:\"\\\\bar\"},\"\\u0306\":{text:\"\\\\u\",math:\"\\\\breve\"},\"\\u030c\":{text:\"\\\\v\",math:\"\\\\check\"},\"\\u0302\":{text:\"\\\\^\",math:\"\\\\hat\"},\"\\u0307\":{text:\"\\\\.\",math:\"\\\\dot\"},\"\\u030a\":{text:\"\\\\r\",math:\"\\\\mathring\"},\"\\u030b\":{text:\"\\\\H\"},\"\\u0327\":{text:\"\\\\c\"}},Yn={\"\\xe1\":\"a\\u0301\",\"\\xe0\":\"a\\u0300\",\"\\xe4\":\"a\\u0308\",\"\\u01df\":\"a\\u0308\\u0304\",\"\\xe3\":\"a\\u0303\",\"\\u0101\":\"a\\u0304\",\"\\u0103\":\"a\\u0306\",\"\\u1eaf\":\"a\\u0306\\u0301\",\"\\u1eb1\":\"a\\u0306\\u0300\",\"\\u1eb5\":\"a\\u0306\\u0303\",\"\\u01ce\":\"a\\u030c\",\"\\xe2\":\"a\\u0302\",\"\\u1ea5\":\"a\\u0302\\u0301\",\"\\u1ea7\":\"a\\u0302\\u0300\",\"\\u1eab\":\"a\\u0302\\u0303\",\"\\u0227\":\"a\\u0307\",\"\\u01e1\":\"a\\u0307\\u0304\",\"\\xe5\":\"a\\u030a\",\"\\u01fb\":\"a\\u030a\\u0301\",\"\\u1e03\":\"b\\u0307\",\"\\u0107\":\"c\\u0301\",\"\\u1e09\":\"c\\u0327\\u0301\",\"\\u010d\":\"c\\u030c\",\"\\u0109\":\"c\\u0302\",\"\\u010b\":\"c\\u0307\",\"\\xe7\":\"c\\u0327\",\"\\u010f\":\"d\\u030c\",\"\\u1e0b\":\"d\\u0307\",\"\\u1e11\":\"d\\u0327\",\"\\xe9\":\"e\\u0301\",\"\\xe8\":\"e\\u0300\",\"\\xeb\":\"e\\u0308\",\"\\u1ebd\":\"e\\u0303\",\"\\u0113\":\"e\\u0304\",\"\\u1e17\":\"e\\u0304\\u0301\",\"\\u1e15\":\"e\\u0304\\u0300\",\"\\u0115\":\"e\\u0306\",\"\\u1e1d\":\"e\\u0327\\u0306\",\"\\u011b\":\"e\\u030c\",\"\\xea\":\"e\\u0302\",\"\\u1ebf\":\"e\\u0302\\u0301\",\"\\u1ec1\":\"e\\u0302\\u0300\",\"\\u1ec5\":\"e\\u0302\\u0303\",\"\\u0117\":\"e\\u0307\",\"\\u0229\":\"e\\u0327\",\"\\u1e1f\":\"f\\u0307\",\"\\u01f5\":\"g\\u0301\",\"\\u1e21\":\"g\\u0304\",\"\\u011f\":\"g\\u0306\",\"\\u01e7\":\"g\\u030c\",\"\\u011d\":\"g\\u0302\",\"\\u0121\":\"g\\u0307\",\"\\u0123\":\"g\\u0327\",\"\\u1e27\":\"h\\u0308\",\"\\u021f\":\"h\\u030c\",\"\\u0125\":\"h\\u0302\",\"\\u1e23\":\"h\\u0307\",\"\\u1e29\":\"h\\u0327\",\"\\xed\":\"i\\u0301\",\"\\xec\":\"i\\u0300\",\"\\xef\":\"i\\u0308\",\"\\u1e2f\":\"i\\u0308\\u0301\",\"\\u0129\":\"i\\u0303\",\"\\u012b\":\"i\\u0304\",\"\\u012d\":\"i\\u0306\",\"\\u01d0\":\"i\\u030c\",\"\\xee\":\"i\\u0302\",\"\\u01f0\":\"j\\u030c\",\"\\u0135\":\"j\\u0302\",\"\\u1e31\":\"k\\u0301\",\"\\u01e9\":\"k\\u030c\",\"\\u0137\":\"k\\u0327\",\"\\u013a\":\"l\\u0301\",\"\\u013e\":\"l\\u030c\",\"\\u013c\":\"l\\u0327\",\"\\u1e3f\":\"m\\u0301\",\"\\u1e41\":\"m\\u0307\",\"\\u0144\":\"n\\u0301\",\"\\u01f9\":\"n\\u0300\",\"\\xf1\":\"n\\u0303\",\"\\u0148\":\"n\\u030c\",\"\\u1e45\":\"n\\u0307\",\"\\u0146\":\"n\\u0327\",\"\\xf3\":\"o\\u0301\",\"\\xf2\":\"o\\u0300\",\"\\xf6\":\"o\\u0308\",\"\\u022b\":\"o\\u0308\\u0304\",\"\\xf5\":\"o\\u0303\",\"\\u1e4d\":\"o\\u0303\\u0301\",\"\\u1e4f\":\"o\\u0303\\u0308\",\"\\u022d\":\"o\\u0303\\u0304\",\"\\u014d\":\"o\\u0304\",\"\\u1e53\":\"o\\u0304\\u0301\",\"\\u1e51\":\"o\\u0304\\u0300\",\"\\u014f\":\"o\\u0306\",\"\\u01d2\":\"o\\u030c\",\"\\xf4\":\"o\\u0302\",\"\\u1ed1\":\"o\\u0302\\u0301\",\"\\u1ed3\":\"o\\u0302\\u0300\",\"\\u1ed7\":\"o\\u0302\\u0303\",\"\\u022f\":\"o\\u0307\",\"\\u0231\":\"o\\u0307\\u0304\",\"\\u0151\":\"o\\u030b\",\"\\u1e55\":\"p\\u0301\",\"\\u1e57\":\"p\\u0307\",\"\\u0155\":\"r\\u0301\",\"\\u0159\":\"r\\u030c\",\"\\u1e59\":\"r\\u0307\",\"\\u0157\":\"r\\u0327\",\"\\u015b\":\"s\\u0301\",\"\\u1e65\":\"s\\u0301\\u0307\",\"\\u0161\":\"s\\u030c\",\"\\u1e67\":\"s\\u030c\\u0307\",\"\\u015d\":\"s\\u0302\",\"\\u1e61\":\"s\\u0307\",\"\\u015f\":\"s\\u0327\",\"\\u1e97\":\"t\\u0308\",\"\\u0165\":\"t\\u030c\",\"\\u1e6b\":\"t\\u0307\",\"\\u0163\":\"t\\u0327\",\"\\xfa\":\"u\\u0301\",\"\\xf9\":\"u\\u0300\",\"\\xfc\":\"u\\u0308\",\"\\u01d8\":\"u\\u0308\\u0301\",\"\\u01dc\":\"u\\u0308\\u0300\",\"\\u01d6\":\"u\\u0308\\u0304\",\"\\u01da\":\"u\\u0308\\u030c\",\"\\u0169\":\"u\\u0303\",\"\\u1e79\":\"u\\u0303\\u0301\",\"\\u016b\":\"u\\u0304\",\"\\u1e7b\":\"u\\u0304\\u0308\",\"\\u016d\":\"u\\u0306\",\"\\u01d4\":\"u\\u030c\",\"\\xfb\":\"u\\u0302\",\"\\u016f\":\"u\\u030a\",\"\\u0171\":\"u\\u030b\",\"\\u1e7d\":\"v\\u0303\",\"\\u1e83\":\"w\\u0301\",\"\\u1e81\":\"w\\u0300\",\"\\u1e85\":\"w\\u0308\",\"\\u0175\":\"w\\u0302\",\"\\u1e87\":\"w\\u0307\",\"\\u1e98\":\"w\\u030a\",\"\\u1e8d\":\"x\\u0308\",\"\\u1e8b\":\"x\\u0307\",\"\\xfd\":\"y\\u0301\",\"\\u1ef3\":\"y\\u0300\",\"\\xff\":\"y\\u0308\",\"\\u1ef9\":\"y\\u0303\",\"\\u0233\":\"y\\u0304\",\"\\u0177\":\"y\\u0302\",\"\\u1e8f\":\"y\\u0307\",\"\\u1e99\":\"y\\u030a\",\"\\u017a\":\"z\\u0301\",\"\\u017e\":\"z\\u030c\",\"\\u1e91\":\"z\\u0302\",\"\\u017c\":\"z\\u0307\",\"\\xc1\":\"A\\u0301\",\"\\xc0\":\"A\\u0300\",\"\\xc4\":\"A\\u0308\",\"\\u01de\":\"A\\u0308\\u0304\",\"\\xc3\":\"A\\u0303\",\"\\u0100\":\"A\\u0304\",\"\\u0102\":\"A\\u0306\",\"\\u1eae\":\"A\\u0306\\u0301\",\"\\u1eb0\":\"A\\u0306\\u0300\",\"\\u1eb4\":\"A\\u0306\\u0303\",\"\\u01cd\":\"A\\u030c\",\"\\xc2\":\"A\\u0302\",\"\\u1ea4\":\"A\\u0302\\u0301\",\"\\u1ea6\":\"A\\u0302\\u0300\",\"\\u1eaa\":\"A\\u0302\\u0303\",\"\\u0226\":\"A\\u0307\",\"\\u01e0\":\"A\\u0307\\u0304\",\"\\xc5\":\"A\\u030a\",\"\\u01fa\":\"A\\u030a\\u0301\",\"\\u1e02\":\"B\\u0307\",\"\\u0106\":\"C\\u0301\",\"\\u1e08\":\"C\\u0327\\u0301\",\"\\u010c\":\"C\\u030c\",\"\\u0108\":\"C\\u0302\",\"\\u010a\":\"C\\u0307\",\"\\xc7\":\"C\\u0327\",\"\\u010e\":\"D\\u030c\",\"\\u1e0a\":\"D\\u0307\",\"\\u1e10\":\"D\\u0327\",\"\\xc9\":\"E\\u0301\",\"\\xc8\":\"E\\u0300\",\"\\xcb\":\"E\\u0308\",\"\\u1ebc\":\"E\\u0303\",\"\\u0112\":\"E\\u0304\",\"\\u1e16\":\"E\\u0304\\u0301\",\"\\u1e14\":\"E\\u0304\\u0300\",\"\\u0114\":\"E\\u0306\",\"\\u1e1c\":\"E\\u0327\\u0306\",\"\\u011a\":\"E\\u030c\",\"\\xca\":\"E\\u0302\",\"\\u1ebe\":\"E\\u0302\\u0301\",\"\\u1ec0\":\"E\\u0302\\u0300\",\"\\u1ec4\":\"E\\u0302\\u0303\",\"\\u0116\":\"E\\u0307\",\"\\u0228\":\"E\\u0327\",\"\\u1e1e\":\"F\\u0307\",\"\\u01f4\":\"G\\u0301\",\"\\u1e20\":\"G\\u0304\",\"\\u011e\":\"G\\u0306\",\"\\u01e6\":\"G\\u030c\",\"\\u011c\":\"G\\u0302\",\"\\u0120\":\"G\\u0307\",\"\\u0122\":\"G\\u0327\",\"\\u1e26\":\"H\\u0308\",\"\\u021e\":\"H\\u030c\",\"\\u0124\":\"H\\u0302\",\"\\u1e22\":\"H\\u0307\",\"\\u1e28\":\"H\\u0327\",\"\\xcd\":\"I\\u0301\",\"\\xcc\":\"I\\u0300\",\"\\xcf\":\"I\\u0308\",\"\\u1e2e\":\"I\\u0308\\u0301\",\"\\u0128\":\"I\\u0303\",\"\\u012a\":\"I\\u0304\",\"\\u012c\":\"I\\u0306\",\"\\u01cf\":\"I\\u030c\",\"\\xce\":\"I\\u0302\",\"\\u0130\":\"I\\u0307\",\"\\u0134\":\"J\\u0302\",\"\\u1e30\":\"K\\u0301\",\"\\u01e8\":\"K\\u030c\",\"\\u0136\":\"K\\u0327\",\"\\u0139\":\"L\\u0301\",\"\\u013d\":\"L\\u030c\",\"\\u013b\":\"L\\u0327\",\"\\u1e3e\":\"M\\u0301\",\"\\u1e40\":\"M\\u0307\",\"\\u0143\":\"N\\u0301\",\"\\u01f8\":\"N\\u0300\",\"\\xd1\":\"N\\u0303\",\"\\u0147\":\"N\\u030c\",\"\\u1e44\":\"N\\u0307\",\"\\u0145\":\"N\\u0327\",\"\\xd3\":\"O\\u0301\",\"\\xd2\":\"O\\u0300\",\"\\xd6\":\"O\\u0308\",\"\\u022a\":\"O\\u0308\\u0304\",\"\\xd5\":\"O\\u0303\",\"\\u1e4c\":\"O\\u0303\\u0301\",\"\\u1e4e\":\"O\\u0303\\u0308\",\"\\u022c\":\"O\\u0303\\u0304\",\"\\u014c\":\"O\\u0304\",\"\\u1e52\":\"O\\u0304\\u0301\",\"\\u1e50\":\"O\\u0304\\u0300\",\"\\u014e\":\"O\\u0306\",\"\\u01d1\":\"O\\u030c\",\"\\xd4\":\"O\\u0302\",\"\\u1ed0\":\"O\\u0302\\u0301\",\"\\u1ed2\":\"O\\u0302\\u0300\",\"\\u1ed6\":\"O\\u0302\\u0303\",\"\\u022e\":\"O\\u0307\",\"\\u0230\":\"O\\u0307\\u0304\",\"\\u0150\":\"O\\u030b\",\"\\u1e54\":\"P\\u0301\",\"\\u1e56\":\"P\\u0307\",\"\\u0154\":\"R\\u0301\",\"\\u0158\":\"R\\u030c\",\"\\u1e58\":\"R\\u0307\",\"\\u0156\":\"R\\u0327\",\"\\u015a\":\"S\\u0301\",\"\\u1e64\":\"S\\u0301\\u0307\",\"\\u0160\":\"S\\u030c\",\"\\u1e66\":\"S\\u030c\\u0307\",\"\\u015c\":\"S\\u0302\",\"\\u1e60\":\"S\\u0307\",\"\\u015e\":\"S\\u0327\",\"\\u0164\":\"T\\u030c\",\"\\u1e6a\":\"T\\u0307\",\"\\u0162\":\"T\\u0327\",\"\\xda\":\"U\\u0301\",\"\\xd9\":\"U\\u0300\",\"\\xdc\":\"U\\u0308\",\"\\u01d7\":\"U\\u0308\\u0301\",\"\\u01db\":\"U\\u0308\\u0300\",\"\\u01d5\":\"U\\u0308\\u0304\",\"\\u01d9\":\"U\\u0308\\u030c\",\"\\u0168\":\"U\\u0303\",\"\\u1e78\":\"U\\u0303\\u0301\",\"\\u016a\":\"U\\u0304\",\"\\u1e7a\":\"U\\u0304\\u0308\",\"\\u016c\":\"U\\u0306\",\"\\u01d3\":\"U\\u030c\",\"\\xdb\":\"U\\u0302\",\"\\u016e\":\"U\\u030a\",\"\\u0170\":\"U\\u030b\",\"\\u1e7c\":\"V\\u0303\",\"\\u1e82\":\"W\\u0301\",\"\\u1e80\":\"W\\u0300\",\"\\u1e84\":\"W\\u0308\",\"\\u0174\":\"W\\u0302\",\"\\u1e86\":\"W\\u0307\",\"\\u1e8c\":\"X\\u0308\",\"\\u1e8a\":\"X\\u0307\",\"\\xdd\":\"Y\\u0301\",\"\\u1ef2\":\"Y\\u0300\",\"\\u0178\":\"Y\\u0308\",\"\\u1ef8\":\"Y\\u0303\",\"\\u0232\":\"Y\\u0304\",\"\\u0176\":\"Y\\u0302\",\"\\u1e8e\":\"Y\\u0307\",\"\\u0179\":\"Z\\u0301\",\"\\u017d\":\"Z\\u030c\",\"\\u1e90\":\"Z\\u0302\",\"\\u017b\":\"Z\\u0307\",\"\\u03ac\":\"\\u03b1\\u0301\",\"\\u1f70\":\"\\u03b1\\u0300\",\"\\u1fb1\":\"\\u03b1\\u0304\",\"\\u1fb0\":\"\\u03b1\\u0306\",\"\\u03ad\":\"\\u03b5\\u0301\",\"\\u1f72\":\"\\u03b5\\u0300\",\"\\u03ae\":\"\\u03b7\\u0301\",\"\\u1f74\":\"\\u03b7\\u0300\",\"\\u03af\":\"\\u03b9\\u0301\",\"\\u1f76\":\"\\u03b9\\u0300\",\"\\u03ca\":\"\\u03b9\\u0308\",\"\\u0390\":\"\\u03b9\\u0308\\u0301\",\"\\u1fd2\":\"\\u03b9\\u0308\\u0300\",\"\\u1fd1\":\"\\u03b9\\u0304\",\"\\u1fd0\":\"\\u03b9\\u0306\",\"\\u03cc\":\"\\u03bf\\u0301\",\"\\u1f78\":\"\\u03bf\\u0300\",\"\\u03cd\":\"\\u03c5\\u0301\",\"\\u1f7a\":\"\\u03c5\\u0300\",\"\\u03cb\":\"\\u03c5\\u0308\",\"\\u03b0\":\"\\u03c5\\u0308\\u0301\",\"\\u1fe2\":\"\\u03c5\\u0308\\u0300\",\"\\u1fe1\":\"\\u03c5\\u0304\",\"\\u1fe0\":\"\\u03c5\\u0306\",\"\\u03ce\":\"\\u03c9\\u0301\",\"\\u1f7c\":\"\\u03c9\\u0300\",\"\\u038e\":\"\\u03a5\\u0301\",\"\\u1fea\":\"\\u03a5\\u0300\",\"\\u03ab\":\"\\u03a5\\u0308\",\"\\u1fe9\":\"\\u03a5\\u0304\",\"\\u1fe8\":\"\\u03a5\\u0306\",\"\\u038f\":\"\\u03a9\\u0301\",\"\\u1ffa\":\"\\u03a9\\u0300\"},Wn=function(){function e(e,t){this.mode=void 0,this.gullet=void 0,this.settings=void 0,this.leftrightDepth=void 0,this.nextToken=void 0,this.mode=\"math\",this.gullet=new Gn(e,t,this.mode),this.settings=t,this.leftrightDepth=0}var t=e.prototype;return t.expect=function(e,t){if(void 0===t&&(t=!0),this.fetch().text!==e)throw new n(\"Expected '\"+e+\"', got '\"+this.fetch().text+\"'\",this.fetch());t&&this.consume()},t.consume=function(){this.nextToken=null},t.fetch=function(){return null==this.nextToken&&(this.nextToken=this.gullet.expandNextToken()),this.nextToken},t.switchMode=function(e){this.mode=e,this.gullet.switchMode(e)},t.parse=function(){this.settings.globalGroup||this.gullet.beginGroup(),this.settings.colorIsTextColor&&this.gullet.macros.set(\"\\\\color\",\"\\\\textcolor\");try{var e=this.parseExpression(!1);return this.expect(\"EOF\"),this.settings.globalGroup||this.gullet.endGroup(),e}finally{this.gullet.endGroups()}},t.parseExpression=function(t,r){for(var n=[];;){\"math\"===this.mode&&this.consumeSpaces();var a=this.fetch();if(-1!==e.endOfExpression.indexOf(a.text))break;if(r&&a.text===r)break;if(t&&Nn[a.text]&&Nn[a.text].infix)break;var i=this.parseAtom(r);if(!i)break;\"internal\"!==i.type&&n.push(i)}return\"text\"===this.mode&&this.formLigatures(n),this.handleInfixNodes(n)},t.handleInfixNodes=function(e){for(var t,r=-1,a=0;a<e.length;a++)if(\"infix\"===e[a].type){if(-1!==r)throw new n(\"only one infix operator per group\",e[a].token);r=a,t=e[a].replaceWith}if(-1!==r&&t){var i,o,s=e.slice(0,r),l=e.slice(r+1);return i=1===s.length&&\"ordgroup\"===s[0].type?s[0]:{type:\"ordgroup\",mode:this.mode,body:s},o=1===l.length&&\"ordgroup\"===l[0].type?l[0]:{type:\"ordgroup\",mode:this.mode,body:l},[\"\\\\\\\\abovefrac\"===t?this.callFunction(t,[i,e[r],o],[]):this.callFunction(t,[i,o],[])]}return e},t.handleSupSubscript=function(e){var t=this.fetch(),r=t.text;this.consume(),this.consumeSpaces();var a=this.parseGroup(e);if(!a)throw new n(\"Expected group after '\"+r+\"'\",t);return a},t.formatUnsupportedCmd=function(e){for(var t=[],r=0;r<e.length;r++)t.push({type:\"textord\",mode:\"text\",text:e[r]});var n={type:\"text\",mode:this.mode,body:t};return{type:\"color\",mode:this.mode,color:this.settings.errorColor,body:[n]}},t.parseAtom=function(e){var t,r,a=this.parseGroup(\"atom\",e);if(\"text\"===this.mode)return a;for(;;){this.consumeSpaces();var i=this.fetch();if(\"\\\\limits\"===i.text||\"\\\\nolimits\"===i.text){if(a&&\"op\"===a.type){var o=\"\\\\limits\"===i.text;a.limits=o,a.alwaysHandleSupSub=!0}else{if(!a||\"operatorname\"!==a.type)throw new n(\"Limit controls must follow a math operator\",i);a.alwaysHandleSupSub&&(a.limits=\"\\\\limits\"===i.text)}this.consume()}else if(\"^\"===i.text){if(t)throw new n(\"Double superscript\",i);t=this.handleSupSubscript(\"superscript\")}else if(\"_\"===i.text){if(r)throw new n(\"Double subscript\",i);r=this.handleSupSubscript(\"subscript\")}else{if(\"'\"!==i.text)break;if(t)throw new n(\"Double superscript\",i);var s={type:\"textord\",mode:this.mode,text:\"\\\\prime\"},l=[s];for(this.consume();\"'\"===this.fetch().text;)l.push(s),this.consume();\"^\"===this.fetch().text&&l.push(this.handleSupSubscript(\"superscript\")),t={type:\"ordgroup\",mode:this.mode,body:l}}}return t||r?{type:\"supsub\",mode:this.mode,base:a,sup:t,sub:r}:a},t.parseFunction=function(e,t){var r=this.fetch(),a=r.text,i=Nn[a];if(!i)return null;if(this.consume(),t&&\"atom\"!==t&&!i.allowedInArgument)throw new n(\"Got function '\"+a+\"' with no arguments\"+(t?\" as \"+t:\"\"),r);if(\"text\"===this.mode&&!i.allowedInText)throw new n(\"Can't use function '\"+a+\"' in text mode\",r);if(\"math\"===this.mode&&!1===i.allowedInMath)throw new n(\"Can't use function '\"+a+\"' in math mode\",r);var o=this.parseArguments(a,i),s=o.args,l=o.optArgs;return this.callFunction(a,s,l,r,e)},t.callFunction=function(e,t,r,a,i){var o={funcName:e,parser:this,token:a,breakOnTokenText:i},s=Nn[e];if(s&&s.handler)return s.handler(o,t,r);throw new n(\"No function handler for \"+e)},t.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(0===r)return{args:[],optArgs:[]};for(var a=[],i=[],o=0;o<r;o++){var s=t.argTypes&&t.argTypes[o],l=o<t.numOptionalArgs;(t.primitive&&null==s||\"sqrt\"===t.type&&1===o&&null==i[0])&&(s=\"primitive\");var h=this.parseGroupOfType(\"argument to '\"+e+\"'\",s,l);if(l)i.push(h);else{if(null==h)throw new n(\"Null argument, please report this as a bug\");a.push(h)}}return{args:a,optArgs:i}},t.parseGroupOfType=function(e,t,r){switch(t){case\"color\":return this.parseColorGroup(r);case\"size\":return this.parseSizeGroup(r);case\"url\":return this.parseUrlGroup(r);case\"math\":case\"text\":return this.parseArgumentGroup(r,t);case\"hbox\":var a=this.parseArgumentGroup(r,\"text\");return null!=a?{type:\"styling\",mode:a.mode,body:[a],style:\"text\"}:null;case\"raw\":var i=this.parseStringGroup(\"raw\",r);return null!=i?{type:\"raw\",mode:\"text\",string:i.text}:null;case\"primitive\":if(r)throw new n(\"A primitive argument cannot be optional\");var o=this.parseGroup(e);if(null==o)throw new n(\"Expected group as \"+e,this.fetch());return o;case\"original\":case null:case void 0:return this.parseArgumentGroup(r);default:throw new n(\"Unknown group type as \"+e,this.fetch())}},t.consumeSpaces=function(){for(;\" \"===this.fetch().text;)this.consume()},t.parseStringGroup=function(e,t){var r=this.gullet.scanArgument(t);if(null==r)return null;for(var n,a=\"\";\"EOF\"!==(n=this.fetch()).text;)a+=n.text,this.consume();return this.consume(),r.text=a,r},t.parseRegexGroup=function(e,t){for(var r,a=this.fetch(),i=a,o=\"\";\"EOF\"!==(r=this.fetch()).text&&e.test(o+r.text);)o+=(i=r).text,this.consume();if(\"\"===o)throw new n(\"Invalid \"+t+\": '\"+a.text+\"'\",a);return a.range(i,o)},t.parseColorGroup=function(e){var t=this.parseStringGroup(\"color\",e);if(null==t)return null;var r=/^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);if(!r)throw new n(\"Invalid color: '\"+t.text+\"'\",t);var a=r[0];return/^[0-9a-f]{6}$/i.test(a)&&(a=\"#\"+a),{type:\"color-token\",mode:this.mode,color:a}},t.parseSizeGroup=function(e){var t,r=!1;if(this.gullet.consumeSpaces(),!(t=e||\"{\"===this.gullet.future().text?this.parseStringGroup(\"size\",e):this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/,\"size\")))return null;e||0!==t.text.length||(t.text=\"0pt\",r=!0);var a=/([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(t.text);if(!a)throw new n(\"Invalid size: '\"+t.text+\"'\",t);var i={number:+(a[1]+a[2]),unit:a[3]};if(!He(i))throw new n(\"Invalid unit: '\"+i.unit+\"'\",t);return{type:\"size\",mode:this.mode,value:i,isBlank:r}},t.parseUrlGroup=function(e){this.gullet.lexer.setCatcode(\"%\",13),this.gullet.lexer.setCatcode(\"~\",12);var t=this.parseStringGroup(\"url\",e);if(this.gullet.lexer.setCatcode(\"%\",14),this.gullet.lexer.setCatcode(\"~\",13),null==t)return null;var r=t.text.replace(/\\\\([#$%&~_^{}])/g,\"$1\");return{type:\"url\",mode:this.mode,url:r}},t.parseArgumentGroup=function(e,t){var r=this.gullet.scanArgument(e);if(null==r)return null;var n=this.mode;t&&this.switchMode(t),this.gullet.beginGroup();var a=this.parseExpression(!1,\"EOF\");this.expect(\"EOF\"),this.gullet.endGroup();var i={type:\"ordgroup\",mode:this.mode,loc:r.loc,body:a};return t&&this.switchMode(n),i},t.parseGroup=function(e,t){var r,a=this.fetch(),i=a.text;if(\"{\"===i||\"\\\\begingroup\"===i){this.consume();var o=\"{\"===i?\"}\":\"\\\\endgroup\";this.gullet.beginGroup();var s=this.parseExpression(!1,o),l=this.fetch();this.expect(o),this.gullet.endGroup(),r={type:\"ordgroup\",mode:this.mode,loc:qn.range(a,l),body:s,semisimple:\"\\\\begingroup\"===i||void 0}}else if(null==(r=this.parseFunction(t,e)||this.parseSymbol())&&\"\\\\\"===i[0]&&!Vn.hasOwnProperty(i)){if(this.settings.throwOnError)throw new n(\"Undefined control sequence: \"+i,a);r=this.formatUnsupportedCmd(i),this.consume()}return r},t.formLigatures=function(e){for(var t=e.length-1,r=0;r<t;++r){var n=e[r],a=n.text;\"-\"===a&&\"-\"===e[r+1].text&&(r+1<t&&\"-\"===e[r+2].text?(e.splice(r,3,{type:\"textord\",mode:\"text\",loc:qn.range(n,e[r+2]),text:\"---\"}),t-=2):(e.splice(r,2,{type:\"textord\",mode:\"text\",loc:qn.range(n,e[r+1]),text:\"--\"}),t-=1)),\"'\"!==a&&\"`\"!==a||e[r+1].text!==a||(e.splice(r,2,{type:\"textord\",mode:\"text\",loc:qn.range(n,e[r+1]),text:a+a}),t-=1)}},t.parseSymbol=function(){var e=this.fetch(),t=e.text;if(/^\\\\verb[^a-zA-Z]/.test(t)){this.consume();var r=t.slice(5),a=\"*\"===r.charAt(0);if(a&&(r=r.slice(1)),r.length<2||r.charAt(0)!==r.slice(-1))throw new n(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");return{type:\"verb\",mode:\"text\",body:r=r.slice(1,-1),star:a}}Yn.hasOwnProperty(t[0])&&!X[this.mode][t[0]]&&(this.settings.strict&&\"math\"===this.mode&&this.settings.reportNonstrict(\"unicodeTextInMathMode\",'Accented Unicode text character \"'+t[0]+'\" used in math mode',e),t=Yn[t[0]]+t.substr(1));var i,o=In.exec(t);if(o&&(\"i\"===(t=t.substring(0,o.index))?t=\"\\u0131\":\"j\"===t&&(t=\"\\u0237\")),X[this.mode][t]){this.settings.strict&&\"math\"===this.mode&&Me.indexOf(t)>=0&&this.settings.reportNonstrict(\"unicodeTextInMathMode\",'Latin-1/Unicode text character \"'+t[0]+'\" used in math mode',e);var s,l=X[this.mode][t].group,h=qn.range(e);if(U.hasOwnProperty(l)){var m=l;s={type:\"atom\",mode:this.mode,family:m,loc:h,text:t}}else s={type:l,mode:this.mode,loc:h,text:t};i=s}else{if(!(t.charCodeAt(0)>=128))return null;this.settings.strict&&(w(t.charCodeAt(0))?\"math\"===this.mode&&this.settings.reportNonstrict(\"unicodeTextInMathMode\",'Unicode text character \"'+t[0]+'\" used in math mode',e):this.settings.reportNonstrict(\"unknownSymbol\",'Unrecognized Unicode character \"'+t[0]+'\" ('+t.charCodeAt(0)+\")\",e)),i={type:\"textord\",mode:\"text\",loc:qn.range(e),text:t}}if(this.consume(),o)for(var c=0;c<o[0].length;c++){var u=o[0][c];if(!Un[u])throw new n(\"Unknown accent ' \"+u+\"'\",e);var p=Un[u][this.mode]||Un[u].text;if(!p)throw new n(\"Accent \"+u+\" unsupported in \"+this.mode+\" mode\",e);i={type:\"accent\",mode:this.mode,loc:qn.range(e),label:p,isStretchy:!1,isShifty:!0,base:i}}return i},e}();Wn.endOfExpression=[\"}\",\"\\\\endgroup\",\"\\\\end\",\"\\\\right\",\"&\"];var Xn=function(e,t){if(!(\"string\"==typeof e||e instanceof String))throw new TypeError(\"KaTeX can only parse string typed expression\");var r=new Wn(e,t);delete r.gullet.macros.current[\"\\\\df@tag\"];var a=r.parse();if(delete r.gullet.macros.current[\"\\\\current@color\"],delete r.gullet.macros.current[\"\\\\color\"],r.gullet.macros.get(\"\\\\df@tag\")){if(!t.displayMode)throw new n(\"\\\\tag works only in display equations\");r.gullet.feed(\"\\\\df@tag\"),a=[{type:\"tag\",mode:\"text\",body:a,tag:r.parse()}]}return a},_n=function(e,t,r){t.textContent=\"\";var n=$n(e,r).toNode();t.appendChild(n)};\"undefined\"!=typeof document&&\"CSS1Compat\"!==document.compatMode&&(\"undefined\"!=typeof console&&console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype.\"),_n=function(){throw new n(\"KaTeX doesn't work in quirks mode.\")});var jn=function(e,t,r){if(r.throwOnError||!(e instanceof n))throw e;var a=je.makeSpan([\"katex-error\"],[new R(t)]);return a.setAttribute(\"title\",e.toString()),a.setAttribute(\"style\",\"color:\"+r.errorColor),a},$n=function(e,t){var r=new h(t);try{var n=Xn(e,r);return Ot(n,e,r)}catch(t){return jn(t,e,r)}},Zn={version:\"0.13.18\",render:_n,renderToString:function(e,t){return $n(e,t).toMarkup()},ParseError:n,__parse:function(e,t){var r=new h(t);return Xn(e,r)},__renderToDomTree:$n,__renderToHTMLTree:function(e,t){var r=new h(t);try{return function(e,t,r){var n=xt(e,It(r)),a=je.makeSpan([\"katex\"],[n]);return Rt(a,r)}(Xn(e,r),0,r)}catch(t){return jn(t,e,r)}},__setFontMetrics:function(e,t){D[e]=t},__defineSymbol:_,__defineMacro:dn,__domTree:{Span:N,Anchor:q,SymbolNode:R,SvgNode:O,PathNode:E,LineNode:H}};return t=t.default}()}));");
    }
    
    var mathEscaped_1325400086 = multiReplace_637535946(math_1325400079, [{Field0: makeNimstrLit("\\"), Field1: makeNimstrLit("\\\\")}, {Field0: makeNimstrLit("\""), Field1: makeNimstrLit("\\\"")}, {Field0: makeNimstrLit("\x0A"), Field1: makeNimstrLit("\\n")}]);
    var call_1325400087 = nsuFormatOpenArray(makeNimstrLit("katex.renderToString(\"$1\", {throwOnError: false, displayMode: $2})"), [nimCopy(null, mathEscaped_1325400086, NTI33554439), nimBoolToStr(displayMode_1325400080)]);
    duk_eval_string(ctx_1325400082[0], toJSStr(call_1325400087));
    result_1325400081 = nimCopy(null, cstrToNimstr(duk_get_string(ctx_1325400082[0], -1)), NTI33554439);

  return result_1325400081;

}

function rawGet_1677721749(t_1677721752, key_1677721753, hc_1677721754, hc_1677721754_Idx) {
            var Temporary3;

  var result_1677721755 = 0;

  BeforeRet: do {
    hc_1677721754[hc_1677721754_Idx] = hash_1124073894(key_1677721753);
    if ((hc_1677721754[hc_1677721754_Idx] == 0)) {
    hc_1677721754[hc_1677721754_Idx] = 314159265;
    }
    
    if (((t_1677721752.data).length == 0)) {
    result_1677721755 = -1;
    break BeforeRet;
    }
    
    var h_1677721806 = (hc_1677721754[hc_1677721754_Idx] & (t_1677721752.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1224736799(t_1677721752.data[chckIndx(h_1677721806, 0, (t_1677721752.data).length - 1)].Field0)) break Label2;
            if (!(t_1677721752.data[chckIndx(h_1677721806, 0, (t_1677721752.data).length - 1)].Field0 == hc_1677721754[hc_1677721754_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1677721752.data[chckIndx(h_1677721806, 0, (t_1677721752.data).length - 1)].Field1, key_1677721753);            }          if (Temporary3) {
          result_1677721755 = h_1677721806;
          break BeforeRet;
          }
          
          h_1677721806 = nextTry_1224736802(h_1677721806, (t_1677721752.data).length - 1);
        }
    } while (false);
    result_1677721755 = subInt(-1, h_1677721806);
  } while (false);

  return result_1677721755;

}

function hasKey_1258298666(t_1258298669, key_1258298670) {
  var result_1258298671 = false;

    var hc_1258298672 = [0];
    result_1258298671 = (0 <= rawGet_1677721749(t_1258298669, key_1258298670, hc_1258298672, 0));

  return result_1258298671;

}

function HEX5BHEX5D_1677723041(t_1677723044, key_1677723045) {
  var result_1677723046 = [];

    var hcHEX60gensym20_1677723047 = [0];
    var indexHEX60gensym20_1677723054 = rawGet_1677721749(t_1677723044, key_1677723045, hcHEX60gensym20_1677723047, 0);
    if ((0 <= indexHEX60gensym20_1677723054)) {
    result_1677723046 = nimCopy(null, t_1677723044.data[chckIndx(indexHEX60gensym20_1677723054, 0, (t_1677723044.data).length - 1)].Field2, NTI33554439);
    }
    else {
    raiseKeyError_1677723108(key_1677723045);
    }
    

  return result_1677723046;

}

function HEX3Aanonymous_1258293395(docHEX60gensym27_1258293396, strHEX60gensym27_1258293397) {
  var result_1258293398 = [];

    result_1258293398 = nimCopy(null, strHEX60gensym27_1258293397, NTI33554439);

  return result_1258293398;

}

function isSome_1258299608(self_1258299610) {
  var result_1258299611 = false;

    result_1258299611 = self_1258299610.has;

  return result_1258299611;

}

function get_1258299599(self_1258299601, otherwise_1258299602) {
    var Temporary1;

  var result_1258299603 = [];

    if (isSome_1258299608(self_1258299601)) {
    Temporary1 = self_1258299601.val;
    }
    else {
    Temporary1 = otherwise_1258299602;
    }
    
    result_1258299603 = nimCopy(null, Temporary1, NTI637534694);

  return result_1258299603;

}

function some_1258299561(val_1258299563) {
  var result_1258299564 = ({val: [], has: false});

    result_1258299564.has = true;
    result_1258299564.val = nimCopy(null, val_1258299563, NTI637534694);

  return result_1258299564;

}

function none_1258299566() {
  var result_1258299573 = ({val: [], has: false});

  return result_1258299573;

}

function map_1258299543(self_1258299546, callback_1258299548) {
    var Temporary1;

  var result_1258299553 = ({val: [], has: false});

    if (isSome_1258294872(self_1258299546)) {
    Temporary1 = some_1258299561(callback_1258299548(self_1258299546.val));
    }
    else {
    Temporary1 = none_1258299566();
    }
    
    result_1258299553 = nimCopy(result_1258299553, Temporary1, NTI1258295862);

  return result_1258299553;

}

function nsuSplitWhitespace(s_637534848, maxsplit_637534849) {
  var result_637534850 = [];

    result_637534850 = nimCopy(null, [], NTI637534705);
    Label1: do {
      var xHEX60gensym77_637534856 = [];
      var lastHEX60gensym59_1258291221 = 0;
      var splitsHEX60gensym59_1258291222 = maxsplit_637534849;
      if (false) {
      failedAssertImpl_218103864(makeNimstrLit("strutils.nim(381, 9) `not (\'\\x00\' in Whitespace)` "));
      }
      
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym59_1258291221 < (s_637534848).length)) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym59_1258291221 < (s_637534848).length) && (ConstSet61[s_637534848[chckIndx(lastHEX60gensym59_1258291221, 0, (s_637534848).length - 1)]] != undefined))) break Label5;
                  lastHEX60gensym59_1258291221 = addInt(lastHEX60gensym59_1258291221, 1);
                }
            } while (false);
            var firstHEX60gensym59_1258291225 = lastHEX60gensym59_1258291221;
            Label6: do {
                Label7: while (true) {
                if (!((lastHEX60gensym59_1258291221 < (s_637534848).length) && !((ConstSet62[s_637534848[chckIndx(lastHEX60gensym59_1258291221, 0, (s_637534848).length - 1)]] != undefined)))) break Label7;
                  lastHEX60gensym59_1258291221 = addInt(lastHEX60gensym59_1258291221, 1);
                }
            } while (false);
            if ((firstHEX60gensym59_1258291225 <= subInt(lastHEX60gensym59_1258291221, 1))) {
            if ((splitsHEX60gensym59_1258291222 == 0)) {
            lastHEX60gensym59_1258291221 = (s_637534848).length;
            }
            
            xHEX60gensym77_637534856 = substr_33557907(s_637534848, firstHEX60gensym59_1258291225, subInt(lastHEX60gensym59_1258291221, 1));
            var Temporary8 = nimCopy(null, xHEX60gensym77_637534856, NTI33554439);
            result_637534850.push(Temporary8);;
            if ((splitsHEX60gensym59_1258291222 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym59_1258291222 = subInt(splitsHEX60gensym59_1258291222, 1);
            }
            
          }
      } while (false);
    } while (false);

  return result_637534850;

}

function initTable_1677721620(initialSize_1677721623) {
  var result_1677721624 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1677721626 = slotsNeeded_1224736810(chckRange(initialSize_1677721623, 0, 2147483647));
    result_1677721624.counter = 0;
    result_1677721624.data = new Array(chckRange(correctSizeHEX60gensym0_1677721626, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1677721626, 0, 2147483647) ; ++i) { result_1677721624.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1677721624;

}

function mustRehash_1677722085(t_1677722087) {
  var result_1677722088 = false;

    if (!((t_1677722087.counter < (t_1677722087.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1677722088 = ((mulInt((t_1677722087.data).length, 2) < mulInt(t_1677722087.counter, 3)) || (subInt((t_1677722087.data).length, t_1677722087.counter) < 4));

  return result_1677722088;

}

function rawInsert_1677722534(t_1677722538, data_1677722539, data_1677722539_Idx, key_1677722540, val_1677722541, hc_1677722542, h_1677722543) {
    data_1677722539[data_1677722539_Idx][chckIndx(h_1677722543, 0, (data_1677722539[data_1677722539_Idx]).length - 1)].Field1 = nimCopy(null, key_1677722540, NTI33554439);
    data_1677722539[data_1677722539_Idx][chckIndx(h_1677722543, 0, (data_1677722539[data_1677722539_Idx]).length - 1)].Field2 = nimCopy(null, val_1677722541, NTI33554439);
    data_1677722539[data_1677722539_Idx][chckIndx(h_1677722543, 0, (data_1677722539[data_1677722539_Idx]).length - 1)].Field0 = hc_1677722542;

  
}

function enlarge_1677722240(t_1677722243) {
    var n_1677722246 = [];
    n_1677722246 = new Array(chckRange(mulInt((t_1677722243.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1677722243.data).length, 2), 0, 2147483647) ; ++i) { n_1677722246[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1677722243.data; t_1677722243.data = n_1677722246; n_1677722246 = Temporary1;    Label2: do {
      var i_1677722310 = 0;
      var colontmp__486542172 = 0;
      colontmp__486542172 = (n_1677722246).length - 1;
      var res_486542173 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_486542173 <= colontmp__486542172)) break Label4;
            i_1677722310 = res_486542173;
            var eh_1677722364 = n_1677722246[chckIndx(i_1677722310, 0, (n_1677722246).length - 1)].Field0;
            if (isFilled_1224736799(eh_1677722364)) {
            var j_1677722368 = (eh_1677722364 & (t_1677722243.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_1224736799(t_1677722243.data[chckIndx(j_1677722368, 0, (t_1677722243.data).length - 1)].Field0)) break Label6;
                  j_1677722368 = nextTry_1224736802(j_1677722368, (t_1677722243.data).length - 1);
                }
            } while (false);
            rawInsert_1677722534(t_1677722243, t_1677722243, "data", n_1677722246[chckIndx(i_1677722310, 0, (n_1677722246).length - 1)].Field1, n_1677722246[chckIndx(i_1677722310, 0, (n_1677722246).length - 1)].Field2, eh_1677722364, j_1677722368);
            }
            
            res_486542173 = addInt(res_486542173, 1);
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_1677722703(t_1677722706, key_1677722707, hc_1677722708) {
  var result_1677722709 = 0;

  BeforeRet: do {
    if (((t_1677722706.data).length == 0)) {
    result_1677722709 = -1;
    break BeforeRet;
    }
    
    var h_1677722760 = (hc_1677722708 & (t_1677722706.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1224736799(t_1677722706.data[chckIndx(h_1677722760, 0, (t_1677722706.data).length - 1)].Field0)) break Label2;
          if (((t_1677722706.data[chckIndx(h_1677722760, 0, (t_1677722706.data).length - 1)].Field0 == hc_1677722708) && eqStrings(t_1677722706.data[chckIndx(h_1677722760, 0, (t_1677722706.data).length - 1)].Field1, key_1677722707))) {
          result_1677722709 = h_1677722760;
          break BeforeRet;
          }
          
          h_1677722760 = nextTry_1224736802(h_1677722760, (t_1677722706.data).length - 1);
        }
    } while (false);
    result_1677722709 = subInt(-1, h_1677722760);
  } while (false);

  return result_1677722709;

}

function HEX5BHEX5DHEX3D_1677721688(t_1677721691, key_1677721692, val_1677721693) {
    if (((t_1677721691.data).length == 0)) {
    var correctSizeHEX60gensym3_1677721743 = slotsNeeded_1224736810(32);
    t_1677721691.counter = 0;
    t_1677721691.data = new Array(chckRange(correctSizeHEX60gensym3_1677721743, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_1677721743, 0, 2147483647) ; ++i) { t_1677721691.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1677721748 = [0];
    var index_1677721978 = rawGet_1677721749(t_1677721691, key_1677721692, hc_1677721748, 0);
    if ((0 <= index_1677721978)) {
    t_1677721691.data[chckIndx(index_1677721978, 0, (t_1677721691.data).length - 1)].Field2 = nimCopy(null, val_1677721693, NTI33554439);
    }
    else {
      if (((t_1677721691.data).length == 0)) {
      var correctSizeHEX60gensym8_1677722080 = slotsNeeded_1224736810(32);
      t_1677721691.counter = 0;
      t_1677721691.data = new Array(chckRange(correctSizeHEX60gensym8_1677722080, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1677722080, 0, 2147483647) ; ++i) { t_1677721691.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1677722085(t_1677721691)) {
      enlarge_1677722240(t_1677721691);
      index_1677721978 = rawGetKnownHC_1677722703(t_1677721691, key_1677721692, hc_1677721748[0]);
      }
      
      index_1677721978 = subInt(-1, index_1677721978);
      rawInsert_1677722534(t_1677721691, t_1677721691, "data", key_1677721692, val_1677721693, hc_1677721748[0], index_1677721978);
      t_1677721691.counter = addInt(t_1677721691.counter, 1);
    }
    

  
}

function toTable_1677721615(pairs_1677721618) {
  var result_1677721619 = [({data: [], counter: 0})];

    result_1677721619[0] = nimCopy(result_1677721619[0], initTable_1677721620((pairs_1677721618).length), NTI1476395026);
    Label1: do {
      var key_1677721646 = null;
      var key_1677721646_Idx = 0;
      var val_1677721647 = null;
      var val_1677721647_Idx = 0;
      var i_1677722951 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1677722951 < (pairs_1677721618).length)) break Label3;
            key_1677721646 = pairs_1677721618[chckIndx(i_1677722951, 0, (pairs_1677721618).length - 1)]; key_1677721646_Idx = "Field0";
            val_1677721647 = pairs_1677721618[chckIndx(i_1677722951, 0, (pairs_1677721618).length - 1)]; val_1677721647_Idx = "Field1";
            HEX5BHEX5DHEX3D_1677721688(result_1677721619[0], key_1677721646[key_1677721646_Idx], val_1677721647[val_1677721647_Idx]);
            i_1677722951 = addInt(i_1677722951, 1);
          }
      } while (false);
    } while (false);

  return result_1677721619[0];

}

function zip_1258299639(s1_1258299642, s2_1258299643) {
  var result_1258299644 = [];

    var mHEX60gensym8_1258299651 = nimMin((s1_1258299642).length, (s2_1258299643).length);
    result_1258299644 = new Array(chckRange(mHEX60gensym8_1258299651, 0, 2147483647)); for (var i = 0 ; i < chckRange(mHEX60gensym8_1258299651, 0, 2147483647) ; ++i) { result_1258299644[i] = {Field0: [], Field1: []}; }    Label1: do {
      var iHEX60gensym8_1258299660 = 0;
      var i_486542179 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542179 < mHEX60gensym8_1258299651)) break Label3;
            iHEX60gensym8_1258299660 = i_486542179;
            var colontmp__486542177 = nimCopy(null, s1_1258299642[chckIndx(iHEX60gensym8_1258299660, 0, (s1_1258299642).length - 1)], NTI33554439);
            var colontmp__486542178 = nimCopy(null, s2_1258299643[chckIndx(iHEX60gensym8_1258299660, 0, (s2_1258299643).length - 1)], NTI33554439);
            result_1258299644[chckIndx(iHEX60gensym8_1258299660, 0, (result_1258299644).length - 1)] = nimCopy(result_1258299644[chckIndx(iHEX60gensym8_1258299660, 0, (result_1258299644).length - 1)], {Field0: nimCopy(null, colontmp__486542177, NTI33554439), Field1: nimCopy(null, colontmp__486542178, NTI33554439)}, NTI1258295965);
            i_486542179 = addInt(i_486542179, 1);
          }
      } while (false);
    } while (false);

  return result_1258299644;

}

function translate_1493172260(phrase_1493172261, lang_1493172262) {
  var result_1493172263 = [];

    result_1493172263 = nimCopy(null, translations_1493172241[chckIndx(phrase_1493172261, 0, (translations_1493172241).length - 1)][chckIndx(lang_1493172262, 0, (translations_1493172241[chckIndx(phrase_1493172261, 0, (translations_1493172241).length - 1)]).length - 1)], NTI33554439);

  return result_1493172263;

}

function isSome_1258299841(self_1258299843) {
  var result_1258299844 = false;

    result_1258299844 = self_1258299843.has;

  return result_1258299844;

}

function isNone_1258299866(self_1258299868) {
  var result_1258299869 = false;

    result_1258299869 = !(self_1258299868.has);

  return result_1258299869;

}

function get_1258299858(self_1258299860) {
  var result_1258299861 = null;
  var result_1258299861_Idx = 0;

    if (isNone_1258299866(self_1258299860)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1509949460, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1258299861 = self_1258299860; result_1258299861_Idx = "val";

  return [result_1258299861, result_1258299861_Idx];

}

function binarySearch_939525109(c_939525110, tab_939525111, len_939525112, stride_939525113) {
      var Temporary3;

  var result_939525114 = 0;

  BeforeRet: do {
    var n_939525115 = len_939525112;
    var t_939525116 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(1 < n_939525115)) break Label2;
          var m_939525117 = divInt(n_939525115, 2);
          var p_939525118 = addInt(t_939525116, mulInt(m_939525117, stride_939525113));
          if ((tab_939525111[chckIndx(p_939525118, 0, (tab_939525111).length - 1)] <= ((c_939525110) | 0))) {
          t_939525116 = p_939525118;
          n_939525115 = subInt(n_939525115, m_939525117);
          }
          else {
            n_939525115 = m_939525117;
          }
          
        }
    } while (false);
      if (!!((n_939525115 == 0))) Temporary3 = false; else {        Temporary3 = (tab_939525111[chckIndx(t_939525116, 0, (tab_939525111).length - 1)] <= ((c_939525110) | 0));      }    if (Temporary3) {
    result_939525114 = t_939525116;
    break BeforeRet;
    }
    
    result_939525114 = -1;
    break BeforeRet;
  } while (false);

  return result_939525114;

}

function nucisUpper(c_939525239) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525240 = false;

  BeforeRet: do {
    var c_939525241 = c_939525239;
    var p_939525249 = binarySearch_939525109(c_939525241, toLowerRanges_939525019, 45, 3);
      if (!(0 <= p_939525249)) Temporary2 = false; else {        Temporary2 = (toLowerRanges_939525019[chckIndx(p_939525249, 0, (toLowerRanges_939525019).length - 1)] <= ((c_939525241) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525241) | 0) <= toLowerRanges_939525019[chckIndx(addInt(p_939525249, 1), 0, (toLowerRanges_939525019).length - 1)]);      }    if (Temporary1) {
    result_939525240 = true;
    break BeforeRet;
    }
    
    p_939525249 = binarySearch_939525109(c_939525241, toLowerSinglets_939525020, 610, 2);
      if (!(0 <= p_939525249)) Temporary3 = false; else {        Temporary3 = (((c_939525241) | 0) == toLowerSinglets_939525020[chckIndx(p_939525249, 0, (toLowerSinglets_939525020).length - 1)]);      }    if (Temporary3) {
    result_939525240 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525240;

}

function nucisLower(c_939525220) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525221 = false;

  BeforeRet: do {
    var c_939525222 = c_939525220;
    var p_939525230 = binarySearch_939525109(c_939525222, toUpperRanges_939525021, 46, 3);
      if (!(0 <= p_939525230)) Temporary2 = false; else {        Temporary2 = (toUpperRanges_939525021[chckIndx(p_939525230, 0, (toUpperRanges_939525021).length - 1)] <= ((c_939525222) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525222) | 0) <= toUpperRanges_939525021[chckIndx(addInt(p_939525230, 1), 0, (toUpperRanges_939525021).length - 1)]);      }    if (Temporary1) {
    result_939525221 = true;
    break BeforeRet;
    }
    
    p_939525230 = binarySearch_939525109(c_939525222, toUpperSinglets_939525022, 624, 2);
      if (!(0 <= p_939525230)) Temporary3 = false; else {        Temporary3 = (((c_939525222) | 0) == toUpperSinglets_939525022[chckIndx(p_939525230, 0, (toUpperSinglets_939525022).length - 1)]);      }    if (Temporary3) {
    result_939525221 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525221;

}

function nucisAlpha(c_939525258) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525259 = false;

  BeforeRet: do {
    if ((nucisUpper(c_939525258) || nucisLower(c_939525258))) {
    result_939525259 = true;
    break BeforeRet;
    }
    
    var c_939525260 = c_939525258;
    var p_939525269 = binarySearch_939525109(c_939525260, alphaRanges_939525024, 471, 2);
      if (!(0 <= p_939525269)) Temporary2 = false; else {        Temporary2 = (alphaRanges_939525024[chckIndx(p_939525269, 0, (alphaRanges_939525024).length - 1)] <= ((c_939525260) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525260) | 0) <= alphaRanges_939525024[chckIndx(addInt(p_939525269, 1), 0, (alphaRanges_939525024).length - 1)]);      }    if (Temporary1) {
    result_939525259 = true;
    break BeforeRet;
    }
    
    p_939525269 = binarySearch_939525109(c_939525260, alphaSinglets_939525025, 147, 1);
      if (!(0 <= p_939525269)) Temporary3 = false; else {        Temporary3 = (((c_939525260) | 0) == alphaSinglets_939525025[chckIndx(p_939525269, 0, (alphaSinglets_939525025).length - 1)]);      }    if (Temporary3) {
    result_939525259 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525259;

}

function nucisTitle(c_939525297) {
  var result_939525298 = false;

  BeforeRet: do {
    result_939525298 = (nucisUpper(c_939525297) && nucisLower(c_939525297));
    break BeforeRet;
  } while (false);

  return result_939525298;

}

function nucisWhiteSpace(c_939525300) {
      var Temporary1;
      var Temporary2;

  var result_939525301 = false;

  BeforeRet: do {
    var c_939525302 = c_939525300;
    var p_939525311 = binarySearch_939525109(c_939525302, spaceRanges_939525026, 10, 2);
      if (!(0 <= p_939525311)) Temporary2 = false; else {        Temporary2 = (spaceRanges_939525026[chckIndx(p_939525311, 0, (spaceRanges_939525026).length - 1)] <= ((c_939525302) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525302) | 0) <= spaceRanges_939525026[chckIndx(addInt(p_939525311, 1), 0, (spaceRanges_939525026).length - 1)]);      }    if (Temporary1) {
    result_939525301 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525301;

}

function HEX3DHEX3D_939525015(a_939525016, b_939525017) {
  var result_939525018 = false;

  BeforeRet: do {
    result_939525018 = (((a_939525016) | 0) == ((b_939525017) | 0));
    break BeforeRet;
  } while (false);

  return result_939525018;

}

function nuctoLower(c_939525120) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525121 = 0;

  BeforeRet: do {
    var c_939525122 = c_939525120;
    var p_939525131 = binarySearch_939525109(c_939525122, toLowerRanges_939525019, 45, 3);
      if (!(0 <= p_939525131)) Temporary2 = false; else {        Temporary2 = (toLowerRanges_939525019[chckIndx(p_939525131, 0, (toLowerRanges_939525019).length - 1)] <= ((c_939525122) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525122) | 0) <= toLowerRanges_939525019[chckIndx(addInt(p_939525131, 1), 0, (toLowerRanges_939525019).length - 1)]);      }    if (Temporary1) {
    result_939525121 = ((subInt(addInt(((c_939525122) | 0), toLowerRanges_939525019[chckIndx(addInt(p_939525131, 2), 0, (toLowerRanges_939525019).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    p_939525131 = binarySearch_939525109(c_939525122, toLowerSinglets_939525020, 610, 2);
      if (!(0 <= p_939525131)) Temporary3 = false; else {        Temporary3 = (((c_939525122) | 0) == toLowerSinglets_939525020[chckIndx(p_939525131, 0, (toLowerSinglets_939525020).length - 1)]);      }    if (Temporary3) {
    result_939525121 = ((subInt(addInt(((c_939525122) | 0), toLowerSinglets_939525020[chckIndx(addInt(p_939525131, 1), 0, (toLowerSinglets_939525020).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    result_939525121 = c_939525122;
    break BeforeRet;
  } while (false);

  return result_939525121;

}

function npegsrawMatch(s_1275069101, p_1275069102, start_1275069103, c_1275069104) {
    
function matchIt_1275069156(sHEX60gensym26_1275069157, pHEX60gensym26_1275069158, startHEX60gensym26_1275069159, cHEX60gensym26_1275069160) {
          var Temporary1;
                    var Temporary5;
                      var Temporary6;
                      var Temporary7;
                var Temporary10;
                  var Temporary11;
                  var Temporary12;
                var Temporary13;
                var Temporary14;
                  var Temporary15;
                  var Temporary16;
                  var Temporary17;
                var Temporary18;
                var Temporary19;
                var Temporary20;
                var Temporary21;
                  var Temporary22;
                  var Temporary23;
                  var Temporary24;
                var Temporary25;
                var Temporary26;
                var Temporary27;
                var Temporary28;
                var Temporary29;
                var Temporary30;
                  var Temporary31;
                  var Temporary32;
                  var Temporary33;
                var Temporary34;
                var Temporary35;
                var Temporary36;
                var Temporary37;
                var Temporary38;
                var Temporary39;
                var Temporary40;
                var Temporary41;
                  var Temporary42;
                  var Temporary43;
                  var Temporary44;
                var Temporary45;
                var Temporary46;
                var Temporary47;
                var Temporary48;
                var Temporary49;
                var Temporary50;
                var Temporary51;
                var Temporary52;
                var Temporary53;
                var Temporary54;
                  var Temporary55;
                  var Temporary56;
                  var Temporary57;
                var Temporary58;
                var Temporary59;
                var Temporary60;
                var Temporary61;
                var Temporary62;
                var Temporary63;
                var Temporary64;
                var Temporary65;
                var Temporary66;
                var Temporary67;
                var Temporary68;
                var Temporary69;
                  var Temporary70;
                  var Temporary71;
                var Temporary74;
                      var Temporary77;
                        var Temporary78;
                        var Temporary79;
                      var Temporary80;
                      var Temporary81;
                        var Temporary82;
                        var Temporary83;
                        var Temporary84;
                      var Temporary85;
                      var Temporary86;
                      var Temporary87;
                      var Temporary88;
                        var Temporary89;
                        var Temporary90;
                        var Temporary91;
                      var Temporary92;
                      var Temporary93;
                      var Temporary94;
                      var Temporary95;
                      var Temporary96;
                      var Temporary97;
                        var Temporary98;
                        var Temporary99;
                        var Temporary100;
                      var Temporary101;
                      var Temporary102;
                      var Temporary103;
                      var Temporary104;
                      var Temporary105;
                      var Temporary106;
                      var Temporary107;
                      var Temporary108;
                        var Temporary109;
                        var Temporary110;
                        var Temporary111;
                      var Temporary112;
                      var Temporary113;
                      var Temporary114;
                      var Temporary115;
                      var Temporary116;
                      var Temporary117;
                      var Temporary118;
                      var Temporary119;
                      var Temporary120;
                      var Temporary121;
                        var Temporary122;
                        var Temporary123;
                        var Temporary124;
                      var Temporary125;
                      var Temporary126;
                      var Temporary127;
                      var Temporary128;
                      var Temporary129;
                      var Temporary130;
                      var Temporary131;
                      var Temporary132;
                      var Temporary133;
                      var Temporary134;
                      var Temporary135;
                      var Temporary136;
                        var Temporary137;
                        var Temporary138;
                  var Temporary141;
            var Temporary142;
              var Temporary143;
            var Temporary144;
              var Temporary145;
          var Temporary146;
            var Temporary148;
                  var Temporary151;
                  var Temporary152;
            var Temporary154;
                  var Temporary157;
                  var Temporary158;
                var Temporary161;
                var Temporary162;
                var Temporary165;
                var Temporary166;
                var Temporary169;
                var Temporary170;
          var Temporary171;
                var Temporary176;
                  var Temporary177;
          var Temporary178;
          var Temporary179;
          var Temporary180;
          var Temporary181;
          var Temporary182;
          var Temporary183;
            var Temporary184;
            var Temporary185;
              var Temporary186;
              var Temporary187;
            var Temporary188;
            var Temporary189;
          
function matchBackRef_1275069162(sHEX60gensym26_1275069163, pHEX60gensym26_1275069164, startHEX60gensym26_1275069165, cHEX60gensym26_1275069166) {
              var Temporary1;
                var Temporary2;

            var result_1275069167 = 0;

            BeforeRet: do {
              var Temporary1 = pHEX60gensym26_1275069164;
              if (ConstSet154[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'index\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1275068421)); }
              var indexHEX60gensym26_1275069168 = Temporary1.index;
              if ((indexHEX60gensym26_1275069168 < 0)) {
              indexHEX60gensym26_1275069168 = addInt(indexHEX60gensym26_1275069168, cHEX60gensym26_1275069166.ml);
              }
              
                if ((indexHEX60gensym26_1275069168 < 0)) Temporary2 = true; else {                  Temporary2 = (cHEX60gensym26_1275069166.ml <= indexHEX60gensym26_1275069168);                }              if (Temporary2) {
              result_1275069167 = -1;
              break BeforeRet;
              }
              
              var colontmp__486542225 = nimCopy(null, cHEX60gensym26_1275069166.matches[chckIndx(indexHEX60gensym26_1275069168, 0, (cHEX60gensym26_1275069166.matches).length - 1)], NTI1275068949);
              var aHEX60gensym26_1275069173 = colontmp__486542225["Field0"];
              var bHEX60gensym26_1275069174 = colontmp__486542225["Field1"];
              var nHEX60gensym26_1275069175 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              switch (pHEX60gensym26_1275069164.kind) {
              case 25:
                nHEX60gensym26_1275069175 = nimCopy(nHEX60gensym26_1275069175, {kind: 9, term: substr_33557907(sHEX60gensym26_1275069163, aHEX60gensym26_1275069173, bHEX60gensym26_1275069174), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
                break;
              case 27:
                nHEX60gensym26_1275069175 = nimCopy(nHEX60gensym26_1275069175, {kind: 11, term: substr_33557907(sHEX60gensym26_1275069163, aHEX60gensym26_1275069173, bHEX60gensym26_1275069174), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
                break;
              case 26:
                nHEX60gensym26_1275069175 = nimCopy(nHEX60gensym26_1275069175, {kind: 10, term: substr_33557907(sHEX60gensym26_1275069163, aHEX60gensym26_1275069173, bHEX60gensym26_1275069174), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
                break;
              default: 
                if (true) {
                failedAssertImpl_218103864(makeNimstrLit("pegs.nim(579, 19) `false` impossible case"));
                }
                
                break;
              }
              result_1275069167 = matchIt_1275069156(sHEX60gensym26_1275069163, nHEX60gensym26_1275069175, startHEX60gensym26_1275069165, cHEX60gensym26_1275069166);
            } while (false);

            return result_1275069167;

          }

      var result_1275069161 = 0;

      BeforeRet: do {
        switch (pHEX60gensym26_1275069158.kind) {
        case 0:
          result_1275069161 = 0;
          break;
        case 1:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          result_1275069161 = 1;
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 2:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          result_1275069161 = runeLenAt_939524161(sHEX60gensym26_1275069157, chckRange(startHEX60gensym26_1275069159, 0, 2147483647));
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 4:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          var aHEX60gensym26_1275069181 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
          aHEX60gensym26_1275069181 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 1);
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
          aHEX60gensym26_1275069181 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 2);
          }
          else {
            aHEX60gensym26_1275069181 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
          aHEX60gensym26_1275069181 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 3);
          }
          else {
            aHEX60gensym26_1275069181 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
          aHEX60gensym26_1275069181 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 4);
          }
          else {
            aHEX60gensym26_1275069181 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
          aHEX60gensym26_1275069181 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 5);
          }
          else {
            aHEX60gensym26_1275069181 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
          aHEX60gensym26_1275069181 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 6);
          }
          else {
            aHEX60gensym26_1275069181 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
            aHEX60gensym26_1275069181 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
            result_1275069161 = addInt(result_1275069161, 1);
          }
          }}}}}
          if (nucisAlpha(aHEX60gensym26_1275069181)) {
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          }
          else {
            result_1275069161 = -1;
          }
          
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 5:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          var aHEX60gensym26_1275069394 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
          aHEX60gensym26_1275069394 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 1);
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
          aHEX60gensym26_1275069394 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 2);
          }
          else {
            aHEX60gensym26_1275069394 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
          aHEX60gensym26_1275069394 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 3);
          }
          else {
            aHEX60gensym26_1275069394 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
          aHEX60gensym26_1275069394 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 4);
          }
          else {
            aHEX60gensym26_1275069394 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
          aHEX60gensym26_1275069394 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 5);
          }
          else {
            aHEX60gensym26_1275069394 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
          aHEX60gensym26_1275069394 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 6);
          }
          else {
            aHEX60gensym26_1275069394 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
            aHEX60gensym26_1275069394 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
            result_1275069161 = addInt(result_1275069161, 1);
          }
          }}}}}
          if (nucisLower(aHEX60gensym26_1275069394)) {
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          }
          else {
            result_1275069161 = -1;
          }
          
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 6:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          var aHEX60gensym26_1275069607 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
          aHEX60gensym26_1275069607 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 1);
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
          aHEX60gensym26_1275069607 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 2);
          }
          else {
            aHEX60gensym26_1275069607 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
          aHEX60gensym26_1275069607 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 3);
          }
          else {
            aHEX60gensym26_1275069607 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
          aHEX60gensym26_1275069607 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 4);
          }
          else {
            aHEX60gensym26_1275069607 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
          aHEX60gensym26_1275069607 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 5);
          }
          else {
            aHEX60gensym26_1275069607 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
          aHEX60gensym26_1275069607 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 6);
          }
          else {
            aHEX60gensym26_1275069607 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
            aHEX60gensym26_1275069607 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
            result_1275069161 = addInt(result_1275069161, 1);
          }
          }}}}}
          if (nucisUpper(aHEX60gensym26_1275069607)) {
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          }
          else {
            result_1275069161 = -1;
          }
          
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 7:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          var aHEX60gensym26_1275069820 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
          aHEX60gensym26_1275069820 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 1);
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
          aHEX60gensym26_1275069820 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 2);
          }
          else {
            aHEX60gensym26_1275069820 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
          aHEX60gensym26_1275069820 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 3);
          }
          else {
            aHEX60gensym26_1275069820 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
          aHEX60gensym26_1275069820 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 4);
          }
          else {
            aHEX60gensym26_1275069820 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
          aHEX60gensym26_1275069820 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 5);
          }
          else {
            aHEX60gensym26_1275069820 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
          aHEX60gensym26_1275069820 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 6);
          }
          else {
            aHEX60gensym26_1275069820 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
            aHEX60gensym26_1275069820 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
            result_1275069161 = addInt(result_1275069161, 1);
          }
          }}}}}
          if (nucisTitle(aHEX60gensym26_1275069820)) {
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          }
          else {
            result_1275069161 = -1;
          }
          
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 8:
          if ((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) {
          var aHEX60gensym26_1275070033 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
          aHEX60gensym26_1275070033 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 1);
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
          aHEX60gensym26_1275070033 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 2);
          }
          else {
            aHEX60gensym26_1275070033 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
          aHEX60gensym26_1275070033 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 3);
          }
          else {
            aHEX60gensym26_1275070033 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
          aHEX60gensym26_1275070033 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 4);
          }
          else {
            aHEX60gensym26_1275070033 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
          aHEX60gensym26_1275070033 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 5);
          }
          else {
            aHEX60gensym26_1275070033 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
          if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
          aHEX60gensym26_1275070033 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
          result_1275069161 = addInt(result_1275069161, 6);
          }
          else {
            aHEX60gensym26_1275070033 = 65533;
            result_1275069161 = addInt(result_1275069161, 1);
          }
          
          }
          else {
            aHEX60gensym26_1275070033 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
            result_1275069161 = addInt(result_1275069161, 1);
          }
          }}}}}
          if (nucisWhiteSpace(aHEX60gensym26_1275070033)) {
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          }
          else {
            result_1275069161 = -1;
          }
          
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 20:
          result_1275069161 = subInt((sHEX60gensym26_1275069157).length, startHEX60gensym26_1275069159);
          break;
        case 3:
          if (((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length) && (sHEX60gensym26_1275069157[chckIndx(startHEX60gensym26_1275069159, 0, (sHEX60gensym26_1275069157).length - 1)] == 10))) {
          result_1275069161 = 1;
          }
          else {
          if (((startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length) && (sHEX60gensym26_1275069157[chckIndx(startHEX60gensym26_1275069159, 0, (sHEX60gensym26_1275069157).length - 1)] == 13))) {
          if (((addInt(startHEX60gensym26_1275069159, 1) < (sHEX60gensym26_1275069157).length) && (sHEX60gensym26_1275069157[chckIndx(addInt(startHEX60gensym26_1275069159, 1), 0, (sHEX60gensym26_1275069157).length - 1)] == 10))) {
          result_1275069161 = 2;
          }
          else {
            result_1275069161 = 1;
          }
          
          }
          else {
            result_1275069161 = -1;
          }
          }
          break;
        case 9:
          var Temporary1 = pHEX60gensym26_1275069158;
          if (ConstSet64[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1275068421)); }
          result_1275069161 = (Temporary1.term).length;
          Label2: do {
            var iHEX60gensym26_1275070250 = 0;
            var colontmp__486542198 = 0;
            colontmp__486542198 = subInt(result_1275069161, 1);
            var res_486542199 = 0;
            Label3: do {
                Label4: while (true) {
                if (!(res_486542199 <= colontmp__486542198)) break Label4;
                  iHEX60gensym26_1275070250 = res_486542199;
                    if (((sHEX60gensym26_1275069157).length <= addInt(startHEX60gensym26_1275069159, iHEX60gensym26_1275070250))) Temporary5 = true; else {                      var Temporary6 = pHEX60gensym26_1275069158;
                      if (ConstSet65[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1275068421)); }
                      Temporary5 = !(((Temporary7 = Temporary6.term, Temporary7)[chckIndx(iHEX60gensym26_1275070250, 0, (Temporary7).length - 1)] == sHEX60gensym26_1275069157[chckIndx(addInt(startHEX60gensym26_1275069159, iHEX60gensym26_1275070250), 0, (sHEX60gensym26_1275069157).length - 1)]));                    }                  if (Temporary5) {
                  result_1275069161 = -1;
                  break Label2;
                  }
                  
                  res_486542199 = addInt(res_486542199, 1);
                }
            } while (false);
          } while (false);
          break;
        case 10:
          var iHEX60gensym26_1275070251 = 0;
          var aHEX60gensym26_1275070252 = 0;
          var bHEX60gensym26_1275070253 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          Label8: do {
              Label9: while (true) {
                var Temporary10 = pHEX60gensym26_1275069158;
                if (ConstSet66[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1275068421)); }
              if (!(iHEX60gensym26_1275070251 < (Temporary10.term).length)) break Label9;
                if (((sHEX60gensym26_1275069157).length <= result_1275069161)) {
                result_1275069161 = -1;
                break Label8;
                }
                
                  var Temporary11 = pHEX60gensym26_1275069158;
                  if (ConstSet67[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1275068421)); }
                if (((Temporary12 = Temporary11.term, Temporary12)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary12).length - 1)] <= 127)) {
                var Temporary13 = pHEX60gensym26_1275069158;
                if (ConstSet68[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI1275068421)); }
                aHEX60gensym26_1275070252 = chckRange((Temporary14 = Temporary13.term, Temporary14)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary14).length - 1)], -2147483648, 2147483647);
                iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                else {
                  var Temporary15 = pHEX60gensym26_1275069158;
                  if (ConstSet69[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1275068421)); }
                if ((((Temporary16 = Temporary15.term, Temporary16)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary16).length - 1)] >>> 5) == 6)) {
                  var Temporary17 = pHEX60gensym26_1275069158;
                  if (ConstSet70[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1275068421)); }
                if ((iHEX60gensym26_1275070251 <= subInt((Temporary17.term).length, 2))) {
                var Temporary18 = pHEX60gensym26_1275069158;
                if (ConstSet71[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1275068421)); }
                var Temporary20 = pHEX60gensym26_1275069158;
                if (ConstSet72[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI1275068421)); }
                aHEX60gensym26_1275070252 = chckRange(((((Temporary19 = Temporary18.term, Temporary19)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary19).length - 1)] & 31) << 6) | ((Temporary21 = Temporary20.term, Temporary21)[chckIndx(addInt(iHEX60gensym26_1275070251, 1), 0, (Temporary21).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 2);
                }
                else {
                  aHEX60gensym26_1275070252 = 65533;
                  iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                
                }
                else {
                  var Temporary22 = pHEX60gensym26_1275069158;
                  if (ConstSet73[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI1275068421)); }
                if ((((Temporary23 = Temporary22.term, Temporary23)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary23).length - 1)] >>> 4) == 14)) {
                  var Temporary24 = pHEX60gensym26_1275069158;
                  if (ConstSet74[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI1275068421)); }
                if ((iHEX60gensym26_1275070251 <= subInt((Temporary24.term).length, 3))) {
                var Temporary25 = pHEX60gensym26_1275069158;
                if (ConstSet75[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI1275068421)); }
                var Temporary27 = pHEX60gensym26_1275069158;
                if (ConstSet76[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI1275068421)); }
                var Temporary29 = pHEX60gensym26_1275069158;
                if (ConstSet77[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI1275068421)); }
                aHEX60gensym26_1275070252 = chckRange((((((Temporary26 = Temporary25.term, Temporary26)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary26).length - 1)] & 15) << 12) | (((Temporary28 = Temporary27.term, Temporary28)[chckIndx(addInt(iHEX60gensym26_1275070251, 1), 0, (Temporary28).length - 1)] & 63) << 6)) | ((Temporary30 = Temporary29.term, Temporary30)[chckIndx(addInt(iHEX60gensym26_1275070251, 2), 0, (Temporary30).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 3);
                }
                else {
                  aHEX60gensym26_1275070252 = 65533;
                  iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                
                }
                else {
                  var Temporary31 = pHEX60gensym26_1275069158;
                  if (ConstSet78[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI1275068421)); }
                if ((((Temporary32 = Temporary31.term, Temporary32)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary32).length - 1)] >>> 3) == 30)) {
                  var Temporary33 = pHEX60gensym26_1275069158;
                  if (ConstSet79[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI1275068421)); }
                if ((iHEX60gensym26_1275070251 <= subInt((Temporary33.term).length, 4))) {
                var Temporary34 = pHEX60gensym26_1275069158;
                if (ConstSet80[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI1275068421)); }
                var Temporary36 = pHEX60gensym26_1275069158;
                if (ConstSet81[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI1275068421)); }
                var Temporary38 = pHEX60gensym26_1275069158;
                if (ConstSet82[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI1275068421)); }
                var Temporary40 = pHEX60gensym26_1275069158;
                if (ConstSet83[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI1275068421)); }
                aHEX60gensym26_1275070252 = chckRange(((((((Temporary35 = Temporary34.term, Temporary35)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary35).length - 1)] & 7) << 18) | (((Temporary37 = Temporary36.term, Temporary37)[chckIndx(addInt(iHEX60gensym26_1275070251, 1), 0, (Temporary37).length - 1)] & 63) << 12)) | (((Temporary39 = Temporary38.term, Temporary39)[chckIndx(addInt(iHEX60gensym26_1275070251, 2), 0, (Temporary39).length - 1)] & 63) << 6)) | ((Temporary41 = Temporary40.term, Temporary41)[chckIndx(addInt(iHEX60gensym26_1275070251, 3), 0, (Temporary41).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 4);
                }
                else {
                  aHEX60gensym26_1275070252 = 65533;
                  iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                
                }
                else {
                  var Temporary42 = pHEX60gensym26_1275069158;
                  if (ConstSet84[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI1275068421)); }
                if ((((Temporary43 = Temporary42.term, Temporary43)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary43).length - 1)] >>> 2) == 62)) {
                  var Temporary44 = pHEX60gensym26_1275069158;
                  if (ConstSet85[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI1275068421)); }
                if ((iHEX60gensym26_1275070251 <= subInt((Temporary44.term).length, 5))) {
                var Temporary45 = pHEX60gensym26_1275069158;
                if (ConstSet86[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI1275068421)); }
                var Temporary47 = pHEX60gensym26_1275069158;
                if (ConstSet87[Temporary47.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary47.kind, NTI1275068421)); }
                var Temporary49 = pHEX60gensym26_1275069158;
                if (ConstSet88[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI1275068421)); }
                var Temporary51 = pHEX60gensym26_1275069158;
                if (ConstSet89[Temporary51.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary51.kind, NTI1275068421)); }
                var Temporary53 = pHEX60gensym26_1275069158;
                if (ConstSet90[Temporary53.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary53.kind, NTI1275068421)); }
                aHEX60gensym26_1275070252 = chckRange((((((((Temporary46 = Temporary45.term, Temporary46)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary46).length - 1)] & 3) << 24) | (((Temporary48 = Temporary47.term, Temporary48)[chckIndx(addInt(iHEX60gensym26_1275070251, 1), 0, (Temporary48).length - 1)] & 63) << 18)) | (((Temporary50 = Temporary49.term, Temporary50)[chckIndx(addInt(iHEX60gensym26_1275070251, 2), 0, (Temporary50).length - 1)] & 63) << 12)) | (((Temporary52 = Temporary51.term, Temporary52)[chckIndx(addInt(iHEX60gensym26_1275070251, 3), 0, (Temporary52).length - 1)] & 63) << 6)) | ((Temporary54 = Temporary53.term, Temporary54)[chckIndx(addInt(iHEX60gensym26_1275070251, 4), 0, (Temporary54).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 5);
                }
                else {
                  aHEX60gensym26_1275070252 = 65533;
                  iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                
                }
                else {
                  var Temporary55 = pHEX60gensym26_1275069158;
                  if (ConstSet91[Temporary55.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary55.kind, NTI1275068421)); }
                if ((((Temporary56 = Temporary55.term, Temporary56)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary56).length - 1)] >>> 1) == 126)) {
                  var Temporary57 = pHEX60gensym26_1275069158;
                  if (ConstSet92[Temporary57.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary57.kind, NTI1275068421)); }
                if ((iHEX60gensym26_1275070251 <= subInt((Temporary57.term).length, 6))) {
                var Temporary58 = pHEX60gensym26_1275069158;
                if (ConstSet93[Temporary58.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary58.kind, NTI1275068421)); }
                var Temporary60 = pHEX60gensym26_1275069158;
                if (ConstSet94[Temporary60.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary60.kind, NTI1275068421)); }
                var Temporary62 = pHEX60gensym26_1275069158;
                if (ConstSet95[Temporary62.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary62.kind, NTI1275068421)); }
                var Temporary64 = pHEX60gensym26_1275069158;
                if (ConstSet96[Temporary64.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary64.kind, NTI1275068421)); }
                var Temporary66 = pHEX60gensym26_1275069158;
                if (ConstSet97[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI1275068421)); }
                var Temporary68 = pHEX60gensym26_1275069158;
                if (ConstSet98[Temporary68.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary68.kind, NTI1275068421)); }
                aHEX60gensym26_1275070252 = chckRange(((((((((Temporary59 = Temporary58.term, Temporary59)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary59).length - 1)] & 1) << 30) | (((Temporary61 = Temporary60.term, Temporary61)[chckIndx(addInt(iHEX60gensym26_1275070251, 1), 0, (Temporary61).length - 1)] & 63) << 24)) | (((Temporary63 = Temporary62.term, Temporary63)[chckIndx(addInt(iHEX60gensym26_1275070251, 2), 0, (Temporary63).length - 1)] & 63) << 18)) | (((Temporary65 = Temporary64.term, Temporary65)[chckIndx(addInt(iHEX60gensym26_1275070251, 3), 0, (Temporary65).length - 1)] & 63) << 12)) | (((Temporary67 = Temporary66.term, Temporary67)[chckIndx(addInt(iHEX60gensym26_1275070251, 4), 0, (Temporary67).length - 1)] & 63) << 6)) | ((Temporary69 = Temporary68.term, Temporary69)[chckIndx(addInt(iHEX60gensym26_1275070251, 5), 0, (Temporary69).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 6);
                }
                else {
                  aHEX60gensym26_1275070252 = 65533;
                  iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                
                }
                else {
                  var Temporary70 = pHEX60gensym26_1275069158;
                  if (ConstSet99[Temporary70.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary70.kind, NTI1275068421)); }
                  aHEX60gensym26_1275070252 = chckRange((Temporary71 = Temporary70.term, Temporary71)[chckIndx(iHEX60gensym26_1275070251, 0, (Temporary71).length - 1)], -2147483648, 2147483647);
                  iHEX60gensym26_1275070251 = addInt(iHEX60gensym26_1275070251, 1);
                }
                }}}}}
                if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
                bHEX60gensym26_1275070253 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
                result_1275069161 = addInt(result_1275069161, 1);
                }
                else {
                if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
                if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
                bHEX60gensym26_1275070253 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                result_1275069161 = addInt(result_1275069161, 2);
                }
                else {
                  bHEX60gensym26_1275070253 = 65533;
                  result_1275069161 = addInt(result_1275069161, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
                if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
                bHEX60gensym26_1275070253 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                result_1275069161 = addInt(result_1275069161, 3);
                }
                else {
                  bHEX60gensym26_1275070253 = 65533;
                  result_1275069161 = addInt(result_1275069161, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
                if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
                bHEX60gensym26_1275070253 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                result_1275069161 = addInt(result_1275069161, 4);
                }
                else {
                  bHEX60gensym26_1275070253 = 65533;
                  result_1275069161 = addInt(result_1275069161, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
                if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
                bHEX60gensym26_1275070253 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                result_1275069161 = addInt(result_1275069161, 5);
                }
                else {
                  bHEX60gensym26_1275070253 = 65533;
                  result_1275069161 = addInt(result_1275069161, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
                if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
                bHEX60gensym26_1275070253 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                result_1275069161 = addInt(result_1275069161, 6);
                }
                else {
                  bHEX60gensym26_1275070253 = 65533;
                  result_1275069161 = addInt(result_1275069161, 1);
                }
                
                }
                else {
                  bHEX60gensym26_1275070253 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
                  result_1275069161 = addInt(result_1275069161, 1);
                }
                }}}}}
                if (!(HEX3DHEX3D_939525015(nuctoLower(aHEX60gensym26_1275070252), nuctoLower(bHEX60gensym26_1275070253)))) {
                result_1275069161 = -1;
                break Label8;
                }
                
              }
          } while (false);
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          break;
        case 11:
          var iHEX60gensym26_1275070674 = 0;
          var aHEX60gensym26_1275070675 = 0;
          var bHEX60gensym26_1275070676 = 0;
          result_1275069161 = startHEX60gensym26_1275069159;
          Label72: do {
              Label73: while (true) {
                var Temporary74 = pHEX60gensym26_1275069158;
                if (ConstSet100[Temporary74.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary74.kind, NTI1275068421)); }
              if (!(iHEX60gensym26_1275070674 < (Temporary74.term).length)) break Label73;
                Label75: do {
                    Label76: while (true) {
                      var Temporary77 = pHEX60gensym26_1275069158;
                      if (ConstSet101[Temporary77.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary77.kind, NTI1275068421)); }
                    if (!(iHEX60gensym26_1275070674 < (Temporary77.term).length)) break Label76;
                        var Temporary78 = pHEX60gensym26_1275069158;
                        if (ConstSet102[Temporary78.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary78.kind, NTI1275068421)); }
                      if (((Temporary79 = Temporary78.term, Temporary79)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary79).length - 1)] <= 127)) {
                      var Temporary80 = pHEX60gensym26_1275069158;
                      if (ConstSet103[Temporary80.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary80.kind, NTI1275068421)); }
                      aHEX60gensym26_1275070675 = chckRange((Temporary81 = Temporary80.term, Temporary81)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary81).length - 1)], -2147483648, 2147483647);
                      iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      else {
                        var Temporary82 = pHEX60gensym26_1275069158;
                        if (ConstSet104[Temporary82.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary82.kind, NTI1275068421)); }
                      if ((((Temporary83 = Temporary82.term, Temporary83)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary83).length - 1)] >>> 5) == 6)) {
                        var Temporary84 = pHEX60gensym26_1275069158;
                        if (ConstSet105[Temporary84.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary84.kind, NTI1275068421)); }
                      if ((iHEX60gensym26_1275070674 <= subInt((Temporary84.term).length, 2))) {
                      var Temporary85 = pHEX60gensym26_1275069158;
                      if (ConstSet106[Temporary85.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary85.kind, NTI1275068421)); }
                      var Temporary87 = pHEX60gensym26_1275069158;
                      if (ConstSet107[Temporary87.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary87.kind, NTI1275068421)); }
                      aHEX60gensym26_1275070675 = chckRange(((((Temporary86 = Temporary85.term, Temporary86)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary86).length - 1)] & 31) << 6) | ((Temporary88 = Temporary87.term, Temporary88)[chckIndx(addInt(iHEX60gensym26_1275070674, 1), 0, (Temporary88).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 2);
                      }
                      else {
                        aHEX60gensym26_1275070675 = 65533;
                        iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      
                      }
                      else {
                        var Temporary89 = pHEX60gensym26_1275069158;
                        if (ConstSet108[Temporary89.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary89.kind, NTI1275068421)); }
                      if ((((Temporary90 = Temporary89.term, Temporary90)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary90).length - 1)] >>> 4) == 14)) {
                        var Temporary91 = pHEX60gensym26_1275069158;
                        if (ConstSet109[Temporary91.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary91.kind, NTI1275068421)); }
                      if ((iHEX60gensym26_1275070674 <= subInt((Temporary91.term).length, 3))) {
                      var Temporary92 = pHEX60gensym26_1275069158;
                      if (ConstSet110[Temporary92.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary92.kind, NTI1275068421)); }
                      var Temporary94 = pHEX60gensym26_1275069158;
                      if (ConstSet111[Temporary94.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary94.kind, NTI1275068421)); }
                      var Temporary96 = pHEX60gensym26_1275069158;
                      if (ConstSet112[Temporary96.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary96.kind, NTI1275068421)); }
                      aHEX60gensym26_1275070675 = chckRange((((((Temporary93 = Temporary92.term, Temporary93)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary93).length - 1)] & 15) << 12) | (((Temporary95 = Temporary94.term, Temporary95)[chckIndx(addInt(iHEX60gensym26_1275070674, 1), 0, (Temporary95).length - 1)] & 63) << 6)) | ((Temporary97 = Temporary96.term, Temporary97)[chckIndx(addInt(iHEX60gensym26_1275070674, 2), 0, (Temporary97).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 3);
                      }
                      else {
                        aHEX60gensym26_1275070675 = 65533;
                        iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      
                      }
                      else {
                        var Temporary98 = pHEX60gensym26_1275069158;
                        if (ConstSet113[Temporary98.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary98.kind, NTI1275068421)); }
                      if ((((Temporary99 = Temporary98.term, Temporary99)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary99).length - 1)] >>> 3) == 30)) {
                        var Temporary100 = pHEX60gensym26_1275069158;
                        if (ConstSet114[Temporary100.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary100.kind, NTI1275068421)); }
                      if ((iHEX60gensym26_1275070674 <= subInt((Temporary100.term).length, 4))) {
                      var Temporary101 = pHEX60gensym26_1275069158;
                      if (ConstSet115[Temporary101.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary101.kind, NTI1275068421)); }
                      var Temporary103 = pHEX60gensym26_1275069158;
                      if (ConstSet116[Temporary103.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary103.kind, NTI1275068421)); }
                      var Temporary105 = pHEX60gensym26_1275069158;
                      if (ConstSet117[Temporary105.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary105.kind, NTI1275068421)); }
                      var Temporary107 = pHEX60gensym26_1275069158;
                      if (ConstSet118[Temporary107.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary107.kind, NTI1275068421)); }
                      aHEX60gensym26_1275070675 = chckRange(((((((Temporary102 = Temporary101.term, Temporary102)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary102).length - 1)] & 7) << 18) | (((Temporary104 = Temporary103.term, Temporary104)[chckIndx(addInt(iHEX60gensym26_1275070674, 1), 0, (Temporary104).length - 1)] & 63) << 12)) | (((Temporary106 = Temporary105.term, Temporary106)[chckIndx(addInt(iHEX60gensym26_1275070674, 2), 0, (Temporary106).length - 1)] & 63) << 6)) | ((Temporary108 = Temporary107.term, Temporary108)[chckIndx(addInt(iHEX60gensym26_1275070674, 3), 0, (Temporary108).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 4);
                      }
                      else {
                        aHEX60gensym26_1275070675 = 65533;
                        iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      
                      }
                      else {
                        var Temporary109 = pHEX60gensym26_1275069158;
                        if (ConstSet119[Temporary109.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary109.kind, NTI1275068421)); }
                      if ((((Temporary110 = Temporary109.term, Temporary110)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary110).length - 1)] >>> 2) == 62)) {
                        var Temporary111 = pHEX60gensym26_1275069158;
                        if (ConstSet120[Temporary111.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary111.kind, NTI1275068421)); }
                      if ((iHEX60gensym26_1275070674 <= subInt((Temporary111.term).length, 5))) {
                      var Temporary112 = pHEX60gensym26_1275069158;
                      if (ConstSet121[Temporary112.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary112.kind, NTI1275068421)); }
                      var Temporary114 = pHEX60gensym26_1275069158;
                      if (ConstSet122[Temporary114.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary114.kind, NTI1275068421)); }
                      var Temporary116 = pHEX60gensym26_1275069158;
                      if (ConstSet123[Temporary116.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary116.kind, NTI1275068421)); }
                      var Temporary118 = pHEX60gensym26_1275069158;
                      if (ConstSet124[Temporary118.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary118.kind, NTI1275068421)); }
                      var Temporary120 = pHEX60gensym26_1275069158;
                      if (ConstSet125[Temporary120.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary120.kind, NTI1275068421)); }
                      aHEX60gensym26_1275070675 = chckRange((((((((Temporary113 = Temporary112.term, Temporary113)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary113).length - 1)] & 3) << 24) | (((Temporary115 = Temporary114.term, Temporary115)[chckIndx(addInt(iHEX60gensym26_1275070674, 1), 0, (Temporary115).length - 1)] & 63) << 18)) | (((Temporary117 = Temporary116.term, Temporary117)[chckIndx(addInt(iHEX60gensym26_1275070674, 2), 0, (Temporary117).length - 1)] & 63) << 12)) | (((Temporary119 = Temporary118.term, Temporary119)[chckIndx(addInt(iHEX60gensym26_1275070674, 3), 0, (Temporary119).length - 1)] & 63) << 6)) | ((Temporary121 = Temporary120.term, Temporary121)[chckIndx(addInt(iHEX60gensym26_1275070674, 4), 0, (Temporary121).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 5);
                      }
                      else {
                        aHEX60gensym26_1275070675 = 65533;
                        iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      
                      }
                      else {
                        var Temporary122 = pHEX60gensym26_1275069158;
                        if (ConstSet126[Temporary122.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary122.kind, NTI1275068421)); }
                      if ((((Temporary123 = Temporary122.term, Temporary123)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary123).length - 1)] >>> 1) == 126)) {
                        var Temporary124 = pHEX60gensym26_1275069158;
                        if (ConstSet127[Temporary124.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary124.kind, NTI1275068421)); }
                      if ((iHEX60gensym26_1275070674 <= subInt((Temporary124.term).length, 6))) {
                      var Temporary125 = pHEX60gensym26_1275069158;
                      if (ConstSet128[Temporary125.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary125.kind, NTI1275068421)); }
                      var Temporary127 = pHEX60gensym26_1275069158;
                      if (ConstSet129[Temporary127.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary127.kind, NTI1275068421)); }
                      var Temporary129 = pHEX60gensym26_1275069158;
                      if (ConstSet130[Temporary129.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary129.kind, NTI1275068421)); }
                      var Temporary131 = pHEX60gensym26_1275069158;
                      if (ConstSet131[Temporary131.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary131.kind, NTI1275068421)); }
                      var Temporary133 = pHEX60gensym26_1275069158;
                      if (ConstSet132[Temporary133.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary133.kind, NTI1275068421)); }
                      var Temporary135 = pHEX60gensym26_1275069158;
                      if (ConstSet133[Temporary135.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary135.kind, NTI1275068421)); }
                      aHEX60gensym26_1275070675 = chckRange(((((((((Temporary126 = Temporary125.term, Temporary126)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary126).length - 1)] & 1) << 30) | (((Temporary128 = Temporary127.term, Temporary128)[chckIndx(addInt(iHEX60gensym26_1275070674, 1), 0, (Temporary128).length - 1)] & 63) << 24)) | (((Temporary130 = Temporary129.term, Temporary130)[chckIndx(addInt(iHEX60gensym26_1275070674, 2), 0, (Temporary130).length - 1)] & 63) << 18)) | (((Temporary132 = Temporary131.term, Temporary132)[chckIndx(addInt(iHEX60gensym26_1275070674, 3), 0, (Temporary132).length - 1)] & 63) << 12)) | (((Temporary134 = Temporary133.term, Temporary134)[chckIndx(addInt(iHEX60gensym26_1275070674, 4), 0, (Temporary134).length - 1)] & 63) << 6)) | ((Temporary136 = Temporary135.term, Temporary136)[chckIndx(addInt(iHEX60gensym26_1275070674, 5), 0, (Temporary136).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 6);
                      }
                      else {
                        aHEX60gensym26_1275070675 = 65533;
                        iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      
                      }
                      else {
                        var Temporary137 = pHEX60gensym26_1275069158;
                        if (ConstSet134[Temporary137.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary137.kind, NTI1275068421)); }
                        aHEX60gensym26_1275070675 = chckRange((Temporary138 = Temporary137.term, Temporary138)[chckIndx(iHEX60gensym26_1275070674, 0, (Temporary138).length - 1)], -2147483648, 2147483647);
                        iHEX60gensym26_1275070674 = addInt(iHEX60gensym26_1275070674, 1);
                      }
                      }}}}}
                      if (!(HEX3DHEX3D_939525015(aHEX60gensym26_1275070675, 95))) {
                      break Label75;
                      }
                      
                    }
                } while (false);
                Label139: do {
                    Label140: while (true) {
                    if (!(result_1275069161 < (sHEX60gensym26_1275069157).length)) break Label140;
                      if ((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] <= 127)) {
                      bHEX60gensym26_1275070676 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
                      result_1275069161 = addInt(result_1275069161, 1);
                      }
                      else {
                      if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 5) == 6)) {
                      if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 2))) {
                      bHEX60gensym26_1275070676 = chckRange((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 31) << 6) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1275069161 = addInt(result_1275069161, 2);
                      }
                      else {
                        bHEX60gensym26_1275070676 = 65533;
                        result_1275069161 = addInt(result_1275069161, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 4) == 14)) {
                      if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 3))) {
                      bHEX60gensym26_1275070676 = chckRange(((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 15) << 12) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1275069161 = addInt(result_1275069161, 3);
                      }
                      else {
                        bHEX60gensym26_1275070676 = 65533;
                        result_1275069161 = addInt(result_1275069161, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 3) == 30)) {
                      if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 4))) {
                      bHEX60gensym26_1275070676 = chckRange((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 7) << 18) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1275069161 = addInt(result_1275069161, 4);
                      }
                      else {
                        bHEX60gensym26_1275070676 = 65533;
                        result_1275069161 = addInt(result_1275069161, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 2) == 62)) {
                      if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 5))) {
                      bHEX60gensym26_1275070676 = chckRange(((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 3) << 24) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1275069161 = addInt(result_1275069161, 5);
                      }
                      else {
                        bHEX60gensym26_1275070676 = 65533;
                        result_1275069161 = addInt(result_1275069161, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] >>> 1) == 126)) {
                      if ((result_1275069161 <= subInt((sHEX60gensym26_1275069157).length, 6))) {
                      bHEX60gensym26_1275070676 = chckRange((((((((sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)] & 1) << 30) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 1), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 2), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 3), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 4), 0, (sHEX60gensym26_1275069157).length - 1)] & 63) << 6)) | (sHEX60gensym26_1275069157[chckIndx(addInt(result_1275069161, 5), 0, (sHEX60gensym26_1275069157).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1275069161 = addInt(result_1275069161, 6);
                      }
                      else {
                        bHEX60gensym26_1275070676 = 65533;
                        result_1275069161 = addInt(result_1275069161, 1);
                      }
                      
                      }
                      else {
                        bHEX60gensym26_1275070676 = chckRange(sHEX60gensym26_1275069157[chckIndx(result_1275069161, 0, (sHEX60gensym26_1275069157).length - 1)], -2147483648, 2147483647);
                        result_1275069161 = addInt(result_1275069161, 1);
                      }
                      }}}}}
                      if (!(HEX3DHEX3D_939525015(bHEX60gensym26_1275070676, 95))) {
                      break Label139;
                      }
                      
                    }
                } while (false);
                if (((sHEX60gensym26_1275069157).length <= result_1275069161)) {
                  var Temporary141 = pHEX60gensym26_1275069158;
                  if (ConstSet135[Temporary141.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary141.kind, NTI1275068421)); }
                if (((Temporary141.term).length <= iHEX60gensym26_1275070674)) {
                break Label72;
                }
                else {
                  result_1275069161 = -1;
                  break Label72;
                }
                
                }
                else {
                if (!(HEX3DHEX3D_939525015(nuctoLower(aHEX60gensym26_1275070675), nuctoLower(bHEX60gensym26_1275070676)))) {
                result_1275069161 = -1;
                break Label72;
                }
                }
              }
          } while (false);
          result_1275069161 = subInt(result_1275069161, startHEX60gensym26_1275069159);
          break;
        case 12:
            if (!(startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) Temporary142 = false; else {              var Temporary143 = pHEX60gensym26_1275069158;
              if (ConstSet136[Temporary143.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary143.kind, NTI1275068421)); }
              Temporary142 = (Temporary143.ch == sHEX60gensym26_1275069157[chckIndx(startHEX60gensym26_1275069159, 0, (sHEX60gensym26_1275069157).length - 1)]);            }          if (Temporary142) {
          result_1275069161 = 1;
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 13:
            if (!(startHEX60gensym26_1275069159 < (sHEX60gensym26_1275069157).length)) Temporary144 = false; else {              var Temporary145 = pHEX60gensym26_1275069158;
              if (ConstSet137[Temporary145.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary145.kind, NTI1275068421)); }
              Temporary144 = (Temporary145.charChoice[sHEX60gensym26_1275069157[chckIndx(startHEX60gensym26_1275069159, 0, (sHEX60gensym26_1275069157).length - 1)]] != undefined);            }          if (Temporary144) {
          result_1275069161 = 1;
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 14:
          var oldMlHEX60gensym26_1275071101 = cHEX60gensym26_1275069160.ml;
          var Temporary146 = pHEX60gensym26_1275069158;
          if (ConstSet138[Temporary146.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nt\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary146.kind, NTI1275068421)); }
          result_1275069161 = matchIt_1275069156(sHEX60gensym26_1275069157, Temporary146.nt.rule, startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
          if ((result_1275069161 < 0)) {
          cHEX60gensym26_1275069160.ml = oldMlHEX60gensym26_1275071101;
          }
          
          break;
        case 15:
          var oldMlHEX60gensym26_1275071102 = cHEX60gensym26_1275069160.ml;
          result_1275069161 = 0;
          Label147: do {
            var iHEX60gensym26_1275071110 = 0;
            var colontmp__486542206 = 0;
            var Temporary148 = pHEX60gensym26_1275069158;
            if (ConstSet139[Temporary148.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary148.kind, NTI1275068421)); }
            colontmp__486542206 = (Temporary148.sons).length - 1;
            var res_486542207 = 0;
            Label149: do {
                Label150: while (true) {
                if (!(res_486542207 <= colontmp__486542206)) break Label150;
                  iHEX60gensym26_1275071110 = res_486542207;
                  var Temporary151 = pHEX60gensym26_1275069158;
                  if (ConstSet140[Temporary151.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary151.kind, NTI1275068421)); }
                  var xHEX60gensym26_1275071111 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary152 = Temporary151.sons, Temporary152)[chckIndx(iHEX60gensym26_1275071110, 0, (Temporary152).length - 1)], addInt(startHEX60gensym26_1275069159, result_1275069161), cHEX60gensym26_1275069160);
                  if ((xHEX60gensym26_1275071111 < 0)) {
                  cHEX60gensym26_1275069160.ml = oldMlHEX60gensym26_1275071102;
                  result_1275069161 = -1;
                  break Label147;
                  }
                  else {
                  result_1275069161 = addInt(result_1275069161, xHEX60gensym26_1275071111);
                  }
                  
                  res_486542207 = addInt(res_486542207, 1);
                }
            } while (false);
          } while (false);
          break;
        case 16:
          var oldMlHEX60gensym26_1275071116 = cHEX60gensym26_1275069160.ml;
          Label153: do {
            var iHEX60gensym26_1275071124 = 0;
            var colontmp__486542210 = 0;
            var Temporary154 = pHEX60gensym26_1275069158;
            if (ConstSet141[Temporary154.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary154.kind, NTI1275068421)); }
            colontmp__486542210 = (Temporary154.sons).length - 1;
            var res_486542211 = 0;
            Label155: do {
                Label156: while (true) {
                if (!(res_486542211 <= colontmp__486542210)) break Label156;
                  iHEX60gensym26_1275071124 = res_486542211;
                  var Temporary157 = pHEX60gensym26_1275069158;
                  if (ConstSet142[Temporary157.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary157.kind, NTI1275068421)); }
                  result_1275069161 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary158 = Temporary157.sons, Temporary158)[chckIndx(iHEX60gensym26_1275071124, 0, (Temporary158).length - 1)], startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
                  if ((0 <= result_1275069161)) {
                  break Label153;
                  }
                  
                  cHEX60gensym26_1275069160.ml = oldMlHEX60gensym26_1275071116;
                  res_486542211 = addInt(res_486542211, 1);
                }
            } while (false);
          } while (false);
          break;
        case 28:
          var oldMlHEX60gensym26_1275071125 = cHEX60gensym26_1275069160.ml;
          result_1275069161 = 0;
          Label159: do {
              Label160: while (true) {
              if (!(addInt(startHEX60gensym26_1275069159, result_1275069161) <= (sHEX60gensym26_1275069157).length)) break Label160;
                var Temporary161 = pHEX60gensym26_1275069158;
                if (ConstSet143[Temporary161.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary161.kind, NTI1275068421)); }
                var xHEX60gensym26_1275071126 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary162 = Temporary161.sons, Temporary162)[chckIndx(0, 0, (Temporary162).length - 1)], addInt(startHEX60gensym26_1275069159, result_1275069161), cHEX60gensym26_1275069160);
                if ((0 <= xHEX60gensym26_1275071126)) {
                result_1275069161 = addInt(result_1275069161, xHEX60gensym26_1275071126);
                break BeforeRet;
                }
                
                result_1275069161 = addInt(result_1275069161, 1);
              }
          } while (false);
          result_1275069161 = -1;
          cHEX60gensym26_1275069160.ml = oldMlHEX60gensym26_1275071125;
          break;
        case 29:
          var idxHEX60gensym26_1275071135 = cHEX60gensym26_1275069160.ml;
          cHEX60gensym26_1275069160.ml = addInt(cHEX60gensym26_1275069160.ml, 1);
          result_1275069161 = 0;
          Label163: do {
              Label164: while (true) {
              if (!(addInt(startHEX60gensym26_1275069159, result_1275069161) <= (sHEX60gensym26_1275069157).length)) break Label164;
                var Temporary165 = pHEX60gensym26_1275069158;
                if (ConstSet144[Temporary165.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary165.kind, NTI1275068421)); }
                var xHEX60gensym26_1275071140 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary166 = Temporary165.sons, Temporary166)[chckIndx(0, 0, (Temporary166).length - 1)], addInt(startHEX60gensym26_1275069159, result_1275069161), cHEX60gensym26_1275069160);
                if ((0 <= xHEX60gensym26_1275071140)) {
                if ((idxHEX60gensym26_1275071135 < 20)) {
                var colontmp__486542215 = startHEX60gensym26_1275069159;
                var colontmp__486542216 = subInt(addInt(startHEX60gensym26_1275069159, result_1275069161), 1);
                cHEX60gensym26_1275069160.matches[chckIndx(idxHEX60gensym26_1275071135, 0, (cHEX60gensym26_1275069160.matches).length - 1)] = nimCopy(cHEX60gensym26_1275069160.matches[chckIndx(idxHEX60gensym26_1275071135, 0, (cHEX60gensym26_1275069160.matches).length - 1)], {Field0: colontmp__486542215, Field1: colontmp__486542216}, NTI1275068949);
                }
                
                result_1275069161 = addInt(result_1275069161, xHEX60gensym26_1275071140);
                break BeforeRet;
                }
                
                result_1275069161 = addInt(result_1275069161, 1);
              }
          } while (false);
          result_1275069161 = -1;
          cHEX60gensym26_1275069160.ml = idxHEX60gensym26_1275071135;
          break;
        case 17:
          result_1275069161 = 0;
          Label167: do {
              Label168: while (true) {
              if (!true) break Label168;
                var Temporary169 = pHEX60gensym26_1275069158;
                if (ConstSet145[Temporary169.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary169.kind, NTI1275068421)); }
                var xHEX60gensym26_1275071149 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary170 = Temporary169.sons, Temporary170)[chckIndx(0, 0, (Temporary170).length - 1)], addInt(startHEX60gensym26_1275069159, result_1275069161), cHEX60gensym26_1275069160);
                if ((xHEX60gensym26_1275071149 <= 0)) {
                break Label167;
                }
                
                result_1275069161 = addInt(result_1275069161, xHEX60gensym26_1275071149);
              }
          } while (false);
          break;
        case 18:
          result_1275069161 = 0;
          var Temporary171 = pHEX60gensym26_1275069158;
          if (ConstSet146[Temporary171.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary171.kind, NTI1275068421)); }
          var chHEX60gensym26_1275071154 = Temporary171.ch;
          Label172: do {
              Label173: while (true) {
              if (!((addInt(startHEX60gensym26_1275069159, result_1275069161) < (sHEX60gensym26_1275069157).length) && (chHEX60gensym26_1275071154 == sHEX60gensym26_1275069157[chckIndx(addInt(startHEX60gensym26_1275069159, result_1275069161), 0, (sHEX60gensym26_1275069157).length - 1)]))) break Label173;
                result_1275069161 = addInt(result_1275069161, 1);
              }
          } while (false);
          break;
        case 19:
          result_1275069161 = 0;
          Label174: do {
              Label175: while (true) {
                if (!(addInt(startHEX60gensym26_1275069159, result_1275069161) < (sHEX60gensym26_1275069157).length)) Temporary176 = false; else {                  var Temporary177 = pHEX60gensym26_1275069158;
                  if (ConstSet147[Temporary177.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary177.kind, NTI1275068421)); }
                  Temporary176 = (Temporary177.charChoice[sHEX60gensym26_1275069157[chckIndx(addInt(startHEX60gensym26_1275069159, result_1275069161), 0, (sHEX60gensym26_1275069157).length - 1)]] != undefined);                }              if (!Temporary176) break Label175;
                result_1275069161 = addInt(result_1275069161, 1);
              }
          } while (false);
          break;
        case 21:
          var Temporary178 = pHEX60gensym26_1275069158;
          if (ConstSet148[Temporary178.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary178.kind, NTI1275068421)); }
          result_1275069161 = nimMax(0, matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary179 = Temporary178.sons, Temporary179)[chckIndx(0, 0, (Temporary179).length - 1)], startHEX60gensym26_1275069159, cHEX60gensym26_1275069160));
          break;
        case 22:
          var oldMlHEX60gensym26_1275071167 = cHEX60gensym26_1275069160.ml;
          var Temporary180 = pHEX60gensym26_1275069158;
          if (ConstSet149[Temporary180.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary180.kind, NTI1275068421)); }
          result_1275069161 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary181 = Temporary180.sons, Temporary181)[chckIndx(0, 0, (Temporary181).length - 1)], startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
          if ((0 <= result_1275069161)) {
          result_1275069161 = 0;
          }
          else {
            cHEX60gensym26_1275069160.ml = oldMlHEX60gensym26_1275071167;
          }
          
          break;
        case 23:
          var oldMlHEX60gensym26_1275071168 = cHEX60gensym26_1275069160.ml;
          var Temporary182 = pHEX60gensym26_1275069158;
          if (ConstSet150[Temporary182.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary182.kind, NTI1275068421)); }
          result_1275069161 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary183 = Temporary182.sons, Temporary183)[chckIndx(0, 0, (Temporary183).length - 1)], startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
          if ((result_1275069161 < 0)) {
          result_1275069161 = 0;
          }
          else {
            cHEX60gensym26_1275069160.ml = oldMlHEX60gensym26_1275071168;
            result_1275069161 = -1;
          }
          
          break;
        case 24:
            var Temporary185 = pHEX60gensym26_1275069158;
            if (ConstSet151[Temporary185.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary185.kind, NTI1275068421)); }
            if (((Temporary185.sons).length == 0)) Temporary184 = true; else {              var Temporary186 = pHEX60gensym26_1275069158;
              if (ConstSet152[Temporary186.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary186.kind, NTI1275068421)); }
              Temporary184 = ((Temporary187 = Temporary186.sons, Temporary187)[chckIndx(0, 0, (Temporary187).length - 1)].kind == 0);            }          if (Temporary184) {
          cHEX60gensym26_1275069160.ml = subInt(cHEX60gensym26_1275069160.ml, 1);
          var colontmp__486542220 = 0;
          var colontmp__486542221 = 0;
          cHEX60gensym26_1275069160.matches[chckIndx(cHEX60gensym26_1275069160.ml, 0, (cHEX60gensym26_1275069160.matches).length - 1)] = nimCopy(cHEX60gensym26_1275069160.matches[chckIndx(cHEX60gensym26_1275069160.ml, 0, (cHEX60gensym26_1275069160.matches).length - 1)], {Field0: colontmp__486542220, Field1: colontmp__486542221}, NTI1275068949);
          result_1275069161 = 0;
          }
          else {
            var idxHEX60gensym26_1275071180 = cHEX60gensym26_1275069160.ml;
            var Temporary188 = pHEX60gensym26_1275069158;
            if (ConstSet153[Temporary188.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary188.kind, NTI1275068421)); }
            result_1275069161 = matchIt_1275069156(sHEX60gensym26_1275069157, (Temporary189 = Temporary188.sons, Temporary189)[chckIndx(0, 0, (Temporary189).length - 1)], startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
            if ((0 <= result_1275069161)) {
            cHEX60gensym26_1275069160.ml = addInt(cHEX60gensym26_1275069160.ml, 1);
            if ((idxHEX60gensym26_1275071180 < 20)) {
            var colontmp__486542222 = startHEX60gensym26_1275069159;
            var colontmp__486542223 = subInt(addInt(startHEX60gensym26_1275069159, result_1275069161), 1);
            cHEX60gensym26_1275069160.matches[chckIndx(idxHEX60gensym26_1275071180, 0, (cHEX60gensym26_1275069160.matches).length - 1)] = nimCopy(cHEX60gensym26_1275069160.matches[chckIndx(idxHEX60gensym26_1275071180, 0, (cHEX60gensym26_1275069160.matches).length - 1)], {Field0: colontmp__486542222, Field1: colontmp__486542223}, NTI1275068949);
            }
            
            }
            
          }
          
          break;
        case 25:
          result_1275069161 = matchBackRef_1275069162(sHEX60gensym26_1275069157, pHEX60gensym26_1275069158, startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
          break;
        case 26:
          result_1275069161 = matchBackRef_1275069162(sHEX60gensym26_1275069157, pHEX60gensym26_1275069158, startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
          break;
        case 27:
          result_1275069161 = matchBackRef_1275069162(sHEX60gensym26_1275069157, pHEX60gensym26_1275069158, startHEX60gensym26_1275069159, cHEX60gensym26_1275069160);
          break;
        case 32:
          if ((cHEX60gensym26_1275069160.origStart == startHEX60gensym26_1275069159)) {
          result_1275069161 = 0;
          }
          else {
            result_1275069161 = -1;
          }
          
          break;
        case 30:
        case 31:
          if (true) {
          failedAssertImpl_218103864(makeNimstrLit("pegs.nim(861, 31) `false` "));
          }
          
          break;
        }
      } while (false);

      return result_1275069161;

    }

  var result_1275069105 = 0;

    result_1275069105 = matchIt_1275069156(s_1275069101, p_1275069102, start_1275069103, c_1275069104);

  return result_1275069105;

}

function npegsmatchLenCapture(s_1275071267, pattern_1275071268, matches_1275071269, start_1275071270) {
  var result_1275071271 = 0;

    var c_1275071272 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    c_1275071272[0].origStart = start_1275071270;
    result_1275071271 = npegsrawMatch(s_1275071267, pattern_1275071268, start_1275071270, c_1275071272[0]);
    if ((0 <= result_1275071271)) {
    Label1: do {
      var kHEX60gensym565_1275071280 = 0;
      var colontmp__486542194 = 0;
      colontmp__486542194 = subInt(c_1275071272[0].ml, 1);
      var res_486542195 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486542195 <= colontmp__486542194)) break Label3;
            kHEX60gensym565_1275071280 = res_486542195;
            var startIdxHEX60gensym565_1275071281 = c_1275071272[0].matches[chckIndx(kHEX60gensym565_1275071280, 0, (c_1275071272[0].matches).length - 1)]["Field0"];
            var endIdxHEX60gensym565_1275071282 = c_1275071272[0].matches[chckIndx(kHEX60gensym565_1275071280, 0, (c_1275071272[0].matches).length - 1)]["Field1"];
            if (!((startIdxHEX60gensym565_1275071281 == -1))) {
            matches_1275071269[chckIndx(kHEX60gensym565_1275071280, 0, (matches_1275071269).length - 1)] = nimCopy(null, substr_33557907(s_1275071267, startIdxHEX60gensym565_1275071281, endIdxHEX60gensym565_1275071282), NTI33554439);
            }
            else {
              matches_1275071269[chckIndx(kHEX60gensym565_1275071280, 0, (matches_1275071269).length - 1)] = nimCopy(null, [], NTI33554439);
            }
            
            res_486542195 = addInt(res_486542195, 1);
          }
      } while (false);
    } while (false);
    }
    

  return result_1275071271;

}

function npegsmatchCapture(s_1275071299, pattern_1275071300, matches_1275071301, start_1275071302) {
  var result_1275071303 = false;

    result_1275071303 = !((npegsmatchLenCapture(s_1275071299, pattern_1275071300, matches_1275071301, start_1275071302) == -1));

  return result_1275071303;

}

function init_1275071670(L_1275071671, input_1275071672, filename_1275071673, line_1275071674, col_1275071675) {
    L_1275071671.buf = nimCopy(null, input_1275071672, NTI33554439);
    L_1275071671.bufpos = 0;
    L_1275071671.lineNumber = line_1275071674;
    L_1275071671.colOffset = col_1275071675;
    L_1275071671.lineStart = 0;
    L_1275071671.filename = nimCopy(null, filename_1275071673, NTI33554439);

  
}

function handleCR_1275071640(L_1275071641, pos_1275071642) {
      var Temporary1;

  var result_1275071643 = 0;

    if (!((L_1275071641.buf[chckIndx(pos_1275071642, 0, (L_1275071641.buf).length - 1)] == 13))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(1453, 9) `L.buf[pos] == \'\\r\'` "));
    }
    
    L_1275071641.lineNumber = addInt(L_1275071641.lineNumber, 1);
    result_1275071643 = addInt(pos_1275071642, 1);
      if (!(result_1275071643 < (L_1275071641.buf).length)) Temporary1 = false; else {        Temporary1 = (L_1275071641.buf[chckIndx(result_1275071643, 0, (L_1275071641.buf).length - 1)] == 10);      }    if (Temporary1) {
    result_1275071643 = addInt(result_1275071643, 1);
    }
    
    L_1275071641.lineStart = result_1275071643;

  return result_1275071643;

}

function handleLF_1275071657(L_1275071658, pos_1275071659) {
  var result_1275071660 = 0;

    if (!((L_1275071658.buf[chckIndx(pos_1275071659, 0, (L_1275071658.buf).length - 1)] == 10))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(1460, 9) `L.buf[pos] == \'\\n\'` "));
    }
    
    L_1275071658.lineNumber = addInt(L_1275071658.lineNumber, 1);
    result_1275071660 = addInt(pos_1275071659, 1);
    L_1275071658.lineStart = result_1275071660;

  return result_1275071660;

}

function skip_1275071789(c_1275071790) {
                  var Temporary5;

    var pos_1275071791 = c_1275071790.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!(pos_1275071791 < (c_1275071790.buf).length)) break Label2;
          switch (c_1275071790.buf[chckIndx(pos_1275071791, 0, (c_1275071790.buf).length - 1)]) {
          case 32:
          case 9:
            pos_1275071791 = addInt(pos_1275071791, 1);
            break;
          case 35:
            Label3: do {
                Label4: while (true) {
                  if (!(pos_1275071791 < (c_1275071790.buf).length)) Temporary5 = false; else {                    Temporary5 = !((ConstSet156[c_1275071790.buf[chckIndx(pos_1275071791, 0, (c_1275071790.buf).length - 1)]] != undefined));                  }                if (!Temporary5) break Label4;
                  pos_1275071791 = addInt(pos_1275071791, 1);
                }
            } while (false);
            break;
          case 13:
            pos_1275071791 = handleCR_1275071640(c_1275071790, pos_1275071791);
            break;
          case 10:
            pos_1275071791 = handleLF_1275071657(c_1275071790, pos_1275071791);
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);
    c_1275071790.bufpos = pos_1275071791;

  
}

function handleHexChar_1291845633(c_1291845634, x_1291845635, x_1291845635_Idx) {
  var result_1291845636 = false;

    result_1291845636 = true;
    switch (c_1291845634) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1291845635[x_1291845635_Idx] = ((x_1291845635[x_1291845635_Idx] << 4) | subInt(c_1291845634, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1291845635[x_1291845635_Idx] = ((x_1291845635[x_1291845635_Idx] << 4) | addInt(subInt(c_1291845634, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1291845635[x_1291845635_Idx] = ((x_1291845635[x_1291845635_Idx] << 4) | addInt(subInt(c_1291845634, 65), 10));
      break;
    default: 
      result_1291845636 = false;
      break;
    }

  return result_1291845636;

}

function getEscapedChar_1275071690(c_1275071691, tok_1275071692) {
            var Temporary3;
            var Temporary4;
        var Temporary5;

  BeforeRet: do {
    c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
    if (((c_1275071691.buf).length <= c_1275071691.bufpos)) {
    tok_1275071692.kind = 0;
    break BeforeRet;
    }
    
    switch (c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)]) {
    case 114:
    case 82:
    case 99:
    case 67:
      addChar(tok_1275071692.literal, 13);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 108:
    case 76:
      addChar(tok_1275071692.literal, 10);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 102:
    case 70:
      addChar(tok_1275071692.literal, 12);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 101:
    case 69:
      addChar(tok_1275071692.literal, 27);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 97:
    case 65:
      addChar(tok_1275071692.literal, 7);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 98:
    case 66:
      addChar(tok_1275071692.literal, 8);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 118:
    case 86:
      addChar(tok_1275071692.literal, 11);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 116:
    case 84:
      addChar(tok_1275071692.literal, 9);;
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      break;
    case 120:
    case 88:
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      if (((c_1275071691.buf).length <= c_1275071691.bufpos)) {
      tok_1275071692.kind = 0;
      break BeforeRet;
      }
      
      var xi_1275071733 = [0];
      if (handleHexChar_1291845633(c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)], xi_1275071733, 0)) {
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      if (handleHexChar_1291845633(c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)], xi_1275071733, 0)) {
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      }
      
      }
      
      if ((xi_1275071733[0] == 0)) {
      tok_1275071692.kind = 0;
      }
      else {
      addChar(tok_1275071692.literal, chckRange(xi_1275071733[0], 0, 255));;
      }
      
      break;
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      var val_1275071748 = subInt(c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)], 48);
      c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      var i_1275071753 = 1;
      Label1: do {
          Label2: while (true) {
            if (!(c_1275071691.bufpos < (c_1275071691.buf).length)) Temporary4 = false; else {              Temporary4 = (i_1275071753 <= 3);            }            if (!Temporary4) Temporary3 = false; else {              Temporary3 = (ConstSet158[c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)]] != undefined);            }          if (!Temporary3) break Label2;
            val_1275071748 = subInt(addInt(mulInt(val_1275071748, 10), c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)]), 48);
            c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
            i_1275071753 = addInt(i_1275071753, 1);
          }
      } while (false);
        if (!(0 < val_1275071748)) Temporary5 = false; else {          Temporary5 = (val_1275071748 <= 255);        }      if (Temporary5) {
      addChar(tok_1275071692.literal, chckRange(val_1275071748, 0, 255));;
      }
      else {
        tok_1275071692.kind = 0;
      }
      
      break;
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      tok_1275071692.kind = 0;
      break;
    default: 
      if ((ConstSet159[c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)]] != undefined)) {
      tok_1275071692.kind = 0;
      }
      else {
        addChar(tok_1275071692.literal, c_1275071691.buf[chckIndx(c_1275071691.bufpos, 0, (c_1275071691.buf).length - 1)]);;
        c_1275071691.bufpos = addInt(c_1275071691.bufpos, 1);
      }
      
      break;
    }
  } while (false);

  
}

function getCharSet_1275071848(c_1275071849, tok_1275071850) {
            var Temporary3;

    tok_1275071850.kind = 6;
    tok_1275071850.charset = nimCopy(tok_1275071850.charset, ConstSet157, NTI1275073797);
    var pos_1275071851 = addInt(c_1275071849.bufpos, 1);
    var caret_1275071852 = false;
    if ((pos_1275071851 < (c_1275071849.buf).length)) {
    if ((c_1275071849.buf[chckIndx(pos_1275071851, 0, (c_1275071849.buf).length - 1)] == 94)) {
    pos_1275071851 = addInt(pos_1275071851, 1);
    caret_1275071852 = true;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!(pos_1275071851 < (c_1275071849.buf).length)) break Label2;
          var ch_1275071857 = 0;
          switch (c_1275071849.buf[chckIndx(pos_1275071851, 0, (c_1275071849.buf).length - 1)]) {
          case 93:
            if ((pos_1275071851 < (c_1275071849.buf).length)) {
            pos_1275071851 = addInt(pos_1275071851, 1);
            }
            
            break Label1;
            break;
          case 92:
            c_1275071849.bufpos = pos_1275071851;
            getEscapedChar_1275071690(c_1275071849, tok_1275071850);
            pos_1275071851 = c_1275071849.bufpos;
            ch_1275071857 = tok_1275071850.literal[chckIndx(subInt((tok_1275071850.literal).length, 1), 0, (tok_1275071850.literal).length - 1)];
            break;
          case 13:
          case 10:
          case 0:
            tok_1275071850.kind = 0;
            break Label1;
            break;
          default: 
            ch_1275071857 = c_1275071849.buf[chckIndx(pos_1275071851, 0, (c_1275071849.buf).length - 1)];
            pos_1275071851 = addInt(pos_1275071851, 1);
            break;
          }
          tok_1275071850.charset[ch_1275071857] = true;
          if ((c_1275071849.buf[chckIndx(pos_1275071851, 0, (c_1275071849.buf).length - 1)] == 45)) {
            if (!(addInt(pos_1275071851, 1) < (c_1275071849.buf).length)) Temporary3 = false; else {              Temporary3 = (c_1275071849.buf[chckIndx(addInt(pos_1275071851, 1), 0, (c_1275071849.buf).length - 1)] == 93);            }          if (Temporary3) {
          tok_1275071850.charset[45] = true;
          pos_1275071851 = addInt(pos_1275071851, 1);
          }
          else {
            if ((addInt(pos_1275071851, 1) < (c_1275071849.buf).length)) {
            pos_1275071851 = addInt(pos_1275071851, 1);
            }
            else {
              break Label1;
            }
            
            var ch2_1275071882 = 0;
            switch (c_1275071849.buf[chckIndx(pos_1275071851, 0, (c_1275071849.buf).length - 1)]) {
            case 92:
              c_1275071849.bufpos = pos_1275071851;
              getEscapedChar_1275071690(c_1275071849, tok_1275071850);
              pos_1275071851 = c_1275071849.bufpos;
              ch2_1275071882 = tok_1275071850.literal[chckIndx(subInt((tok_1275071850.literal).length, 1), 0, (tok_1275071850.literal).length - 1)];
              break;
            case 13:
            case 10:
            case 0:
              tok_1275071850.kind = 0;
              break Label1;
              break;
            default: 
              if ((addInt(pos_1275071851, 1) < (c_1275071849.buf).length)) {
              ch2_1275071882 = c_1275071849.buf[chckIndx(pos_1275071851, 0, (c_1275071849.buf).length - 1)];
              pos_1275071851 = addInt(pos_1275071851, 1);
              }
              else {
                break Label1;
              }
              
              break;
            }
            Label4: do {
              var i_1275071897 = 0;
              var colontmp__486542230 = 0;
              var colontmp__486542231 = 0;
              colontmp__486542230 = addInt(ch_1275071857, 1);
              colontmp__486542231 = ch2_1275071882;
              var res_486542232 = colontmp__486542230;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_486542232 <= colontmp__486542231)) break Label6;
                    i_1275071897 = res_486542232;
                    tok_1275071850.charset[chckRange(i_1275071897, 0, 255)] = true;
                    res_486542232 = addInt(res_486542232, 1);
                  }
              } while (false);
            } while (false);
          }
          
          }
          
        }
    } while (false);
    }
    
    c_1275071849.bufpos = pos_1275071851;
    if (caret_1275071852) {
    tok_1275071850.charset = nimCopy(tok_1275071850.charset, SetMinus(ConstSet160, tok_1275071850.charset), NTI1275073797);
    }
    

  
}

function getSymbol_1275071906(c_1275071907, tok_1275071908) {
            var Temporary3;

    var pos_1275071909 = c_1275071907.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!(pos_1275071909 < (c_1275071907.buf).length)) break Label2;
          addChar(tok_1275071908.literal, c_1275071907.buf[chckIndx(pos_1275071909, 0, (c_1275071907.buf).length - 1)]);;
          pos_1275071909 = addInt(pos_1275071909, 1);
            if (!(pos_1275071909 < (c_1275071907.buf).length)) Temporary3 = false; else {              Temporary3 = !((ConstSet162[c_1275071907.buf[chckIndx(pos_1275071909, 0, (c_1275071907.buf).length - 1)]] != undefined));            }          if (Temporary3) {
          break Label1;
          }
          
        }
    } while (false);
    c_1275071907.bufpos = pos_1275071909;
    tok_1275071908.kind = 4;

  
}

function getBuiltin_1275071918(c_1275071919, tok_1275071920) {
      var Temporary1;

      if (!(addInt(c_1275071919.bufpos, 1) < (c_1275071919.buf).length)) Temporary1 = false; else {        Temporary1 = (ConstSet161[c_1275071919.buf[chckIndx(addInt(c_1275071919.bufpos, 1), 0, (c_1275071919.buf).length - 1)]] != undefined);      }    if (Temporary1) {
    c_1275071919.bufpos = addInt(c_1275071919.bufpos, 1);
    getSymbol_1275071906(c_1275071919, tok_1275071920);
    tok_1275071920.kind = 21;
    }
    else {
      tok_1275071920.kind = 22;
      getEscapedChar_1275071690(c_1275071919, tok_1275071920);
    }
    

  
}

function getString_1275071804(c_1275071805, tok_1275071806) {
    tok_1275071806.kind = 5;
    var pos_1275071807 = addInt(c_1275071805.bufpos, 1);
    var quote_1275071808 = c_1275071805.buf[chckIndx(subInt(pos_1275071807, 1), 0, (c_1275071805.buf).length - 1)];
    Label1: do {
        Label2: while (true) {
        if (!(pos_1275071807 < (c_1275071805.buf).length)) break Label2;
          switch (c_1275071805.buf[chckIndx(pos_1275071807, 0, (c_1275071805.buf).length - 1)]) {
          case 92:
            c_1275071805.bufpos = pos_1275071807;
            getEscapedChar_1275071690(c_1275071805, tok_1275071806);
            pos_1275071807 = c_1275071805.bufpos;
            break;
          case 13:
          case 10:
          case 0:
            tok_1275071806.kind = 0;
            break Label1;
            break;
          default: 
            if ((c_1275071805.buf[chckIndx(pos_1275071807, 0, (c_1275071805.buf).length - 1)] == quote_1275071808)) {
            pos_1275071807 = addInt(pos_1275071807, 1);
            break Label1;
            }
            else {
              addChar(tok_1275071806.literal, c_1275071805.buf[chckIndx(pos_1275071807, 0, (c_1275071805.buf).length - 1)]);;
              pos_1275071807 = addInt(pos_1275071807, 1);
            }
            
            break;
          }
        }
    } while (false);
    c_1275071805.bufpos = pos_1275071807;

  
}

function getDollar_1275071817(c_1275071818, tok_1275071819) {
      var Temporary1;
      var Temporary2;
          var Temporary5;

    var pos_1275071820 = addInt(c_1275071818.bufpos, 1);
    var neg_1275071821 = false;
      if (!(pos_1275071820 < (c_1275071818.buf).length)) Temporary1 = false; else {        Temporary1 = (c_1275071818.buf[chckIndx(pos_1275071820, 0, (c_1275071818.buf).length - 1)] == 94);      }    if (Temporary1) {
    neg_1275071821 = true;
    pos_1275071820 = addInt(pos_1275071820, 1);
    }
    
      if (!(pos_1275071820 < (c_1275071818.buf).length)) Temporary2 = false; else {        Temporary2 = (ConstSet163[c_1275071818.buf[chckIndx(pos_1275071820, 0, (c_1275071818.buf).length - 1)]] != undefined);      }    if (Temporary2) {
    tok_1275071819.kind = 23;
    tok_1275071819.index = 0;
    Label3: do {
        Label4: while (true) {
          if (!(pos_1275071820 < (c_1275071818.buf).length)) Temporary5 = false; else {            Temporary5 = (ConstSet164[c_1275071818.buf[chckIndx(pos_1275071820, 0, (c_1275071818.buf).length - 1)]] != undefined);          }        if (!Temporary5) break Label4;
          tok_1275071819.index = subInt(addInt(mulInt(tok_1275071819.index, 10), c_1275071818.buf[chckIndx(pos_1275071820, 0, (c_1275071818.buf).length - 1)]), 48);
          pos_1275071820 = addInt(pos_1275071820, 1);
        }
    } while (false);
    if (neg_1275071821) {
    tok_1275071819.index = negInt(tok_1275071819.index);
    }
    
    }
    else {
      if (neg_1275071821) {
      pos_1275071820 = subInt(pos_1275071820, 1);
      }
      
      tok_1275071819.kind = 24;
    }
    
    c_1275071818.bufpos = pos_1275071820;

  
}

function getTok_1275071929(c_1275071930, tok_1275071931) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
        var Temporary7;

  BeforeRet: do {
    tok_1275071931.kind = 0;
    tok_1275071931.modifier = 0;
    (tok_1275071931.literal.length = 0);
    skip_1275071789(c_1275071930);
    if (((c_1275071930.buf).length <= c_1275071930.bufpos)) {
    tok_1275071931.kind = 1;
    tok_1275071931.literal = nimCopy(null, makeNimstrLit("[EOF]"), NTI33554439);
    addChar(tok_1275071931.literal, 0);;
    c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
    break BeforeRet;
    }
    
    switch (c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)]) {
    case 123:
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
        if (!(c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)] == 64)) Temporary2 = false; else {          Temporary2 = (addInt(c_1275071930.bufpos, 2) < (c_1275071930.buf).length);        }        if (!Temporary2) Temporary1 = false; else {          Temporary1 = (c_1275071930.buf[chckIndx(addInt(c_1275071930.bufpos, 1), 0, (c_1275071930.buf).length - 1)] == 125);        }      if (Temporary1) {
      tok_1275071931.kind = 11;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 2);
      tok_1275071931.literal.push.apply(tok_1275071931.literal, makeNimstrLit("{@}"));;
      }
      else {
        if (!(c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)] == 125)) Temporary3 = false; else {          Temporary3 = (c_1275071930.bufpos < (c_1275071930.buf).length);        }      if (Temporary3) {
      tok_1275071931.kind = 12;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      tok_1275071931.literal.push.apply(tok_1275071931.literal, makeNimstrLit("{}"));;
      }
      else {
        tok_1275071931.kind = 9;
        addChar(tok_1275071931.literal, 123);;
      }
      }
      break;
    case 125:
      tok_1275071931.kind = 10;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 125);;
      break;
    case 91:
      getCharSet_1275071848(c_1275071930, tok_1275071931);
      break;
    case 40:
      tok_1275071931.kind = 7;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 40);;
      break;
    case 41:
      tok_1275071931.kind = 8;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 41);;
      break;
    case 46:
      tok_1275071931.kind = 2;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 46);;
      break;
    case 95:
      tok_1275071931.kind = 3;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 95);;
      break;
    case 92:
      getBuiltin_1275071918(c_1275071930, tok_1275071931);
      break;
    case 39:
    case 34:
      getString_1275071804(c_1275071930, tok_1275071931);
      break;
    case 36:
      getDollar_1275071817(c_1275071930, tok_1275071931);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      getSymbol_1275071906(c_1275071930, tok_1275071931);
      if (((c_1275071930.buf).length <= c_1275071930.bufpos)) {
      break BeforeRet;
      }
      
        if ((ConstSet165[c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)]] != undefined)) Temporary4 = true; else {          if (!(c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)] == 36)) Temporary6 = false; else {            Temporary6 = (addInt(c_1275071930.bufpos, 1) < (c_1275071930.buf).length);          }          if (!Temporary6) Temporary5 = false; else {            Temporary5 = (ConstSet166[c_1275071930.buf[chckIndx(addInt(c_1275071930.bufpos, 1), 0, (c_1275071930.buf).length - 1)]] != undefined);          }          Temporary4 = Temporary5;        }      if (Temporary4) {
      switch (toJSStr(tok_1275071931.literal)) {
      case "i":
        tok_1275071931.modifier = 2;
        break;
      case "y":
        tok_1275071931.modifier = 3;
        break;
      case "v":
        tok_1275071931.modifier = 1;
        break;
      default: 
        break;
      }
      (tok_1275071931.literal.length = 0);
      if ((c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)] == 36)) {
      getDollar_1275071817(c_1275071930, tok_1275071931);
      }
      else {
      getString_1275071804(c_1275071930, tok_1275071931);
      }
      
      if ((tok_1275071931.modifier == 0)) {
      tok_1275071931.kind = 0;
      }
      
      }
      
      break;
    case 43:
      tok_1275071931.kind = 16;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 43);;
      break;
    case 42:
      tok_1275071931.kind = 15;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 43);;
      break;
    case 60:
        if (!(addInt(c_1275071930.bufpos, 2) < (c_1275071930.buf).length)) Temporary7 = false; else {          Temporary7 = (c_1275071930.buf[chckIndx(addInt(c_1275071930.bufpos, 1), 0, (c_1275071930.buf).length - 1)] == 45);        }      if (Temporary7) {
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 2);
      tok_1275071931.kind = 13;
      tok_1275071931.literal.push.apply(tok_1275071931.literal, makeNimstrLit("<-"));;
      }
      else {
      addChar(tok_1275071931.literal, 60);;
      }
      
      break;
    case 47:
      tok_1275071931.kind = 14;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 47);;
      break;
    case 63:
      tok_1275071931.kind = 19;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 63);;
      break;
    case 33:
      tok_1275071931.kind = 18;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 33);;
      break;
    case 38:
      tok_1275071931.kind = 17;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 33);;
      break;
    case 64:
      tok_1275071931.kind = 20;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 64);;
      if ((c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)] == 64)) {
      tok_1275071931.kind = 11;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 64);;
      }
      
      break;
    case 94:
      tok_1275071931.kind = 25;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      addChar(tok_1275071931.literal, 94);;
      break;
    default: 
      if (((c_1275071930.buf).length <= c_1275071930.bufpos)) {
      tok_1275071931.kind = 1;
      tok_1275071931.literal = nimCopy(null, makeNimstrLit("[EOF]"), NTI33554439);
      }
      
      addChar(tok_1275071931.literal, c_1275071930.buf[chckIndx(c_1275071930.bufpos, 0, (c_1275071930.buf).length - 1)]);;
      c_1275071930.bufpos = addInt(c_1275071930.bufpos, 1);
      break;
    }
  } while (false);

  
}

function getLine_1275071679(L_1275071680) {
  var result_1275071681 = 0;

    result_1275071681 = L_1275071680.lineNumber;

  return result_1275071681;

}

function getColumn_1275071676(L_1275071677) {
  var result_1275071678 = 0;

    result_1275071678 = addInt(absInt(subInt(L_1275071677.bufpos, L_1275071677.lineStart)), L_1275071677.colOffset);

  return result_1275071678;

}

function errorStr_1275071682(L_1275071683, msg_1275071684, line_1275071685, col_1275071686) {
    var Temporary1;
    var Temporary2;

  var result_1275071687 = [];

    if ((line_1275071685 < 0)) {
    Temporary1 = getLine_1275071679(L_1275071683);
    }
    else {
    Temporary1 = line_1275071685;
    }
    
    var line_1275071688 = Temporary1;
    if ((col_1275071686 < 0)) {
    Temporary2 = getColumn_1275071676(L_1275071683);
    }
    else {
    Temporary2 = col_1275071686;
    }
    
    var col_1275071689 = Temporary2;
    result_1275071687 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1($2, $3) Error: $4"), [nimCopy(null, L_1275071683.filename, NTI33554439), HEX24_335544323(line_1275071688), HEX24_335544323(col_1275071689), nimCopy(null, msg_1275071684, NTI33554439)]), NTI33554439);

  return result_1275071687;

}

function pegError_1275072054(p_1275072055, msg_1275072056, line_1275072057, col_1275072058) {
    var e_1275072059 = null;
    e_1275072059 = ({m_type: NTI1275074034, parent: null, name: null, message: [], trace: [], up: null});
    e_1275072059.message = nimCopy(null, errorStr_1275071682(p_1275072055, msg_1275072056, line_1275072057, col_1275072058), NTI33554439);
    raiseException(e_1275072059, "EInvalidPeg");

  
}

function getTok_1275072102(p_1275072103) {
    getTok_1275071929(p_1275072103, p_1275072103.tok);
    if ((p_1275072103.tok.kind == 0)) {
    pegError_1275072054(p_1275072103, (makeNimstrLit("\'") || []).concat(p_1275072103.tok.literal || [],makeNimstrLit("\' is invalid token") || []), -1, -1);
    }
    

  
}

function npegsOptional(a_1275068767) {
  var result_1275068768 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if ((ConstSet167[a_1275068767.kind] != undefined)) {
    result_1275068768 = nimCopy(result_1275068768, a_1275068767, NTI1275068424);
    }
    else {
      result_1275068768 = nimCopy(result_1275068768, {kind: 21, sons: [nimCopy(null, a_1275068767, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);
    }
    

  return result_1275068768;

}

function npegsAndPredicate(a_1275068835) {
  var result_1275068836 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068836 = nimCopy(result_1275068836, {kind: 22, sons: [nimCopy(null, a_1275068835, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);

  return result_1275068836;

}

function npegsNotPredicate(a_1275068842) {
  var result_1275068843 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068843 = nimCopy(result_1275068843, {kind: 23, sons: [nimCopy(null, a_1275068842, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);

  return result_1275068843;

}

function npegsSearch(a_1275068800) {
  var result_1275068801 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068801 = nimCopy(result_1275068801, {kind: 28, sons: [nimCopy(null, a_1275068800, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);

  return result_1275068801;

}

function npgegsCapturedSearch(a_1275068807) {
  var result_1275068808 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068808 = nimCopy(result_1275068808, {kind: 29, sons: [nimCopy(null, a_1275068807, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);

  return result_1275068808;

}

function len_1275068672(a_1275068673) {
    var Temporary1;

  var result_1275068674 = 0;

  BeforeRet: do {
    var Temporary1 = a_1275068673;
    if (ConstSet169[Temporary1.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1275068421)); }
    result_1275068674 = (Temporary1.sons).length;
    break BeforeRet;
  } while (false);

  return result_1275068674;

}

function npegstermStr(t_1275068641) {
  var result_1275068642 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(((t_1275068641).length == 1))) {
    result_1275068642 = nimCopy(result_1275068642, {kind: 9, term: nimCopy(null, t_1275068641, NTI33554439), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
    }
    else {
      result_1275068642 = nimCopy(result_1275068642, {kind: 12, ch: t_1275068641[chckIndx(0, 0, (t_1275068641).length - 1)], term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
    }
    

  return result_1275068642;

}

function add_1275068678(d_1275068679, s_1275068680) {
    var Temporary1;

    var Temporary1 = d_1275068679;
    if (ConstSet179[Temporary1.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1275068421)); }
    var Temporary2 = nimCopy(null, s_1275068680, NTI1275068424);
    Temporary1.sons.push(Temporary2);;

  
}

function addSequence_1275068737(dest_1275068738, elem_1275068739) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;

    var L_1275068740 = subInt(len_1275068672(dest_1275068738), 1);
      if (!(0 <= L_1275068740)) Temporary1 = false; else {        var Temporary2 = dest_1275068738;
        if (ConstSet170[Temporary2.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1275068421)); }
        Temporary1 = ((Temporary3 = Temporary2.sons, Temporary3)[chckIndx(L_1275068740, 0, (Temporary3).length - 1)].kind == 9);      }    if (Temporary1) {
    switch (elem_1275068739.kind) {
    case 9:
      var Temporary4 = dest_1275068738;
      if (ConstSet171[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1275068421)); }
      var Temporary6 = dest_1275068738;
      if (ConstSet173[Temporary6.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1275068421)); }
      var Temporary8 = (Temporary7 = Temporary6.sons, Temporary7)[chckIndx(L_1275068740, 0, (Temporary7).length - 1)];
      if (ConstSet172[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1275068421)); }
      var Temporary9 = elem_1275068739;
      if (ConstSet174[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1275068421)); }
      (Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1275068740, 0, (Temporary5).length - 1)] = nimCopy((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1275068740, 0, (Temporary5).length - 1)], npegstermStr((Temporary8.term || []).concat(Temporary9.term || [])), NTI1275068424);
      break;
    case 12:
      var Temporary10 = dest_1275068738;
      if (ConstSet175[Temporary10.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1275068421)); }
      var Temporary12 = dest_1275068738;
      if (ConstSet177[Temporary12.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1275068421)); }
      var Temporary14 = (Temporary13 = Temporary12.sons, Temporary13)[chckIndx(L_1275068740, 0, (Temporary13).length - 1)];
      if (ConstSet176[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1275068421)); }
      var Temporary15 = elem_1275068739;
      if (ConstSet178[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1275068421)); }
      (Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1275068740, 0, (Temporary11).length - 1)] = nimCopy((Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1275068740, 0, (Temporary11).length - 1)], npegstermStr((Temporary14.term || []).concat([Temporary15.ch])), NTI1275068424);
      break;
    default: 
      add_1275068678(dest_1275068738, elem_1275068739);
      break;
    }
    }
    else {
    add_1275068678(dest_1275068738, elem_1275068739);
    }
    

  
}

function npegssequence(a_1275068746) {
              var Temporary5;
    var Temporary8;
    var Temporary9;

  var result_1275068747 = [({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})];

    result_1275068747[0] = nimCopy(result_1275068747[0], {kind: 15, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);
    Label1: do {
      var xHEX60gensym12_1275068757 = null;
      var i_486542253 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542253 < (a_1275068746).length)) break Label3;
            xHEX60gensym12_1275068757 = a_1275068746[chckIndx(i_486542253, 0, (a_1275068746).length - 1)];
            if ((xHEX60gensym12_1275068757.kind == 15)) {
            Label4: do {
              var yHEX60gensym12_1275068765 = null;
              var colontmp__486542247 = [];
              var Temporary5 = xHEX60gensym12_1275068757;
              if (ConstSet168[Temporary5.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1275068421)); }
              colontmp__486542247 = Temporary5.sons;
              var i_486542249 = 0;
              var L_486542250 = (colontmp__486542247).length;
              Label6: do {
                  Label7: while (true) {
                  if (!(i_486542249 < L_486542250)) break Label7;
                    yHEX60gensym12_1275068765 = colontmp__486542247[chckIndx(i_486542249, 0, (colontmp__486542247).length - 1)];
                    addSequence_1275068737(result_1275068747[0], yHEX60gensym12_1275068765);
                    i_486542249 = addInt(i_486542249, 1);
                    if (!(((colontmp__486542247).length == L_486542250))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            }
            else {
            addSequence_1275068737(result_1275068747[0], xHEX60gensym12_1275068757);
            }
            
            i_486542253 = addInt(i_486542253, 1);
          }
      } while (false);
    } while (false);
    if ((len_1275068672(result_1275068747[0]) == 1)) {
    var Temporary8 = result_1275068747[0];
    if (ConstSet180[Temporary8.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1275068421)); }
    result_1275068747[0] = nimCopy(result_1275068747[0], (Temporary9 = Temporary8.sons, Temporary9)[chckIndx(0, 0, (Temporary9).length - 1)], NTI1275068424);
    }
    

  return result_1275068747[0];

}

function token_1275072190(terminal_1275072191, p_1275072192) {
  var result_1275072193 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if ((p_1275072192.skip.kind == 0)) {
    result_1275072193 = nimCopy(result_1275072193, terminal_1275072191, NTI1275068424);
    }
    else {
      result_1275072193 = nimCopy(result_1275072193, npegssequence([nimCopy(null, p_1275072192.skip, NTI1275068424), nimCopy(null, terminal_1275072191, NTI1275068424)]), NTI1275068424);
    }
    

  return result_1275072193;

}

function npegstermIgnoreCase(t_1275068644) {
  var result_1275068645 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068645 = nimCopy(result_1275068645, {kind: 10, term: nimCopy(null, t_1275068644, NTI33554439), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068645;

}

function npegstermIgnoreStyle(t_1275068647) {
  var result_1275068648 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068648 = nimCopy(result_1275068648, {kind: 11, term: nimCopy(null, t_1275068647, NTI33554439), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068648;

}

function modifiedTerm_1275072161(s_1275072162, m_1275072163) {
  var result_1275072164 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (m_1275072163) {
    case 0:
    case 1:
      result_1275072164 = nimCopy(result_1275072164, npegstermStr(s_1275072162), NTI1275068424);
      break;
    case 2:
      result_1275072164 = nimCopy(result_1275072164, npegstermIgnoreCase(s_1275072162), NTI1275068424);
      break;
    case 3:
      result_1275072164 = nimCopy(result_1275072164, npegstermIgnoreStyle(s_1275072162), NTI1275068424);
      break;
    }

  return result_1275072164;

}

function arrowIsNextTok_1275072034(c_1275072035) {
  var result_1275072036 = false;

  BeforeRet: do {
    var pos_1275072037 = c_1275072035.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!((pos_1275072037 < (c_1275072035.buf).length) && (ConstSet181[c_1275072035.buf[chckIndx(pos_1275072037, 0, (c_1275072035.buf).length - 1)]] != undefined))) break Label2;
          pos_1275072037 = addInt(pos_1275072037, 1);
        }
    } while (false);
    if (((c_1275072035.buf).length <= addInt(pos_1275072037, 1))) {
    break BeforeRet;
    }
    
    result_1275072036 = ((c_1275072035.buf[chckIndx(pos_1275072037, 0, (c_1275072035.buf).length - 1)] == 60) && (c_1275072035.buf[chckIndx(addInt(pos_1275072037, 1), 0, (c_1275072035.buf).length - 1)] == 45));
  } while (false);

  return result_1275072036;

}

function npegsnewNonTerminal(name_1275068926, line_1275068927, column_1275068928) {
  var result_1275068929 = null;

    result_1275068929 = {name: nimCopy(null, name_1275068926, NTI33554439), line: line_1275068927, col: column_1275068928, flags: {}, rule: ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})};

  return result_1275068929;

}

function getNonTerminal_1275072127(p_1275072128, name_1275072129) {
  var result_1275072130 = null;

  BeforeRet: do {
    Label1: do {
      var i_1275072138 = 0;
      var colontmp__486542257 = 0;
      colontmp__486542257 = (p_1275072128.nonterms).length - 1;
      var res_486542258 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486542258 <= colontmp__486542257)) break Label3;
            i_1275072138 = res_486542258;
            result_1275072130 = p_1275072128.nonterms[chckIndx(i_1275072138, 0, (p_1275072128.nonterms).length - 1)];
            if ((nsuCmpIgnoreStyle(result_1275072130.name, name_1275072129) == 0)) {
            break BeforeRet;
            }
            
            res_486542258 = addInt(res_486542258, 1);
          }
      } while (false);
    } while (false);
    result_1275072130 = npegsnewNonTerminal(name_1275072129, getLine_1275071679(p_1275072128), getColumn_1275071676(p_1275072128));
    p_1275072128.nonterms.push(result_1275072130);;
  } while (false);

  return result_1275072130;

}

function spaceCost_1275068896(n_1275068897) {
              var Temporary4;
              var Temporary5;

  var result_1275068898 = 0;

    switch (n_1275068897.kind) {
    case 0:
      break;
    case 9:
    case 10:
    case 11:
    case 12:
    case 18:
    case 13:
    case 19:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 20:
    case 25:
    case 26:
    case 27:
      result_1275068898 = 1;
      break;
    case 14:
      result_1275068898 = 6;
      break;
    default: 
      Label1: do {
        var i_1275068903 = 0;
        var colontmp__486542261 = 0;
        colontmp__486542261 = subInt(len_1275068672(n_1275068897), 1);
        var res_486542262 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(res_486542262 <= colontmp__486542261)) break Label3;
              i_1275068903 = res_486542262;
              var Temporary4 = n_1275068897;
              if (ConstSet182[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1275068421)); }
              result_1275068898 = addInt(result_1275068898, spaceCost_1275068896((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(i_1275068903, 0, (Temporary5).length - 1)]));
              if ((5 <= result_1275068898)) {
              break Label1;
              }
              
              res_486542262 = addInt(res_486542262, 1);
            }
        } while (false);
      } while (false);
      break;
    }

  return result_1275068898;

}

function npegsnonterminal(n_1275068909) {
      var Temporary1;

  var result_1275068910 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((n_1275068909 == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(350, 10) `n != nil` "));
    }
    
      if (!(n_1275068909.flags[0] != undefined)) Temporary1 = false; else {        Temporary1 = (spaceCost_1275068896(n_1275068909.rule) < 5);      }    if (Temporary1) {
    result_1275068910 = nimCopy(result_1275068910, n_1275068909.rule, NTI1275068424);
    }
    else {
      result_1275068910 = nimCopy(result_1275068910, {kind: 14, nt: n_1275068909, term: [], ch: 0, charChoice: null, index: 0, sons: []}, NTI1275068424);
    }
    

  return result_1275068910;

}

function npegscharSet(s_1275068658) {
    var Temporary1;
    var Temporary2;

  var result_1275068659 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((s_1275068658[0] != undefined)))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(167, 10) `\'\\x00\' notin s` "));
    }
    
    result_1275068659 = nimCopy(result_1275068659, {kind: 13, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
    var Temporary1 = result_1275068659;
    if (ConstSet183[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1275068421)); }
    Temporary1.charChoice = {};
    var Temporary2 = result_1275068659;
    if (ConstSet184[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1275068421)); }
    Temporary2.charChoice = nimCopy(Temporary2.charChoice, s_1275068658, NTI1275068429);

  return result_1275068659;

}

function seqExpr_1275072229(p_1275072230) {
  var result_1275072231 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275072231 = nimCopy(result_1275072231, primary_1275072198(p_1275072230), NTI1275068424);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (p_1275072230.tok.kind) {
          case 17:
          case 18:
          case 20:
          case 5:
          case 6:
          case 7:
          case 9:
          case 2:
          case 3:
          case 21:
          case 22:
          case 24:
          case 23:
          case 25:
          case 11:
          case 12:
            result_1275072231 = nimCopy(result_1275072231, npegssequence([nimCopy(null, result_1275072231, NTI1275068424), primary_1275072198(p_1275072230)]), NTI1275068424);
            break;
          case 4:
            if (!(arrowIsNextTok_1275072034(p_1275072230))) {
            result_1275072231 = nimCopy(result_1275072231, npegssequence([nimCopy(null, result_1275072231, NTI1275068424), primary_1275072198(p_1275072230)]), NTI1275068424);
            }
            else {
              break Label1;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);

  return result_1275072231;

}

function addChoice_1275068685(dest_1275068686, elem_1275068687) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;

    var L_1275068688 = subInt(len_1275068672(dest_1275068686), 1);
      if (!(0 <= L_1275068688)) Temporary1 = false; else {        var Temporary2 = dest_1275068686;
        if (ConstSet186[Temporary2.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1275068421)); }
        Temporary1 = ((Temporary3 = Temporary2.sons, Temporary3)[chckIndx(L_1275068688, 0, (Temporary3).length - 1)].kind == 13);      }    if (Temporary1) {
    switch (elem_1275068687.kind) {
    case 13:
      var Temporary4 = dest_1275068686;
      if (ConstSet187[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1275068421)); }
      var Temporary6 = dest_1275068686;
      if (ConstSet189[Temporary6.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1275068421)); }
      var Temporary8 = (Temporary7 = Temporary6.sons, Temporary7)[chckIndx(L_1275068688, 0, (Temporary7).length - 1)];
      if (ConstSet188[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1275068421)); }
      var Temporary9 = elem_1275068687;
      if (ConstSet190[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1275068421)); }
      (Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1275068688, 0, (Temporary5).length - 1)] = nimCopy((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1275068688, 0, (Temporary5).length - 1)], npegscharSet(SetPlus(Temporary8.charChoice, Temporary9.charChoice)), NTI1275068424);
      break;
    case 12:
      var Temporary10 = dest_1275068686;
      if (ConstSet191[Temporary10.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1275068421)); }
      var Temporary12 = dest_1275068686;
      if (ConstSet193[Temporary12.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1275068421)); }
      var Temporary14 = (Temporary13 = Temporary12.sons, Temporary13)[chckIndx(L_1275068688, 0, (Temporary13).length - 1)];
      if (ConstSet192[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1275068421)); }
      var Temporary15 = elem_1275068687;
      if (ConstSet194[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1275068421)); }
      (Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1275068688, 0, (Temporary11).length - 1)] = nimCopy((Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1275068688, 0, (Temporary11).length - 1)], npegscharSet(SetPlus(Temporary14.charChoice, setConstr(Temporary15.ch))), NTI1275068424);
      break;
    default: 
      add_1275068678(dest_1275068686, elem_1275068687);
      break;
    }
    }
    else {
    add_1275068678(dest_1275068686, elem_1275068687);
    }
    

  
}

function npegsOrderedChoice(a_1275068708) {
              var Temporary5;
    var Temporary8;
    var Temporary9;

  var result_1275068709 = [({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})];

    result_1275068709[0] = nimCopy(result_1275068709[0], {kind: 16, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);
    Label1: do {
      var xHEX60gensym10_1275068728 = null;
      var i_486542272 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542272 < (a_1275068708).length)) break Label3;
            xHEX60gensym10_1275068728 = a_1275068708[chckIndx(i_486542272, 0, (a_1275068708).length - 1)];
            if ((xHEX60gensym10_1275068728.kind == 16)) {
            Label4: do {
              var yHEX60gensym10_1275068736 = null;
              var colontmp__486542268 = [];
              var Temporary5 = xHEX60gensym10_1275068728;
              if (ConstSet185[Temporary5.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1275068421)); }
              colontmp__486542268 = Temporary5.sons;
              var i_486542269 = 0;
              var L_486542270 = (colontmp__486542268).length;
              Label6: do {
                  Label7: while (true) {
                  if (!(i_486542269 < L_486542270)) break Label7;
                    yHEX60gensym10_1275068736 = colontmp__486542268[chckIndx(i_486542269, 0, (colontmp__486542268).length - 1)];
                    addChoice_1275068685(result_1275068709[0], yHEX60gensym10_1275068736);
                    i_486542269 = addInt(i_486542269, 1);
                    if (!(((colontmp__486542268).length == L_486542270))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            }
            else {
            addChoice_1275068685(result_1275068709[0], xHEX60gensym10_1275068728);
            }
            
            i_486542272 = addInt(i_486542272, 1);
          }
      } while (false);
    } while (false);
    if ((len_1275068672(result_1275068709[0]) == 1)) {
    var Temporary8 = result_1275068709[0];
    if (ConstSet195[Temporary8.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1275068421)); }
    result_1275068709[0] = nimCopy(result_1275068709[0], (Temporary9 = Temporary8.sons, Temporary9)[chckIndx(0, 0, (Temporary9).length - 1)], NTI1275068424);
    }
    

  return result_1275068709[0];

}

function parseExpr_1275072125(p_1275072126) {
  var result_1275072234 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275072234 = nimCopy(result_1275072234, seqExpr_1275072229(p_1275072126), NTI1275068424);
    Label1: do {
        Label2: while (true) {
        if (!(p_1275072126.tok.kind == 14)) break Label2;
          getTok_1275072102(p_1275072126);
          result_1275072234 = nimCopy(result_1275072234, npegsOrderedChoice([nimCopy(null, result_1275072234, NTI1275068424), seqExpr_1275072229(p_1275072126)]), NTI1275068424);
        }
    } while (false);

  return result_1275072234;

}

function eat_1275072118(p_1275072119, kind_1275072120) {
    if ((p_1275072119.tok.kind == kind_1275072120)) {
    getTok_1275072102(p_1275072119);
    }
    else {
    pegError_1275072054(p_1275072119, (tokKindToStr_1275071630[chckIndx(kind_1275072120, 0, (tokKindToStr_1275071630).length - 1)] || []).concat(makeNimstrLit(" expected") || []), -1, -1);
    }
    

  
}

function npegsCapture(a_1275068869) {
  var result_1275068870 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068870 = nimCopy(result_1275068870, {kind: 24, sons: [nimCopy(null, a_1275068869, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);

  return result_1275068870;

}

function any_1275068848() {
  var result_1275068849 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068849 = nimCopy(result_1275068849, {kind: 1, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068849;

}

function anyRune_1275068850() {
  var result_1275068851 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068851 = nimCopy(result_1275068851, {kind: 2, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068851;

}

function newLine_1275068852() {
  var result_1275068853 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068853 = nimCopy(result_1275068853, {kind: 3, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068853;

}

function npegsGreedyRep(a_1275068788) {
      var Temporary1;
      var Temporary2;

  var result_1275068789 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (a_1275068788.kind) {
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      if (true) {
      failedAssertImpl_218103864(makeNimstrLit("pegs.nim(234, 12) `false` "));
      }
      
      break;
    case 12:
      var Temporary1 = a_1275068788;
      if (ConstSet205[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1275068421)); }
      result_1275068789 = nimCopy(result_1275068789, {kind: 18, ch: Temporary1.ch, term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
      break;
    case 13:
      var Temporary2 = a_1275068788;
      if (ConstSet206[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1275068421)); }
      result_1275068789 = nimCopy(result_1275068789, {kind: 19, charChoice: Temporary2.charChoice, term: [], ch: 0, nt: null, index: 0, sons: []}, NTI1275068424);
      break;
    case 1:
    case 2:
      result_1275068789 = nimCopy(result_1275068789, {kind: 20, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);
      break;
    default: 
      result_1275068789 = nimCopy(result_1275068789, {kind: 17, sons: [nimCopy(null, a_1275068788, NTI1275068424)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1275068424);
      break;
    }

  return result_1275068789;

}

function unicodeLetter_1275068854() {
  var result_1275068855 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068855 = nimCopy(result_1275068855, {kind: 4, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068855;

}

function unicodeUpper_1275068858() {
  var result_1275068859 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068859 = nimCopy(result_1275068859, {kind: 6, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068859;

}

function unicodeLower_1275068856() {
  var result_1275068857 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068857 = nimCopy(result_1275068857, {kind: 5, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068857;

}

function unicodeTitle_1275068860() {
  var result_1275068861 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068861 = nimCopy(result_1275068861, {kind: 7, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068861;

}

function unicodeWhitespace_1275068862() {
  var result_1275068863 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068863 = nimCopy(result_1275068863, {kind: 8, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068863;

}

function builtin_1275072171(p_1275072172) {
  var result_1275072173 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (toJSStr(p_1275072172.tok.literal)) {
    case "n":
      result_1275072173 = nimCopy(result_1275072173, newLine_1275068852(), NTI1275068424);
      break;
    case "d":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet196), NTI1275068424);
      break;
    case "D":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet197), NTI1275068424);
      break;
    case "s":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet198), NTI1275068424);
      break;
    case "S":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet199), NTI1275068424);
      break;
    case "w":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet200), NTI1275068424);
      break;
    case "W":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet201), NTI1275068424);
      break;
    case "a":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet202), NTI1275068424);
      break;
    case "A":
      result_1275072173 = nimCopy(result_1275072173, npegscharSet(ConstSet203), NTI1275068424);
      break;
    case "ident":
      result_1275072173 = nimCopy(result_1275072173, npegssequence([npegscharSet(ConstSet204), npegsGreedyRep(npegscharSet(ConstSet207))]), NTI1275068424);
      break;
    case "letter":
      result_1275072173 = nimCopy(result_1275072173, unicodeLetter_1275068854(), NTI1275068424);
      break;
    case "upper":
      result_1275072173 = nimCopy(result_1275072173, unicodeUpper_1275068858(), NTI1275068424);
      break;
    case "lower":
      result_1275072173 = nimCopy(result_1275072173, unicodeLower_1275068856(), NTI1275068424);
      break;
    case "title":
      result_1275072173 = nimCopy(result_1275072173, unicodeTitle_1275068860(), NTI1275068424);
      break;
    case "white":
      result_1275072173 = nimCopy(result_1275072173, unicodeWhitespace_1275068862(), NTI1275068424);
      break;
    default: 
      pegError_1275072054(p_1275072172, (makeNimstrLit("unknown built-in: ") || []).concat(p_1275072172.tok.literal || []), -1, -1);
      break;
    }

  return result_1275072173;

}

function npegstermChar(t_1275068650) {
  var result_1275068651 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((t_1275068650 == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(162, 10) `t != \'\\x00\'` "));
    }
    
    result_1275068651 = nimCopy(result_1275068651, {kind: 12, ch: t_1275068650, term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068651;

}

function endAnchor_1275068866() {
  var result_1275068867 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068867 = nimCopy(result_1275068867, npegsNotPredicate(any_1275068848()), NTI1275068424);

  return result_1275068867;

}

function startAnchor_1275068864() {
  var result_1275068865 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275068865 = nimCopy(result_1275068865, {kind: 32, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1275068424);

  return result_1275068865;

}

function npegsbackref(index_1275068876, reverse_1275068877) {
    var Temporary1;

  var result_1275068878 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1275068877) {
    Temporary1 = negInt(index_1275068876);
    }
    else {
    Temporary1 = subInt(index_1275068876, 1);
    }
    
    result_1275068878 = nimCopy(result_1275068878, {kind: 25, index: nimCopy(null, chckRange(Temporary1, -20, 19), NTI1275068431), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1275068424);

  return result_1275068878;

}

function npegsbackrefIgnoreCase(index_1275068889, reverse_1275068890) {
    var Temporary1;

  var result_1275068891 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1275068890) {
    Temporary1 = negInt(index_1275068889);
    }
    else {
    Temporary1 = subInt(index_1275068889, 1);
    }
    
    result_1275068891 = nimCopy(result_1275068891, {kind: 26, index: nimCopy(null, chckRange(Temporary1, -20, 19), NTI1275068431), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1275068424);

  return result_1275068891;

}

function npegsbackrefIgnoreStyle(index_1275068893, reverse_1275068894) {
    var Temporary1;

  var result_1275068895 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1275068894) {
    Temporary1 = negInt(index_1275068893);
    }
    else {
    Temporary1 = subInt(index_1275068893, 1);
    }
    
    result_1275068895 = nimCopy(result_1275068895, {kind: 27, index: nimCopy(null, chckRange(Temporary1, -20, 19), NTI1275068431), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1275068424);

  return result_1275068895;

}

function modifiedBackref_1275072165(s_1275072166, m_1275072167) {
    var Temporary1;

  var result_1275072168 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    var reverse_1275072169 = (s_1275072166 < 0);
    if (reverse_1275072169) {
    Temporary1 = negInt(s_1275072166);
    }
    else {
    Temporary1 = s_1275072166;
    }
    
    var index_1275072170 = Temporary1;
    switch (m_1275072167) {
    case 0:
    case 1:
      result_1275072168 = nimCopy(result_1275072168, npegsbackref(chckRange(index_1275072170, 1, 20), reverse_1275072169), NTI1275068424);
      break;
    case 2:
      result_1275072168 = nimCopy(result_1275072168, npegsbackrefIgnoreCase(chckRange(index_1275072170, 1, 20), reverse_1275072169), NTI1275068424);
      break;
    case 3:
      result_1275072168 = nimCopy(result_1275072168, npegsbackrefIgnoreStyle(chckRange(index_1275072170, 1, 20), reverse_1275072169), NTI1275068424);
      break;
    }

  return result_1275072168;

}

function npegsGreedyPosRep(a_1275068814) {
  var result_1275068815 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

  BeforeRet: do {
    result_1275068815 = nimCopy(result_1275068815, npegssequence([nimCopy(null, a_1275068814, NTI1275068424), npegsGreedyRep(a_1275068814)]), NTI1275068424);
    break BeforeRet;
  } while (false);

  return result_1275068815;

}

function primary_1275072198(p_1275072199) {
        var Temporary1;

  var result_1275072200 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

  BeforeRet: do {
    switch (p_1275072199.tok.kind) {
    case 17:
      getTok_1275072102(p_1275072199);
      result_1275072200 = nimCopy(result_1275072200, npegsAndPredicate(primary_1275072198(p_1275072199)), NTI1275068424);
      break BeforeRet;
      break;
    case 18:
      getTok_1275072102(p_1275072199);
      result_1275072200 = nimCopy(result_1275072200, npegsNotPredicate(primary_1275072198(p_1275072199)), NTI1275068424);
      break BeforeRet;
      break;
    case 20:
      getTok_1275072102(p_1275072199);
      result_1275072200 = nimCopy(result_1275072200, npegsSearch(primary_1275072198(p_1275072199)), NTI1275068424);
      break BeforeRet;
      break;
    case 11:
      getTok_1275072102(p_1275072199);
      result_1275072200 = nimCopy(result_1275072200, npgegsCapturedSearch(token_1275072190(primary_1275072198(p_1275072199), p_1275072199)), NTI1275068424);
      break BeforeRet;
      break;
    default: 
      break;
    }
    switch (p_1275072199.tok.kind) {
    case 4:
      if (p_1275072199.identIsVerbatim) {
      var m_1275072201 = p_1275072199.tok.modifier;
      if ((m_1275072201 == 0)) {
      m_1275072201 = p_1275072199.modifier;
      }
      
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(modifiedTerm_1275072161(p_1275072199.tok.literal, m_1275072201), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      }
      else {
      if (!(arrowIsNextTok_1275072034(p_1275072199))) {
      var nt_1275072206 = getNonTerminal_1275072127(p_1275072199, p_1275072199.tok.literal);
      nt_1275072206.flags[1] = true;
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(npegsnonterminal(nt_1275072206), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      }
      else {
      pegError_1275072054(p_1275072199, (makeNimstrLit("expression expected, but found: ") || []).concat(p_1275072199.tok.literal || []), -1, -1);
      }
      }
      break;
    case 5:
      var m_1275072211 = p_1275072199.tok.modifier;
      if ((m_1275072211 == 0)) {
      m_1275072211 = p_1275072199.modifier;
      }
      
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(modifiedTerm_1275072161(p_1275072199.tok.literal, m_1275072211), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 6:
      if ((p_1275072199.tok.charset[0] != undefined)) {
      pegError_1275072054(p_1275072199, makeNimstrLit("binary zero (\'\\0\') not allowed in character class"), -1, -1);
      }
      
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(npegscharSet(p_1275072199.tok.charset), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 7:
      getTok_1275072102(p_1275072199);
      result_1275072200 = nimCopy(result_1275072200, parseExpr_1275072125(p_1275072199), NTI1275068424);
      eat_1275072118(p_1275072199, 8);
      break;
    case 9:
      getTok_1275072102(p_1275072199);
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(npegsCapture(parseExpr_1275072125(p_1275072199)), p_1275072199), NTI1275068424);
      eat_1275072118(p_1275072199, 10);
      p_1275072199.captures = addInt(p_1275072199.captures, 1);
      break;
    case 12:
      result_1275072200 = nimCopy(result_1275072200, npegsCapture({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 2:
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(any_1275068848(), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 3:
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(anyRune_1275068850(), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 21:
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(builtin_1275072171(p_1275072199), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 22:
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(npegstermChar(p_1275072199.tok.literal[chckIndx(0, 0, (p_1275072199.tok.literal).length - 1)]), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 24:
      result_1275072200 = nimCopy(result_1275072200, endAnchor_1275068866(), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 25:
      result_1275072200 = nimCopy(result_1275072200, startAnchor_1275068864(), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    case 23:
        if ((p_1275072199.captures < absInt(p_1275072199.tok.index))) Temporary1 = true; else {          Temporary1 = (p_1275072199.tok.index == 0);        }      if (Temporary1) {
      pegError_1275072054(p_1275072199, (makeNimstrLit("invalid back reference index: ") || []).concat(HEX24_335544323(p_1275072199.tok.index) || []), -1, -1);
      }
      
      var m_1275072224 = p_1275072199.tok.modifier;
      if ((m_1275072224 == 0)) {
      m_1275072224 = p_1275072199.modifier;
      }
      
      result_1275072200 = nimCopy(result_1275072200, token_1275072190(modifiedBackref_1275072165(p_1275072199.tok.index, m_1275072224), p_1275072199), NTI1275068424);
      getTok_1275072102(p_1275072199);
      break;
    default: 
      pegError_1275072054(p_1275072199, (makeNimstrLit("expression expected, but found: ") || []).concat(p_1275072199.tok.literal || []), -1, -1);
      getTok_1275072102(p_1275072199);
      break;
    }
    Label2: do {
        Label3: while (true) {
        if (!true) break Label3;
          switch (p_1275072199.tok.kind) {
          case 19:
            result_1275072200 = nimCopy(result_1275072200, npegsOptional(result_1275072200), NTI1275068424);
            getTok_1275072102(p_1275072199);
            break;
          case 15:
            result_1275072200 = nimCopy(result_1275072200, npegsGreedyRep(result_1275072200), NTI1275068424);
            getTok_1275072102(p_1275072199);
            break;
          case 16:
            result_1275072200 = nimCopy(result_1275072200, npegsGreedyPosRep(result_1275072200), NTI1275068424);
            getTok_1275072102(p_1275072199);
            break;
          default: 
            break Label2;
            break;
          }
        }
    } while (false);
  } while (false);

  return result_1275072200;

}

function parseRule_1275072239(p_1275072240) {
      var Temporary1;

  var result_1275072241 = null;

      if (!(p_1275072240.tok.kind == 4)) Temporary1 = false; else {        Temporary1 = arrowIsNextTok_1275072034(p_1275072240);      }    if (Temporary1) {
    result_1275072241 = getNonTerminal_1275072127(p_1275072240, p_1275072240.tok.literal);
    if ((result_1275072241.flags[0] != undefined)) {
    pegError_1275072054(p_1275072240, (makeNimstrLit("attempt to redefine: ") || []).concat(result_1275072241.name || []), -1, -1);
    }
    
    result_1275072241.line = getLine_1275071679(p_1275072240);
    result_1275072241.col = getColumn_1275071676(p_1275072240);
    getTok_1275072102(p_1275072240);
    eat_1275072118(p_1275072240, 13);
    result_1275072241.rule = nimCopy(result_1275072241.rule, parseExpr_1275072125(p_1275072240), NTI1275068424);
    result_1275072241.flags[0] = true;
    }
    else {
    pegError_1275072054(p_1275072240, (makeNimstrLit("rule expected, but found: ") || []).concat(p_1275072240.tok.literal || []), -1, -1);
    }
    

  return result_1275072241;

}

function rawParse_1275072254(p_1275072255) {
      var Temporary3;
              var Temporary9;

  var result_1275072256 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    Label1: do {
        Label2: while (true) {
        if (!(p_1275072255.tok.kind == 21)) break Label2;
          switch (toJSStr(p_1275072255.tok.literal)) {
          case "i":
            p_1275072255.modifier = 2;
            getTok_1275072102(p_1275072255);
            break;
          case "y":
            p_1275072255.modifier = 3;
            getTok_1275072102(p_1275072255);
            break;
          case "skip":
            getTok_1275072102(p_1275072255);
            p_1275072255.skip = nimCopy(p_1275072255.skip, npegsOptional(primary_1275072198(p_1275072255)), NTI1275068424);
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);
      if (!(p_1275072255.tok.kind == 4)) Temporary3 = false; else {        Temporary3 = arrowIsNextTok_1275072034(p_1275072255);      }    if (Temporary3) {
    result_1275072256 = nimCopy(result_1275072256, parseRule_1275072239(p_1275072255).rule, NTI1275068424);
    Label4: do {
        Label5: while (true) {
        if (!!((p_1275072255.tok.kind == 1))) break Label5;
          var _ = parseRule_1275072239(p_1275072255);
        }
    } while (false);
    }
    else {
      p_1275072255.identIsVerbatim = true;
      result_1275072256 = nimCopy(result_1275072256, parseExpr_1275072125(p_1275072255), NTI1275068424);
    }
    
    if (!((p_1275072255.tok.kind == 1))) {
    pegError_1275072054(p_1275072255, (makeNimstrLit("EOF expected, but found: ") || []).concat(p_1275072255.tok.literal || []), -1, -1);
    }
    
    Label6: do {
      var i_1275072280 = 0;
      var colontmp__486542241 = 0;
      colontmp__486542241 = (p_1275072255.nonterms).length - 1;
      var res_486542242 = 0;
      Label7: do {
          Label8: while (true) {
          if (!(res_486542242 <= colontmp__486542241)) break Label8;
            i_1275072280 = res_486542242;
            var nt_1275072281 = p_1275072255.nonterms[chckIndx(i_1275072280, 0, (p_1275072255.nonterms).length - 1)];
            if (!((nt_1275072281.flags[0] != undefined))) {
            pegError_1275072054(p_1275072255, (makeNimstrLit("undeclared identifier: ") || []).concat(nt_1275072281.name || []), nt_1275072281.line, nt_1275072281.col);
            }
            else {
              if (!!((nt_1275072281.flags[1] != undefined))) Temporary9 = false; else {                Temporary9 = (0 < i_1275072280);              }            if (Temporary9) {
            pegError_1275072054(p_1275072255, (makeNimstrLit("unused rule: ") || []).concat(nt_1275072281.name || []), nt_1275072281.line, nt_1275072281.col);
            }
            }
            res_486542242 = addInt(res_486542242, 1);
          }
      } while (false);
    } while (false);

  return result_1275072256;

}

function parsePeg_1275072290(pattern_1275072291, filename_1275072292, line_1275072293, col_1275072294) {
  var result_1275072295 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    var p_1275072296 = [({m_type: NTI1275074035, tok: ({kind: 0, modifier: 0, literal: [], charset: {}, index: 0}), nonterms: [], modifier: 0, captures: 0, identIsVerbatim: false, skip: ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}), bufpos: 0, buf: [], lineNumber: 0, lineStart: 0, colOffset: 0, filename: []})];
    init_1275071670(p_1275072296[0], pattern_1275072291, filename_1275072292, line_1275072293, col_1275072294);
    p_1275072296[0].tok.kind = 0;
    p_1275072296[0].tok.modifier = 0;
    p_1275072296[0].tok.literal = nimCopy(null, [], NTI33554439);
    p_1275072296[0].tok.charset = nimCopy(p_1275072296[0].tok.charset, ConstSet155, NTI1275073797);
    p_1275072296[0].nonterms = nimCopy(null, [], NTI1275074220);
    p_1275072296[0].identIsVerbatim = false;
    getTok_1275072102(p_1275072296[0]);
    result_1275072295 = nimCopy(result_1275072295, rawParse_1275072254(p_1275072296[0]), NTI1275068424);

  return result_1275072295;

}

function peg_1275072301(pattern_1275072302) {
  var result_1275072303 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1275072303 = nimCopy(result_1275072303, parsePeg_1275072290(pattern_1275072302, makeNimstrLit("pattern"), 1, 0), NTI1275068424);

  return result_1275072303;

}

function nsuStartsWith(s_637535521, prefix_637535522) {
            var Temporary3;

  var result_637535523 = false;

  BeforeRet: do {
    var prefixLenHEX60gensym141_637535528 = (prefix_637535522).length;
    var sLenHEX60gensym141_637535529 = (s_637535521).length;
    var iHEX60gensym141_637535530 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym141_637535528 <= iHEX60gensym141_637535530)) {
          result_637535523 = true;
          break BeforeRet;
          }
          
            if ((sLenHEX60gensym141_637535529 <= iHEX60gensym141_637535530)) Temporary3 = true; else {              Temporary3 = !((s_637535521[chckIndx(iHEX60gensym141_637535530, 0, (s_637535521).length - 1)] == prefix_637535522[chckIndx(iHEX60gensym141_637535530, 0, (prefix_637535522).length - 1)]));            }          if (Temporary3) {
          result_637535523 = false;
          break BeforeRet;
          }
          
          iHEX60gensym141_637535530 = addInt(iHEX60gensym141_637535530, 1);
        }
    } while (false);
  } while (false);

  return result_637535523;

}

function nsuJoinSep(a_637535633, sep_637535634) {
  var result_637535635 = [];

    if ((0 < (a_637535633).length)) {
    var L_637535642 = mulInt((sep_637535634).length, subInt((a_637535633).length, 1));
    Label1: do {
      var i_637535650 = 0;
      var colontmp__486542276 = 0;
      colontmp__486542276 = (a_637535633).length - 1;
      var res_486542277 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486542277 <= colontmp__486542276)) break Label3;
            i_637535650 = res_486542277;
            L_637535642 = addInt(L_637535642, (a_637535633[chckIndx(i_637535650, 0, (a_637535633).length - 1)]).length);
            res_486542277 = addInt(res_486542277, 1);
          }
      } while (false);
    } while (false);
    result_637535635 = nimCopy(null, mnewString(0), NTI33554439);
    result_637535635.push.apply(result_637535635, a_637535633[chckIndx(0, 0, (a_637535633).length - 1)]);;
    Label4: do {
      var i_637535662 = 0;
      var colontmp__486542280 = 0;
      colontmp__486542280 = (a_637535633).length - 1;
      var res_486542281 = 1;
      Label5: do {
          Label6: while (true) {
          if (!(res_486542281 <= colontmp__486542280)) break Label6;
            i_637535662 = res_486542281;
            result_637535635.push.apply(result_637535635, sep_637535634);;
            result_637535635.push.apply(result_637535635, a_637535633[chckIndx(i_637535662, 0, (a_637535633).length - 1)]);;
            res_486542281 = addInt(res_486542281, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      result_637535635 = nimCopy(null, [], NTI33554439);
    }
    

  return result_637535635;

}

function HEX5BHEX5D_1258300797(s_1258300801, x_1258300802) {
  var result_1258300803 = [];

    var a_1258300805 = x_1258300802.a;
    var L_1258300810 = addInt(subInt(subInt((s_1258300801).length, x_1258300802.b), a_1258300805), 1);
    result_1258300803 = new Array(chckRange(L_1258300810, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1258300810, 0, 2147483647) ; ++i) { result_1258300803[i] = []; }    Label1: do {
      var i_1258300819 = 0;
      var i_486542284 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542284 < L_1258300810)) break Label3;
            i_1258300819 = i_486542284;
            result_1258300803[chckIndx(i_1258300819, 0, (result_1258300803).length - 1)] = nimCopy(null, s_1258300801[chckIndx(addInt(i_1258300819, a_1258300805), 0, (s_1258300801).length - 1)], NTI33554439);
            i_486542284 = addInt(i_486542284, 1);
          }
      } while (false);
    } while (false);

  return result_1258300803;

}

function HEX5BHEX5D_33557710(s_33557711, i_33557712) {
  var result_33557713 = 0;

    result_33557713 = s_33557711[chckIndx(subInt((s_33557711).length, i_33557712), 0, (s_33557711).length - 1)];

  return result_33557713;

}

function HEX5BHEX5D_33557743(s_33557744, s_33557744_Idx, i_33557745) {
  var result_33557746 = null;
  var result_33557746_Idx = 0;

    result_33557746 = s_33557744[s_33557744_Idx]; result_33557746_Idx = chckIndx(subInt((s_33557744[s_33557744_Idx]).length, i_33557745), 0, (s_33557744[s_33557744_Idx]).length - 1);

  return [result_33557746, result_33557746_Idx];

}

function normalizePathEnd_620757038(path_620757039, path_620757039_Idx, trailingSep_620757040) {
            var Temporary3;
            var Temporary4;

  BeforeRet: do {
    if (((path_620757039[path_620757039_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_620757041 = (path_620757039[path_620757039_Idx]).length;
    Label1: do {
        Label2: while (true) {
        if (!(1 <= i_620757041)) break Label2;
          if ((ConstSet214[path_620757039[path_620757039_Idx][chckIndx(subInt(i_620757041, 1), 0, (path_620757039[path_620757039_Idx]).length - 1)]] != undefined)) {
          i_620757041 = subInt(i_620757041, 1);
          }
          else {
            if (!(path_620757039[path_620757039_Idx][chckIndx(subInt(i_620757041, 1), 0, (path_620757039[path_620757039_Idx]).length - 1)] == 46)) Temporary4 = false; else {              Temporary4 = (2 <= i_620757041);            }            if (!Temporary4) Temporary3 = false; else {              Temporary3 = (ConstSet215[path_620757039[path_620757039_Idx][chckIndx(subInt(i_620757041, 2), 0, (path_620757039[path_620757039_Idx]).length - 1)]] != undefined);            }          if (Temporary3) {
          i_620757041 = subInt(i_620757041, 1);
          }
          else {
            break Label1;
          }
          }
        }
    } while (false);
    if (trailingSep_620757040) {
    (path_620757039[path_620757039_Idx].length = chckRange(i_620757041, 0, 2147483647));
    addChar(path_620757039[path_620757039_Idx], 47);;
    }
    else {
    if ((0 < i_620757041)) {
    (path_620757039[path_620757039_Idx].length = chckRange(i_620757041, 0, 2147483647));
    }
    else {
      path_620757039[path_620757039_Idx] = nimCopy(null, makeNimstrLit("/"), NTI33554439);
    }
    }
  } while (false);

  
}

function hasNext_1006632966(it_1006632967, x_1006632968) {
  var result_1006632969 = false;

    result_1006632969 = (it_1006632967.i < (x_1006632968).length);

  return result_1006632969;

}

function next_1006632970(it_1006632971, x_1006632972) {
      var Temporary1;
            var Temporary4;
          var Temporary7;

  var result_1006632973 = {Field0: 0, Field1: 0};

    it_1006632971.prev = it_1006632971.i;
      if (!!(it_1006632971.notFirst)) Temporary1 = false; else {        Temporary1 = (ConstSet217[x_1006632972[chckIndx(it_1006632971.i, 0, (x_1006632972).length - 1)]] != undefined);      }    if (Temporary1) {
    it_1006632971.i = addInt(it_1006632971.i, 1);
    }
    else {
      Label2: do {
          Label3: while (true) {
            if (!(it_1006632971.i < (x_1006632972).length)) Temporary4 = false; else {              Temporary4 = !((ConstSet218[x_1006632972[chckIndx(it_1006632971.i, 0, (x_1006632972).length - 1)]] != undefined));            }          if (!Temporary4) break Label3;
            it_1006632971.i = addInt(it_1006632971.i, 1);
          }
      } while (false);
    }
    
    if ((it_1006632971.prev < it_1006632971.i)) {
    var colontmp__486542291 = it_1006632971.prev;
    var colontmp__486542292 = subInt(it_1006632971.i, 1);
    result_1006632973 = nimCopy(result_1006632973, {Field0: colontmp__486542291, Field1: colontmp__486542292}, NTI1006632967);
    }
    else {
    if (hasNext_1006632966(it_1006632971, x_1006632972)) {
    result_1006632973 = nimCopy(result_1006632973, next_1006632970(it_1006632971, x_1006632972), NTI1006632967);
    }
    }
    Label5: do {
        Label6: while (true) {
          if (!(it_1006632971.i < (x_1006632972).length)) Temporary7 = false; else {            Temporary7 = (ConstSet219[x_1006632972[chckIndx(it_1006632971.i, 0, (x_1006632972).length - 1)]] != undefined);          }        if (!Temporary7) break Label6;
          it_1006632971.i = addInt(it_1006632971.i, 1);
        }
    } while (false);
    it_1006632971.notFirst = true;

  return result_1006632973;

}

function isSlash_1006633023(x_1006633024, bounds_1006633025) {
  var result_1006633026 = false;

    result_1006633026 = ((bounds_1006633025["Field1"] == bounds_1006633025["Field0"]) && (ConstSet220[x_1006633024[chckIndx(bounds_1006633025["Field0"], 0, (x_1006633024).length - 1)]] != undefined));

  return result_1006633026;

}

function isDotDot_1006633019(x_1006633020, bounds_1006633021) {
  var result_1006633022 = false;

    result_1006633022 = (((bounds_1006633021["Field1"] == addInt(bounds_1006633021["Field0"], 1)) && (x_1006633020[chckIndx(bounds_1006633021["Field0"], 0, (x_1006633020).length - 1)] == 46)) && (x_1006633020[chckIndx(addInt(bounds_1006633021["Field0"], 1), 0, (x_1006633020).length - 1)] == 46));

  return result_1006633022;

}

function isDot_1006633015(x_1006633016, bounds_1006633017) {
  var result_1006633018 = false;

    result_1006633018 = ((bounds_1006633017["Field1"] == bounds_1006633017["Field0"]) && (x_1006633016[chckIndx(bounds_1006633017["Field0"], 0, (x_1006633016).length - 1)] == 46));

  return result_1006633018;

}

function addNormalizePath_1006633031(x_1006633032, result_1006633033, result_1006633033_Idx, state_1006633034, state_1006633034_Idx, dirSep_1006633035) {
            var Temporary5;
            var Temporary6;
                var Temporary9;
              var Temporary10;
            var Temporary11;
      var Temporary12;

    var it_1006633036 = [({i: 0, prev: 0, notFirst: false})];
    it_1006633036[0].notFirst = (0 < (state_1006633034[state_1006633034_Idx] >> 1));
    if (it_1006633036[0].notFirst) {
    Label1: do {
        Label2: while (true) {
        if (!((it_1006633036[0].i < (x_1006633032).length) && (ConstSet216[x_1006633032[chckIndx(it_1006633036[0].i, 0, (x_1006633032).length - 1)]] != undefined))) break Label2;
          it_1006633036[0].i = addInt(it_1006633036[0].i, 1);
        }
    } while (false);
    }
    
    Label3: do {
        Label4: while (true) {
        if (!hasNext_1006632966(it_1006633036[0], x_1006633032)) break Label4;
          var b_1006633049 = next_1006632970(it_1006633036[0], x_1006633032);
            if (!((state_1006633034[state_1006633034_Idx] >> 1) == 0)) Temporary5 = false; else {              Temporary5 = isSlash_1006633023(x_1006633032, b_1006633049);            }          if (Temporary5) {
            if (((result_1006633033[result_1006633033_Idx]).length == 0)) Temporary6 = true; else {              Temporary6 = !((ConstSet221[result_1006633033[result_1006633033_Idx][chckIndx(subInt((result_1006633033[result_1006633033_Idx]).length, 1), 0, (result_1006633033[result_1006633033_Idx]).length - 1)]] != undefined));            }          if (Temporary6) {
          addChar(result_1006633033[result_1006633033_Idx], dirSep_1006633035);;
          }
          
          state_1006633034[state_1006633034_Idx] = (state_1006633034[state_1006633034_Idx] | 1);
          }
          else {
          if (isDotDot_1006633019(x_1006633032, b_1006633049)) {
          if ((1 <= (state_1006633034[state_1006633034_Idx] >> 1))) {
          var d_1006633062 = (result_1006633033[result_1006633033_Idx]).length;
          Label7: do {
              Label8: while (true) {
                if (!((state_1006633034[state_1006633034_Idx] & 1) < subInt(d_1006633062, 1))) Temporary9 = false; else {                  Temporary9 = !((ConstSet222[result_1006633033[result_1006633033_Idx][chckIndx(subInt(d_1006633062, 1), 0, (result_1006633033[result_1006633033_Idx]).length - 1)]] != undefined));                }              if (!Temporary9) break Label8;
                d_1006633062 = subInt(d_1006633062, 1);
              }
          } while (false);
          if ((0 < d_1006633062)) {
          (result_1006633033[result_1006633033_Idx].length = chckRange(subInt(d_1006633062, 1), 0, 2147483647));
          state_1006633034[state_1006633034_Idx] = subInt(state_1006633034[state_1006633034_Idx], 2);
          }
          
          }
          else {
              if (!(0 < (result_1006633033[result_1006633033_Idx]).length)) Temporary10 = false; else {                Temporary10 = !((ConstSet223[result_1006633033[result_1006633033_Idx][chckIndx(subInt((result_1006633033[result_1006633033_Idx]).length, 1), 0, (result_1006633033[result_1006633033_Idx]).length - 1)]] != undefined));              }            if (Temporary10) {
            addChar(result_1006633033[result_1006633033_Idx], dirSep_1006633035);;
            }
            
            result_1006633033[result_1006633033_Idx].push.apply(result_1006633033[result_1006633033_Idx], substr_33557907(x_1006633032, b_1006633049["Field0"], b_1006633049["Field1"]));;
          }
          
          }
          else {
          if (isDot_1006633015(x_1006633032, b_1006633049)) {
          }
          else {
          if ((b_1006633049["Field0"] <= b_1006633049["Field1"])) {
            if (!(0 < (result_1006633033[result_1006633033_Idx]).length)) Temporary11 = false; else {              Temporary11 = !((ConstSet224[result_1006633033[result_1006633033_Idx][chckIndx(subInt((result_1006633033[result_1006633033_Idx]).length, 1), 0, (result_1006633033[result_1006633033_Idx]).length - 1)]] != undefined));            }          if (Temporary11) {
          addChar(result_1006633033[result_1006633033_Idx], dirSep_1006633035);;
          }
          
          result_1006633033[result_1006633033_Idx].push.apply(result_1006633033[result_1006633033_Idx], substr_33557907(x_1006633032, b_1006633049["Field0"], b_1006633049["Field1"]));;
          state_1006633034[state_1006633034_Idx] = addInt(state_1006633034[state_1006633034_Idx], 2);
          }
          }}}
        }
    } while (false);
      if (!eqStrings(result_1006633033[result_1006633033_Idx], [])) Temporary12 = false; else {        Temporary12 = !(eqStrings(x_1006633032, []));      }    if (Temporary12) {
    result_1006633033[result_1006633033_Idx] = nimCopy(null, makeNimstrLit("."), NTI33554439);
    }
    

  
}

function joinPathImpl_620757069(result_620757070, result_620757070_Idx, state_620757071, state_620757071_Idx, tail_620757072) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
        var Temporary4;
          var Temporary5;

    if (!(0 < (tail_620757072).length)) Temporary2 = false; else {      Temporary2 = (ConstSet212[HEX5BHEX5D_33557710(tail_620757072, 1)] != undefined);    }    if (Temporary2) Temporary1 = true; else {      if (!((tail_620757072).length == 0)) Temporary3 = false; else {        if (!(0 < (result_620757070[result_620757070_Idx]).length)) Temporary4 = false; else {          Temporary4 = (ConstSet213[(Temporary5 = HEX5BHEX5D_33557743(result_620757070, result_620757070_Idx, 1), Temporary5)[0][Temporary5[1]]] != undefined);        }        Temporary3 = Temporary4;      }      Temporary1 = Temporary3;    }    var trailingSep_620757081 = Temporary1;
    normalizePathEnd_620757038(result_620757070, result_620757070_Idx, false);
    addNormalizePath_1006633031(tail_620757072, result_620757070, result_620757070_Idx, state_620757071, state_620757071_Idx, 47);
    normalizePathEnd_620757038(result_620757070, result_620757070_Idx, trailingSep_620757081);

  
}

function nosjoinPath(head_620757083, tail_620757084) {
  var result_620757085 = [[]];

    result_620757085[0] = nimCopy(null, mnewString(0), NTI33554439);
    var state_620757086 = [0];
    joinPathImpl_620757069(result_620757085, 0, state_620757086, 0, head_620757083);
    joinPathImpl_620757069(result_620757085, 0, state_620757086, 0, tail_620757084);

  return result_620757085[0];

}

function HEX2F_620757108(head_620757109, tail_620757110) {
  var result_620757111 = [];

    result_620757111 = nimCopy(null, nosjoinPath(head_620757109, tail_620757110), NTI33554439);

  return result_620757111;

}

function substr_33557919(s_33557920, first_33557921) {
  var result_33557922 = [];

    result_33557922 = nimCopy(null, substr_33557907(s_33557920, first_33557921, (s_33557920).length - 1), NTI33554439);

  return result_33557922;

}

function nossplitPath(path_620757113) {
    var Temporary4;

  var result_620757116 = {Field0: [], Field1: []};

    var sepPos_620757117 = -1;
    Label1: do {
      var i_620757123 = 0;
      var colontmp__486542295 = 0;
      colontmp__486542295 = subInt((path_620757113).length, 1);
      var res_486542296 = colontmp__486542295;
      Label2: do {
          Label3: while (true) {
          if (!(0 <= res_486542296)) break Label3;
            i_620757123 = res_486542296;
            if ((ConstSet225[path_620757113[chckIndx(i_620757123, 0, (path_620757113).length - 1)]] != undefined)) {
            sepPos_620757117 = i_620757123;
            break Label1;
            }
            
            res_486542296 = subInt(res_486542296, 1);
          }
      } while (false);
    } while (false);
    if ((0 <= sepPos_620757117)) {
    if ((1 <= sepPos_620757117)) {
    Temporary4 = subInt(sepPos_620757117, 1);
    }
    else {
    Temporary4 = 0;
    }
    
    result_620757116.Field0 = nimCopy(null, substr_33557907(path_620757113, 0, Temporary4), NTI33554439);
    result_620757116.Field1 = nimCopy(null, substr_33557919(path_620757113, addInt(sepPos_620757117, 1)), NTI33554439);
    }
    else {
      result_620757116.Field0 = nimCopy(null, [], NTI33554439);
      result_620757116.Field1 = nimCopy(null, path_620757113, NTI33554439);
    }
    

  return result_620757116;

}

function open_452985194(f_452985195, f_452985195_Idx, filename_452985196, mode_452985197, bufSize_452985198) {
    var Temporary1;
      var Temporary2;

  var result_452985199 = false;

    var p_452985200 = (Temporary1 = fopen(toJSStr(filename_452985196), FormatOpen_452985184[chckIndx(mode_452985197, 0, (FormatOpen_452985184).length - 1)]), Temporary1)[0], p_452985200_Idx = Temporary1[1];
    if (!((p_452985200 == null && p_452985200_Idx == 0))) {
    var f2_452985201 = p_452985200;
    result_452985199 = true;
    f_452985195[f_452985195_Idx] = p_452985200;
      if (!(0 < bufSize_452985198)) Temporary2 = false; else {        Temporary2 = (bufSize_452985198 <= 2147483647);      }    if (Temporary2) {
    var _ = setvbuf(f_452985195[f_452985195_Idx], null, 0, _IOFBF, (bufSize_452985198 >>> 0));
    }
    else {
    if ((bufSize_452985198 == 0)) {
    var _ = setvbuf(f_452985195[f_452985195_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_452985199;

}

function rawFileSize_452985150(file_452985151) {
  var result_452985152 = 0;

    var oldPos_452985153 = ftello(file_452985151);
    var _ = fseeko(file_452985151, 0, 2);
    result_452985152 = ftello(file_452985151);
    var _ = fseeko(file_452985151, oldPos_452985153, 0);

  return result_452985152;

}

function raiseEIO_452984912(msg_452984913) {
    raiseException({message: nimCopy(null, msg_452984913, NTI33554439), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_452984957(f_452984958) {
    if (!((ferror(f_452984958) == 0))) {
    var msg_452984959 = (makeNimstrLit("errno: ") || []).concat(HEX24_335544323(((errno) | 0)) || [],makeNimstrLit(" `") || [],cstrToNimstr(strerror(errno)) || [],makeNimstrLit("`") || []);
    clearerr(f_452984958);
    raiseEIO_452984912(msg_452984959);
    }
    

  
}

function readBuffer_452984960(f_452984961, buffer_452984962, buffer_452984962_Idx, len_452984963) {
  var result_452984964 = 0;

    result_452984964 = (fread(buffer_452984962, buffer_452984962_Idx, 1, (len_452984963 >>> 0), f_452984961) | 0);
    if (!((result_452984964 == len_452984963))) {
    checkErr_452984957(f_452984961);
    }
    

  return result_452984964;

}

function endOfFile_452985154(f_452985155) {
  var result_452985156 = false;

  BeforeRet: do {
    var c_452985157 = fgetc(f_452985155);
    var _ = ungetc(c_452985157, f_452985155);
    result_452985156 = (c_452985157 < 0);
    break BeforeRet;
  } while (false);

  return result_452985156;

}

function readAllBuffer_452985145(file_452985146) {
  var result_452985147 = [];

    result_452985147 = nimCopy(null, [], NTI33554439);
    var buffer_452985148 = mnewString(4000);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_452985149 = readBuffer_452984960(file_452985146, buffer_452985148, chckIndx(0, 0, (buffer_452985148).length - 1), 4000);
          if ((bytesRead_452985149 == 4000)) {
          result_452985147.push.apply(result_452985147, buffer_452985148);;
          }
          else {
            (buffer_452985148.length = chckRange(bytesRead_452985149, 0, 2147483647));
            result_452985147.push.apply(result_452985147, buffer_452985148);;
            break Label1;
          }
          
        }
    } while (false);

  return result_452985147;

}

function readAllFile_452985158(file_452985159, len_452985160) {
  var result_452985161 = [];

    result_452985161 = nimCopy(null, mnewString(chckRange(len_452985160, 0, 2147483647)), NTI33554439);
    var bytes_452985162 = readBuffer_452984960(file_452985159, result_452985161, chckIndx(0, 0, (result_452985161).length - 1), chckRange(len_452985160, 0, 2147483647));
    if (endOfFile_452985154(file_452985159)) {
    if ((bytes_452985162 < len_452985160)) {
    (result_452985161.length = chckRange(bytes_452985162, 0, 2147483647));
    }
    
    }
    else {
    result_452985161.push.apply(result_452985161, readAllBuffer_452985145(file_452985159));;
    }
    

  return result_452985161;

}

function readAll_452985167(file_452985168) {
  var result_452985169 = [];

    var len_452985170 = rawFileSize_452985150(file_452985168);
    if ((0 < len_452985170)) {
    result_452985169 = nimCopy(null, readAllFile_452985158(file_452985168, len_452985170), NTI33554439);
    }
    else {
      result_452985169 = nimCopy(null, readAllBuffer_452985145(file_452985168), NTI33554439);
    }
    

  return result_452985169;

}

function close_452985037(f_452985038) {
    if (!((f_452985038 == null))) {
    var _ = fclose(f_452985038);
    }
    

  
}

function readFile_452985260(filename_452985261) {
    var Temporary2;

  var result_452985262 = [];

    var f_452985263 = [null];
    if (open_452985194(f_452985263, 0, filename_452985261, 0, -1)) {
    Temporary2 = framePtr;
    try {
    result_452985262 = nimCopy(null, readAll_452985167(f_452985263[0]), NTI33554439);
    } finally {
    framePtr = Temporary2;
    close_452985037(f_452985263[0]);
    }
    }
    else {
      raiseException({message: (makeNimstrLit("cannot open: ") || []).concat(filename_452985261 || []), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_452985262;

}

function some_1258300899(val_1258300901) {
  var result_1258300902 = ({val: 0, has: false});

    result_1258300902.has = true;
    result_1258300902.val = val_1258300901;

  return result_1258300902;

}

function nsuToLowerAsciiChar(c_637534276) {
  var result_637534277 = 0;

    if ((ConstSet227[c_637534276] != undefined)) {
    result_637534277 = (c_637534276 ^ 32);
    }
    else {
      result_637534277 = c_637534276;
    }
    

  return result_637534277;

}

function nsuToLowerAsciiStr(s_637534286) {
  var result_637534287 = [];

    result_637534287 = nimCopy(null, mnewString(chckRange((s_637534286).length, 0, 2147483647)), NTI33554439);
    Label1: do {
      var iHEX60gensym7_637534293 = 0;
      var colontmp__1459617973 = 0;
      colontmp__1459617973 = subInt((s_637534286).length, 1);
      var res_1459617974 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1459617974 <= colontmp__1459617973)) break Label3;
            iHEX60gensym7_637534293 = res_1459617974;
            result_637534287[chckIndx(iHEX60gensym7_637534293, 0, (result_637534287).length - 1)] = nsuToLowerAsciiChar(s_637534286[chckIndx(iHEX60gensym7_637534293, 0, (s_637534286).length - 1)]);
            res_1459617974 = addInt(res_1459617974, 1);
          }
      } while (false);
    } while (false);

  return result_637534287;

}

function get_1258301312(self_1258301314, otherwise_1258301315) {
    var Temporary1;

  var result_1258301316 = [];

    if (isSome_1258294872(self_1258301314)) {
    Temporary1 = self_1258301314.val;
    }
    else {
    Temporary1 = otherwise_1258301315;
    }
    
    result_1258301316 = nimCopy(null, Temporary1, NTI33554439);

  return result_1258301316;

}

function cssCommands_1258293431(doc_1258293432) {
    
function HEX3Aanonymous_1258293485(arg_1258293475) {
          var Temporary1;

      var result_1258293486 = ({rendered: false, str: []});

        var args_1258293476 = parseXidocArguments_1459622458(arg_1258293475);
          if (((args_1258293476).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258293476).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit(":"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258293476).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var prop_1258293504 = expandStr_1442840595(doc_1258293432, HEX5BHEX5D_1258293496(args_1258293476, 2));
        var val_1258293509 = expandStr_1442840595(doc_1258293432, HEX5BHEX5D_1258293496(args_1258293476, 1));
        result_1258293486 = nimCopy(result_1258293486, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1:$2;"), [nimCopy(null, prop_1258293504, NTI33554439), nimCopy(null, val_1258293509, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258293486;

    }
    
function HEX3Aanonymous_1258294706(arg_1258294700) {
      var result_1258294707 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258294700, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit("h*")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        result_1258294707 = nimCopy(result_1258294707, {rendered: false, str: nimCopy(null, makeNimstrLit("h1,h2,h3,h4,h5,h6"), NTI33554439)}, NTI1476395013);

      return result_1258294707;

    }
    
function HEX3Aanonymous_1258294761(arg_1258294754) {
          var Temporary1;

      var result_1258294762 = ({rendered: false, str: []});

        var args_1258294755 = parseXidocArguments_1459622458(arg_1258294754);
          if (((args_1258294755).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258294755).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("rule"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258294755).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var selector_1258294776 = expandStr_1442840595(doc_1258293432, HEX5BHEX5D_1258293496(args_1258294755, 2));
        var decls_1258294781 = expandStr_1442840595(doc_1258293432, HEX5BHEX5D_1258293496(args_1258294755, 1));
        result_1258294762 = nimCopy(result_1258294762, {rendered: false, str: nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1{$2}"), [nimCopy(null, selector_1258294776, NTI33554439), nimCopy(null, decls_1258294781, NTI33554439)]), NTI33554439)}, NTI1476395013);

      return result_1258294762;

    }
    
function HEX3Aanonymous_1258294835(arg_1258294828) {
          var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
          var Temporary6;

      var result_1258294836 = ({rendered: false, str: []});

        var args_1258294829 = parseXidocArguments_1459622458(arg_1258294828);
          if (((args_1258294829).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258294829).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("var"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258294829).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var name_1258294846 = expandStr_1442840595(doc_1258293432, args_1258294829[chckIndx(0, 0, (args_1258294829).length - 1)]);
        if ((0 < subInt((args_1258294829).length, 1))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258293432, args_1258294829[chckIndx(1, 0, (args_1258294829).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var val_1258294867 = nimCopy(null, Temporary2, NTI1258293149);
        if (isSome_1258294872(val_1258294867)) {
        if (eqStrings(HEX5BHEX5D_1258294877(doc_1258293432.stack, 2).cmdName, makeNimstrLit("style"))) {
        Temporary4 = nsuFormatOpenArray(makeNimstrLit(":root{--$1:$2}"), [nimCopy(null, name_1258294846, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(val_1258294867), Temporary5)[0][Temporary5[1]], NTI33554439)]);
        }
        else {
        Temporary4 = nsuFormatOpenArray(makeNimstrLit("--$1:$2"), [nimCopy(null, name_1258294846, NTI33554439), nimCopy(null, (Temporary6 = get_1258294907(val_1258294867), Temporary6)[0][Temporary6[1]], NTI33554439)]);
        }
        
        Temporary3 = Temporary4;
        }
        else {
        Temporary3 = nsuFormatSingleElem(makeNimstrLit("var(--$1)"), name_1258294846);
        }
        
        result_1258294836 = nimCopy(result_1258294836, {rendered: false, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258294836;

    }

  var result_1258293435 = ({data: [], counter: 0});

    var commands_1258293438 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1258293550(commands_1258293438[0], makeNimstrLit(":"), HEX3Aanonymous_1258293485);
    HEX5BHEX5DHEX3D_1258293550(commands_1258293438[0], makeNimstrLit("h*"), HEX3Aanonymous_1258294706);
    HEX5BHEX5DHEX3D_1258293550(commands_1258293438[0], makeNimstrLit("rule"), HEX3Aanonymous_1258294761);
    HEX5BHEX5DHEX3D_1258293550(commands_1258293438[0], makeNimstrLit("var"), HEX3Aanonymous_1258294835);
    result_1258293435 = nimCopy(result_1258293435, commands_1258293438[0], NTI1476395041);

  return result_1258293435;

}

function HEX5BHEX5D_1258303308(t_1258303311, key_1258303312) {
  var result_1258303313 = null;
  var result_1258303313_Idx = 0;

    var hcHEX60gensym22_1258303314 = [0];
    var indexHEX60gensym22_1258303321 = rawGet_1677721749(t_1258303311, key_1258303312, hcHEX60gensym22_1258303314, 0);
    if ((0 <= indexHEX60gensym22_1258303321)) {
    result_1258303313 = t_1258303311.data[chckIndx(indexHEX60gensym22_1258303321, 0, (t_1258303311.data).length - 1)]; result_1258303313_Idx = "Field2";
    }
    else {
    raiseKeyError_1677723108(key_1258303312);
    }
    

  return [result_1258303313, result_1258303313_Idx];

}

function HEX26_1258303886(x_1258303888, y_1258303889) {
  var result_1258303890 = [];

    result_1258303890 = new Array(chckRange(addInt((x_1258303888).length, (y_1258303889).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1258303888).length, (y_1258303889).length), 0, 2147483647) ; ++i) { result_1258303890[i] = []; }    Label1: do {
      var i_1258303908 = 0;
      var colontmp__486542324 = 0;
      colontmp__486542324 = subInt((x_1258303888).length, 1);
      var res_486542325 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486542325 <= colontmp__486542324)) break Label3;
            i_1258303908 = res_486542325;
            result_1258303890[chckIndx(i_1258303908, 0, (result_1258303890).length - 1)] = nimCopy(null, x_1258303888[chckIndx(i_1258303908, 0, (x_1258303888).length - 1)], NTI33554439);
            res_486542325 = addInt(res_486542325, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1258303916 = 0;
      var colontmp__486542328 = 0;
      colontmp__486542328 = subInt((y_1258303889).length, 1);
      var res_486542329 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_486542329 <= colontmp__486542328)) break Label6;
            i_1258303916 = res_486542329;
            result_1258303890[chckIndx(addInt(i_1258303916, (x_1258303888).length), 0, (result_1258303890).length - 1)] = nimCopy(null, y_1258303889[chckIndx(i_1258303916, 0, (y_1258303889).length - 1)], NTI33554439);
            res_486542329 = addInt(res_486542329, 1);
          }
      } while (false);
    } while (false);

  return result_1258303890;

}

function rawGet_1258291386(t_1258291389, key_1258291390, hc_1258291391, hc_1258291391_Idx) {
            var Temporary3;

  var result_1258291392 = 0;

  BeforeRet: do {
    hc_1258291391[hc_1258291391_Idx] = hash_1124073894(key_1258291390);
    if ((hc_1258291391[hc_1258291391_Idx] == 0)) {
    hc_1258291391[hc_1258291391_Idx] = 314159265;
    }
    
    if (((t_1258291389.data).length == 0)) {
    result_1258291392 = -1;
    break BeforeRet;
    }
    
    var h_1258291454 = (hc_1258291391[hc_1258291391_Idx] & (t_1258291389.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1107296294(t_1258291389.data[chckIndx(h_1258291454, 0, (t_1258291389.data).length - 1)].Field0)) break Label2;
            if (!(t_1258291389.data[chckIndx(h_1258291454, 0, (t_1258291389.data).length - 1)].Field0 == hc_1258291391[hc_1258291391_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1258291389.data[chckIndx(h_1258291454, 0, (t_1258291389.data).length - 1)].Field1, key_1258291390);            }          if (Temporary3) {
          result_1258291392 = h_1258291454;
          break BeforeRet;
          }
          
          h_1258291454 = nextTry_1107296297(h_1258291454, (t_1258291389.data).length - 1);
        }
    } while (false);
    result_1258291392 = subInt(-1, h_1258291454);
  } while (false);

  return result_1258291392;

}

function contains_1258304108(s_1258304110, key_1258304111) {
  var result_1258304112 = false;

    var hc_1258304113 = [0];
    var index_1258304127 = rawGet_1258291386(s_1258304110, key_1258304111, hc_1258304113, 0);
    result_1258304112 = (0 <= index_1258304127);

  return result_1258304112;

}

function defaultCommands_1258296220(doc_1258296221) {
    
function HEX3Aanonymous_1258297819(arg_1258297813) {
      var result_1258297820 = ({rendered: false, str: []});

        var arg_1258297821 = nimCopy(null, arg_1258297813, NTI33554439);
        result_1258297820 = nimCopy(result_1258297820, {rendered: false, str: nimCopy(null, [], NTI33554439)}, NTI1476395013);

      return result_1258297820;

    }
    
function HEX3Aanonymous_1258297874(arg_1258297868) {
      var result_1258297875 = ({rendered: false, str: []});

        var arg_1258297876 = nimCopy(null, arg_1258297868, NTI33554439);
        result_1258297875 = nimCopy(result_1258297875, {rendered: false, str: nimCopy(null, arg_1258297876, NTI33554439)}, NTI1476395013);

      return result_1258297875;

    }
    
function HEX3Aanonymous_1258297929(arg_1258297923) {
      var result_1258297930 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258297923, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit(";")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        result_1258297930 = nimCopy(result_1258297930, {rendered: false, str: nimCopy(null, makeNimstrLit(";"), NTI33554439)}, NTI1476395013);

      return result_1258297930;

    }
    
function HEX3Aanonymous_1258297983(arg_1258297977) {
      var result_1258297984 = ({rendered: false, str: []});

        var arg_1258297985 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258297977, true, true, ConstSet27));
        result_1258297984 = nimCopy(result_1258297984, {rendered: true, str: nimCopy(null, (makeNimstrLit("[") || []).concat(arg_1258297985 || [],makeNimstrLit("]") || []), NTI33554439)}, NTI1476395013);

      return result_1258297984;

    }
    
function HEX3Aanonymous_1258298038(arg_1258298032) {
      var result_1258298039 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258298032, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit("(")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        result_1258298039 = nimCopy(result_1258298039, {rendered: false, str: nimCopy(null, makeNimstrLit("["), NTI33554439)}, NTI1476395013);

      return result_1258298039;

    }
    
function HEX3Aanonymous_1258298092(arg_1258298086) {
      var result_1258298093 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258298086, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit(")")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        result_1258298093 = nimCopy(result_1258298093, {rendered: false, str: nimCopy(null, makeNimstrLit("]"), NTI33554439)}, NTI1476395013);

      return result_1258298093;

    }
    
function HEX3Aanonymous_1258298146(arg_1258298140) {
      var result_1258298147 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258298140, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit("--")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        result_1258298147 = nimCopy(result_1258298147, {rendered: false, str: nimCopy(null, makeNimstrLit("\xE2\x80\x93"), NTI33554439)}, NTI1476395013);

      return result_1258298147;

    }
    
function HEX3Aanonymous_1258298200(arg_1258298194) {
      var result_1258298201 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258298194, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit("---")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        result_1258298201 = nimCopy(result_1258298201, {rendered: false, str: nimCopy(null, makeNimstrLit("\xE2\x80\x94"), NTI33554439)}, NTI1476395013);

      return result_1258298201;

    }

function initKatexJsdelivrCss_1258296228() {
    incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.13.18/dist/katex.min.css\" integrity=\"sha384-zTROYFVGOfTw7JV7KUu8udsvW2fx4lWOsCEDqhBreBwlHI4ioVRtmIvEThzJHGET\" crossorigin=\"anonymous\">"));

  
}

function initKatexJsdelivr_1258297779() {
    initKatexJsdelivrCss_1258296228();
    incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.13.18/dist/katex.min.js\" integrity=\"sha384-GxNFqL3r9uRJQhR+47eDxuPoNE7yLftQM8LcxzgS4HT73tp970WS/wV5p8UzCOmb\" crossorigin=\"anonymous\"></script><script type=\"module\">for(let e of document.getElementsByTagName`xd-inline-math`)katex.render(e.innerText,e,{throwOnError:false});for(let e of document.getElementsByTagName`xd-block-math`)katex.render(e.innerText,e,{throwOnError:false,displayMode:true})</script>"));

  
}
    
function HEX3Aanonymous_1258298254(arg_1258298248) {
        var Temporary1;
          var Temporary2;

      var result_1258298255 = ({rendered: false, str: []});

        var arg_1258298256 = nsuStrip(arg_1258298248, true, true, ConstSet28);
        HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands = nimCopy(HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands, mathCommands_1258295030(doc_1258296221), NTI1476395041);
        switch (doc_1258296221.target) {
        case 0:
          switch (doc_1258296221.mathRenderer) {
          case 0:
            initKatexJsdelivr_1258297779();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-inline-math>$1</xd-inline-math>"), renderStr_1442840879(doc_1258296221, arg_1258298256));
            break;
          case 1:
            initKatexJsdelivrCss_1258296228();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-inline-math>$1</xd-inline-math>"), renderMathKatex_1325400078(expandStr_1442840595(doc_1258296221, arg_1258298256), false));
            break;
          }
          Temporary1 = Temporary2;
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\($1\\)"), expandStr_1442840595(doc_1258296221, arg_1258298256));
          break;
        }
        result_1258298255 = nimCopy(result_1258298255, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258298255;

    }
    
function HEX3Aanonymous_1258298313(arg_1258298307) {
        var Temporary1;
          var Temporary2;

      var result_1258298314 = ({rendered: false, str: []});

        var arg_1258298315 = nsuStrip(arg_1258298307, true, true, ConstSet53);
        HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands = nimCopy(HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands, mathCommands_1258295030(doc_1258296221), NTI1476395041);
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>xd-block-math{display:block}</style>"));
          switch (doc_1258296221.mathRenderer) {
          case 0:
            initKatexJsdelivr_1258297779();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-block-math>$1</xd-block-math>"), renderStr_1442840879(doc_1258296221, arg_1258298315));
            break;
          case 1:
            initKatexJsdelivrCss_1258296228();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-block-math>$1</xd-block-math>"), renderMathKatex_1325400078(expandStr_1442840595(doc_1258296221, arg_1258298315), true));
            break;
          }
          Temporary1 = Temporary2;
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\[$1\\]"), expandStr_1442840595(doc_1258296221, arg_1258298315));
          break;
        }
        result_1258298314 = nimCopy(result_1258298314, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258298314;

    }
    
function HEX3Aanonymous_1258298395(arg_1258298389) {
        var Temporary1;
          var Temporary2;

      var result_1258298396 = ({rendered: false, str: []});

        var arg_1258298397 = nsuStrip(arg_1258298389, true, true, ConstSet54);
        HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands = nimCopy(HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands, mathCommands_1258295030(doc_1258296221), NTI1476395041);
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>xd-block-math{display:block}</style>"));
          switch (doc_1258296221.mathRenderer) {
          case 0:
            initKatexJsdelivr_1258297779();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-block-math>\\begin{align*}$1\\end{align*}</xd-block-math>"), renderStr_1442840879(doc_1258296221, arg_1258298397));
            break;
          case 1:
            initKatexJsdelivrCss_1258296228();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-block-math>$1</xd-block-math>"), renderMathKatex_1325400078(nsuFormatSingleElem(makeNimstrLit("\\begin{align*}$1\\end{align*}"), expandStr_1442840595(doc_1258296221, arg_1258298397)), true));
            break;
          }
          Temporary1 = Temporary2;
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\begin{align*}$1\\end{align*}"), expandStr_1442840595(doc_1258296221, arg_1258298397));
          break;
        }
        result_1258298396 = nimCopy(result_1258298396, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258298396;

    }
    
function HEX3Aanonymous_1258298477(arg_1258298471) {
        var Temporary1;
          var Temporary2;

      var result_1258298478 = ({rendered: false, str: []});

        if (!(eqStrings(arg_1258298471, []))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 must be called without an argument"), [makeNimstrLit("LaTeX")]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        switch (doc_1258296221.target) {
        case 0:
          switch (doc_1258296221.mathRenderer) {
          case 0:
            initKatexJsdelivr_1258297779();
            Temporary2 = makeNimstrLit("<xd-inline-math>\\text{\\LaTeX}</xd-inline-math>");
            break;
          case 1:
            initKatexJsdelivrCss_1258296228();
            Temporary2 = nsuFormatSingleElem(makeNimstrLit("<xd-inline-math>$1</xd-inline-math>"), renderMathKatex_1325400078(makeNimstrLit("\\text{\\LaTeX}"), false));
            break;
          }
          Temporary1 = Temporary2;
          break;
        case 1:
          Temporary1 = makeNimstrLit("\\LaTeX{}");
          break;
        }
        result_1258298478 = nimCopy(result_1258298478, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258298478;

    }
    
function HEX3Aanonymous_1258298531(arg_1258298525) {
      var result_1258298532 = ({rendered: false, str: []});

        var arg_1258298533 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258298525, true, true, ConstSet55));
        incl_1258296248(doc_1258296221.addToHead, arg_1258298533);
        result_1258298532 = nimCopy(result_1258298532, {rendered: true, str: nimCopy(null, [], NTI33554439)}, NTI1476395013);

      return result_1258298532;

    }
    
function HEX3Aanonymous_1258298609(arg_1258298603) {
        
function HEX3Aanonymous_1258298614() {
          var result_1258298615 = [];

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym209_1258298624 = 0;
              var colontmp__486542155 = 0;
              colontmp__486542155 = subInt((doc_1258296221.stack).length, 1);
              var res_486542156 = colontmp__486542155;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542156)) break Label3;
                    iHEX60gensym209_1258298624 = res_486542156;
                    var frameHEX60gensym209_1258298625 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym209_1258298624, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (hasKey_1258298666(frameHEX60gensym209_1258298625.args, arg_1258298611)) {
                    result_1258298615 = nimCopy(null, HEX5BHEX5D_1677723041(frameHEX60gensym209_1258298625.args, arg_1258298611), NTI33554439);
                    break BeforeRet;
                    }
                    
                    res_486542156 = subInt(res_486542156, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258298615;

        }

      var result_1258298610 = ({rendered: false, str: []});

        var arg_1258298611 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258298603, true, true, ConstSet56));
        result_1258298610 = nimCopy(result_1258298610, {rendered: true, str: nimCopy(null, renderStr_1442840879(doc_1258296221, HEX3Aanonymous_1258298614()), NTI33554439)}, NTI1476395013);

      return result_1258298610;

    }
    
function HEX3Aanonymous_1258298793(arg_1258298787) {
        
function HEX3Aanonymous_1258298798() {
          var result_1258298799 = [];

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym212_1258298808 = 0;
              var colontmp__486542159 = 0;
              colontmp__486542159 = subInt((doc_1258296221.stack).length, 1);
              var res_486542160 = colontmp__486542159;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542160)) break Label3;
                    iHEX60gensym212_1258298808 = res_486542160;
                    var frameHEX60gensym212_1258298809 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym212_1258298808, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (hasKey_1258298666(frameHEX60gensym212_1258298809.args, arg_1258298795)) {
                    result_1258298799 = nimCopy(null, HEX5BHEX5D_1677723041(frameHEX60gensym212_1258298809.args, arg_1258298795), NTI33554439);
                    break BeforeRet;
                    }
                    
                    res_486542160 = subInt(res_486542160, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258298799;

        }

      var result_1258298794 = ({rendered: false, str: []});

        var arg_1258298795 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258298787, true, true, ConstSet57));
        result_1258298794 = nimCopy(result_1258298794, {rendered: false, str: nimCopy(null, expandStr_1442840595(doc_1258296221, HEX3Aanonymous_1258298798()), NTI33554439)}, NTI1476395013);

      return result_1258298794;

    }
    
function HEX3Aanonymous_1258298969(arg_1258298963) {
        
function HEX3Aanonymous_1258298974() {
          var result_1258298975 = [];

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym215_1258298984 = 0;
              var colontmp__486542163 = 0;
              colontmp__486542163 = subInt((doc_1258296221.stack).length, 1);
              var res_486542164 = colontmp__486542163;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542164)) break Label3;
                    iHEX60gensym215_1258298984 = res_486542164;
                    var frameHEX60gensym215_1258298985 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym215_1258298984, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (hasKey_1258298666(frameHEX60gensym215_1258298985.args, arg_1258298971)) {
                    result_1258298975 = nimCopy(null, HEX5BHEX5D_1677723041(frameHEX60gensym215_1258298985.args, arg_1258298971), NTI33554439);
                    break BeforeRet;
                    }
                    
                    res_486542164 = subInt(res_486542164, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258298975;

        }

      var result_1258298970 = ({rendered: false, str: []});

        var arg_1258298971 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258298963, true, true, ConstSet58));
        result_1258298970 = nimCopy(result_1258298970, {rendered: false, str: nimCopy(null, HEX3Aanonymous_1258298974(), NTI33554439)}, NTI1476395013);

      return result_1258298970;

    }
    
function HEX3Aanonymous_1258299145(arg_1258299139) {
        
function HEX3Aanonymous_1258299150() {
          var result_1258299151 = [];

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym218_1258299160 = 0;
              var colontmp__486542167 = 0;
              colontmp__486542167 = subInt((doc_1258296221.stack).length, 1);
              var res_486542168 = colontmp__486542167;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542168)) break Label3;
                    iHEX60gensym218_1258299160 = res_486542168;
                    var frameHEX60gensym218_1258299161 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym218_1258299160, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (hasKey_1258298666(frameHEX60gensym218_1258299161.args, arg_1258299147)) {
                    result_1258299151 = nimCopy(null, HEX5BHEX5D_1677723041(frameHEX60gensym218_1258299161.args, arg_1258299147), NTI33554439);
                    break BeforeRet;
                    }
                    
                    res_486542168 = subInt(res_486542168, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258299151;

        }

      var result_1258299146 = ({rendered: false, str: []});

        var arg_1258299147 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258299139, true, true, ConstSet59));
        result_1258299146 = nimCopy(result_1258299146, {rendered: true, str: nimCopy(null, escapeText_1442840582(HEX3Aanonymous_1258299150(), doc_1258296221.target), NTI33554439)}, NTI1476395013);

      return result_1258299146;

    }
    
function HEX3Aanonymous_1258299321(arg_1258299315) {
        var Temporary1;

      var result_1258299322 = ({rendered: false, str: []});

        var arg_1258299323 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258299315, true, true, ConstSet60));
        switch (doc_1258296221.target) {
        case 0:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("<b>$1</b>"), arg_1258299323);
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\textbf{$1}"), arg_1258299323);
          break;
        }
        result_1258299322 = nimCopy(result_1258299322, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258299322;

    }
    
function HEX3Aanonymous_1258299377(arg_1258299370) {
          var Temporary1;
        var Temporary2;

      var result_1258299378 = ({rendered: false, str: []});

        var args_1258299371 = parseXidocArguments_1459622458(arg_1258299370);
          if (((args_1258299371).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258299371).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("color"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258299371).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var color_1258299392 = expandStr_1442840595(doc_1258296221, HEX5BHEX5D_1258293496(args_1258299371, 2));
        var text_1258299397 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258299371, 1));
        switch (doc_1258296221.target) {
        case 0:
          Temporary2 = nsuFormatOpenArray(makeNimstrLit("<span style=\"color:$1\">$2</span>"), [nimCopy(null, color_1258299392, NTI33554439), nimCopy(null, text_1258299397, NTI33554439)]);
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage[svgnames]{xcolor}"));
          Temporary2 = nsuFormatOpenArray(makeNimstrLit("\\textcolor{$1}{$2}"), [nimCopy(null, color_1258299392, NTI33554439), nimCopy(null, text_1258299397, NTI33554439)]);
          break;
        }
        result_1258299378 = nimCopy(result_1258299378, {rendered: true, str: nimCopy(null, Temporary2, NTI33554439)}, NTI1476395013);

      return result_1258299378;

    }
    
function HEX3Aanonymous_1258299474(arg_1258299467) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258299523(it_1258299534) {
          var result_1258299537 = [];

            result_1258299537 = nimCopy(null, nsuSplitWhitespace(it_1258299534, -1), NTI637534694);

          return result_1258299537;

        }
        
function HEX3Aanonymous_1258299619(arg_1258299620) {
            var Temporary1;

          var result_1258299621 = ({rendered: false, str: []});

            if (eqStrings(arg_1258299620, [])) {
            Temporary1 = [];
            }
            else {
            Temporary1 = parseXidocArguments_1459622458(arg_1258299620);
            }
            
            var argsList_1258299626 = nimCopy(null, Temporary1, NTI1459620817);
            if (!(((argsList_1258299626).length == (params_1258299613).length))) {
            raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs exactly $2 arguments, $3 given"), [nimCopy(null, name_1258299485, NTI33554439), HEX24_335544323((params_1258299613).length), HEX24_335544323((argsList_1258299626).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
            }
            
            var argsTable_1258299665 = toTable_1677721615(zip_1258299639(params_1258299613, argsList_1258299626));
            HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).args = nimCopy(HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).args, argsTable_1258299665, NTI1476395026);
            result_1258299621 = nimCopy(result_1258299621, {rendered: true, str: renderStr_1442840879(doc_1258296221, body_1258299504)}, NTI1476395013);

          return result_1258299621;

        }

      var result_1258299475 = ({rendered: false, str: []});

        var args_1258299468 = parseXidocArguments_1459622458(arg_1258299467);
          if (((args_1258299468).length < 2)) Temporary1 = true; else {            Temporary1 = (3 < (args_1258299468).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("def"), makeNimstrLit("2"), makeNimstrLit("3"), HEX24_335544323((args_1258299468).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var name_1258299485 = expandStr_1442840595(doc_1258296221, args_1258299468[chckIndx(0, 0, (args_1258299468).length - 1)]);
        if ((0 < subInt((args_1258299468).length, 2))) {
        Temporary2 = some_1258294850(expandStr_1442840595(doc_1258296221, args_1258299468[chckIndx(1, 0, (args_1258299468).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var paramList_1258299499 = nimCopy(null, Temporary2, NTI1258293149);
        var body_1258299504 = HEX3Aanonymous_1258293395(doc_1258296221, HEX5BHEX5D_1258293496(args_1258299468, 1));
        var params_1258299613 = get_1258299599(map_1258299543(paramList_1258299499, HEX3Aanonymous_1258299523), []);
        HEX5BHEX5DHEX3D_1258293550(doc_1258296221.stack[chckIndx(0, 0, (doc_1258296221.stack).length - 1)].commands, name_1258299485, HEX3Aanonymous_1258299619);
        result_1258299475 = nimCopy(result_1258299475, {rendered: true, str: nimCopy(null, [], NTI33554439)}, NTI1476395013);

      return result_1258299475;

    }
    
function HEX3Aanonymous_1258299793(arg_1258299786) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258299825() {
                    var Temporary4;

          var result_1258299826 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym253_1258299835 = 0;
              var colontmp__486542182 = 0;
              colontmp__486542182 = subInt((doc_1258296221.stack).length, 1);
              var res_486542183 = colontmp__486542182;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542183)) break Label3;
                    iHEX60gensym253_1258299835 = res_486542183;
                    var frameHEX60gensym253_1258299836 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym253_1258299835, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym253_1258299836.lang)) {
                    result_1258299826 = (Temporary4 = get_1258299858(frameHEX60gensym253_1258299836.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542183 = subInt(res_486542183, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258299826;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258299794 = ({rendered: false, str: []});

        var args_1258299787 = parseXidocArguments_1459622458(arg_1258299786);
          if (((args_1258299787).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258299787).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("dfn"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258299787).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258299787).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258299787[chckIndx(0, 0, (args_1258299787).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var thName_1258299817 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258299822 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258299787, 1));
        var wordHEX60gensym243_1258299881 = translate_1493172260(0, HEX3Aanonymous_1258299825());
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>.xd-theorem-like{margin:1em 0}.xd-theorem-like>p{margin:0.5em 0}</style>"));
          if (isSome_1258294872(thName_1258299817)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2 ($3).</strong> $4</div>"), [makeNimstrLit("dfn"), nimCopy(null, wordHEX60gensym243_1258299881, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(thName_1258299817), Temporary5)[0][Temporary5[1]], NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258299822)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2.</strong> $3</div>"), [makeNimstrLit("dfn"), nimCopy(null, wordHEX60gensym243_1258299881, NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258299822)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("dfn"), nimCopy(null, wordHEX60gensym243_1258299881, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("dfn"), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258299822)]);
          break;
        }
        result_1258299794 = nimCopy(result_1258299794, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258299794;

    }
    
function HEX3Aanonymous_1258300031(arg_1258300024) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258300063() {
                    var Temporary4;

          var result_1258300064 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym265_1258300073 = 0;
              var colontmp__486542186 = 0;
              colontmp__486542186 = subInt((doc_1258296221.stack).length, 1);
              var res_486542187 = colontmp__486542186;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542187)) break Label3;
                    iHEX60gensym265_1258300073 = res_486542187;
                    var frameHEX60gensym265_1258300074 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym265_1258300073, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym265_1258300074.lang)) {
                    result_1258300064 = (Temporary4 = get_1258299858(frameHEX60gensym265_1258300074.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542187 = subInt(res_486542187, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258300064;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258300032 = ({rendered: false, str: []});

        var args_1258300025 = parseXidocArguments_1459622458(arg_1258300024);
          if (((args_1258300025).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258300025).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("example"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258300025).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258300025).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258300025[chckIndx(0, 0, (args_1258300025).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var thName_1258300055 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258300060 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258300025, 1));
        var wordHEX60gensym255_1258300097 = translate_1493172260(1, HEX3Aanonymous_1258300063());
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>.xd-theorem-like{margin:1em 0}.xd-theorem-like>p{margin:0.5em 0}</style>"));
          if (isSome_1258294872(thName_1258300055)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2 ($3).</strong> $4</div>"), [makeNimstrLit("example"), nimCopy(null, wordHEX60gensym255_1258300097, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(thName_1258300055), Temporary5)[0][Temporary5[1]], NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258300060)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2.</strong> $3</div>"), [makeNimstrLit("example"), nimCopy(null, wordHEX60gensym255_1258300097, NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258300060)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("example"), nimCopy(null, wordHEX60gensym255_1258300097, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("example"), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258300060)]);
          break;
        }
        result_1258300032 = nimCopy(result_1258300032, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258300032;

    }
    
function HEX3Aanonymous_1258300247(arg_1258300240) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258300279() {
                    var Temporary4;

          var result_1258300280 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym276_1258300289 = 0;
              var colontmp__486542190 = 0;
              colontmp__486542190 = subInt((doc_1258296221.stack).length, 1);
              var res_486542191 = colontmp__486542190;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542191)) break Label3;
                    iHEX60gensym276_1258300289 = res_486542191;
                    var frameHEX60gensym276_1258300290 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym276_1258300289, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym276_1258300290.lang)) {
                    result_1258300280 = (Temporary4 = get_1258299858(frameHEX60gensym276_1258300290.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542191 = subInt(res_486542191, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258300280;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258300248 = ({rendered: false, str: []});

        var args_1258300241 = parseXidocArguments_1459622458(arg_1258300240);
          if (((args_1258300241).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258300241).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("exercise"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258300241).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258300241).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258300241[chckIndx(0, 0, (args_1258300241).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var thName_1258300271 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258300276 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258300241, 1));
        var wordHEX60gensym266_1258300313 = translate_1493172260(2, HEX3Aanonymous_1258300279());
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>.xd-theorem-like{margin:1em 0}.xd-theorem-like>p{margin:0.5em 0}</style>"));
          if (isSome_1258294872(thName_1258300271)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2 ($3).</strong> $4</div>"), [makeNimstrLit("exercise"), nimCopy(null, wordHEX60gensym266_1258300313, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(thName_1258300271), Temporary5)[0][Temporary5[1]], NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258300276)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2.</strong> $3</div>"), [makeNimstrLit("exercise"), nimCopy(null, wordHEX60gensym266_1258300313, NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258300276)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("exercise"), nimCopy(null, wordHEX60gensym266_1258300313, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("exercise"), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258300276)]);
          break;
        }
        result_1258300248 = nimCopy(result_1258300248, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258300248;

    }
    
function HEX3Aanonymous_1258300457(arg_1258300451) {
      var result_1258300458 = ({rendered: false, str: []});

        var arg_1258300459 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258300451, true, true, ConstSet63));
        result_1258300458 = nimCopy(result_1258300458, {rendered: false, str: nimCopy(null, expandStr_1442840595(doc_1258296221, arg_1258300459), NTI33554439)}, NTI1476395013);

      return result_1258300458;

    }
    
function HEX3Aanonymous_1258300513(arg_1258300506) {
          var Temporary1;
        var Temporary2;

      var result_1258300514 = ({rendered: false, str: []});

        var args_1258300507 = parseXidocArguments_1459622458(arg_1258300506);
          if (((args_1258300507).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258300507).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("html-add-attrs"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258300507).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var args_1258300528 = expandStr_1442840595(doc_1258296221, HEX5BHEX5D_1258293496(args_1258300507, 2));
        var tag_1258300533 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258300507, 1));
        switch (doc_1258296221.target) {
        case 0:
          var matches_1258300534 = [[], []];
          if (!(npegsmatchCapture(tag_1258300533, peg_1275072301(makeNimstrLit("{\'<\' [a-zA-Z-]+} {.*}")), matches_1258300534, 0))) {
          raiseException({message: makeNimstrLit("Can\'t add HTML attribute to something that isn\'t an HTML tag"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
          var attrs_1258300542 = newSeq_452985301(0);
          var classes_1258300550 = newSeq_452985301(0);
          Label3: do {
            var arg_1258300551 = [];
            var lastHEX60gensym59_486542002 = 0;
            var splitsHEX60gensym59_486542003 = -1;
            if (false) {
            failedAssertImpl_218103864(makeNimstrLit("strutils.nim(381, 9) `not (\'\\x00\' in Whitespace)` "));
            }
            
            Label4: do {
                Label5: while (true) {
                if (!(lastHEX60gensym59_486542002 < (args_1258300528).length)) break Label5;
                  Label6: do {
                      Label7: while (true) {
                      if (!((lastHEX60gensym59_486542002 < (args_1258300528).length) && (ConstSet208[args_1258300528[chckIndx(lastHEX60gensym59_486542002, 0, (args_1258300528).length - 1)]] != undefined))) break Label7;
                        lastHEX60gensym59_486542002 = addInt(lastHEX60gensym59_486542002, 1);
                      }
                  } while (false);
                  var firstHEX60gensym59_486542006 = lastHEX60gensym59_486542002;
                  Label8: do {
                      Label9: while (true) {
                      if (!((lastHEX60gensym59_486542002 < (args_1258300528).length) && !((ConstSet209[args_1258300528[chckIndx(lastHEX60gensym59_486542002, 0, (args_1258300528).length - 1)]] != undefined)))) break Label9;
                        lastHEX60gensym59_486542002 = addInt(lastHEX60gensym59_486542002, 1);
                      }
                  } while (false);
                  if ((firstHEX60gensym59_486542006 <= subInt(lastHEX60gensym59_486542002, 1))) {
                  if ((splitsHEX60gensym59_486542003 == 0)) {
                  lastHEX60gensym59_486542002 = (args_1258300528).length;
                  }
                  
                  arg_1258300551 = substr_33557907(args_1258300528, firstHEX60gensym59_486542006, subInt(lastHEX60gensym59_486542002, 1));
                  if (nsuStartsWith(arg_1258300551, makeNimstrLit("#"))) {
                  attrs_1258300542.push(nsuFormatSingleElem(makeNimstrLit("id=\"$1\""), HEX5BHEX5D_939527322(arg_1258300551, HEX2EHEX2E_872415312(1, 1))));;
                  }
                  else {
                  if (nsuStartsWith(arg_1258300551, makeNimstrLit("."))) {
                  classes_1258300550.push(HEX5BHEX5D_939527322(arg_1258300551, HEX2EHEX2E_872415312(1, 1)));;
                  }
                  else {
                    var Temporary10 = nimCopy(null, arg_1258300551, NTI33554439);
                  attrs_1258300542.push(Temporary10);;
                  }
                  }
                  if ((splitsHEX60gensym59_486542003 == 0)) {
                  break Label4;
                  }
                  
                  splitsHEX60gensym59_486542003 = subInt(splitsHEX60gensym59_486542003, 1);
                  }
                  
                }
            } while (false);
          } while (false);
          if (!(((classes_1258300550).length == 0))) {
          attrs_1258300542.push(nsuFormatSingleElem(makeNimstrLit("class=\"$1\""), nsuJoinSep(classes_1258300550, makeNimstrLit(" "))));;
          }
          
          Temporary2 = nsuJoinSep(matches_1258300534, (makeNimstrLit(" ") || []).concat(nsuJoinSep(attrs_1258300542, makeNimstrLit(" ")) || []));
          break;
        default: 
          Temporary2 = tag_1258300533;
          break;
        }
        result_1258300514 = nimCopy(result_1258300514, {rendered: true, str: nimCopy(null, Temporary2, NTI33554439)}, NTI1476395013);

      return result_1258300514;

    }
    
function HEX3Aanonymous_1258300659(arg_1258300653) {
        var Temporary1;

      var result_1258300660 = ({rendered: false, str: []});

        var arg_1258300661 = nsuStrip(arg_1258300653, true, true, ConstSet210);
        if ((doc_1258296221.target == 0)) {
        Temporary1 = renderStr_1442840879(doc_1258296221, arg_1258300661);
        }
        else {
        Temporary1 = [];
        }
        
        result_1258300660 = nimCopy(result_1258300660, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258300660;

    }
    
function HEX3Aanonymous_1258300719(arg_1258300713) {
        var Temporary1;

      var result_1258300720 = ({rendered: false, str: []});

        var arg_1258300721 = nsuStrip(arg_1258300713, true, true, ConstSet211);
        if ((doc_1258296221.target == 1)) {
        Temporary1 = renderStr_1442840879(doc_1258296221, arg_1258300721);
        }
        else {
        Temporary1 = [];
        }
        
        result_1258300720 = nimCopy(result_1258300720, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258300720;

    }
    
function HEX3Aanonymous_1258300779(arg_1258300772) {
        var Temporary5;
        var Temporary7;
        
function HEX3Aanonymous_1258300865() {
                    var Temporary4;

          var result_1258300866 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym311_1258300875 = 0;
              var colontmp__486542300 = 0;
              colontmp__486542300 = subInt((doc_1258296221.stack).length, 1);
              var res_486542301 = colontmp__486542300;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542301)) break Label3;
                    iHEX60gensym311_1258300875 = res_486542301;
                    var frameHEX60gensym311_1258300876 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym311_1258300875, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym311_1258300876.lang)) {
                    result_1258300866 = (Temporary4 = get_1258299858(frameHEX60gensym311_1258300876.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542301 = subInt(res_486542301, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258300866;

        }

      var result_1258300780 = ({rendered: false, str: []});

        var args_1258300773 = parseXidocArguments_1459622458(arg_1258300772);
        if (((args_1258300773).length < 1)) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [makeNimstrLit("include"), makeNimstrLit("1"), HEX24_335544323((args_1258300773).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var filename_1258300787 = expandStr_1442840595(doc_1258296221, args_1258300773[chckIndx(0, 0, (args_1258300773).length - 1)]);
        Label1: do {
          var HEX3Atmp_1258300839 = HEX5BHEX5D_1258300797(args_1258300773, HEX2EHEX2E_872415312(1, 1));
          var iHEX60gensym306_1258300842 = 0;
          var resultHEX60gensym306_1258300849 = newSeq_452985301(chckRange((HEX3Atmp_1258300839).length, 0, 2147483647));
          Label2: do {
            var it_1258300853 = null;
            var it_1258300853_Idx = 0;
            var i_486542010 = 0;
            var L_486542011 = (HEX3Atmp_1258300839).length;
            Label3: do {
                Label4: while (true) {
                if (!(i_486542010 < L_486542011)) break Label4;
                  it_1258300853 = HEX3Atmp_1258300839; it_1258300853_Idx = chckIndx(i_486542010, 0, (HEX3Atmp_1258300839).length - 1);
                  resultHEX60gensym306_1258300849[chckIndx(iHEX60gensym306_1258300842, 0, (resultHEX60gensym306_1258300849).length - 1)] = nimCopy(null, renderStr_1442840879(doc_1258296221, it_1258300853[it_1258300853_Idx]), NTI33554439);
                  iHEX60gensym306_1258300842 = addInt(iHEX60gensym306_1258300842, 1);
                  i_486542010 = addInt(i_486542010, 1);
                  if (!(((HEX3Atmp_1258300839).length == L_486542011))) {
                  failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
        } while (false);
        var args_1258300858 = nimCopy(null, resultHEX60gensym306_1258300849, NTI452985127);
        if (!((modInt((args_1258300858).length, 2) == 0))) {
        raiseException({message: makeNimstrLit("Additional arguments to include must come in pairs"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var path_1258300862 = HEX2F_620757108(nossplitPath(doc_1258296221.path).Field0, filename_1258300787);
++excHandler;
        Temporary7 = framePtr;
        try {
        var subdoc_1258300908 = {path: nimCopy(null, path_1258300862, NTI33554439), body: readFile_452985260(path_1258300862), target: doc_1258296221.target, snippet: true, stack: [{cmdName: makeNimstrLit("[top]"), lang: some_1258300899(HEX3Aanonymous_1258300865()), args: ({data: [], counter: 0}), cmdArg: [], commands: ({data: [], counter: 0})}], addToHead: ({data: [], counter: 0, first: 0, last: 0}), mathRenderer: 0, templateArgs: ({data: [], counter: 0}), verbose: false};
        subdoc_1258300908.stack[chckIndx(0, 0, (subdoc_1258300908.stack).length - 1)].commands = nimCopy(subdoc_1258300908.stack[chckIndx(0, 0, (subdoc_1258300908.stack).length - 1)].commands, defaultCommands_1258296220(subdoc_1258300908), NTI1476395041);
        Label8: do {
          var i_1258300916 = 0;
          var colontmp__486542014 = 0;
          colontmp__486542014 = divInt((args_1258300858).length, 2);
          var i_486542015 = 0;
          Label9: do {
              Label10: while (true) {
              if (!(i_486542015 < colontmp__486542014)) break Label10;
                i_1258300916 = i_486542015;
                HEX5BHEX5DHEX3D_1677721688(subdoc_1258300908.templateArgs, args_1258300858[chckIndx(mulInt(2, i_1258300916), 0, (args_1258300858).length - 1)], args_1258300858[chckIndx(addInt(mulInt(2, i_1258300916), 1), 0, (args_1258300858).length - 1)]);
                i_486542015 = addInt(i_486542015, 1);
              }
          } while (false);
        } while (false);
        Temporary5 = renderStr_1442840879(subdoc_1258300908, subdoc_1258300908.body);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        framePtr = Temporary7;
        if (lastJSError && (isObj(lastJSError.m_type, NTI33555115))) {
        var fmtRes_1258300963 = [mnewString(0)];
        fmtRes_1258300963[0].push.apply(fmtRes_1258300963[0], makeNimstrLit("Cannot open file "));;
        formatValue_1191182498(fmtRes_1258300963, 0, filename_1258300787, []);
        fmtRes_1258300963[0].push.apply(fmtRes_1258300963[0], makeNimstrLit("\x0A(resolved as "));;
        formatValue_1191182498(fmtRes_1258300963, 0, path_1258300862, []);
        fmtRes_1258300963[0].push.apply(fmtRes_1258300963[0], makeNimstrLit(")"));;
        raiseException({message: nimCopy(null, fmtRes_1258300963[0], NTI33554439), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        framePtr = Temporary7;
        }
        result_1258300780 = nimCopy(result_1258300780, {rendered: true, str: nimCopy(null, Temporary5, NTI33554439)}, NTI1476395013);

      return result_1258300780;

    }
    
function HEX3Aanonymous_1258301062(arg_1258301055) {
          var Temporary1;
        var Temporary2;
        var Temporary4;

      var result_1258301063 = ({rendered: false, str: []});

        var args_1258301056 = parseXidocArguments_1459622458(arg_1258301055);
          if (((args_1258301056).length < 1)) Temporary1 = true; else {            Temporary1 = (1 < (args_1258301056).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("inject"), makeNimstrLit("1"), makeNimstrLit("1"), HEX24_335544323((args_1258301056).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var filename_1258301077 = expandStr_1442840595(doc_1258296221, HEX5BHEX5D_1258293496(args_1258301056, 1));
        var path_1258301078 = HEX2F_620757108(nossplitPath(doc_1258296221.path).Field0, filename_1258301077);
++excHandler;
        Temporary4 = framePtr;
        try {
        Temporary2 = renderStr_1442840879(doc_1258296221, readFile_452985260(path_1258301078));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        framePtr = Temporary4;
        if (lastJSError && (isObj(lastJSError.m_type, NTI33555115))) {
        var fmtRes_1258301079 = [mnewString(0)];
        fmtRes_1258301079[0].push.apply(fmtRes_1258301079[0], makeNimstrLit("Cannot open file "));;
        formatValue_1191182498(fmtRes_1258301079, 0, filename_1258301077, []);
        fmtRes_1258301079[0].push.apply(fmtRes_1258301079[0], makeNimstrLit("\x0A(resolved as "));;
        formatValue_1191182498(fmtRes_1258301079, 0, path_1258301078, []);
        fmtRes_1258301079[0].push.apply(fmtRes_1258301079[0], makeNimstrLit(")"));;
        raiseException({message: nimCopy(null, fmtRes_1258301079[0], NTI33554439), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        framePtr = Temporary4;
        }
        result_1258301063 = nimCopy(result_1258301063, {rendered: true, str: nimCopy(null, Temporary2, NTI33554439)}, NTI1476395013);

      return result_1258301063;

    }
    
function HEX3Aanonymous_1258301132(arg_1258301126) {
        var Temporary1;

      var result_1258301133 = ({rendered: false, str: []});

        var arg_1258301134 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258301126, true, true, ConstSet226));
        switch (doc_1258296221.target) {
        case 0:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("<i>$1</i>"), arg_1258301134);
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\textit{$1}"), arg_1258301134);
          break;
        }
        result_1258301133 = nimCopy(result_1258301133, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258301133;

    }
    
function HEX3Aanonymous_1258301188(arg_1258301181) {
          var Temporary1;
        var Temporary2;

      var result_1258301189 = ({rendered: false, str: []});

        var args_1258301182 = parseXidocArguments_1459622458(arg_1258301181);
          if (((args_1258301182).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258301182).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("lang"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258301182).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var langStr_1258301203 = expandStr_1442840595(doc_1258296221, HEX5BHEX5D_1258293496(args_1258301182, 2));
        var body_1258301208 = HEX3Aanonymous_1258293395(doc_1258296221, HEX5BHEX5D_1258293496(args_1258301182, 1));
        switch (toJSStr(nsuToLowerAsciiStr(langStr_1258301203))) {
        case "en":
        case "english":
          Temporary2 = 0;
          break;
        case "cs":
        case "cz":
        case "czech":
          Temporary2 = 1;
          break;
        default: 
          raiseException({message: nsuFormatSingleElem(makeNimstrLit("Unknown language: $1"), langStr_1258301203), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          break;
        }
        var lang_1258301209 = Temporary2;
        HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).lang = nimCopy(HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).lang, some_1258300899(lang_1258301209), NTI1476395054);
        result_1258301189 = nimCopy(result_1258301189, {rendered: true, str: nimCopy(null, renderStr_1442840879(doc_1258296221, body_1258301208), NTI33554439)}, NTI1476395013);

      return result_1258301189;

    }
    
function HEX3Aanonymous_1258301270(arg_1258301263) {
          var Temporary1;
        var Temporary2;
        var Temporary3;

      var result_1258301271 = ({rendered: false, str: []});

        var args_1258301264 = parseXidocArguments_1459622458(arg_1258301263);
          if (((args_1258301264).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258301264).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("link"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258301264).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258301264).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258301264[chckIndx(0, 0, (args_1258301264).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var name_1258301294 = nimCopy(null, Temporary2, NTI1258293149);
        var url_1258301299 = expandStr_1442840595(doc_1258296221, HEX5BHEX5D_1258293496(args_1258301264, 1));
        switch (doc_1258296221.target) {
        case 0:
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("<a href=\"$1\">$2</a>"), [nimCopy(null, url_1258301299, NTI33554439), get_1258301312(name_1258301294, url_1258301299)]);
          break;
        case 1:
          Temporary3 = [];
          break;
        }
        result_1258301271 = nimCopy(result_1258301271, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258301271;

    }
    
function HEX3Aanonymous_1258301377(arg_1258301370) {
        var Temporary5;

      var result_1258301378 = ({rendered: false, str: []});

        var args_1258301371 = parseXidocArguments_1459622458(arg_1258301370);
        if (((args_1258301371).length < 0)) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [makeNimstrLit("list"), makeNimstrLit("0"), HEX24_335544323((args_1258301371).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        Label1: do {
          var HEX3Atmp_1258301419 = HEX5BHEX5D_1258300797(args_1258301371, HEX2EHEX2E_872415312(0, 1));
          var iHEX60gensym350_1258301422 = 0;
          var resultHEX60gensym350_1258301429 = newSeq_452985301(chckRange((HEX3Atmp_1258301419).length, 0, 2147483647));
          Label2: do {
            var it_1258301433 = null;
            var it_1258301433_Idx = 0;
            var i_486542019 = 0;
            var L_486542020 = (HEX3Atmp_1258301419).length;
            Label3: do {
                Label4: while (true) {
                if (!(i_486542019 < L_486542020)) break Label4;
                  it_1258301433 = HEX3Atmp_1258301419; it_1258301433_Idx = chckIndx(i_486542019, 0, (HEX3Atmp_1258301419).length - 1);
                  resultHEX60gensym350_1258301429[chckIndx(iHEX60gensym350_1258301422, 0, (resultHEX60gensym350_1258301429).length - 1)] = nimCopy(null, renderStr_1442840879(doc_1258296221, it_1258301433[it_1258301433_Idx]), NTI33554439);
                  iHEX60gensym350_1258301422 = addInt(iHEX60gensym350_1258301422, 1);
                  i_486542019 = addInt(i_486542019, 1);
                  if (!(((HEX3Atmp_1258301419).length == L_486542020))) {
                  failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
        } while (false);
        var items_1258301438 = nimCopy(null, resultHEX60gensym350_1258301429, NTI452985127);
        switch (doc_1258296221.target) {
        case 0:
          Label6: do {
            var iHEX60gensym353_1258301460 = 0;
            var resultHEX60gensym353_1258301467 = newSeq_452985301(chckRange((items_1258301438).length, 0, 2147483647));
            Label7: do {
              var it_1258301471 = null;
              var it_1258301471_Idx = 0;
              var i_486542024 = 0;
              var L_486542025 = (items_1258301438).length;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_486542024 < L_486542025)) break Label9;
                    it_1258301471 = items_1258301438; it_1258301471_Idx = chckIndx(i_486542024, 0, (items_1258301438).length - 1);
                    resultHEX60gensym353_1258301467[chckIndx(iHEX60gensym353_1258301460, 0, (resultHEX60gensym353_1258301467).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("<li>$1</li>"), it_1258301471[it_1258301471_Idx]), NTI33554439);
                    iHEX60gensym353_1258301460 = addInt(iHEX60gensym353_1258301460, 1);
                    i_486542024 = addInt(i_486542024, 1);
                    if (!(((items_1258301438).length == L_486542025))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
          } while (false);
          Temporary5 = nsuFormatSingleElem(makeNimstrLit("<ul>$1</ul>"), nsuJoinSep(resultHEX60gensym353_1258301467, []));
          break;
        case 1:
          Label10: do {
            var iHEX60gensym356_1258301497 = 0;
            var resultHEX60gensym356_1258301504 = newSeq_452985301(chckRange((items_1258301438).length, 0, 2147483647));
            Label11: do {
              var it_1258301508 = null;
              var it_1258301508_Idx = 0;
              var i_486542029 = 0;
              var L_486542030 = (items_1258301438).length;
              Label12: do {
                  Label13: while (true) {
                  if (!(i_486542029 < L_486542030)) break Label13;
                    it_1258301508 = items_1258301438; it_1258301508_Idx = chckIndx(i_486542029, 0, (items_1258301438).length - 1);
                    resultHEX60gensym356_1258301504[chckIndx(iHEX60gensym356_1258301497, 0, (resultHEX60gensym356_1258301504).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\item $1"), it_1258301508[it_1258301508_Idx]), NTI33554439);
                    iHEX60gensym356_1258301497 = addInt(iHEX60gensym356_1258301497, 1);
                    i_486542029 = addInt(i_486542029, 1);
                    if (!(((items_1258301438).length == L_486542030))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
          } while (false);
          Temporary5 = nsuFormatSingleElem(makeNimstrLit("\\begin{itemize}$1\\end{iremize}"), nsuJoinSep(resultHEX60gensym356_1258301504, []));
          break;
        }
        result_1258301378 = nimCopy(result_1258301378, {rendered: true, str: nimCopy(null, Temporary5, NTI33554439)}, NTI1476395013);

      return result_1258301378;

    }
    
function HEX3Aanonymous_1258301565(arg_1258301559) {
        var Temporary1;

      var result_1258301566 = ({rendered: false, str: []});

        var arg_1258301567 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258301559, true, true, ConstSet228));
        switch (doc_1258296221.target) {
        case 0:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("<code>$1</code>"), arg_1258301567);
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\texttt{$1}"), arg_1258301567);
          break;
        }
        result_1258301566 = nimCopy(result_1258301566, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258301566;

    }
    
function HEX3Aanonymous_1258301620(arg_1258301614) {
        var Temporary1;

      var result_1258301621 = ({rendered: false, str: []});

        var arg_1258301622 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258301614, true, true, ConstSet229));
        switch (doc_1258296221.target) {
        case 0:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("<p>$1</p>"), arg_1258301622);
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\par $1"), arg_1258301622);
          break;
        }
        result_1258301621 = nimCopy(result_1258301621, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258301621;

    }
    
function HEX3Aanonymous_1258301675(arg_1258301669) {
      var result_1258301676 = ({rendered: false, str: []});

        var arg_1258301677 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258301669, true, true, ConstSet230));
        result_1258301676 = nimCopy(result_1258301676, {rendered: true, str: nimCopy(null, nsuStrip(arg_1258301677, true, true, ConstSet231), NTI33554439)}, NTI1476395013);

      return result_1258301676;

    }
    
function HEX3Aanonymous_1258301730(arg_1258301724) {
      var result_1258301731 = ({rendered: false, str: []});

        var arg_1258301732 = nsuStrip(arg_1258301724, true, true, ConstSet232);
        result_1258301731 = nimCopy(result_1258301731, {rendered: true, str: nimCopy(null, nsuStrip(arg_1258301732, true, true, ConstSet233), NTI33554439)}, NTI1476395013);

      return result_1258301731;

    }
    
function HEX3Aanonymous_1258301791(arg_1258301784) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258301823() {
                    var Temporary4;

          var result_1258301824 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym377_1258301833 = 0;
              var colontmp__486542304 = 0;
              colontmp__486542304 = subInt((doc_1258296221.stack).length, 1);
              var res_486542305 = colontmp__486542304;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542305)) break Label3;
                    iHEX60gensym377_1258301833 = res_486542305;
                    var frameHEX60gensym377_1258301834 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym377_1258301833, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym377_1258301834.lang)) {
                    result_1258301824 = (Temporary4 = get_1258299858(frameHEX60gensym377_1258301834.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542305 = subInt(res_486542305, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258301824;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258301792 = ({rendered: false, str: []});

        var args_1258301785 = parseXidocArguments_1459622458(arg_1258301784);
          if (((args_1258301785).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258301785).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("proof"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258301785).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258301785).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258301785[chckIndx(0, 0, (args_1258301785).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var thName_1258301815 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258301820 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258301785, 1));
        var wordHEX60gensym367_1258301857 = translate_1493172260(3, HEX3Aanonymous_1258301823());
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>.xd-theorem-like{margin:1em 0}.xd-theorem-like>p{margin:0.5em 0}</style>"));
          if (isSome_1258294872(thName_1258301815)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2 ($3).</strong> $4</div>"), [makeNimstrLit("proof"), nimCopy(null, wordHEX60gensym367_1258301857, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(thName_1258301815), Temporary5)[0][Temporary5[1]], NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258301820)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2.</strong> $3</div>"), [makeNimstrLit("proof"), nimCopy(null, wordHEX60gensym367_1258301857, NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258301820)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("proof"), nimCopy(null, wordHEX60gensym367_1258301857, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("proof"), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258301820)]);
          break;
        }
        result_1258301792 = nimCopy(result_1258301792, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258301792;

    }
    
function HEX3Aanonymous_1258302002(arg_1258301995) {
        var Temporary5;

      var result_1258302003 = ({rendered: false, str: []});

        var args_1258301996 = parseXidocArguments_1459622458(arg_1258301995);
        if (((args_1258301996).length < 0)) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [makeNimstrLit("props"), makeNimstrLit("0"), HEX24_335544323((args_1258301996).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        Label1: do {
          var HEX3Atmp_1258302044 = HEX5BHEX5D_1258300797(args_1258301996, HEX2EHEX2E_872415312(0, 1));
          var iHEX60gensym385_1258302047 = 0;
          var resultHEX60gensym385_1258302054 = newSeq_452985301(chckRange((HEX3Atmp_1258302044).length, 0, 2147483647));
          Label2: do {
            var it_1258302058 = null;
            var it_1258302058_Idx = 0;
            var i_486542034 = 0;
            var L_486542035 = (HEX3Atmp_1258302044).length;
            Label3: do {
                Label4: while (true) {
                if (!(i_486542034 < L_486542035)) break Label4;
                  it_1258302058 = HEX3Atmp_1258302044; it_1258302058_Idx = chckIndx(i_486542034, 0, (HEX3Atmp_1258302044).length - 1);
                  resultHEX60gensym385_1258302054[chckIndx(iHEX60gensym385_1258302047, 0, (resultHEX60gensym385_1258302054).length - 1)] = nimCopy(null, renderStr_1442840879(doc_1258296221, it_1258302058[it_1258302058_Idx]), NTI33554439);
                  iHEX60gensym385_1258302047 = addInt(iHEX60gensym385_1258302047, 1);
                  i_486542034 = addInt(i_486542034, 1);
                  if (!(((HEX3Atmp_1258302044).length == L_486542035))) {
                  failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
        } while (false);
        var items_1258302063 = nimCopy(null, resultHEX60gensym385_1258302054, NTI452985127);
        switch (doc_1258296221.target) {
        case 0:
          Label6: do {
            var iHEX60gensym388_1258302085 = 0;
            var resultHEX60gensym388_1258302092 = newSeq_452985301(chckRange((items_1258302063).length, 0, 2147483647));
            Label7: do {
              var it_1258302096 = null;
              var it_1258302096_Idx = 0;
              var i_486542039 = 0;
              var L_486542040 = (items_1258302063).length;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_486542039 < L_486542040)) break Label9;
                    it_1258302096 = items_1258302063; it_1258302096_Idx = chckIndx(i_486542039, 0, (items_1258302063).length - 1);
                    resultHEX60gensym388_1258302092[chckIndx(iHEX60gensym388_1258302085, 0, (resultHEX60gensym388_1258302092).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("<li>$1</li>"), it_1258302096[it_1258302096_Idx]), NTI33554439);
                    iHEX60gensym388_1258302085 = addInt(iHEX60gensym388_1258302085, 1);
                    i_486542039 = addInt(i_486542039, 1);
                    if (!(((items_1258302063).length == L_486542040))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
          } while (false);
          Temporary5 = nsuFormatSingleElem(makeNimstrLit("<ul>$1</ul>"), nsuJoinSep(resultHEX60gensym388_1258302092, []));
          break;
        case 1:
          Label10: do {
            var iHEX60gensym391_1258302122 = 0;
            var resultHEX60gensym391_1258302129 = newSeq_452985301(chckRange((items_1258302063).length, 0, 2147483647));
            Label11: do {
              var it_1258302133 = null;
              var it_1258302133_Idx = 0;
              var i_486542044 = 0;
              var L_486542045 = (items_1258302063).length;
              Label12: do {
                  Label13: while (true) {
                  if (!(i_486542044 < L_486542045)) break Label13;
                    it_1258302133 = items_1258302063; it_1258302133_Idx = chckIndx(i_486542044, 0, (items_1258302063).length - 1);
                    resultHEX60gensym391_1258302129[chckIndx(iHEX60gensym391_1258302122, 0, (resultHEX60gensym391_1258302129).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\item $1"), it_1258302133[it_1258302133_Idx]), NTI33554439);
                    iHEX60gensym391_1258302122 = addInt(iHEX60gensym391_1258302122, 1);
                    i_486542044 = addInt(i_486542044, 1);
                    if (!(((items_1258302063).length == L_486542045))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
          } while (false);
          Temporary5 = nsuFormatSingleElem(makeNimstrLit("\\begin{itemize}$1\\end{iremize}"), nsuJoinSep(resultHEX60gensym391_1258302129, []));
          break;
        }
        result_1258302003 = nimCopy(result_1258302003, {rendered: true, str: nimCopy(null, Temporary5, NTI33554439)}, NTI1476395013);

      return result_1258302003;

    }
    
function HEX3Aanonymous_1258302190(arg_1258302184) {
      var result_1258302191 = ({rendered: false, str: []});

        var arg_1258302192 = nsuStrip(arg_1258302184, true, true, ConstSet234);
        result_1258302191 = nimCopy(result_1258302191, {rendered: false, str: nimCopy(null, nsuStrip(arg_1258302192, true, true, ConstSet235), NTI33554439)}, NTI1476395013);

      return result_1258302191;

    }
    
function HEX3Aanonymous_1258302245(arg_1258302239) {
      var result_1258302246 = ({rendered: false, str: []});

        var arg_1258302247 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258302239, true, true, ConstSet236));
        result_1258302246 = nimCopy(result_1258302246, {rendered: true, str: nimCopy(null, renderStr_1442840879(doc_1258296221, arg_1258302247), NTI33554439)}, NTI1476395013);

      return result_1258302246;

    }
    
function HEX3Aanonymous_1258302301(arg_1258302294) {
          var Temporary1;
        var Temporary2;
        var Temporary6;
          var Temporary7;
          var Temporary8;
          var Temporary9;
          var Temporary10;
          var Temporary11;

      var result_1258302302 = ({rendered: false, str: []});

        var args_1258302295 = parseXidocArguments_1459622458(arg_1258302294);
          if (((args_1258302295).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258302295).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("section"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258302295).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258302295).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258302295[chckIndx(0, 0, (args_1258302295).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var name_1258302325 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258302330 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258302295, 1));
        var resultHEX60gensym407_1258302332 = 0;
        Label3: do {
          var it_1258302353 = null;
          var i_486542049 = 0;
          var L_486542050 = (doc_1258296221.stack).length;
          Label4: do {
              Label5: while (true) {
              if (!(i_486542049 < L_486542050)) break Label5;
                it_1258302353 = doc_1258296221.stack[chckIndx(i_486542049, 0, (doc_1258296221.stack).length - 1)];
                if (eqStrings(it_1258302353.cmdName, makeNimstrLit("section"))) {
                resultHEX60gensym407_1258302332 = addInt(resultHEX60gensym407_1258302332, 1);
                }
                
                i_486542049 = addInt(i_486542049, 1);
                if (!(((doc_1258296221.stack).length == L_486542050))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        var depth_1258302358 = resultHEX60gensym407_1258302332;
        switch (doc_1258296221.target) {
        case 0:
          if (isSome_1258294872(name_1258302325)) {
          switch (depth_1258302358) {
          case 1:
            Temporary8 = makeNimstrLit("h2");
            break;
          case 2:
            Temporary8 = makeNimstrLit("h3");
            break;
          case 3:
            Temporary8 = makeNimstrLit("h4");
            break;
          case 4:
            Temporary8 = makeNimstrLit("h5");
            break;
          default: 
            Temporary8 = makeNimstrLit("h6");
            break;
          }
          var headingTag_1258302366 = nimCopy(null, Temporary8, NTI33554439);
          Temporary7 = nsuFormatOpenArray(makeNimstrLit("<section><$1 class=\"xd-section-heading\">$2</$1>$3</section>"), [nimCopy(null, headingTag_1258302366, NTI33554439), nimCopy(null, (Temporary9 = get_1258294907(name_1258302325), Temporary9)[0][Temporary9[1]], NTI33554439), nimCopy(null, content_1258302330, NTI33554439)]);
          }
          else {
          Temporary7 = nsuFormatOpenArray(makeNimstrLit("<section>$1</section>"), [nimCopy(null, content_1258302330, NTI33554439)]);
          }
          
          Temporary6 = Temporary7;
          break;
        case 1:
          if (isSome_1258294872(name_1258302325)) {
          Temporary10 = nsuFormatOpenArray(makeNimstrLit("\\section*{$1}$2"), [nimCopy(null, (Temporary11 = get_1258294907(name_1258302325), Temporary11)[0][Temporary11[1]], NTI33554439), nimCopy(null, content_1258302330, NTI33554439)]);
          }
          else {
          Temporary10 = nsuFormatOpenArray(makeNimstrLit("\\section*{}$1"), [nimCopy(null, content_1258302330, NTI33554439)]);
          }
          
          Temporary6 = Temporary10;
          break;
        }
        result_1258302302 = nimCopy(result_1258302302, {rendered: true, str: nimCopy(null, Temporary6, NTI33554439)}, NTI1476395013);

      return result_1258302302;

    }
    
function HEX3Aanonymous_1258302465(arg_1258302459) {
        var Temporary1;

      var result_1258302466 = ({rendered: false, str: []});

        var arg_1258302467 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258302459, true, true, ConstSet237));
        switch (toJSStr(nsuToLowerAsciiStr(arg_1258302467))) {
        case "en":
        case "english":
          Temporary1 = 0;
          break;
        case "cs":
        case "cz":
        case "czech":
          Temporary1 = 1;
          break;
        default: 
          raiseException({message: nsuFormatSingleElem(makeNimstrLit("Unknown language: $1"), arg_1258302467), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          break;
        }
        doc_1258296221.stack[chckIndx(0, 0, (doc_1258296221.stack).length - 1)].lang = nimCopy(doc_1258296221.stack[chckIndx(0, 0, (doc_1258296221.stack).length - 1)].lang, some_1258300899(Temporary1), NTI1476395054);
        result_1258302466 = nimCopy(result_1258302466, {rendered: true, str: nimCopy(null, [], NTI33554439)}, NTI1476395013);

      return result_1258302466;

    }
    
function HEX3Aanonymous_1258302523(arg_1258302517) {
        var Temporary1;

      var result_1258302524 = ({rendered: false, str: []});

        var arg_1258302525 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258302517, true, true, ConstSet238));
        switch (toJSStr(arg_1258302525)) {
        case "katex-jsdelivr":
          Temporary1 = 0;
          break;
        case "katex-duktape":
          Temporary1 = 1;
          break;
        default: 
          raiseException({message: nsuFormatSingleElem(makeNimstrLit("Invalid value for set-math-renderer: $1"), arg_1258302525), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          break;
        }
        doc_1258296221.mathRenderer = Temporary1;
        result_1258302524 = nimCopy(result_1258302524, {rendered: true, str: nimCopy(null, [], NTI33554439)}, NTI1476395013);

      return result_1258302524;

    }
    
function HEX3Aanonymous_1258302587(arg_1258302581) {
      var result_1258302588 = ({rendered: false, str: []});

        var arg_1258302589 = expandStr_1442840595(doc_1258296221, nsuStrip(arg_1258302581, true, true, ConstSet239));
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, nsuFormatSingleElem(makeNimstrLit("<title>$1</title>"), arg_1258302589));
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, nsuFormatSingleElem(makeNimstrLit("\\title{$1}"), arg_1258302589));
          break;
        }
        result_1258302588 = nimCopy(result_1258302588, {rendered: true, str: nimCopy(null, [], NTI33554439)}, NTI1476395013);

      return result_1258302588;

    }
    
function HEX3Aanonymous_1258302694(arg_1258302687) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258302726() {
                    var Temporary4;

          var result_1258302727 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym428_1258302736 = 0;
              var colontmp__486542308 = 0;
              colontmp__486542308 = subInt((doc_1258296221.stack).length, 1);
              var res_486542309 = colontmp__486542308;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542309)) break Label3;
                    iHEX60gensym428_1258302736 = res_486542309;
                    var frameHEX60gensym428_1258302737 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym428_1258302736, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym428_1258302737.lang)) {
                    result_1258302727 = (Temporary4 = get_1258299858(frameHEX60gensym428_1258302737.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542309 = subInt(res_486542309, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258302727;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258302695 = ({rendered: false, str: []});

        var args_1258302688 = parseXidocArguments_1459622458(arg_1258302687);
          if (((args_1258302688).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258302688).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("solution"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258302688).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258302688).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258302688[chckIndx(0, 0, (args_1258302688).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var thName_1258302718 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258302723 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258302688, 1));
        var wordHEX60gensym418_1258302760 = translate_1493172260(4, HEX3Aanonymous_1258302726());
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>.xd-theorem-like{margin:1em 0}.xd-theorem-like>p{margin:0.5em 0}</style>"));
          if (isSome_1258294872(thName_1258302718)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2 ($3).</strong> $4</div>"), [makeNimstrLit("solution"), nimCopy(null, wordHEX60gensym418_1258302760, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(thName_1258302718), Temporary5)[0][Temporary5[1]], NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258302723)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2.</strong> $3</div>"), [makeNimstrLit("solution"), nimCopy(null, wordHEX60gensym418_1258302760, NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258302723)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("solution"), nimCopy(null, wordHEX60gensym418_1258302760, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("solution"), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258302723)]);
          break;
        }
        result_1258302695 = nimCopy(result_1258302695, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258302695;

    }
    
function HEX3Aanonymous_1258302905(arg_1258302898) {
          var Temporary1;
        var Temporary2;

      var result_1258302906 = ({rendered: false, str: []});

        var args_1258302899 = parseXidocArguments_1459622458(arg_1258302898);
          if (((args_1258302899).length < 2)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258302899).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("spoiler"), makeNimstrLit("2"), makeNimstrLit("2"), HEX24_335544323((args_1258302899).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var title_1258302920 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258302899, 2));
        var content_1258302925 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258302899, 1));
        switch (doc_1258296221.target) {
        case 0:
          Temporary2 = nsuFormatOpenArray(makeNimstrLit("<details class=\"xd-spoiler\"><summary>$1</summary>$2</details>"), [nimCopy(null, title_1258302920, NTI33554439), nimCopy(null, content_1258302925, NTI33554439)]);
          break;
        case 1:
          raiseException({message: makeNimstrLit("The spoiler command is not supported in the LaTeX backend"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          break;
        }
        result_1258302906 = nimCopy(result_1258302906, {rendered: true, str: nimCopy(null, Temporary2, NTI33554439)}, NTI1476395013);

      return result_1258302906;

    }
    
function HEX3Aanonymous_1258302979(arg_1258302972) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258303011() {
                    var Temporary4;

          var result_1258303012 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym448_1258303021 = 0;
              var colontmp__486542312 = 0;
              colontmp__486542312 = subInt((doc_1258296221.stack).length, 1);
              var res_486542313 = colontmp__486542312;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542313)) break Label3;
                    iHEX60gensym448_1258303021 = res_486542313;
                    var frameHEX60gensym448_1258303022 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym448_1258303021, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym448_1258303022.lang)) {
                    result_1258303012 = (Temporary4 = get_1258299858(frameHEX60gensym448_1258303022.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542313 = subInt(res_486542313, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258303012;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258302980 = ({rendered: false, str: []});

        var args_1258302973 = parseXidocArguments_1459622458(arg_1258302972);
          if (((args_1258302973).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258302973).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("spoiler-solution"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258302973).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258302973).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258302973[chckIndx(0, 0, (args_1258302973).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var name_1258303003 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258303008 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258302973, 1));
        var word_1258303045 = translate_1493172260(4, HEX3Aanonymous_1258303011());
        switch (doc_1258296221.target) {
        case 0:
          if (isSome_1258294872(name_1258303003)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<details class=\"xd-spoiler\"><summary><strong>$1 ($2)</strong></summary>$3</details>"), [nimCopy(null, word_1258303045, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(name_1258303003), Temporary5)[0][Temporary5[1]], NTI33554439), nimCopy(null, content_1258303008, NTI33554439)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<details class=\"xd-spoiler\"><summary><strong>$1</strong></summary>$2</details>"), [nimCopy(null, word_1258303045, NTI33554439), nimCopy(null, content_1258303008, NTI33554439)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("spoilersolution"), nimCopy(null, word_1258303045, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("spoilersolution"), nimCopy(null, content_1258303008, NTI33554439)]);
          break;
        }
        result_1258302980 = nimCopy(result_1258302980, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258302980;

    }
    
function HEX3Aanonymous_1258303166(arg_1258303160) {
        var Temporary1;

      var result_1258303167 = ({rendered: false, str: []});

        var arg_1258303168 = nsuStrip(arg_1258303160, true, true, ConstSet240);
        switch (doc_1258296221.target) {
        case 0:
          HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands = nimCopy(HEX5BHEX5D_1258294877(doc_1258296221.stack, 1).commands, cssCommands_1258293431(doc_1258296221), NTI1476395041);
          incl_1258296248(doc_1258296221.addToHead, nsuFormatSingleElem(makeNimstrLit("<style>$1</style>"), expandStr_1442840595(doc_1258296221, arg_1258303168)));
          Temporary1 = [];
          break;
        default: 
          raiseException({message: makeNimstrLit("The style command can be used only in the HTML backend"), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          break;
        }
        result_1258303167 = nimCopy(result_1258303167, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258303167;

    }
    
function HEX3Aanonymous_1258303248(arg_1258303242) {
        var Temporary1;
        var Temporary3;
        var Temporary4;

      var result_1258303249 = ({rendered: false, str: []});

        var arg_1258303250 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258303242, true, true, ConstSet241));
++excHandler;
        Temporary3 = framePtr;
        try {
        Temporary1 = (Temporary4 = HEX5BHEX5D_1258303308(doc_1258296221.templateArgs, arg_1258303250), Temporary4)[0][Temporary4[1]];
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        framePtr = Temporary3;
        if (lastJSError && (isObj(lastJSError.m_type, NTI33555126))) {
        var fmtRes_1258303382 = [mnewString(0)];
        fmtRes_1258303382[0].push.apply(fmtRes_1258303382[0], makeNimstrLit("Template argument not found: "));;
        formatValue_1191182498(fmtRes_1258303382, 0, arg_1258303250, []);
        raiseException({message: nimCopy(null, fmtRes_1258303382[0], NTI33554439), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        framePtr = Temporary3;
        }
        result_1258303249 = nimCopy(result_1258303249, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258303249;

    }
    
function HEX3Aanonymous_1258303435(arg_1258303429) {
        var Temporary1;

      var result_1258303436 = ({rendered: false, str: []});

        var arg_1258303437 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258303429, true, true, ConstSet242));
        switch (doc_1258296221.target) {
        case 0:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("<dfn>$1</dfn>"), arg_1258303437);
          break;
        case 1:
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("\\textit{$1}"), arg_1258303437);
          break;
        }
        result_1258303436 = nimCopy(result_1258303436, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258303436;

    }
    
function HEX3Aanonymous_1258303496(arg_1258303489) {
          var Temporary1;
        var Temporary2;
        
function HEX3Aanonymous_1258303528() {
                    var Temporary4;

          var result_1258303529 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym468_1258303538 = 0;
              var colontmp__486542316 = 0;
              colontmp__486542316 = subInt((doc_1258296221.stack).length, 1);
              var res_486542317 = colontmp__486542316;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486542317)) break Label3;
                    iHEX60gensym468_1258303538 = res_486542317;
                    var frameHEX60gensym468_1258303539 = nimCopy(null, doc_1258296221.stack[chckIndx(iHEX60gensym468_1258303538, 0, (doc_1258296221.stack).length - 1)], NTI1476395015);
                    if (isSome_1258299841(frameHEX60gensym468_1258303539.lang)) {
                    result_1258303529 = (Temporary4 = get_1258299858(frameHEX60gensym468_1258303539.lang), Temporary4)[0][Temporary4[1]];
                    break BeforeRet;
                    }
                    
                    res_486542317 = subInt(res_486542317, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_1258303529;

        }
        var Temporary3;
          var Temporary4;
          var Temporary5;

      var result_1258303497 = ({rendered: false, str: []});

        var args_1258303490 = parseXidocArguments_1459622458(arg_1258303489);
          if (((args_1258303490).length < 1)) Temporary1 = true; else {            Temporary1 = (2 < (args_1258303490).length);          }        if (Temporary1) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [makeNimstrLit("theorem"), makeNimstrLit("1"), makeNimstrLit("2"), HEX24_335544323((args_1258303490).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        if ((0 < subInt((args_1258303490).length, 1))) {
        Temporary2 = some_1258294850(renderStr_1442840879(doc_1258296221, args_1258303490[chckIndx(0, 0, (args_1258303490).length - 1)]));
        }
        else {
        Temporary2 = none_1258294859();
        }
        
        var thName_1258303520 = nimCopy(null, Temporary2, NTI1258293149);
        var content_1258303525 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258303490, 1));
        var wordHEX60gensym458_1258303562 = translate_1493172260(5, HEX3Aanonymous_1258303528());
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("<style>.xd-theorem-like{margin:1em 0}.xd-theorem-like>p{margin:0.5em 0}</style>"));
          if (isSome_1258294872(thName_1258303520)) {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2 ($3).</strong> $4</div>"), [makeNimstrLit("theorem"), nimCopy(null, wordHEX60gensym458_1258303562, NTI33554439), nimCopy(null, (Temporary5 = get_1258294907(thName_1258303520), Temporary5)[0][Temporary5[1]], NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258303525)]);
          }
          else {
          Temporary4 = nsuFormatOpenArray(makeNimstrLit("<div class=\"xd-theorem-like xd-$1\"><strong>$2.</strong> $3</div>"), [makeNimstrLit("theorem"), nimCopy(null, wordHEX60gensym458_1258303562, NTI33554439), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258303525)]);
          }
          
          Temporary3 = Temporary4;
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
          incl_1258296248(doc_1258296221.addToHead, nsuFormatOpenArray(makeNimstrLit("\\newtheorem{$1}{$2}[section]"), [makeNimstrLit("theorem"), nimCopy(null, wordHEX60gensym458_1258303562, NTI33554439)]));
          Temporary3 = nsuFormatOpenArray(makeNimstrLit("\\begin{$1}$2\x1Bnd{$1}"), [makeNimstrLit("theorem"), nsuFormatSingleElem(makeNimstrLit("$1"), content_1258303525)]);
          break;
        }
        result_1258303497 = nimCopy(result_1258303497, {rendered: true, str: nimCopy(null, Temporary3, NTI33554439)}, NTI1476395013);

      return result_1258303497;

    }
    
function HEX3Aanonymous_1258303706(arg_1258303700) {
        var Temporary1;

      var result_1258303707 = ({rendered: false, str: []});

        var arg_1258303708 = renderStr_1442840879(doc_1258296221, nsuStrip(arg_1258303700, true, true, ConstSet243));
        switch (doc_1258296221.target) {
        case 0:
          incl_1258296248(doc_1258296221.addToHead, nsuFormatSingleElem(makeNimstrLit("<title>$1</title>"), arg_1258303708));
          Temporary1 = nsuFormatSingleElem(makeNimstrLit("<h1>$1</h1>"), arg_1258303708);
          break;
        case 1:
          incl_1258296248(doc_1258296221.addToHead, nsuFormatSingleElem(makeNimstrLit("\\title{$1}"), arg_1258303708));
          Temporary1 = makeNimstrLit("\\maketitle");
          break;
        }
        result_1258303707 = nimCopy(result_1258303707, {rendered: true, str: nimCopy(null, Temporary1, NTI33554439)}, NTI1476395013);

      return result_1258303707;

    }

function generateHtmlTag_1258303801(tag_1258303802, args_1258303803, body_1258303804, paired_1258303805) {
    var Temporary5;

  var result_1258303806 = [];

    var attrs_1258303814 = newSeq_452985301(0);
    var classes_1258303822 = newSeq_452985301(0);
    Label1: do {
      var arg_1258303826 = null;
      var arg_1258303826_Idx = 0;
      var i_486542320 = 0;
      var L_486542321 = (args_1258303803).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486542320 < L_486542321)) break Label3;
            arg_1258303826 = args_1258303803; arg_1258303826_Idx = chckIndx(i_486542320, 0, (args_1258303803).length - 1);
            if (nsuStartsWith(arg_1258303826[arg_1258303826_Idx], makeNimstrLit("#"))) {
            attrs_1258303814.push(nsuFormatSingleElem(makeNimstrLit("id=\"$1\""), HEX5BHEX5D_939527322(arg_1258303826[arg_1258303826_Idx], HEX2EHEX2E_872415312(1, 1))));;
            }
            else {
            if (nsuStartsWith(arg_1258303826[arg_1258303826_Idx], makeNimstrLit("."))) {
            classes_1258303822.push(HEX5BHEX5D_939527322(arg_1258303826[arg_1258303826_Idx], HEX2EHEX2E_872415312(1, 1)));;
            }
            else {
              var Temporary4 = nimCopy(null, arg_1258303826[arg_1258303826_Idx], NTI33554439);
            attrs_1258303814.push(Temporary4);;
            }
            }
            i_486542320 = addInt(i_486542320, 1);
            if (!(((args_1258303803).length == L_486542321))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    if (!(((classes_1258303822).length == 0))) {
    attrs_1258303814.push(nsuFormatSingleElem(makeNimstrLit("class=\"$1\""), nsuJoinSep(classes_1258303822, makeNimstrLit(" "))));;
    }
    
    if (paired_1258303805) {
    Temporary5 = nsuFormatOpenArray(makeNimstrLit("<$1>$2</$3>"), [nsuJoinSep(HEX26_1258303886([nimCopy(null, tag_1258303802, NTI33554439)], attrs_1258303814), makeNimstrLit(" ")), nimCopy(null, body_1258303804, NTI33554439), nimCopy(null, tag_1258303802, NTI33554439)]);
    }
    else {
    Temporary5 = nsuFormatOpenArray(makeNimstrLit("<$1 />"), [nsuJoinSep(HEX26_1258303886([nimCopy(null, tag_1258303802, NTI33554439)], attrs_1258303814), makeNimstrLit(" "))]);
    }
    
    result_1258303806 = nimCopy(null, Temporary5, NTI33554439);

  return result_1258303806;

}
      
function HEX3Aanonymous_1258303935(arg_1258303928) {
        var result_1258303936 = ({rendered: false, str: []});

          var args_1258303929 = parseXidocArguments_1459622458(arg_1258303928);
          if (((args_1258303929).length < 2)) {
          raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [makeNimstrLit("<>"), makeNimstrLit("2"), HEX24_335544323((args_1258303929).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
          var tag_1258303943 = expandStr_1442840595(doc_1258296221, args_1258303929[chckIndx(0, 0, (args_1258303929).length - 1)]);
          Label1: do {
            var HEX3Atmp_1258303978 = HEX5BHEX5D_1258300797(args_1258303929, HEX2EHEX2E_872415312(1, 2));
            var iHEX60gensym485_1258303981 = 0;
            var resultHEX60gensym485_1258303988 = newSeq_452985301(chckRange((HEX3Atmp_1258303978).length, 0, 2147483647));
            Label2: do {
              var it_1258303992 = null;
              var it_1258303992_Idx = 0;
              var i_486542054 = 0;
              var L_486542055 = (HEX3Atmp_1258303978).length;
              Label3: do {
                  Label4: while (true) {
                  if (!(i_486542054 < L_486542055)) break Label4;
                    it_1258303992 = HEX3Atmp_1258303978; it_1258303992_Idx = chckIndx(i_486542054, 0, (HEX3Atmp_1258303978).length - 1);
                    resultHEX60gensym485_1258303988[chckIndx(iHEX60gensym485_1258303981, 0, (resultHEX60gensym485_1258303988).length - 1)] = nimCopy(null, expandStr_1442840595(doc_1258296221, it_1258303992[it_1258303992_Idx]), NTI33554439);
                    iHEX60gensym485_1258303981 = addInt(iHEX60gensym485_1258303981, 1);
                    i_486542054 = addInt(i_486542054, 1);
                    if (!(((HEX3Atmp_1258303978).length == L_486542055))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
          } while (false);
          var args_1258303997 = nimCopy(null, resultHEX60gensym485_1258303988, NTI452985127);
          var body_1258304002 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258303929, 1));
          result_1258303936 = nimCopy(result_1258303936, {rendered: true, str: nimCopy(null, generateHtmlTag_1258303801(tag_1258303943, args_1258303997, body_1258304002, true), NTI33554439)}, NTI1476395013);

        return result_1258303936;

      }
              
function HEX3Aanonymous_1258304053(tag_1258304054) {
                  tag_1258304054 = nimCopy(null, tag_1258304054, NTI33554439);
                  
function HEX3Aanonymous_1258304135(arg_1258304128) {
                    var result_1258304136 = ({rendered: false, str: []});

                      var args_1258304129 = parseXidocArguments_1459622458(arg_1258304128);
                      if (((args_1258304129).length < 0)) {
                      raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [nsuFormatSingleElem(makeNimstrLit("<$1>"), tag_1258304054), makeNimstrLit("0"), HEX24_335544323((args_1258304129).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                      }
                      
                      Label1: do {
                        var HEX3Atmp_1258304177 = HEX5BHEX5D_1258300797(args_1258304129, HEX2EHEX2E_872415312(0, 1));
                        var iHEX60gensym497_1258304180 = 0;
                        var resultHEX60gensym497_1258304187 = newSeq_452985301(chckRange((HEX3Atmp_1258304177).length, 0, 2147483647));
                        Label2: do {
                          var it_1258304191 = null;
                          var it_1258304191_Idx = 0;
                          var i_486542060 = 0;
                          var L_486542061 = (HEX3Atmp_1258304177).length;
                          Label3: do {
                              Label4: while (true) {
                              if (!(i_486542060 < L_486542061)) break Label4;
                                it_1258304191 = HEX3Atmp_1258304177; it_1258304191_Idx = chckIndx(i_486542060, 0, (HEX3Atmp_1258304177).length - 1);
                                resultHEX60gensym497_1258304187[chckIndx(iHEX60gensym497_1258304180, 0, (resultHEX60gensym497_1258304187).length - 1)] = nimCopy(null, expandStr_1442840595(doc_1258296221, it_1258304191[it_1258304191_Idx]), NTI33554439);
                                iHEX60gensym497_1258304180 = addInt(iHEX60gensym497_1258304180, 1);
                                i_486542060 = addInt(i_486542060, 1);
                                if (!(((HEX3Atmp_1258304177).length == L_486542061))) {
                                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          } while (false);
                        } while (false);
                      } while (false);
                      var args_1258304196 = nimCopy(null, resultHEX60gensym497_1258304187, NTI452985127);
                      result_1258304136 = nimCopy(result_1258304136, {rendered: true, str: nimCopy(null, generateHtmlTag_1258303801(tag_1258304054, args_1258304196, [], false), NTI33554439)}, NTI1476395013);

                    return result_1258304136;

                  }
                    
function HEX3Aanonymous_1258304250(arg_1258304243) {
                      var result_1258304251 = ({rendered: false, str: []});

                        var args_1258304244 = parseXidocArguments_1459622458(arg_1258304243);
                        if (((args_1258304244).length < 1)) {
                        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [nsuFormatSingleElem(makeNimstrLit("<$1>"), tag_1258304054), makeNimstrLit("1"), HEX24_335544323((args_1258304244).length)]), m_type: NTI1426063364, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                        }
                        
                        Label1: do {
                          var HEX3Atmp_1258304292 = HEX5BHEX5D_1258300797(args_1258304244, HEX2EHEX2E_872415312(0, 2));
                          var iHEX60gensym508_1258304295 = 0;
                          var resultHEX60gensym508_1258304302 = newSeq_452985301(chckRange((HEX3Atmp_1258304292).length, 0, 2147483647));
                          Label2: do {
                            var it_1258304306 = null;
                            var it_1258304306_Idx = 0;
                            var i_486542065 = 0;
                            var L_486542066 = (HEX3Atmp_1258304292).length;
                            Label3: do {
                                Label4: while (true) {
                                if (!(i_486542065 < L_486542066)) break Label4;
                                  it_1258304306 = HEX3Atmp_1258304292; it_1258304306_Idx = chckIndx(i_486542065, 0, (HEX3Atmp_1258304292).length - 1);
                                  resultHEX60gensym508_1258304302[chckIndx(iHEX60gensym508_1258304295, 0, (resultHEX60gensym508_1258304302).length - 1)] = nimCopy(null, expandStr_1442840595(doc_1258296221, it_1258304306[it_1258304306_Idx]), NTI33554439);
                                  iHEX60gensym508_1258304295 = addInt(iHEX60gensym508_1258304295, 1);
                                  i_486542065 = addInt(i_486542065, 1);
                                  if (!(((HEX3Atmp_1258304292).length == L_486542066))) {
                                  failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            } while (false);
                          } while (false);
                        } while (false);
                        var args_1258304311 = nimCopy(null, resultHEX60gensym508_1258304302, NTI452985127);
                        var body_1258304316 = renderStr_1442840879(doc_1258296221, HEX5BHEX5D_1258293496(args_1258304244, 1));
                        result_1258304251 = nimCopy(result_1258304251, {rendered: true, str: nimCopy(null, generateHtmlTag_1258303801(tag_1258304054, args_1258304311, body_1258304316, true), NTI33554439)}, NTI1476395013);

                      return result_1258304251;

                    }

                  if (contains_1258304108(htmlUnpairedTags_1258292683, tag_1258304054)) {
                  HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], nsuFormatSingleElem(makeNimstrLit("<$1>"), tag_1258304054), HEX3Aanonymous_1258304135);
                  }
                  else {
                  HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], nsuFormatSingleElem(makeNimstrLit("<$1>"), tag_1258304054), HEX3Aanonymous_1258304250);
                  }
                  

                
              }

  var result_1258296224 = ({data: [], counter: 0});

    var commands_1258296227 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("#"), HEX3Aanonymous_1258297819);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], [], HEX3Aanonymous_1258297874);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit(";"), HEX3Aanonymous_1258297929);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("()"), HEX3Aanonymous_1258297983);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("("), HEX3Aanonymous_1258298038);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit(")"), HEX3Aanonymous_1258298092);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("--"), HEX3Aanonymous_1258298146);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("---"), HEX3Aanonymous_1258298200);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("$"), HEX3Aanonymous_1258298254);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("$$"), HEX3Aanonymous_1258298313);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("$$&"), HEX3Aanonymous_1258298395);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("LaTeX"), HEX3Aanonymous_1258298477);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("add-to-head"), HEX3Aanonymous_1258298531);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("arg"), HEX3Aanonymous_1258298609);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("arg-expand"), HEX3Aanonymous_1258298793);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("arg-raw"), HEX3Aanonymous_1258298969);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("arg-raw-escape"), HEX3Aanonymous_1258299145);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("bf"), HEX3Aanonymous_1258299321);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("color"), HEX3Aanonymous_1258299377);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("def"), HEX3Aanonymous_1258299474);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("dfn"), HEX3Aanonymous_1258299793);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("example"), HEX3Aanonymous_1258300031);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("exercise"), HEX3Aanonymous_1258300247);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("expand"), HEX3Aanonymous_1258300457);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("html-add-attrs"), HEX3Aanonymous_1258300513);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("if-html"), HEX3Aanonymous_1258300659);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("if-latex"), HEX3Aanonymous_1258300719);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("include"), HEX3Aanonymous_1258300779);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("inject"), HEX3Aanonymous_1258301062);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("it"), HEX3Aanonymous_1258301132);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("lang"), HEX3Aanonymous_1258301188);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("link"), HEX3Aanonymous_1258301270);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("list"), HEX3Aanonymous_1258301377);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("ms"), HEX3Aanonymous_1258301565);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("p"), HEX3Aanonymous_1258301620);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("pass"), HEX3Aanonymous_1258301675);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("pass-raw"), HEX3Aanonymous_1258301730);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("proof"), HEX3Aanonymous_1258301791);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("props"), HEX3Aanonymous_1258302002);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("raw"), HEX3Aanonymous_1258302190);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("render"), HEX3Aanonymous_1258302245);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("section"), HEX3Aanonymous_1258302301);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("set-doc-lang"), HEX3Aanonymous_1258302465);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("set-math-renderer"), HEX3Aanonymous_1258302523);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("set-title"), HEX3Aanonymous_1258302587);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("solution"), HEX3Aanonymous_1258302694);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("spoiler"), HEX3Aanonymous_1258302905);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("spoiler-solution"), HEX3Aanonymous_1258302979);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("style"), HEX3Aanonymous_1258303166);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("template-arg"), HEX3Aanonymous_1258303248);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("term"), HEX3Aanonymous_1258303435);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("theorem"), HEX3Aanonymous_1258303496);
    HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("title"), HEX3Aanonymous_1258303706);
    switch (doc_1258296221.target) {
    case 0:
      HEX5BHEX5DHEX3D_1258293550(commands_1258296227[0], makeNimstrLit("<>"), HEX3Aanonymous_1258303935);
      Label1: do {
        var tag_1258304052 = null;
        var tag_1258304052_Idx = 0;
        var i_486542068 = 0;
        var L_486542069 = 124;
        Label2: do {
            Label3: while (true) {
            if (!(i_486542068 < L_486542069)) break Label3;
              tag_1258304052 = htmlTags_1258291227; tag_1258304052_Idx = chckIndx(i_486542068, 0, (htmlTags_1258291227).length - 1);
              HEX3Aanonymous_1258304053(tag_1258304052[tag_1258304052_Idx]);
              i_486542068 = addInt(i_486542068, 1);
              if (!((124 == L_486542069))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      break;
    default: 
      break;
    }
    result_1258296224 = nimCopy(result_1258296224, commands_1258296227[0], NTI1476395041);

  return result_1258296224;

}

function newDocument(body_486540817, target_486540818, snippet_486540819, verbose_486540820) {
  var result_486540821 = null;

    result_486540821 = {path: [], body: cstrToNimstr(body_486540817), target: target_486540818, snippet: snippet_486540819, verbose: verbose_486540820, stack: [{cmdName: makeNimstrLit("[top]"), args: ({data: [], counter: 0}), cmdArg: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false})}], addToHead: ({data: [], counter: 0, first: 0, last: 0}), mathRenderer: 0, templateArgs: ({data: [], counter: 0})};
    result_486540821.stack[chckIndx(0, 0, (result_486540821.stack).length - 1)].commands = nimCopy(result_486540821.stack[chckIndx(0, 0, (result_486540821.stack).length - 1)].commands, defaultCommands_1258296220(result_486540821), NTI1476395041);

  return result_486540821;

}

function hasJsBigInt_805306411() {
  var result_805306412 = false;

    result_805306412 = typeof BigInt != 'undefined'

  return result_805306412;

}

function hiXorLoJs_1124073557(a_1124073558, b_1124073559) {
  var result_1124073560 = 0n;

    var prod_1124073561 = (a_1124073558 * b_1124073559);
    var mask_1124073562 = BigInt("0xffffffffffffffff");
    result_1124073560 = ((prod_1124073561 >> BigInt("64")) ^ (prod_1124073561 & mask_1124073562));

  return result_1124073560;

}

function hashWangYi1_1124073650(x_1124073652) {
  var result_1124073653 = 0;

    if (hasJsBigInt_805306411()) {
    var P0HEX60gensym6_1124073672 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1124073673 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1124073674 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1124073675 = hiXorLoJs_1124073557(hiXorLoJs_1124073557(P0HEX60gensym6_1124073672, (BigInt(x_1124073652) ^ P1HEX60gensym6_1124073673)), P58HEX60gensym6_1124073674);
    result_1124073653 = Number((() => { const i = resHEX60gensym6_1124073675, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1124073653 = (x_1124073652 & 4294967295);
    }
    

  return result_1124073653;

}

function hash_486539442(x_486539444) {
  var result_486539445 = 0;

    result_486539445 = hashWangYi1_1124073650(x_486539444);

  return result_486539445;

}

function rawGet_486539435(t_486539438, key_486539439, hc_486539440, hc_486539440_Idx) {
            var Temporary3;

  var result_486539441 = 0;

  BeforeRet: do {
    hc_486539440[hc_486539440_Idx] = hash_486539442(key_486539439);
    if ((hc_486539440[hc_486539440_Idx] == 0)) {
    hc_486539440[hc_486539440_Idx] = 314159265;
    }
    
    if (((t_486539438.data).length == 0)) {
    result_486539441 = -1;
    break BeforeRet;
    }
    
    var h_486539514 = (hc_486539440[hc_486539440_Idx] & (t_486539438.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1224736799(t_486539438.data[chckIndx(h_486539514, 0, (t_486539438.data).length - 1)].Field0)) break Label2;
            if (!(t_486539438.data[chckIndx(h_486539514, 0, (t_486539438.data).length - 1)].Field0 == hc_486539440[hc_486539440_Idx])) Temporary3 = false; else {              Temporary3 = (t_486539438.data[chckIndx(h_486539514, 0, (t_486539438.data).length - 1)].Field1 == key_486539439);            }          if (Temporary3) {
          result_486539441 = h_486539514;
          break BeforeRet;
          }
          
          h_486539514 = nextTry_1224736802(h_486539514, (t_486539438.data).length - 1);
        }
    } while (false);
    result_486539441 = subInt(-1, h_486539514);
  } while (false);

  return result_486539441;

}

function raiseKeyError_486540958(key_486540960) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(reprEnum(key_486540960, NTI1476395011) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_486540887(t_486540890, key_486540891) {
  var result_486540892 = [];

    var hcHEX60gensym20_486540893 = [0];
    var indexHEX60gensym20_486540900 = rawGet_486539435(t_486540890, key_486540891, hcHEX60gensym20_486540893, 0);
    if ((0 <= indexHEX60gensym20_486540900)) {
    result_486540892 = nimCopy(null, t_486540890.data[chckIndx(indexHEX60gensym20_486540900, 0, (t_486540890.data).length - 1)].Field2, NTI33554439);
    }
    else {
    raiseKeyError_486540958(key_486540891);
    }
    

  return result_486540892;

}

function len_486541554(s_486541556) {
  var result_486541557 = 0;

    result_486541557 = s_486541556.counter;

  return result_486541557;

}

function render(doc_486540827) {
    var Temporary1;

  var result_486540828 = null;

    var rendered_486540829 = renderStr_1442840879(doc_486540827, doc_486540827.body);
    if (doc_486540827.snippet) {
    Temporary1 = rendered_486540829;
    }
    else {
      Label2: do {
        var HEX3Atmp_486541918 = nimCopy(null, doc_486540827.addToHead, NTI1476395068);
        var iHEX60gensym23_486541921 = 0;
        var resultHEX60gensym23_486541983 = newSeq_452985301(chckRange(len_486541554(HEX3Atmp_486541918), 0, 2147483647));
        Label3: do {
          var itHEX60gensym23_486541987 = [];
          var length_486542334 = len_486541554(HEX3Atmp_486541918);
          if ((0 < (HEX3Atmp_486541918.data).length)) {
          var h_486542335 = HEX3Atmp_486541918.first;
          var idx_486542336 = 0;
          Label4: do {
              Label5: while (true) {
              if (!(0 <= h_486542335)) break Label5;
                var nxt_486542338 = HEX3Atmp_486541918.data[chckIndx(h_486542335, 0, (HEX3Atmp_486541918.data).length - 1)].Field1;
                if (isFilled_1107296294(HEX3Atmp_486541918.data[chckIndx(h_486542335, 0, (HEX3Atmp_486541918.data).length - 1)].Field0)) {
                itHEX60gensym23_486541987 = HEX3Atmp_486541918.data[chckIndx(h_486542335, 0, (HEX3Atmp_486541918.data).length - 1)].Field2;
                resultHEX60gensym23_486541983[chckIndx(iHEX60gensym23_486541921, 0, (resultHEX60gensym23_486541983).length - 1)] = nimCopy(null, itHEX60gensym23_486541987, NTI33554439);
                iHEX60gensym23_486541921 = addInt(iHEX60gensym23_486541921, 1);
                if (!((len_486541554(HEX3Atmp_486541918) == length_486542334))) {
                failedAssertImpl_218103864(makeNimstrLit("sets.nim(905, 11) `len(s) == length` the length of the OrderedSet changed while iterating over it"));
                }
                
                idx_486542336 = addInt(idx_486542336, 1);
                }
                
                h_486542335 = nxt_486542338;
              }
          } while (false);
          }
          
        } while (false);
      } while (false);
    Temporary1 = nsuFormatOpenArray(HEX5BHEX5D_486540887(templates_486540815, doc_486540827.target), [nsuJoinSep(resultHEX60gensym23_486541983, []), nimCopy(null, rendered_486540829, NTI33554439)]);
    }
    
    var resulrStr_486541992 = nimCopy(null, Temporary1, NTI33554439);
    result_486540828 = toJSStr(resulrStr_486541992);

  return result_486540828;

}
export {newDocument, render};
