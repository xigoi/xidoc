/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1157628409 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207959555 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207959556 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959557 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207959558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207959559 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182344 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182342 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182339 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736773 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1157627929 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627928 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627927 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627926 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627924 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627919 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627918 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627917 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627916 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627915 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627914 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157627913 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736772 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405126 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1174405125 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1174405124 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1174405127 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182340 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1593835645 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835642 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835639 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1543503878 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1476406854 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577383 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577361 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2667577537 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577388 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577368 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667577378 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2667577376 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577419 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2667577418 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2667577417 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577382 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2667577405 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577372 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667577362 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2667577393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577369 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667577397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577370 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667577401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577371 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667577409 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577373 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667577377 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667577658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577413 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2667577374 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2667578364 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555150 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2667578562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1778384983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1778384912 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162119 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162118 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162115 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1795162116 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1879048199 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476401130 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476401005 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI754975093 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248147141 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476398479 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1677721783 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI754975255 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1476396269 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2466250794 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI738197634 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2466250807 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415928872 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415927053 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415926147 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415925820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI754974724 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2466250797 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2449473639 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250793 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2466250795 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028005 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2466250798 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2415919281 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919292 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919290 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835676 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835673 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919272 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2466250799 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2449473616 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473615 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473619 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473611 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1593835523 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1493178274 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1493178470 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493177980 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1493178276 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493177983 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1493177977 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1493177978 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1493177979 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493178275 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1493172246 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172244 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1493172239 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1493172230 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1493172236 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1493172231 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493172233 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1493172237 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1493172238 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1493172232 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493172814 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493172229 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1358954516 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2197815641 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1660944629 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835571 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835570 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835530 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1593835625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1610612739 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1593835599 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835684 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1593835568 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835565 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835562 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068419 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1593835587 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835584 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835581 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835535 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI754976073 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1677721603 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1677721604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1543503877 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2197815332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835526 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1593835527 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1560281092 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1560281091 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835541 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1593835546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835524 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1593835525 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815317 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810290 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI754975239 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298488222 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1593835612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1040187408 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2298486900 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298488143 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298487574 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298487485 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298486850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298486723 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298486272 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298486621 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298485302 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315256334 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315256333 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306374 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2298485936 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI754975126 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI436207866 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2298485895 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298478599 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298485332 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298485326 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298485094 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484891 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298485005 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315256714 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315256713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2298484276 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483645 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483933 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483927 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483746 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483707 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483222 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483467 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483461 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483421 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483357 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483272 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483233 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483887 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483831 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484139 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484133 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298484360 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484252 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484407 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483184 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483190 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298484504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298484582 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482948 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482993 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298483082 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810412 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482113 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482235 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482174 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482301 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482362 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315256373 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255811 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2315256501 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2315255812 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2315256499 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2298482883 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298482005 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481709 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481081 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481369 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481363 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481182 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481143 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480661 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480911 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480905 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480843 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480787 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480672 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481323 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481267 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481575 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481569 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481130 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298481136 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298481793 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033238 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480612 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298481869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480603 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033027 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555156 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555151 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI2332033031 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033085 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479887 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480175 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480169 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479988 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479949 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479717 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479711 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479659 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1996488834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479506 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480129 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480073 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480381 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298480375 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479936 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479942 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2298480569 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479446 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2298479452 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871232 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315257676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810669 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348811397 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI822083653 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810246 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810726 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078607 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078613 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348811335 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI2348810488 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348811301 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810272 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810258 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2348810372 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI2348810258 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2348810258, name: "success", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2348810258, name: "failure", len: 0, sons: null}}};
NTI2348810258.node = NNI2348810258;
NTI2348810272.base = NTI33554449;
var NNI2348810372 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI33554449, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2348810372.node = NNI2348810372;
NTI2348811301.base = NTI33554449;
var NNI2348810488 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI33554448, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2348810488.node = NNI2348810488;
NTI2348811335.base = NTI33554449;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI973078613 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078607, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI973078613.node = NNI973078613;
NTI2348810726.base = NTI33554449;
var NNI2348810246 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2348810246.node = NNI2348810246;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI822083653 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI822083653.node = NNI822083653;
NTI2348811397.base = NTI33554449;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;
NTI2348810669.base = NTI33554449;
var NNI2315257676 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554448, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554448, name: "b", sons: null}]};
NTI2315257676.node = NNI2315257676;
NTI536871232.base = NTI33554449;
NTI2298479446.base = NTI33554449;
var NNI2298479452 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2298479446, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298479452.node = NNI2298479452;
NTI2298480569.base = NTI33554449;
NTI2298479936.base = NTI2298479446;
var NNI2298479942 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2298479936, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298479942.node = NNI2298479942;
NTI2298480375.base = NTI2298479446;
NTI2298480381.base = NTI33554449;
NTI2298480073.base = NTI2298479446;
NTI2298480129.base = NTI33554449;
NTI2298479506.base = NTI33554449;
NTI2298479536.base = NTI33554449;
NTI1996488834.base = NTI33554449;
NTI2298479659.base = NTI33554449;
NTI2298479711.base = NTI33554449;
NTI2298479717.base = NTI33554449;
NTI2298479495.base = NTI33554449;
NTI2298479949.base = NTI2298479446;
NTI2298479988.base = NTI33554449;
NTI2298480169.base = NTI2298479446;
NTI2298480175.base = NTI33554449;
NTI2298479887.base = NTI33554449;
NTI2332033085.base = NTI33554449;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI2332033031.base = NTI33554449;
NTI33555151.base = NTI33555156;
var NNI2332033027 = {kind: 2, offset: 0, typ: null, name: null, len: 9, sons: {"0": {kind: 1, offset: 0, typ: NTI2332033027, name: "trfNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2332033027, name: "trfAlnum", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2332033027, name: "trfOperator", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2332033027, name: "trfBigOperator", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2332033027, name: "trfWord", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2332033027, name: "trfFraction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2332033027, name: "trfSub", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2332033027, name: "trfSup", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2332033027, name: "trfPunctuation", len: 0, sons: null}}};
NTI2332033027.node = NNI2332033027;
var NNI2332033028 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "rows", len: 0, typ: NTI2332033031, name: "rows", sons: null}, 
{kind: 1, offset: "baseline", len: 0, typ: NTI33554435, name: "baseline", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33555151, name: "width", sons: null}, 
{kind: 1, offset: "flag", len: 0, typ: NTI2332033027, name: "flag", sons: null}]};
NTI2332033028.node = NNI2332033028;
var NNI2298480603 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2332033028, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298480603.node = NNI2298480603;
NTI2298481869.base = NTI33554449;
NTI2298480612.base = NTI2332033028;
var NNI2298480618 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2298480612, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298480618.node = NNI2298480618;
NTI2332033238.base = NTI2332033028;
NTI2298481793.base = NTI33554449;
NTI2298481130.base = NTI2298480612;
var NNI2298481136 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2298481130, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298481136.node = NNI2298481136;
NTI2298481569.base = NTI2298480612;
NTI2298481575.base = NTI33554449;
NTI2298481267.base = NTI2298480612;
NTI2298481323.base = NTI33554449;
NTI2298480672.base = NTI2332033028;
NTI2298480702.base = NTI33554449;
NTI2298480787.base = NTI2332033028;
NTI2298480843.base = NTI33554449;
NTI2298480905.base = NTI2332033028;
NTI2298480911.base = NTI33554449;
NTI2298480661.base = NTI2332033028;
NTI2298481143.base = NTI2298480612;
NTI2298481182.base = NTI33554449;
NTI2298481363.base = NTI2298480612;
NTI2298481369.base = NTI33554449;
NTI2298481081.base = NTI33554449;
NTI2298481709.base = NTI2332033028;
NTI2298482005.base = NTI33554449;
NTI2298482883.base = NTI33554449;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI2315255812 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2315255812, name: "ltLatin", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2315255812, name: "ltGreek", len: 0, sons: null}}};
NTI2315255812.node = NNI2315255812;
var NNI2315256499 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2315255812, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315256501, name: "Field1", sons: null}]};
NTI2315256499.node = NNI2315256499;
var NNI2315255811 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI2315255811, name: "fNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2315255811, name: "fItalic", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2315255811, name: "fBold", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2315255811, name: "fScript", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2315255811, name: "fFraktur", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2315255811, name: "fDoubleStruck", len: 0, sons: null}}};
NTI2315255811.node = NNI2315255811;
var NNI2315256373 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255811, name: "Field1", sons: null}]};
NTI2315256373.node = NNI2315256373;
NTI2298482362.base = NTI33554449;
NTI2298482301.base = NTI33554449;
NTI2298482174.base = NTI33554449;
NTI2298482235.base = NTI33554449;
NTI2298482113.base = NTI33554449;
NTI2348810412.base = NTI33554449;
NTI2348810519.base = NTI33554449;
var NNI2315255819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033028, name: "Field1", sons: null}]};
NTI2315255819.node = NNI2315255819;
NTI2298483082.base = NTI33554449;
NTI2298482993.base = NTI33554449;
NTI2298482948.base = NTI33554449;
NTI2298484582.base = NTI33554449;
NTI2298484504.base = NTI33554449;
NTI2298483184.base = NTI33554448;
var NNI2298483190 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2298483184, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298483190.node = NNI2298483190;
NTI2298484407.base = NTI33554449;
NTI2298484252.base = NTI33554448;
NTI2298484360.base = NTI33554449;
NTI2298483694.base = NTI2298483184;
var NNI2298483700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI2348810258, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI2298483694, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI2348810272, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554449, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554449, name: "fromInput", sons: null}]};
NTI2298483700.node = NNI2298483700;
NTI2298484133.base = NTI2298483184;
NTI2298484139.base = NTI33554449;
NTI2298483831.base = NTI2298483184;
NTI2298483887.base = NTI33554449;
NTI2298483233.base = NTI33554448;
NTI2298483272.base = NTI33554449;
NTI2298483357.base = NTI33554448;
NTI2298483421.base = NTI33554449;
NTI2298483461.base = NTI33554448;
NTI2298483467.base = NTI33554449;
NTI2298483222.base = NTI33554448;
NTI2298483707.base = NTI2298483184;
NTI2298483746.base = NTI33554449;
NTI2298483927.base = NTI2298483184;
NTI2298483933.base = NTI33554449;
NTI2298483645.base = NTI33554449;
NTI2298484276.base = NTI33554448;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2315255824 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033028, name: "Field1", sons: null}]};
NTI2315255824.node = NNI2315255824;
var NNI2315256714 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2315256714.node = NNI2315256714;
var NNI2315256713 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315256714, name: "Field1", sons: null}]};
NTI2315256713.node = NNI2315256713;
NTI2298485005.base = NTI33554449;
NTI2298484891.base = NTI33554449;
NTI2298484830.base = NTI33554449;
NTI2298485094.base = NTI33554449;
NTI2298485326.base = NTI2332033028;
NTI2298485332.base = NTI33554449;
var NNI2298478599 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI2298478599.node = NNI2298478599;
NTI2298485895.base = NTI436207866;
NTI754975126.base = NTI33554449;
NTI2298485936.base = NTI805306374;
var NNI2315256334 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554449, name: "Field3", sons: null}]};
NTI2315256334.node = NNI2315256334;
var NNI2315256333 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315256334, name: "Field1", sons: null}]};
NTI2315256333.node = NNI2315256333;
NTI2298485302.base = NTI2332033028;
NTI2298486621.base = NTI33554449;
NTI2298486272.base = NTI33554449;
NTI2298486723.base = NTI33554449;
NTI2298486850.base = NTI33554449;
NTI2298487485.base = NTI33554449;
NTI2298487574.base = NTI33554449;
var NNI2298488143 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2332033028, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033028, name: "Field1", sons: null}]};
NTI2298488143.node = NNI2298488143;
NTI2298486900.base = NTI1040187408;
var NNI1593835612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1593835612.node = NNI1593835612;
NTI2298488222.base = NTI33554449;
NTI754975239.base = NTI33554449;
var NNI2348810290 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2348810290.node = NNI2348810290;
var NNI1593835524 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1593835524, name: "String", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1593835524, name: "Markup", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1593835524, name: "List", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1593835524, name: "Optional", len: 0, sons: null}}};
NTI1593835524.node = NNI1593835524;
NTI1593835539.base = NTI1593835525;
NTI1593835541.base = NTI1593835525;
var NNI1593835546 = {kind: 1, offset: "val", len: 0, typ: NTI1593835541, name: "val", sons: null};
NTI1593835546.node = NNI1593835546;
var NNI1593835525 = {kind: 3, offset: "typ", len: 4, typ: NTI1593835524, name: "typ", sons: [[setConstr(0, 1), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "list", len: 0, typ: NTI1593835539, name: "list", sons: null}], 
[setConstr(3), {kind: 1, offset: "opt", len: 0, typ: NTI1593835546, name: "opt", sons: null}]]};
NTI1593835525.node = NNI1593835525;
NTI2197815317.base = NTI1593835525;
NTI1560281092.base = NTI33554449;
var NNI1560281091 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "body", len: 0, typ: NTI1560281092, name: "body", sons: null}, 
{kind: 1, offset: "slice", len: 0, typ: NTI822083653, name: "slice", sons: null}]};
NTI1560281091.node = NNI1560281091;
var NNI1593835526 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1593835526, name: "ptkOne", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1593835526, name: "ptkOptional", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1593835526, name: "ptkMultiple", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1593835526, name: "ptkRaw", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1593835526, name: "ptkLiteral", len: 0, sons: null}}};
NTI1593835526.node = NNI1593835526;
var NNI1593835527 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1593835526, name: "kind", sons: null}, 
{kind: 1, offset: "base", len: 0, typ: NTI1593835524, name: "base", sons: null}]};
NTI1593835527.node = NNI1593835527;
var NNI2197815332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2197815332.node = NNI2197815332;
var NNI1543503877 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1543503877.node = NNI1543503877;
NTI1543503877.base = NTI33555179;
var NNI1677721603 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1677721603, name: "xnkString", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1677721603, name: "xnkWhitespace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1677721603, name: "xnkCommand", len: 0, sons: null}}};
NTI1677721603.node = NNI1677721603;
var NNI1677721604 = {kind: 3, offset: "kind", len: 3, typ: NTI1677721603, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "str", len: 0, typ: NTI1560281091, name: "str", sons: null}], 
[setConstr(1), {kind: 1, offset: "newline", len: 0, typ: NTI33554466, name: "newline", sons: null}], 
[setConstr(2), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "whole", len: 0, typ: NTI1560281091, name: "whole", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1560281091, name: "name", sons: null}, 
{kind: 1, offset: "arg", len: 0, typ: NTI1560281091, name: "arg", sons: null}]}]]};
NTI1677721604.node = NNI1677721604;
NTI754976073.base = NTI33554448;
var NNI1593835587 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1275068419, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1560281091, name: "Field2", sons: null}]};
NTI1593835587.node = NNI1593835587;
NTI1593835584.base = NTI1593835587;
var NNI1593835581 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1593835584, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1593835581.node = NNI1593835581;
var NNI1593835568 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1275068419, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1593835684, name: "Field2", sons: null}]};
NTI1593835568.node = NNI1593835568;
NTI1593835565.base = NTI1593835568;
var NNI1593835562 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1593835565, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1593835562.node = NNI1593835562;
var NNI1610612739 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1610612739, name: "lEnglish", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1610612739, name: "lCzech", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1610612739, name: "lGerman", len: 0, sons: null}}};
NTI1610612739.node = NNI1610612739;
var NNI1593835599 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1610612739, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1593835599.node = NNI1593835599;
NTI1593835571.base = NTI1593835530;
var NNI1593835570 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1593835571, name: "children", sons: null}]};
NTI1593835570.node = NNI1593835570;
NTI1593835530.base = NTI1593835570;
var NNI1593835625 = {kind: 1, offset: "val", len: 0, typ: NTI1593835530, name: "val", sons: null};
NTI1593835625.node = NNI1593835625;
var NNI1593835535 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "args", len: 0, typ: NTI1593835581, name: "args", sons: null}, 
{kind: 1, offset: "cmd", len: 0, typ: NTI1560281091, name: "cmd", sons: null}, 
{kind: 1, offset: "cmdArg", len: 0, typ: NTI1560281091, name: "cmdArg", sons: null}, 
{kind: 1, offset: "cmdName", len: 0, typ: NTI1560281091, name: "cmdName", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1593835562, name: "commands", sons: null}, 
{kind: 1, offset: "lang", len: 0, typ: NTI1593835599, name: "lang", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI1593835612, name: "path", sons: null}, 
{kind: 1, offset: "tableOfContentsEntry", len: 0, typ: NTI1593835625, name: "tableOfContentsEntry", sons: null}]};
NTI1593835535.node = NNI1593835535;
var NNI1660944629 = {kind: 1, offset: "val", len: 0, typ: NTI1593835684, name: "val", sons: null};
NTI1660944629.node = NNI1660944629;
NTI2197815641.base = NTI1593835525;
var NNI1358954516 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1358954516.node = NNI1358954516;
NTI1358954516.base = NTI33555178;
var NNI1493172229 = {kind: 2, offset: 0, typ: null, name: null, len: 33, sons: {"0": {kind: 1, offset: 0, typ: NTI1493172229, name: "pkEmpty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493172229, name: "pkAny", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1493172229, name: "pkAnyRune", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1493172229, name: "pkNewLine", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1493172229, name: "pkLetter", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1493172229, name: "pkLower", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1493172229, name: "pkUpper", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1493172229, name: "pkTitle", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1493172229, name: "pkWhitespace", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1493172229, name: "pkTerminal", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1493172229, name: "pkTerminalIgnoreCase", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1493172229, name: "pkTerminalIgnoreStyle", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1493172229, name: "pkChar", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1493172229, name: "pkCharChoice", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1493172229, name: "pkNonTerminal", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1493172229, name: "pkSequence", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1493172229, name: "pkOrderedChoice", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1493172229, name: "pkGreedyRep", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1493172229, name: "pkGreedyRepChar", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1493172229, name: "pkGreedyRepSet", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1493172229, name: "pkGreedyAny", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1493172229, name: "pkOption", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1493172229, name: "pkAndPredicate", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1493172229, name: "pkNotPredicate", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1493172229, name: "pkCapture", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1493172229, name: "pkBackRef", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1493172229, name: "pkBackRefIgnoreCase", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1493172229, name: "pkBackRefIgnoreStyle", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1493172229, name: "pkSearch", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1493172229, name: "pkCapturedSearch", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1493172229, name: "pkRule", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1493172229, name: "pkList", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1493172229, name: "pkStartAnchor", len: 0, sons: null}}};
NTI1493172229.node = NNI1493172229;
var NNI1493172814 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1493172814.node = NNI1493172814;
NTI1493172237.base = NTI33554448;
NTI1493172238.base = NTI1493172237;
var NNI1493172230 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1493172230, name: "ntDeclared", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493172230, name: "ntUsed", len: 0, sons: null}}};
NTI1493172230.node = NNI1493172230;
NTI1493172236.base = NTI1493172230;
var NNI1493172231 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}, 
{kind: 1, offset: "col", len: 0, typ: NTI33554435, name: "col", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI1493172236, name: "flags", sons: null}, 
{kind: 1, offset: "rule", len: 0, typ: NTI1493172232, name: "rule", sons: null}]};
NTI1493172231.node = NNI1493172231;
NTI1493172233.base = NTI1493172231;
NTI1493172239.base = NTI1493172244;
NTI1493172246.base = NTI1493172232;
var NNI1493172232 = {kind: 3, offset: "kind", len: 33, typ: NTI1493172229, name: "kind", sons: [[setConstr([0, 8]), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(9, 10, 11), {kind: 1, offset: "term", len: 0, typ: NTI33554449, name: "term", sons: null}], 
[setConstr(12, 18), {kind: 1, offset: "ch", len: 0, typ: NTI33554448, name: "ch", sons: null}], 
[setConstr(13, 19), {kind: 1, offset: "charChoice", len: 0, typ: NTI1493172238, name: "charChoice", sons: null}], 
[setConstr(14), {kind: 1, offset: "nt", len: 0, typ: NTI1493172233, name: "nt", sons: null}], 
[setConstr([25, 27]), {kind: 1, offset: "index", len: 0, typ: NTI1493172239, name: "index", sons: null}], 
[setConstr(33), {kind: 1, offset: "sons", len: 0, typ: NTI1493172246, name: "sons", sons: null}]]};
NTI1493172232.node = NNI1493172232;
var NNI1493177978 = {kind: 2, offset: 0, typ: null, name: null, len: 26, sons: {"0": {kind: 1, offset: 0, typ: NTI1493177978, name: "tkInvalid", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493177978, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1493177978, name: "tkAny", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1493177978, name: "tkAnyRune", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1493177978, name: "tkIdentifier", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1493177978, name: "tkStringLit", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1493177978, name: "tkCharSet", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1493177978, name: "tkParLe", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1493177978, name: "tkParRi", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1493177978, name: "tkCurlyLe", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1493177978, name: "tkCurlyRi", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1493177978, name: "tkCurlyAt", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1493177978, name: "tkEmptyCurl", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1493177978, name: "tkArrow", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1493177978, name: "tkBar", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1493177978, name: "tkStar", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1493177978, name: "tkPlus", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1493177978, name: "tkAmp", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1493177978, name: "tkNot", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1493177978, name: "tkOption", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1493177978, name: "tkAt", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1493177978, name: "tkBuiltin", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1493177978, name: "tkEscaped", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1493177978, name: "tkBackref", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1493177978, name: "tkDollar", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1493177978, name: "tkHat", len: 0, sons: null}}};
NTI1493177978.node = NNI1493177978;
var NNI1493177977 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1493177977, name: "modNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493177977, name: "modVerbatim", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1493177977, name: "modIgnoreCase", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1493177977, name: "modIgnoreStyle", len: 0, sons: null}}};
NTI1493177977.node = NNI1493177977;
NTI1493177983.base = NTI33554448;
var NNI1493177979 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1493177978, name: "kind", sons: null}, 
{kind: 1, offset: "modifier", len: 0, typ: NTI1493177977, name: "modifier", sons: null}, 
{kind: 1, offset: "literal", len: 0, typ: NTI33554449, name: "literal", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI1493177983, name: "charset", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}]};
NTI1493177979.node = NNI1493177979;
NTI1493178276.base = NTI1493172233;
var NNI1493178275 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tok", len: 0, typ: NTI1493177979, name: "tok", sons: null}, 
{kind: 1, offset: "nonterms", len: 0, typ: NTI1493178276, name: "nonterms", sons: null}, 
{kind: 1, offset: "modifier", len: 0, typ: NTI1493177977, name: "modifier", sons: null}, 
{kind: 1, offset: "captures", len: 0, typ: NTI33554435, name: "captures", sons: null}, 
{kind: 1, offset: "identIsVerbatim", len: 0, typ: NTI33554466, name: "identIsVerbatim", sons: null}, 
{kind: 1, offset: "skip", len: 0, typ: NTI1493172232, name: "skip", sons: null}]};
NTI1493178275.node = NNI1493178275;
var NNI1493177980 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "colOffset", len: 0, typ: NTI33554435, name: "colOffset", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}]};
NTI1493177980.node = NNI1493177980;
NTI1493178275.base = NTI1493177980;
NTI1493178470.base = NTI1493172233;
var NNI1493178274 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1493178274.node = NNI1493178274;
NTI1493178274.base = NTI134217746;
var NNI1593835523 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1593835523, name: "html", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1593835523, name: "latex", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1593835523, name: "gemtext", len: 0, sons: null}}};
NTI1593835523.node = NNI1593835523;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555178;
var NNI2466250799 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2466250799, name: "ckVal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2466250799, name: "ckPushed", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2466250799, name: "ckAction", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2466250799, name: "ckRef", len: 0, sons: null}}};
NTI2466250799.node = NNI2466250799;
var NNI2449473616 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ck", len: 0, typ: NTI2466250799, name: "ck", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554435, name: "si", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "len", len: 0, typ: NTI33554435, name: "len", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI33554449, name: "s", sons: null}]};
NTI2449473616.node = NNI2449473616;
NTI2449473615.base = NTI2449473616;
NTI2449473619.base = NTI2449473615;
var NNI2449473611 = {kind: 1, offset: "capList", len: 0, typ: NTI2449473619, name: "capList", sons: null};
NTI2449473611.node = NNI2449473611;
var NNI2449473608 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ok", len: 0, typ: NTI33554466, name: "ok", sons: null}, 
{kind: 1, offset: "matchLen", len: 0, typ: NTI33554435, name: "matchLen", sons: null}, 
{kind: 1, offset: "matchMax", len: 0, typ: NTI33554435, name: "matchMax", sons: null}, 
{kind: 1, offset: "cs", len: 0, typ: NTI2449473611, name: "cs", sons: null}]};
NTI2449473608.node = NNI2449473608;
var NNI1593835679 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1275068419, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1593835679.node = NNI1593835679;
NTI1593835676.base = NTI1593835679;
var NNI1593835673 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1593835676, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1593835673.node = NNI1593835673;
NTI2499805223.base = NTI33554435;
var NNI2499805221 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554435, name: "top", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554435, name: "max", sons: null}, 
{kind: 1, offset: "frames", len: 0, typ: NTI2499805223, name: "frames", sons: null}]};
NTI2499805221.node = NNI2499805221;
var NNI2466250798 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2466250798, name: "cftOpen", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2466250798, name: "cftClose", len: 0, sons: null}}};
NTI2466250798.node = NNI2466250798;
var NNI2415919281 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cft", len: 0, typ: NTI2466250798, name: "cft", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554435, name: "si", sons: null}, 
{kind: 1, offset: "ck", len: 0, typ: NTI2466250799, name: "ck", sons: null}, 
{kind: 1, offset: "sPushed", len: 0, typ: NTI33554449, name: "sPushed", sons: null}]};
NTI2415919281.node = NNI2415919281;
NTI2415919292.base = NTI2415919281;
var NNI2415919290 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554435, name: "top", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554435, name: "max", sons: null}, 
{kind: 1, offset: "frames", len: 0, typ: NTI2415919292, name: "frames", sons: null}]};
NTI2415919290.node = NNI2415919290;
var NNI2483027972 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ip", len: 0, typ: NTI33554435, name: "ip", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554435, name: "si", sons: null}, 
{kind: 1, offset: "rp", len: 0, typ: NTI33554435, name: "rp", sons: null}, 
{kind: 1, offset: "cp", len: 0, typ: NTI33554435, name: "cp", sons: null}, 
{kind: 1, offset: "pp", len: 0, typ: NTI33554435, name: "pp", sons: null}]};
NTI2483027972.node = NNI2483027972;
NTI2483028005.base = NTI2483027972;
var NNI2483028003 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554435, name: "top", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554435, name: "max", sons: null}, 
{kind: 1, offset: "frames", len: 0, typ: NTI2483028005, name: "frames", sons: null}]};
NTI2483028003.node = NNI2483028003;
var NNI2415919272 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ip", len: 0, typ: NTI33554435, name: "ip", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554435, name: "si", sons: null}, 
{kind: 1, offset: "simax", len: 0, typ: NTI33554435, name: "simax", sons: null}, 
{kind: 1, offset: "refs", len: 0, typ: NTI1593835673, name: "refs", sons: null}, 
{kind: 1, offset: "retStack", len: 0, typ: NTI2499805221, name: "retStack", sons: null}, 
{kind: 1, offset: "capStack", len: 0, typ: NTI2415919290, name: "capStack", sons: null}, 
{kind: 1, offset: "backStack", len: 0, typ: NTI2483028003, name: "backStack", sons: null}, 
{kind: 1, offset: "precStack", len: 0, typ: NTI2499805221, name: "precStack", sons: null}]};
NTI2415919272.node = NNI2415919272;
var NNI2466250795 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250795.node = NNI2466250795;
var NNI2466250793 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "matchLen", len: 0, typ: NTI33554435, name: "matchLen", sons: null}, 
{kind: 1, offset: "matchMax", len: 0, typ: NTI33554435, name: "matchMax", sons: null}]};
NTI2466250793.node = NNI2466250793;
NTI2466250793.base = NTI33555179;
NTI2466250795.base = NTI2466250793;
NTI2449473639.base = NTI2449473615;
var NNI2466250797 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250797.node = NNI2466250797;
NTI2466250797.base = NTI2466250793;
NTI754974724.base = NTI33554448;
var NNI2415925820 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554435, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554435, name: "Field4", sons: null}]};
NTI2415925820.node = NNI2415925820;
var NNI2415926147 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554435, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554435, name: "Field4", sons: null}]};
NTI2415926147.node = NNI2415926147;
var NNI2415927053 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2415927053.node = NNI2415927053;
var NNI2415928872 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554435, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554435, name: "Field4", sons: null}]};
NTI2415928872.node = NNI2415928872;
var NNI738197634 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI738197634.node = NNI738197634;
var NNI2466250807 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ip", len: 0, typ: NTI33554435, name: "ip", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "repr", len: 0, typ: NTI33554449, name: "repr", sons: null}, 
{kind: 1, offset: "lineInfo", len: 0, typ: NTI738197634, name: "lineInfo", sons: null}]};
NTI2466250807.node = NNI2466250807;
var NNI33555176 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "procname", len: 0, typ: NTI33554450, name: "procname", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554450, name: "filename", sons: null}]};
NTI33555176.node = NNI33555176;
var NNI2466250794 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250794.node = NNI2466250794;
NTI2466250794.base = NTI2466250793;
var NNI1476396269 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1560281091, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1476396269.node = NNI1476396269;
var NNI1593835651 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI1593835651.node = NNI1593835651;
NTI754975255.base = NTI33554449;
NTI1677721783.base = NTI1560281091;
var NNI1476398479 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1560281091, name: "Field1", sons: null}]};
NTI1476398479.node = NNI1476398479;
NTI2248147141.base = NTI33554449;
NTI754975093.base = NTI33554449;
var NNI2231369825 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554466, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2231369825.node = NNI2231369825;
NTI1476401005.base = NTI1593835525;
NTI1476401130.base = NTI1593835525;
var NNI1879048199 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1879048199.node = NNI1879048199;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555179;
var NNI1795162115 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1795162115, name: "kClosure", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1795162115, name: "kNoconv", len: 0, sons: null}}};
NTI1795162115.node = NNI1795162115;
var NNI1795162116 = {kind: 3, offset: "kind", len: 2, typ: NTI1795162115, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "fun1", len: 0, typ: NTI1795162118, name: "fun1", sons: null}], 
[setConstr(1), {kind: 1, offset: "fun2", len: 0, typ: NTI1795162119, name: "fun2", sons: null}]]};
NTI1795162116.node = NNI1795162116;
var NNI1778384912 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1778384912.node = NNI1778384912;
NTI1778384983.base = NTI1778384912;
NTI2667578562.base = NTI33555150;
var NNI2667578364 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2667578364.node = NNI2667578364;
NTI2667578364.base = NTI134217746;
NTI2667577374.base = NTI2667577413;
var NNI2667577658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2667577374, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2667577658.node = NNI2667577658;
NTI2667577373.base = NTI2667577409;
NTI2667577371.base = NTI2667577401;
NTI2667577370.base = NTI2667577397;
NTI2667577369.base = NTI2667577393;
var NNI2667577362 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI2667577362, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2667577362, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2667577362, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2667577362, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2667577362, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2667577362, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2667577362, name: "Sunday", len: 0, sons: null}}};
NTI2667577362.node = NNI2667577362;
NTI2667577372.base = NTI2667577405;
var NNI2667577417 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI2667577418, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI2667577419, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI2667577417.node = NNI2667577417;
NTI2667577382.base = NTI2667577417;
var NNI2667577377 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI2667577373, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI2667577371, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI2667577370, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI2667577369, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI2667577362, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI2667577372, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI2667577382, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI2667577377.node = NNI2667577377;
NTI2667577377.base = NTI33555173;
var NNI2667577376 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI2667577373, name: "nanosecond", sons: null}]};
NTI2667577376.node = NNI2667577376;
var NNI2667577378 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI2667577373, name: "nanosecond", sons: null}]};
NTI2667577378.node = NNI2667577378;
NTI2667577368.base = NTI2667577388;
var NNI2667577361 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI2667577361, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2667577361, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2667577361, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2667577361, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2667577361, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2667577361, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2667577361, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2667577361, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2667577361, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2667577361, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2667577361, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2667577361, name: "December", len: 0, sons: null}}};
NTI2667577361.node = NNI2667577361;
var NNI2667577537 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2667577368, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2667577361, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2667577537.node = NNI2667577537;
var NNI2667577383 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI2667577376, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI2667577383.node = NNI2667577383;
NTI1476406854.base = NTI1593835525;
var NNI1543503878 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1543503878.node = NNI1543503878;
NTI1543503878.base = NTI33555179;
var NNI1593835645 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1275068419, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1593835645.node = NNI1593835645;
NTI1593835642.base = NTI1593835645;
var NNI1593835639 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1593835642, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1593835639.node = NNI1593835639;
var NNI1191182340 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182340, name: "xnText", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182340, name: "xnVerbatimText", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182340, name: "xnElement", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182340, name: "xnCData", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182340, name: "xnEntity", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182340, name: "xnComment", len: 0, sons: null}}};
NTI1191182340.node = NNI1191182340;
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "xmlError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "xmlEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "xmlCharData", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "xmlWhitespace", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "xmlComment", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "xmlPI", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "xmlElementStart", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "xmlElementEnd", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1174405123, name: "xmlElementOpen", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1174405123, name: "xmlAttribute", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1174405123, name: "xmlElementClose", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1174405123, name: "xmlCData", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1174405123, name: "xmlEntity", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1174405123, name: "xmlSpecial", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405124 = {kind: 2, offset: 0, typ: null, name: null, len: 10, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405124, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405124, name: "errEndOfCDataExpected", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405124, name: "errNameExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405124, name: "errSemicolonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405124, name: "errQmGtExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405124, name: "errGtExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405124, name: "errEqExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405124, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1174405124, name: "errEndOfCommentExpected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1174405124, name: "errAttributeValueExpected", len: 0, sons: null}}};
NTI1174405124.node = NNI1174405124;
var NNI1174405125 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405125, name: "stateStart", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405125, name: "stateNormal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405125, name: "stateAttr", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405125, name: "stateEmptyElementTag", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405125, name: "stateError", len: 0, sons: null}}};
NTI1174405125.node = NNI1174405125;
var NNI1174405126 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405126, name: "reportWhitespace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405126, name: "reportComments", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405126, name: "allowUnquotedAttribs", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405126, name: "allowEmptyAttribs", len: 0, sons: null}}};
NTI1174405126.node = NNI1174405126;
NTI1174405132.base = NTI1174405126;
var NNI1174405127 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554449, name: "b", sons: null}, 
{kind: 1, offset: "c", len: 0, typ: NTI33554449, name: "c", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1174405123, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1174405124, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1174405125, name: "state", sons: null}, 
{kind: 1, offset: "cIsEmpty", len: 0, typ: NTI33554466, name: "cIsEmpty", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1174405132, name: "options", sons: null}]};
NTI1174405127.node = NNI1174405127;
var NNI1157627914 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1157627915, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1157627916, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1157627917, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1157627918, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1157627919, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1157627924, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1157627926, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1157627927, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1157627928, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1157627929, name: "flushImpl", sons: null}]};
NTI1157627914.node = NNI1157627914;
NTI1157627914.base = NTI33555173;
NTI1157627913.base = NTI1157627914;
NTI1224736773.base = NTI33554448;
var NNI1224736772 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1157627913, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1224736773, name: "refillChars", sons: null}]};
NTI1224736772.node = NNI1224736772;
NTI1224736772.base = NTI33555173;
NTI1174405127.base = NTI1224736772;
NTI1191182344.base = NTI1191182339;
var NNI1207959556 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554466, name: "Field2", sons: null}]};
NTI1207959556.node = NNI1207959556;
NTI1207959557.base = NTI1207959556;
var NNI1207959555 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1207959555, name: "modeCaseSensitive", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1207959555, name: "modeCaseInsensitive", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1207959555, name: "modeStyleInsensitive", len: 0, sons: null}}};
NTI1207959555.node = NNI1207959555;
var NNI1207959558 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1207959557, name: "data", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI1207959555, name: "mode", sons: null}]};
NTI1207959558.node = NNI1207959558;
NTI1207959558.base = NTI33555173;
NTI1207959559.base = NTI1207959558;
var NNI1191182342 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "k", len: 6, typ: NTI1191182340, name: "k", sons: [[setConstr(0, 1, 5, 3, 4), {kind: 1, offset: "fText", len: 0, typ: NTI33554449, name: "fText", sons: null}], 
[setConstr(2), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "fTag", len: 0, typ: NTI33554449, name: "fTag", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI1191182344, name: "s", sons: null}, 
{kind: 1, offset: "fAttr", len: 0, typ: NTI1207959559, name: "fAttr", sons: null}]}]]}, 
{kind: 1, offset: "fClientData", len: 0, typ: NTI33554435, name: "fClientData", sons: null}]};
NTI1191182342.node = NNI1191182342;
NTI1191182339.base = NTI1191182342;
NTI1191182393.base = NTI1191182339;
var NNI1157628409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1157628409.node = NNI1157628409;
NTI1157628409.base = NTI1157627914;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var ConstSet2 = setConstr([48, 57]);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet3 = setConstr(0, 125);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([65, 90]);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet7 = setConstr(1);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_385875976(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557616;

}
var ConstSet8 = setConstr(1);

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(0);
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(0);
var ConstSet14 = setConstr(0);
var ConstSet15 = setConstr(1);
var ConstSet16 = setConstr(0);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(0);
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr(0);
var ConstSet21 = setConstr(1);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
var ConstSet22 = setConstr(0);
var ConstSet23 = setConstr(1);
var ConstSet24 = setConstr(0);
var ConstSet25 = setConstr(1);
var ConstSet26 = setConstr(0);
var ConstSet27 = setConstr(1);
var ConstSet28 = setConstr(1);
var ConstSet29 = setConstr(1);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(1);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(0);
var ConstSet36 = setConstr(0);
var ConstSet37 = setConstr(1);
var ConstSet38 = setConstr(0);
var ConstSet39 = setConstr(1);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(1);
var ConstSet42 = setConstr(0);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(0);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(0);
var ConstSet47 = setConstr(1);
var ConstSet48 = setConstr(0);
var ConstSet49 = setConstr(1);
var ConstSet50 = setConstr(1);
var ConstSet51 = setConstr(2, 3, 8);
var ConstSet52 = setConstr(1, 4);
var ConstSet53 = setConstr(1);
var ConstSet54 = setConstr(1);
var ConstSet55 = setConstr(0);
var ConstSet56 = setConstr(1);
var ConstSet57 = setConstr(1);
      var fontExceptions_2315255979 = [[{Field0: 104, Field1: [226,132,142]}], [], [{Field0: 66, Field1: [226,132,172]}, {Field0: 69, Field1: [226,132,176]}, {Field0: 70, Field1: [226,132,177]}, {Field0: 72, Field1: [226,132,139]}, {Field0: 73, Field1: [226,132,144]}, {Field0: 76, Field1: [226,132,146]}, {Field0: 77, Field1: [226,132,179]}, {Field0: 82, Field1: [226,132,155]}, {Field0: 101, Field1: [226,132,175]}, {Field0: 103, Field1: [226,132,138]}, {Field0: 111, Field1: [226,132,180]}], [{Field0: 67, Field1: [226,132,173]}, {Field0: 72, Field1: [226,132,140]}, {Field0: 73, Field1: [226,132,145]}, {Field0: 82, Field1: [226,132,156]}, {Field0: 90, Field1: [226,132,168]}], [{Field0: 67, Field1: [226,132,130]}, {Field0: 72, Field1: [226,132,141]}, {Field0: 78, Field1: [226,132,149]}, {Field0: 80, Field1: [226,132,153]}, {Field0: 81, Field1: [226,132,154]}, {Field0: 82, Field1: [226,132,157]}, {Field0: 90, Field1: [226,132,164]}]];
var ConstSet58 = setConstr(60, 62, 94);
var ConstSet59 = setConstr(60, 62, 94);
var ConstSet60 = setConstr(45, 43, 32);
var ConstSet61 = setConstr([48, 57]);
var ConstSet62 = setConstr([48, 57]);
var ConstSet63 = setConstr([48, 57]);

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}
var ConstSet64 = setConstr([65, 90], [97, 122]);
    var fontStarts_2315255958 = [new Int32Array([119860, 119808, 119964, 120068, 120120]), new Int32Array([120546, 120488, 0, 0, 0])];
    var fontsByName_2315255957 = [{Field0: [92,109,97,116,104,114,109], Field1: 0}, {Field0: [92,109,97,116,104,105,116], Field1: 1}, {Field0: [92,109,97,116,104,98,102], Field1: 2}, {Field0: [92,109,97,116,104,99,97,108], Field1: 3}, {Field0: [92,109,97,116,104,102,114,97,107], Field1: 4}, {Field0: [92,109,97,116,104,98,98], Field1: 5}];
var ConstSet65 = setConstr(1);
var ConstSet66 = setConstr(1);
var ConstSet67 = setConstr(0);
var ConstSet68 = setConstr(1);
var ConstSet69 = setConstr(1);
var ConstSet70 = setConstr(0);
var ConstSet71 = setConstr(1);
var ConstSet72 = setConstr(1);
var ConstSet73 = setConstr(0);
var ConstSet74 = setConstr(1);
var ConstSet75 = setConstr(1);
var ConstSet76 = setConstr(0);
var ConstSet77 = setConstr(1);
var ConstSet78 = setConstr(1);
var ConstSet79 = setConstr(0);
    var delimiters_2315255955 = [{Field0: [40], Field1: {rows: [[40]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,112,97,114,101,110], Field1: {rows: [[40]], baseline: 0, width: 1, flag: 0}}, {Field0: [41], Field1: {rows: [[41]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,112,97,114,101,110], Field1: {rows: [[41]], baseline: 0, width: 1, flag: 0}}, {Field0: [91], Field1: {rows: [[91]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,98,114,97,99,107], Field1: {rows: [[91]], baseline: 0, width: 1, flag: 0}}, {Field0: [93], Field1: {rows: [[93]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,98,114,97,99,107], Field1: {rows: [[93]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,123], Field1: {rows: [[123]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,98,114,97,99,101], Field1: {rows: [[123]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,125], Field1: {rows: [[125]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,98,114,97,99,101], Field1: {rows: [[125]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,168], Field1: {rows: [[226,159,168]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,97,110,103,108,101], Field1: {rows: [[226,159,168]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,97,110,103], Field1: {rows: [[226,159,168]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,169], Field1: {rows: [[226,159,169]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,97,110,103,108,101], Field1: {rows: [[226,159,169]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,97,110,103], Field1: {rows: [[226,159,169]], baseline: 0, width: 1, flag: 0}}, {Field0: [124], Field1: {rows: [[226,136,163]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,118,101,114,116], Field1: {rows: [[226,136,163]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,124], Field1: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,86,101,114,116], Field1: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,136], Field1: {rows: [[226,140,136]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,99,101,105,108], Field1: {rows: [[226,140,136]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,137], Field1: {rows: [[226,140,137]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,99,101,105,108], Field1: {rows: [[226,140,137]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,138], Field1: {rows: [[226,140,138]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,102,108,111,111,114], Field1: {rows: [[226,140,138]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,139], Field1: {rows: [[226,140,139]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,102,108,111,111,114], Field1: {rows: [[226,140,139]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,166], Field1: {rows: [[226,159,166]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,108,108,98,114,97,99,107,101,116], Field1: {rows: [[226,159,166]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,167], Field1: {rows: [[226,159,167]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,114,114,98,114,97,99,107,101,116], Field1: {rows: [[226,159,167]], baseline: 0, width: 1, flag: 0}}];
var ConstSet80 = setConstr(1);
var ConstSet81 = setConstr(0);
var ConstSet82 = setConstr(1);
var ConstSet83 = setConstr(1);
var ConstSet84 = setConstr(0);
var ConstSet85 = setConstr(0);
var ConstSet86 = setConstr(1);
var ConstSet87 = setConstr(0);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(0);
var ConstSet91 = setConstr(1);
var ConstSet92 = setConstr(0);
var ConstSet93 = setConstr(1);
var ConstSet94 = setConstr(1);
var ConstSet95 = setConstr(0);
var ConstSet96 = setConstr(0);
var ConstSet97 = setConstr(1);
var ConstSet98 = setConstr(0);
var ConstSet99 = setConstr(1);
var ConstSet100 = setConstr(0);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(0);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(0);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(0);
var ConstSet107 = setConstr(1);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(1);
var ConstSet110 = setConstr(1);

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}
        var commands_2315259127 = {data: [{Field0: 773313536, Field1: [98,101,116,119,101,101,110], Field2: {rows: [[226,137,172]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1275910144), Field1: [118,97,114,115,117,112,115,101,116,110,101,113], Field2: {rows: [[226,138,139]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1044255742), Field1: [98,111,120,100,111,116], Field2: {rows: [[226,138,161]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1805090809), Field1: [67,111,109,112,108,101,120], Field2: {rows: [[226,132,130]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1296414729, Field1: [100,100,97,103], Field2: {rows: [[226,128,161]], baseline: 0, width: 1, flag: 0}}, {Field0: (-2143612919), Field1: [66,111,120], Field2: {rows: [[226,150,161]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 690548749, Field1: [116,97,117], Field2: {rows: [[207,132]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-949300208), Field1: [114,104,111], Field2: {rows: [[207,129]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 374125587, Field1: [110,101,97,114,114,111,119], Field2: {rows: [[226,134,151]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1939687445, Field1: [104,111,111,107,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,134,170]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-262745065), Field1: [98,105,103,115,116,97,114], Field2: {rows: [[226,152,133]], baseline: 0, width: 1, flag: 0}}, {Field0: 638361624, Field1: [115,109,97,108,108,105,110,116], Field2: {rows: [[226,136,171]], baseline: 0, width: 1, flag: 3}}, {Field0: 1181947928, Field1: [115,101,97,114,114,111,119], Field2: {rows: [[226,134,152]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1376556004), Field1: [76,97,84,101,88], Field2: {rows: [[76,32,84,32,88], [32,65,32,69,32]], baseline: 0, width: 5, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1177595934, Field1: [111,105,110,116], Field2: {rows: [[226,136,174]], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-522425310), Field1: [103,101,113], Field2: {rows: [[226,137,165]], baseline: 0, width: 1, flag: 2}}, {Field0: 482634787, Field1: [110,101,103], Field2: {rows: [[194,172]], baseline: 0, width: 1, flag: 2}}, {Field0: 699467812, Field1: [110,118,100,97,115,104], Field2: {rows: [[226,138,172]], baseline: 0, width: 1, flag: 2}}, {Field0: 385061925, Field1: [110,97,98,108,97], Field2: {rows: [[226,136,135]], baseline: 0, width: 1, flag: 0}}, {Field0: 1299890214, Field1: [115,117,98,115,101,116], Field2: {rows: [[226,138,130]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1847849000, Field1: [118,97,114,85,112,115,105,108,111,110], Field2: {rows: [[206,165]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-2128973781), Field1: [105], Field2: {rows: [[196,177]], baseline: 0, width: 1, flag: 1}}, {Field0: 1474680876, Field1: [117,97,114,114], Field2: {rows: [[226,134,145]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1454298068), Field1: [110,112,114,101,99], Field2: {rows: [[226,138,128]], baseline: 0, width: 1, flag: 2}}, {Field0: 598008878, Field1: [101,113,115,105,109], Field2: {rows: [[226,137,130]], baseline: 0, width: 1, flag: 2}}, {Field0: 1714570287, Field1: [101,109,112,116,121,115,101,116], Field2: {rows: [[226,136,133]], baseline: 0, width: 1, flag: 2}}, {Field0: 1088214061, Field1: [110,117], Field2: {rows: [[206,189]], baseline: 0, width: 1, flag: 1}}, {Field0: 181399601, Field1: [99,105,114,99,108,101,100,99,105,114,99], Field2: {rows: [[226,138,154]], baseline: 0, width: 1, flag: 2}}, {Field0: 444384306, Field1: [114,105,103,104,116,115,113,117,105,103,97,114,114,111,119], Field2: {rows: [[226,135,157]], baseline: 0, width: 1, flag: 2}}, {Field0: 174735408, Field1: [116,101,120,116,100,97,103,103,101,114,100,98,108], Field2: {rows: [[226,128,161]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-612250570), Field1: [71,97,109,109,97], Field2: {rows: [[206,147]], baseline: 0, width: 1, flag: 1}}, {Field0: 340107318, Field1: [97,114,103,109,105,110], Field2: {rows: [[97,114,103,226,128,137,109,105,110]], baseline: 0, width: 7, flag: 4}}, {Field0: (-1880859592), Field1: [80,104,105], Field2: {rows: [[206,166]], baseline: 0, width: 1, flag: 1}}, {Field0: (-601339847), Field1: [112,114,101,99], Field2: {rows: [[226,137,186]], baseline: 0, width: 1, flag: 2}}, {Field0: 644534329, Field1: [111,109,101,103,97], Field2: {rows: [[207,137]], baseline: 0, width: 1, flag: 1}}, {Field0: 299158587, Field1: [108,111,111,112,97,114,114,111,119,114,105,103,104,116], Field2: {rows: [[226,134,172]], baseline: 0, width: 1, flag: 2}}, {Field0: 1695671356, Field1: [109,105,100], Field2: {rows: [[226,136,163]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1661594566), Field1: [108,111,122,101,110,103,101], Field2: {rows: [[226,151,138]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-965019585), Field1: [100,111,116,115,98], Field2: {rows: [[226,139,175]], baseline: 0, width: 1, flag: 0}}, {Field0: (-353695681), Field1: [99,111,115], Field2: {rows: [[99,111,115]], baseline: 0, width: 3, flag: 4}}, {Field0: (-337936319), Field1: [120,105], Field2: {rows: [[206,190]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-482070460), Field1: [116,114,105,97,110,103,108,101,113], Field2: {rows: [[226,137,156]], baseline: 0, width: 1, flag: 2}}, {Field0: 1865025605, Field1: [117,112,104,97,114,112,111,111,110,114,105,103,104,116], Field2: {rows: [[226,134,190]], baseline: 0, width: 1, flag: 2}}, {Field0: (-99402684), Field1: [108,108,98,114,97,99,107,101,116], Field2: {rows: [[226,159,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-595749816), Field1: [82,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,135,155]], baseline: 0, width: 1, flag: 2}}, {Field0: 444818505, Field1: [116,119,111,104,101,97,100,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,134,158]], baseline: 0, width: 1, flag: 2}}, {Field0: 949833801, Field1: [100,97,115,104,118], Field2: {rows: [[226,138,163]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 731926604, Field1: [82,104,111], Field2: {rows: [[80]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-152946609), Field1: [76,114,97,114,114], Field2: {rows: [[226,135,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 999038032, Field1: [109,111,100,101,108,115], Field2: {rows: [[226,138,168]], baseline: 0, width: 1, flag: 2}}, {Field0: 856149071, Field1: [108,105,109,105,110,102], Field2: {rows: [[108,105,109,32,105,110,102]], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 260524116, Field1: [100,105,118], Field2: {rows: [[195,183]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1743740842), Field1: [118,97,114,115,105,103,109,97], Field2: {rows: [[207,130]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 152217691, Field1: [116,111], Field2: {rows: [[226,134,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-232435621), Field1: [108,101,102,116,114,105,103,104,116,97,114,114,111,119,115], Field2: {rows: [[226,135,134]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1894549413), Field1: [103,105,109,101,108], Field2: {rows: [[226,132,183]], baseline: 0, width: 1, flag: 1}}, {Field0: (-977484706), Field1: [116,101,120,116,117,110,100,101,114,115,99,111,114,101], Field2: {rows: [[95]], baseline: 0, width: 1, flag: 0}}, {Field0: (-653542309), Field1: [104,111,109], Field2: {rows: [[104,111,109]], baseline: 0, width: 3, flag: 4}}, {Field0: (-836744096), Field1: [108,101,102,116,108,101,102,116,97,114,114,111,119,115], Field2: {rows: [[226,135,135]], baseline: 0, width: 1, flag: 2}}, {Field0: 778788961, Field1: [98,105,103,118,101,101], Field2: {rows: [[226,139,129]], baseline: 0, width: 1, flag: 3}}, {Field0: 213332064, Field1: [112,114,101,99,115,105,109], Field2: {rows: [[226,137,190]], baseline: 0, width: 1, flag: 2}}, {Field0: 727641187, Field1: [109,105,110,117,115,99,111,108,111,110,99,111,108,111,110], Field2: {rows: [[58,58,58,32,58,44,32,226,136,146,226,136,183]], baseline: 0, width: 9, flag: 2}}, {Field0: (-561121181), Field1: [98,97,99,107,115,105,109], Field2: {rows: [[226,136,189]], baseline: 0, width: 1, flag: 2}}, {Field0: 282381413, Field1: [103,110,101,113], Field2: {rows: [[226,170,136]], baseline: 0, width: 1, flag: 2}}, {Field0: 460405857, Field1: [86,101,114,116], Field2: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 0}}, {Field0: 1072275553, Field1: [65,65], Field2: {rows: [[195,133]], baseline: 0, width: 1, flag: 1}}, {Field0: 259182696, Field1: [103,116], Field2: {rows: [[62]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1338973290, Field1: [118,100,111,116,115], Field2: {rows: [[226,139,174]], baseline: 0, width: 1, flag: 0}}, {Field0: 749951083, Field1: [101,116,97], Field2: {rows: [[206,183]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1938319251), Field1: [111,105,105,105,110,116], Field2: {rows: [[226,136,176]], baseline: 0, width: 1, flag: 3}}, {Field0: 1672714350, Field1: [117,110,114,104,100], Field2: {rows: [[226,138,181]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-587095952), Field1: [110,116,114,105,97,110,103,108,101,108,101,102,116,101,113], Field2: {rows: [[226,139,172]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1364552818, Field1: [110,111,116,105,110], Field2: {rows: [[226,136,137]], baseline: 0, width: 1, flag: 2}}, {Field0: (-718976910), Field1: [83,105,103,109,97], Field2: {rows: [[206,163]], baseline: 0, width: 1, flag: 1}}, {Field0: (-331592588), Field1: [108,98,114,97,99,101], Field2: {rows: [[123]], baseline: 0, width: 1, flag: 0}}, {Field0: (-2046516107), Field1: [114,65,114,114], Field2: {rows: [[226,135,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1988400011), Field1: [103,110,97,112,112,114,111,120], Field2: {rows: [[226,170,138]], baseline: 0, width: 1, flag: 2}}, {Field0: 1748272243, Field1: [111], Field2: {rows: [[195,184]], baseline: 0, width: 1, flag: 1}}, {Field0: 312313973, Field1: [100,111,116,115,105], Field2: {rows: [[226,139,175]], baseline: 0, width: 1, flag: 0}}, {Field0: 19161209, Field1: [100,100,97,103,103,101,114], Field2: {rows: [[226,128,161]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1893200774), Field1: [108,110], Field2: {rows: [[108,110]], baseline: 0, width: 2, flag: 4}}, {Field0: (-100797317), Field1: [100,111,119,110,100,111,119,110,97,114,114,111,119,115], Field2: {rows: [[226,135,138]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1755413380), Field1: [115,117,98,115,101,116,110,101,113,113], Field2: {rows: [[226,171,139]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-2084440962), Field1: [112,97,114,97,108,108,101,108], Field2: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 2}}, {Field0: 977130622, Field1: [103,97,109,109,97], Field2: {rows: [[206,179]], baseline: 0, width: 1, flag: 1}}, {Field0: 1135297664, Field1: [117,65,114,114], Field2: {rows: [[226,135,145]], baseline: 0, width: 1, flag: 2}}, {Field0: (-296721281), Field1: [100,100,111,116,115], Field2: {rows: [[226,139,177]], baseline: 0, width: 1, flag: 0}}, {Field0: (-222212994), Field1: [99,108,117,98,115], Field2: {rows: [[226,153,163]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1164247933), Field1: [98,111,120,112,108,117,115], Field2: {rows: [[226,138,158]], baseline: 0, width: 1, flag: 2}}, {Field0: 1514094724, Field1: [100,97,103,103,101,114], Field2: {rows: [[226,128,160]], baseline: 0, width: 1, flag: 0}}, {Field0: 1311469697, Field1: [99,111,116,103], Field2: {rows: [[99,111,116,103]], baseline: 0, width: 4, flag: 4}}, {Field0: 490725510, Field1: [98,101,99,97,117,115,101], Field2: {rows: [[226,136,181]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 966588552, Field1: [108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,134,144]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-999892852), Field1: [110,101], Field2: {rows: [[226,137,160]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1858303860), Field1: [105,111,116,97], Field2: {rows: [[206,185]], baseline: 0, width: 1, flag: 1}}, {Field0: 1746366604, Field1: [114,113], Field2: {rows: [[226,128,178]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 732241043, Field1: [100,111,116,101,113], Field2: {rows: [[226,137,144]], baseline: 0, width: 1, flag: 2}}, {Field0: 58222740, Field1: [115,104], Field2: {rows: [[115,104]], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-797167466), Field1: [103,116,114,101,113,113,108,101,115,115], Field2: {rows: [[226,170,140]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1089103717), Field1: [98,108,97,99,107,116,114,105,97,110,103,108,101,108,101,102,116], Field2: {rows: [[226,151,128]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1035649181, Field1: [90], Field2: {rows: [[226,132,164]], baseline: 0, width: 1, flag: 1}}, {Field0: (-2091908962), Field1: [103,116,114,101,113,108,101,115,115], Field2: {rows: [[226,139,155]], baseline: 0, width: 1, flag: 2}}, {Field0: 965928095, Field1: [68,101,108,116,97], Field2: {rows: [[206,148]], baseline: 0, width: 1, flag: 1}}, {Field0: (-420720480), Field1: [116,101,120,116,97,115,99,105,105,116,105,108,100,101], Field2: {rows: [[126]], baseline: 0, width: 1, flag: 0}}, {Field0: (-778712927), Field1: [74,111,105,110], Field2: {rows: [[226,139,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1789499230), Field1: [76,101,102,116,97,114,114,111,119], Field2: {rows: [[226,135,144]], baseline: 0, width: 1, flag: 2}}, {Field0: 1590319267, Field1: [111,109,105,110,117,115], Field2: {rows: [[226,138,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 1997743268, Field1: [108,116], Field2: {rows: [[60]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1355677533), Field1: [114,101,97,108,115], Field2: {rows: [[226,132,157]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-523187031), Field1: [105,105,110,116], Field2: {rows: [[226,136,172]], baseline: 0, width: 1, flag: 3}}, {Field0: (-1036495703), Field1: [98,105,103,115,113,99,117,112], Field2: {rows: [[226,168,134]], baseline: 0, width: 1, flag: 3}}, {Field0: 128442538, Field1: [99,111,115,104], Field2: {rows: [[99,111,115,104]], baseline: 0, width: 4, flag: 4}}, {Field0: (-2114553684), Field1: [116,101,120,116,101,108,108,105,112,115,105,115], Field2: {rows: [[226,128,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1448098991, Field1: [108,101,115,115,97,112,112,114,111,120], Field2: {rows: [[226,170,133]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1900930897), Field1: [112,114,101,99,110,97,112,112,114,111,120], Field2: {rows: [[226,170,185]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1279032140), Field1: [109,97,112,115,116,111], Field2: {rows: [[226,134,166]], baseline: 0, width: 1, flag: 2}}, {Field0: 659410101, Field1: [98,105,103,117,112,108,117,115], Field2: {rows: [[226,168,132]], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 561724599, Field1: [108,101,115,115,101,113,113,103,116,114], Field2: {rows: [[226,170,139]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1809787065, Field1: [97,109,97,108,103], Field2: {rows: [[226,168,191]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-37402437), Field1: [115,117,109], Field2: {rows: [[226,136,145]], baseline: 0, width: 1, flag: 3}}, {Field0: 1885254844, Field1: [108,111,114], Field2: {rows: [[226,136,168]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1271205699), Field1: [104,97,114,114], Field2: {rows: [[226,134,148]], baseline: 0, width: 1, flag: 2}}, {Field0: (-9535301), Field1: [114,114,98,114,97,99,107,101,116], Field2: {rows: [[226,159,167]], baseline: 0, width: 1, flag: 0}}, {Field0: 784871615, Field1: [110,108,101,102,116,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,134,174]], baseline: 0, width: 1, flag: 2}}, {Field0: 1326387387, Field1: [99,115,99], Field2: {rows: [[99,115,99]], baseline: 0, width: 3, flag: 4}}, {Field0: (-1490766655), Field1: [116,101,120,116,113,117,111,116,101,108,101,102,116], Field2: {rows: [[226,128,152]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-422736700), Field1: [111,115,108,97,115,104], Field2: {rows: [[226,138,152]], baseline: 0, width: 1, flag: 2}}, {Field0: 1286160581, Field1: [98,105,103,99,105,114,99], Field2: {rows: [[226,151,175]], baseline: 0, width: 1, flag: 2}}, {Field0: 239622342, Field1: [116,119,111,104,101,97,100,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,134,160]], baseline: 0, width: 1, flag: 2}}, {Field0: (-142582585), Field1: [108,97,110,100], Field2: {rows: [[226,136,167]], baseline: 0, width: 1, flag: 2}}, {Field0: (-108495675), Field1: [117,112,117,112,97,114,114,111,119,115], Field2: {rows: [[226,135,136]], baseline: 0, width: 1, flag: 2}}, {Field0: 1882464453, Field1: [112,105,116,99,104,102,111,114,107], Field2: {rows: [[226,139,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 695680199, Field1: [110,115,117,99,99], Field2: {rows: [[226,138,129]], baseline: 0, width: 1, flag: 2}}, {Field0: 1379611846, Field1: [110,115,117,112,115,101,116,101,113], Field2: {rows: [[226,138,137]], baseline: 0, width: 1, flag: 2}}, {Field0: 1519946951, Field1: [100,111,116,115,111], Field2: {rows: [[226,128,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 1121218765, Field1: [114,105,103,104,116,116,104,114,101,101,116,105,109,101,115], Field2: {rows: [[226,139,140]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1661306674), Field1: [66,117,109,112,101,113], Field2: {rows: [[226,137,142]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1584718641), Field1: [68,111,116,101,113], Field2: {rows: [[226,137,145]], baseline: 0, width: 1, flag: 2}}, {Field0: 2014841039, Field1: [115,117,99,99,110,101,113,113], Field2: {rows: [[226,170,182]], baseline: 0, width: 1, flag: 2}}, {Field0: (-159647535), Field1: [117,112,115,105,108,111,110], Field2: {rows: [[207,133]], baseline: 0, width: 1, flag: 1}}, {Field0: 1363198162, Field1: [99,117,114,108,121,101,113,115,117,99,99], Field2: {rows: [[226,139,159]], baseline: 0, width: 1, flag: 2}}, {Field0: (-884689710), Field1: [118,97,114,116,104,101,116,97], Field2: {rows: [[207,145]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1843728178), Field1: [99,111,108,111,110], Field2: {rows: [[58]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1445616431), Field1: [115,117,114,100], Field2: {rows: [[226,136,154]], baseline: 0, width: 1, flag: 0}}, {Field0: 457960649, Field1: [116,101,120,116,98,97,99,107,115,108,97,115,104], Field2: {rows: [[92]], baseline: 0, width: 1, flag: 0}}, {Field0: (-435545897), Field1: [108,111,110,103,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,159,182]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1222909744), Field1: [115,101,99,116], Field2: {rows: [[194,167]], baseline: 0, width: 1, flag: 0}}, {Field0: (-2121057065), Field1: [115,105,110], Field2: {rows: [[115,105,110]], baseline: 0, width: 3, flag: 4}}, {Field0: (-1726815019), Field1: [99,116,104], Field2: {rows: [[99,116,104]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 979290334, Field1: [100,111,116,115], Field2: {rows: [[226,128,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1312209120, Field1: [108,100,111,116,112], Field2: {rows: [[46]], baseline: 0, width: 1, flag: 2}}, {Field0: 861523169, Field1: [97,112,112,114,111,120,99,111,108,111,110], Field2: {rows: [[226,137,136,58]], baseline: 0, width: 2, flag: 2}}, {Field0: 2048828642, Field1: [117,112,104,97,114,112,111,111,110,108,101,102,116], Field2: {rows: [[226,134,191]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1199991581), Field1: [116,103], Field2: {rows: [[116,103]], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1893927147, Field1: [103,116,114,100,111,116], Field2: {rows: [[226,139,151]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1959936789), Field1: [115,117,99,99,101,113], Field2: {rows: [[226,170,176]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2132660463, Field1: [108,114,97,114,114], Field2: {rows: [[226,134,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 488165615, Field1: [116,111,112], Field2: {rows: [[226,138,164]], baseline: 0, width: 1, flag: 0}}, {Field0: (-606145295), Field1: [108,108], Field2: {rows: [[226,137,170]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1807494389, Field1: [100,105,97,109,111,110,100,115], Field2: {rows: [[226,153,162]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 192740599, Field1: [115,117,99,99,97,112,112,114,111,120], Field2: {rows: [[226,170,184]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-560628486), Field1: [109,105,110], Field2: {rows: [[109,105,110]], baseline: 0, width: 3, flag: 4}}, {Field0: 1285704955, Field1: [108,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,159,183]], baseline: 0, width: 1, flag: 2}}, {Field0: 1234765051, Field1: [105,110,102], Field2: {rows: [[105,110,102]], baseline: 0, width: 3, flag: 4}}, {Field0: (-978306819), Field1: [112,114,111,106,108,105,109], Field2: {rows: [[112,114,111,106,32,108,105,109]], baseline: 0, width: 8, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1846918907), Field1: [105,109,112,108,105,101,100,98,121], Field2: {rows: [[226,159,184]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1475488507), Field1: [76,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,135,154]], baseline: 0, width: 1, flag: 2}}, {Field0: 1549492486, Field1: [101,113,117,97,108,115,99,111,108,111,110], Field2: {rows: [[226,137,149]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1609219833), Field1: [98,108,97,99,107,115,113,117,97,114,101], Field2: {rows: [[226,150,160]], baseline: 0, width: 1, flag: 0}}, {Field0: 1089001737, Field1: [83,117,112,115,101,116], Field2: {rows: [[226,139,145]], baseline: 0, width: 1, flag: 2}}, {Field0: (-989102838), Field1: [112,114,101,99,101,113], Field2: {rows: [[226,170,175]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1645364493, Field1: [114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,134,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1458530034), Field1: [118,97,114,116,114,105,97,110,103,108,101,114,105,103,104,116], Field2: {rows: [[226,138,179]], baseline: 0, width: 1, flag: 2}}, {Field0: 1612016911, Field1: [98,105,103,111,112,108,117,115], Field2: {rows: [[226,168,129]], baseline: 0, width: 1, flag: 3}}, {Field0: 491266320, Field1: [108,101,115,115,100,111,116], Field2: {rows: [[226,139,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 131900689, Field1: [105,110], Field2: {rows: [[226,136,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-359701233), Field1: [100,97,103], Field2: {rows: [[226,128,160]], baseline: 0, width: 1, flag: 0}}, {Field0: (-187569904), Field1: [99,111,116], Field2: {rows: [[99,111,116]], baseline: 0, width: 3, flag: 4}}, {Field0: (-1545899756), Field1: [71,97,109,101], Field2: {rows: [[226,133,129]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1835041046, Field1: [110,116,114,105,97,110,103,108,101,114,105,103,104,116,101,113], Field2: {rows: [[226,139,173]], baseline: 0, width: 1, flag: 2}}, {Field0: 1895304471, Field1: [103,103], Field2: {rows: [[226,137,171]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1002856168), Field1: [101,120,105,115,116,115], Field2: {rows: [[226,136,131]], baseline: 0, width: 1, flag: 2}}, {Field0: 1855977753, Field1: [98,97,114,119,101,100,103,101], Field2: {rows: [[226,138,188]], baseline: 0, width: 1, flag: 2}}, {Field0: (-13362922), Field1: [118,97,114,80,104,105], Field2: {rows: [[206,166]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1924908771), Field1: [67,111,108,111,110,115,105,109], Field2: {rows: [[226,136,183,226,136,188]], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1350079776, Field1: [99,116,103], Field2: {rows: [[99,116,103]], baseline: 0, width: 3, flag: 4}}, {Field0: (-419504863), Field1: [114,105,103,104,116,97,114,114,111,119,116,97,105,108], Field2: {rows: [[226,134,163]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1088790238), Field1: [112,109], Field2: {rows: [[194,177]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1071612201, Field1: [111,105,105,110,116], Field2: {rows: [[226,136,175]], baseline: 0, width: 1, flag: 3}}, {Field0: (-1023749846), Field1: [108,101,113], Field2: {rows: [[226,137,164]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-2009879247), Field1: [117,110,108,104,100], Field2: {rows: [[226,138,180]], baseline: 0, width: 1, flag: 2}}, {Field0: 627659057, Field1: [76,97,109,98,100,97], Field2: {rows: [[206,155]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1787755213), Field1: [111,112,108,117,115], Field2: {rows: [[226,138,149]], baseline: 0, width: 1, flag: 2}}, {Field0: (-184680143), Field1: [116,114,105,97,110,103,108,101,114,105,103,104,116], Field2: {rows: [[226,150,185]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1440444105), Field1: [98,105,103,119,101,100,103,101], Field2: {rows: [[226,139,128]], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-760926919), Field1: [100,105,97,103,100,111,119,110], Field2: {rows: [[226,149,178]], baseline: 0, width: 1, flag: 0}}, {Field0: 535853370, Field1: [105,105,105,110,116], Field2: {rows: [[226,136,173]], baseline: 0, width: 1, flag: 3}}, {Field0: 1989892411, Field1: [99,97,112], Field2: {rows: [[226,136,169]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1078095557), Field1: [110,103,101,113,115,108,97,110,116], Field2: {rows: [[226,137,177]], baseline: 0, width: 1, flag: 2}}, {Field0: (-407561924), Field1: [97,114,99,115,105,110], Field2: {rows: [[97,114,99,115,105,110]], baseline: 0, width: 6, flag: 4}}, {Field0: (-490111682), Field1: [99,117,114,108,121,119,101,100,103,101], Field2: {rows: [[226,139,143]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1772874048, Field1: [109,111,100], Field2: {rows: [[98,109,111,100]], baseline: 0, width: 4, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1858042554), Field1: [115,113,117,97,114,101], Field2: {rows: [[226,150,161]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1357095609), Field1: [117,112,97,114,114,111,119], Field2: {rows: [[226,134,145]], baseline: 0, width: 1, flag: 2}}, {Field0: (-52651705), Field1: [68,105,97,109,111,110,100], Field2: {rows: [[226,151,138]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-817700533), Field1: [115,113,115,117,112,115,101,116,101,113], Field2: {rows: [[226,138,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1135570613), Field1: [109,117,108,116,105,109,97,112], Field2: {rows: [[226,138,184]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-30619314), Field1: [116,104,101,114,101,102,111,114,101], Field2: {rows: [[226,136,180]], baseline: 0, width: 1, flag: 2}}, {Field0: 55854415, Field1: [115,109,97,108,108,115,109,105,108,101], Field2: {rows: [[226,140,163]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 468669778, Field1: [105,115,105,110], Field2: {rows: [[226,136,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1293458094), Field1: [114,101,115,116,114,105,99,116,105,111,110], Field2: {rows: [[226,134,190]], baseline: 0, width: 1, flag: 2}}, {Field0: 179645778, Field1: [76,111,110,103,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,159,184]], baseline: 0, width: 1, flag: 2}}, {Field0: (-970868397), Field1: [115,117,98,101], Field2: {rows: [[226,138,134]], baseline: 0, width: 1, flag: 2}}, {Field0: 125073749, Field1: [110,115,117,112,115,101,116,101,113,113], Field2: {rows: [[226,138,137]], baseline: 0, width: 1, flag: 2}}, {Field0: 353154387, Field1: [110,116,114,105,97,110,103,108,101,108,101,102,116], Field2: {rows: [[226,139,170]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1536889512), Field1: [115,117,99,99,115,105,109], Field2: {rows: [[226,137,191]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1381979816), Field1: [110,101,113], Field2: {rows: [[226,137,160]], baseline: 0, width: 1, flag: 2}}, {Field0: 9375058, Field1: [82,101], Field2: {rows: [[226,132,156]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1778153125), Field1: [65,110,100], Field2: {rows: [[38]], baseline: 0, width: 1, flag: 2}}, {Field0: 2108854619, Field1: [97,108,101,112,104], Field2: {rows: [[226,132,181]], baseline: 0, width: 1, flag: 1}}, {Field0: (-727795363), Field1: [98,111,120,116,105,109,101,115], Field2: {rows: [[226,138,160]], baseline: 0, width: 1, flag: 2}}, {Field0: 1245973854, Field1: [76,97,114,114], Field2: {rows: [[226,135,144]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1574408866), Field1: [108,65,114,114], Field2: {rows: [[226,135,144]], baseline: 0, width: 1, flag: 2}}, {Field0: (-722184869), Field1: [65,69], Field2: {rows: [[195,134]], baseline: 0, width: 1, flag: 1}}, {Field0: (-996418216), Field1: [105,110,102,105,110], Field2: {rows: [[226,136,158]], baseline: 0, width: 1, flag: 0}}, {Field0: 940000598, Field1: [68,97,103,103,101,114], Field2: {rows: [[226,128,161]], baseline: 0, width: 1, flag: 0}}, {Field0: 432784739, Field1: [118,97,114,68,101,108,116,97], Field2: {rows: [[206,148]], baseline: 0, width: 1, flag: 1}}, {Field0: 1717310812, Field1: [121,101,110], Field2: {rows: [[194,165]], baseline: 0, width: 1, flag: 0}}, {Field0: 1287358821, Field1: [118,97,114,84,104,101,116,97], Field2: {rows: [[206,152]], baseline: 0, width: 1, flag: 1}}, {Field0: (-140368539), Field1: [98,108,97,99,107,116,114,105,97,110,103,108,101], Field2: {rows: [[226,150,178]], baseline: 0, width: 1, flag: 0}}, {Field0: 1128273242, Field1: [100,101,103,114,101,101], Field2: {rows: [[194,176]], baseline: 0, width: 1, flag: 0}}, {Field0: 1182784865, Field1: [115,117,112], Field2: {rows: [[115,117,112]], baseline: 0, width: 3, flag: 4}}, {Field0: 118212969, Field1: [101,116,104], Field2: {rows: [[195,176]], baseline: 0, width: 1, flag: 1}}, {Field0: (-970887830), Field1: [110,115,117,99,99,101,113], Field2: {rows: [[226,139,161]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-69842580), Field1: [102,108,97,116], Field2: {rows: [[226,153,173]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1415733615, Field1: [99,111,108,111,110,115,105,109], Field2: {rows: [[58,226,136,188]], baseline: 0, width: 2, flag: 2}}, {Field0: 1135244656, Field1: [110,115,105,109], Field2: {rows: [[226,137,129]], baseline: 0, width: 1, flag: 2}}, {Field0: (-857002639), Field1: [76,115,104], Field2: {rows: [[226,134,176]], baseline: 0, width: 1, flag: 2}}, {Field0: 1069478258, Field1: [118,101,114,116], Field2: {rows: [[226,136,163]], baseline: 0, width: 1, flag: 0}}, {Field0: 1989233008, Field1: [116,104,101,116,97,115,121,109], Field2: {rows: [[207,145]], baseline: 0, width: 1, flag: 1}}, {Field0: 1164383599, Field1: [108,100,111,116,115], Field2: {rows: [[226,128,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 222810489, Field1: [115,105,109], Field2: {rows: [[226,136,188]], baseline: 0, width: 1, flag: 2}}, {Field0: 1532834170, Field1: [110,112,97,114,97,108,108,101,108], Field2: {rows: [[226,136,166]], baseline: 0, width: 1, flag: 2}}, {Field0: 597902715, Field1: [103,101], Field2: {rows: [[226,137,165]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1771227780), Field1: [99,101,110,116,101,114,100,111,116], Field2: {rows: [[226,139,133]], baseline: 0, width: 1, flag: 2}}, {Field0: 742864253, Field1: [115,113,115,117,112,115,101,116], Field2: {rows: [[226,138,144]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1658382981), Field1: [69,112,115,105,108,111,110], Field2: {rows: [[69]], baseline: 0, width: 1, flag: 1}}, {Field0: (-650839681), Field1: [116,104,105,99,107,97,112,112,114,111,120], Field2: {rows: [[226,137,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1698018951), Field1: [67,104,105], Field2: {rows: [[88]], baseline: 0, width: 1, flag: 1}}, {Field0: 428323201, Field1: [108,111,110,103,109,97,112,115,116,111], Field2: {rows: [[226,159,188]], baseline: 0, width: 1, flag: 2}}, {Field0: 1829878146, Field1: [116,101,120,116,114,101,103,105,115,116,101,114,101,100], Field2: {rows: [[194,174]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-967296636), Field1: [108,98,114,97,99,107], Field2: {rows: [[91]], baseline: 0, width: 1, flag: 0}}, {Field0: (-862051963), Field1: [110,108,101,113], Field2: {rows: [[226,137,176]], baseline: 0, width: 1, flag: 2}}, {Field0: 1726809478, Field1: [99,111,108,111,110,109,105,110,117,115], Field2: {rows: [[58,226,136,146]], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1240069752), Field1: [100,105,118,105,100,101,111,110,116,105,109,101,115], Field2: {rows: [[226,139,135]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1122236023), Field1: [112,101,114,112], Field2: {rows: [[226,138,165]], baseline: 0, width: 1, flag: 2}}, {Field0: 448181641, Field1: [112,114,105,109,101], Field2: {rows: [[226,128,178]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1049345653), Field1: [115,117,112,115,101,116,110,101,113], Field2: {rows: [[226,138,139]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-186772081), Field1: [108,110,111,116], Field2: {rows: [[194,172]], baseline: 0, width: 1, flag: 2}}, {Field0: 1143282064, Field1: [100,111,117,98,108,101,99,117,112], Field2: {rows: [[226,139,147]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1355421295), Field1: [102,111,114,97,108,108], Field2: {rows: [[226,136,128]], baseline: 0, width: 1, flag: 2}}, {Field0: 780416399, Field1: [108,101,102,116,104,97,114,112,111,111,110,100,111,119,110], Field2: {rows: [[226,134,189]], baseline: 0, width: 1, flag: 2}}, {Field0: 851116435, Field1: [99,111,108,111,110,101,113,113], Field2: {rows: [[226,137,148]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2076267116), Field1: [108,101,97,100,115,116,111], Field2: {rows: [[226,135,157]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1095375470), Field1: [110,99,111,110,103], Field2: {rows: [[226,137,134]], baseline: 0, width: 1, flag: 2}}, {Field0: 1902103956, Field1: [118,97,114,80,105], Field2: {rows: [[206,160]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1114860145), Field1: [99,104,105], Field2: {rows: [[207,135]], baseline: 0, width: 1, flag: 1}}, {Field0: (-137865835), Field1: [109,97,108,116,101,115,101], Field2: {rows: [[226,156,160]], baseline: 0, width: 1, flag: 0}}, {Field0: 1222922649, Field1: [100,98,108,99,111,108,111,110], Field2: {rows: [[226,136,183]], baseline: 0, width: 1, flag: 2}}, {Field0: 142935450, Field1: [115,117,99,99], Field2: {rows: [[226,137,187]], baseline: 0, width: 1, flag: 2}}, {Field0: (-235331173), Field1: [115,109,97,108,108,115,101,116,109,105,110,117,115], Field2: {rows: [[226,136,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 153636250, Field1: [100,101,116], Field2: {rows: [[100,101,116]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-534911583), Field1: [100,97,115,104,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,135,160]], baseline: 0, width: 1, flag: 2}}, {Field0: 331403682, Field1: [108,101,113,113], Field2: {rows: [[226,137,166]], baseline: 0, width: 1, flag: 2}}, {Field0: 309436835, Field1: [116,101,120,116,113,117,111,116,101,114,105,103,104,116], Field2: {rows: [[226,128,153]], baseline: 0, width: 1, flag: 0}}, {Field0: 183010724, Field1: [100,111,116,101,113,100,111,116], Field2: {rows: [[226,137,145]], baseline: 0, width: 1, flag: 2}}, {Field0: (-140396123), Field1: [103,101,113,115,108,97,110,116], Field2: {rows: [[226,169,190]], baseline: 0, width: 1, flag: 2}}, {Field0: (-822921819), Field1: [116,101,120,116,113,117,111,116,101,100,98,108,108,101,102,116], Field2: {rows: [[226,128,156]], baseline: 0, width: 1, flag: 0}}, {Field0: 1216695713, Field1: [100,105,97,103,117,112], Field2: {rows: [[226,149,177]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2022730153, Field1: [98,101,116,97], Field2: {rows: [[206,178]], baseline: 0, width: 1, flag: 1}}, {Field0: 923832745, Field1: [97,97], Field2: {rows: [[195,165]], baseline: 0, width: 1, flag: 1}}, {Field0: 483458475, Field1: [114,98,114,97,99,107], Field2: {rows: [[93]], baseline: 0, width: 1, flag: 0}}, {Field0: (-701556308), Field1: [99,117,114,118,101,97,114,114,111,119,108,101,102,116], Field2: {rows: [[226,134,182]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-495585874), Field1: [115,105,103,109,97], Field2: {rows: [[207,131]], baseline: 0, width: 1, flag: 1}}, {Field0: 937655727, Field1: [103,101,113,113], Field2: {rows: [[226,137,167]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1858229842), Field1: [97,114,99,116,97,110], Field2: {rows: [[97,114,99,116,97,110]], baseline: 0, width: 6, flag: 4}}, {Field0: (-212827727), Field1: [108,97,114,114], Field2: {rows: [[226,134,144]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1177094581, Field1: [98,105,103,99,117,112], Field2: {rows: [[226,139,131]], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 744779191, Field1: [108,101], Field2: {rows: [[226,137,164]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-189880903), Field1: [108,108,108], Field2: {rows: [[226,139,152]], baseline: 0, width: 1, flag: 2}}, {Field0: (-665286215), Field1: [118,97,114,101,112,115,105,108,111,110], Field2: {rows: [[206,181]], baseline: 0, width: 1, flag: 1}}, {Field0: 1679721915, Field1: [114,97,116,105,111], Field2: {rows: [[58]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 438242753, Field1: [108,102,108,111,111,114], Field2: {rows: [[226,140,138]], baseline: 0, width: 1, flag: 0}}, {Field0: (-991056446), Field1: [115,109,97,108,108,102,114,111,119,110], Field2: {rows: [[226,140,162]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1690050109), Field1: [98,117,108,108,101,116], Field2: {rows: [[226,136,153]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1543983676), Field1: [100,111,117,98,108,101,99,97,112], Field2: {rows: [[226,139,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1111792189), Field1: [118,97,114,115,117,112,115,101,116,110,101,113,113], Field2: {rows: [[226,171,140]], baseline: 0, width: 1, flag: 2}}, {Field0: 1936615876, Field1: [65,108,112,104,97], Field2: {rows: [[65]], baseline: 0, width: 1, flag: 1}}, {Field0: (-204029499), Field1: [101,112,115,105,108,111,110], Field2: {rows: [[207,181]], baseline: 0, width: 1, flag: 1}}, {Field0: 2041800129, Field1: [82], Field2: {rows: [[226,132,157]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1642090039), Field1: [119,112], Field2: {rows: [[226,132,152]], baseline: 0, width: 1, flag: 1}}, {Field0: 1401058759, Field1: [97,114,99,99,116,103], Field2: {rows: [[97,114,99,99,116,103]], baseline: 0, width: 6, flag: 4}}, {Field0: 1577711051, Field1: [116,101,120,116,98,114,97,99,101,114,105,103,104,116], Field2: {rows: [[125]], baseline: 0, width: 1, flag: 0}}, {Field0: (-769423932), Field1: [97,114,103], Field2: {rows: [[97,114,103]], baseline: 0, width: 3, flag: 4}}, {Field0: 1246567885, Field1: [112,111,117,110,100,115], Field2: {rows: [[194,163]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1440281138), Field1: [111,116,105,109,101,115], Field2: {rows: [[226,138,151]], baseline: 0, width: 1, flag: 2}}, {Field0: 311781838, Field1: [99,111,112,121,114,105,103,104,116], Field2: {rows: [[194,169]], baseline: 0, width: 1, flag: 0}}, {Field0: (-61369904), Field1: [105,110,116,111,112], Field2: {rows: [[226,136,171]], baseline: 0, width: 1, flag: 3}}, {Field0: 492728785, Field1: [115,117,112,115,101,116], Field2: {rows: [[226,138,131]], baseline: 0, width: 1, flag: 2}}, {Field0: (-610245166), Field1: [67,111,108,111,110,101,113,113], Field2: {rows: [[226,136,183,61]], baseline: 0, width: 2, flag: 2}}, {Field0: (-337772077), Field1: [110,109,105,100], Field2: {rows: [[226,136,164]], baseline: 0, width: 1, flag: 2}}, {Field0: 1533272532, Field1: [118,97,114,115,117,98,115,101,116,110,101,113,113], Field2: {rows: [[226,171,139]], baseline: 0, width: 1, flag: 2}}, {Field0: (-481215022), Field1: [108,99,101,105,108], Field2: {rows: [[226,140,136]], baseline: 0, width: 1, flag: 0}}, {Field0: 2059920854, Field1: [100,111,119,110,97,114,114,111,119], Field2: {rows: [[226,134,147]], baseline: 0, width: 1, flag: 2}}, {Field0: (-332135977), Field1: [101,120,105,115,116], Field2: {rows: [[226,136,131]], baseline: 0, width: 1, flag: 2}}, {Field0: (-883057194), Field1: [105,109,97,103,101,111,102], Field2: {rows: [[226,138,183]], baseline: 0, width: 1, flag: 2}}, {Field0: 1847278041, Field1: [111,114,105,103,111,102], Field2: {rows: [[226,138,182]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2116573739), Field1: [116,101,120,116,100,101,103,114,101,101], Field2: {rows: [[194,176]], baseline: 0, width: 1, flag: 0}}, {Field0: (-799040039), Field1: [115,112,97,100,101,115,117,105,116], Field2: {rows: [[226,153,160]], baseline: 0, width: 1, flag: 0}}, {Field0: (-221915691), Field1: [101,120,112], Field2: {rows: [[101,120,112]], baseline: 0, width: 3, flag: 4}}, {Field0: 665108957, Field1: [99,111,112,114,111,100], Field2: {rows: [[226,136,144]], baseline: 0, width: 1, flag: 3}}, {Field0: 1630840286, Field1: [109,104,111], Field2: {rows: [[226,132,167]], baseline: 0, width: 1, flag: 0}}, {Field0: (-830267937), Field1: [105,110,116], Field2: {rows: [[226,136,171]], baseline: 0, width: 1, flag: 3}}, {Field0: (-2139331129), Field1: [108,105,109,115,117,112], Field2: {rows: [[108,105,109,32,115,117,112]], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1610263010, Field1: [108,101,102,116,116,104,114,101,101,116,105,109,101,115], Field2: {rows: [[226,139,139]], baseline: 0, width: 1, flag: 2}}, {Field0: 1114208738, Field1: [118,97,114,110,111,116,104,105,110,103], Field2: {rows: [[226,136,133]], baseline: 0, width: 1, flag: 2}}, {Field0: 1077534179, Field1: [111,119,110,115], Field2: {rows: [[226,136,139]], baseline: 0, width: 1, flag: 2}}, {Field0: 212498914, Field1: [86,100,97,115,104], Field2: {rows: [[226,138,169]], baseline: 0, width: 1, flag: 2}}, {Field0: (-927282717), Field1: [103,110,101,113,113], Field2: {rows: [[226,137,169]], baseline: 0, width: 1, flag: 2}}, {Field0: 1208823271, Field1: [115,119,97,114,114,111,119], Field2: {rows: [[226,134,153]], baseline: 0, width: 1, flag: 2}}, {Field0: 1831684584, Field1: [108,112,97,114,101,110], Field2: {rows: [[40]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1218212375), Field1: [99,117,114,108,121,101,113,112,114,101,99], Field2: {rows: [[226,139,158]], baseline: 0, width: 1, flag: 2}}, {Field0: 1897493989, Field1: [78,117], Field2: {rows: [[78]], baseline: 0, width: 1, flag: 1}}, {Field0: (-695635477), Field1: [100,97,115,104,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,135,162]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1443886612), Field1: [115,117,99,99,110,97,112,112,114,111,120], Field2: {rows: [[226,170,186]], baseline: 0, width: 1, flag: 2}}, {Field0: 1807167981, Field1: [114,97,110,103], Field2: {rows: [[226,159,169]], baseline: 0, width: 1, flag: 0}}, {Field0: 1580248552, Field1: [108,97,109,98,100,97], Field2: {rows: [[206,187]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-133512720), Field1: [105,102,102], Field2: {rows: [[226,159,186]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 371297779, Field1: [99,105,114,99,108,101,100,100,97,115,104], Field2: {rows: [[226,138,157]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1649025525, Field1: [98,97,99,107,101,112,115,105,108,111,110], Field2: {rows: [[226,136,141]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-102348297), Field1: [99,105,114,99], Field2: {rows: [[226,136,152]], baseline: 0, width: 1, flag: 2}}, {Field0: 738677240, Field1: [76,101,102,116,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,135,148]], baseline: 0, width: 1, flag: 2}}, {Field0: (-991826440), Field1: [110,119,97,114,114,111,119], Field2: {rows: [[226,134,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1333410309), Field1: [104,111,111,107,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,134,169]], baseline: 0, width: 1, flag: 2}}, {Field0: (-879801861), Field1: [114,105,115,105,110,103,100,111,116,115,101,113], Field2: {rows: [[226,137,147]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 383633919, Field1: [112,114,101,99,99,117,114,108,121,101,113], Field2: {rows: [[226,137,188]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 317083140, Field1: [98,105,103,111,100,111,116], Field2: {rows: [[226,168,128]], baseline: 0, width: 1, flag: 3}}, {Field0: 1446722052, Field1: [115,113,99,97,112], Field2: {rows: [[226,138,147]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1995516410), Field1: [103,101,116,115], Field2: {rows: [[226,134,144]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1374693881), Field1: [80], Field2: {rows: [[194,182]], baseline: 0, width: 1, flag: 0}}, {Field0: (-943235580), Field1: [107,101,114], Field2: {rows: [[107,101,114]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1626003955), Field1: [112,114,111,100], Field2: {rows: [[226,136,143]], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1262346769, Field1: [108,101,102,116,97,114,114,111,119,116,97,105,108], Field2: {rows: [[226,134,162]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1225410029), Field1: [99,104,101,99,107,109,97,114,107], Field2: {rows: [[226,156,147]], baseline: 0, width: 1, flag: 0}}, {Field0: (-926707180), Field1: [105,109,97,103,101], Field2: {rows: [[226,132,145]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-925142501), Field1: [99,117,114,118,101,97,114,114,111,119,114,105,103,104,116], Field2: {rows: [[226,134,183]], baseline: 0, width: 1, flag: 2}}, {Field0: (-110310885), Field1: [101,113,117,105,118], Field2: {rows: [[226,137,161]], baseline: 0, width: 1, flag: 2}}, {Field0: 286669341, Field1: [69,113,99,111,108,111,110], Field2: {rows: [[58,58,58,32,58,44,32,226,136,146,226,136,183]], baseline: 0, width: 9, flag: 2}}, {Field0: (-1745527269), Field1: [98,111,116], Field2: {rows: [[226,138,165]], baseline: 0, width: 1, flag: 0}}, {Field0: 1511302685, Field1: [109,97,116,104,115,116,101,114,108,105,110,103], Field2: {rows: [[194,163]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1146067423), Field1: [104,98,97,114], Field2: {rows: [[226,132,143]], baseline: 0, width: 1, flag: 1}}, {Field0: (-2105364958), Field1: [115,117,98,115,101,116,101,113,113], Field2: {rows: [[226,171,133]], baseline: 0, width: 1, flag: 2}}, {Field0: 891442723, Field1: [84,104,101,116,97], Field2: {rows: [[206,152]], baseline: 0, width: 1, flag: 1}}, {Field0: (-77740508), Field1: [98,97,99,107,115,105,109,101,113], Field2: {rows: [[226,139,141]], baseline: 0, width: 1, flag: 2}}, {Field0: 1783373347, Field1: [98,97,99,107,112,114,105,109,101], Field2: {rows: [[226,128,181]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1891844648, Field1: [90,101,116,97], Field2: {rows: [[90]], baseline: 0, width: 1, flag: 1}}, {Field0: 656361001, Field1: [100,97,114,114], Field2: {rows: [[226,134,147]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1435107798), Field1: [115,117,99,99,110,115,105,109], Field2: {rows: [[226,139,169]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 26894892, Field1: [73,111,116,97], Field2: {rows: [[73]], baseline: 0, width: 1, flag: 1}}, {Field0: 1836716588, Field1: [122,101,116,97], Field2: {rows: [[206,182]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1691615698), Field1: [76,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,159,186]], baseline: 0, width: 1, flag: 2}}, {Field0: 891450927, Field1: [114,105,103,104,116,108,101,102,116,104,97,114,112,111,111,110,115], Field2: {rows: [[226,135,140]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1635509713), Field1: [75,97,112,112,97], Field2: {rows: [[75]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1001673268, Field1: [98,108,97,99,107,116,114,105,97,110,103,108,101,114,105,103,104,116], Field2: {rows: [[226,150,182]], baseline: 0, width: 1, flag: 0}}, {Field0: 1501875765, Field1: [84,97,117], Field2: {rows: [[84]], baseline: 0, width: 1, flag: 1}}, {Field0: 1552782902, Field1: [102,114,111,119,110], Field2: {rows: [[226,140,162]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1521156553), Field1: [110,108,101,113,115,108,97,110,116], Field2: {rows: [[226,137,176]], baseline: 0, width: 1, flag: 2}}, {Field0: (-326324681), Field1: [118,97,114,88,105], Field2: {rows: [[206,158]], baseline: 0, width: 1, flag: 1}}, {Field0: (-898344391), Field1: [106], Field2: {rows: [[200,183]], baseline: 0, width: 1, flag: 1}}, {Field0: (-503503303), Field1: [115,100,111,116], Field2: {rows: [[226,139,133]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1284465212, Field1: [105,110,102,116,121], Field2: {rows: [[226,136,158]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1178661438, Field1: [97,108,101,102], Field2: {rows: [[226,132,181]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1269727808, Field1: [116,101,120,116,98,97,114,100,98,108], Field2: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-2085733821), Field1: [116,105,109,101,115], Field2: {rows: [[195,151]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 561956424, Field1: [101,113,115,108,97,110,116,103,116,114], Field2: {rows: [[226,170,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 919873098, Field1: [108,101,102,116,104,97,114,112,111,111,110,117,112], Field2: {rows: [[226,134,188]], baseline: 0, width: 1, flag: 2}}, {Field0: 468909643, Field1: [115,117,112,101], Field2: {rows: [[226,138,135]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1482317238), Field1: [110,115,117,98,115,101,116,101,113,113], Field2: {rows: [[226,138,136]], baseline: 0, width: 1, flag: 2}}, {Field0: 1515227725, Field1: [67,97,112], Field2: {rows: [[226,139,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1300055474), Field1: [99,105,114,99,108,101,97,114,114,111,119,114,105,103,104,116], Field2: {rows: [[226,134,187]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2128052658), Field1: [72,97,114,114], Field2: {rows: [[226,135,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 1337989708, Field1: [110,115,104,111,114,116,109,105,100], Field2: {rows: [[226,136,164]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1105456559), Field1: [115,113,115,117,98,115,101,116,101,113], Field2: {rows: [[226,138,145]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2146981297), Field1: [110,103,101,113], Field2: {rows: [[226,137,177]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1793030581), Field1: [75,97,84,101,88], Field2: {rows: [[75,32,84,32,88], [32,65,32,69,32]], baseline: 0, width: 5, flag: 0}}, {Field0: 1056518736, Field1: [109,101,97,115,117,114,101,100,97,110,103,108,101], Field2: {rows: [[226,136,161]], baseline: 0, width: 1, flag: 0}}, {Field0: (-507666860), Field1: [116,101,120,116,115,116,101,114,108,105,110,103], Field2: {rows: [[194,163]], baseline: 0, width: 1, flag: 0}}, {Field0: 1070808661, Field1: [108,103], Field2: {rows: [[108,103]], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1870681688, Field1: [104,101,97,114,116,115,117,105,116], Field2: {rows: [[226,153,161]], baseline: 0, width: 1, flag: 0}}, {Field0: 19948121, Field1: [115,113,115,117,98,115,101,116], Field2: {rows: [[226,138,143]], baseline: 0, width: 1, flag: 2}}, {Field0: 193524313, Field1: [103,118,101,114,116,110,101,113,113], Field2: {rows: [[226,137,169]], baseline: 0, width: 1, flag: 2}}, {Field0: 2123680347, Field1: [97,115,116], Field2: {rows: [[226,136,151]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1287315876), Field1: [79,109,101,103,97], Field2: {rows: [[206,169]], baseline: 0, width: 1, flag: 1}}, {Field0: 1827362397, Field1: [118,101,101,98,97,114], Field2: {rows: [[226,138,187]], baseline: 0, width: 1, flag: 2}}, {Field0: 699052638, Field1: [106,109,97,116,104], Field2: {rows: [[200,183]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1798255009), Field1: [110,103,116,114], Field2: {rows: [[226,137,175]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1932101027), Field1: [116,101,120,116,98,114,97,99,101,108,101,102,116], Field2: {rows: [[123]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1924743581), Field1: [73,109], Field2: {rows: [[226,132,145]], baseline: 0, width: 1, flag: 1}}, {Field0: 1990097508, Field1: [118,97,114,116,114,105,97,110,103,108,101,108,101,102,116], Field2: {rows: [[226,138,178]], baseline: 0, width: 1, flag: 2}}, {Field0: (-414576028), Field1: [108,105,109], Field2: {rows: [[108,105,109]], baseline: 0, width: 3, flag: 4}}, {Field0: (-1006869914), Field1: [115,101,99], Field2: {rows: [[115,101,99]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1552102808), Field1: [104,101,97,114,116,115], Field2: {rows: [[226,153,161]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1000346218, Field1: [119,101,100,103,101], Field2: {rows: [[226,136,167]], baseline: 0, width: 1, flag: 2}}, {Field0: 587550314, Field1: [114,102,108,111,111,114], Field2: {rows: [[226,140,139]], baseline: 0, width: 1, flag: 0}}, {Field0: 729784939, Field1: [82,101,97,108,115], Field2: {rows: [[226,132,157]], baseline: 0, width: 1, flag: 1}}, {Field0: 152785517, Field1: [118,68,97,115,104], Field2: {rows: [[226,138,168]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 793982576, Field1: [103,99,100], Field2: {rows: [[103,99,100]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 458373746, Field1: [82,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,135,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-468514189), Field1: [110,76,101,102,116,97,114,114,111,119], Field2: {rows: [[226,135,141]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1771689589, Field1: [116,101,120,116,97,115,99,105,105,99,105,114,99,117,109], Field2: {rows: [[94]], baseline: 0, width: 1, flag: 0}}, {Field0: 1260526198, Field1: [116,114,105,97,110,103,108,101,114,105,103,104,116,101,113], Field2: {rows: [[226,138,181]], baseline: 0, width: 1, flag: 2}}, {Field0: 208938615, Field1: [116,104,101,116,97], Field2: {rows: [[206,184]], baseline: 0, width: 1, flag: 1}}, {Field0: 910490232, Field1: [99,111,108,111,110,101,113], Field2: {rows: [[58,226,136,146]], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1997622910, Field1: [108,101,113,115,108,97,110,116], Field2: {rows: [[226,169,189]], baseline: 0, width: 1, flag: 2}}, {Field0: (-918172033), Field1: [108,111,111,112,97,114,114,111,119,108,101,102,116], Field2: {rows: [[226,134,171]], baseline: 0, width: 1, flag: 2}}, {Field0: 1684372096, Field1: [112,114,101,99,110,101,113,113], Field2: {rows: [[226,170,181]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-425875838), Field1: [110,115,117,98,115,101,116,101,113], Field2: {rows: [[226,138,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1122263421), Field1: [105,109,97,116,104], Field2: {rows: [[238,132,177]], baseline: 0, width: 1, flag: 1}}, {Field0: 1607821956, Field1: [86,118,100,97,115,104], Field2: {rows: [[226,138,170]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1635205767, Field1: [98,105,103,111,116,105,109,101,115], Field2: {rows: [[226,168,130]], baseline: 0, width: 1, flag: 3}}, {Field0: 2111140487, Field1: [101,113,99,105,114,99], Field2: {rows: [[226,137,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 860426889, Field1: [115,104,111,114,116,112,97,114,97,108,108,101,108], Field2: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 2}}, {Field0: 1892319880, Field1: [111,109,105,99,114,111,110], Field2: {rows: [[206,191]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1703044749, Field1: [110,115,104,111,114,116,112,97,114,97,108,108,101,108], Field2: {rows: [[226,136,166]], baseline: 0, width: 1, flag: 2}}, {Field0: 845622926, Field1: [98,101,116,104], Field2: {rows: [[226,132,182]], baseline: 0, width: 1, flag: 1}}, {Field0: 1257085583, Field1: [103,116,114,115,105,109], Field2: {rows: [[226,137,179]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1417107824), Field1: [108,101,115,115,115,105,109], Field2: {rows: [[226,137,178]], baseline: 0, width: 1, flag: 2}}, {Field0: 1990401680, Field1: [118,97,114,83,105,103,109,97], Field2: {rows: [[206,163]], baseline: 0, width: 1, flag: 1}}, {Field0: 382401167, Field1: [116,101,120,116,100,97,103,103,101,114], Field2: {rows: [[226,128,160]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-143540585), Field1: [101,113,115,108,97,110,116,108,101,115,115], Field2: {rows: [[226,170,149]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-315963751), Field1: [80,115,105], Field2: {rows: [[206,168]], baseline: 0, width: 1, flag: 1}}, {Field0: (-49342823), Field1: [115,112,97,100,101,115], Field2: {rows: [[226,153,160]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1618291044), Field1: [110,97,116,110,117,109,115], Field2: {rows: [[226,132,149]], baseline: 0, width: 1, flag: 1}}, {Field0: (-188891491), Field1: [118,97,114,112,114,111,112,116,111], Field2: {rows: [[226,136,157]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1256799583), Field1: [67,111,108,111,110,101,113], Field2: {rows: [[226,136,183,226,136,146]], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1476694365), Field1: [114,105,103,104,116,108,101,102,116,97,114,114,111,119,115], Field2: {rows: [[226,135,132]], baseline: 0, width: 1, flag: 2}}, {Field0: 90499748, Field1: [103,116,114,97,112,112,114,111,120], Field2: {rows: [[226,170,134]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1630717273), Field1: [116,101,120,116,108,101,115,115], Field2: {rows: [[60]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 626711210, Field1: [100,111,116,115,109], Field2: {rows: [[226,139,175]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-282832210), Field1: [109,97,116,104,101,108,108,105,112,115,105,115], Field2: {rows: [[226,128,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1055529648, Field1: [99,111,108,111,110,97,112,112,114,111,120], Field2: {rows: [[58,226,137,136]], baseline: 0, width: 2, flag: 2}}, {Field0: 1306761904, Field1: [108,113], Field2: {rows: [[226,128,152]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 198273717, Field1: [116,101,120,116,101,110,100,97,115,104], Field2: {rows: [[226,128,147]], baseline: 0, width: 1, flag: 0}}, {Field0: (-436731210), Field1: [108,104,100], Field2: {rows: [[226,138,178]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 867351226, Field1: [118,100,97,115,104], Field2: {rows: [[226,138,162]], baseline: 0, width: 1, flag: 2}}, {Field0: 77870779, Field1: [70,105,110,118], Field2: {rows: [[226,132,178]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1633238340), Field1: [115,113,99,117,112], Field2: {rows: [[226,138,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1012737726, Field1: [115,101,116,109,105,110,117,115], Field2: {rows: [[226,136,150]], baseline: 0, width: 1, flag: 2}}, {Field0: 1166910142, Field1: [79], Field2: {rows: [[195,152]], baseline: 0, width: 1, flag: 1}}, {Field0: (-788264256), Field1: [108,114,65,114,114], Field2: {rows: [[226,135,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 1404075712, Field1: [115,117,99,99,99,117,114,108,121,101,113], Field2: {rows: [[226,137,189]], baseline: 0, width: 1, flag: 2}}, {Field0: (-708164930), Field1: [114,101,97,108], Field2: {rows: [[226,132,156]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1582218556), Field1: [114,98,114,97,99,101], Field2: {rows: [[125]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1623751995), Field1: [114,104,100], Field2: {rows: [[226,138,179]], baseline: 0, width: 1, flag: 2}}, {Field0: 2118272708, Field1: [114,97,110,103,108,101], Field2: {rows: [[226,159,169]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2128061129, Field1: [105,109,112,108,105,101,115], Field2: {rows: [[226,159,185]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-128053556), Field1: [114,97,114,114], Field2: {rows: [[226,134,146]], baseline: 0, width: 1, flag: 2}}, {Field0: 1485563597, Field1: [105,110,116,101,114,99,97,108], Field2: {rows: [[226,138,186]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1783832884), Field1: [116,97,110], Field2: {rows: [[116,97,110]], baseline: 0, width: 3, flag: 4}}, {Field0: (-508692785), Field1: [110,97,116,117,114,97,108], Field2: {rows: [[226,153,174]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1571214640), Field1: [115,105,109,101,113], Field2: {rows: [[226,137,131]], baseline: 0, width: 1, flag: 2}}, {Field0: 1649711825, Field1: [115,112,104,101,114,105,99,97,108,97,110,103,108,101], Field2: {rows: [[226,136,162]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 968579795, Field1: [97,114,99,116,103], Field2: {rows: [[97,114,99,116,103]], baseline: 0, width: 5, flag: 4}}, {Field0: (-2087052588), Field1: [83], Field2: {rows: [[194,167]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1940638425, Field1: [116,114,105,97,110,103,108,101,100,111,119,110], Field2: {rows: [[226,150,189]], baseline: 0, width: 1, flag: 0}}, {Field0: 444881626, Field1: [110,82,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,135,143]], baseline: 0, width: 1, flag: 2}}, {Field0: 151659227, Field1: [99,111,109,112,108,101,109,101,110,116], Field2: {rows: [[226,136,129]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1693292837), Field1: [100,111,119,110,104,97,114,112,111,111,110,108,101,102,116], Field2: {rows: [[226,135,131]], baseline: 0, width: 1, flag: 2}}, {Field0: (-4439333), Field1: [110,76,101,102,116,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,135,142]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1212450082), Field1: [99,104], Field2: {rows: [[99,104]], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1868119328), Field1: [110,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,134,155]], baseline: 0, width: 1, flag: 2}}, {Field0: (-318407968), Field1: [116,104,105,99,107,115,105,109], Field2: {rows: [[226,136,188]], baseline: 0, width: 1, flag: 2}}, {Field0: 345991905, Field1: [80,105], Field2: {rows: [[206,160]], baseline: 0, width: 1, flag: 1}}, {Field0: 631217891, Field1: [101,113,99,111,108,111,110], Field2: {rows: [[62,62,62,32,62,44,32,226,136,185]], baseline: 0, width: 8, flag: 2}}, {Field0: 1697382115, Field1: [118,97,114,107,97,112,112,97], Field2: {rows: [[207,176]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 497549031, Field1: [101,108,108], Field2: {rows: [[226,132,147]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1187357976), Field1: [109,117], Field2: {rows: [[206,188]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1972195609), Field1: [100,105,109], Field2: {rows: [[100,105,109]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1516935444), Field1: [108,110,97,112,112,114,111,120], Field2: {rows: [[226,170,137]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1945859345), Field1: [79,69], Field2: {rows: [[197,146]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1631707890, Field1: [116,101,120,116,98,97,114], Field2: {rows: [[124]], baseline: 0, width: 1, flag: 0}}, {Field0: 156381939, Field1: [84,101,88], Field2: {rows: [[84,32,88], [32,69,32]], baseline: 0, width: 3, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-737534219), Field1: [108,116,105,109,101,115], Field2: {rows: [[226,139,137]], baseline: 0, width: 1, flag: 2}}, {Field0: (-567946507), Field1: [82,97,114,114], Field2: {rows: [[226,135,146]], baseline: 0, width: 1, flag: 2}}, {Field0: (-189001994), Field1: [118,97,114,116,114,105,97,110,103,108,101], Field2: {rows: [[226,150,179]], baseline: 0, width: 1, flag: 2}}, {Field0: 1167593205, Field1: [118,97,114,80,115,105], Field2: {rows: [[206,168]], baseline: 0, width: 1, flag: 1}}, {Field0: 820849399, Field1: [112,115,105], Field2: {rows: [[207,136]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-728388867), Field1: [110,112,114,101,99,101,113], Field2: {rows: [[226,139,160]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1786403073), Field1: [108,110,101,113,113], Field2: {rows: [[226,137,168]], baseline: 0, width: 1, flag: 2}}, {Field0: (-44866816), Field1: [69,116,97], Field2: {rows: [[72]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1857517823), Field1: [103,116,114,108,101,115,115], Field2: {rows: [[226,137,183]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 233755396, Field1: [66,98,98,107], Field2: {rows: [[107]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1970031867), Field1: [118,101,101], Field2: {rows: [[226,136,168]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 839637767, Field1: [108,97,110,103], Field2: {rows: [[226,159,168]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1432461559), Field1: [118,99,101,110,116,99,111,108,111,110], Field2: {rows: [[58]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-944697589), Field1: [118,97,114,114,104,111], Field2: {rows: [[207,177]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1484265230, Field1: [118,97,114,112,105], Field2: {rows: [[207,150]], baseline: 0, width: 1, flag: 1}}, {Field0: 93506319, Field1: [104,115,108,97,115,104], Field2: {rows: [[226,132,143]], baseline: 0, width: 1, flag: 1}}, {Field0: 723635984, Field1: [115,105,110,104], Field2: {rows: [[115,105,110,104]], baseline: 0, width: 4, flag: 4}}, {Field0: (-808573167), Field1: [109,112], Field2: {rows: [[226,136,147]], baseline: 0, width: 1, flag: 2}}, {Field0: (-831156463), Field1: [110,86,100,97,115,104], Field2: {rows: [[226,138,174]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1011195116), Field1: [108,101,102,116,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,134,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-316506345), Field1: [114,99,101,105,108], Field2: {rows: [[226,140,137]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1905710309), Field1: [82,115,104], Field2: {rows: [[226,134,177]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1628249312), Field1: [67,111,108,111,110,97,112,112,114,111,120], Field2: {rows: [[226,136,183,226,137,136]], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-2032217310), Field1: [115,104,111,114,116,109,105,100], Field2: {rows: [[226,136,163]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1282881757), Field1: [119,114], Field2: {rows: [[226,137,128]], baseline: 0, width: 1, flag: 2}}, {Field0: 201751332, Field1: [99,105,114,99,108,101,100,82], Field2: {rows: [[194,174]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1853396185), Field1: [110,105], Field2: {rows: [[226,136,139]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1194945752), Field1: [85,112,100,111,119,110,97,114,114,111,119], Field2: {rows: [[226,135,149]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2121473240), Field1: [99,111,115,101,99], Field2: {rows: [[99,111,115,101,99]], baseline: 0, width: 5, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-418823380), Field1: [100,101,108,116,97], Field2: {rows: [[206,180]], baseline: 0, width: 1, flag: 1}}, {Field0: 64160556, Field1: [100,105,97,109,111,110,100,115,117,105,116], Field2: {rows: [[226,153,162]], baseline: 0, width: 1, flag: 0}}, {Field0: 1405992750, Field1: [101,113,113,99,111,108,111,110], Field2: {rows: [[226,137,149]], baseline: 0, width: 1, flag: 2}}, {Field0: 1068375855, Field1: [85,97,114,114], Field2: {rows: [[226,135,145]], baseline: 0, width: 1, flag: 2}}, {Field0: 1201711918, Field1: [108,118,101,114,116,110,101,113,113], Field2: {rows: [[226,137,168]], baseline: 0, width: 1, flag: 2}}, {Field0: 129810225, Field1: [115,117,98], Field2: {rows: [[226,138,130]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-616156365), Field1: [85,112,115,105,108,111,110], Field2: {rows: [[206,165]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 965596985, Field1: [67,117,112], Field2: {rows: [[226,139,147]], baseline: 0, width: 1, flag: 2}}, {Field0: 377626426, Field1: [100,111,116,112,108,117,115], Field2: {rows: [[226,136,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1447029955), Field1: [97,108,112,104,97], Field2: {rows: [[206,177]], baseline: 0, width: 1, flag: 1}}, {Field0: 1388739390, Field1: [99,100,111,116], Field2: {rows: [[226,139,133]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1317677249), Field1: [119,101,105,101,114,112], Field2: {rows: [[226,132,152]], baseline: 0, width: 1, flag: 1}}, {Field0: 126402368, Field1: [98,111,120,109,105,110,117,115], Field2: {rows: [[226,138,159]], baseline: 0, width: 1, flag: 2}}, {Field0: 927969088, Field1: [115,117,112,115,101,116,101,113,113], Field2: {rows: [[226,171,134]], baseline: 0, width: 1, flag: 2}}, {Field0: (-978777278), Field1: [112,114,111,112,116,111], Field2: {rows: [[226,136,157]], baseline: 0, width: 1, flag: 2}}, {Field0: 2044716865, Field1: [115,115], Field2: {rows: [[195,159]], baseline: 0, width: 1, flag: 1}}, {Field0: (-838084796), Field1: [108,101,115,115,103,116,114], Field2: {rows: [[226,137,182]], baseline: 0, width: 1, flag: 2}}, {Field0: (-829358270), Field1: [116,101,120,116,113,117,111,116,101,100,98,108,114,105,103,104,116], Field2: {rows: [[226,128,157]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-389900469), Field1: [116,101,120,116,100,111,108,108,97,114], Field2: {rows: [[36]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 598895437, Field1: [109,105,110,117,115,99,111,108,111,110], Field2: {rows: [[226,136,185]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1181199183, Field1: [116,114,105,97,110,103,108,101,108,101,102,116], Field2: {rows: [[226,151,131]], baseline: 0, width: 1, flag: 0}}, {Field0: (-582685872), Field1: [68,97,114,114], Field2: {rows: [[226,135,147]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1009115312), Field1: [109,105,110,117,115,111], Field2: {rows: [[226,166,181]], baseline: 0, width: 1, flag: 0}}, {Field0: 499530577, Field1: [112,108,105,109], Field2: {rows: [[112,108,105,109]], baseline: 0, width: 4, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-114982060), Field1: [110,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,134,154]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1058309292), Field1: [115,109,105,108,101], Field2: {rows: [[226,140,163]], baseline: 0, width: 1, flag: 2}}, {Field0: 437992278, Field1: [112,114,101,99,97,112,112,114,111,120], Field2: {rows: [[226,170,183]], baseline: 0, width: 1, flag: 2}}, {Field0: 1034010455, Field1: [104,65,114,114], Field2: {rows: [[226,135,148]], baseline: 0, width: 1, flag: 2}}, {Field0: 1814794072, Field1: [110,101,120,105,115,116,115], Field2: {rows: [[226,136,132]], baseline: 0, width: 1, flag: 2}}, {Field0: (-848168103), Field1: [115,105,109,99,111,108,111,110,99,111,108,111,110], Field2: {rows: [[226,136,188,226,136,183]], baseline: 0, width: 2, flag: 2}}, {Field0: (-2083237030), Field1: [116,114,105,97,110,103,108,101,108,101,102,116,101,113], Field2: {rows: [[226,138,180]], baseline: 0, width: 1, flag: 2}}, {Field0: 624996184, Field1: [110,86,68,97,115,104], Field2: {rows: [[226,138,175]], baseline: 0, width: 1, flag: 2}}, {Field0: (-508762280), Field1: [118,97,114,71,97,109,109,97], Field2: {rows: [[206,147]], baseline: 0, width: 1, flag: 1}}, {Field0: (-582062244), Field1: [112,105], Field2: {rows: [[207,128]], baseline: 0, width: 1, flag: 1}}, {Field0: 485069654, Field1: [116,114,105,97,110,103,108,101], Field2: {rows: [[226,150,179]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1089835168), Field1: [97,112,112,114,111,120,101,113], Field2: {rows: [[226,137,138]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1376821406), Field1: [98,105,103,116,114,105,97,110,103,108,101,100,111,119,110], Field2: {rows: [[226,150,189]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1165389980), Field1: [100,111,119,110,104,97,114,112,111,111,110,114,105,103,104,116], Field2: {rows: [[226,135,130]], baseline: 0, width: 1, flag: 2}}, {Field0: (-498708635), Field1: [115,117,112,115,101,116,101,113], Field2: {rows: [[226,138,135]], baseline: 0, width: 1, flag: 2}}, {Field0: 1390254950, Field1: [118,97,114,79,109,101,103,97], Field2: {rows: [[206,169]], baseline: 0, width: 1, flag: 1}}, {Field0: 113278823, Field1: [99,117,112], Field2: {rows: [[226,136,170]], baseline: 0, width: 1, flag: 2}}, {Field0: 775896934, Field1: [99,110,117,109,115], Field2: {rows: [[226,132,130]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1421636764), Field1: [97,110,103,108,101], Field2: {rows: [[226,136,160]], baseline: 0, width: 1, flag: 0}}, {Field0: 1368969066, Field1: [79,109,105,99,114,111,110], Field2: {rows: [[79]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1825022101), Field1: [100,111,116,115,99], Field2: {rows: [[226,128,166]], baseline: 0, width: 1, flag: 0}}, {Field0: 1049816935, Field1: [115,104,97,114,112], Field2: {rows: [[226,153,175]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-660215953), Field1: [98,108,97,99,107,116,114,105,97,110,103,108,101,100,111,119,110], Field2: {rows: [[226,150,188]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 701244274, Field1: [101,109,112,116,121], Field2: {rows: [[226,136,133]], baseline: 0, width: 1, flag: 2}}, {Field0: (-164919438), Field1: [103,110,115,105,109], Field2: {rows: [[226,139,167]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1450188941), Field1: [115,116,97,114], Field2: {rows: [[226,139,134]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1706303621), Field1: [100,65,114,114], Field2: {rows: [[226,135,147]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-250139779), Field1: [116,101,120,116,101,109,100,97,115,104], Field2: {rows: [[226,128,148]], baseline: 0, width: 1, flag: 0}}, {Field0: 1726374782, Field1: [99,105,114,99,108,101,100,83], Field2: {rows: [[226,147,136]], baseline: 0, width: 1, flag: 0}}, {Field0: 268964735, Field1: [99,105,114,99,108,101,100,97,115,116], Field2: {rows: [[226,138,155]], baseline: 0, width: 1, flag: 2}}, {Field0: (-722765953), Field1: [102,97,108,108,105,110,103,100,111,116,115,101,113], Field2: {rows: [[226,137,146]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 978164610, Field1: [110,108,101,115,115], Field2: {rows: [[226,137,174]], baseline: 0, width: 1, flag: 2}}, {Field0: 1202677635, Field1: [114,112,97,114,101,110], Field2: {rows: [[41]], baseline: 0, width: 1, flag: 0}}, {Field0: 1073095556, Field1: [112,104,105], Field2: {rows: [[207,149]], baseline: 0, width: 1, flag: 1}}, {Field0: (-902326395), Field1: [97,114,99,99,111,115], Field2: {rows: [[97,114,99,99,111,115]], baseline: 0, width: 6, flag: 4}}, {Field0: 104139654, Field1: [100,111,117,98,108,101,98,97,114,119,101,100,103,101], Field2: {rows: [[226,169,158]], baseline: 0, width: 1, flag: 2}}, {Field0: (-296343675), Field1: [116,97,110,104], Field2: {rows: [[116,97,110,104]], baseline: 0, width: 4, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1878301815), Field1: [114,105,103,104,116,104,97,114,112,111,111,110,117,112], Field2: {rows: [[226,135,128]], baseline: 0, width: 1, flag: 2}}, {Field0: 1586769802, Field1: [108,108,108,101,115,115], Field2: {rows: [[226,139,152]], baseline: 0, width: 1, flag: 2}}, {Field0: 1991520139, Field1: [97,108,101,102,115,121,109], Field2: {rows: [[226,132,181]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 773731214, Field1: [115,117,98,115,101,116,110,101,113], Field2: {rows: [[226,138,138]], baseline: 0, width: 1, flag: 2}}, {Field0: 1642151823, Field1: [115,117,112,115,101,116,110,101,113,113], Field2: {rows: [[226,171,140]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-399796335), Field1: [99,117,114,108,121,118,101,101], Field2: {rows: [[226,139,142]], baseline: 0, width: 1, flag: 2}}, {Field0: 1863581586, Field1: [99,108,117,98,115,117,105,116], Field2: {rows: [[226,153,163]], baseline: 0, width: 1, flag: 0}}, {Field0: 1089098643, Field1: [99,105,114,99,101,113], Field2: {rows: [[226,137,151]], baseline: 0, width: 1, flag: 2}}, {Field0: (-983711852), Field1: [98,117,109,112,101,113], Field2: {rows: [[226,137,143]], baseline: 0, width: 1, flag: 2}}, {Field0: 626165651, Field1: [99,100,111,116,115], Field2: {rows: [[226,139,175]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-135784553), Field1: [114,105,103,104,116,114,105,103,104,116,97,114,114,111,119,115], Field2: {rows: [[226,135,137]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-347878501), Field1: [114,105,103,104,116,104,97,114,112,111,111,110,100,111,119,110], Field2: {rows: [[226,135,129]], baseline: 0, width: 1, flag: 2}}, {Field0: 1961500571, Field1: [83,117,98,115,101,116], Field2: {rows: [[226,139,144]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1325636708), Field1: [112,97,114,116,105,97,108], Field2: {rows: [[226,136,130]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1030514789), Field1: [109,97,120], Field2: {rows: [[109,97,120]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-647533664), Field1: [99,105,114,99,108,101,97,114,114,111,119,108,101,102,116], Field2: {rows: [[226,134,186]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2088133539, Field1: [110,111,116,110,105], Field2: {rows: [[226,136,140]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1130670173), Field1: [85,112,97,114,114,111,119], Field2: {rows: [[226,135,145]], baseline: 0, width: 1, flag: 2}}, {Field0: 1251576741, Field1: [97,115,121,109,112], Field2: {rows: [[226,137,141]], baseline: 0, width: 1, flag: 2}}, {Field0: (-949496923), Field1: [118,97,114,76,97,109,98,100,97], Field2: {rows: [[206,155]], baseline: 0, width: 1, flag: 1}}, {Field0: 508142500, Field1: [116,101,120,116,103,114,101,97,116,101,114], Field2: {rows: [[62]], baseline: 0, width: 1, flag: 0}}, {Field0: (-1519553629), Field1: [98,108,97,99,107,108,111,122,101,110,103,101], Field2: {rows: [[226,167,171]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-902478933), Field1: [108,111,110,103,108,101,102,116,97,114,114,111,119], Field2: {rows: [[226,159,181]], baseline: 0, width: 1, flag: 2}}, {Field0: 2018705324, Field1: [100,105,103,97,109,109,97], Field2: {rows: [[207,157]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1187603539), Field1: [98,105,103,99,97,112], Field2: {rows: [[226,139,130]], baseline: 0, width: 1, flag: 3}}, {Field0: 1543318445, Field1: [100,97,108,101,116,104], Field2: {rows: [[226,132,184]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-433189967), Field1: [78], Field2: {rows: [[226,132,149]], baseline: 0, width: 1, flag: 1}}, {Field0: 924587953, Field1: [100,105,97,109,111,110,100], Field2: {rows: [[226,139,132]], baseline: 0, width: 1, flag: 0}}, {Field0: 1813402546, Field1: [99,111,116,104], Field2: {rows: [[99,111,116,104]], baseline: 0, width: 4, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-817291339), Field1: [117,112,100,111,119,110,97,114,114,111,119], Field2: {rows: [[226,134,149]], baseline: 0, width: 1, flag: 2}}, {Field0: (-769796170), Field1: [107,97,112,112,97], Field2: {rows: [[206,186]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1976659016), Field1: [114,116,105,109,101,115], Field2: {rows: [[226,139,138]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1928334405), Field1: [118,97,114,115,117,98,115,101,116,110,101,113], Field2: {rows: [[226,138,138]], baseline: 0, width: 1, flag: 2}}, {Field0: (-31274052), Field1: [69,113,113,99,111,108,111,110], Field2: {rows: [[61,226,136,183]], baseline: 0, width: 2, flag: 2}}, {Field0: 1465733053, Field1: [97,112,112,114,111,120], Field2: {rows: [[226,137,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-166071362), Field1: [115,117,98,115,101,116,101,113], Field2: {rows: [[226,138,134]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1005448255), Field1: [97,101], Field2: {rows: [[195,166]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-774891575), Field1: [68,111,119,110,97,114,114,111,119], Field2: {rows: [[226,135,147]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 886597579, Field1: [100,101,103], Field2: {rows: [[100,101,103]], baseline: 0, width: 3, flag: 4}}, {Field0: 747939788, Field1: [97,114,103,109,97,120], Field2: {rows: [[97,114,103,226,128,137,109,97,120]], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2054813647, Field1: [98,105,103,116,114,105,97,110,103,108,101,117,112], Field2: {rows: [[226,150,179]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-288939055), Field1: [103,103,103,116,114], Field2: {rows: [[226,139,153]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-996883499), Field1: [110,108,101,113,113], Field2: {rows: [[226,137,176]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1772959704, Field1: [108,110,101,113], Field2: {rows: [[226,170,135]], baseline: 0, width: 1, flag: 2}}, {Field0: 1375335385, Field1: [108,101,102,116,114,105,103,104,116,115,113,117,105,103,97,114,114,111,119], Field2: {rows: [[226,134,173]], baseline: 0, width: 1, flag: 2}}, {Field0: 1312613338, Field1: [110,118,68,97,115,104], Field2: {rows: [[226,138,173]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 846101468, Field1: [110,116,114,105,97,110,103,108,101,114,105,103,104,116], Field2: {rows: [[226,139,171]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2075499555), Field1: [112,114,101,99,110,115,105,109], Field2: {rows: [[226,139,168]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2025091106), Field1: [99,100,111,116,112], Field2: {rows: [[226,139,133]], baseline: 0, width: 1, flag: 2}}, {Field0: (-606648354), Field1: [76,111,110,103,114,105,103,104,116,97,114,114,111,119], Field2: {rows: [[226,159,185]], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1515557918), Field1: [117,112,108,117,115], Field2: {rows: [[226,138,142]], baseline: 0, width: 1, flag: 2}}, {Field0: 1908426722, Field1: [77,117], Field2: {rows: [[77]], baseline: 0, width: 1, flag: 1}}, {Field0: (-2045698077), Field1: [80,114], Field2: {rows: [[80,114]], baseline: 0, width: 2, flag: 4}}, {Field0: (-757661723), Field1: [116,104], Field2: {rows: [[116,104]], baseline: 0, width: 2, flag: 4}}, {Field0: 1227092966, Field1: [108,110,115,105,109], Field2: {rows: [[226,139,166]], baseline: 0, width: 1, flag: 2}}, {Field0: (-573794331), Field1: [105,110,106,108,105,109], Field2: {rows: [[105,110,106,226,128,137,108,105,109]], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-810559509), Field1: [99,111,110,103], Field2: {rows: [[226,137,133]], baseline: 0, width: 1, flag: 2}}, {Field0: 1662921708, Field1: [88,105], Field2: {rows: [[206,158]], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-753883154), Field1: [118,97,114,112,104,105], Field2: {rows: [[207,134]], baseline: 0, width: 1, flag: 1}}, {Field0: 783613935, Field1: [108,101,102,116,114,105,103,104,116,104,97,114,112,111,111,110,115], Field2: {rows: [[226,135,139]], baseline: 0, width: 1, flag: 2}}, {Field0: (-826565649), Field1: [108,101,115,115,101,113,103,116,114], Field2: {rows: [[226,139,154]], baseline: 0, width: 1, flag: 2}}, {Field0: (-2057048081), Field1: [103,103,103], Field2: {rows: [[226,139,153]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1661005840), Field1: [115,105,109,99,111,108,111,110], Field2: {rows: [[226,136,188,58]], baseline: 0, width: 2, flag: 2}}, {Field0: 816394223, Field1: [110,103,101,113,113], Field2: {rows: [[226,137,177]], baseline: 0, width: 1, flag: 2}}, {Field0: 1170508784, Field1: [108,97,110,103,108,101], Field2: {rows: [[226,159,168]], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: (-1927886855), Field1: [66,101,116,97], Field2: {rows: [[66]], baseline: 0, width: 1, flag: 1}}, {Field0: (-1420442630), Field1: [98,111,119,116,105,101], Field2: {rows: [[226,139,136]], baseline: 0, width: 1, flag: 2}}, {Field0: (-1390482437), Field1: [111,100,111,116], Field2: {rows: [[226,138,153]], baseline: 0, width: 1, flag: 2}}, {Field0: 1269585915, Field1: [112,108,117,115,109,110], Field2: {rows: [[194,177]], baseline: 0, width: 1, flag: 2}}, {Field0: 1408007165, Field1: [111,101], Field2: {rows: [[197,147]], baseline: 0, width: 1, flag: 1}}, {Field0: 1811268606, Field1: [108,111,103], Field2: {rows: [[108,111,103]], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}], counter: 653};
    var nonCommands_2315259151 = [{Field0: [43], Field1: {rows: [[43]], baseline: 0, width: 1, flag: 2}}, {Field0: [45], Field1: {rows: [[226,136,146]], baseline: 0, width: 1, flag: 2}}, {Field0: [42], Field1: {rows: [[226,136,151]], baseline: 0, width: 1, flag: 2}}, {Field0: [47], Field1: {rows: [[47]], baseline: 0, width: 1, flag: 2}}, {Field0: [61], Field1: {rows: [[61]], baseline: 0, width: 1, flag: 2}}, {Field0: [60], Field1: {rows: [[60]], baseline: 0, width: 1, flag: 2}}, {Field0: [62], Field1: {rows: [[62]], baseline: 0, width: 1, flag: 2}}, {Field0: [27,113,117,97,108,115,99,111,108,111,110,99,111,108,111,110], Field1: {rows: [[61,226,136,183]], baseline: 0, width: 2, flag: 2}}, {Field0: [7,112,112,114,111,120,99,111,108,111,110,99,111,108,111,110], Field1: {rows: [[226,137,136,226,136,183]], baseline: 0, width: 2, flag: 2}}, {Field0: [13,111,108,111,110,99,111,108,111,110,97,112,112,114,111,120], Field1: {rows: [[226,136,183,226,137,136]], baseline: 0, width: 2, flag: 2}}, {Field0: [13,111,108,111,110,99,111,108,111,110,109,105,110,117,115], Field1: {rows: [[226,136,183,226,136,146]], baseline: 0, width: 2, flag: 2}}, {Field0: [13,111,108,111,110,101,113,117,97,108,115], Field1: {rows: [[226,137,148]], baseline: 0, width: 1, flag: 2}}, {Field0: [13,111,108,111,110,99,111,108,111,110,101,113,117,97,108,115], Field1: {rows: [[226,136,183,61]], baseline: 0, width: 2, flag: 2}}, {Field0: [13,111,108,111,110,99,111,108,111,110,115,105,109], Field1: {rows: [[226,136,183,226,136,188]], baseline: 0, width: 2, flag: 2}}, {Field0: [13,111,108,111,110,99,111,108,111,110], Field1: {rows: [[226,136,183]], baseline: 0, width: 1, flag: 2}}, {Field0: [40], Field1: {rows: [[40]], baseline: 0, width: 1, flag: 0}}, {Field0: [41], Field1: {rows: [[41]], baseline: 0, width: 1, flag: 0}}, {Field0: [91], Field1: {rows: [[91]], baseline: 0, width: 1, flag: 0}}, {Field0: [93], Field1: {rows: [[93]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,123], Field1: {rows: [[123]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,125], Field1: {rows: [[125]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,168], Field1: {rows: [[226,159,168]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,169], Field1: {rows: [[226,159,169]], baseline: 0, width: 1, flag: 0}}, {Field0: [124], Field1: {rows: [[226,136,163]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,124], Field1: {rows: [[226,136,165]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,136], Field1: {rows: [[226,140,136]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,137], Field1: {rows: [[226,140,137]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,138], Field1: {rows: [[226,140,138]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,140,139], Field1: {rows: [[226,140,139]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,166], Field1: {rows: [[226,159,166]], baseline: 0, width: 1, flag: 0}}, {Field0: [226,159,167], Field1: {rows: [[226,159,167]], baseline: 0, width: 1, flag: 0}}, {Field0: [44], Field1: {rows: [[44]], baseline: 0, width: 1, flag: 8}}, {Field0: [58], Field1: {rows: [[58]], baseline: 0, width: 1, flag: 8}}, {Field0: [92,37], Field1: {rows: [[37]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,35], Field1: {rows: [[35]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,38], Field1: {rows: [[38]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,95], Field1: {rows: [[95]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,45,45], Field1: {rows: [[226,128,147]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,45,45,45], Field1: {rows: [[226,128,148]], baseline: 0, width: 1, flag: 0}}, {Field0: [96], Field1: {rows: [[226,128,152]], baseline: 0, width: 1, flag: 0}}, {Field0: [34], Field1: {rows: [[34]], baseline: 0, width: 1, flag: 0}}, {Field0: [92,36], Field1: {rows: [[36]], baseline: 0, width: 1, flag: 0}}];
    var simpleDiacritics_2315256185 = [{Field0: [92,97,99,117,116,101], Field1: {Field0: [204,129], Field1: [203,143]}}, {Field0: [92,98,97,114], Field1: {Field0: [204,132], Field1: [95]}}, {Field0: [92,98,114,101,118,101], Field1: {Field0: [204,134], Field1: [226,143,145]}}, {Field0: [92,99,104,101,99,107], Field1: {Field0: [204,140], Field1: [203,135]}}, {Field0: [92,100,111,116], Field1: {Field0: [204,135], Field1: [46]}}, {Field0: [92,100,100,111,116], Field1: {Field0: [204,136], Field1: [194,168]}}, {Field0: [92,103,114,97,118,101], Field1: {Field0: [204,128], Field1: [203,142]}}, {Field0: [92,104,97,116], Field1: {Field0: [204,130], Field1: [234,158,136]}}, {Field0: [92,110,111,116], Field1: {Field0: [204,184], Field1: [47]}}, {Field0: [92,116,105,108,100,101], Field1: {Field0: [204,131], Field1: [203,183]}}, {Field0: [92,118,101,99], Field1: {Field0: [226,131,151], Field1: [226,134,146]}}];
var ConstSet111 = setConstr(1);
var ConstSet112 = setConstr(0);
var ConstSet113 = setConstr(1);
var ConstSet114 = setConstr(1);
var ConstSet115 = setConstr(0);
var ConstSet116 = setConstr(1);
var ConstSet117 = setConstr(1);
var ConstSet118 = setConstr(0);
    var alignFuncs_2332034016 = [HEX3Aanonymous_2332034004, HEX3Aanonymous_2332034008, HEX3Aanonymous_2332034012];
var ConstSet119 = setConstr(1);
var ConstSet120 = setConstr(1);
var ConstSet121 = setConstr(1);
var ConstSet122 = setConstr(1);
var ConstSet123 = setConstr(0);
var ConstSet124 = setConstr(0);
      var delimiterParts_2298480020 = {data: [{Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 132032417, Field1: [226,136,165], Field2: {Field0: [226,149,145], Field1: [226,149,145], Field2: [226,149,145]}}, {Field0: 1632932802, Field1: [91], Field2: {Field0: [226,142,161], Field1: [226,142,162], Field2: [226,142,163]}}, {Field0: (-289087198), Field1: [226,159,167], Field2: {Field0: [226,149,150], Field1: [226,149,145], Field2: [226,149,156]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: (-436772347), Field1: [41], Field2: {Field0: [226,142,158], Field1: [226,142,159], Field2: [226,142,160]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: (-1827680438), Field1: [226,140,136], Field2: {Field0: [226,142,161], Field1: [226,142,162], Field2: [226,142,162]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 501150701, Field1: [40], Field2: {Field0: [226,142,155], Field1: [226,142,156], Field2: [226,142,157]}}, {Field0: 243936301, Field1: [226,140,138], Field2: {Field0: [226,142,162], Field1: [226,142,162], Field2: [226,142,163]}}, {Field0: 1380037103, Field1: [226,159,166], Field2: {Field0: [226,149,147], Field1: [226,149,145], Field2: [226,149,153]}}, {Field0: 1862135120, Field1: [93], Field2: {Field0: [226,142,164], Field1: [226,142,165], Field2: [226,142,166]}}, {Field0: (-696588431), Field1: [226,140,139], Field2: {Field0: [226,142,165], Field1: [226,142,165], Field2: [226,142,166]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: (-1377921419), Field1: [226,136,163], Field2: {Field0: [226,148,130], Field1: [226,148,130], Field2: [226,148,130]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: (-2091933701), Field1: [226,140,137], Field2: {Field0: [226,142,164], Field1: [226,142,165], Field2: [226,142,165]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}], counter: 12};
    var extensibleArrowParts_2315255956 = [{Field0: [92,120,108,101,102,116,97,114,114,111,119], Field1: {Field0: [226,134,144], Field1: [226,134,144], Field2: [226,148,128], Field3: [226,148,128]}}, {Field0: [92,120,76,101,102,116,97,114,114,111,119], Field1: {Field0: [226,135,144], Field1: [226,135,144], Field2: [226,149,144], Field3: [226,149,144]}}, {Field0: [92,120,108,101,102,116,114,105,103,104,116,97,114,114,111,119], Field1: {Field0: [226,134,148], Field1: [226,134,144], Field2: [226,148,128], Field3: [226,134,146]}}, {Field0: [92,120,104,111,111,107,108,101,102,116,97,114,114,111,119], Field1: {Field0: [226,134,169], Field1: [226,134,144], Field2: [226,148,128], Field3: [226,149,175]}}, {Field0: [92,120,116,119,111,104,101,97,100,108,101,102,116,97,114,114,111,119], Field1: {Field0: [226,134,158], Field1: [226,134,158], Field2: [226,148,128], Field3: [226,148,128]}}, {Field0: [92,120,108,101,102,116,104,97,114,112,111,111,110,117,112], Field1: {Field0: [226,134,188], Field1: [226,134,188], Field2: [226,148,128], Field3: [226,148,128]}}, {Field0: [92,120,108,101,102,116,104,97,114,112,111,111,110,100,111,119,110], Field1: {Field0: [226,134,189], Field1: [226,134,189], Field2: [226,148,128], Field3: [226,148,128]}}, {Field0: [92,120,108,101,102,116,114,105,103,104,116,104,97,114,112,111,111,110,115], Field1: {Field0: [226,135,139], Field1: [226,165,170], Field2: [226,149,144], Field3: [226,165,173]}}, {Field0: [92,120,116,111,102,114,111,109], Field1: {Field0: [226,135,132], Field1: [226,134,144], Field2: [226,149,144], Field3: [226,134,146]}}, {Field0: [92,120,108,111,110,103,101,113,117,97,108], Field1: {Field0: [61], Field1: [226,149,144], Field2: [226,149,144], Field3: [226,149,144]}}, {Field0: [92,120,114,105,103,104,116,97,114,114,111,119], Field1: {Field0: [226,134,146], Field1: [226,148,128], Field2: [226,148,128], Field3: [226,134,146]}}, {Field0: [92,120,82,105,103,104,116,97,114,114,111,119], Field1: {Field0: [226,135,146], Field1: [226,149,144], Field2: [226,149,144], Field3: [226,135,146]}}, {Field0: [92,120,76,101,102,116,114,105,103,104,116,97,114,114,111,119], Field1: {Field0: [226,135,148], Field1: [226,135,144], Field2: [226,149,144], Field3: [226,135,146]}}, {Field0: [92,120,104,111,111,107,114,105,103,104,116,97,114,114,111,119], Field1: {Field0: [226,134,170], Field1: [226,149,176], Field2: [226,148,128], Field3: [226,134,146]}}, {Field0: [92,120,116,119,111,104,101,97,100,114,105,103,104,116,97,114,114,111,119], Field1: {Field0: [226,134,160], Field1: [226,148,128], Field2: [226,148,128], Field3: [226,134,160]}}, {Field0: [92,120,114,105,103,104,116,104,97,114,112,111,111,110,117,112], Field1: {Field0: [226,135,128], Field1: [226,148,128], Field2: [226,148,128], Field3: [226,135,128]}}, {Field0: [92,120,114,105,103,104,116,104,97,114,112,111,111,110,100,111,119,110], Field1: {Field0: [226,135,129], Field1: [226,148,128], Field2: [226,148,128], Field3: [226,135,129]}}, {Field0: [92,120,114,105,103,104,116,108,101,102,116,104,97,114,112,111,111,110,115], Field1: {Field0: [226,135,140], Field1: [226,165,171], Field2: [226,149,144], Field3: [226,165,172]}}, {Field0: [92,120,109,97,112,115,116,111], Field1: {Field0: [226,134,166], Field1: [226,148,156], Field2: [226,148,128], Field3: [226,134,146]}}];
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(1);
var ConstSet127 = setConstr(0);
var ConstSet128 = setConstr(1);
var ConstSet129 = setConstr(1);
var ConstSet130 = setConstr(0);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(0);
var ConstSet134 = setConstr(1);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(0);
          var subscripts_2315257577 = {data: [{Field0: (-1651658498), Field1: 45, Field2: [226,130,139]}, {Field0: 340567103, Field1: 101, Field2: [226,130,145]}, {Field0: (-1262851587), Field1: 109, Field2: [226,130,152]}, {Field0: (-1852580415), Field1: 961, Field2: [225,181,168]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 45316872, Field1: 54, Field2: [226,130,134]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-1131254452), Field1: 55, Field2: [226,130,135]}, {Field0: 131599437, Field1: 118, Field2: [225,181,165]}, {Field0: 1651272845, Field1: 967, Field2: [225,181,170]}, {Field0: (-720547953), Field1: 111, Field2: [226,130,146]}, {Field0: (-130464176), Field1: 105, Field2: [225,181,162]}, {Field0: (-1802190319), Field1: 49, Field2: [226,130,129]}, {Field0: (-632269230), Field1: 120, Field2: [226,130,147]}, {Field0: 922521427, Field1: 107, Field2: [226,130,150]}, {Field0: 1876833038, Field1: 947, Field2: [225,181,167]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 96048537, Field1: 114, Field2: [225,181,163]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1152145308, Field1: 115, Field2: [226,130,155]}, {Field0: 1890224028, Field1: 117, Field2: [225,181,164]}, {Field0: (-910705250), Field1: 32, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 889415264, Field1: 97, Field2: [226,130,144]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-1778223580), Field1: 52, Field2: [226,130,132]}, {Field0: 908899684, Field1: 104, Field2: [226,130,149]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1581067563, Field1: 56, Field2: [226,130,136]}, {Field0: 1049132588, Field1: 51, Field2: [226,130,131]}, {Field0: (-2116423573), Field1: 106, Field2: [226,177,188]}, {Field0: (-41588306), Field1: 48, Field2: [226,130,128]}, {Field0: 826013230, Field1: 61, Field2: [226,130,140]}, {Field0: (-1160343377), Field1: 112, Field2: [226,130,154]}, {Field0: (-1380996561), Field1: 116, Field2: [226,130,156]}, {Field0: (-21492693), Field1: 966, Field2: [225,181,169]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 2019811060, Field1: 40, Field2: [226,130,141]}, {Field0: (-1823011404), Field1: 41, Field2: [226,130,142]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-369358473), Field1: 57, Field2: [226,130,137]}, {Field0: (-1629987273), Field1: 108, Field2: [226,130,151]}, {Field0: (-2070212424), Field1: 946, Field2: [225,181,166]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-1712371396), Field1: 110, Field2: [226,130,153]}, {Field0: (-1941233091), Field1: 50, Field2: [226,130,130]}, {Field0: 1003719038, Field1: 53, Field2: [226,130,133]}, {Field0: (-1019208771), Field1: 43, Field2: [226,130,138]}], counter: 38};
          var superscripts_2315257572 = {data: [{Field0: 329902878, Field1: 8722, Field2: [226,129,187]}, {Field0: (-910705250), Field1: 32, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-1778223580), Field1: 52, Field2: [226,129,180]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 45316872, Field1: 54, Field2: [226,129,182]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1581067563, Field1: 56, Field2: [226,129,184]}, {Field0: 1049132588, Field1: 51, Field2: [194,179]}, {Field0: (-1131254452), Field1: 55, Field2: [226,129,183]}, {Field0: (-41588306), Field1: 48, Field2: [226,129,176]}, {Field0: 826013230, Field1: 61, Field2: [226,129,188]}, {Field0: (-130464176), Field1: 105, Field2: [226,129,177]}, {Field0: (-1802190319), Field1: 49, Field2: [194,185]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 2019811060, Field1: 40, Field2: [226,129,189]}, {Field0: (-1823011404), Field1: 41, Field2: [226,129,190]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-369358473), Field1: 57, Field2: [226,129,185]}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: (-1712371396), Field1: 110, Field2: [226,129,191]}, {Field0: (-1941233091), Field1: 50, Field2: [194,178]}, {Field0: 1003719038, Field1: 53, Field2: [226,129,181]}, {Field0: (-1019208771), Field1: 43, Field2: [226,129,186]}], counter: 18};
var ConstSet139 = setConstr(3, 4);
var ConstSet140 = setConstr(1);
var ConstSet141 = setConstr(1);
var ConstSet142 = setConstr(0);
var ConstSet143 = setConstr(0);
var ConstSet144 = setConstr(13, 10);
    var targetMapping_587202585 = new Uint8Array([0, 1, 2, 0]);
      var Literal_1593835747 = {kind: 4, base: 0};
      var Raw_1593835746 = {kind: 3, base: 0};
var ConstSet145 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet146 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet147 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet148 = setConstr([9, 13], 32, 91, 93);
var ConstSet149 = setConstr(0, 1);
var ConstSet150 = setConstr(0);
var ConstSet151 = setConstr(0, 1);
var ConstSet152 = setConstr();
var ConstSet153 = setConstr(0);
var ConstSet154 = setConstr(2);
var ConstSet155 = setConstr(0);
var ConstSet156 = setConstr(1);
var ConstSet157 = setConstr(0, 1);
var ConstSet158 = setConstr(2);
var ConstSet159 = setConstr(2);
var ConstSet160 = setConstr(2);
var ConstSet161 = setConstr(2);
var ConstSet162 = setConstr(0, 1);
var ConstSet163 = setConstr(0, 1);
var ConstSet164 = setConstr(0, 1);
var ConstSet165 = setConstr(0, 1);
var ConstSet166 = setConstr(0, 1);
var ConstSet167 = setConstr(0, 1);
var ConstSet168 = setConstr(2);
var ConstSet169 = setConstr(2);
var ConstSet170 = setConstr(2);
var ConstSet171 = setConstr(2);
var ConstSet172 = setConstr(2);
var ConstSet173 = setConstr(0, 1);
    var translations_1610612761 = [[[67,111,114,111,108,108,97,114,121], [68,197,175,115,108,101,100,101,107], [70,111,108,103,101,115,97,116,122]], [[68,101,102,105,110,105,116,105,111,110], [68,101,102,105,110,105,99,101], [68,101,102,105,110,105,116,105,111,110]], [[69,120,97,109,112,108,101], [80,197,153,195,173,107,108,97,100], [66,101,105,115,112,105,101,108]], [[69,120,101,114,99,105,115,101], [67,118,105,196,141,101,110,195,173], [195,156,98,117,110,103]], [[72,105,110,116], [78,195,161,112,111,118,196,155,100,97], [72,105,110,119,101,105,115]], [[101,110], [99,115], [100,101]], [[101,110,103,108,105,115,104], [99,122,101,99,104], [110,103,101,114,109,97,110]], [[76,101,109,109,97], [76,101,109,109,97], [76,101,109,109,97]], [[78,111,116,101], [80,111,122,110,195,161,109,107,97], [65,110,109,101,114,107,117,110,103]], [[80,114,111,111,102], [68,197,175,107,97,122], [66,101,119,101,105,115]], [[226,128,156,36,49,226,128,157], [226,128,158,36,49,226,128,156], [226,128,158,36,49,226,128,156]], [[83,111,108,117,116,105,111,110], [197,152,101,197,161,101,110,195,173], [76,195,182,115,117,110,103]], [[84,104,101,111,114,101,109], [86,196,155,116,97], [83,97,116,122]]];
var ConstSet174 = setConstr(3);
    var toLowerRanges_1040188404 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, (-2508), 7357, 7359, (-2508), 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, (-10315), 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_1040188405 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, (-7115), 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, (-7017), 8490, (-7883), 8491, (-7762), 8498, 528, 8579, 501, 11360, 501, 11362, (-10243), 11363, (-3314), 11364, (-10227), 11367, 501, 11369, 501, 11371, 501, 11373, (-10280), 11374, (-10249), 11375, (-10283), 11376, (-10282), 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, (-34832), 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, (-41780), 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, (-41808), 42923, (-41819), 42924, (-41815), 42925, (-41805), 42926, (-41808), 42928, (-41758), 42929, (-41782), 42930, (-41761), 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, (-41807), 42950, (-34884)]);
    var toUpperRanges_1040188406 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, (-5742), 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, (-6764), 43888, 43967, (-38364), 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_1040188407 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, (-5754), 7297, (-5753), 7298, (-5744), 7301, (-5743), 7302, (-5736), 7303, (-5681), 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, (-6705), 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, (-10295), 11366, (-10292), 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, (-6764), 11565, (-6764), 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, (-428)]);
    var alphaRanges_1040188409 = new Int32Array([65, 90, 97, 122, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 880, 884, 886, 887, 890, 893, 904, 906, 910, 929, 931, 1013, 1015, 1153, 1162, 1327, 1329, 1366, 1376, 1416, 1488, 1514, 1519, 1522, 1568, 1610, 1646, 1647, 1649, 1747, 1765, 1766, 1774, 1775, 1786, 1788, 1810, 1839, 1869, 1957, 1994, 2026, 2036, 2037, 2048, 2069, 2112, 2136, 2144, 2154, 2208, 2228, 2230, 2237, 2308, 2361, 2392, 2401, 2417, 2432, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2486, 2489, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2674, 2676, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2784, 2785, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2908, 2909, 2911, 2913, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3129, 3160, 3162, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3296, 3297, 3313, 3314, 3333, 3340, 3342, 3344, 3346, 3386, 3412, 3414, 3423, 3425, 3450, 3455, 3461, 3478, 3482, 3505, 3507, 3515, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3718, 3722, 3724, 3747, 3751, 3760, 3762, 3763, 3776, 3780, 3804, 3807, 3904, 3911, 3913, 3948, 3976, 3980, 4096, 4138, 4176, 4181, 4186, 4189, 4197, 4198, 4206, 4208, 4213, 4225, 4256, 4293, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024, 5109, 5112, 5117, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5873, 5880, 5888, 5900, 5902, 5905, 5920, 5937, 5952, 5969, 5984, 5996, 5998, 6000, 6016, 6067, 6176, 6264, 6272, 6276, 6279, 6312, 6320, 6389, 6400, 6430, 6480, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6656, 6678, 6688, 6740, 6917, 6963, 6981, 6987, 7043, 7072, 7086, 7087, 7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7296, 7304, 7312, 7354, 7357, 7359, 7401, 7404, 7406, 7411, 7413, 7414, 7424, 7615, 7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8031, 8061, 8064, 8116, 8118, 8124, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8336, 8348, 8458, 8467, 8473, 8477, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8579, 8580, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11502, 11506, 11507, 11520, 11557, 11568, 11623, 11648, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 12293, 12294, 12337, 12341, 12347, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12591, 12593, 12686, 12704, 12730, 12784, 12799, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42527, 42538, 42539, 42560, 42606, 42623, 42653, 42656, 42725, 42775, 42783, 42786, 42888, 42891, 42943, 42946, 42950, 42999, 43009, 43011, 43013, 43015, 43018, 43020, 43042, 43072, 43123, 43138, 43187, 43250, 43255, 43261, 43262, 43274, 43301, 43312, 43334, 43360, 43388, 43396, 43442, 43488, 43492, 43494, 43503, 43514, 43518, 43520, 43560, 43584, 43586, 43588, 43595, 43616, 43638, 43646, 43695, 43701, 43702, 43705, 43709, 43739, 43741, 43744, 43754, 43762, 43764, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43824, 43866, 43868, 43879, 43888, 44002, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64287, 64296, 64298, 64310, 64312, 64316, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 65536, 65547, 65549, 65574, 65576, 65594, 65596, 65597, 65599, 65613, 65616, 65629, 65664, 65786, 66176, 66204, 66208, 66256, 66304, 66335, 66349, 66368, 66370, 66377, 66384, 66421, 66432, 66461, 66464, 66499, 66504, 66511, 66560, 66717, 66736, 66771, 66776, 66811, 66816, 66855, 66864, 66915, 67072, 67382, 67392, 67413, 67424, 67431, 67584, 67589, 67594, 67637, 67639, 67640, 67647, 67669, 67680, 67702, 67712, 67742, 67808, 67826, 67828, 67829, 67840, 67861, 67872, 67897, 67968, 68023, 68030, 68031, 68112, 68115, 68117, 68119, 68121, 68149, 68192, 68220, 68224, 68252, 68288, 68295, 68297, 68324, 68352, 68405, 68416, 68437, 68448, 68466, 68480, 68497, 68608, 68680, 68736, 68786, 68800, 68850, 68864, 68899, 69376, 69404, 69424, 69445, 69600, 69622, 69635, 69687, 69763, 69807, 69840, 69864, 69891, 69926, 69968, 70002, 70019, 70066, 70081, 70084, 70144, 70161, 70163, 70187, 70272, 70278, 70282, 70285, 70287, 70301, 70303, 70312, 70320, 70366, 70405, 70412, 70415, 70416, 70419, 70440, 70442, 70448, 70450, 70451, 70453, 70457, 70493, 70497, 70656, 70708, 70727, 70730, 70784, 70831, 70852, 70853, 71040, 71086, 71128, 71131, 71168, 71215, 71296, 71338, 71424, 71450, 71680, 71723, 71840, 71903, 72096, 72103, 72106, 72144, 72203, 72242, 72284, 72329, 72384, 72440, 72704, 72712, 72714, 72750, 72818, 72847, 72960, 72966, 72968, 72969, 72971, 73008, 73056, 73061, 73063, 73064, 73066, 73097, 73440, 73458, 73728, 74649, 74880, 75075, 77824, 78894, 82944, 83526, 92160, 92728, 92736, 92766, 92880, 92909, 92928, 92975, 92992, 92995, 93027, 93047, 93053, 93071, 93760, 93823, 93952, 94026, 94099, 94111, 94176, 94177, 100352, 101106, 110592, 110878, 110928, 110930, 110948, 110951, 110960, 111355, 113664, 113770, 113776, 113788, 113792, 113800, 113808, 113817, 119808, 119892, 119894, 119964, 119966, 119967, 119973, 119974, 119977, 119980, 119982, 119993, 119997, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120138, 120144, 120146, 120485, 120488, 120512, 120514, 120538, 120540, 120570, 120572, 120596, 120598, 120628, 120630, 120654, 120656, 120686, 120688, 120712, 120714, 120744, 120746, 120770, 120772, 120779, 123136, 123180, 123191, 123197, 123584, 123627, 124928, 125124, 125184, 125251, 126464, 126467, 126469, 126495, 126497, 126498, 126505, 126514, 126516, 126519, 126541, 126543, 126545, 126546, 126561, 126562, 126567, 126570, 126572, 126578, 126580, 126583, 126585, 126588, 126592, 126601, 126603, 126619, 126625, 126627, 126629, 126633, 126635, 126651, 194560, 195101]);
    var alphaSinglets_1040188410 = new Int32Array([170, 181, 186, 748, 750, 895, 902, 908, 1369, 1749, 1791, 1808, 1969, 2042, 2074, 2084, 2088, 2365, 2384, 2482, 2493, 2510, 2556, 2654, 2749, 2768, 2809, 2877, 2929, 2947, 2972, 3024, 3133, 3200, 3261, 3294, 3389, 3406, 3517, 3716, 3749, 3773, 3782, 3840, 4159, 4193, 4238, 4295, 4301, 4696, 4800, 6103, 6108, 6314, 6823, 7418, 8025, 8027, 8029, 8126, 8305, 8319, 8450, 8455, 8469, 8484, 8486, 8488, 8526, 11559, 11565, 11631, 11823, 13312, 19893, 19968, 40943, 43259, 43471, 43642, 43697, 43712, 43714, 44032, 55203, 64285, 64318, 67592, 67644, 68096, 69415, 69956, 70006, 70106, 70108, 70280, 70461, 70480, 70751, 70855, 71236, 71352, 71935, 72161, 72163, 72192, 72250, 72272, 72349, 72768, 73030, 73112, 94032, 94179, 94208, 100343, 119970, 119995, 120134, 123214, 125259, 126500, 126503, 126521, 126523, 126530, 126535, 126537, 126539, 126548, 126551, 126553, 126555, 126557, 126559, 126564, 126590, 131072, 173782, 173824, 177972, 177984, 178205, 178208, 183969, 183984, 191456]);
    var spaceRanges_1040188411 = new Int32Array([9, 13, 32, 32, 133, 133, 160, 160, 5760, 5760, 8192, 8202, 8232, 8233, 8239, 8239, 8287, 8287, 12288, 12288]);
var ConstSet175 = setConstr(9, 10, 11);
var ConstSet176 = setConstr(9, 10, 11);
var ConstSet177 = setConstr(9, 10, 11);
var ConstSet178 = setConstr(9, 10, 11);
var ConstSet179 = setConstr(9, 10, 11);
var ConstSet180 = setConstr(9, 10, 11);
var ConstSet181 = setConstr(9, 10, 11);
var ConstSet182 = setConstr(9, 10, 11);
var ConstSet183 = setConstr(9, 10, 11);
var ConstSet184 = setConstr(9, 10, 11);
var ConstSet185 = setConstr(9, 10, 11);
var ConstSet186 = setConstr(9, 10, 11);
var ConstSet187 = setConstr(9, 10, 11);
var ConstSet188 = setConstr(9, 10, 11);
var ConstSet189 = setConstr(9, 10, 11);
var ConstSet190 = setConstr(9, 10, 11);
var ConstSet191 = setConstr(9, 10, 11);
var ConstSet192 = setConstr(9, 10, 11);
var ConstSet193 = setConstr(9, 10, 11);
var ConstSet194 = setConstr(9, 10, 11);
var ConstSet195 = setConstr(9, 10, 11);
var ConstSet196 = setConstr(9, 10, 11);
var ConstSet197 = setConstr(9, 10, 11);
var ConstSet198 = setConstr(9, 10, 11);
var ConstSet199 = setConstr(9, 10, 11);
var ConstSet200 = setConstr(9, 10, 11);
var ConstSet201 = setConstr(9, 10, 11);
var ConstSet202 = setConstr(9, 10, 11);
var ConstSet203 = setConstr(9, 10, 11);
var ConstSet204 = setConstr(9, 10, 11);
var ConstSet205 = setConstr(9, 10, 11);
var ConstSet206 = setConstr(9, 10, 11);
var ConstSet207 = setConstr(9, 10, 11);
var ConstSet208 = setConstr(9, 10, 11);
var ConstSet209 = setConstr(9, 10, 11);
var ConstSet210 = setConstr(9, 10, 11);
var ConstSet211 = setConstr(9, 10, 11);
var ConstSet212 = setConstr(9, 10, 11);
var ConstSet213 = setConstr(9, 10, 11);
var ConstSet214 = setConstr(9, 10, 11);
var ConstSet215 = setConstr(9, 10, 11);
var ConstSet216 = setConstr(9, 10, 11);
var ConstSet217 = setConstr(9, 10, 11);
var ConstSet218 = setConstr(9, 10, 11);
var ConstSet219 = setConstr(9, 10, 11);
var ConstSet220 = setConstr(9, 10, 11);
var ConstSet221 = setConstr(9, 10, 11);
var ConstSet222 = setConstr(9, 10, 11);
var ConstSet223 = setConstr(9, 10, 11);
var ConstSet224 = setConstr(9, 10, 11);
var ConstSet225 = setConstr(9, 10, 11);
var ConstSet226 = setConstr(9, 10, 11);
var ConstSet227 = setConstr(9, 10, 11);
var ConstSet228 = setConstr(9, 10, 11);
var ConstSet229 = setConstr(9, 10, 11);
var ConstSet230 = setConstr(9, 10, 11);
var ConstSet231 = setConstr(9, 10, 11);
var ConstSet232 = setConstr(9, 10, 11);
var ConstSet233 = setConstr(9, 10, 11);
var ConstSet234 = setConstr(9, 10, 11);
var ConstSet235 = setConstr(9, 10, 11);
var ConstSet236 = setConstr(9, 10, 11);
var ConstSet237 = setConstr(9, 10, 11);
var ConstSet238 = setConstr(9, 10, 11);
var ConstSet239 = setConstr(9, 10, 11);
var ConstSet240 = setConstr(9, 10, 11);
var ConstSet241 = setConstr(9, 10, 11);
var ConstSet242 = setConstr(9, 10, 11);
var ConstSet243 = setConstr(9, 10, 11);
var ConstSet244 = setConstr(9, 10, 11);
var ConstSet245 = setConstr(9, 10, 11);
var ConstSet246 = setConstr(9, 10, 11);
var ConstSet247 = setConstr(12, 18);
var ConstSet248 = setConstr(13, 19);
var ConstSet249 = setConstr(14);
var ConstSet250 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet251 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet252 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet253 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet254 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet255 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet256 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet257 = setConstr(12, 18);
var ConstSet258 = setConstr(13, 19);
var ConstSet259 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet260 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet261 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet262 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet263 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet264 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet265 = setConstr([25, 27]);
var ConstSet266 = setConstr();
var ConstSet267 = setConstr(13, 10, 0);
var ConstSet268 = setConstr();
var ConstSet269 = setConstr([48, 57]);
var ConstSet270 = setConstr([65, 90], [97, 122]);

function SetMinus(a_33557029, b_33557030) {
        var result = {};
    for (var elem in a_33557029) {
      if (!b_33557030[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet271 = setConstr([1, 255]);
var ConstSet272 = setConstr([65, 90], [97, 122]);
var ConstSet273 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet274 = setConstr([48, 57]);
var ConstSet275 = setConstr([48, 57]);

function negInt(a_33557092) {
  var result_33557093 = 0;

    result_33557093 = (a_33557092 * (-1));

  return result_33557093;

}
var ConstSet276 = setConstr(39, 34);
var ConstSet277 = setConstr(94, [48, 57]);

function absInt(a_33557098) {
    var Temporary1;

  var result_33557099 = 0;

    if ((a_33557098 < 0)) {
    Temporary1 = (a_33557098 * (-1));
    }
    else {
    Temporary1 = a_33557098;
    }
    
    result_33557099 = Temporary1;

  return result_33557099;

}
var ConstSet278 = setConstr(21, 17, 20, 18, 19);
var ConstSet279 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet280 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet281 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet282 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet283 = setConstr(9, 10, 11);
var ConstSet284 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet285 = setConstr(9, 10, 11);
var ConstSet286 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet287 = setConstr(9, 10, 11);
var ConstSet288 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet289 = setConstr(12, 18);
var ConstSet290 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet291 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet292 = setConstr(9, 32);
var ConstSet293 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet294 = setConstr(13, 19);
var ConstSet295 = setConstr(13, 19);
var ConstSet296 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet297 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet298 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);

function SetPlus(a_33557025, b_33557026) {
        var result = {};
    for (var elem in a_33557025) { result[elem] = true; }
    for (var elem in b_33557026) { result[elem] = true; }
    return result;
  

  
}
var ConstSet299 = setConstr(13, 19);
var ConstSet300 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet301 = setConstr(13, 19);
var ConstSet302 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet303 = setConstr(13, 19);
var ConstSet304 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet305 = setConstr(12, 18);
var ConstSet306 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
      var tokKindToStr_1493175766 = [[105,110,118,97,108,105,100], [91,69,79,70,93], [46], [95], [105,100,101,110,116,105,102,105,101,114], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [99,104,97,114,97,99,116,101,114,32,115,101,116], [40], [41], [123], [125], [123,64,125], [123,125], [60,45], [47], [42], [43], [38], [33], [63], [64], [98,117,105,108,116,45,105,110], [101,115,99,97,112,101,100], [36], [36], [94]];
var ConstSet307 = setConstr([48, 57]);
var ConstSet308 = setConstr([1, 47], [58, 255]);
var ConstSet309 = setConstr(32, [9, 13]);
var ConstSet310 = setConstr([1, 8], [14, 31], [33, 255]);
var ConstSet311 = setConstr([97, 122], [65, 90], 95, [48, 57]);
var ConstSet312 = setConstr([1, 47], [58, 64], [91, 94], 96, [123, 255]);
var ConstSet313 = setConstr([97, 122], [65, 90]);
var ConstSet314 = setConstr([1, 64], [91, 96], [123, 255]);
var ConstSet315 = setConstr([97, 122], [65, 90], 95);
var ConstSet316 = setConstr(12, 18);
var ConstSet317 = setConstr(13, 19);
var ConstSet318 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet319 = setConstr(0);

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556443()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet320 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet321 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet322 = setConstr(0, 1, 2);
var ConstSet323 = setConstr([65, 90], [97, 122]);
                    var Letters_754974734 = nimCopy(null, ConstSet323, NTI754974724);
var ConstSet324 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet325 = setConstr(39);
var ConstSet326 = setConstr(94, 95);
var ConstSet327 = setConstr(44, 59);
var ConstSet328 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet329 = setConstr(48, 49, 50, 51, 52, 53, 54, 55, 56, 57);
var ConstSet330 = setConstr(48, 49, 50, 51, 52, 53, 54, 55, 56, 57);
var ConstSet331 = setConstr(48, 49, 50, 51, 52, 53, 54, 55, 56, 57);
var ConstSet332 = setConstr(48, 49, 50, 51, 52, 53, 54, 55, 56, 57);
var ConstSet333 = setConstr(48, 49, 50, 51, 52, 53, 54, 55, 56, 57);
var ConstSet334 = setConstr(48, 49, 50, 51, 52, 53, 54, 55, 56, 57);
var ConstSet335 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet336 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet337 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet338 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet339 = setConstr(46, 94, 95);
var ConstSet340 = setConstr(33, 42, 43, 45, 47, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126);
var ConstSet341 = setConstr(33, 42, 43, 45, 47, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126);
                    var symbols_2432696453 = {data: [{Field0: 0, Field1: [], Field2: []}, {Field0: (-2100239359), Field1: [116,97], Field2: [92,116,97,117]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1780580861), Field1: [98], Field2: [98]}, {Field0: (-943235580), Field1: [107,101,114], Field2: [92,107,101,114]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 259535367, Field1: [69], Field2: [69]}, {Field0: (-1374693881), Field1: [80], Field2: [80]}, {Field0: 1082091529, Field1: [72], Field2: [72]}, {Field0: 1159691784, Field1: [112,104,42], Field2: [92,112,104,105]}, {Field0: 642562567, Field1: [83,83], Field2: [92,109,97,116,104,98,98,123,83,125]}, {Field0: (-323853812), Field1: [80,80], Field2: [92,109,97,116,104,98,98,123,80,125]}, {Field0: 1504061448, Field1: [97,116,97,110,104], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,97,114,103,116,97,110,104,125]}, {Field0: (-1586248180), Field1: [115,103,110], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,115,103,110,125]}, {Field0: (-1689236980), Field1: [60,66], Field2: [92,108,101,102,116,92,123]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 381449237, Field1: [111,109], Field2: [92,111,109,101,103,97]}, {Field0: (-242555882), Field1: [103], Field2: [103]}, {Field0: 1199411734, Field1: [121], Field2: [121]}, {Field0: (-1040803305), Field1: [122], Field2: [122]}, {Field0: 302271509, Field1: [126,126], Field2: [92,97,112,112,114,111,120]}, {Field0: 1875425301, Field1: [58,58], Field2: [92,100,98,108,99,111,108,111,110]}, {Field0: (-649725925), Field1: [73,111], Field2: [92,73,111,116,97]}, {Field0: 338914844, Field1: [42], Field2: [92,99,100,111,116]}, {Field0: (-883457507), Field1: [79,47], Field2: [92,101,109,112,116,121,115,101,116]}, {Field0: 1287706142, Field1: [115,105], Field2: [92,115,105,103,109,97]}, {Field0: 1422823453, Field1: [105,105,103], Field2: [92,105,105,110,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-819617247), Field1: [111,105,105,105,103], Field2: [92,111,105,105,105,110,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1939933661), Field1: [101,112,42], Field2: [92,101,112,115,105,108,111,110]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 269350439, Field1: [67,104], Field2: [92,67,104,105]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-579532246), Field1: [61,126], Field2: [92,101,113,115,105,109]}, {Field0: (-2128973781), Field1: [105], Field2: [105]}, {Field0: 492661292, Field1: [108], Field2: [108]}, {Field0: 1088214061, Field1: [110,117], Field2: [92,110,117]}, {Field0: 1070039083, Field1: [80,105,42], Field2: [92,118,97,114,80,105]}, {Field0: 1411226667, Field1: [85,112,42], Field2: [92,118,97,114,85,112,115,105,108,111,110]}, {Field0: (-1063896529), Field1: [60,45], Field2: [92,108,101,102,116,97,114,114,111,119]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1058937292), Field1: [112,105,42], Field2: [92,118,97,114,112,105]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-898344391), Field1: [106], Field2: [106]}, {Field0: 1884062777, Field1: [61,58], Field2: [92,101,113,113,99,111,108,111,110]}, {Field0: 728008763, Field1: [102], Field2: [102]}, {Field0: (-1992435655), Field1: [111,105,105,103], Field2: [92,111,105,105,110,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1994528318, Field1: [101,112], Field2: [92,118,97,114,101,112,115,105,108,111,110]}, {Field0: (-353695681), Field1: [99,111,115], Field2: [92,99,111,115]}, {Field0: (-1811561408), Field1: [79,109], Field2: [92,79,109,101,103,97]}, {Field0: (-337936319), Field1: [120,105], Field2: [92,120,105]}, {Field0: (-1203914176), Field1: [97,116,97,110], Field2: [92,97,114,99,116,97,110]}, {Field0: 2119752771, Field1: [111,45], Field2: [92,111,109,105,110,117,115]}, {Field0: (-520519612), Field1: [46,46,111,114], Field2: [92,108,111,114,92,99,100,111,116,115,92,108,111,114]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 175869510, Field1: [42,42,42], Field2: [92,99,111,112,114,111,100]}, {Field0: 1685750855, Field1: [84,104,42], Field2: [92,118,97,114,84,104,101,116,97]}, {Field0: 100232264, Field1: [105,105,105,103], Field2: [92,105,105,105,110,116]}, {Field0: (-473660855), Field1: [115,105,42], Field2: [92,118,97,114,115,105,103,109,97]}, {Field0: (-485476279), Field1: [60,61], Field2: [92,108,101]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1515227725, Field1: [67,97,112], Field2: [92,98,105,103,99,97,112]}, {Field0: (-827335602), Field1: [69,116], Field2: [92,69,116,97]}, {Field0: 856149071, Field1: [108,105,109,105,110,102], Field2: [92,108,105,109,105,110,102]}, {Field0: (-1859754929), Field1: [111,111], Field2: [92,99,105,114,99]}, {Field0: (-584452527), Field1: [89], Field2: [89]}, {Field0: 511459409, Field1: [101,120], Field2: [92,101,120,105,115,116,115]}, {Field0: 1231101011, Field1: [80,104,42], Field2: [92,118,97,114,80,104,105]}, {Field0: 260524116, Field1: [100,105,118], Field2: [92,100,105,118]}, {Field0: (-1112552363), Field1: [118], Field2: [118]}, {Field0: 1070808661, Field1: [108,103], Field2: [92,108,103]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1387482534), Field1: [122,101], Field2: [92,122,101,116,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1524906076, Field1: [109], Field2: [109]}, {Field0: 476236381, Field1: [62], Field2: [62]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-516762017), Field1: [99], Field2: [99]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1242215522, Field1: [46,46,97,110,100], Field2: [92,108,97,110,100,92,99,100,111,116,115,92,108,97,110,100]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-414576028), Field1: [108,105,109], Field2: [92,108,105,109]}, {Field0: 1609004644, Field1: [111,42], Field2: [92,111,100,111,116]}, {Field0: (-1006869914), Field1: [115,101,99], Field2: [92,115,101,99]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-802648470), Field1: [45,62,60,45], Field2: [92,114,105,103,104,116,108,101,102,116,97,114,114,111,119,115]}, {Field0: (-1169163669), Field1: [103,97,42], Field2: [92,100,105,103,97,109,109,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1384286829, Field1: [103,97], Field2: [92,103,97,109,109,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1030150544), Field1: [87], Field2: [87]}, {Field0: 793982576, Field1: [103,99,100], Field2: [92,103,99,100]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 655955059, Field1: [100], Field2: [100]}, {Field0: 1748272243, Field1: [111], Field2: [111]}, {Field0: 2128695924, Field1: [88,105,42], Field2: [92,118,97,114,88,105]}, {Field0: 576809076, Field1: [111,42,120], Field2: [92,111,116,105,109,101,115]}, {Field0: 1573281907, Field1: [60,98], Field2: [92,108,101,102,116,91]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1893200774), Field1: [108,110], Field2: [92,108,110]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1922557054, Field1: [79,42,120], Field2: [92,98,105,103,111,116,105,109,101,115]}, {Field0: 1700007039, Field1: [86], Field2: [86]}, {Field0: (-1982113152), Field1: [46,46,43], Field2: [43,92,99,100,111,116,115,43]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1480764286), Field1: [98,101], Field2: [92,98,101,116,97]}, {Field0: (-336826750), Field1: [60,45,42,45,62], Field2: [92,108,101,102,116,114,105,103,104,116,97,114,114,111,119,115]}, {Field0: 1964201604, Field1: [76,97,42], Field2: [92,118,97,114,76,97,109,98,100,97]}, {Field0: (-2144637308), Field1: [80,115,42], Field2: [92,118,97,114,80,115,105]}, {Field0: (-1700875130), Field1: [68,101], Field2: [92,68,101,108,116,97]}, {Field0: 1346844806, Field1: [98,62], Field2: [92,114,105,103,104,116,93]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1618119031), Field1: [84,97], Field2: [92,84,97,117]}, {Field0: (-861508982), Field1: [66], Field2: [66]}, {Field0: (-367198581), Field1: [67], Field2: [67]}, {Field0: 1184264842, Field1: [71,97,42], Field2: [92,118,97,114,71,97,109,109,97]}, {Field0: 1416010893, Field1: [72,72], Field2: [92,109,97,116,104,98,98,123,72,125]}, {Field0: 192819851, Field1: [97,108,108], Field2: [92,102,111,114,97,108,108]}, {Field0: (-284373361), Field1: [126,61], Field2: [92,115,105,109,101,113]}, {Field0: (-794650997), Field1: [60,60,60], Field2: [92,108,108,108]}, {Field0: (-855216501), Field1: [97,99,111,115,104], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,97,114,103,99,111,115,104,125]}, {Field0: (-1959384437), Field1: [42,120], Field2: [92,116,105,109,101,115]}, {Field0: (-1455205749), Field1: [62,112], Field2: [41]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1597029227), Field1: [107,97], Field2: [92,107,97,112,112,97]}, {Field0: 723937430, Field1: [58], Field2: [58]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 363704473, Field1: [81], Field2: [81]}, {Field0: (-271629670), Field1: [75], Field2: [75]}, {Field0: (-548756325), Field1: [97,99,116,103], Field2: [92,97,114,99,99,116,103]}, {Field0: (-894871908), Field1: [108,99,109], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,108,99,109,125]}, {Field0: 1035649181, Field1: [90], Field2: [90]}, {Field0: (-1611357027), Field1: [90,101], Field2: [92,90,101,116,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 2031123616, Field1: [62,62,62], Field2: [92,103,103,103]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1129326761, Field1: [46,46,42], Field2: [92,99,100,111,116,92,99,100,111,116,115,92,99,100,111,116]}, {Field0: (-706424150), Field1: [116,104,42], Field2: [92,118,97,114,116,104,101,116,97]}, {Field0: 128442538, Field1: [99,111,115,104], Field2: [92,99,111,115,104]}, {Field0: (-967714644), Field1: [110], Field2: [110]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1835942730), Field1: [79,43], Field2: [92,98,105,103,111,112,108,117,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 2028314809, Field1: [83,105,42], Field2: [92,118,97,114,83,105,103,109,97]}, {Field0: (-1944014662), Field1: [69,112], Field2: [92,69,112,115,105,108,111,110]}, {Field0: 1326387387, Field1: [99,115,99], Field2: [92,99,115,99]}, {Field0: 1005248700, Field1: [112,60], Field2: [40]}, {Field0: 1720810685, Field1: [117,112], Field2: [92,117,112,115,105,108,111,110]}, {Field0: 1166910142, Field1: [79], Field2: [79]}, {Field0: (-1163135297), Field1: [75,97], Field2: [92,75,97,112,112,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 130713793, Field1: [110,97], Field2: [92,110,97,98,108,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-13304124), Field1: [60,45,61], Field2: [92,76,101,102,116,97,114,114,111,119]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-347502391), Field1: [114,104], Field2: [92,114,104,111]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1783832884), Field1: [116,97,110], Field2: [92,116,97,110]}, {Field0: 236506317, Field1: [46,61], Field2: [92,100,111,116,101,113]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 952855762, Field1: [46,46,42,120], Field2: [92,116,105,109,101,115,92,99,100,111,116,115,92,116,105,109,101,115]}, {Field0: (-729632045), Field1: [104], Field2: [104]}, {Field0: (-2087052588), Field1: [83], Field2: [83]}, {Field0: (-229860141), Field1: [82,82], Field2: [92,109,97,116,104,98,98,123,82,125]}, {Field0: (-1515372845), Field1: [97,110,100], Field2: [92,108,97,110,100]}, {Field0: (-309991725), Field1: [62,62], Field2: [92,103,103]}, {Field0: (-2121057065), Field1: [115,105,110], Field2: [92,115,105,110]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-12644134), Field1: [111,43], Field2: [92,111,112,108,117,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1212450082), Field1: [99,104], Field2: [92,99,104,105]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1646279392, Field1: [117], Field2: [117]}, {Field0: 345991905, Field1: [80,105], Field2: [92,80,105]}, {Field0: (-892224286), Field1: [76,97], Field2: [92,76,97,109,98,100,97]}, {Field0: (-1199991581), Field1: [116,103], Field2: [92,116,103]}, {Field0: 70858980, Field1: [111,105,103], Field2: [92,111,105,110,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1972195609), Field1: [100,105,109], Field2: [92,100,105,109]}, {Field0: (-1187357976), Field1: [109,117], Field2: [92,109,117]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1121824492, Field1: [60,60], Field2: [92,108,108]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1021778670, Field1: [90,90], Field2: [92,109,97,116,104,98,98,123,90,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-11875599), Field1: [115], Field2: [115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1919294708, Field1: [33], Field2: [33]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-560628486), Field1: [109,105,110], Field2: [92,109,105,110]}, {Field0: 1234765051, Field1: [105,110,102], Field2: [92,105,110,102,116,121]}, {Field0: 1922319612, Field1: [58,62], Field2: [92,101,110,115,112,97,99,101,92,116,104,101,114,101,102,111,114,101,92,101,110,115,112,97,99,101]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 95561984, Field1: [67,67], Field2: [92,109,97,116,104,98,98,123,67,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1053487870), Field1: [85], Field2: [85]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 647721221, Field1: [66,60], Field2: [92,123]}, {Field0: 1673550086, Field1: [68], Field2: [68]}, {Field0: (-1742008058), Field1: [70], Field2: [70]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1556326665, Field1: [84,104], Field2: [92,84,104,101,116,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 672454412, Field1: [88], Field2: [88]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 810709774, Field1: [60,45,60,45], Field2: [92,108,101,102,116,108,101,102,116,97,114,114,111,119,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-187569904), Field1: [99,111,116], Field2: [92,99,111,116]}, {Field0: 131900689, Field1: [105,110], Field2: [92,105,110]}, {Field0: 723635984, Field1: [115,105,110,104], Field2: [92,115,105,110,104]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 24231188, Field1: [60,58], Field2: [123,92,101,110,115,112,97,99,101,92,98,101,99,97,117,115,101,92,101,110,115,112,97,99,101,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-118743271), Field1: [80,115], Field2: [92,80,115,105]}, {Field0: (-1475575014), Field1: [79,109,42], Field2: [92,118,97,114,79,109,101,103,97]}, {Field0: 1050319643, Field1: [120], Field2: [120]}, {Field0: (-1534529765), Field1: [60,61,61], Field2: [92,105,109,112,108,105,101,100,98,121]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-12346081), Field1: [119], Field2: [119]}, {Field0: (-112897249), Field1: [45], Field2: [45]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1513746142), Field1: [115,60], Field2: [92,115,117,98,115,101,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1853396185), Field1: [110,105], Field2: [92,110,105]}, {Field0: (-2121473240), Field1: [99,111,115,101,99], Field2: [92,99,111,115,101,99]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 416916780, Field1: [112,115], Field2: [92,112,115,105]}, {Field0: (-1412952276), Field1: [81,81], Field2: [92,109,97,116,104,98,98,123,81,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 886647601, Field1: [78,78], Field2: [92,109,97,116,104,98,98,123,78,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 965596985, Field1: [67,117,112], Field2: [92,98,105,103,99,117,112]}, {Field0: 1286205753, Field1: [46,46,118], Field2: [92,118,100,111,116,115]}, {Field0: 1989892411, Field1: [99,97,112], Field2: [92,99,97,112]}, {Field0: (-592170692), Field1: [115,62], Field2: [92,115,117,112,115,101,116]}, {Field0: 2073825597, Field1: [97,116,103], Field2: [92,97,114,99,116,103]}, {Field0: (-1727679682), Field1: [126], Field2: [92,115,105,109]}, {Field0: (-214335681), Field1: [76], Field2: [76]}, {Field0: (-216166593), Field1: [105,111], Field2: [92,105,111,116,97]}, {Field0: 413233472, Field1: [71,97], Field2: [92,71,97,109,109,97]}, {Field0: 1727929153, Field1: [68,101,42], Field2: [92,118,97,114,68,101,108,116,97]}, {Field0: 1772874048, Field1: [109,111,100], Field2: [92,98,109,111,100]}, {Field0: (-1062735037), Field1: [97,99,111,115], Field2: [92,97,114,99,99,111,115]}, {Field0: (-481377467), Field1: [62,61], Field2: [92,103,101]}, {Field0: 1687707964, Field1: [43], Field2: [43]}, {Field0: 1522424135, Field1: [46,46,99,117,112], Field2: [92,99,117,112,92,99,100,111,116,115,92,99,117,112]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-323816630), Field1: [45,62], Field2: [92,116,111]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-897065139), Field1: [116], Field2: [116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1769327440, Field1: [85,112], Field2: [92,85,112,115,105,108,111,110]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-179652781), Field1: [84], Field2: [84]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1265018197, Field1: [110,105,110], Field2: [92,110,111,116,105,110]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1778153125), Field1: [65,110,100], Field2: [92,98,105,103,119,101,100,103,101]}, {Field0: (-582062244), Field1: [112,105], Field2: [92,112,105]}, {Field0: 2028632924, Field1: [61,62], Field2: [92,82,105,103,104,116,97,114,114,111,119]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1182784865, Field1: [115,117,112], Field2: [92,115,117,112]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1848024221), Field1: [115,45], Field2: [92,115,101,116,109,105,110,117,115]}, {Field0: (-1065020572), Field1: [97,115,105,110,104], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,97,114,103,115,105,110,104,125]}, {Field0: 222170979, Field1: [46,46,99,97,112], Field2: [92,99,97,112,92,99,100,111,116,115,92,99,97,112]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1701593959, Field1: [101], Field2: [101]}, {Field0: 117848935, Field1: [111,114], Field2: [92,108,111,114]}, {Field0: 1968510312, Field1: [99,114,100], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,99,97,114,100,125]}, {Field0: 101877610, Field1: [77], Field2: [77]}, {Field0: 113278823, Field1: [99,117,112], Field2: [92,99,117,112]}, {Field0: (-1682520213), Field1: [46,46,100], Field2: [92,100,100,111,116,115]}, {Field0: 623308141, Field1: [61,61,62], Field2: [92,105,109,112,108,105,101,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-75058833), Field1: [46,46,108], Field2: [92,108,100,111,116,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 572399988, Field1: [110,111,116], Field2: [92,108,110,111,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1062401919, Field1: [62,60], Field2: [92,103,116,114,108,101,115,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-296343675), Field1: [116,97,110,104], Field2: [92,116,97,110,104]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 85375367, Field1: [112,62], Field2: [92,114,105,103,104,116,41]}, {Field0: (-474945144), Field1: [82,104], Field2: [92,82,104,111]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1700912246), Field1: [62,98], Field2: [93]}, {Field0: (-1638277237), Field1: [98,60], Field2: [91]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-278003822), Field1: [58,45,62], Field2: [92,109,97,112,115,116,111]}, {Field0: 903884179, Field1: [105,102,109], Field2: [92,105,110,102]}, {Field0: 374178196, Field1: [60], Field2: [60]}, {Field0: 1886343573, Field1: [79,42], Field2: [92,98,105,103,111,100,111,116]}, {Field0: (-161088618), Field1: [43,45], Field2: [92,112,109]}, {Field0: (-1394130026), Field1: [111,47], Field2: [92,111,115,108,97,115,104]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 2098726809, Field1: [71], Field2: [71]}, {Field0: (-1737498726), Field1: [112], Field2: [112]}, {Field0: 843816345, Field1: [101,116], Field2: [92,101,116,97]}, {Field0: (-1388711527), Field1: [115,62,61], Field2: [92,115,117,112,115,101,116,101,113]}, {Field0: (-1030514789), Field1: [109,97,120], Field2: [92,109,97,120]}, {Field0: 258265502, Field1: [61], Field2: [61]}, {Field0: 153636250, Field1: [100,101,116], Field2: [92,100,101,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 2017924005, Field1: [62,66], Field2: [92,125]}, {Field0: 543259558, Field1: [100,101], Field2: [92,100,101,108,116,97]}, {Field0: 1275051430, Field1: [60,62], Field2: [92,108,101,115,115,103,116,114]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-435791956), Field1: [100,100], Field2: [92,109,97,116,104,114,109,123,100,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-433189967), Field1: [78], Field2: [78]}, {Field0: 1009084850, Field1: [97], Field2: [97]}, {Field0: (-60326990), Field1: [60,112], Field2: [92,108,101,102,116,40]}, {Field0: 1758505908, Field1: [66,62], Field2: [92,114,105,103,104,116,92,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-648862794), Field1: [60,61,62], Field2: [92,105,102,102]}, {Field0: (-1575669322), Field1: [115,60,61], Field2: [92,115,117,98,115,101,116,101,113]}, {Field0: 1073341368, Field1: [112,100], Field2: [92,112,97,114,116,105,97,108]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1423551419, Field1: [111,114,100], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,111,114,100,125]}, {Field0: 1234851772, Field1: [45,43], Field2: [92,109,112]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 823349694, Field1: [108,97], Field2: [92,108,97,109,98,100,97]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-891741760), Field1: [43,43], Field2: [92,115,117,109]}, {Field0: 2041800129, Field1: [82], Field2: [82]}, {Field0: 1386802625, Field1: [95,100], Field2: [92,44,92,109,97,116,104,114,109,123,100,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1978398268), Field1: [66,101], Field2: [92,66,101,116,97]}, {Field0: 1303600580, Field1: [97,99,111,116], Field2: [92,111,112,101,114,97,116,111,114,110,97,109,101,123,97,114,99,99,111,116,125]}, {Field0: (-769423932), Field1: [97,114,103], Field2: [92,97,114,103]}, {Field0: (-2139331129), Field1: [108,105,109,115,117,112], Field2: [92,108,105,109,115,117,112]}, {Field0: 1117638085, Field1: [46,46,99], Field2: [92,99,100,111,116,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1418846154, Field1: [73], Field2: [73]}, {Field0: (-1451244597), Field1: [80,104], Field2: [92,80,104,105]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 418250701, Field1: [97,115,105,110], Field2: [92,97,114,99,115,105,110]}, {Field0: 1423767502, Field1: [65], Field2: [65]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 868048848, Field1: [114,104,42], Field2: [92,118,97,114,114,104,111]}, {Field0: (-809654831), Field1: [107], Field2: [107]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-433708589), Field1: [97,108], Field2: [92,97,108,112,104,97]}, {Field0: (-751383084), Field1: [65,108], Field2: [92,65,108,112,104,97]}, {Field0: (-221915691), Field1: [101,120,112], Field2: [92,101,120,112]}, {Field0: 904320981, Field1: [42,42], Field2: [92,112,114,111,100]}, {Field0: 1638369751, Field1: [74], Field2: [74]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1063156259), Field1: [60,45,62], Field2: [92,108,101,102,116,114,105,103,104,116,97,114,114,111,119]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 634771938, Field1: [112,104], Field2: [92,118,97,114,112,104,105]}, {Field0: 1908426722, Field1: [77,117], Field2: [92,77,117]}, {Field0: 1761917923, Field1: [83,105], Field2: [92,83,105,103,109,97]}, {Field0: (-757661723), Field1: [116,104], Field2: [92,116,104,101,116,97]}, {Field0: 1897493989, Field1: [78,117], Field2: [92,78,117]}, {Field0: 815995367, Field1: [107,97,42], Field2: [92,118,97,114,107,97,112,112,97]}, {Field0: (-8255000), Field1: [113], Field2: [113]}, {Field0: 515634662, Field1: [58,61], Field2: [92,99,111,108,111,110,101,113,113]}, {Field0: (-586462749), Field1: [79,114], Field2: [92,98,105,103,118,101,101]}, {Field0: 899395563, Field1: [67,111], Field2: [92,99,111,109,112,108,101,109,101,110,116]}, {Field0: 1662921708, Field1: [88,105], Field2: [92,88,105]}, {Field0: (-522733077), Field1: [42,97], Field2: [42]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-51399697), Field1: [33,61], Field2: [92,110,101]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1553167345, Field1: [114], Field2: [114]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-256122379), Field1: [47,61], Field2: [92,110,101]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 217630715, Field1: [61,61], Field2: [92,101,113,117,105,118]}, {Field0: 833399803, Field1: [105,103], Field2: [92,105,110,116]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1811268606, Field1: [108,111,103], Field2: [92,108,111,103]}, {Field0: (-1153478657), Field1: [45,62,45,62], Field2: [92,114,105,103,104,116,114,105,103,104,116,97,114,114,111,119,115]}], counter: 280};
var ConstSet342 = setConstr(65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122);
var ConstSet343 = setConstr(65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122);
var ConstSet344 = setConstr(33, 37, 44, 58, 59, 124);
var ConstSet345 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet346 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet347 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet348 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet349 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet350 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet351 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet352 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet353 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet354 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet355 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet356 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet357 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet358 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet359 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet360 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet361 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet362 = setConstr(9, 10, 11, 12, 13, 32);
                  var names_2415928105 = {data: [{Field0: (-1597319329), Field1: [109,116,92,123], Field2: [66,109,97,116,114,105,120]}, {Field0: (-847529999), Field1: [109,116,91], Field2: [98,109,97,116,114,105,120]}, {Field0: 2007856002, Field1: [109,116,124], Field2: [118,109,97,116,114,105,120]}, {Field0: (-299845231), Field1: [109,116,124,124], Field2: [86,109,97,116,114,105,120]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-393886251), Field1: [109,116,123], Field2: [109,97,116,114,105,120]}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-661898889), Field1: [99,115,123], Field2: [99,97,115,101,115]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1039003265), Field1: [109,116,40], Field2: [112,109,97,116,114,105,120]}], counter: 7};
var ConstSet363 = setConstr(9, 10, 11, 12, 13, 32);
var ConstSet364 = setConstr(33, 42, 43, 45, 47, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126);
                  var commands_2415928919 = {data: [{Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 72720554, Field1: [115,113], Field2: [123,92,115,113,114,116,36,49,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}], counter: 1};
var ConstSet365 = setConstr(33, 42, 43, 45, 47, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126);
                  var commands_2415929481 = {data: [{Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: (-1544268005), Field1: [114,116], Field2: [123,92,115,113,114,116,91,36,49,93,36,50,125]}, {Field0: 706860171, Field1: [110,99,114], Field2: [123,92,98,105,110,111,109,36,49,36,50,125]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 1248550479, Field1: [47], Field2: [123,92,102,114,97,99,36,49,36,50,125]}], counter: 3};
                  var equivalents_2415932552 = {data: [{Field0: 1790325311, Field1: [124,124], Field2: {Field0: [92,86,101,114,116,32], Field1: [92,86,101,114,116]}}, {Field0: (-1533267217), Field1: [123,95], Field2: {Field0: [92,108,102,108,111,111,114,32], Field1: [92,114,102,108,111,111,114]}}, {Field0: 1632932802, Field1: [91], Field2: {Field0: [91], Field1: [93]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 958537178, Field1: [123,94], Field2: {Field0: [92,108,99,101,105,108,32], Field1: [92,114,99,101,105,108]}}, {Field0: 711529291, Field1: [124], Field2: {Field0: [124], Field1: [124]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: 501150701, Field1: [40], Field2: {Field0: [40], Field1: [41]}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}, {Field0: (-2028492977), Field1: [60,123], Field2: {Field0: [92,108,97,110,103,108,101,32], Field1: [92,114,97,110,103,108,101]}}], counter: 7};
var ConstSet366 = setConstr(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255);
var ConstSet367 = setConstr(39);
var ConstSet368 = setConstr(94, 95);
    var heineParser_2415934340 = {fn_init: fn_initHEX60gensym395_2415919618, fn_run: fn_runHEX60gensym395_2415919987};
var ConstSet369 = setConstr(0, 1);
var ConstSet370 = setConstr(0);
var ConstSet371 = setConstr(0, 1);
var ConstSet372 = setConstr(0);
var ConstSet373 = setConstr(0);
    var prismCss_1476395040 = [makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#000;background:0 0;text-shadow:0 1px #fff;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{text-shadow:none;background:#b3d4fc}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{text-shadow:none;background:#b3d4fc}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#f5f2f0}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#9a6e3a;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.class-name,.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-dark&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#fff;background:0 0;text-shadow:0 -.1em .2em #000;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}:not(pre)>code[class*=language-],pre[class*=language-]{background:#4c3f33}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:.3em solid #7a6651;border-radius:.5em;box-shadow:1px 1px .5em #000 inset}:not(pre)>code[class*=language-]{padding:.15em .2em .05em;border-radius:.3em;border:.13em solid #7a6651;box-shadow:1px 1px .3em -.1em #000 inset;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#997f66}.token.punctuation{opacity:.7}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#d1939e}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#bce051}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f4b73d}.token.atrule,.token.attr-value,.token.keyword{color:#d1939e}.token.important,.token.regex{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-funky&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:.4em .8em;margin:.5em 0;overflow:auto;background:url(\'data:image/svg+xml;charset=utf-8,<svg%20version%3D\"1.1\"%20xmlns%3D\"http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\"%20width%3D\"100\"%20height%3D\"100\"%20fill%3D\"rgba(0%2C0%2C0%2C.2)\">%0D%0A<polygon%20points%3D\"0%2C50%2050%2C0%200%2C0\"%20%2F>%0D%0A<polygon%20points%3D\"0%2C100%2050%2C100%20100%2C50%20100%2C0\"%20%2F>%0D%0A<%2Fsvg>\');background-size:1em 1em}code[class*=language-]{background:#000;color:#fff;box-shadow:-.3em 0 0 .3em #000,.3em 0 0 .3em #000}:not(pre)>code[class*=language-]{padding:.2em;border-radius:.3em;box-shadow:none;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#aaa}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#0cf}.token.attr-name,.token.builtin,.token.char,.token.selector,.token.string{color:#ff0}.language-css .token.string,.token.entity,.token.inserted,.token.operator,.token.url,.token.variable{color:#9acd32}.token.atrule,.token.attr-value,.token.keyword{color:#ff1493}.token.important,.token.regex{color:orange}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}pre.diff-highlight.diff-highlight>code .token.deleted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.deleted:not(.prefix){background-color:rgba(255,0,0,.3);display:inline}pre.diff-highlight.diff-highlight>code .token.inserted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.inserted:not(.prefix){background-color:rgba(0,255,128,.3);display:inline}\x0A"), makeNimstrLit("code[class*=language-],pre[class*=language-]{font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:.4em .8em;margin:.5em 0;overflow:auto;background-color:#000}code[class*=language-]{background:#000;color:#fff;box-shadow:-.3em 0 0 .3em #000,.3em 0 0 .3em #000}:not(pre)>code[class*=language-]{padding:.2em;border-radius:.3em;box-shadow:none;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#aaa}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#0cf}.token.attr-name,.token.builtin,.token.char,.token.selector,.token.string{color:#ff0}.language-css .token.string,.token.entity,.token.inserted,.token.operator,.token.url,.token.variable{color:#9acd32}.token.atrule,.token.attr-value,.token.keyword{color:#ff1493}.token.important,.token.regex{color:orange}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}pre.diff-highlight.diff-highlight>code .token.deleted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.deleted:not(.prefix){background-color:rgba(255,0,0,.3);display:inline}pre.diff-highlight.diff-highlight>code .token.inserted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.inserted:not(.prefix){background-color:rgba(0,255,128,.3);display:inline}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#f8f8f2;background:0 0;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#272822}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#8292a2}.token.punctuation{color:#f8f8f2}.token.namespace{opacity:.7}.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag{color:#f92672}.token.boolean,.token.number{color:#ae81ff}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#a6e22e}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f8f8f2}.token.atrule,.token.attr-value,.token.class-name,.token.function{color:#e6db74}.token.keyword{color:#66d9ef}.token.important,.token.regex{color:#fd971f}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-twilight&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#fff;background:0 0;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;text-shadow:0 -.1em .2em #000;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}:not(pre)>code[class*=language-],pre[class*=language-]{background:#141414}pre[class*=language-]{border-radius:.5em;border:.3em solid #545454;box-shadow:1px 1px .5em #000 inset;margin:.5em 0;overflow:auto;padding:1em}pre[class*=language-]::-moz-selection{background:#27292a}pre[class*=language-]::selection{background:#27292a}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{text-shadow:none;background:hsla(0,0%,93%,.15)}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{text-shadow:none;background:hsla(0,0%,93%,.15)}:not(pre)>code[class*=language-]{border-radius:.3em;border:.13em solid #545454;box-shadow:1px 1px .3em -.1em #000 inset;padding:.15em .2em .05em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#777}.token.punctuation{opacity:.7}.token.namespace{opacity:.7}.token.boolean,.token.deleted,.token.number,.token.tag{color:#ce6849}.token.builtin,.token.constant,.token.keyword,.token.property,.token.selector,.token.symbol{color:#f9ed99}.language-css .token.string,.style .token.string,.token.attr-name,.token.attr-value,.token.char,.token.entity,.token.inserted,.token.operator,.token.string,.token.url,.token.variable{color:#909e6a}.token.atrule{color:#7385a5}.token.important,.token.regex{color:#e8c062}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.language-markup .token.attr-name,.language-markup .token.punctuation,.language-markup .token.tag{color:#ac885c}.token{position:relative;z-index:1}.line-highlight.line-highlight{background:hsla(0,0%,33%,.25);background:linear-gradient(to right,hsla(0,0%,33%,.1) 70%,hsla(0,0%,33%,0));border-bottom:1px dashed #545454;border-top:1px dashed #545454;margin-top:.75em;z-index:0}.line-highlight.line-highlight:before,.line-highlight.line-highlight[data-end]:after{background-color:#8693a6;color:#f4f1ef}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-coy&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#000;background:0 0;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{position:relative;margin:.5em 0;overflow:visible;padding:1px}pre[class*=language-]>code{position:relative;z-index:1;border-left:10px solid #358ccb;box-shadow:-1px 0 0 0 #358ccb,0 0 0 1px #dfdfdf;background-color:#fdfdfd;background-image:linear-gradient(transparent 50%,rgba(69,142,209,.04) 50%);background-size:3em 3em;background-origin:content-box;background-attachment:local}code[class*=language-]{max-height:inherit;height:inherit;padding:0 1em;display:block;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background-color:#fdfdfd;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;margin-bottom:1em}:not(pre)>code[class*=language-]{position:relative;padding:.2em;border-radius:.3em;color:#c92c2c;border:1px solid rgba(0,0,0,.1);display:inline;white-space:normal}pre[class*=language-]:after,pre[class*=language-]:before{content:\'\';display:block;position:absolute;bottom:.75em;left:.18em;width:40%;height:20%;max-height:13em;box-shadow:0 13px 8px #979797;-webkit-transform:rotate(-2deg);-moz-transform:rotate(-2deg);-ms-transform:rotate(-2deg);-o-transform:rotate(-2deg);transform:rotate(-2deg)}pre[class*=language-]:after{right:.75em;left:auto;-webkit-transform:rotate(2deg);-moz-transform:rotate(2deg);-ms-transform:rotate(2deg);-o-transform:rotate(2deg);transform:rotate(2deg)}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#7d8b99}.token.punctuation{color:#5f6364}.token.boolean,.token.constant,.token.deleted,.token.function-name,.token.number,.token.property,.token.symbol,.token.tag{color:#c92c2c}.token.attr-name,.token.builtin,.token.char,.token.function,.token.inserted,.token.selector,.token.string{color:#2f9c0a}.token.entity,.token.operator,.token.url,.token.variable{color:#a67f59;background:rgba(255,255,255,.5)}.token.atrule,.token.attr-value,.token.class-name,.token.keyword{color:#1990b8}.token.important,.token.regex{color:#e90}.language-css .token.string,.style .token.string{color:#a67f59;background:rgba(255,255,255,.5)}.token.important{font-weight:400}.token.bold{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.namespace{opacity:.7}@media screen and (max-width:767px){pre[class*=language-]:after,pre[class*=language-]:before{bottom:14px;box-shadow:none}}pre[class*=language-].line-numbers.line-numbers{padding-left:0}pre[class*=language-].line-numbers.line-numbers code{padding-left:3.8em}pre[class*=language-].line-numbers.line-numbers .line-numbers-rows{left:0}pre[class*=language-][data-line]{padding-top:0;padding-bottom:0;padding-left:0}pre[data-line] code{position:relative;padding-left:4em}pre .line-highlight{margin-top:0}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-solarizedlight&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#657b83;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{background:#073642}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{background:#073642}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background-color:#fdf6e3}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#93a1a1}.token.punctuation{color:#586e75}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#268bd2}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string,.token.url{color:#2aa198}.token.entity{color:#657b83;background:#eee8d5}.token.atrule,.token.attr-value,.token.keyword{color:#859900}.token.class-name,.token.function{color:#b58900}.token.important,.token.regex,.token.variable{color:#cb4b16}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\x0A"), makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#ccc;background:0 0;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#2d2d2d}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#999}.token.punctuation{color:#ccc}.token.attr-name,.token.deleted,.token.namespace,.token.tag{color:#e2777a}.token.function-name{color:#6196cc}.token.boolean,.token.function,.token.number{color:#f08d49}.token.class-name,.token.constant,.token.property,.token.symbol{color:#f8c555}.token.atrule,.token.builtin,.token.important,.token.keyword,.token.selector{color:#cc99cd}.token.attr-value,.token.char,.token.regex,.token.string,.token.variable{color:#7ec699}.token.entity,.token.operator,.token.url{color:#67cdcc}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.inserted{color:green}\x0A")];
var ConstSet374 = setConstr(0);
var ConstSet375 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet376 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet377 = setConstr(2);
var ConstSet378 = setConstr(0);
var ConstSet379 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet380 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet381 = setConstr([48, 57]);
var ConstSet382 = setConstr([48, 57]);
var ConstSet383 = setConstr(101, 69);
var ConstSet384 = setConstr([48, 57]);
var ConstSet385 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557448, number_33557449, number_33557449_Idx) {
    var Temporary1;

  var result_33557450 = 0;

  BeforeRet: {
    var sign_33557451 = false;
    var i_33557452 = 0;
    if ((s_33557448[i_33557452] == 43)) {
    i_33557452 += 1;
    }
    else {
    if ((s_33557448[i_33557452] == 45)) {
    sign_33557451 = true;
    i_33557452 += 1;
    }
    }
    if (((s_33557448[i_33557452] == 78) || (s_33557448[i_33557452] == 110))) {
    if (((s_33557448[(i_33557452 + 1)] == 65) || (s_33557448[(i_33557452 + 1)] == 97))) {
    if (((s_33557448[(i_33557452 + 2)] == 78) || (s_33557448[(i_33557452 + 2)] == 110))) {
    if (!((ConstSet379[s_33557448[(i_33557452 + 3)]] != undefined))) {
    number_33557449[number_33557449_Idx] = NaN;
    result_33557450 = (i_33557452 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557450 = 0;
    break BeforeRet;
    }
    
    if (((s_33557448[i_33557452] == 73) || (s_33557448[i_33557452] == 105))) {
    if (((s_33557448[(i_33557452 + 1)] == 78) || (s_33557448[(i_33557452 + 1)] == 110))) {
    if (((s_33557448[(i_33557452 + 2)] == 70) || (s_33557448[(i_33557452 + 2)] == 102))) {
    if (!((ConstSet380[s_33557448[(i_33557452 + 3)]] != undefined))) {
    if (sign_33557451) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557449[number_33557449_Idx] = Temporary1;
    result_33557450 = (i_33557452 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557450 = 0;
    break BeforeRet;
    }
    
    var buf_33557471 = [];
    if (sign_33557451) {
    addChar(buf_33557471, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet381[s_33557448[i_33557452]] != undefined)) break Label3;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label5;
                i_33557452 += 1;
              }
          };
        }
    };
    if ((s_33557448[i_33557452] == 46)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet382[s_33557448[i_33557452]] != undefined)) break Label7;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label9;
                i_33557452 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557471).length == (sign_33557451 ? 1 : 0))) {
    result_33557450 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet383[s_33557448[i_33557452]] != undefined)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    if ((s_33557448[i_33557452] == 43)) {
    i_33557452 += 1;
    }
    else {
    if ((s_33557448[i_33557452] == 45)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    }
    }
    if (!((ConstSet384[s_33557448[i_33557452]] != undefined))) {
    result_33557450 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet385[s_33557448[i_33557452]] != undefined)) break Label11;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label13;
                i_33557452 += 1;
              }
          };
        }
    };
    }
    
    number_33557449[number_33557449_Idx] = parseFloatNative_33557428(buf_33557471);
    result_33557450 = i_33557452;
  };

  return result_33557450;

}
var ConstSet386 = setConstr(46, 44);
var ConstSet387 = setConstr([65, 90]);
var ConstSet388 = setConstr([97, 122]);
var ConstSet389 = setConstr(0);
var ConstSet390 = setConstr(0);
var ConstSet391 = setConstr(2);
var ConstSet392 = setConstr(47, 47);
var ConstSet393 = setConstr(47, 47);
var ConstSet394 = setConstr(47, 47);
var ConstSet395 = setConstr(47, 47);
var ConstSet396 = setConstr(47, 47);
var ConstSet397 = setConstr(47, 47);
var ConstSet398 = setConstr(47, 47);
var ConstSet399 = setConstr(47, 47);
var ConstSet400 = setConstr(47, 47);
var ConstSet401 = setConstr(47, 47);
var ConstSet402 = setConstr(47, 47);
var ConstSet403 = setConstr(47, 47);
var ConstSet404 = setConstr(47, 47);
var ConstSet405 = setConstr(0);
var ConstSet406 = setConstr(47, 47);
    var FormatOpen_536871331 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet407 = setConstr(0, 1);
var ConstSet408 = setConstr(0);
var ConstSet409 = setConstr(1);
var ConstSet410 = setConstr(0, 1);
var ConstSet411 = setConstr([65, 90]);
var ConstSet412 = setConstr(0);
    var seps_1476407056 = [[60,98,114,32,47,62], [92,92], [10]];
var ConstSet413 = setConstr(0);
    var unitWeights_2667577494 = new BigInt64Array([1n, 1000n, 1000000n, 1000000000n, 60000000000n, 3600000000000n, 86400000000000n, 604800000000000n]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function modInt64(a_33557088, b_33557089) {
        if (b_33557089 == 0n) raiseDivByZero();
    if (b_33557089 == -1n && a_33557088 == 9223372036854775807n) raiseOverflow();
    return a_33557088 % b_33557089;
  

  
}

function addInt64(a_33557072, b_33557073) {
        var result = a_33557072 + b_33557073;
    checkOverflowInt64(result);
    return result;
  

  
}

function subInt64(a_33557076, b_33557077) {
        var result = a_33557076 - b_33557077;
    checkOverflowInt64(result);
    return result;
  

  
}
    var daysUntilMonthLeap_2667577628 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_2667577627 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
    var DefaultLocale_2667579236 = {MMM: [[74,97,110], [70,101,98], [77,97,114], [65,112,114], [77,97,121], [74,117,110], [74,117,108], [65,117,103], [83,101,112], [79,99,116], [78,111,118], [68,101,99]], MMMM: [[74,97,110,117,97,114,121], [70,101,98,114,117,97,114,121], [77,97,114,99,104], [65,112,114,105,108], [77,97,121], [74,117,110,101], [74,117,108,121], [65,117,103,117,115,116], [83,101,112,116,101,109,98,101,114], [79,99,116,111,98,101,114], [78,111,118,101,109,98,101,114], [68,101,99,101,109,98,101,114]], ddd: [[77,111,110], [84,117,101], [87,101,100], [84,104,117], [70,114,105], [83,97,116], [83,117,110]], dddd: [[77,111,110,100,97,121], [84,117,101,115,100,97,121], [87,101,100,110,101,115,100,97,121], [84,104,117,114,115,100,97,121], [70,114,105,100,97,121], [83,97,116,117,114,100,97,121], [83,117,110,100,97,121]]};
var ConstSet414 = setConstr(0);
var ConstSet415 = setConstr(10);
var ConstSet416 = setConstr(13, 10);
var ConstSet417 = setConstr(13, 10);
var ConstSet418 = setConstr([65, 90]);
var ConstSet419 = setConstr(0);
var ConstSet420 = setConstr(0);
var ConstSet421 = setConstr(0);
var ConstSet422 = setConstr(0);
              var htmlTags_1476395038 = [[33,45,45], [33,68,79,67,84,89,80,69], [97], [97,98,98,114], [97,99,114,111,110,121,109], [97,100,100,114,101,115,115], [97,112,112,108,101,116], [97,114,101,97], [97,114,116,105,99,108,101], [97,115,105,100,101], [97,117,100,105,111], [98], [98,97,115,101], [98,97,115,101,102,111,110,116], [98,100,105], [98,100,111], [98,105,103], [98,108,111,99,107,113,117,111,116,101], [98,111,100,121], [98,114], [98,117,116,116,111,110], [99,97,110,118,97,115], [99,97,112,116,105,111,110], [99,101,110,116,101,114], [99,105,114,99,108,101], [99,105,116,101], [99,111,100,101], [99,111,108], [99,111,108,103,114,111,117,112], [100,97,116,97], [100,97,116,97,108,105,115,116], [100,100], [100,101,108], [100,101,116,97,105,108,115], [100,102,110], [100,105,97,108,111,103], [100,105,114], [100,105,118], [100,108], [100,116], [101,109], [101,109,98,101,100], [102,105,101,108,100,115,101,116], [102,105,103,99,97,112,116,105,111,110], [102,105,103,117,114,101], [102,111,110,116], [102,111,111,116,101,114], [102,111,114,109], [102,114,97,109,101], [102,114,97,109,101,115,101,116], [103], [104,49], [104,50], [104,51], [104,52], [104,53], [104,54], [104,101,97,100], [104,101,97,100,101,114], [104,114], [104,116,109,108], [105], [105,102,114,97,109,101], [105,109,103], [105,110,112,117,116], [105,110,115], [107,98,100], [108,97,98,101,108], [108,101,103,101,110,100], [108,105], [108,105,110,101], [108,105,110,107], [109,97,105,110], [109,97,112], [109,97,114,107], [109,101,116,97], [109,101,116,101,114], [110,97,118], [110,111,102,114,97,109,101,115], [110,111,115,99,114,105,112,116], [111,98,106,101,99,116], [111,108], [111,112,116,103,114,111,117,112], [111,112,116,105,111,110], [111,117,116,112,117,116], [112], [112,97,114,97,109], [112,97,116,104], [112,105,99,116,117,114,101], [112,111,108,121,108,105,110,101], [112,114,101], [112,114,111,103,114,101,115,115], [113], [114,101,99,116], [114,112], [114,116], [114,117,98,121], [115], [115,97,109,112], [115,99,114,105,112,116], [115,101,99,116,105,111,110], [115,101,108,101,99,116], [115,109,97,108,108], [115,111,117,114,99,101], [115,112,97,110], [115,116,114,105,107,101], [115,116,114,111,110,103], [115,116,121,108,101], [115,117,98], [115,117,109,109,97,114,121], [115,117,112], [115,118,103], [116,97,98,108,101], [116,98,111,100,121], [116,100], [116,101,109,112,108,97,116,101], [116,101,120,116,97,114,101,97], [116,102,111,111,116], [116,104], [116,104,101,97,100], [116,105,109,101], [116,105,116,108,101], [116,114], [116,114,97,99,107], [116,116], [117], [117,108], [118,97,114], [118,105,100,101,111], [119,98,114]];
                    var htmlSelfClosingTags_1476395039 = [[97,114,101,97], [98,97,115,101], [98,114], [99,105,114,99,108,101], [99,111,108], [101,109,98,101,100], [104,114], [105,109,103], [105,110,112,117,116], [108,105,110,101], [108,105,110,107], [109,101,116,97], [112,97,114,97,109], [112,111,108,121,108,105,110,101], [115,111,117,114,99,101], [112,97,116,104], [114,101,99,116], [116,114,97,99,107], [119,98,114]];
var ConstSet423 = setConstr(0);
var ConstSet424 = setConstr(0);
var ConstSet425 = setConstr(2);
var ConstSet426 = setConstr(2);
var ConstSet427 = setConstr(2);
var ConstSet428 = setConstr(13, 10, 47);
var ConstSet429 = setConstr(1, 0, 2, 3);
var ConstSet430 = setConstr([65, 90], [97, 122], 95, 58, [128, 255]);
var ConstSet431 = setConstr([65, 90], [97, 122], [48, 57], 46, 45, 95, 58, [128, 255]);
var ConstSet432 = setConstr([65, 90], [97, 122], 95, 58, [128, 255]);
var ConstSet433 = setConstr([48, 57]);
var ConstSet434 = setConstr(2, 4, 12);
var ConstSet435 = setConstr(39, 34);
var ConstSet436 = setConstr(34, 39, 96, 61, 60, 62, 32, 0, 9, 10, 12, 12);
var ConstSet437 = setConstr(2);
var ConstSet438 = setConstr(2);
var ConstSet439 = setConstr(2);
var ConstSet440 = setConstr(0, 1, 5, 3, 4);
var ConstSet441 = setConstr(0, 1, 5, 3, 4);
    var errorMessages_1174405184 = [[110,111,32,101,114,114,111,114], [39,93,93,62,39,32,101,120,112,101,99,116,101,100], [110,97,109,101,32,101,120,112,101,99,116,101,100], [39,59,39,32,101,120,112,101,99,116,101,100], [39,63,62,39,32,101,120,112,101,99,116,101,100], [39,62,39,32,101,120,112,101,99,116,101,100], [39,61,39,32,101,120,112,101,99,116,101,100], [39,34,39,32,111,114,32,34,39,34,32,101,120,112,101,99,116,101,100], [39,45,45,62,39,32,101,120,112,101,99,116,101,100], [97,116,116,114,105,98,117,116,101,32,118,97,108,117,101,32,101,120,112,101,99,116,101,100]];
var ConstSet442 = setConstr(6, 11, 14, 18, 25, 46, 58, 61, 64, 70, 74, 86, 123, 99);
var ConstSet443 = setConstr(69, 85, 37, 29, 62, 83);
var ConstSet444 = setConstr(69, 37, 29, 62, 83);
var ConstSet445 = setConstr(116, 109, 112, 111, 113);
var ConstSet446 = setConstr(83, 82);
var ConstSet447 = setConstr(7, 3);
var ConstSet448 = setConstr(2);
var ConstSet449 = setConstr([65, 90]);
var ConstSet450 = setConstr([65, 90]);

function genericReset(x_33557306, ti_33557307) {
  var result_33557308 = null;

    result_33557308 = null;
    switch (ti_33557307.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557259(ti_33557307)) {
              result_33557308 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557308 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557307.kind == 17)) {
      result_33557308 = {m_type: ti_33557307};
      }
      else {
        result_33557308 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557308 = [];
    
      break;
    case 4:
    case 16:
            result_33557308 = new Array(x_33557306.length);
      for (var i = 0; i < x_33557306.length; ++i) {
        result_33557308[i] = genericReset(x_33557306[i], ti_33557307.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557308;

}
var ConstSet451 = setConstr(2);
var ConstSet452 = setConstr(0, 1, 5, 3, 4);
var ConstSet453 = setConstr([48, 57]);
var ConstSet454 = setConstr([48, 57]);
var ConstSet455 = setConstr(120, 88);
var ConstSet456 = setConstr(2);
var ConstSet457 = setConstr(0, 1, 4);
var ConstSet458 = setConstr(2);
var ConstSet459 = setConstr(2);
var ConstSet460 = setConstr(2);
var ConstSet461 = setConstr(2);
var ConstSet462 = setConstr(0, 1, 5, 3, 4);
var ConstSet463 = setConstr(0, 1, 5, 3, 4);
var ConstSet464 = setConstr(0, 1, 5, 3, 4);
var ConstSet465 = setConstr(0, 1, 5, 3, 4);
var ConstSet466 = setConstr(0, 1, 5, 3, 4);
var objectID_1275068593 = [0];

function initLock_1811939335(lock_1811939336) {
  
}
var gFunsLock_1795162127 = [({})];
var gFuns_1795162128 = [[]];
initLock_1811939335(gFunsLock_1795162127[0]);
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.katex=t():e.katex=t()}("undefined"!=typeof self?self:this,(function(){return function(){"use strict";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},t={};e.d(t,{default:function(){return Qn}});var r=function e(t,r){this.position=void 0;var n,a="KaTeX parse error: "+t,i=r&&r.loc;if(i&&i.start<=i.end){var o=i.lexer.input;n=i.start;var s=i.end;n===o.length?a+=" at end of input: ":a+=" at position "+(n+1)+": ";var l=o.slice(n,s).replace(/[^]/g,"$&\u0332");a+=(n>15?"\u2026"+o.slice(n-15,n):o.slice(0,n))+l+(s+15<o.length?o.slice(s,s+15)+"\u2026":o.slice(s))}var h=new Error(a);return h.name="ParseError",h.__proto__=e.prototype,h.position=n,h};r.prototype.__proto__=Error.prototype;var n=r,a=/([A-Z])/g,i={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},o=/[&><"']/g;var s=function e(t){return"ordgroup"===t.type||"color"===t.type?1===t.body.length?e(t.body[0]):t:"font"===t.type?e(t.body):t},l={contains:function(e,t){return-1!==e.indexOf(t)},deflt:function(e,t){return void 0===e?t:e},escape:function(e){return String(e).replace(o,(function(e){return i[e]}))},hyphenate:function(e){return e.replace(a,"-$1").toLowerCase()},getBaseElem:s,isCharacterBox:function(e){var t=s(e);return"mathord"===t.type||"textord"===t.type||"atom"===t.type},protocolFromUrl:function(e){var t=/^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(e);return null!=t?t[1]:"_relative"}},h={displayMode:{type:"boolean",description:"Render math in display mode, which puts the math in display style (so \\int and \\sum are large, for example), and centers the math on the page on its own line.",cli:"-d, --display-mode"},output:{type:{enum:["htmlAndMathml","html","mathml"]},description:"Determines the markup language of the output.",cli:"-F, --format <type>"},leqno:{type:"boolean",description:"Render display math in leqno style (left-justified tags)."},fleqn:{type:"boolean",description:"Render display math flush left."},throwOnError:{type:"boolean",default:!0,cli:"-t, --no-throw-on-error",cliDescription:"Render errors (in the color given by --error-color) instead of throwing a ParseError exception when encountering an error."},errorColor:{type:"string",default:"#cc0000",cli:"-c, --error-color <color>",cliDescription:"A color string given in the format 'rgb' or 'rrggbb' (no #). This option determines the color of errors rendered by the -t option.",cliProcessor:function(e){return"#"+e}},macros:{type:"object",cli:"-m, --macro <def>",cliDescription:"Define custom macro of the form '\\foo:expansion' (use multiple -m arguments for multiple macros).",cliDefault:[],cliProcessor:function(e,t){return t.push(e),t}},minRuleThickness:{type:"number",description:"Specifies a minimum thickness, in ems, for fraction lines, \\sqrt top lines, {array} vertical lines, \\hline, \\hdashline, \\underline, \\overline, and the borders of \\fbox, \\boxed, and \\fcolorbox.",processor:function(e){return Math.max(0,e)},cli:"--min-rule-thickness <size>",cliProcessor:parseFloat},colorIsTextColor:{type:"boolean",description:"Makes \\color behave like LaTeX's 2-argument \\textcolor, instead of LaTeX's one-argument \\color mode change.",cli:"-b, --color-is-text-color"},strict:{type:[{enum:["warn","ignore","error"]},"boolean","function"],description:"Turn on strict / LaTeX faithfulness mode, which throws an error if the input uses features that are not supported by LaTeX.",cli:"-S, --strict",cliDefault:!1},trust:{type:["boolean","function"],description:"Trust the input, enabling all HTML features such as \\url.",cli:"-T, --trust"},maxSize:{type:"number",default:1/0,description:"If non-zero, all user-specified sizes, e.g. in \\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, elements and spaces can be arbitrarily large",processor:function(e){return Math.max(0,e)},cli:"-s, --max-size <n>",cliProcessor:parseInt},maxExpand:{type:"number",default:1e3,description:"Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity, the macro expander will try to fully expand as in LaTeX.",processor:function(e){return Math.max(0,e)},cli:"-e, --max-expand <n>",cliProcessor:function(e){return"Infinity"===e?1/0:parseInt(e)}},globalGroup:{type:"boolean",cli:!1}};function c(e){if(e.default)return e.default;var t=e.type,r=Array.isArray(t)?t[0]:t;if("string"!=typeof r)return r.enum[0];switch(r){case"boolean":return!1;case"string":return"";case"number":return 0;case"object":return{}}}var m=function(){function e(e){for(var t in this.displayMode=void 0,this.output=void 0,this.leqno=void 0,this.fleqn=void 0,this.throwOnError=void 0,this.errorColor=void 0,this.macros=void 0,this.minRuleThickness=void 0,this.colorIsTextColor=void 0,this.strict=void 0,this.trust=void 0,this.maxSize=void 0,this.maxExpand=void 0,this.globalGroup=void 0,e=e||{},h)if(h.hasOwnProperty(t)){var r=h[t];this[t]=void 0!==e[t]?r.processor?r.processor(e[t]):e[t]:c(r)}}var t=e.prototype;return t.reportNonstrict=function(e,t,r){var a=this.strict;if("function"==typeof a&&(a=a(e,t,r)),a&&"ignore"!==a){if(!0===a||"error"===a)throw new n("LaTeX-incompatible input and strict mode is set to 'error': "+t+" ["+e+"]",r);"warn"===a?"undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+t+" ["+e+"]"):"undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to unrecognized '"+a+"': "+t+" ["+e+"]")}},t.useStrictBehavior=function(e,t,r){var n=this.strict;if("function"==typeof n)try{n=n(e,t,r)}catch(e){n="error"}return!(!n||"ignore"===n)&&(!0===n||"error"===n||("warn"===n?("undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+t+" ["+e+"]"),!1):("undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to unrecognized '"+n+"': "+t+" ["+e+"]"),!1)))},t.isTrusted=function(e){e.url&&!e.protocol&&(e.protocol=l.protocolFromUrl(e.url));var t="function"==typeof this.trust?this.trust(e):this.trust;return Boolean(t)},e}(),u=function(){function e(e,t,r){this.id=void 0,this.size=void 0,this.cramped=void 0,this.id=e,this.size=t,this.cramped=r}var t=e.prototype;return t.sup=function(){return p[d[this.id]]},t.sub=function(){return p[f[this.id]]},t.fracNum=function(){return p[g[this.id]]},t.fracDen=function(){return p[v[this.id]]},t.cramp=function(){return p[y[this.id]]},t.text=function(){return p[b[this.id]]},t.isTight=function(){return this.size>=2},e}(),p=[new u(0,0,!1),new u(1,0,!0),new u(2,1,!1),new u(3,1,!0),new u(4,2,!1),new u(5,2,!0),new u(6,3,!1),new u(7,3,!0)],d=[4,5,4,5,6,7,6,7],f=[5,5,5,5,7,7,7,7],g=[2,3,4,5,6,7,6,7],v=[3,3,5,5,7,7,7,7],y=[1,1,3,3,5,5,7,7],b=[0,1,2,3,2,3,2,3],x={DISPLAY:p[0],TEXT:p[2],SCRIPT:p[4],SCRIPTSCRIPT:p[6]},w=[{name:"latin",blocks:[[256,591],[768,879]]},{name:"cyrillic",blocks:[[1024,1279]]},{name:"armenian",blocks:[[1328,1423]]},{name:"brahmic",blocks:[[2304,4255]]},{name:"georgian",blocks:[[4256,4351]]},{name:"cjk",blocks:[[12288,12543],[19968,40879],[65280,65376]]},{name:"hangul",blocks:[[44032,55215]]}];var k=[];function S(e){for(var t=0;t<k.length;t+=2)if(e>=k[t]&&e<=k[t+1])return!0;return!1}w.forEach((function(e){return e.blocks.forEach((function(e){return k.push.apply(k,e)}))}));var M=80,z={doubleleftarrow:"M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",doublerightarrow:"M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",leftarrow:"M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",leftbrace:"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",leftbraceunder:"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",leftgroup:"M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",leftgroupunder:"M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",leftharpoon:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",leftharpoonplus:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",leftharpoondown:"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",leftharpoondownplus:"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",lefthook:"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",leftlinesegment:"M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",leftmapsto:"M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",leftToFrom:"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",longequal:"M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",midbrace:"M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",midbraceunder:"M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",oiintSize1:"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",oiintSize2:"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z",oiiintSize1:"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",oiiintSize2:"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",rightarrow:"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",rightbrace:"M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",rightbraceunder:"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",rightgroup:"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",rightgroupunder:"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",rightharpoon:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",rightharpoonplus:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",rightharpoondown:"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",rightharpoondownplus:"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",righthook:"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",rightlinesegment:"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",rightToFrom:"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",twoheadleftarrow:"M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",twoheadrightarrow:"M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",tilde1:"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",tilde2:"M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",tilde3:"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",tilde4:"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",vec:"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",widehat1:"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",widehat2:"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat3:"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat4:"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widecheck1:"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",widecheck2:"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",widecheck3:"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",widecheck4:"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",baraboveleftarrow:"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",rightarrowabovebar:"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",baraboveshortleftharpoon:"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",rightharpoonaboveshortbar:"M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",shortbaraboveleftharpoon:"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",shortrightharpoonabovebar:"M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"},A=function(){function e(e){this.children=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.children=e,this.classes=[],this.height=0,this.depth=0,this.maxFontSize=0,this.style={}}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){for(var e=document.createDocumentFragment(),t=0;t<this.children.length;t++)e.appendChild(this.children[t].toNode());return e},t.toMarkup=function(){for(var e="",t=0;t<this.children.length;t++)e+=this.children[t].toMarkup();return e},t.toText=function(){var e=function(e){return e.toText()};return this.children.map(e).join("")},e}(),T={"AMS-Regular":{32:[0,0,0,0,.25],65:[0,.68889,0,0,.72222],66:[0,.68889,0,0,.66667],67:[0,.68889,0,0,.72222],68:[0,.68889,0,0,.72222],69:[0,.68889,0,0,.66667],70:[0,.68889,0,0,.61111],71:[0,.68889,0,0,.77778],72:[0,.68889,0,0,.77778],73:[0,.68889,0,0,.38889],74:[.16667,.68889,0,0,.5],75:[0,.68889,0,0,.77778],76:[0,.68889,0,0,.66667],77:[0,.68889,0,0,.94445],78:[0,.68889,0,0,.72222],79:[.16667,.68889,0,0,.77778],80:[0,.68889,0,0,.61111],81:[.16667,.68889,0,0,.77778],82:[0,.68889,0,0,.72222],83:[0,.68889,0,0,.55556],84:[0,.68889,0,0,.66667],85:[0,.68889,0,0,.72222],86:[0,.68889,0,0,.72222],87:[0,.68889,0,0,1],88:[0,.68889,0,0,.72222],89:[0,.68889,0,0,.72222],90:[0,.68889,0,0,.66667],107:[0,.68889,0,0,.55556],160:[0,0,0,0,.25],165:[0,.675,.025,0,.75],174:[.15559,.69224,0,0,.94666],240:[0,.68889,0,0,.55556],295:[0,.68889,0,0,.54028],710:[0,.825,0,0,2.33334],732:[0,.9,0,0,2.33334],770:[0,.825,0,0,2.33334],771:[0,.9,0,0,2.33334],989:[.08167,.58167,0,0,.77778],1008:[0,.43056,.04028,0,.66667],8245:[0,.54986,0,0,.275],8463:[0,.68889,0,0,.54028],8487:[0,.68889,0,0,.72222],8498:[0,.68889,0,0,.55556],8502:[0,.68889,0,0,.66667],8503:[0,.68889,0,0,.44445],8504:[0,.68889,0,0,.66667],8513:[0,.68889,0,0,.63889],8592:[-.03598,.46402,0,0,.5],8594:[-.03598,.46402,0,0,.5],8602:[-.13313,.36687,0,0,1],8603:[-.13313,.36687,0,0,1],8606:[.01354,.52239,0,0,1],8608:[.01354,.52239,0,0,1],8610:[.01354,.52239,0,0,1.11111],8611:[.01354,.52239,0,0,1.11111],8619:[0,.54986,0,0,1],8620:[0,.54986,0,0,1],8621:[-.13313,.37788,0,0,1.38889],8622:[-.13313,.36687,0,0,1],8624:[0,.69224,0,0,.5],8625:[0,.69224,0,0,.5],8630:[0,.43056,0,0,1],8631:[0,.43056,0,0,1],8634:[.08198,.58198,0,0,.77778],8635:[.08198,.58198,0,0,.77778],8638:[.19444,.69224,0,0,.41667],8639:[.19444,.69224,0,0,.41667],8642:[.19444,.69224,0,0,.41667],8643:[.19444,.69224,0,0,.41667],8644:[.1808,.675,0,0,1],8646:[.1808,.675,0,0,1],8647:[.1808,.675,0,0,1],8648:[.19444,.69224,0,0,.83334],8649:[.1808,.675,0,0,1],8650:[.19444,.69224,0,0,.83334],8651:[.01354,.52239,0,0,1],8652:[.01354,.52239,0,0,1],8653:[-.13313,.36687,0,0,1],8654:[-.13313,.36687,0,0,1],8655:[-.13313,.36687,0,0,1],8666:[.13667,.63667,0,0,1],8667:[.13667,.63667,0,0,1],8669:[-.13313,.37788,0,0,1],8672:[-.064,.437,0,0,1.334],8674:[-.064,.437,0,0,1.334],8705:[0,.825,0,0,.5],8708:[0,.68889,0,0,.55556],8709:[.08167,.58167,0,0,.77778],8717:[0,.43056,0,0,.42917],8722:[-.03598,.46402,0,0,.5],8724:[.08198,.69224,0,0,.77778],8726:[.08167,.58167,0,0,.77778],8733:[0,.69224,0,0,.77778],8736:[0,.69224,0,0,.72222],8737:[0,.69224,0,0,.72222],8738:[.03517,.52239,0,0,.72222],8739:[.08167,.58167,0,0,.22222],8740:[.25142,.74111,0,0,.27778],8741:[.08167,.58167,0,0,.38889],8742:[.25142,.74111,0,0,.5],8756:[0,.69224,0,0,.66667],8757:[0,.69224,0,0,.66667],8764:[-.13313,.36687,0,0,.77778],8765:[-.13313,.37788,0,0,.77778],8769:[-.13313,.36687,0,0,.77778],8770:[-.03625,.46375,0,0,.77778],8774:[.30274,.79383,0,0,.77778],8776:[-.01688,.48312,0,0,.77778],8778:[.08167,.58167,0,0,.77778],8782:[.06062,.54986,0,0,.77778],8783:[.06062,.54986,0,0,.77778],8785:[.08198,.58198,0,0,.77778],8786:[.08198,.58198,0,0,.77778],8787:[.08198,.58198,0,0,.77778],8790:[0,.69224,0,0,.77778],8791:[.22958,.72958,0,0,.77778],8796:[.08198,.91667,0,0,.77778],8806:[.25583,.75583,0,0,.77778],8807:[.25583,.75583,0,0,.77778],8808:[.25142,.75726,0,0,.77778],8809:[.25142,.75726,0,0,.77778],8812:[.25583,.75583,0,0,.5],8814:[.20576,.70576,0,0,.77778],8815:[.20576,.70576,0,0,.77778],8816:[.30274,.79383,0,0,.77778],8817:[.30274,.79383,0,0,.77778],8818:[.22958,.72958,0,0,.77778],8819:[.22958,.72958,0,0,.77778],8822:[.1808,.675,0,0,.77778],8823:[.1808,.675,0,0,.77778],8828:[.13667,.63667,0,0,.77778],8829:[.13667,.63667,0,0,.77778],8830:[.22958,.72958,0,0,.77778],8831:[.22958,.72958,0,0,.77778],8832:[.20576,.70576,0,0,.77778],8833:[.20576,.70576,0,0,.77778],8840:[.30274,.79383,0,0,.77778],8841:[.30274,.79383,0,0,.77778],8842:[.13597,.63597,0,0,.77778],8843:[.13597,.63597,0,0,.77778],8847:[.03517,.54986,0,0,.77778],8848:[.03517,.54986,0,0,.77778],8858:[.08198,.58198,0,0,.77778],8859:[.08198,.58198,0,0,.77778],8861:[.08198,.58198,0,0,.77778],8862:[0,.675,0,0,.77778],8863:[0,.675,0,0,.77778],8864:[0,.675,0,0,.77778],8865:[0,.675,0,0,.77778],8872:[0,.69224,0,0,.61111],8873:[0,.69224,0,0,.72222],8874:[0,.69224,0,0,.88889],8876:[0,.68889,0,0,.61111],8877:[0,.68889,0,0,.61111],8878:[0,.68889,0,0,.72222],8879:[0,.68889,0,0,.72222],8882:[.03517,.54986,0,0,.77778],8883:[.03517,.54986,0,0,.77778],8884:[.13667,.63667,0,0,.77778],8885:[.13667,.63667,0,0,.77778],8888:[0,.54986,0,0,1.11111],8890:[.19444,.43056,0,0,.55556],8891:[.19444,.69224,0,0,.61111],8892:[.19444,.69224,0,0,.61111],8901:[0,.54986,0,0,.27778],8903:[.08167,.58167,0,0,.77778],8905:[.08167,.58167,0,0,.77778],8906:[.08167,.58167,0,0,.77778],8907:[0,.69224,0,0,.77778],8908:[0,.69224,0,0,.77778],8909:[-.03598,.46402,0,0,.77778],8910:[0,.54986,0,0,.76042],8911:[0,.54986,0,0,.76042],8912:[.03517,.54986,0,0,.77778],8913:[.03517,.54986,0,0,.77778],8914:[0,.54986,0,0,.66667],8915:[0,.54986,0,0,.66667],8916:[0,.69224,0,0,.66667],8918:[.0391,.5391,0,0,.77778],8919:[.0391,.5391,0,0,.77778],8920:[.03517,.54986,0,0,1.33334],8921:[.03517,.54986,0,0,1.33334],8922:[.38569,.88569,0,0,.77778],8923:[.38569,.88569,0,0,.77778],8926:[.13667,.63667,0,0,.77778],8927:[.13667,.63667,0,0,.77778],8928:[.30274,.79383,0,0,.77778],8929:[.30274,.79383,0,0,.77778],8934:[.23222,.74111,0,0,.77778],8935:[.23222,.74111,0,0,.77778],8936:[.23222,.74111,0,0,.77778],8937:[.23222,.74111,0,0,.77778],8938:[.20576,.70576,0,0,.77778],8939:[.20576,.70576,0,0,.77778],8940:[.30274,.79383,0,0,.77778],8941:[.30274,.79383,0,0,.77778],8994:[.19444,.69224,0,0,.77778],8995:[.19444,.69224,0,0,.77778],9416:[.15559,.69224,0,0,.90222],9484:[0,.69224,0,0,.5],9488:[0,.69224,0,0,.5],9492:[0,.37788,0,0,.5],9496:[0,.37788,0,0,.5],9585:[.19444,.68889,0,0,.88889],9586:[.19444,.74111,0,0,.88889],9632:[0,.675,0,0,.77778],9633:[0,.675,0,0,.77778],9650:[0,.54986,0,0,.72222],9651:[0,.54986,0,0,.72222],9654:[.03517,.54986,0,0,.77778],9660:[0,.54986,0,0,.72222],9661:[0,.54986,0,0,.72222],9664:[.03517,.54986,0,0,.77778],9674:[.11111,.69224,0,0,.66667],9733:[.19444,.69224,0,0,.94445],10003:[0,.69224,0,0,.83334],10016:[0,.69224,0,0,.83334],10731:[.11111,.69224,0,0,.66667],10846:[.19444,.75583,0,0,.61111],10877:[.13667,.63667,0,0,.77778],10878:[.13667,.63667,0,0,.77778],10885:[.25583,.75583,0,0,.77778],10886:[.25583,.75583,0,0,.77778],10887:[.13597,.63597,0,0,.77778],10888:[.13597,.63597,0,0,.77778],10889:[.26167,.75726,0,0,.77778],10890:[.26167,.75726,0,0,.77778],10891:[.48256,.98256,0,0,.77778],10892:[.48256,.98256,0,0,.77778],10901:[.13667,.63667,0,0,.77778],10902:[.13667,.63667,0,0,.77778],10933:[.25142,.75726,0,0,.77778],10934:[.25142,.75726,0,0,.77778],10935:[.26167,.75726,0,0,.77778],10936:[.26167,.75726,0,0,.77778],10937:[.26167,.75726,0,0,.77778],10938:[.26167,.75726,0,0,.77778],10949:[.25583,.75583,0,0,.77778],10950:[.25583,.75583,0,0,.77778],10955:[.28481,.79383,0,0,.77778],10956:[.28481,.79383,0,0,.77778],57350:[.08167,.58167,0,0,.22222],57351:[.08167,.58167,0,0,.38889],57352:[.08167,.58167,0,0,.77778],57353:[0,.43056,.04028,0,.66667],57356:[.25142,.75726,0,0,.77778],57357:[.25142,.75726,0,0,.77778],57358:[.41951,.91951,0,0,.77778],57359:[.30274,.79383,0,0,.77778],57360:[.30274,.79383,0,0,.77778],57361:[.41951,.91951,0,0,.77778],57366:[.25142,.75726,0,0,.77778],57367:[.25142,.75726,0,0,.77778],57368:[.25142,.75726,0,0,.77778],57369:[.25142,.75726,0,0,.77778],57370:[.13597,.63597,0,0,.77778],57371:[.13597,.63597,0,0,.77778]},"Caligraphic-Regular":{32:[0,0,0,0,.25],65:[0,.68333,0,.19445,.79847],66:[0,.68333,.03041,.13889,.65681],67:[0,.68333,.05834,.13889,.52653],68:[0,.68333,.02778,.08334,.77139],69:[0,.68333,.08944,.11111,.52778],70:[0,.68333,.09931,.11111,.71875],71:[.09722,.68333,.0593,.11111,.59487],72:[0,.68333,.00965,.11111,.84452],73:[0,.68333,.07382,0,.54452],74:[.09722,.68333,.18472,.16667,.67778],75:[0,.68333,.01445,.05556,.76195],76:[0,.68333,0,.13889,.68972],77:[0,.68333,0,.13889,1.2009],78:[0,.68333,.14736,.08334,.82049],79:[0,.68333,.02778,.11111,.79611],80:[0,.68333,.08222,.08334,.69556],81:[.09722,.68333,0,.11111,.81667],82:[0,.68333,0,.08334,.8475],83:[0,.68333,.075,.13889,.60556],84:[0,.68333,.25417,0,.54464],85:[0,.68333,.09931,.08334,.62583],86:[0,.68333,.08222,0,.61278],87:[0,.68333,.08222,.08334,.98778],88:[0,.68333,.14643,.13889,.7133],89:[.09722,.68333,.08222,.08334,.66834],90:[0,.68333,.07944,.13889,.72473],160:[0,0,0,0,.25]},"Fraktur-Regular":{32:[0,0,0,0,.25],33:[0,.69141,0,0,.29574],34:[0,.69141,0,0,.21471],38:[0,.69141,0,0,.73786],39:[0,.69141,0,0,.21201],40:[.24982,.74947,0,0,.38865],41:[.24982,.74947,0,0,.38865],42:[0,.62119,0,0,.27764],43:[.08319,.58283,0,0,.75623],44:[0,.10803,0,0,.27764],45:[.08319,.58283,0,0,.75623],46:[0,.10803,0,0,.27764],47:[.24982,.74947,0,0,.50181],48:[0,.47534,0,0,.50181],49:[0,.47534,0,0,.50181],50:[0,.47534,0,0,.50181],51:[.18906,.47534,0,0,.50181],52:[.18906,.47534,0,0,.50181],53:[.18906,.47534,0,0,.50181],54:[0,.69141,0,0,.50181],55:[.18906,.47534,0,0,.50181],56:[0,.69141,0,0,.50181],57:[.18906,.47534,0,0,.50181],58:[0,.47534,0,0,.21606],59:[.12604,.47534,0,0,.21606],61:[-.13099,.36866,0,0,.75623],63:[0,.69141,0,0,.36245],65:[0,.69141,0,0,.7176],66:[0,.69141,0,0,.88397],67:[0,.69141,0,0,.61254],68:[0,.69141,0,0,.83158],69:[0,.69141,0,0,.66278],70:[.12604,.69141,0,0,.61119],71:[0,.69141,0,0,.78539],72:[.06302,.69141,0,0,.7203],73:[0,.69141,0,0,.55448],74:[.12604,.69141,0,0,.55231],75:[0,.69141,0,0,.66845],76:[0,.69141,0,0,.66602],77:[0,.69141,0,0,1.04953],78:[0,.69141,0,0,.83212],79:[0,.69141,0,0,.82699],80:[.18906,.69141,0,0,.82753],81:[.03781,.69141,0,0,.82699],82:[0,.69141,0,0,.82807],83:[0,.69141,0,0,.82861],84:[0,.69141,0,0,.66899],85:[0,.69141,0,0,.64576],86:[0,.69141,0,0,.83131],87:[0,.69141,0,0,1.04602],88:[0,.69141,0,0,.71922],89:[.18906,.69141,0,0,.83293],90:[.12604,.69141,0,0,.60201],91:[.24982,.74947,0,0,.27764],93:[.24982,.74947,0,0,.27764],94:[0,.69141,0,0,.49965],97:[0,.47534,0,0,.50046],98:[0,.69141,0,0,.51315],99:[0,.47534,0,0,.38946],100:[0,.62119,0,0,.49857],101:[0,.47534,0,0,.40053],102:[.18906,.69141,0,0,.32626],103:[.18906,.47534,0,0,.5037],104:[.18906,.69141,0,0,.52126],105:[0,.69141,0,0,.27899],106:[0,.69141,0,0,.28088],107:[0,.69141,0,0,.38946],108:[0,.69141,0,0,.27953],109:[0,.47534,0,0,.76676],110:[0,.47534,0,0,.52666],111:[0,.47534,0,0,.48885],112:[.18906,.52396,0,0,.50046],113:[.18906,.47534,0,0,.48912],114:[0,.47534,0,0,.38919],115:[0,.47534,0,0,.44266],116:[0,.62119,0,0,.33301],117:[0,.47534,0,0,.5172],118:[0,.52396,0,0,.5118],119:[0,.52396,0,0,.77351],120:[.18906,.47534,0,0,.38865],121:[.18906,.47534,0,0,.49884],122:[.18906,.47534,0,0,.39054],160:[0,0,0,0,.25],8216:[0,.69141,0,0,.21471],8217:[0,.69141,0,0,.21471],58112:[0,.62119,0,0,.49749],58113:[0,.62119,0,0,.4983],58114:[.18906,.69141,0,0,.33328],58115:[.18906,.69141,0,0,.32923],58116:[.18906,.47534,0,0,.50343],58117:[0,.69141,0,0,.33301],58118:[0,.62119,0,0,.33409],58119:[0,.47534,0,0,.50073]},"Main-Bold":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.35],34:[0,.69444,0,0,.60278],35:[.19444,.69444,0,0,.95833],36:[.05556,.75,0,0,.575],37:[.05556,.75,0,0,.95833],38:[0,.69444,0,0,.89444],39:[0,.69444,0,0,.31944],40:[.25,.75,0,0,.44722],41:[.25,.75,0,0,.44722],42:[0,.75,0,0,.575],43:[.13333,.63333,0,0,.89444],44:[.19444,.15556,0,0,.31944],45:[0,.44444,0,0,.38333],46:[0,.15556,0,0,.31944],47:[.25,.75,0,0,.575],48:[0,.64444,0,0,.575],49:[0,.64444,0,0,.575],50:[0,.64444,0,0,.575],51:[0,.64444,0,0,.575],52:[0,.64444,0,0,.575],53:[0,.64444,0,0,.575],54:[0,.64444,0,0,.575],55:[0,.64444,0,0,.575],56:[0,.64444,0,0,.575],57:[0,.64444,0,0,.575],58:[0,.44444,0,0,.31944],59:[.19444,.44444,0,0,.31944],60:[.08556,.58556,0,0,.89444],61:[-.10889,.39111,0,0,.89444],62:[.08556,.58556,0,0,.89444],63:[0,.69444,0,0,.54305],64:[0,.69444,0,0,.89444],65:[0,.68611,0,0,.86944],66:[0,.68611,0,0,.81805],67:[0,.68611,0,0,.83055],68:[0,.68611,0,0,.88194],69:[0,.68611,0,0,.75555],70:[0,.68611,0,0,.72361],71:[0,.68611,0,0,.90416],72:[0,.68611,0,0,.9],73:[0,.68611,0,0,.43611],74:[0,.68611,0,0,.59444],75:[0,.68611,0,0,.90138],76:[0,.68611,0,0,.69166],77:[0,.68611,0,0,1.09166],78:[0,.68611,0,0,.9],79:[0,.68611,0,0,.86388],80:[0,.68611,0,0,.78611],81:[.19444,.68611,0,0,.86388],82:[0,.68611,0,0,.8625],83:[0,.68611,0,0,.63889],84:[0,.68611,0,0,.8],85:[0,.68611,0,0,.88472],86:[0,.68611,.01597,0,.86944],87:[0,.68611,.01597,0,1.18888],88:[0,.68611,0,0,.86944],89:[0,.68611,.02875,0,.86944],90:[0,.68611,0,0,.70277],91:[.25,.75,0,0,.31944],92:[.25,.75,0,0,.575],93:[.25,.75,0,0,.31944],94:[0,.69444,0,0,.575],95:[.31,.13444,.03194,0,.575],97:[0,.44444,0,0,.55902],98:[0,.69444,0,0,.63889],99:[0,.44444,0,0,.51111],100:[0,.69444,0,0,.63889],101:[0,.44444,0,0,.52708],102:[0,.69444,.10903,0,.35139],103:[.19444,.44444,.01597,0,.575],104:[0,.69444,0,0,.63889],105:[0,.69444,0,0,.31944],106:[.19444,.69444,0,0,.35139],107:[0,.69444,0,0,.60694],108:[0,.69444,0,0,.31944],109:[0,.44444,0,0,.95833],110:[0,.44444,0,0,.63889],111:[0,.44444,0,0,.575],112:[.19444,.44444,0,0,.63889],113:[.19444,.44444,0,0,.60694],114:[0,.44444,0,0,.47361],115:[0,.44444,0,0,.45361],116:[0,.63492,0,0,.44722],117:[0,.44444,0,0,.63889],118:[0,.44444,.01597,0,.60694],119:[0,.44444,.01597,0,.83055],120:[0,.44444,0,0,.60694],121:[.19444,.44444,.01597,0,.60694],122:[0,.44444,0,0,.51111],123:[.25,.75,0,0,.575],124:[.25,.75,0,0,.31944],125:[.25,.75,0,0,.575],126:[.35,.34444,0,0,.575],160:[0,0,0,0,.25],163:[0,.69444,0,0,.86853],168:[0,.69444,0,0,.575],172:[0,.44444,0,0,.76666],176:[0,.69444,0,0,.86944],177:[.13333,.63333,0,0,.89444],184:[.17014,0,0,0,.51111],198:[0,.68611,0,0,1.04166],215:[.13333,.63333,0,0,.89444],216:[.04861,.73472,0,0,.89444],223:[0,.69444,0,0,.59722],230:[0,.44444,0,0,.83055],247:[.13333,.63333,0,0,.89444],248:[.09722,.54167,0,0,.575],305:[0,.44444,0,0,.31944],338:[0,.68611,0,0,1.16944],339:[0,.44444,0,0,.89444],567:[.19444,.44444,0,0,.35139],710:[0,.69444,0,0,.575],711:[0,.63194,0,0,.575],713:[0,.59611,0,0,.575],714:[0,.69444,0,0,.575],715:[0,.69444,0,0,.575],728:[0,.69444,0,0,.575],729:[0,.69444,0,0,.31944],730:[0,.69444,0,0,.86944],732:[0,.69444,0,0,.575],733:[0,.69444,0,0,.575],915:[0,.68611,0,0,.69166],916:[0,.68611,0,0,.95833],920:[0,.68611,0,0,.89444],923:[0,.68611,0,0,.80555],926:[0,.68611,0,0,.76666],928:[0,.68611,0,0,.9],931:[0,.68611,0,0,.83055],933:[0,.68611,0,0,.89444],934:[0,.68611,0,0,.83055],936:[0,.68611,0,0,.89444],937:[0,.68611,0,0,.83055],8211:[0,.44444,.03194,0,.575],8212:[0,.44444,.03194,0,1.14999],8216:[0,.69444,0,0,.31944],8217:[0,.69444,0,0,.31944],8220:[0,.69444,0,0,.60278],8221:[0,.69444,0,0,.60278],8224:[.19444,.69444,0,0,.51111],8225:[.19444,.69444,0,0,.51111],8242:[0,.55556,0,0,.34444],8407:[0,.72444,.15486,0,.575],8463:[0,.69444,0,0,.66759],8465:[0,.69444,0,0,.83055],8467:[0,.69444,0,0,.47361],8472:[.19444,.44444,0,0,.74027],8476:[0,.69444,0,0,.83055],8501:[0,.69444,0,0,.70277],8592:[-.10889,.39111,0,0,1.14999],8593:[.19444,.69444,0,0,.575],8594:[-.10889,.39111,0,0,1.14999],8595:[.19444,.69444,0,0,.575],8596:[-.10889,.39111,0,0,1.14999],8597:[.25,.75,0,0,.575],8598:[.19444,.69444,0,0,1.14999],8599:[.19444,.69444,0,0,1.14999],8600:[.19444,.69444,0,0,1.14999],8601:[.19444,.69444,0,0,1.14999],8636:[-.10889,.39111,0,0,1.14999],8637:[-.10889,.39111,0,0,1.14999],8640:[-.10889,.39111,0,0,1.14999],8641:[-.10889,.39111,0,0,1.14999],8656:[-.10889,.39111,0,0,1.14999],8657:[.19444,.69444,0,0,.70277],8658:[-.10889,.39111,0,0,1.14999],8659:[.19444,.69444,0,0,.70277],8660:[-.10889,.39111,0,0,1.14999],8661:[.25,.75,0,0,.70277],8704:[0,.69444,0,0,.63889],8706:[0,.69444,.06389,0,.62847],8707:[0,.69444,0,0,.63889],8709:[.05556,.75,0,0,.575],8711:[0,.68611,0,0,.95833],8712:[.08556,.58556,0,0,.76666],8715:[.08556,.58556,0,0,.76666],8722:[.13333,.63333,0,0,.89444],8723:[.13333,.63333,0,0,.89444],8725:[.25,.75,0,0,.575],8726:[.25,.75,0,0,.575],8727:[-.02778,.47222,0,0,.575],8728:[-.02639,.47361,0,0,.575],8729:[-.02639,.47361,0,0,.575],8730:[.18,.82,0,0,.95833],8733:[0,.44444,0,0,.89444],8734:[0,.44444,0,0,1.14999],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.31944],8741:[.25,.75,0,0,.575],8743:[0,.55556,0,0,.76666],8744:[0,.55556,0,0,.76666],8745:[0,.55556,0,0,.76666],8746:[0,.55556,0,0,.76666],8747:[.19444,.69444,.12778,0,.56875],8764:[-.10889,.39111,0,0,.89444],8768:[.19444,.69444,0,0,.31944],8771:[.00222,.50222,0,0,.89444],8773:[.027,.638,0,0,.894],8776:[.02444,.52444,0,0,.89444],8781:[.00222,.50222,0,0,.89444],8801:[.00222,.50222,0,0,.89444],8804:[.19667,.69667,0,0,.89444],8805:[.19667,.69667,0,0,.89444],8810:[.08556,.58556,0,0,1.14999],8811:[.08556,.58556,0,0,1.14999],8826:[.08556,.58556,0,0,.89444],8827:[.08556,.58556,0,0,.89444],8834:[.08556,.58556,0,0,.89444],8835:[.08556,.58556,0,0,.89444],8838:[.19667,.69667,0,0,.89444],8839:[.19667,.69667,0,0,.89444],8846:[0,.55556,0,0,.76666],8849:[.19667,.69667,0,0,.89444],8850:[.19667,.69667,0,0,.89444],8851:[0,.55556,0,0,.76666],8852:[0,.55556,0,0,.76666],8853:[.13333,.63333,0,0,.89444],8854:[.13333,.63333,0,0,.89444],8855:[.13333,.63333,0,0,.89444],8856:[.13333,.63333,0,0,.89444],8857:[.13333,.63333,0,0,.89444],8866:[0,.69444,0,0,.70277],8867:[0,.69444,0,0,.70277],8868:[0,.69444,0,0,.89444],8869:[0,.69444,0,0,.89444],8900:[-.02639,.47361,0,0,.575],8901:[-.02639,.47361,0,0,.31944],8902:[-.02778,.47222,0,0,.575],8968:[.25,.75,0,0,.51111],8969:[.25,.75,0,0,.51111],8970:[.25,.75,0,0,.51111],8971:[.25,.75,0,0,.51111],8994:[-.13889,.36111,0,0,1.14999],8995:[-.13889,.36111,0,0,1.14999],9651:[.19444,.69444,0,0,1.02222],9657:[-.02778,.47222,0,0,.575],9661:[.19444,.69444,0,0,1.02222],9667:[-.02778,.47222,0,0,.575],9711:[.19444,.69444,0,0,1.14999],9824:[.12963,.69444,0,0,.89444],9825:[.12963,.69444,0,0,.89444],9826:[.12963,.69444,0,0,.89444],9827:[.12963,.69444,0,0,.89444],9837:[0,.75,0,0,.44722],9838:[.19444,.69444,0,0,.44722],9839:[.19444,.69444,0,0,.44722],10216:[.25,.75,0,0,.44722],10217:[.25,.75,0,0,.44722],10815:[0,.68611,0,0,.9],10927:[.19667,.69667,0,0,.89444],10928:[.19667,.69667,0,0,.89444],57376:[.19444,.69444,0,0,0]},"Main-BoldItalic":{32:[0,0,0,0,.25],33:[0,.69444,.11417,0,.38611],34:[0,.69444,.07939,0,.62055],35:[.19444,.69444,.06833,0,.94444],37:[.05556,.75,.12861,0,.94444],38:[0,.69444,.08528,0,.88555],39:[0,.69444,.12945,0,.35555],40:[.25,.75,.15806,0,.47333],41:[.25,.75,.03306,0,.47333],42:[0,.75,.14333,0,.59111],43:[.10333,.60333,.03306,0,.88555],44:[.19444,.14722,0,0,.35555],45:[0,.44444,.02611,0,.41444],46:[0,.14722,0,0,.35555],47:[.25,.75,.15806,0,.59111],48:[0,.64444,.13167,0,.59111],49:[0,.64444,.13167,0,.59111],50:[0,.64444,.13167,0,.59111],51:[0,.64444,.13167,0,.59111],52:[.19444,.64444,.13167,0,.59111],53:[0,.64444,.13167,0,.59111],54:[0,.64444,.13167,0,.59111],55:[.19444,.64444,.13167,0,.59111],56:[0,.64444,.13167,0,.59111],57:[0,.64444,.13167,0,.59111],58:[0,.44444,.06695,0,.35555],59:[.19444,.44444,.06695,0,.35555],61:[-.10889,.39111,.06833,0,.88555],63:[0,.69444,.11472,0,.59111],64:[0,.69444,.09208,0,.88555],65:[0,.68611,0,0,.86555],66:[0,.68611,.0992,0,.81666],67:[0,.68611,.14208,0,.82666],68:[0,.68611,.09062,0,.87555],69:[0,.68611,.11431,0,.75666],70:[0,.68611,.12903,0,.72722],71:[0,.68611,.07347,0,.89527],72:[0,.68611,.17208,0,.8961],73:[0,.68611,.15681,0,.47166],74:[0,.68611,.145,0,.61055],75:[0,.68611,.14208,0,.89499],76:[0,.68611,0,0,.69777],77:[0,.68611,.17208,0,1.07277],78:[0,.68611,.17208,0,.8961],79:[0,.68611,.09062,0,.85499],80:[0,.68611,.0992,0,.78721],81:[.19444,.68611,.09062,0,.85499],82:[0,.68611,.02559,0,.85944],83:[0,.68611,.11264,0,.64999],84:[0,.68611,.12903,0,.7961],85:[0,.68611,.17208,0,.88083],86:[0,.68611,.18625,0,.86555],87:[0,.68611,.18625,0,1.15999],88:[0,.68611,.15681,0,.86555],89:[0,.68611,.19803,0,.86555],90:[0,.68611,.14208,0,.70888],91:[.25,.75,.1875,0,.35611],93:[.25,.75,.09972,0,.35611],94:[0,.69444,.06709,0,.59111],95:[.31,.13444,.09811,0,.59111],97:[0,.44444,.09426,0,.59111],98:[0,.69444,.07861,0,.53222],99:[0,.44444,.05222,0,.53222],100:[0,.69444,.10861,0,.59111],101:[0,.44444,.085,0,.53222],102:[.19444,.69444,.21778,0,.4],103:[.19444,.44444,.105,0,.53222],104:[0,.69444,.09426,0,.59111],105:[0,.69326,.11387,0,.35555],106:[.19444,.69326,.1672,0,.35555],107:[0,.69444,.11111,0,.53222],108:[0,.69444,.10861,0,.29666],109:[0,.44444,.09426,0,.94444],110:[0,.44444,.09426,0,.64999],111:[0,.44444,.07861,0,.59111],112:[.19444,.44444,.07861,0,.59111],113:[.19444,.44444,.105,0,.53222],114:[0,.44444,.11111,0,.50167],115:[0,.44444,.08167,0,.48694],116:[0,.63492,.09639,0,.385],117:[0,.44444,.09426,0,.62055],118:[0,.44444,.11111,0,.53222],119:[0,.44444,.11111,0,.76777],120:[0,.44444,.12583,0,.56055],121:[.19444,.44444,.105,0,.56166],122:[0,.44444,.13889,0,.49055],126:[.35,.34444,.11472,0,.59111],160:[0,0,0,0,.25],168:[0,.69444,.11473,0,.59111],176:[0,.69444,0,0,.94888],184:[.17014,0,0,0,.53222],198:[0,.68611,.11431,0,1.02277],216:[.04861,.73472,.09062,0,.88555],223:[.19444,.69444,.09736,0,.665],230:[0,.44444,.085,0,.82666],248:[.09722,.54167,.09458,0,.59111],305:[0,.44444,.09426,0,.35555],338:[0,.68611,.11431,0,1.14054],339:[0,.44444,.085,0,.82666],567:[.19444,.44444,.04611,0,.385],710:[0,.69444,.06709,0,.59111],711:[0,.63194,.08271,0,.59111],713:[0,.59444,.10444,0,.59111],714:[0,.69444,.08528,0,.59111],715:[0,.69444,0,0,.59111],728:[0,.69444,.10333,0,.59111],729:[0,.69444,.12945,0,.35555],730:[0,.69444,0,0,.94888],732:[0,.69444,.11472,0,.59111],733:[0,.69444,.11472,0,.59111],915:[0,.68611,.12903,0,.69777],916:[0,.68611,0,0,.94444],920:[0,.68611,.09062,0,.88555],923:[0,.68611,0,0,.80666],926:[0,.68611,.15092,0,.76777],928:[0,.68611,.17208,0,.8961],931:[0,.68611,.11431,0,.82666],933:[0,.68611,.10778,0,.88555],934:[0,.68611,.05632,0,.82666],936:[0,.68611,.10778,0,.88555],937:[0,.68611,.0992,0,.82666],8211:[0,.44444,.09811,0,.59111],8212:[0,.44444,.09811,0,1.18221],8216:[0,.69444,.12945,0,.35555],8217:[0,.69444,.12945,0,.35555],8220:[0,.69444,.16772,0,.62055],8221:[0,.69444,.07939,0,.62055]},"Main-Italic":{32:[0,0,0,0,.25],33:[0,.69444,.12417,0,.30667],34:[0,.69444,.06961,0,.51444],35:[.19444,.69444,.06616,0,.81777],37:[.05556,.75,.13639,0,.81777],38:[0,.69444,.09694,0,.76666],39:[0,.69444,.12417,0,.30667],40:[.25,.75,.16194,0,.40889],41:[.25,.75,.03694,0,.40889],42:[0,.75,.14917,0,.51111],43:[.05667,.56167,.03694,0,.76666],44:[.19444,.10556,0,0,.30667],45:[0,.43056,.02826,0,.35778],46:[0,.10556,0,0,.30667],47:[.25,.75,.16194,0,.51111],48:[0,.64444,.13556,0,.51111],49:[0,.64444,.13556,0,.51111],50:[0,.64444,.13556,0,.51111],51:[0,.64444,.13556,0,.51111],52:[.19444,.64444,.13556,0,.51111],53:[0,.64444,.13556,0,.51111],54:[0,.64444,.13556,0,.51111],55:[.19444,.64444,.13556,0,.51111],56:[0,.64444,.13556,0,.51111],57:[0,.64444,.13556,0,.51111],58:[0,.43056,.0582,0,.30667],59:[.19444,.43056,.0582,0,.30667],61:[-.13313,.36687,.06616,0,.76666],63:[0,.69444,.1225,0,.51111],64:[0,.69444,.09597,0,.76666],65:[0,.68333,0,0,.74333],66:[0,.68333,.10257,0,.70389],67:[0,.68333,.14528,0,.71555],68:[0,.68333,.09403,0,.755],69:[0,.68333,.12028,0,.67833],70:[0,.68333,.13305,0,.65277],71:[0,.68333,.08722,0,.77361],72:[0,.68333,.16389,0,.74333],73:[0,.68333,.15806,0,.38555],74:[0,.68333,.14028,0,.525],75:[0,.68333,.14528,0,.76888],76:[0,.68333,0,0,.62722],77:[0,.68333,.16389,0,.89666],78:[0,.68333,.16389,0,.74333],79:[0,.68333,.09403,0,.76666],80:[0,.68333,.10257,0,.67833],81:[.19444,.68333,.09403,0,.76666],82:[0,.68333,.03868,0,.72944],83:[0,.68333,.11972,0,.56222],84:[0,.68333,.13305,0,.71555],85:[0,.68333,.16389,0,.74333],86:[0,.68333,.18361,0,.74333],87:[0,.68333,.18361,0,.99888],88:[0,.68333,.15806,0,.74333],89:[0,.68333,.19383,0,.74333],90:[0,.68333,.14528,0,.61333],91:[.25,.75,.1875,0,.30667],93:[.25,.75,.10528,0,.30667],94:[0,.69444,.06646,0,.51111],95:[.31,.12056,.09208,0,.51111],97:[0,.43056,.07671,0,.51111],98:[0,.69444,.06312,0,.46],99:[0,.43056,.05653,0,.46],100:[0,.69444,.10333,0,.51111],101:[0,.43056,.07514,0,.46],102:[.19444,.69444,.21194,0,.30667],103:[.19444,.43056,.08847,0,.46],104:[0,.69444,.07671,0,.51111],105:[0,.65536,.1019,0,.30667],106:[.19444,.65536,.14467,0,.30667],107:[0,.69444,.10764,0,.46],108:[0,.69444,.10333,0,.25555],109:[0,.43056,.07671,0,.81777],110:[0,.43056,.07671,0,.56222],111:[0,.43056,.06312,0,.51111],112:[.19444,.43056,.06312,0,.51111],113:[.19444,.43056,.08847,0,.46],114:[0,.43056,.10764,0,.42166],115:[0,.43056,.08208,0,.40889],116:[0,.61508,.09486,0,.33222],117:[0,.43056,.07671,0,.53666],118:[0,.43056,.10764,0,.46],119:[0,.43056,.10764,0,.66444],120:[0,.43056,.12042,0,.46389],121:[.19444,.43056,.08847,0,.48555],122:[0,.43056,.12292,0,.40889],126:[.35,.31786,.11585,0,.51111],160:[0,0,0,0,.25],168:[0,.66786,.10474,0,.51111],176:[0,.69444,0,0,.83129],184:[.17014,0,0,0,.46],198:[0,.68333,.12028,0,.88277],216:[.04861,.73194,.09403,0,.76666],223:[.19444,.69444,.10514,0,.53666],230:[0,.43056,.07514,0,.71555],248:[.09722,.52778,.09194,0,.51111],338:[0,.68333,.12028,0,.98499],339:[0,.43056,.07514,0,.71555],710:[0,.69444,.06646,0,.51111],711:[0,.62847,.08295,0,.51111],713:[0,.56167,.10333,0,.51111],714:[0,.69444,.09694,0,.51111],715:[0,.69444,0,0,.51111],728:[0,.69444,.10806,0,.51111],729:[0,.66786,.11752,0,.30667],730:[0,.69444,0,0,.83129],732:[0,.66786,.11585,0,.51111],733:[0,.69444,.1225,0,.51111],915:[0,.68333,.13305,0,.62722],916:[0,.68333,0,0,.81777],920:[0,.68333,.09403,0,.76666],923:[0,.68333,0,0,.69222],926:[0,.68333,.15294,0,.66444],928:[0,.68333,.16389,0,.74333],931:[0,.68333,.12028,0,.71555],933:[0,.68333,.11111,0,.76666],934:[0,.68333,.05986,0,.71555],936:[0,.68333,.11111,0,.76666],937:[0,.68333,.10257,0,.71555],8211:[0,.43056,.09208,0,.51111],8212:[0,.43056,.09208,0,1.02222],8216:[0,.69444,.12417,0,.30667],8217:[0,.69444,.12417,0,.30667],8220:[0,.69444,.1685,0,.51444],8221:[0,.69444,.06961,0,.51444],8463:[0,.68889,0,0,.54028]},"Main-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.27778],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.77778],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.19444,.10556,0,0,.27778],45:[0,.43056,0,0,.33333],46:[0,.10556,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.64444,0,0,.5],49:[0,.64444,0,0,.5],50:[0,.64444,0,0,.5],51:[0,.64444,0,0,.5],52:[0,.64444,0,0,.5],53:[0,.64444,0,0,.5],54:[0,.64444,0,0,.5],55:[0,.64444,0,0,.5],56:[0,.64444,0,0,.5],57:[0,.64444,0,0,.5],58:[0,.43056,0,0,.27778],59:[.19444,.43056,0,0,.27778],60:[.0391,.5391,0,0,.77778],61:[-.13313,.36687,0,0,.77778],62:[.0391,.5391,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.77778],65:[0,.68333,0,0,.75],66:[0,.68333,0,0,.70834],67:[0,.68333,0,0,.72222],68:[0,.68333,0,0,.76389],69:[0,.68333,0,0,.68056],70:[0,.68333,0,0,.65278],71:[0,.68333,0,0,.78472],72:[0,.68333,0,0,.75],73:[0,.68333,0,0,.36111],74:[0,.68333,0,0,.51389],75:[0,.68333,0,0,.77778],76:[0,.68333,0,0,.625],77:[0,.68333,0,0,.91667],78:[0,.68333,0,0,.75],79:[0,.68333,0,0,.77778],80:[0,.68333,0,0,.68056],81:[.19444,.68333,0,0,.77778],82:[0,.68333,0,0,.73611],83:[0,.68333,0,0,.55556],84:[0,.68333,0,0,.72222],85:[0,.68333,0,0,.75],86:[0,.68333,.01389,0,.75],87:[0,.68333,.01389,0,1.02778],88:[0,.68333,0,0,.75],89:[0,.68333,.025,0,.75],90:[0,.68333,0,0,.61111],91:[.25,.75,0,0,.27778],92:[.25,.75,0,0,.5],93:[.25,.75,0,0,.27778],94:[0,.69444,0,0,.5],95:[.31,.12056,.02778,0,.5],97:[0,.43056,0,0,.5],98:[0,.69444,0,0,.55556],99:[0,.43056,0,0,.44445],100:[0,.69444,0,0,.55556],101:[0,.43056,0,0,.44445],102:[0,.69444,.07778,0,.30556],103:[.19444,.43056,.01389,0,.5],104:[0,.69444,0,0,.55556],105:[0,.66786,0,0,.27778],106:[.19444,.66786,0,0,.30556],107:[0,.69444,0,0,.52778],108:[0,.69444,0,0,.27778],109:[0,.43056,0,0,.83334],110:[0,.43056,0,0,.55556],111:[0,.43056,0,0,.5],112:[.19444,.43056,0,0,.55556],113:[.19444,.43056,0,0,.52778],114:[0,.43056,0,0,.39167],115:[0,.43056,0,0,.39445],116:[0,.61508,0,0,.38889],117:[0,.43056,0,0,.55556],118:[0,.43056,.01389,0,.52778],119:[0,.43056,.01389,0,.72222],120:[0,.43056,0,0,.52778],121:[.19444,.43056,.01389,0,.52778],122:[0,.43056,0,0,.44445],123:[.25,.75,0,0,.5],124:[.25,.75,0,0,.27778],125:[.25,.75,0,0,.5],126:[.35,.31786,0,0,.5],160:[0,0,0,0,.25],163:[0,.69444,0,0,.76909],167:[.19444,.69444,0,0,.44445],168:[0,.66786,0,0,.5],172:[0,.43056,0,0,.66667],176:[0,.69444,0,0,.75],177:[.08333,.58333,0,0,.77778],182:[.19444,.69444,0,0,.61111],184:[.17014,0,0,0,.44445],198:[0,.68333,0,0,.90278],215:[.08333,.58333,0,0,.77778],216:[.04861,.73194,0,0,.77778],223:[0,.69444,0,0,.5],230:[0,.43056,0,0,.72222],247:[.08333,.58333,0,0,.77778],248:[.09722,.52778,0,0,.5],305:[0,.43056,0,0,.27778],338:[0,.68333,0,0,1.01389],339:[0,.43056,0,0,.77778],567:[.19444,.43056,0,0,.30556],710:[0,.69444,0,0,.5],711:[0,.62847,0,0,.5],713:[0,.56778,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.66786,0,0,.27778],730:[0,.69444,0,0,.75],732:[0,.66786,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.68333,0,0,.625],916:[0,.68333,0,0,.83334],920:[0,.68333,0,0,.77778],923:[0,.68333,0,0,.69445],926:[0,.68333,0,0,.66667],928:[0,.68333,0,0,.75],931:[0,.68333,0,0,.72222],933:[0,.68333,0,0,.77778],934:[0,.68333,0,0,.72222],936:[0,.68333,0,0,.77778],937:[0,.68333,0,0,.72222],8211:[0,.43056,.02778,0,.5],8212:[0,.43056,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5],8224:[.19444,.69444,0,0,.44445],8225:[.19444,.69444,0,0,.44445],8230:[0,.123,0,0,1.172],8242:[0,.55556,0,0,.275],8407:[0,.71444,.15382,0,.5],8463:[0,.68889,0,0,.54028],8465:[0,.69444,0,0,.72222],8467:[0,.69444,0,.11111,.41667],8472:[.19444,.43056,0,.11111,.63646],8476:[0,.69444,0,0,.72222],8501:[0,.69444,0,0,.61111],8592:[-.13313,.36687,0,0,1],8593:[.19444,.69444,0,0,.5],8594:[-.13313,.36687,0,0,1],8595:[.19444,.69444,0,0,.5],8596:[-.13313,.36687,0,0,1],8597:[.25,.75,0,0,.5],8598:[.19444,.69444,0,0,1],8599:[.19444,.69444,0,0,1],8600:[.19444,.69444,0,0,1],8601:[.19444,.69444,0,0,1],8614:[.011,.511,0,0,1],8617:[.011,.511,0,0,1.126],8618:[.011,.511,0,0,1.126],8636:[-.13313,.36687,0,0,1],8637:[-.13313,.36687,0,0,1],8640:[-.13313,.36687,0,0,1],8641:[-.13313,.36687,0,0,1],8652:[.011,.671,0,0,1],8656:[-.13313,.36687,0,0,1],8657:[.19444,.69444,0,0,.61111],8658:[-.13313,.36687,0,0,1],8659:[.19444,.69444,0,0,.61111],8660:[-.13313,.36687,0,0,1],8661:[.25,.75,0,0,.61111],8704:[0,.69444,0,0,.55556],8706:[0,.69444,.05556,.08334,.5309],8707:[0,.69444,0,0,.55556],8709:[.05556,.75,0,0,.5],8711:[0,.68333,0,0,.83334],8712:[.0391,.5391,0,0,.66667],8715:[.0391,.5391,0,0,.66667],8722:[.08333,.58333,0,0,.77778],8723:[.08333,.58333,0,0,.77778],8725:[.25,.75,0,0,.5],8726:[.25,.75,0,0,.5],8727:[-.03472,.46528,0,0,.5],8728:[-.05555,.44445,0,0,.5],8729:[-.05555,.44445,0,0,.5],8730:[.2,.8,0,0,.83334],8733:[0,.43056,0,0,.77778],8734:[0,.43056,0,0,1],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.27778],8741:[.25,.75,0,0,.5],8743:[0,.55556,0,0,.66667],8744:[0,.55556,0,0,.66667],8745:[0,.55556,0,0,.66667],8746:[0,.55556,0,0,.66667],8747:[.19444,.69444,.11111,0,.41667],8764:[-.13313,.36687,0,0,.77778],8768:[.19444,.69444,0,0,.27778],8771:[-.03625,.46375,0,0,.77778],8773:[-.022,.589,0,0,.778],8776:[-.01688,.48312,0,0,.77778],8781:[-.03625,.46375,0,0,.77778],8784:[-.133,.673,0,0,.778],8801:[-.03625,.46375,0,0,.77778],8804:[.13597,.63597,0,0,.77778],8805:[.13597,.63597,0,0,.77778],8810:[.0391,.5391,0,0,1],8811:[.0391,.5391,0,0,1],8826:[.0391,.5391,0,0,.77778],8827:[.0391,.5391,0,0,.77778],8834:[.0391,.5391,0,0,.77778],8835:[.0391,.5391,0,0,.77778],8838:[.13597,.63597,0,0,.77778],8839:[.13597,.63597,0,0,.77778],8846:[0,.55556,0,0,.66667],8849:[.13597,.63597,0,0,.77778],8850:[.13597,.63597,0,0,.77778],8851:[0,.55556,0,0,.66667],8852:[0,.55556,0,0,.66667],8853:[.08333,.58333,0,0,.77778],8854:[.08333,.58333,0,0,.77778],8855:[.08333,.58333,0,0,.77778],8856:[.08333,.58333,0,0,.77778],8857:[.08333,.58333,0,0,.77778],8866:[0,.69444,0,0,.61111],8867:[0,.69444,0,0,.61111],8868:[0,.69444,0,0,.77778],8869:[0,.69444,0,0,.77778],8872:[.249,.75,0,0,.867],8900:[-.05555,.44445,0,0,.5],8901:[-.05555,.44445,0,0,.27778],8902:[-.03472,.46528,0,0,.5],8904:[.005,.505,0,0,.9],8942:[.03,.903,0,0,.278],8943:[-.19,.313,0,0,1.172],8945:[-.1,.823,0,0,1.282],8968:[.25,.75,0,0,.44445],8969:[.25,.75,0,0,.44445],8970:[.25,.75,0,0,.44445],8971:[.25,.75,0,0,.44445],8994:[-.14236,.35764,0,0,1],8995:[-.14236,.35764,0,0,1],9136:[.244,.744,0,0,.412],9137:[.244,.745,0,0,.412],9651:[.19444,.69444,0,0,.88889],9657:[-.03472,.46528,0,0,.5],9661:[.19444,.69444,0,0,.88889],9667:[-.03472,.46528,0,0,.5],9711:[.19444,.69444,0,0,1],9824:[.12963,.69444,0,0,.77778],9825:[.12963,.69444,0,0,.77778],9826:[.12963,.69444,0,0,.77778],9827:[.12963,.69444,0,0,.77778],9837:[0,.75,0,0,.38889],9838:[.19444,.69444,0,0,.38889],9839:[.19444,.69444,0,0,.38889],10216:[.25,.75,0,0,.38889],10217:[.25,.75,0,0,.38889],10222:[.244,.744,0,0,.412],10223:[.244,.745,0,0,.412],10229:[.011,.511,0,0,1.609],10230:[.011,.511,0,0,1.638],10231:[.011,.511,0,0,1.859],10232:[.024,.525,0,0,1.609],10233:[.024,.525,0,0,1.638],10234:[.024,.525,0,0,1.858],10236:[.011,.511,0,0,1.638],10815:[0,.68333,0,0,.75],10927:[.13597,.63597,0,0,.77778],10928:[.13597,.63597,0,0,.77778],57376:[.19444,.69444,0,0,0]},"Math-BoldItalic":{32:[0,0,0,0,.25],48:[0,.44444,0,0,.575],49:[0,.44444,0,0,.575],50:[0,.44444,0,0,.575],51:[.19444,.44444,0,0,.575],52:[.19444,.44444,0,0,.575],53:[.19444,.44444,0,0,.575],54:[0,.64444,0,0,.575],55:[.19444,.44444,0,0,.575],56:[0,.64444,0,0,.575],57:[.19444,.44444,0,0,.575],65:[0,.68611,0,0,.86944],66:[0,.68611,.04835,0,.8664],67:[0,.68611,.06979,0,.81694],68:[0,.68611,.03194,0,.93812],69:[0,.68611,.05451,0,.81007],70:[0,.68611,.15972,0,.68889],71:[0,.68611,0,0,.88673],72:[0,.68611,.08229,0,.98229],73:[0,.68611,.07778,0,.51111],74:[0,.68611,.10069,0,.63125],75:[0,.68611,.06979,0,.97118],76:[0,.68611,0,0,.75555],77:[0,.68611,.11424,0,1.14201],78:[0,.68611,.11424,0,.95034],79:[0,.68611,.03194,0,.83666],80:[0,.68611,.15972,0,.72309],81:[.19444,.68611,0,0,.86861],82:[0,.68611,.00421,0,.87235],83:[0,.68611,.05382,0,.69271],84:[0,.68611,.15972,0,.63663],85:[0,.68611,.11424,0,.80027],86:[0,.68611,.25555,0,.67778],87:[0,.68611,.15972,0,1.09305],88:[0,.68611,.07778,0,.94722],89:[0,.68611,.25555,0,.67458],90:[0,.68611,.06979,0,.77257],97:[0,.44444,0,0,.63287],98:[0,.69444,0,0,.52083],99:[0,.44444,0,0,.51342],100:[0,.69444,0,0,.60972],101:[0,.44444,0,0,.55361],102:[.19444,.69444,.11042,0,.56806],103:[.19444,.44444,.03704,0,.5449],104:[0,.69444,0,0,.66759],105:[0,.69326,0,0,.4048],106:[.19444,.69326,.0622,0,.47083],107:[0,.69444,.01852,0,.6037],108:[0,.69444,.0088,0,.34815],109:[0,.44444,0,0,1.0324],110:[0,.44444,0,0,.71296],111:[0,.44444,0,0,.58472],112:[.19444,.44444,0,0,.60092],113:[.19444,.44444,.03704,0,.54213],114:[0,.44444,.03194,0,.5287],115:[0,.44444,0,0,.53125],116:[0,.63492,0,0,.41528],117:[0,.44444,0,0,.68102],118:[0,.44444,.03704,0,.56666],119:[0,.44444,.02778,0,.83148],120:[0,.44444,0,0,.65903],121:[.19444,.44444,.03704,0,.59028],122:[0,.44444,.04213,0,.55509],160:[0,0,0,0,.25],915:[0,.68611,.15972,0,.65694],916:[0,.68611,0,0,.95833],920:[0,.68611,.03194,0,.86722],923:[0,.68611,0,0,.80555],926:[0,.68611,.07458,0,.84125],928:[0,.68611,.08229,0,.98229],931:[0,.68611,.05451,0,.88507],933:[0,.68611,.15972,0,.67083],934:[0,.68611,0,0,.76666],936:[0,.68611,.11653,0,.71402],937:[0,.68611,.04835,0,.8789],945:[0,.44444,0,0,.76064],946:[.19444,.69444,.03403,0,.65972],947:[.19444,.44444,.06389,0,.59003],948:[0,.69444,.03819,0,.52222],949:[0,.44444,0,0,.52882],950:[.19444,.69444,.06215,0,.50833],951:[.19444,.44444,.03704,0,.6],952:[0,.69444,.03194,0,.5618],953:[0,.44444,0,0,.41204],954:[0,.44444,0,0,.66759],955:[0,.69444,0,0,.67083],956:[.19444,.44444,0,0,.70787],957:[0,.44444,.06898,0,.57685],958:[.19444,.69444,.03021,0,.50833],959:[0,.44444,0,0,.58472],960:[0,.44444,.03704,0,.68241],961:[.19444,.44444,0,0,.6118],962:[.09722,.44444,.07917,0,.42361],963:[0,.44444,.03704,0,.68588],964:[0,.44444,.13472,0,.52083],965:[0,.44444,.03704,0,.63055],966:[.19444,.44444,0,0,.74722],967:[.19444,.44444,0,0,.71805],968:[.19444,.69444,.03704,0,.75833],969:[0,.44444,.03704,0,.71782],977:[0,.69444,0,0,.69155],981:[.19444,.69444,0,0,.7125],982:[0,.44444,.03194,0,.975],1009:[.19444,.44444,0,0,.6118],1013:[0,.44444,0,0,.48333],57649:[0,.44444,0,0,.39352],57911:[.19444,.44444,0,0,.43889]},"Math-Italic":{32:[0,0,0,0,.25],48:[0,.43056,0,0,.5],49:[0,.43056,0,0,.5],50:[0,.43056,0,0,.5],51:[.19444,.43056,0,0,.5],52:[.19444,.43056,0,0,.5],53:[.19444,.43056,0,0,.5],54:[0,.64444,0,0,.5],55:[.19444,.43056,0,0,.5],56:[0,.64444,0,0,.5],57:[.19444,.43056,0,0,.5],65:[0,.68333,0,.13889,.75],66:[0,.68333,.05017,.08334,.75851],67:[0,.68333,.07153,.08334,.71472],68:[0,.68333,.02778,.05556,.82792],69:[0,.68333,.05764,.08334,.7382],70:[0,.68333,.13889,.08334,.64306],71:[0,.68333,0,.08334,.78625],72:[0,.68333,.08125,.05556,.83125],73:[0,.68333,.07847,.11111,.43958],74:[0,.68333,.09618,.16667,.55451],75:[0,.68333,.07153,.05556,.84931],76:[0,.68333,0,.02778,.68056],77:[0,.68333,.10903,.08334,.97014],78:[0,.68333,.10903,.08334,.80347],79:[0,.68333,.02778,.08334,.76278],80:[0,.68333,.13889,.08334,.64201],81:[.19444,.68333,0,.08334,.79056],82:[0,.68333,.00773,.08334,.75929],83:[0,.68333,.05764,.08334,.6132],84:[0,.68333,.13889,.08334,.58438],85:[0,.68333,.10903,.02778,.68278],86:[0,.68333,.22222,0,.58333],87:[0,.68333,.13889,0,.94445],88:[0,.68333,.07847,.08334,.82847],89:[0,.68333,.22222,0,.58056],90:[0,.68333,.07153,.08334,.68264],97:[0,.43056,0,0,.52859],98:[0,.69444,0,0,.42917],99:[0,.43056,0,.05556,.43276],100:[0,.69444,0,.16667,.52049],101:[0,.43056,0,.05556,.46563],102:[.19444,.69444,.10764,.16667,.48959],103:[.19444,.43056,.03588,.02778,.47697],104:[0,.69444,0,0,.57616],105:[0,.65952,0,0,.34451],106:[.19444,.65952,.05724,0,.41181],107:[0,.69444,.03148,0,.5206],108:[0,.69444,.01968,.08334,.29838],109:[0,.43056,0,0,.87801],110:[0,.43056,0,0,.60023],111:[0,.43056,0,.05556,.48472],112:[.19444,.43056,0,.08334,.50313],113:[.19444,.43056,.03588,.08334,.44641],114:[0,.43056,.02778,.05556,.45116],115:[0,.43056,0,.05556,.46875],116:[0,.61508,0,.08334,.36111],117:[0,.43056,0,.02778,.57246],118:[0,.43056,.03588,.02778,.48472],119:[0,.43056,.02691,.08334,.71592],120:[0,.43056,0,.02778,.57153],121:[.19444,.43056,.03588,.05556,.49028],122:[0,.43056,.04398,.05556,.46505],160:[0,0,0,0,.25],915:[0,.68333,.13889,.08334,.61528],916:[0,.68333,0,.16667,.83334],920:[0,.68333,.02778,.08334,.76278],923:[0,.68333,0,.16667,.69445],926:[0,.68333,.07569,.08334,.74236],928:[0,.68333,.08125,.05556,.83125],931:[0,.68333,.05764,.08334,.77986],933:[0,.68333,.13889,.05556,.58333],934:[0,.68333,0,.08334,.66667],936:[0,.68333,.11,.05556,.61222],937:[0,.68333,.05017,.08334,.7724],945:[0,.43056,.0037,.02778,.6397],946:[.19444,.69444,.05278,.08334,.56563],947:[.19444,.43056,.05556,0,.51773],948:[0,.69444,.03785,.05556,.44444],949:[0,.43056,0,.08334,.46632],950:[.19444,.69444,.07378,.08334,.4375],951:[.19444,.43056,.03588,.05556,.49653],952:[0,.69444,.02778,.08334,.46944],953:[0,.43056,0,.05556,.35394],954:[0,.43056,0,0,.57616],955:[0,.69444,0,0,.58334],956:[.19444,.43056,0,.02778,.60255],957:[0,.43056,.06366,.02778,.49398],958:[.19444,.69444,.04601,.11111,.4375],959:[0,.43056,0,.05556,.48472],960:[0,.43056,.03588,0,.57003],961:[.19444,.43056,0,.08334,.51702],962:[.09722,.43056,.07986,.08334,.36285],963:[0,.43056,.03588,0,.57141],964:[0,.43056,.1132,.02778,.43715],965:[0,.43056,.03588,.02778,.54028],966:[.19444,.43056,0,.08334,.65417],967:[.19444,.43056,0,.05556,.62569],968:[.19444,.69444,.03588,.11111,.65139],969:[0,.43056,.03588,0,.62245],977:[0,.69444,0,.08334,.59144],981:[.19444,.69444,0,.08334,.59583],982:[0,.43056,.02778,0,.82813],1009:[.19444,.43056,0,.08334,.51702],1013:[0,.43056,0,.05556,.4059],57649:[0,.43056,0,.02778,.32246],57911:[.19444,.43056,0,.08334,.38403]},"SansSerif-Bold":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.36667],34:[0,.69444,0,0,.55834],35:[.19444,.69444,0,0,.91667],36:[.05556,.75,0,0,.55],37:[.05556,.75,0,0,1.02912],38:[0,.69444,0,0,.83056],39:[0,.69444,0,0,.30556],40:[.25,.75,0,0,.42778],41:[.25,.75,0,0,.42778],42:[0,.75,0,0,.55],43:[.11667,.61667,0,0,.85556],44:[.10556,.13056,0,0,.30556],45:[0,.45833,0,0,.36667],46:[0,.13056,0,0,.30556],47:[.25,.75,0,0,.55],48:[0,.69444,0,0,.55],49:[0,.69444,0,0,.55],50:[0,.69444,0,0,.55],51:[0,.69444,0,0,.55],52:[0,.69444,0,0,.55],53:[0,.69444,0,0,.55],54:[0,.69444,0,0,.55],55:[0,.69444,0,0,.55],56:[0,.69444,0,0,.55],57:[0,.69444,0,0,.55],58:[0,.45833,0,0,.30556],59:[.10556,.45833,0,0,.30556],61:[-.09375,.40625,0,0,.85556],63:[0,.69444,0,0,.51945],64:[0,.69444,0,0,.73334],65:[0,.69444,0,0,.73334],66:[0,.69444,0,0,.73334],67:[0,.69444,0,0,.70278],68:[0,.69444,0,0,.79445],69:[0,.69444,0,0,.64167],70:[0,.69444,0,0,.61111],71:[0,.69444,0,0,.73334],72:[0,.69444,0,0,.79445],73:[0,.69444,0,0,.33056],74:[0,.69444,0,0,.51945],75:[0,.69444,0,0,.76389],76:[0,.69444,0,0,.58056],77:[0,.69444,0,0,.97778],78:[0,.69444,0,0,.79445],79:[0,.69444,0,0,.79445],80:[0,.69444,0,0,.70278],81:[.10556,.69444,0,0,.79445],82:[0,.69444,0,0,.70278],83:[0,.69444,0,0,.61111],84:[0,.69444,0,0,.73334],85:[0,.69444,0,0,.76389],86:[0,.69444,.01528,0,.73334],87:[0,.69444,.01528,0,1.03889],88:[0,.69444,0,0,.73334],89:[0,.69444,.0275,0,.73334],90:[0,.69444,0,0,.67223],91:[.25,.75,0,0,.34306],93:[.25,.75,0,0,.34306],94:[0,.69444,0,0,.55],95:[.35,.10833,.03056,0,.55],97:[0,.45833,0,0,.525],98:[0,.69444,0,0,.56111],99:[0,.45833,0,0,.48889],100:[0,.69444,0,0,.56111],101:[0,.45833,0,0,.51111],102:[0,.69444,.07639,0,.33611],103:[.19444,.45833,.01528,0,.55],104:[0,.69444,0,0,.56111],105:[0,.69444,0,0,.25556],106:[.19444,.69444,0,0,.28611],107:[0,.69444,0,0,.53056],108:[0,.69444,0,0,.25556],109:[0,.45833,0,0,.86667],110:[0,.45833,0,0,.56111],111:[0,.45833,0,0,.55],112:[.19444,.45833,0,0,.56111],113:[.19444,.45833,0,0,.56111],114:[0,.45833,.01528,0,.37222],115:[0,.45833,0,0,.42167],116:[0,.58929,0,0,.40417],117:[0,.45833,0,0,.56111],118:[0,.45833,.01528,0,.5],119:[0,.45833,.01528,0,.74445],120:[0,.45833,0,0,.5],121:[.19444,.45833,.01528,0,.5],122:[0,.45833,0,0,.47639],126:[.35,.34444,0,0,.55],160:[0,0,0,0,.25],168:[0,.69444,0,0,.55],176:[0,.69444,0,0,.73334],180:[0,.69444,0,0,.55],184:[.17014,0,0,0,.48889],305:[0,.45833,0,0,.25556],567:[.19444,.45833,0,0,.28611],710:[0,.69444,0,0,.55],711:[0,.63542,0,0,.55],713:[0,.63778,0,0,.55],728:[0,.69444,0,0,.55],729:[0,.69444,0,0,.30556],730:[0,.69444,0,0,.73334],732:[0,.69444,0,0,.55],733:[0,.69444,0,0,.55],915:[0,.69444,0,0,.58056],916:[0,.69444,0,0,.91667],920:[0,.69444,0,0,.85556],923:[0,.69444,0,0,.67223],926:[0,.69444,0,0,.73334],928:[0,.69444,0,0,.79445],931:[0,.69444,0,0,.79445],933:[0,.69444,0,0,.85556],934:[0,.69444,0,0,.79445],936:[0,.69444,0,0,.85556],937:[0,.69444,0,0,.79445],8211:[0,.45833,.03056,0,.55],8212:[0,.45833,.03056,0,1.10001],8216:[0,.69444,0,0,.30556],8217:[0,.69444,0,0,.30556],8220:[0,.69444,0,0,.55834],8221:[0,.69444,0,0,.55834]},"SansSerif-Italic":{32:[0,0,0,0,.25],33:[0,.69444,.05733,0,.31945],34:[0,.69444,.00316,0,.5],35:[.19444,.69444,.05087,0,.83334],36:[.05556,.75,.11156,0,.5],37:[.05556,.75,.03126,0,.83334],38:[0,.69444,.03058,0,.75834],39:[0,.69444,.07816,0,.27778],40:[.25,.75,.13164,0,.38889],41:[.25,.75,.02536,0,.38889],42:[0,.75,.11775,0,.5],43:[.08333,.58333,.02536,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,.01946,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,.13164,0,.5],48:[0,.65556,.11156,0,.5],49:[0,.65556,.11156,0,.5],50:[0,.65556,.11156,0,.5],51:[0,.65556,.11156,0,.5],52:[0,.65556,.11156,0,.5],53:[0,.65556,.11156,0,.5],54:[0,.65556,.11156,0,.5],55:[0,.65556,.11156,0,.5],56:[0,.65556,.11156,0,.5],57:[0,.65556,.11156,0,.5],58:[0,.44444,.02502,0,.27778],59:[.125,.44444,.02502,0,.27778],61:[-.13,.37,.05087,0,.77778],63:[0,.69444,.11809,0,.47222],64:[0,.69444,.07555,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,.08293,0,.66667],67:[0,.69444,.11983,0,.63889],68:[0,.69444,.07555,0,.72223],69:[0,.69444,.11983,0,.59722],70:[0,.69444,.13372,0,.56945],71:[0,.69444,.11983,0,.66667],72:[0,.69444,.08094,0,.70834],73:[0,.69444,.13372,0,.27778],74:[0,.69444,.08094,0,.47222],75:[0,.69444,.11983,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,.08094,0,.875],78:[0,.69444,.08094,0,.70834],79:[0,.69444,.07555,0,.73611],80:[0,.69444,.08293,0,.63889],81:[.125,.69444,.07555,0,.73611],82:[0,.69444,.08293,0,.64584],83:[0,.69444,.09205,0,.55556],84:[0,.69444,.13372,0,.68056],85:[0,.69444,.08094,0,.6875],86:[0,.69444,.1615,0,.66667],87:[0,.69444,.1615,0,.94445],88:[0,.69444,.13372,0,.66667],89:[0,.69444,.17261,0,.66667],90:[0,.69444,.11983,0,.61111],91:[.25,.75,.15942,0,.28889],93:[.25,.75,.08719,0,.28889],94:[0,.69444,.0799,0,.5],95:[.35,.09444,.08616,0,.5],97:[0,.44444,.00981,0,.48056],98:[0,.69444,.03057,0,.51667],99:[0,.44444,.08336,0,.44445],100:[0,.69444,.09483,0,.51667],101:[0,.44444,.06778,0,.44445],102:[0,.69444,.21705,0,.30556],103:[.19444,.44444,.10836,0,.5],104:[0,.69444,.01778,0,.51667],105:[0,.67937,.09718,0,.23889],106:[.19444,.67937,.09162,0,.26667],107:[0,.69444,.08336,0,.48889],108:[0,.69444,.09483,0,.23889],109:[0,.44444,.01778,0,.79445],110:[0,.44444,.01778,0,.51667],111:[0,.44444,.06613,0,.5],112:[.19444,.44444,.0389,0,.51667],113:[.19444,.44444,.04169,0,.51667],114:[0,.44444,.10836,0,.34167],115:[0,.44444,.0778,0,.38333],116:[0,.57143,.07225,0,.36111],117:[0,.44444,.04169,0,.51667],118:[0,.44444,.10836,0,.46111],119:[0,.44444,.10836,0,.68334],120:[0,.44444,.09169,0,.46111],121:[.19444,.44444,.10836,0,.46111],122:[0,.44444,.08752,0,.43472],126:[.35,.32659,.08826,0,.5],160:[0,0,0,0,.25],168:[0,.67937,.06385,0,.5],176:[0,.69444,0,0,.73752],184:[.17014,0,0,0,.44445],305:[0,.44444,.04169,0,.23889],567:[.19444,.44444,.04169,0,.26667],710:[0,.69444,.0799,0,.5],711:[0,.63194,.08432,0,.5],713:[0,.60889,.08776,0,.5],714:[0,.69444,.09205,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,.09483,0,.5],729:[0,.67937,.07774,0,.27778],730:[0,.69444,0,0,.73752],732:[0,.67659,.08826,0,.5],733:[0,.69444,.09205,0,.5],915:[0,.69444,.13372,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,.07555,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,.12816,0,.66667],928:[0,.69444,.08094,0,.70834],931:[0,.69444,.11983,0,.72222],933:[0,.69444,.09031,0,.77778],934:[0,.69444,.04603,0,.72222],936:[0,.69444,.09031,0,.77778],937:[0,.69444,.08293,0,.72222],8211:[0,.44444,.08616,0,.5],8212:[0,.44444,.08616,0,1],8216:[0,.69444,.07816,0,.27778],8217:[0,.69444,.07816,0,.27778],8220:[0,.69444,.14205,0,.5],8221:[0,.69444,.00316,0,.5]},"SansSerif-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.31945],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.75834],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,0,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.65556,0,0,.5],49:[0,.65556,0,0,.5],50:[0,.65556,0,0,.5],51:[0,.65556,0,0,.5],52:[0,.65556,0,0,.5],53:[0,.65556,0,0,.5],54:[0,.65556,0,0,.5],55:[0,.65556,0,0,.5],56:[0,.65556,0,0,.5],57:[0,.65556,0,0,.5],58:[0,.44444,0,0,.27778],59:[.125,.44444,0,0,.27778],61:[-.13,.37,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,0,0,.66667],67:[0,.69444,0,0,.63889],68:[0,.69444,0,0,.72223],69:[0,.69444,0,0,.59722],70:[0,.69444,0,0,.56945],71:[0,.69444,0,0,.66667],72:[0,.69444,0,0,.70834],73:[0,.69444,0,0,.27778],74:[0,.69444,0,0,.47222],75:[0,.69444,0,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,0,0,.875],78:[0,.69444,0,0,.70834],79:[0,.69444,0,0,.73611],80:[0,.69444,0,0,.63889],81:[.125,.69444,0,0,.73611],82:[0,.69444,0,0,.64584],83:[0,.69444,0,0,.55556],84:[0,.69444,0,0,.68056],85:[0,.69444,0,0,.6875],86:[0,.69444,.01389,0,.66667],87:[0,.69444,.01389,0,.94445],88:[0,.69444,0,0,.66667],89:[0,.69444,.025,0,.66667],90:[0,.69444,0,0,.61111],91:[.25,.75,0,0,.28889],93:[.25,.75,0,0,.28889],94:[0,.69444,0,0,.5],95:[.35,.09444,.02778,0,.5],97:[0,.44444,0,0,.48056],98:[0,.69444,0,0,.51667],99:[0,.44444,0,0,.44445],100:[0,.69444,0,0,.51667],101:[0,.44444,0,0,.44445],102:[0,.69444,.06944,0,.30556],103:[.19444,.44444,.01389,0,.5],104:[0,.69444,0,0,.51667],105:[0,.67937,0,0,.23889],106:[.19444,.67937,0,0,.26667],107:[0,.69444,0,0,.48889],108:[0,.69444,0,0,.23889],109:[0,.44444,0,0,.79445],110:[0,.44444,0,0,.51667],111:[0,.44444,0,0,.5],112:[.19444,.44444,0,0,.51667],113:[.19444,.44444,0,0,.51667],114:[0,.44444,.01389,0,.34167],115:[0,.44444,0,0,.38333],116:[0,.57143,0,0,.36111],117:[0,.44444,0,0,.51667],118:[0,.44444,.01389,0,.46111],119:[0,.44444,.01389,0,.68334],120:[0,.44444,0,0,.46111],121:[.19444,.44444,.01389,0,.46111],122:[0,.44444,0,0,.43472],126:[.35,.32659,0,0,.5],160:[0,0,0,0,.25],168:[0,.67937,0,0,.5],176:[0,.69444,0,0,.66667],184:[.17014,0,0,0,.44445],305:[0,.44444,0,0,.23889],567:[.19444,.44444,0,0,.26667],710:[0,.69444,0,0,.5],711:[0,.63194,0,0,.5],713:[0,.60889,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.67937,0,0,.27778],730:[0,.69444,0,0,.66667],732:[0,.67659,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.69444,0,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,0,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,0,0,.66667],928:[0,.69444,0,0,.70834],931:[0,.69444,0,0,.72222],933:[0,.69444,0,0,.77778],934:[0,.69444,0,0,.72222],936:[0,.69444,0,0,.77778],937:[0,.69444,0,0,.72222],8211:[0,.44444,.02778,0,.5],8212:[0,.44444,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5]},"Script-Regular":{32:[0,0,0,0,.25],65:[0,.7,.22925,0,.80253],66:[0,.7,.04087,0,.90757],67:[0,.7,.1689,0,.66619],68:[0,.7,.09371,0,.77443],69:[0,.7,.18583,0,.56162],70:[0,.7,.13634,0,.89544],71:[0,.7,.17322,0,.60961],72:[0,.7,.29694,0,.96919],73:[0,.7,.19189,0,.80907],74:[.27778,.7,.19189,0,1.05159],75:[0,.7,.31259,0,.91364],76:[0,.7,.19189,0,.87373],77:[0,.7,.15981,0,1.08031],78:[0,.7,.3525,0,.9015],79:[0,.7,.08078,0,.73787],80:[0,.7,.08078,0,1.01262],81:[0,.7,.03305,0,.88282],82:[0,.7,.06259,0,.85],83:[0,.7,.19189,0,.86767],84:[0,.7,.29087,0,.74697],85:[0,.7,.25815,0,.79996],86:[0,.7,.27523,0,.62204],87:[0,.7,.27523,0,.80532],88:[0,.7,.26006,0,.94445],89:[0,.7,.2939,0,.70961],90:[0,.7,.24037,0,.8212],160:[0,0,0,0,.25]},"Size1-Regular":{32:[0,0,0,0,.25],40:[.35001,.85,0,0,.45834],41:[.35001,.85,0,0,.45834],47:[.35001,.85,0,0,.57778],91:[.35001,.85,0,0,.41667],92:[.35001,.85,0,0,.57778],93:[.35001,.85,0,0,.41667],123:[.35001,.85,0,0,.58334],125:[.35001,.85,0,0,.58334],160:[0,0,0,0,.25],710:[0,.72222,0,0,.55556],732:[0,.72222,0,0,.55556],770:[0,.72222,0,0,.55556],771:[0,.72222,0,0,.55556],8214:[-99e-5,.601,0,0,.77778],8593:[1e-5,.6,0,0,.66667],8595:[1e-5,.6,0,0,.66667],8657:[1e-5,.6,0,0,.77778],8659:[1e-5,.6,0,0,.77778],8719:[.25001,.75,0,0,.94445],8720:[.25001,.75,0,0,.94445],8721:[.25001,.75,0,0,1.05556],8730:[.35001,.85,0,0,1],8739:[-.00599,.606,0,0,.33333],8741:[-.00599,.606,0,0,.55556],8747:[.30612,.805,.19445,0,.47222],8748:[.306,.805,.19445,0,.47222],8749:[.306,.805,.19445,0,.47222],8750:[.30612,.805,.19445,0,.47222],8896:[.25001,.75,0,0,.83334],8897:[.25001,.75,0,0,.83334],8898:[.25001,.75,0,0,.83334],8899:[.25001,.75,0,0,.83334],8968:[.35001,.85,0,0,.47222],8969:[.35001,.85,0,0,.47222],8970:[.35001,.85,0,0,.47222],8971:[.35001,.85,0,0,.47222],9168:[-99e-5,.601,0,0,.66667],10216:[.35001,.85,0,0,.47222],10217:[.35001,.85,0,0,.47222],10752:[.25001,.75,0,0,1.11111],10753:[.25001,.75,0,0,1.11111],10754:[.25001,.75,0,0,1.11111],10756:[.25001,.75,0,0,.83334],10758:[.25001,.75,0,0,.83334]},"Size2-Regular":{32:[0,0,0,0,.25],40:[.65002,1.15,0,0,.59722],41:[.65002,1.15,0,0,.59722],47:[.65002,1.15,0,0,.81111],91:[.65002,1.15,0,0,.47222],92:[.65002,1.15,0,0,.81111],93:[.65002,1.15,0,0,.47222],123:[.65002,1.15,0,0,.66667],125:[.65002,1.15,0,0,.66667],160:[0,0,0,0,.25],710:[0,.75,0,0,1],732:[0,.75,0,0,1],770:[0,.75,0,0,1],771:[0,.75,0,0,1],8719:[.55001,1.05,0,0,1.27778],8720:[.55001,1.05,0,0,1.27778],8721:[.55001,1.05,0,0,1.44445],8730:[.65002,1.15,0,0,1],8747:[.86225,1.36,.44445,0,.55556],8748:[.862,1.36,.44445,0,.55556],8749:[.862,1.36,.44445,0,.55556],8750:[.86225,1.36,.44445,0,.55556],8896:[.55001,1.05,0,0,1.11111],8897:[.55001,1.05,0,0,1.11111],8898:[.55001,1.05,0,0,1.11111],8899:[.55001,1.05,0,0,1.11111],8968:[.65002,1.15,0,0,.52778],8969:[.65002,1.15,0,0,.52778],8970:[.65002,1.15,0,0,.52778],8971:[.65002,1.15,0,0,.52778],10216:[.65002,1.15,0,0,.61111],10217:[.65002,1.15,0,0,.61111],10752:[.55001,1.05,0,0,1.51112],10753:[.55001,1.05,0,0,1.51112],10754:[.55001,1.05,0,0,1.51112],10756:[.55001,1.05,0,0,1.11111],10758:[.55001,1.05,0,0,1.11111]},"Size3-Regular":{32:[0,0,0,0,.25],40:[.95003,1.45,0,0,.73611],41:[.95003,1.45,0,0,.73611],47:[.95003,1.45,0,0,1.04445],91:[.95003,1.45,0,0,.52778],92:[.95003,1.45,0,0,1.04445],93:[.95003,1.45,0,0,.52778],123:[.95003,1.45,0,0,.75],125:[.95003,1.45,0,0,.75],160:[0,0,0,0,.25],710:[0,.75,0,0,1.44445],732:[0,.75,0,0,1.44445],770:[0,.75,0,0,1.44445],771:[0,.75,0,0,1.44445],8730:[.95003,1.45,0,0,1],8968:[.95003,1.45,0,0,.58334],8969:[.95003,1.45,0,0,.58334],8970:[.95003,1.45,0,0,.58334],8971:[.95003,1.45,0,0,.58334],10216:[.95003,1.45,0,0,.75],10217:[.95003,1.45,0,0,.75]},"Size4-Regular":{32:[0,0,0,0,.25],40:[1.25003,1.75,0,0,.79167],41:[1.25003,1.75,0,0,.79167],47:[1.25003,1.75,0,0,1.27778],91:[1.25003,1.75,0,0,.58334],92:[1.25003,1.75,0,0,1.27778],93:[1.25003,1.75,0,0,.58334],123:[1.25003,1.75,0,0,.80556],125:[1.25003,1.75,0,0,.80556],160:[0,0,0,0,.25],710:[0,.825,0,0,1.8889],732:[0,.825,0,0,1.8889],770:[0,.825,0,0,1.8889],771:[0,.825,0,0,1.8889],8730:[1.25003,1.75,0,0,1],8968:[1.25003,1.75,0,0,.63889],8969:[1.25003,1.75,0,0,.63889],8970:[1.25003,1.75,0,0,.63889],8971:[1.25003,1.75,0,0,.63889],9115:[.64502,1.155,0,0,.875],9116:[1e-5,.6,0,0,.875],9117:[.64502,1.155,0,0,.875],9118:[.64502,1.155,0,0,.875],9119:[1e-5,.6,0,0,.875],9120:[.64502,1.155,0,0,.875],9121:[.64502,1.155,0,0,.66667],9122:[-99e-5,.601,0,0,.66667],9123:[.64502,1.155,0,0,.66667],9124:[.64502,1.155,0,0,.66667],9125:[-99e-5,.601,0,0,.66667],9126:[.64502,1.155,0,0,.66667],9127:[1e-5,.9,0,0,.88889],9128:[.65002,1.15,0,0,.88889],9129:[.90001,0,0,0,.88889],9130:[0,.3,0,0,.88889],9131:[1e-5,.9,0,0,.88889],9132:[.65002,1.15,0,0,.88889],9133:[.90001,0,0,0,.88889],9143:[.88502,.915,0,0,1.05556],10216:[1.25003,1.75,0,0,.80556],10217:[1.25003,1.75,0,0,.80556],57344:[-.00499,.605,0,0,1.05556],57345:[-.00499,.605,0,0,1.05556],57680:[0,.12,0,0,.45],57681:[0,.12,0,0,.45],57682:[0,.12,0,0,.45],57683:[0,.12,0,0,.45]},"Typewriter-Regular":{32:[0,0,0,0,.525],33:[0,.61111,0,0,.525],34:[0,.61111,0,0,.525],35:[0,.61111,0,0,.525],36:[.08333,.69444,0,0,.525],37:[.08333,.69444,0,0,.525],38:[0,.61111,0,0,.525],39:[0,.61111,0,0,.525],40:[.08333,.69444,0,0,.525],41:[.08333,.69444,0,0,.525],42:[0,.52083,0,0,.525],43:[-.08056,.53055,0,0,.525],44:[.13889,.125,0,0,.525],45:[-.08056,.53055,0,0,.525],46:[0,.125,0,0,.525],47:[.08333,.69444,0,0,.525],48:[0,.61111,0,0,.525],49:[0,.61111,0,0,.525],50:[0,.61111,0,0,.525],51:[0,.61111,0,0,.525],52:[0,.61111,0,0,.525],53:[0,.61111,0,0,.525],54:[0,.61111,0,0,.525],55:[0,.61111,0,0,.525],56:[0,.61111,0,0,.525],57:[0,.61111,0,0,.525],58:[0,.43056,0,0,.525],59:[.13889,.43056,0,0,.525],60:[-.05556,.55556,0,0,.525],61:[-.19549,.41562,0,0,.525],62:[-.05556,.55556,0,0,.525],63:[0,.61111,0,0,.525],64:[0,.61111,0,0,.525],65:[0,.61111,0,0,.525],66:[0,.61111,0,0,.525],67:[0,.61111,0,0,.525],68:[0,.61111,0,0,.525],69:[0,.61111,0,0,.525],70:[0,.61111,0,0,.525],71:[0,.61111,0,0,.525],72:[0,.61111,0,0,.525],73:[0,.61111,0,0,.525],74:[0,.61111,0,0,.525],75:[0,.61111,0,0,.525],76:[0,.61111,0,0,.525],77:[0,.61111,0,0,.525],78:[0,.61111,0,0,.525],79:[0,.61111,0,0,.525],80:[0,.61111,0,0,.525],81:[.13889,.61111,0,0,.525],82:[0,.61111,0,0,.525],83:[0,.61111,0,0,.525],84:[0,.61111,0,0,.525],85:[0,.61111,0,0,.525],86:[0,.61111,0,0,.525],87:[0,.61111,0,0,.525],88:[0,.61111,0,0,.525],89:[0,.61111,0,0,.525],90:[0,.61111,0,0,.525],91:[.08333,.69444,0,0,.525],92:[.08333,.69444,0,0,.525],93:[.08333,.69444,0,0,.525],94:[0,.61111,0,0,.525],95:[.09514,0,0,0,.525],96:[0,.61111,0,0,.525],97:[0,.43056,0,0,.525],98:[0,.61111,0,0,.525],99:[0,.43056,0,0,.525],100:[0,.61111,0,0,.525],101:[0,.43056,0,0,.525],102:[0,.61111,0,0,.525],103:[.22222,.43056,0,0,.525],104:[0,.61111,0,0,.525],105:[0,.61111,0,0,.525],106:[.22222,.61111,0,0,.525],107:[0,.61111,0,0,.525],108:[0,.61111,0,0,.525],109:[0,.43056,0,0,.525],110:[0,.43056,0,0,.525],111:[0,.43056,0,0,.525],112:[.22222,.43056,0,0,.525],113:[.22222,.43056,0,0,.525],114:[0,.43056,0,0,.525],115:[0,.43056,0,0,.525],116:[0,.55358,0,0,.525],117:[0,.43056,0,0,.525],118:[0,.43056,0,0,.525],119:[0,.43056,0,0,.525],120:[0,.43056,0,0,.525],121:[.22222,.43056,0,0,.525],122:[0,.43056,0,0,.525],123:[.08333,.69444,0,0,.525],124:[.08333,.69444,0,0,.525],125:[.08333,.69444,0,0,.525],126:[0,.61111,0,0,.525],127:[0,.61111,0,0,.525],160:[0,0,0,0,.525],176:[0,.61111,0,0,.525],184:[.19445,0,0,0,.525],305:[0,.43056,0,0,.525],567:[.22222,.43056,0,0,.525],711:[0,.56597,0,0,.525],713:[0,.56555,0,0,.525],714:[0,.61111,0,0,.525],715:[0,.61111,0,0,.525],728:[0,.61111,0,0,.525],730:[0,.61111,0,0,.525],770:[0,.61111,0,0,.525],771:[0,.61111,0,0,.525],776:[0,.61111,0,0,.525],915:[0,.61111,0,0,.525],916:[0,.61111,0,0,.525],920:[0,.61111,0,0,.525],923:[0,.61111,0,0,.525],926:[0,.61111,0,0,.525],928:[0,.61111,0,0,.525],931:[0,.61111,0,0,.525],933:[0,.61111,0,0,.525],934:[0,.61111,0,0,.525],936:[0,.61111,0,0,.525],937:[0,.61111,0,0,.525],8216:[0,.61111,0,0,.525],8217:[0,.61111,0,0,.525],8242:[0,.61111,0,0,.525],9251:[.11111,.21944,0,0,.525]}},B={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2],arrayRuleWidth:[.04,.04,.04],fboxsep:[.3,.3,.3],fboxrule:[.04,.04,.04]},C={"\xc5":"A","\xd0":"D","\xde":"o","\xe5":"a","\xf0":"d","\xfe":"o","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};function N(e,t,r){if(!T[t])throw new Error("Font metrics not found for font: "+t+".");var n=e.charCodeAt(0),a=T[t][n];if(!a&&e[0]in C&&(n=C[e[0]].charCodeAt(0),a=T[t][n]),a||"text"!==r||S(n)&&(a=T[t][77]),a)return{depth:a[0],height:a[1],italic:a[2],skew:a[3],width:a[4]}}var q={};var I=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]],R=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488],H=function(e,t){return t.size<2?e:I[e-1][t.size-1]},O=function(){function e(t){this.style=void 0,this.color=void 0,this.size=void 0,this.textSize=void 0,this.phantom=void 0,this.font=void 0,this.fontFamily=void 0,this.fontWeight=void 0,this.fontShape=void 0,this.sizeMultiplier=void 0,this.maxSize=void 0,this.minRuleThickness=void 0,this._fontMetrics=void 0,this.style=t.style,this.color=t.color,this.size=t.size||e.BASESIZE,this.textSize=t.textSize||this.size,this.phantom=!!t.phantom,this.font=t.font||"",this.fontFamily=t.fontFamily||"",this.fontWeight=t.fontWeight||"",this.fontShape=t.fontShape||"",this.sizeMultiplier=R[this.size-1],this.maxSize=t.maxSize,this.minRuleThickness=t.minRuleThickness,this._fontMetrics=void 0}var t=e.prototype;return t.extend=function(t){var r={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,fontFamily:this.fontFamily,fontWeight:this.fontWeight,fontShape:this.fontShape,maxSize:this.maxSize,minRuleThickness:this.minRuleThickness};for(var n in t)t.hasOwnProperty(n)&&(r[n]=t[n]);return new e(r)},t.havingStyle=function(e){return this.style===e?this:this.extend({style:e,size:H(this.textSize,e)})},t.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())},t.havingSize=function(e){return this.size===e&&this.textSize===e?this:this.extend({style:this.style.text(),size:e,textSize:e,sizeMultiplier:R[e-1]})},t.havingBaseStyle=function(t){t=t||this.style.text();var r=H(e.BASESIZE,t);return this.size===r&&this.textSize===e.BASESIZE&&this.style===t?this:this.extend({style:t,size:r})},t.havingBaseSizing=function(){var e;switch(this.style.id){case 4:case 5:e=3;break;case 6:case 7:e=1;break;default:e=6}return this.extend({style:this.style.text(),size:e})},t.withColor=function(e){return this.extend({color:e})},t.withPhantom=function(){return this.extend({phantom:!0})},t.withFont=function(e){return this.extend({font:e})},t.withTextFontFamily=function(e){return this.extend({fontFamily:e,font:""})},t.withTextFontWeight=function(e){return this.extend({fontWeight:e,font:""})},t.withTextFontShape=function(e){return this.extend({fontShape:e,font:""})},t.sizingClasses=function(e){return e.size!==this.size?["sizing","reset-size"+e.size,"size"+this.size]:[]},t.baseSizingClasses=function(){return this.size!==e.BASESIZE?["sizing","reset-size"+this.size,"size"+e.BASESIZE]:[]},t.fontMetrics=function(){return this._fontMetrics||(this._fontMetrics=function(e){var t;if(!q[t=e>=5?0:e>=3?1:2]){var r=q[t]={cssEmPerMu:B.quad[t]/18};for(var n in B)B.hasOwnProperty(n)&&(r[n]=B[n][t])}return q[t]}(this.size)),this._fontMetrics},t.getColor=function(){return this.phantom?"transparent":this.color},e}();O.BASESIZE=6;var E=O,L={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:1.00375,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:1.00375},D={ex:!0,em:!0,mu:!0},V=function(e){return"string"!=typeof e&&(e=e.unit),e in L||e in D||"ex"===e},P=function(e,t){var r;if(e.unit in L)r=L[e.unit]/t.fontMetrics().ptPerEm/t.sizeMultiplier;else if("mu"===e.unit)r=t.fontMetrics().cssEmPerMu;else{var a;if(a=t.style.isTight()?t.havingStyle(t.style.text()):t,"ex"===e.unit)r=a.fontMetrics().xHeight;else{if("em"!==e.unit)throw new n("Invalid unit: '"+e.unit+"'");r=a.fontMetrics().quad}a!==t&&(r*=a.sizeMultiplier/t.sizeMultiplier)}return Math.min(e.number*r,t.maxSize)},F=function(e){return+e.toFixed(4)+"em"},G=function(e){return e.filter((function(e){return e})).join(" ")},U=function(e,t,r){if(this.classes=e||[],this.attributes={},this.height=0,this.depth=0,this.maxFontSize=0,this.style=r||{},t){t.style.isTight()&&this.classes.push("mtight");var n=t.getColor();n&&(this.style.color=n)}},Y=function(e){var t=document.createElement(e);for(var r in t.className=G(this.classes),this.style)this.style.hasOwnProperty(r)&&(t.style[r]=this.style[r]);for(var n in this.attributes)this.attributes.hasOwnProperty(n)&&t.setAttribute(n,this.attributes[n]);for(var a=0;a<this.children.length;a++)t.appendChild(this.children[a].toNode());return t},X=function(e){var t="<"+e;this.classes.length&&(t+=' class="'+l.escape(G(this.classes))+'"');var r="";for(var n in this.style)this.style.hasOwnProperty(n)&&(r+=l.hyphenate(n)+":"+this.style[n]+";");for(var a in r&&(t+=' style="'+l.escape(r)+'"'),this.attributes)this.attributes.hasOwnProperty(a)&&(t+=" "+a+'="'+l.escape(this.attributes[a])+'"');t+=">";for(var i=0;i<this.children.length;i++)t+=this.children[i].toMarkup();return t+="</"+e+">"},W=function(){function e(e,t,r,n){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.width=void 0,this.maxFontSize=void 0,this.style=void 0,U.call(this,e,r,n),this.children=t||[]}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){return Y.call(this,"span")},t.toMarkup=function(){return X.call(this,"span")},e}(),_=function(){function e(e,t,r,n){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,U.call(this,t,n),this.children=r||[],this.setAttribute("href",e)}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){return Y.call(this,"a")},t.toMarkup=function(){return X.call(this,"a")},e}(),j=function(){function e(e,t,r){this.src=void 0,this.alt=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.alt=t,this.src=e,this.classes=["mord"],this.style=r}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){var e=document.createElement("img");for(var t in e.src=this.src,e.alt=this.alt,e.className="mord",this.style)this.style.hasOwnProperty(t)&&(e.style[t]=this.style[t]);return e},t.toMarkup=function(){var e="<img  src='"+this.src+" 'alt='"+this.alt+"' ",t="";for(var r in this.style)this.style.hasOwnProperty(r)&&(t+=l.hyphenate(r)+":"+this.style[r]+";");return t&&(e+=' style="'+l.escape(t)+'"'),e+="'/>"},e}(),$={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"},Z=function(){function e(e,t,r,n,a,i,o,s){this.text=void 0,this.height=void 0,this.depth=void 0,this.italic=void 0,this.skew=void 0,this.width=void 0,this.maxFontSize=void 0,this.classes=void 0,this.style=void 0,this.text=e,this.height=t||0,this.depth=r||0,this.italic=n||0,this.skew=a||0,this.width=i||0,this.classes=o||[],this.style=s||{},this.maxFontSize=0;var l=function(e){for(var t=0;t<w.length;t++)for(var r=w[t],n=0;n<r.blocks.length;n++){var a=r.blocks[n];if(e>=a[0]&&e<=a[1])return r.name}return null}(this.text.charCodeAt(0));l&&this.classes.push(l+"_fallback"),/[\xee\xef\xed\xec]/.test(this.text)&&(this.text=$[this.text])}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){var e=document.createTextNode(this.text),t=null;for(var r in this.italic>0&&((t=document.createElement("span")).style.marginRight=F(this.italic)),this.classes.length>0&&((t=t||document.createElement("span")).className=G(this.classes)),this.style)this.style.hasOwnProperty(r)&&((t=t||document.createElement("span")).style[r]=this.style[r]);return t?(t.appendChild(e),t):e},t.toMarkup=function(){var e=!1,t="<span";this.classes.length&&(e=!0,t+=' class="',t+=l.escape(G(this.classes)),t+='"');var r="";for(var n in this.italic>0&&(r+="margin-right:"+this.italic+"em;"),this.style)this.style.hasOwnProperty(n)&&(r+=l.hyphenate(n)+":"+this.style[n]+";");r&&(e=!0,t+=' style="'+l.escape(r)+'"');var a=l.escape(this.text);return e?(t+=">",t+=a,t+="</span>"):a},e}(),K=function(){function e(e,t){this.children=void 0,this.attributes=void 0,this.children=e||[],this.attributes=t||{}}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS("http://www.w3.org/2000/svg","svg");for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);for(var r=0;r<this.children.length;r++)e.appendChild(this.children[r].toNode());return e},t.toMarkup=function(){var e='<svg xmlns="http://www.w3.org/2000/svg"';for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=" "+t+"='"+this.attributes[t]+"'");e+=">";for(var r=0;r<this.children.length;r++)e+=this.children[r].toMarkup();return e+="</svg>"},e}(),J=function(){function e(e,t){this.pathName=void 0,this.alternate=void 0,this.pathName=e,this.alternate=t}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS("http://www.w3.org/2000/svg","path");return this.alternate?e.setAttribute("d",this.alternate):e.setAttribute("d",z[this.pathName]),e},t.toMarkup=function(){return this.alternate?"<path d='"+this.alternate+"'/>":"<path d='"+z[this.pathName]+"'/>"},e}(),Q=function(){function e(e){this.attributes=void 0,this.attributes=e||{}}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS("http://www.w3.org/2000/svg","line");for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);return e},t.toMarkup=function(){var e="<line";for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=" "+t+"='"+this.attributes[t]+"'");return e+="/>"},e}();function ee(e){if(e instanceof Z)return e;throw new Error("Expected symbolNode but got "+String(e)+".")}var te={bin:1,close:1,inner:1,open:1,punct:1,rel:1},re={"accent-token":1,mathord:1,"op-token":1,spacing:1,textord:1},ne={math:{},text:{}},ae=ne;function ie(e,t,r,n,a,i){ne[e][a]={font:t,group:r,replace:n},i&&n&&(ne[e][n]=ne[e][a])}var oe="math",se="text",le="main",he="ams",ce="accent-token",me="bin",ue="close",pe="inner",de="mathord",fe="op-token",ge="open",ve="punct",ye="rel",be="spacing",xe="textord";ie(oe,le,ye,"\u2261","\\equiv",!0),ie(oe,le,ye,"\u227a","\\prec",!0),ie(oe,le,ye,"\u227b","\\succ",!0),ie(oe,le,ye,"\u223c","\\sim",!0),ie(oe,le,ye,"\u22a5","\\perp"),ie(oe,le,ye,"\u2aaf","\\preceq",!0),ie(oe,le,ye,"\u2ab0","\\succeq",!0),ie(oe,le,ye,"\u2243","\\simeq",!0),ie(oe,le,ye,"\u2223","\\mid",!0),ie(oe,le,ye,"\u226a","\\ll",!0),ie(oe,le,ye,"\u226b","\\gg",!0),ie(oe,le,ye,"\u224d","\\asymp",!0),ie(oe,le,ye,"\u2225","\\parallel"),ie(oe,le,ye,"\u22c8","\\bowtie",!0),ie(oe,le,ye,"\u2323","\\smile",!0),ie(oe,le,ye,"\u2291","\\sqsubseteq",!0),ie(oe,le,ye,"\u2292","\\sqsupseteq",!0),ie(oe,le,ye,"\u2250","\\doteq",!0),ie(oe,le,ye,"\u2322","\\frown",!0),ie(oe,le,ye,"\u220b","\\ni",!0),ie(oe,le,ye,"\u221d","\\propto",!0),ie(oe,le,ye,"\u22a2","\\vdash",!0),ie(oe,le,ye,"\u22a3","\\dashv",!0),ie(oe,le,ye,"\u220b","\\owns"),ie(oe,le,ve,".","\\ldotp"),ie(oe,le,ve,"\u22c5","\\cdotp"),ie(oe,le,xe,"#","\\#"),ie(se,le,xe,"#","\\#"),ie(oe,le,xe,"&","\\&"),ie(se,le,xe,"&","\\&"),ie(oe,le,xe,"\u2135","\\aleph",!0),ie(oe,le,xe,"\u2200","\\forall",!0),ie(oe,le,xe,"\u210f","\\hbar",!0),ie(oe,le,xe,"\u2203","\\exists",!0),ie(oe,le,xe,"\u2207","\\nabla",!0),ie(oe,le,xe,"\u266d","\\flat",!0),ie(oe,le,xe,"\u2113","\\ell",!0),ie(oe,le,xe,"\u266e","\\natural",!0),ie(oe,le,xe,"\u2663","\\clubsuit",!0),ie(oe,le,xe,"\u2118","\\wp",!0),ie(oe,le,xe,"\u266f","\\sharp",!0),ie(oe,le,xe,"\u2662","\\diamondsuit",!0),ie(oe,le,xe,"\u211c","\\Re",!0),ie(oe,le,xe,"\u2661","\\heartsuit",!0),ie(oe,le,xe,"\u2111","\\Im",!0),ie(oe,le,xe,"\u2660","\\spadesuit",!0),ie(oe,le,xe,"\xa7","\\S",!0),ie(se,le,xe,"\xa7","\\S"),ie(oe,le,xe,"\xb6","\\P",!0),ie(se,le,xe,"\xb6","\\P"),ie(oe,le,xe,"\u2020","\\dag"),ie(se,le,xe,"\u2020","\\dag"),ie(se,le,xe,"\u2020","\\textdagger"),ie(oe,le,xe,"\u2021","\\ddag"),ie(se,le,xe,"\u2021","\\ddag"),ie(se,le,xe,"\u2021","\\textdaggerdbl"),ie(oe,le,ue,"\u23b1","\\rmoustache",!0),ie(oe,le,ge,"\u23b0","\\lmoustache",!0),ie(oe,le,ue,"\u27ef","\\rgroup",!0),ie(oe,le,ge,"\u27ee","\\lgroup",!0),ie(oe,le,me,"\u2213","\\mp",!0),ie(oe,le,me,"\u2296","\\ominus",!0),ie(oe,le,me,"\u228e","\\uplus",!0),ie(oe,le,me,"\u2293","\\sqcap",!0),ie(oe,le,me,"\u2217","\\ast"),ie(oe,le,me,"\u2294","\\sqcup",!0),ie(oe,le,me,"\u25ef","\\bigcirc",!0),ie(oe,le,me,"\u2219","\\bullet",!0),ie(oe,le,me,"\u2021","\\ddagger"),ie(oe,le,me,"\u2240","\\wr",!0),ie(oe,le,me,"\u2a3f","\\amalg"),ie(oe,le,me,"&","\\And"),ie(oe,le,ye,"\u27f5","\\longleftarrow",!0),ie(oe,le,ye,"\u21d0","\\Leftarrow",!0),ie(oe,le,ye,"\u27f8","\\Longleftarrow",!0),ie(oe,le,ye,"\u27f6","\\longrightarrow",!0),ie(oe,le,ye,"\u21d2","\\Rightarrow",!0),ie(oe,le,ye,"\u27f9","\\Longrightarrow",!0),ie(oe,le,ye,"\u2194","\\leftrightarrow",!0),ie(oe,le,ye,"\u27f7","\\longleftrightarrow",!0),ie(oe,le,ye,"\u21d4","\\Leftrightarrow",!0),ie(oe,le,ye,"\u27fa","\\Longleftrightarrow",!0),ie(oe,le,ye,"\u21a6","\\mapsto",!0),ie(oe,le,ye,"\u27fc","\\longmapsto",!0),ie(oe,le,ye,"\u2197","\\nearrow",!0),ie(oe,le,ye,"\u21a9","\\hookleftarrow",!0),ie(oe,le,ye,"\u21aa","\\hookrightarrow",!0),ie(oe,le,ye,"\u2198","\\searrow",!0),ie(oe,le,ye,"\u21bc","\\leftharpoonup",!0),ie(oe,le,ye,"\u21c0","\\rightharpoonup",!0),ie(oe,le,ye,"\u2199","\\swarrow",!0),ie(oe,le,ye,"\u21bd","\\leftharpoondown",!0),ie(oe,le,ye,"\u21c1","\\rightharpoondown",!0),ie(oe,le,ye,"\u2196","\\nwarrow",!0),ie(oe,le,ye,"\u21cc","\\rightleftharpoons",!0),ie(oe,he,ye,"\u226e","\\nless",!0),ie(oe,he,ye,"\ue010","\\@nleqslant"),ie(oe,he,ye,"\ue011","\\@nleqq"),ie(oe,he,ye,"\u2a87","\\lneq",!0),ie(oe,he,ye,"\u2268","\\lneqq",!0),ie(oe,he,ye,"\ue00c","\\@lvertneqq"),ie(oe,he,ye,"\u22e6","\\lnsim",!0),ie(oe,he,ye,"\u2a89","\\lnapprox",!0),ie(oe,he,ye,"\u2280","\\nprec",!0),ie(oe,he,ye,"\u22e0","\\npreceq",!0),ie(oe,he,ye,"\u22e8","\\precnsim",!0),ie(oe,he,ye,"\u2ab9","\\precnapprox",!0),ie(oe,he,ye,"\u2241","\\nsim",!0),ie(oe,he,ye,"\ue006","\\@nshortmid"),ie(oe,he,ye,"\u2224","\\nmid",!0),ie(oe,he,ye,"\u22ac","\\nvdash",!0),ie(oe,he,ye,"\u22ad","\\nvDash",!0),ie(oe,he,ye,"\u22ea","\\ntriangleleft"),ie(oe,he,ye,"\u22ec","\\ntrianglelefteq",!0),ie(oe,he,ye,"\u228a","\\subsetneq",!0),ie(oe,he,ye,"\ue01a","\\@varsubsetneq"),ie(oe,he,ye,"\u2acb","\\subsetneqq",!0),ie(oe,he,ye,"\ue017","\\@varsubsetneqq"),ie(oe,he,ye,"\u226f","\\ngtr",!0),ie(oe,he,ye,"\ue00f","\\@ngeqslant"),ie(oe,he,ye,"\ue00e","\\@ngeqq"),ie(oe,he,ye,"\u2a88","\\gneq",!0),ie(oe,he,ye,"\u2269","\\gneqq",!0),ie(oe,he,ye,"\ue00d","\\@gvertneqq"),ie(oe,he,ye,"\u22e7","\\gnsim",!0),ie(oe,he,ye,"\u2a8a","\\gnapprox",!0),ie(oe,he,ye,"\u2281","\\nsucc",!0),ie(oe,he,ye,"\u22e1","\\nsucceq",!0),ie(oe,he,ye,"\u22e9","\\succnsim",!0),ie(oe,he,ye,"\u2aba","\\succnapprox",!0),ie(oe,he,ye,"\u2246","\\ncong",!0),ie(oe,he,ye,"\ue007","\\@nshortparallel"),ie(oe,he,ye,"\u2226","\\nparallel",!0),ie(oe,he,ye,"\u22af","\\nVDash",!0),ie(oe,he,ye,"\u22eb","\\ntriangleright"),ie(oe,he,ye,"\u22ed","\\ntrianglerighteq",!0),ie(oe,he,ye,"\ue018","\\@nsupseteqq"),ie(oe,he,ye,"\u228b","\\supsetneq",!0),ie(oe,he,ye,"\ue01b","\\@varsupsetneq"),ie(oe,he,ye,"\u2acc","\\supsetneqq",!0),ie(oe,he,ye,"\ue019","\\@varsupsetneqq"),ie(oe,he,ye,"\u22ae","\\nVdash",!0),ie(oe,he,ye,"\u2ab5","\\precneqq",!0),ie(oe,he,ye,"\u2ab6","\\succneqq",!0),ie(oe,he,ye,"\ue016","\\@nsubseteqq"),ie(oe,he,me,"\u22b4","\\unlhd"),ie(oe,he,me,"\u22b5","\\unrhd"),ie(oe,he,ye,"\u219a","\\nleftarrow",!0),ie(oe,he,ye,"\u219b","\\nrightarrow",!0),ie(oe,he,ye,"\u21cd","\\nLeftarrow",!0),ie(oe,he,ye,"\u21cf","\\nRightarrow",!0),ie(oe,he,ye,"\u21ae","\\nleftrightarrow",!0),ie(oe,he,ye,"\u21ce","\\nLeftrightarrow",!0),ie(oe,he,ye,"\u25b3","\\vartriangle"),ie(oe,he,xe,"\u210f","\\hslash"),ie(oe,he,xe,"\u25bd","\\triangledown"),ie(oe,he,xe,"\u25ca","\\lozenge"),ie(oe,he,xe,"\u24c8","\\circledS"),ie(oe,he,xe,"\xae","\\circledR"),ie(se,he,xe,"\xae","\\circledR"),ie(oe,he,xe,"\u2221","\\measuredangle",!0),ie(oe,he,xe,"\u2204","\\nexists"),ie(oe,he,xe,"\u2127","\\mho"),ie(oe,he,xe,"\u2132","\\Finv",!0),ie(oe,he,xe,"\u2141","\\Game",!0),ie(oe,he,xe,"\u2035","\\backprime"),ie(oe,he,xe,"\u25b2","\\blacktriangle"),ie(oe,he,xe,"\u25bc","\\blacktriangledown"),ie(oe,he,xe,"\u25a0","\\blacksquare"),ie(oe,he,xe,"\u29eb","\\blacklozenge"),ie(oe,he,xe,"\u2605","\\bigstar"),ie(oe,he,xe,"\u2222","\\sphericalangle",!0),ie(oe,he,xe,"\u2201","\\complement",!0),ie(oe,he,xe,"\xf0","\\eth",!0),ie(se,le,xe,"\xf0","\xf0"),ie(oe,he,xe,"\u2571","\\diagup"),ie(oe,he,xe,"\u2572","\\diagdown"),ie(oe,he,xe,"\u25a1","\\square"),ie(oe,he,xe,"\u25a1","\\Box"),ie(oe,he,xe,"\u25ca","\\Diamond"),ie(oe,he,xe,"\xa5","\\yen",!0),ie(se,he,xe,"\xa5","\\yen",!0),ie(oe,he,xe,"\u2713","\\checkmark",!0),ie(se,he,xe,"\u2713","\\checkmark"),ie(oe,he,xe,"\u2136","\\beth",!0),ie(oe,he,xe,"\u2138","\\daleth",!0),ie(oe,he,xe,"\u2137","\\gimel",!0),ie(oe,he,xe,"\u03dd","\\digamma",!0),ie(oe,he,xe,"\u03f0","\\varkappa"),ie(oe,he,ge,"\u250c","\\@ulcorner",!0),ie(oe,he,ue,"\u2510","\\@urcorner",!0),ie(oe,he,ge,"\u2514","\\@llcorner",!0),ie(oe,he,ue,"\u2518","\\@lrcorner",!0),ie(oe,he,ye,"\u2266","\\leqq",!0),ie(oe,he,ye,"\u2a7d","\\leqslant",!0),ie(oe,he,ye,"\u2a95","\\eqslantless",!0),ie(oe,he,ye,"\u2272","\\lesssim",!0),ie(oe,he,ye,"\u2a85","\\lessapprox",!0),ie(oe,he,ye,"\u224a","\\approxeq",!0),ie(oe,he,me,"\u22d6","\\lessdot"),ie(oe,he,ye,"\u22d8","\\lll",!0),ie(oe,he,ye,"\u2276","\\lessgtr",!0),ie(oe,he,ye,"\u22da","\\lesseqgtr",!0),ie(oe,he,ye,"\u2a8b","\\lesseqqgtr",!0),ie(oe,he,ye,"\u2251","\\doteqdot"),ie(oe,he,ye,"\u2253","\\risingdotseq",!0),ie(oe,he,ye,"\u2252","\\fallingdotseq",!0),ie(oe,he,ye,"\u223d","\\backsim",!0),ie(oe,he,ye,"\u22cd","\\backsimeq",!0),ie(oe,he,ye,"\u2ac5","\\subseteqq",!0),ie(oe,he,ye,"\u22d0","\\Subset",!0),ie(oe,he,ye,"\u228f","\\sqsubset",!0),ie(oe,he,ye,"\u227c","\\preccurlyeq",!0),ie(oe,he,ye,"\u22de","\\curlyeqprec",!0),ie(oe,he,ye,"\u227e","\\precsim",!0),ie(oe,he,ye,"\u2ab7","\\precapprox",!0),ie(oe,he,ye,"\u22b2","\\vartriangleleft"),ie(oe,he,ye,"\u22b4","\\trianglelefteq"),ie(oe,he,ye,"\u22a8","\\vDash",!0),ie(oe,he,ye,"\u22aa","\\Vvdash",!0),ie(oe,he,ye,"\u2323","\\smallsmile"),ie(oe,he,ye,"\u2322","\\smallfrown"),ie(oe,he,ye,"\u224f","\\bumpeq",!0),ie(oe,he,ye,"\u224e","\\Bumpeq",!0),ie(oe,he,ye,"\u2267","\\geqq",!0),ie(oe,he,ye,"\u2a7e","\\geqslant",!0),ie(oe,he,ye,"\u2a96","\\eqslantgtr",!0),ie(oe,he,ye,"\u2273","\\gtrsim",!0),ie(oe,he,ye,"\u2a86","\\gtrapprox",!0),ie(oe,he,me,"\u22d7","\\gtrdot"),ie(oe,he,ye,"\u22d9","\\ggg",!0),ie(oe,he,ye,"\u2277","\\gtrless",!0),ie(oe,he,ye,"\u22db","\\gtreqless",!0),ie(oe,he,ye,"\u2a8c","\\gtreqqless",!0),ie(oe,he,ye,"\u2256","\\eqcirc",!0),ie(oe,he,ye,"\u2257","\\circeq",!0),ie(oe,he,ye,"\u225c","\\triangleq",!0),ie(oe,he,ye,"\u223c","\\thicksim"),ie(oe,he,ye,"\u2248","\\thickapprox"),ie(oe,he,ye,"\u2ac6","\\supseteqq",!0),ie(oe,he,ye,"\u22d1","\\Supset",!0),ie(oe,he,ye,"\u2290","\\sqsupset",!0),ie(oe,he,ye,"\u227d","\\succcurlyeq",!0),ie(oe,he,ye,"\u22df","\\curlyeqsucc",!0),ie(oe,he,ye,"\u227f","\\succsim",!0),ie(oe,he,ye,"\u2ab8","\\succapprox",!0),ie(oe,he,ye,"\u22b3","\\vartriangleright"),ie(oe,he,ye,"\u22b5","\\trianglerighteq"),ie(oe,he,ye,"\u22a9","\\Vdash",!0),ie(oe,he,ye,"\u2223","\\shortmid"),ie(oe,he,ye,"\u2225","\\shortparallel"),ie(oe,he,ye,"\u226c","\\between",!0),ie(oe,he,ye,"\u22d4","\\pitchfork",!0),ie(oe,he,ye,"\u221d","\\varpropto"),ie(oe,he,ye,"\u25c0","\\blacktriangleleft"),ie(oe,he,ye,"\u2234","\\therefore",!0),ie(oe,he,ye,"\u220d","\\backepsilon"),ie(oe,he,ye,"\u25b6","\\blacktriangleright"),ie(oe,he,ye,"\u2235","\\because",!0),ie(oe,he,ye,"\u22d8","\\llless"),ie(oe,he,ye,"\u22d9","\\gggtr"),ie(oe,he,me,"\u22b2","\\lhd"),ie(oe,he,me,"\u22b3","\\rhd"),ie(oe,he,ye,"\u2242","\\eqsim",!0),ie(oe,le,ye,"\u22c8","\\Join"),ie(oe,he,ye,"\u2251","\\Doteq",!0),ie(oe,he,me,"\u2214","\\dotplus",!0),ie(oe,he,me,"\u2216","\\smallsetminus"),ie(oe,he,me,"\u22d2","\\Cap",!0),ie(oe,he,me,"\u22d3","\\Cup",!0),ie(oe,he,me,"\u2a5e","\\doublebarwedge",!0),ie(oe,he,me,"\u229f","\\boxminus",!0),ie(oe,he,me,"\u229e","\\boxplus",!0),ie(oe,he,me,"\u22c7","\\divideontimes",!0),ie(oe,he,me,"\u22c9","\\ltimes",!0),ie(oe,he,me,"\u22ca","\\rtimes",!0),ie(oe,he,me,"\u22cb","\\leftthreetimes",!0),ie(oe,he,me,"\u22cc","\\rightthreetimes",!0),ie(oe,he,me,"\u22cf","\\curlywedge",!0),ie(oe,he,me,"\u22ce","\\curlyvee",!0),ie(oe,he,me,"\u229d","\\circleddash",!0),ie(oe,he,me,"\u229b","\\circledast",!0),ie(oe,he,me,"\u22c5","\\centerdot"),ie(oe,he,me,"\u22ba","\\intercal",!0),ie(oe,he,me,"\u22d2","\\doublecap"),ie(oe,he,me,"\u22d3","\\doublecup"),ie(oe,he,me,"\u22a0","\\boxtimes",!0),ie(oe,he,ye,"\u21e2","\\dashrightarrow",!0),ie(oe,he,ye,"\u21e0","\\dashleftarrow",!0),ie(oe,he,ye,"\u21c7","\\leftleftarrows",!0),ie(oe,he,ye,"\u21c6","\\leftrightarrows",!0),ie(oe,he,ye,"\u21da","\\Lleftarrow",!0),ie(oe,he,ye,"\u219e","\\twoheadleftarrow",!0),ie(oe,he,ye,"\u21a2","\\leftarrowtail",!0),ie(oe,he,ye,"\u21ab","\\looparrowleft",!0),ie(oe,he,ye,"\u21cb","\\leftrightharpoons",!0),ie(oe,he,ye,"\u21b6","\\curvearrowleft",!0),ie(oe,he,ye,"\u21ba","\\circlearrowleft",!0),ie(oe,he,ye,"\u21b0","\\Lsh",!0),ie(oe,he,ye,"\u21c8","\\upuparrows",!0),ie(oe,he,ye,"\u21bf","\\upharpoonleft",!0),ie(oe,he,ye,"\u21c3","\\downharpoonleft",!0),ie(oe,le,ye,"\u22b6","\\origof",!0),ie(oe,le,ye,"\u22b7","\\imageof",!0),ie(oe,he,ye,"\u22b8","\\multimap",!0),ie(oe,he,ye,"\u21ad","\\leftrightsquigarrow",!0),ie(oe,he,ye,"\u21c9","\\rightrightarrows",!0),ie(oe,he,ye,"\u21c4","\\rightleftarrows",!0),ie(oe,he,ye,"\u21a0","\\twoheadrightarrow",!0),ie(oe,he,ye,"\u21a3","\\rightarrowtail",!0),ie(oe,he,ye,"\u21ac","\\looparrowright",!0),ie(oe,he,ye,"\u21b7","\\curvearrowright",!0),ie(oe,he,ye,"\u21bb","\\circlearrowright",!0),ie(oe,he,ye,"\u21b1","\\Rsh",!0),ie(oe,he,ye,"\u21ca","\\downdownarrows",!0),ie(oe,he,ye,"\u21be","\\upharpoonright",!0),ie(oe,he,ye,"\u21c2","\\downharpoonright",!0),ie(oe,he,ye,"\u21dd","\\rightsquigarrow",!0),ie(oe,he,ye,"\u21dd","\\leadsto"),ie(oe,he,ye,"\u21db","\\Rrightarrow",!0),ie(oe,he,ye,"\u21be","\\restriction"),ie(oe,le,xe,"\u2018",""),ie(oe,le,xe,"$","\\$"),ie(se,le,xe,"$","\\$"),ie(se,le,xe,"$","\\textdollar"),ie(oe,le,xe,"%","\\%"),ie(se,le,xe,"%","\\%"),ie(oe,le,xe,"_","\\_"),ie(se,le,xe,"_","\\_"),ie(se,le,xe,"_","\\textunderscore"),ie(oe,le,xe,"\u2220","\\angle",!0),ie(oe,le,xe,"\u221e","\\infty",!0),ie(oe,le,xe,"\u2032","\\prime"),ie(oe,le,xe,"\u25b3","\\triangle"),ie(oe,le,xe,"\u0393","\\Gamma",!0),ie(oe,le,xe,"\u0394","\\Delta",!0),ie(oe,le,xe,"\u0398","\\Theta",!0),ie(oe,le,xe,"\u039b","\\Lambda",!0),ie(oe,le,xe,"\u039e","\\Xi",!0),ie(oe,le,xe,"\u03a0","\\Pi",!0),ie(oe,le,xe,"\u03a3","\\Sigma",!0),ie(oe,le,xe,"\u03a5","\\Upsilon",!0),ie(oe,le,xe,"\u03a6","\\Phi",!0),ie(oe,le,xe,"\u03a8","\\Psi",!0),ie(oe,le,xe,"\u03a9","\\Omega",!0),ie(oe,le,xe,"A","\u0391"),ie(oe,le,xe,"B","\u0392"),ie(oe,le,xe,"E","\u0395"),ie(oe,le,xe,"Z","\u0396"),ie(oe,le,xe,"H","\u0397"),ie(oe,le,xe,"I","\u0399"),ie(oe,le,xe,"K","\u039a"),ie(oe,le,xe,"M","\u039c"),ie(oe,le,xe,"N","\u039d"),ie(oe,le,xe,"O","\u039f"),ie(oe,le,xe,"P","\u03a1"),ie(oe,le,xe,"T","\u03a4"),ie(oe,le,xe,"X","\u03a7"),ie(oe,le,xe,"\xac","\\neg",!0),ie(oe,le,xe,"\xac","\\lnot"),ie(oe,le,xe,"\u22a4","\\top"),ie(oe,le,xe,"\u22a5","\\bot"),ie(oe,le,xe,"\u2205","\\emptyset"),ie(oe,he,xe,"\u2205","\\varnothing"),ie(oe,le,de,"\u03b1","\\alpha",!0),ie(oe,le,de,"\u03b2","\\beta",!0),ie(oe,le,de,"\u03b3","\\gamma",!0),ie(oe,le,de,"\u03b4","\\delta",!0),ie(oe,le,de,"\u03f5","\\epsilon",!0),ie(oe,le,de,"\u03b6","\\zeta",!0),ie(oe,le,de,"\u03b7","\\eta",!0),ie(oe,le,de,"\u03b8","\\theta",!0),ie(oe,le,de,"\u03b9","\\iota",!0),ie(oe,le,de,"\u03ba","\\kappa",!0),ie(oe,le,de,"\u03bb","\\lambda",!0),ie(oe,le,de,"\u03bc","\\mu",!0),ie(oe,le,de,"\u03bd","\\nu",!0),ie(oe,le,de,"\u03be","\\xi",!0),ie(oe,le,de,"\u03bf","\\omicron",!0),ie(oe,le,de,"\u03c0","\\pi",!0),ie(oe,le,de,"\u03c1","\\rho",!0),ie(oe,le,de,"\u03c3","\\sigma",!0),ie(oe,le,de,"\u03c4","\\tau",!0),ie(oe,le,de,"\u03c5","\\upsilon",!0),ie(oe,le,de,"\u03d5","\\phi",!0),ie(oe,le,de,"\u03c7","\\chi",!0),ie(oe,le,de,"\u03c8","\\psi",!0),ie(oe,le,de,"\u03c9","\\omega",!0),ie(oe,le,de,"\u03b5","\\varepsilon",!0),ie(oe,le,de,"\u03d1","\\vartheta",!0),ie(oe,le,de,"\u03d6","\\varpi",!0),ie(oe,le,de,"\u03f1","\\varrho",!0),ie(oe,le,de,"\u03c2","\\varsigma",!0),ie(oe,le,de,"\u03c6","\\varphi",!0),ie(oe,le,me,"\u2217","*",!0),ie(oe,le,me,"+","+"),ie(oe,le,me,"\u2212","-",!0),ie(oe,le,me,"\u22c5","\\cdot",!0),ie(oe,le,me,"\u2218","\\circ",!0),ie(oe,le,me,"\xf7","\\div",!0),ie(oe,le,me,"\xb1","\\pm",!0),ie(oe,le,me,"\xd7","\\times",!0),ie(oe,le,me,"\u2229","\\cap",!0),ie(oe,le,me,"\u222a","\\cup",!0),ie(oe,le,me,"\u2216","\\setminus",!0),ie(oe,le,me,"\u2227","\\land"),ie(oe,le,me,"\u2228","\\lor"),ie(oe,le,me,"\u2227","\\wedge",!0),ie(oe,le,me,"\u2228","\\vee",!0),ie(oe,le,xe,"\u221a","\\surd"),ie(oe,le,ge,"\u27e8","\\langle",!0),ie(oe,le,ge,"\u2223","\\lvert"),ie(oe,le,ge,"\u2225","\\lVert"),ie(oe,le,ue,"?","?"),ie(oe,le,ue,"!","!"),ie(oe,le,ue,"\u27e9","\\rangle",!0),ie(oe,le,ue,"\u2223","\\rvert"),ie(oe,le,ue,"\u2225","\\rVert"),ie(oe,le,ye,"=","="),ie(oe,le,ye,":",":"),ie(oe,le,ye,"\u2248","\\approx",!0),ie(oe,le,ye,"\u2245","\\cong",!0),ie(oe,le,ye,"\u2265","\\ge"),ie(oe,le,ye,"\u2265","\\geq",!0),ie(oe,le,ye,"\u2190","\\gets"),ie(oe,le,ye,">","\\gt",!0),ie(oe,le,ye,"\u2208","\\in",!0),ie(oe,le,ye,"\ue020","\\@not"),ie(oe,le,ye,"\u2282","\\subset",!0),ie(oe,le,ye,"\u2283","\\supset",!0),ie(oe,le,ye,"\u2286","\\subseteq",!0),ie(oe,le,ye,"\u2287","\\supseteq",!0),ie(oe,he,ye,"\u2288","\\nsubseteq",!0),ie(oe,he,ye,"\u2289","\\nsupseteq",!0),ie(oe,le,ye,"\u22a8","\\models"),ie(oe,le,ye,"\u2190","\\leftarrow",!0),ie(oe,le,ye,"\u2264","\\le"),ie(oe,le,ye,"\u2264","\\leq",!0),ie(oe,le,ye,"<","\\lt",!0),ie(oe,le,ye,"\u2192","\\rightarrow",!0),ie(oe,le,ye,"\u2192","\\to"),ie(oe,he,ye,"\u2271","\\ngeq",!0),ie(oe,he,ye,"\u2270","\\nleq",!0),ie(oe,le,be,"\xa0","\\ "),ie(oe,le,be,"\xa0","\\space"),ie(oe,le,be,"\xa0","\\nobreakspace"),ie(se,le,be,"\xa0","\\ "),ie(se,le,be,"\xa0"," "),ie(se,le,be,"\xa0","\\space"),ie(se,le,be,"\xa0","\\nobreakspace"),ie(oe,le,be,null,"\\nobreak"),ie(oe,le,be,null,"\\allowbreak"),ie(oe,le,ve,",",","),ie(oe,le,ve,";",";"),ie(oe,he,me,"\u22bc","\\barwedge",!0),ie(oe,he,me,"\u22bb","\\veebar",!0),ie(oe,le,me,"\u2299","\\odot",!0),ie(oe,le,me,"\u2295","\\oplus",!0),ie(oe,le,me,"\u2297","\\otimes",!0),ie(oe,le,xe,"\u2202","\\partial",!0),ie(oe,le,me,"\u2298","\\oslash",!0),ie(oe,he,me,"\u229a","\\circledcirc",!0),ie(oe,he,me,"\u22a1","\\boxdot",!0),ie(oe,le,me,"\u25b3","\\bigtriangleup"),ie(oe,le,me,"\u25bd","\\bigtriangledown"),ie(oe,le,me,"\u2020","\\dagger"),ie(oe,le,me,"\u22c4","\\diamond"),ie(oe,le,me,"\u22c6","\\star"),ie(oe,le,me,"\u25c3","\\triangleleft"),ie(oe,le,me,"\u25b9","\\triangleright"),ie(oe,le,ge,"{","\\{"),ie(se,le,xe,"{","\\{"),ie(se,le,xe,"{","\\textbraceleft"),ie(oe,le,ue,"}","\\}"),ie(se,le,xe,"}","\\}"),ie(se,le,xe,"}","\\textbraceright"),ie(oe,le,ge,"{","\\lbrace"),ie(oe,le,ue,"}","\\rbrace"),ie(oe,le,ge,"[","\\lbrack",!0),ie(se,le,xe,"[","\\lbrack",!0),ie(oe,le,ue,"]","\\rbrack",!0),ie(se,le,xe,"]","\\rbrack",!0),ie(oe,le,ge,"(","\\lparen",!0),ie(oe,le,ue,")","\\rparen",!0),ie(se,le,xe,"<","\\textless",!0),ie(se,le,xe,">","\\textgreater",!0),ie(oe,le,ge,"\u230a","\\lfloor",!0),ie(oe,le,ue,"\u230b","\\rfloor",!0),ie(oe,le,ge,"\u2308","\\lceil",!0),ie(oe,le,ue,"\u2309","\\rceil",!0),ie(oe,le,xe,"\\","\\backslash"),ie(oe,le,xe,"\u2223","|"),ie(oe,le,xe,"\u2223","\\vert"),ie(se,le,xe,"|","\\textbar",!0),ie(oe,le,xe,"\u2225","\\|"),ie(oe,le,xe,"\u2225","\\Vert"),ie(se,le,xe,"\u2225","\\textbardbl"),ie(se,le,xe,"~","\\textasciitilde"),ie(se,le,xe,"\\","\\textbackslash"),ie(se,le,xe,"^","\\textasciicircum"),ie(oe,le,ye,"\u2191","\\uparrow",!0),ie(oe,le,ye,"\u21d1","\\Uparrow",!0),ie(oe,le,ye,"\u2193","\\downarrow",!0),ie(oe,le,ye,"\u21d3","\\Downarrow",!0),ie(oe,le,ye,"\u2195","\\updownarrow",!0),ie(oe,le,ye,"\u21d5","\\Updownarrow",!0),ie(oe,le,fe,"\u2210","\\coprod"),ie(oe,le,fe,"\u22c1","\\bigvee"),ie(oe,le,fe,"\u22c0","\\bigwedge"),ie(oe,le,fe,"\u2a04","\\biguplus"),ie(oe,le,fe,"\u22c2","\\bigcap"),ie(oe,le,fe,"\u22c3","\\bigcup"),ie(oe,le,fe,"\u222b","\\int"),ie(oe,le,fe,"\u222b","\\intop"),ie(oe,le,fe,"\u222c","\\iint"),ie(oe,le,fe,"\u222d","\\iiint"),ie(oe,le,fe,"\u220f","\\prod"),ie(oe,le,fe,"\u2211","\\sum"),ie(oe,le,fe,"\u2a02","\\bigotimes"),ie(oe,le,fe,"\u2a01","\\bigoplus"),ie(oe,le,fe,"\u2a00","\\bigodot"),ie(oe,le,fe,"\u222e","\\oint"),ie(oe,le,fe,"\u222f","\\oiint"),ie(oe,le,fe,"\u2230","\\oiiint"),ie(oe,le,fe,"\u2a06","\\bigsqcup"),ie(oe,le,fe,"\u222b","\\smallint"),ie(se,le,pe,"\u2026","\\textellipsis"),ie(oe,le,pe,"\u2026","\\mathellipsis"),ie(se,le,pe,"\u2026","\\ldots",!0),ie(oe,le,pe,"\u2026","\\ldots",!0),ie(oe,le,pe,"\u22ef","\\@cdots",!0),ie(oe,le,pe,"\u22f1","\\ddots",!0),ie(oe,le,xe,"\u22ee","\\varvdots"),ie(oe,le,ce,"\u02ca","\\acute"),ie(oe,le,ce,"\u02cb","\\grave"),ie(oe,le,ce,"\xa8","\\ddot"),ie(oe,le,ce,"~","\\tilde"),ie(oe,le,ce,"\u02c9","\\bar"),ie(oe,le,ce,"\u02d8","\\breve"),ie(oe,le,ce,"\u02c7","\\check"),ie(oe,le,ce,"^","\\hat"),ie(oe,le,ce,"\u20d7","\\vec"),ie(oe,le,ce,"\u02d9","\\dot"),ie(oe,le,ce,"\u02da","\\mathring"),ie(oe,le,de,"\ue131","\\@imath"),ie(oe,le,de,"\ue237","\\@jmath"),ie(oe,le,xe,"\u0131","\u0131"),ie(oe,le,xe,"\u0237","\u0237"),ie(se,le,xe,"\u0131","\\i",!0),ie(se,le,xe,"\u0237","\\j",!0),ie(se,le,xe,"\xdf","\\ss",!0),ie(se,le,xe,"\xe6","\\ae",!0),ie(se,le,xe,"\u0153","\\oe",!0),ie(se,le,xe,"\xf8","\\o",!0),ie(se,le,xe,"\xc6","\\AE",!0),ie(se,le,xe,"\u0152","\\OE",!0),ie(se,le,xe,"\xd8","\\O",!0),ie(se,le,ce,"\u02ca","\\'"),ie(se,le,ce,"\u02cb","\\"),ie(se,le,ce,"\u02c6","\\^"),ie(se,le,ce,"\u02dc","\\~"),ie(se,le,ce,"\u02c9","\\="),ie(se,le,ce,"\u02d8","\\u"),ie(se,le,ce,"\u02d9","\\."),ie(se,le,ce,"\xb8","\\c"),ie(se,le,ce,"\u02da","\\r"),ie(se,le,ce,"\u02c7","\\v"),ie(se,le,ce,"\xa8",'\\"'),ie(se,le,ce,"\u02dd","\\H"),ie(se,le,ce,"\u25ef","\\textcircled");var we={"--":!0,"---":!0,"`":!0,"''":!0};ie(se,le,xe,"\u2013","--",!0),ie(se,le,xe,"\u2013","\\textendash"),ie(se,le,xe,"\u2014","---",!0),ie(se,le,xe,"\u2014","\\textemdash"),ie(se,le,xe,"\u2018","",!0),ie(se,le,xe,"\u2018","\\textquoteleft"),ie(se,le,xe,"\u2019","'",!0),ie(se,le,xe,"\u2019","\\textquoteright"),ie(se,le,xe,"\u201c","",!0),ie(se,le,xe,"\u201c","\\textquotedblleft"),ie(se,le,xe,"\u201d","''",!0),ie(se,le,xe,"\u201d","\\textquotedblright"),ie(oe,le,xe,"\xb0","\\degree",!0),ie(se,le,xe,"\xb0","\\degree"),ie(se,le,xe,"\xb0","\\textdegree",!0),ie(oe,le,xe,"\xa3","\\pounds"),ie(oe,le,xe,"\xa3","\\mathsterling",!0),ie(se,le,xe,"\xa3","\\pounds"),ie(se,le,xe,"\xa3","\\textsterling",!0),ie(oe,he,xe,"\u2720","\\maltese"),ie(se,he,xe,"\u2720","\\maltese");for(var ke='0123456789/@."',Se=0;Se<ke.length;Se++){var Me=ke.charAt(Se);ie(oe,le,xe,Me,Me)}for(var ze='0123456789!@*()-=+";:?/.,',Ae=0;Ae<ze.length;Ae++){var Te=ze.charAt(Ae);ie(se,le,xe,Te,Te)}for(var Be="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",Ce=0;Ce<Be.length;Ce++){var Ne=Be.charAt(Ce);ie(oe,le,de,Ne,Ne),ie(se,le,xe,Ne,Ne)}ie(oe,he,xe,"C","\u2102"),ie(se,he,xe,"C","\u2102"),ie(oe,he,xe,"H","\u210d"),ie(se,he,xe,"H","\u210d"),ie(oe,he,xe,"N","\u2115"),ie(se,he,xe,"N","\u2115"),ie(oe,he,xe,"P","\u2119"),ie(se,he,xe,"P","\u2119"),ie(oe,he,xe,"Q","\u211a"),ie(se,he,xe,"Q","\u211a"),ie(oe,he,xe,"R","\u211d"),ie(se,he,xe,"R","\u211d"),ie(oe,he,xe,"Z","\u2124"),ie(se,he,xe,"Z","\u2124"),ie(oe,le,de,"h","\u210e"),ie(se,le,de,"h","\u210e");for(var qe="",Ie=0;Ie<Be.length;Ie++){var Re=Be.charAt(Ie);ie(oe,le,de,Re,qe=String.fromCharCode(55349,56320+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56372+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56424+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56580+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56736+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56788+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56840+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56944+Ie)),ie(se,le,xe,Re,qe),Ie<26&&(ie(oe,le,de,Re,qe=String.fromCharCode(55349,56632+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56476+Ie)),ie(se,le,xe,Re,qe))}ie(oe,le,de,"k",qe=String.fromCharCode(55349,56668)),ie(se,le,xe,"k",qe);for(var He=0;He<10;He++){var Oe=He.toString();ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57294+He)),ie(se,le,xe,Oe,qe),ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57314+He)),ie(se,le,xe,Oe,qe),ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57324+He)),ie(se,le,xe,Oe,qe),ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57334+He)),ie(se,le,xe,Oe,qe)}for(var Ee="\xd0\xde\xfe",Le=0;Le<Ee.length;Le++){var De=Ee.charAt(Le);ie(oe,le,de,De,De),ie(se,le,xe,De,De)}var Ve=[["mathbf","textbf","Main-Bold"],["mathbf","textbf","Main-Bold"],["mathnormal","textit","Math-Italic"],["mathnormal","textit","Math-Italic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["mathscr","textscr","Script-Regular"],["","",""],["","",""],["","",""],["mathfrak","textfrak","Fraktur-Regular"],["mathfrak","textfrak","Fraktur-Regular"],["mathbb","textbb","AMS-Regular"],["mathbb","textbb","AMS-Regular"],["","",""],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathitsf","textitsf","SansSerif-Italic"],["mathitsf","textitsf","SansSerif-Italic"],["","",""],["","",""],["mathtt","texttt","Typewriter-Regular"],["mathtt","texttt","Typewriter-Regular"]],Pe=[["mathbf","textbf","Main-Bold"],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathtt","texttt","Typewriter-Regular"]],Fe=function(e,t,r){return ae[r][e]&&ae[r][e].replace&&(e=ae[r][e].replace),{value:e,metrics:N(e,t,r)}},Ge=function(e,t,r,n,a){var i,o=Fe(e,t,r),s=o.metrics;if(e=o.value,s){var l=s.italic;("text"===r||n&&"mathit"===n.font)&&(l=0),i=new Z(e,s.height,s.depth,l,s.skew,s.width,a)}else"undefined"!=typeof console&&console.warn("No character metrics for '"+e+"' in style '"+t+"' and mode '"+r+"'"),i=new Z(e,0,0,0,0,0,a);if(n){i.maxFontSize=n.sizeMultiplier,n.style.isTight()&&i.classes.push("mtight");var h=n.getColor();h&&(i.style.color=h)}return i},Ue=function(e,t){if(G(e.classes)!==G(t.classes)||e.skew!==t.skew||e.maxFontSize!==t.maxFontSize)return!1;if(1===e.classes.length){var r=e.classes[0];if("mbin"===r||"mord"===r)return!1}for(var n in e.style)if(e.style.hasOwnProperty(n)&&e.style[n]!==t.style[n])return!1;for(var a in t.style)if(t.style.hasOwnProperty(a)&&e.style[a]!==t.style[a])return!1;return!0},Ye=function(e){for(var t=0,r=0,n=0,a=0;a<e.children.length;a++){var i=e.children[a];i.height>t&&(t=i.height),i.depth>r&&(r=i.depth),i.maxFontSize>n&&(n=i.maxFontSize)}e.height=t,e.depth=r,e.maxFontSize=n},Xe=function(e,t,r,n){var a=new W(e,t,r,n);return Ye(a),a},We=function(e,t,r,n){return new W(e,t,r,n)},_e=function(e){var t=new A(e);return Ye(t),t},je=function(e,t,r){var n="";switch(e){case"amsrm":n="AMS";break;case"textrm":n="Main";break;case"textsf":n="SansSerif";break;case"texttt":n="Typewriter";break;default:n=e}return n+"-"+("textbf"===t&&"textit"===r?"BoldItalic":"textbf"===t?"Bold":"textit"===t?"Italic":"Regular")},$e={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathit:{variant:"italic",fontName:"Main-Italic"},mathnormal:{variant:"italic",fontName:"Math-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}},Ze={vec:["vec",.471,.714],oiintSize1:["oiintSize1",.957,.499],oiintSize2:["oiintSize2",1.472,.659],oiiintSize1:["oiiintSize1",1.304,.499],oiiintSize2:["oiiintSize2",1.98,.659]},Ke={fontMap:$e,makeSymbol:Ge,mathsym:function(e,t,r,n){return void 0===n&&(n=[]),"boldsymbol"===r.font&&Fe(e,"Main-Bold",t).metrics?Ge(e,"Main-Bold",t,r,n.concat(["mathbf"])):"\\"===e||"main"===ae[t][e].font?Ge(e,"Main-Regular",t,r,n):Ge(e,"AMS-Regular",t,r,n.concat(["amsrm"]))},makeSpan:Xe,makeSvgSpan:We,makeLineSpan:function(e,t,r){var n=Xe([e],[],t);return n.height=Math.max(r||t.fontMetrics().defaultRuleThickness,t.minRuleThickness),n.style.borderBottomWidth=F(n.height),n.maxFontSize=1,n},makeAnchor:function(e,t,r,n){var a=new _(e,t,r,n);return Ye(a),a},makeFragment:_e,wrapFragment:function(e,t){return e instanceof A?Xe([],[e],t):e},makeVList:function(e,t){for(var r=function(e){if("individualShift"===e.positionType){for(var t=e.children,r=[t[0]],n=-t[0].shift-t[0].elem.depth,a=n,i=1;i<t.length;i++){var o=-t[i].shift-a-t[i].elem.depth,s=o-(t[i-1].elem.height+t[i-1].elem.depth);a+=o,r.push({type:"kern",size:s}),r.push(t[i])}return{children:r,depth:n}}var l;if("top"===e.positionType){for(var h=e.positionData,c=0;c<e.children.length;c++){var m=e.children[c];h-="kern"===m.type?m.size:m.elem.height+m.elem.depth}l=h}else if("bottom"===e.positionType)l=-e.positionData;else{var u=e.children[0];if("elem"!==u.type)throw new Error('First child must have type "elem".');if("shift"===e.positionType)l=-u.elem.depth-e.positionData;else{if("firstBaseline"!==e.positionType)throw new Error("Invalid positionType "+e.positionType+".");l=-u.elem.depth}}return{children:e.children,depth:l}}(e),n=r.children,a=r.depth,i=0,o=0;o<n.length;o++){var s=n[o];if("elem"===s.type){var l=s.elem;i=Math.max(i,l.maxFontSize,l.height)}}i+=2;var h=Xe(["pstrut"],[]);h.style.height=F(i);for(var c=[],m=a,u=a,p=a,d=0;d<n.length;d++){var f=n[d];if("kern"===f.type)p+=f.size;else{var g=f.elem,v=f.wrapperClasses||[],y=f.wrapperStyle||{},b=Xe(v,[h,g],void 0,y);b.style.top=F(-i-p-g.depth),f.marginLeft&&(b.style.marginLeft=f.marginLeft),f.marginRight&&(b.style.marginRight=f.marginRight),c.push(b),p+=g.height+g.depth}m=Math.min(m,p),u=Math.max(u,p)}var x,w=Xe(["vlist"],c);if(w.style.height=F(u),m<0){var k=Xe([],[]),S=Xe(["vlist"],[k]);S.style.height=F(-m);var M=Xe(["vlist-s"],[new Z("\u200b")]);x=[Xe(["vlist-r"],[w,M]),Xe(["vlist-r"],[S])]}else x=[Xe(["vlist-r"],[w])];var z=Xe(["vlist-t"],x);return 2===x.length&&z.classes.push("vlist-t2"),z.height=u,z.depth=-m,z},makeOrd:function(e,t,r){var a=e.mode,i=e.text,o=["mord"],s="math"===a||"text"===a&&t.font,l=s?t.font:t.fontFamily;if(55349===i.charCodeAt(0)){var h=function(e,t){var r=1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320)+65536,a="math"===t?0:1;if(119808<=r&&r<120484){var i=Math.floor((r-119808)/26);return[Ve[i][2],Ve[i][a]]}if(120782<=r&&r<=120831){var o=Math.floor((r-120782)/10);return[Pe[o][2],Pe[o][a]]}if(120485===r||120486===r)return[Ve[0][2],Ve[0][a]];if(120486<r&&r<120782)return["",""];throw new n("Unsupported character: "+e)}(i,a),c=h[0],m=h[1];return Ge(i,c,a,t,o.concat(m))}if(l){var u,p;if("boldsymbol"===l){var d=function(e,t,r,n,a){return"textord"!==a&&Fe(e,"Math-BoldItalic",t).metrics?{fontName:"Math-BoldItalic",fontClass:"boldsymbol"}:{fontName:"Main-Bold",fontClass:"mathbf"}}(i,a,0,0,r);u=d.fontName,p=[d.fontClass]}else s?(u=$e[l].fontName,p=[l]):(u=je(l,t.fontWeight,t.fontShape),p=[l,t.fontWeight,t.fontShape]);if(Fe(i,u,a).metrics)return Ge(i,u,a,t,o.concat(p));if(we.hasOwnProperty(i)&&"Typewriter"===u.slice(0,10)){for(var f=[],g=0;g<i.length;g++)f.push(Ge(i[g],u,a,t,o.concat(p)));return _e(f)}}if("mathord"===r)return Ge(i,"Math-Italic",a,t,o.concat(["mathnormal"]));if("textord"===r){var v=ae[a][i]&&ae[a][i].font;if("ams"===v){var y=je("amsrm",t.fontWeight,t.fontShape);return Ge(i,y,a,t,o.concat("amsrm",t.fontWeight,t.fontShape))}if("main"!==v&&v){var b=je(v,t.fontWeight,t.fontShape);return Ge(i,b,a,t,o.concat(b,t.fontWeight,t.fontShape))}var x=je("textrm",t.fontWeight,t.fontShape);return Ge(i,x,a,t,o.concat(t.fontWeight,t.fontShape))}throw new Error("unexpected type: "+r+" in makeOrd")},makeGlue:function(e,t){var r=Xe(["mspace"],[],t),n=P(e,t);return r.style.marginRight=F(n),r},staticSvg:function(e,t){var r=Ze[e],n=r[0],a=r[1],i=r[2],o=new J(n),s=new K([o],{width:F(a),height:F(i),style:"width:"+F(a),viewBox:"0 0 "+1e3*a+" "+1e3*i,preserveAspectRatio:"xMinYMin"}),l=We(["overlay"],[s],t);return l.height=i,l.style.height=F(i),l.style.width=F(a),l},svgData:Ze,tryCombineChars:function(e){for(var t=0;t<e.length-1;t++){var r=e[t],n=e[t+1];r instanceof Z&&n instanceof Z&&Ue(r,n)&&(r.text+=n.text,r.height=Math.max(r.height,n.height),r.depth=Math.max(r.depth,n.depth),r.italic=n.italic,e.splice(t+1,1),t--)}return e}},Je={number:3,unit:"mu"},Qe={number:4,unit:"mu"},et={number:5,unit:"mu"},tt={mord:{mop:Je,mbin:Qe,mrel:et,minner:Je},mop:{mord:Je,mop:Je,mrel:et,minner:Je},mbin:{mord:Qe,mop:Qe,mopen:Qe,minner:Qe},mrel:{mord:et,mop:et,mopen:et,minner:et},mopen:{},mclose:{mop:Je,mbin:Qe,mrel:et,minner:Je},mpunct:{mord:Je,mop:Je,mrel:et,mopen:Je,mclose:Je,mpunct:Je,minner:Je},minner:{mord:Je,mop:Je,mbin:Qe,mrel:et,mopen:Je,mpunct:Je,minner:Je}},rt={mord:{mop:Je},mop:{mord:Je,mop:Je},mbin:{},mrel:{},mopen:{},mclose:{mop:Je},mpunct:{},minner:{mop:Je}},nt={},at={},it={};function ot(e){for(var t=e.type,r=e.names,n=e.props,a=e.handler,i=e.htmlBuilder,o=e.mathmlBuilder,s={type:t,numArgs:n.numArgs,argTypes:n.argTypes,allowedInArgument:!!n.allowedInArgument,allowedInText:!!n.allowedInText,allowedInMath:void 0===n.allowedInMath||n.allowedInMath,numOptionalArgs:n.numOptionalArgs||0,infix:!!n.infix,primitive:!!n.primitive,handler:a},l=0;l<r.length;++l)nt[r[l]]=s;t&&(i&&(at[t]=i),o&&(it[t]=o))}function st(e){ot({type:e.type,names:[],props:{numArgs:0},handler:function(){throw new Error("Should never be called.")},htmlBuilder:e.htmlBuilder,mathmlBuilder:e.mathmlBuilder})}var lt=function(e){return"ordgroup"===e.type&&1===e.body.length?e.body[0]:e},ht=function(e){return"ordgroup"===e.type?e.body:[e]},ct=Ke.makeSpan,mt=["leftmost","mbin","mopen","mrel","mop","mpunct"],ut=["rightmost","mrel","mclose","mpunct"],pt={display:x.DISPLAY,text:x.TEXT,script:x.SCRIPT,scriptscript:x.SCRIPTSCRIPT},dt={mord:"mord",mop:"mop",mbin:"mbin",mrel:"mrel",mopen:"mopen",mclose:"mclose",mpunct:"mpunct",minner:"minner"},ft=function(e,t,r,n){void 0===n&&(n=[null,null]);for(var a=[],i=0;i<e.length;i++){var o=wt(e[i],t);if(o instanceof A){var s=o.children;a.push.apply(a,s)}else a.push(o)}if(Ke.tryCombineChars(a),!r)return a;var h=t;if(1===e.length){var c=e[0];"sizing"===c.type?h=t.havingSize(c.size):"styling"===c.type&&(h=t.havingStyle(pt[c.style]))}var m=ct([n[0]||"leftmost"],[],t),u=ct([n[1]||"rightmost"],[],t),p="root"===r;return gt(a,(function(e,t){var r=t.classes[0],n=e.classes[0];"mbin"===r&&l.contains(ut,n)?t.classes[0]="mord":"mbin"===n&&l.contains(mt,r)&&(e.classes[0]="mord")}),{node:m},u,p),gt(a,(function(e,t){var r=bt(t),n=bt(e),a=r&&n?e.hasClass("mtight")?rt[r][n]:tt[r][n]:null;if(a)return Ke.makeGlue(a,h)}),{node:m},u,p),a},gt=function e(t,r,n,a,i){a&&t.push(a);for(var o=0;o<t.length;o++){var s=t[o],l=vt(s);if(l)e(l.children,r,n,null,i);else{var h=!s.hasClass("mspace");if(h){var c=r(s,n.node);c&&(n.insertAfter?n.insertAfter(c):(t.unshift(c),o++))}h?n.node=s:i&&s.hasClass("newline")&&(n.node=ct(["leftmost"])),n.insertAfter=function(e){return function(r){t.splice(e+1,0,r),o++}}(o)}}a&&t.pop()},vt=function(e){return e instanceof A||e instanceof _||e instanceof W&&e.hasClass("enclosing")?e:null},yt=function e(t,r){var n=vt(t);if(n){var a=n.children;if(a.length){if("right"===r)return e(a[a.length-1],"right");if("left"===r)return e(a[0],"left")}}return t},bt=function(e,t){return e?(t&&(e=yt(e,t)),dt[e.classes[0]]||null):null},xt=function(e,t){var r=["nulldelimiter"].concat(e.baseSizingClasses());return ct(t.concat(r))},wt=function(e,t,r){if(!e)return ct();if(at[e.type]){var a=at[e.type](e,t);if(r&&t.size!==r.size){a=ct(t.sizingClasses(r),[a],t);var i=t.sizeMultiplier/r.sizeMultiplier;a.height*=i,a.depth*=i}return a}throw new n("Got group of unknown type: '"+e.type+"'")};function kt(e,t){var r=ct(["base"],e,t),n=ct(["strut"]);return n.style.height=F(r.height+r.depth),r.depth&&(n.style.verticalAlign=F(-r.depth)),r.children.unshift(n),r}function St(e,t){var r=null;1===e.length&&"tag"===e[0].type&&(r=e[0].tag,e=e[0].body);var n,a=ft(e,t,"root");2===a.length&&a[1].hasClass("tag")&&(n=a.pop());for(var i,o=[],s=[],l=0;l<a.length;l++)if(s.push(a[l]),a[l].hasClass("mbin")||a[l].hasClass("mrel")||a[l].hasClass("allowbreak")){for(var h=!1;l<a.length-1&&a[l+1].hasClass("mspace")&&!a[l+1].hasClass("newline");)l++,s.push(a[l]),a[l].hasClass("nobreak")&&(h=!0);h||(o.push(kt(s,t)),s=[])}else a[l].hasClass("newline")&&(s.pop(),s.length>0&&(o.push(kt(s,t)),s=[]),o.push(a[l]));s.length>0&&o.push(kt(s,t)),r?((i=kt(ft(r,t,!0))).classes=["tag"],o.push(i)):n&&o.push(n);var c=ct(["katex-html"],o);if(c.setAttribute("aria-hidden","true"),i){var m=i.children[0];m.style.height=F(c.height+c.depth),c.depth&&(m.style.verticalAlign=F(-c.depth))}return c}function Mt(e){return new A(e)}var zt=function(){function e(e,t,r){this.type=void 0,this.attributes=void 0,this.children=void 0,this.classes=void 0,this.type=e,this.attributes={},this.children=t||[],this.classes=r||[]}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.getAttribute=function(e){return this.attributes[e]},t.toNode=function(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);this.classes.length>0&&(e.className=G(this.classes));for(var r=0;r<this.children.length;r++)e.appendChild(this.children[r].toNode());return e},t.toMarkup=function(){var e="<"+this.type;for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=" "+t+'="',e+=l.escape(this.attributes[t]),e+='"');this.classes.length>0&&(e+=' class ="'+l.escape(G(this.classes))+'"'),e+=">";for(var r=0;r<this.children.length;r++)e+=this.children[r].toMarkup();return e+="</"+this.type+">"},t.toText=function(){return this.children.map((function(e){return e.toText()})).join("")},e}(),At=function(){function e(e){this.text=void 0,this.text=e}var t=e.prototype;return t.toNode=function(){return document.createTextNode(this.text)},t.toMarkup=function(){return l.escape(this.toText())},t.toText=function(){return this.text},e}(),Tt={MathNode:zt,TextNode:At,SpaceNode:function(){function e(e){this.width=void 0,this.character=void 0,this.width=e,this.character=e>=.05555&&e<=.05556?"\u200a":e>=.1666&&e<=.1667?"\u2009":e>=.2222&&e<=.2223?"\u2005":e>=.2777&&e<=.2778?"\u2005\u200a":e>=-.05556&&e<=-.05555?"\u200a\u2063":e>=-.1667&&e<=-.1666?"\u2009\u2063":e>=-.2223&&e<=-.2222?"\u205f\u2063":e>=-.2778&&e<=-.2777?"\u2005\u2063":null}var t=e.prototype;return t.toNode=function(){if(this.character)return document.createTextNode(this.character);var e=document.createElementNS("http://www.w3.org/1998/Math/MathML","mspace");return e.setAttribute("width",F(this.width)),e},t.toMarkup=function(){return this.character?"<mtext>"+this.character+"</mtext>":'<mspace width="'+F(this.width)+'"/>'},t.toText=function(){return this.character?this.character:" "},e}(),newDocumentFragment:Mt},Bt=function(e,t,r){return!ae[t][e]||!ae[t][e].replace||55349===e.charCodeAt(0)||we.hasOwnProperty(e)&&r&&(r.fontFamily&&"tt"===r.fontFamily.slice(4,6)||r.font&&"tt"===r.font.slice(4,6))||(e=ae[t][e].replace),new Tt.TextNode(e)},Ct=function(e){return 1===e.length?e[0]:new Tt.MathNode("mrow",e)},Nt=function(e,t){if("texttt"===t.fontFamily)return"monospace";if("textsf"===t.fontFamily)return"textit"===t.fontShape&&"textbf"===t.fontWeight?"sans-serif-bold-italic":"textit"===t.fontShape?"sans-serif-italic":"textbf"===t.fontWeight?"bold-sans-serif":"sans-serif";if("textit"===t.fontShape&&"textbf"===t.fontWeight)return"bold-italic";if("textit"===t.fontShape)return"italic";if("textbf"===t.fontWeight)return"bold";var r=t.font;if(!r||"mathnormal"===r)return null;var n=e.mode;if("mathit"===r)return"italic";if("boldsymbol"===r)return"textord"===e.type?"bold":"bold-italic";if("mathbf"===r)return"bold";if("mathbb"===r)return"double-struck";if("mathfrak"===r)return"fraktur";if("mathscr"===r||"mathcal"===r)return"script";if("mathsf"===r)return"sans-serif";if("mathtt"===r)return"monospace";var a=e.text;return l.contains(["\\imath","\\jmath"],a)?null:(ae[n][a]&&ae[n][a].replace&&(a=ae[n][a].replace),N(a,Ke.fontMap[r].fontName,n)?Ke.fontMap[r].variant:null)},qt=function(e,t,r){if(1===e.length){var n=Rt(e[0],t);return r&&n instanceof zt&&"mo"===n.type&&(n.setAttribute("lspace","0em"),n.setAttribute("rspace","0em")),[n]}for(var a,i=[],o=0;o<e.length;o++){var s=Rt(e[o],t);if(s instanceof zt&&a instanceof zt){if("mtext"===s.type&&"mtext"===a.type&&s.getAttribute("mathvariant")===a.getAttribute("mathvariant")){var l;(l=a.children).push.apply(l,s.children);continue}if("mn"===s.type&&"mn"===a.type){var h;(h=a.children).push.apply(h,s.children);continue}if("mi"===s.type&&1===s.children.length&&"mn"===a.type){var c=s.children[0];if(c instanceof At&&"."===c.text){var m;(m=a.children).push.apply(m,s.children);continue}}else if("mi"===a.type&&1===a.children.length){var u=a.children[0];if(u instanceof At&&"\u0338"===u.text&&("mo"===s.type||"mi"===s.type||"mn"===s.type)){var p=s.children[0];p instanceof At&&p.text.length>0&&(p.text=p.text.slice(0,1)+"\u0338"+p.text.slice(1),i.pop())}}}i.push(s),a=s}return i},It=function(e,t,r){return Ct(qt(e,t,r))},Rt=function(e,t){if(!e)return new Tt.MathNode("mrow");if(it[e.type])return it[e.type](e,t);throw new n("Got group of unknown type: '"+e.type+"'")};function Ht(e,t,r,n,a){var i,o=qt(e,r);i=1===o.length&&o[0]instanceof zt&&l.contains(["mrow","mtable"],o[0].type)?o[0]:new Tt.MathNode("mrow",o);var s=new Tt.MathNode("annotation",[new Tt.TextNode(t)]);s.setAttribute("encoding","application/x-tex");var h=new Tt.MathNode("semantics",[i,s]),c=new Tt.MathNode("math",[h]);c.setAttribute("xmlns","http://www.w3.org/1998/Math/MathML"),n&&c.setAttribute("display","block");var m=a?"katex":"katex-mathml";return Ke.makeSpan([m],[c])}var Ot=function(e){return new E({style:e.displayMode?x.DISPLAY:x.TEXT,maxSize:e.maxSize,minRuleThickness:e.minRuleThickness})},Et=function(e,t){if(t.displayMode){var r=["katex-display"];t.leqno&&r.push("leqno"),t.fleqn&&r.push("fleqn"),e=Ke.makeSpan(r,[e])}return e},Lt=function(e,t,r){var n,a=Ot(r);if("mathml"===r.output)return Ht(e,t,a,r.displayMode,!0);if("html"===r.output){var i=St(e,a);n=Ke.makeSpan(["katex"],[i])}else{var o=Ht(e,t,a,r.displayMode,!1),s=St(e,a);n=Ke.makeSpan(["katex"],[o,s])}return Et(n,r)},Dt={widehat:"^",widecheck:"\u02c7",widetilde:"~",utilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23df",overbrace:"\u23de",overgroup:"\u23e0",undergroup:"\u23e1",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xlongequal:"=",xtofrom:"\u21c4",xrightleftarrows:"\u21c4",xrightequilibrium:"\u21cc",xleftequilibrium:"\u21cb","\\cdrightarrow":"\u2192","\\cdleftarrow":"\u2190","\\cdlongequal":"="},Vt={overrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],overleftarrow:[["leftarrow"],.888,522,"xMinYMin"],underrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],underleftarrow:[["leftarrow"],.888,522,"xMinYMin"],xrightarrow:[["rightarrow"],1.469,522,"xMaxYMin"],"\\cdrightarrow":[["rightarrow"],3,522,"xMaxYMin"],xleftarrow:[["leftarrow"],1.469,522,"xMinYMin"],"\\cdleftarrow":[["leftarrow"],3,522,"xMinYMin"],Overrightarrow:[["doublerightarrow"],.888,560,"xMaxYMin"],xRightarrow:[["doublerightarrow"],1.526,560,"xMaxYMin"],xLeftarrow:[["doubleleftarrow"],1.526,560,"xMinYMin"],overleftharpoon:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoonup:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoondown:[["leftharpoondown"],.888,522,"xMinYMin"],overrightharpoon:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoonup:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoondown:[["rightharpoondown"],.888,522,"xMaxYMin"],xlongequal:[["longequal"],.888,334,"xMinYMin"],"\\cdlongequal":[["longequal"],3,334,"xMinYMin"],xtwoheadleftarrow:[["twoheadleftarrow"],.888,334,"xMinYMin"],xtwoheadrightarrow:[["twoheadrightarrow"],.888,334,"xMaxYMin"],overleftrightarrow:[["leftarrow","rightarrow"],.888,522],overbrace:[["leftbrace","midbrace","rightbrace"],1.6,548],underbrace:[["leftbraceunder","midbraceunder","rightbraceunder"],1.6,548],underleftrightarrow:[["leftarrow","rightarrow"],.888,522],xleftrightarrow:[["leftarrow","rightarrow"],1.75,522],xLeftrightarrow:[["doubleleftarrow","doublerightarrow"],1.75,560],xrightleftharpoons:[["leftharpoondownplus","rightharpoonplus"],1.75,716],xleftrightharpoons:[["leftharpoonplus","rightharpoondownplus"],1.75,716],xhookleftarrow:[["leftarrow","righthook"],1.08,522],xhookrightarrow:[["lefthook","rightarrow"],1.08,522],overlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],underlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],overgroup:[["leftgroup","rightgroup"],.888,342],undergroup:[["leftgroupunder","rightgroupunder"],.888,342],xmapsto:[["leftmapsto","rightarrow"],1.5,522],xtofrom:[["leftToFrom","rightToFrom"],1.75,528],xrightleftarrows:[["baraboveleftarrow","rightarrowabovebar"],1.75,901],xrightequilibrium:[["baraboveshortleftharpoon","rightharpoonaboveshortbar"],1.75,716],xleftequilibrium:[["shortbaraboveleftharpoon","shortrightharpoonabovebar"],1.75,716]},Pt=function(e,t,r,n,a){var i,o=e.height+e.depth+r+n;if(/fbox|color|angl/.test(t)){if(i=Ke.makeSpan(["stretchy",t],[],a),"fbox"===t){var s=a.color&&a.getColor();s&&(i.style.borderColor=s)}}else{var l=[];/^[bx]cancel$/.test(t)&&l.push(new Q({x1:"0",y1:"0",x2:"100%",y2:"100%","stroke-width":"0.046em"})),/^x?cancel$/.test(t)&&l.push(new Q({x1:"0",y1:"100%",x2:"100%",y2:"0","stroke-width":"0.046em"}));var h=new K(l,{width:"100%",height:F(o)});i=Ke.makeSvgSpan([],[h],a)}return i.height=o,i.style.height=F(o),i},Ft=function(e){var t=new Tt.MathNode("mo",[new Tt.TextNode(Dt[e.replace(/^\\/,"")])]);return t.setAttribute("stretchy","true"),t},Gt=function(e,t){var r=function(){var r=4e5,n=e.label.slice(1);if(l.contains(["widehat","widecheck","widetilde","utilde"],n)){var a,i,o,s="ordgroup"===(d=e.base).type?d.body.length:1;if(s>5)"widehat"===n||"widecheck"===n?(a=420,r=2364,o=.42,i=n+"4"):(a=312,r=2340,o=.34,i="tilde4");else{var h=[1,1,2,2,3,3][s];"widehat"===n||"widecheck"===n?(r=[0,1062,2364,2364,2364][h],a=[0,239,300,360,420][h],o=[0,.24,.3,.3,.36,.42][h],i=n+h):(r=[0,600,1033,2339,2340][h],a=[0,260,286,306,312][h],o=[0,.26,.286,.3,.306,.34][h],i="tilde"+h)}var c=new J(i),m=new K([c],{width:"100%",height:F(o),viewBox:"0 0 "+r+" "+a,preserveAspectRatio:"none"});return{span:Ke.makeSvgSpan([],[m],t),minWidth:0,height:o}}var u,p,d,f=[],g=Vt[n],v=g[0],y=g[1],b=g[2],x=b/1e3,w=v.length;if(1===w)u=["hide-tail"],p=[g[3]];else if(2===w)u=["halfarrow-left","halfarrow-right"],p=["xMinYMin","xMaxYMin"];else{if(3!==w)throw new Error("Correct katexImagesData or update code here to support\n                    "+w+" children.");u=["brace-left","brace-center","brace-right"],p=["xMinYMin","xMidYMin","xMaxYMin"]}for(var k=0;k<w;k++){var S=new J(v[k]),M=new K([S],{width:"400em",height:F(x),viewBox:"0 0 "+r+" "+b,preserveAspectRatio:p[k]+" slice"}),z=Ke.makeSvgSpan([u[k]],[M],t);if(1===w)return{span:z,minWidth:y,height:x};z.style.height=F(x),f.push(z)}return{span:Ke.makeSpan(["stretchy"],f,t),minWidth:y,height:x}}(),n=r.span,a=r.minWidth,i=r.height;return n.height=i,n.style.height=F(i),a>0&&(n.style.minWidth=F(a)),n};function Ut(e,t){if(!e||e.type!==t)throw new Error("Expected node of type "+t+", but got "+(e?"node of type "+e.type:String(e)));return e}function Yt(e){var t=Xt(e);if(!t)throw new Error("Expected node of symbol group type, but got "+(e?"node of type "+e.type:String(e)));return t}function Xt(e){return e&&("atom"===e.type||re.hasOwnProperty(e.type))?e:null}var Wt=function(e,t){var r,n,a;e&&"supsub"===e.type?(r=(n=Ut(e.base,"accent")).base,e.base=r,a=function(e){if(e instanceof W)return e;throw new Error("Expected span<HtmlDomNode> but got "+String(e)+".")}(wt(e,t)),e.base=n):r=(n=Ut(e,"accent")).base;var i=wt(r,t.havingCrampedStyle()),o=0;if(n.isShifty&&l.isCharacterBox(r)){var s=l.getBaseElem(r);o=ee(wt(s,t.havingCrampedStyle())).skew}var h,c="\\c"===n.label,m=c?i.height+i.depth:Math.min(i.height,t.fontMetrics().xHeight);if(n.isStretchy)h=Gt(n,t),h=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"elem",elem:h,wrapperClasses:["svg-align"],wrapperStyle:o>0?{width:"calc(100% - "+F(2*o)+")",marginLeft:F(2*o)}:void 0}]},t);else{var u,p;"\\vec"===n.label?(u=Ke.staticSvg("vec",t),p=Ke.svgData.vec[1]):((u=ee(u=Ke.makeOrd({mode:n.mode,text:n.label},t,"textord"))).italic=0,p=u.width,c&&(m+=u.depth)),h=Ke.makeSpan(["accent-body"],[u]);var d="\\textcircled"===n.label;d&&(h.classes.push("accent-full"),m=i.height);var f=o;d||(f-=p/2),h.style.left=F(f),"\\textcircled"===n.label&&(h.style.top=".2em"),h=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"kern",size:-m},{type:"elem",elem:h}]},t)}var g=Ke.makeSpan(["mord","accent"],[h],t);return a?(a.children[0]=g,a.height=Math.max(g.height,a.height),a.classes[0]="mord",a):g},_t=function(e,t){var r=e.isStretchy?Ft(e.label):new Tt.MathNode("mo",[Bt(e.label,e.mode)]),n=new Tt.MathNode("mover",[Rt(e.base,t),r]);return n.setAttribute("accent","true"),n},jt=new RegExp(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring"].map((function(e){return"\\"+e})).join("|"));ot({type:"accent",names:["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring","\\widecheck","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],props:{numArgs:1},handler:function(e,t){var r=lt(t[0]),n=!jt.test(e.funcName),a=!n||"\\widehat"===e.funcName||"\\widetilde"===e.funcName||"\\widecheck"===e.funcName;return{type:"accent",mode:e.parser.mode,label:e.funcName,isStretchy:n,isShifty:a,base:r}},htmlBuilder:Wt,mathmlBuilder:_t}),ot({type:"accent",names:["\\'","\\","\\^","\\~","\\=","\\u","\\.",'\\"',"\\c","\\r","\\H","\\v","\\textcircled"],props:{numArgs:1,allowedInText:!0,allowedInMath:!0,argTypes:["primitive"]},handler:function(e,t){var r=t[0],n=e.parser.mode;return"math"===n&&(e.parser.settings.reportNonstrict("mathVsTextAccents","LaTeX's accent "+e.funcName+" works only in text mode"),n="text"),{type:"accent",mode:n,label:e.funcName,isStretchy:!1,isShifty:!0,base:r}},htmlBuilder:Wt,mathmlBuilder:_t}),ot({type:"accentUnder",names:["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\utilde"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"accentUnder",mode:r.mode,label:n,base:a}},htmlBuilder:function(e,t){var r=wt(e.base,t),n=Gt(e,t),a="\\utilde"===e.label?.12:0,i=Ke.makeVList({positionType:"top",positionData:r.height,children:[{type:"elem",elem:n,wrapperClasses:["svg-align"]},{type:"kern",size:a},{type:"elem",elem:r}]},t);return Ke.makeSpan(["mord","accentunder"],[i],t)},mathmlBuilder:function(e,t){var r=Ft(e.label),n=new Tt.MathNode("munder",[Rt(e.base,t),r]);return n.setAttribute("accentunder","true"),n}});var $t=function(e){var t=new Tt.MathNode("mpadded",e?[e]:[]);return t.setAttribute("width","+0.6em"),t.setAttribute("lspace","0.3em"),t};ot({type:"xArrow",names:["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xlongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xtofrom","\\xrightleftarrows","\\xrightequilibrium","\\xleftequilibrium","\\\\cdrightarrow","\\\\cdleftarrow","\\\\cdlongequal"],props:{numArgs:1,numOptionalArgs:1},handler:function(e,t,r){var n=e.parser,a=e.funcName;return{type:"xArrow",mode:n.mode,label:a,body:t[0],below:r[0]}},htmlBuilder:function(e,t){var r,n=t.style,a=t.havingStyle(n.sup()),i=Ke.wrapFragment(wt(e.body,a,t),t),o="\\x"===e.label.slice(0,2)?"x":"cd";i.classes.push(o+"-arrow-pad"),e.below&&(a=t.havingStyle(n.sub()),(r=Ke.wrapFragment(wt(e.below,a,t),t)).classes.push(o+"-arrow-pad"));var s,l=Gt(e,t),h=-t.fontMetrics().axisHeight+.5*l.height,c=-t.fontMetrics().axisHeight-.5*l.height-.111;if((i.depth>.25||"\\xleftequilibrium"===e.label)&&(c-=i.depth),r){var m=-t.fontMetrics().axisHeight+r.height+.5*l.height+.111;s=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:c},{type:"elem",elem:l,shift:h},{type:"elem",elem:r,shift:m}]},t)}else s=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:c},{type:"elem",elem:l,shift:h}]},t);return s.children[0].children[0].children[1].classes.push("svg-align"),Ke.makeSpan(["mrel","x-arrow"],[s],t)},mathmlBuilder:function(e,t){var r,n=Ft(e.label);if(n.setAttribute("minsize","x"===e.label.charAt(0)?"1.75em":"3.0em"),e.body){var a=$t(Rt(e.body,t));if(e.below){var i=$t(Rt(e.below,t));r=new Tt.MathNode("munderover",[n,i,a])}else r=new Tt.MathNode("mover",[n,a])}else if(e.below){var o=$t(Rt(e.below,t));r=new Tt.MathNode("munder",[n,o])}else r=$t(),r=new Tt.MathNode("mover",[n,r]);return r}});var Zt=Ke.makeSpan;function Kt(e,t){var r=ft(e.body,t,!0);return Zt([e.mclass],r,t)}function Jt(e,t){var r,n=qt(e.body,t);return"minner"===e.mclass?r=new Tt.MathNode("mpadded",n):"mord"===e.mclass?e.isCharacterBox?(r=n[0]).type="mi":r=new Tt.MathNode("mi",n):(e.isCharacterBox?(r=n[0]).type="mo":r=new Tt.MathNode("mo",n),"mbin"===e.mclass?(r.attributes.lspace="0.22em",r.attributes.rspace="0.22em"):"mpunct"===e.mclass?(r.attributes.lspace="0em",r.attributes.rspace="0.17em"):"mopen"===e.mclass||"mclose"===e.mclass?(r.attributes.lspace="0em",r.attributes.rspace="0em"):"minner"===e.mclass&&(r.attributes.lspace="0.0556em",r.attributes.width="+0.1111em")),r}ot({type:"mclass",names:["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"mclass",mode:r.mode,mclass:"m"+n.slice(5),body:ht(a),isCharacterBox:l.isCharacterBox(a)}},htmlBuilder:Kt,mathmlBuilder:Jt});var Qt=function(e){var t="ordgroup"===e.type&&e.body.length?e.body[0]:e;return"atom"!==t.type||"bin"!==t.family&&"rel"!==t.family?"mord":"m"+t.family};ot({type:"mclass",names:["\\@binrel"],props:{numArgs:2},handler:function(e,t){return{type:"mclass",mode:e.parser.mode,mclass:Qt(t[0]),body:ht(t[1]),isCharacterBox:l.isCharacterBox(t[1])}}}),ot({type:"mclass",names:["\\stackrel","\\overset","\\underset"],props:{numArgs:2},handler:function(e,t){var r,n=e.parser,a=e.funcName,i=t[1],o=t[0];r="\\stackrel"!==a?Qt(i):"mrel";var s={type:"op",mode:i.mode,limits:!0,alwaysHandleSupSub:!0,parentIsSupSub:!1,symbol:!1,suppressBaseShift:"\\stackrel"!==a,body:ht(i)},h={type:"supsub",mode:o.mode,base:s,sup:"\\underset"===a?null:o,sub:"\\underset"===a?o:null};return{type:"mclass",mode:n.mode,mclass:r,body:[h],isCharacterBox:l.isCharacterBox(h)}},htmlBuilder:Kt,mathmlBuilder:Jt}),ot({type:"pmb",names:["\\pmb"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){return{type:"pmb",mode:e.parser.mode,mclass:Qt(t[0]),body:ht(t[0])}},htmlBuilder:function(e,t){var r=ft(e.body,t,!0),n=Ke.makeSpan([e.mclass],r,t);return n.style.textShadow="0.02em 0.01em 0.04px",n},mathmlBuilder:function(e,t){var r=qt(e.body,t),n=new Tt.MathNode("mstyle",r);return n.setAttribute("style","text-shadow: 0.02em 0.01em 0.04px"),n}});var er={">":"\\\\cdrightarrow","<":"\\\\cdleftarrow","=":"\\\\cdlongequal",A:"\\uparrow",V:"\\downarrow","|":"\\Vert",".":"no arrow"},tr=function(e){return"textord"===e.type&&"@"===e.text};function rr(e,t,r){var n=er[e];switch(n){case"\\\\cdrightarrow":case"\\\\cdleftarrow":return r.callFunction(n,[t[0]],[t[1]]);case"\\uparrow":case"\\downarrow":var a={type:"atom",text:n,mode:"math",family:"rel"},i={type:"ordgroup",mode:"math",body:[r.callFunction("\\\\cdleft",[t[0]],[]),r.callFunction("\\Big",[a],[]),r.callFunction("\\\\cdright",[t[1]],[])]};return r.callFunction("\\\\cdparent",[i],[]);case"\\\\cdlongequal":return r.callFunction("\\\\cdlongequal",[],[]);case"\\Vert":return r.callFunction("\\Big",[{type:"textord",text:"\\Vert",mode:"math"}],[]);default:return{type:"textord",text:" ",mode:"math"}}}ot({type:"cdlabel",names:["\\\\cdleft","\\\\cdright"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName;return{type:"cdlabel",mode:r.mode,side:n.slice(4),label:t[0]}},htmlBuilder:function(e,t){var r=t.havingStyle(t.style.sup()),n=Ke.wrapFragment(wt(e.label,r,t),t);return n.classes.push("cd-label-"+e.side),n.style.bottom=F(.8-n.depth),n.height=0,n.depth=0,n},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mrow",[Rt(e.label,t)]);return(r=new Tt.MathNode("mpadded",[r])).setAttribute("width","0"),"left"===e.side&&r.setAttribute("lspace","-1width"),r.setAttribute("voffset","0.7em"),(r=new Tt.MathNode("mstyle",[r])).setAttribute("displaystyle","false"),r.setAttribute("scriptlevel","1"),r}}),ot({type:"cdlabelparent",names:["\\\\cdparent"],props:{numArgs:1},handler:function(e,t){return{type:"cdlabelparent",mode:e.parser.mode,fragment:t[0]}},htmlBuilder:function(e,t){var r=Ke.wrapFragment(wt(e.fragment,t),t);return r.classes.push("cd-vert-arrow"),r},mathmlBuilder:function(e,t){return new Tt.MathNode("mrow",[Rt(e.fragment,t)])}}),ot({type:"textord",names:["\\@char"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){for(var r=e.parser,a=Ut(t[0],"ordgroup").body,i="",o=0;o<a.length;o++){i+=Ut(a[o],"textord").text}var s,l=parseInt(i);if(isNaN(l))throw new n("\\@char has non-numeric argument "+i);if(l<0||l>=1114111)throw new n("\\@char with invalid code point "+i);return l<=65535?s=String.fromCharCode(l):(l-=65536,s=String.fromCharCode(55296+(l>>10),56320+(1023&l))),{type:"textord",mode:r.mode,text:s}}});var nr=function(e,t){var r=ft(e.body,t.withColor(e.color),!1);return Ke.makeFragment(r)},ar=function(e,t){var r=qt(e.body,t.withColor(e.color)),n=new Tt.MathNode("mstyle",r);return n.setAttribute("mathcolor",e.color),n};ot({type:"color",names:["\\textcolor"],props:{numArgs:2,allowedInText:!0,argTypes:["color","original"]},handler:function(e,t){var r=e.parser,n=Ut(t[0],"color-token").color,a=t[1];return{type:"color",mode:r.mode,color:n,body:ht(a)}},htmlBuilder:nr,mathmlBuilder:ar}),ot({type:"color",names:["\\color"],props:{numArgs:1,allowedInText:!0,argTypes:["color"]},handler:function(e,t){var r=e.parser,n=e.breakOnTokenText,a=Ut(t[0],"color-token").color;r.gullet.macros.set("\\current@color",a);var i=r.parseExpression(!0,n);return{type:"color",mode:r.mode,color:a,body:i}},htmlBuilder:nr,mathmlBuilder:ar}),ot({type:"cr",names:["\\\\"],props:{numArgs:0,numOptionalArgs:1,argTypes:["size"],allowedInText:!0},handler:function(e,t,r){var n=e.parser,a=r[0],i=!n.settings.displayMode||!n.settings.useStrictBehavior("newLineInDisplayMode","In LaTeX, \\\\ or \\newline does nothing in display mode");return{type:"cr",mode:n.mode,newLine:i,size:a&&Ut(a,"size").value}},htmlBuilder:function(e,t){var r=Ke.makeSpan(["mspace"],[],t);return e.newLine&&(r.classes.push("newline"),e.size&&(r.style.marginTop=F(P(e.size,t)))),r},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mspace");return e.newLine&&(r.setAttribute("linebreak","newline"),e.size&&r.setAttribute("height",F(P(e.size,t)))),r}});var ir={"\\global":"\\global","\\long":"\\\\globallong","\\\\globallong":"\\\\globallong","\\def":"\\gdef","\\gdef":"\\gdef","\\edef":"\\xdef","\\xdef":"\\xdef","\\let":"\\\\globallet","\\futurelet":"\\\\globalfuture"},or=function(e){var t=e.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(t))throw new n("Expected a control sequence",e);return t},sr=function(e,t,r,n){var a=e.gullet.macros.get(r.text);null==a&&(r.noexpand=!0,a={tokens:[r],numArgs:0,unexpandable:!e.gullet.isExpandable(r.text)}),e.gullet.macros.set(t,a,n)};ot({type:"internal",names:["\\global","\\long","\\\\globallong"],props:{numArgs:0,allowedInText:!0},handler:function(e){var t=e.parser,r=e.funcName;t.consumeSpaces();var a=t.fetch();if(ir[a.text])return"\\global"!==r&&"\\\\globallong"!==r||(a.text=ir[a.text]),Ut(t.parseFunction(),"internal");throw new n("Invalid token after macro prefix",a)}}),ot({type:"internal",names:["\\def","\\gdef","\\edef","\\xdef"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,a=t.gullet.popToken(),i=a.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(i))throw new n("Expected a control sequence",a);for(var o,s=0,l=[[]];"{"!==t.gullet.future().text;)if("#"===(a=t.gullet.popToken()).text){if("{"===t.gullet.future().text){o=t.gullet.future(),l[s].push("{");break}if(a=t.gullet.popToken(),!/^[1-9]$/.test(a.text))throw new n('Invalid argument number "'+a.text+'"');if(parseInt(a.text)!==s+1)throw new n('Argument number "'+a.text+'" out of order');s++,l.push([])}else{if("EOF"===a.text)throw new n("Expected a macro definition");l[s].push(a.text)}var h=t.gullet.consumeArg().tokens;return o&&h.unshift(o),"\\edef"!==r&&"\\xdef"!==r||(h=t.gullet.expandTokens(h)).reverse(),t.gullet.macros.set(i,{tokens:h,numArgs:s,delimiters:l},r===ir[r]),{type:"internal",mode:t.mode}}}),ot({type:"internal",names:["\\let","\\\\globallet"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,n=or(t.gullet.popToken());t.gullet.consumeSpaces();var a=function(e){var t=e.gullet.popToken();return"="===t.text&&" "===(t=e.gullet.popToken()).text&&(t=e.gullet.popToken()),t}(t);return sr(t,n,a,"\\\\globallet"===r),{type:"internal",mode:t.mode}}}),ot({type:"internal",names:["\\futurelet","\\\\globalfuture"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,n=or(t.gullet.popToken()),a=t.gullet.popToken(),i=t.gullet.popToken();return sr(t,n,i,"\\\\globalfuture"===r),t.gullet.pushToken(i),t.gullet.pushToken(a),{type:"internal",mode:t.mode}}});var lr=function(e,t,r){var n=N(ae.math[e]&&ae.math[e].replace||e,t,r);if(!n)throw new Error("Unsupported symbol "+e+" and font size "+t+".");return n},hr=function(e,t,r,n){var a=r.havingBaseStyle(t),i=Ke.makeSpan(n.concat(a.sizingClasses(r)),[e],r),o=a.sizeMultiplier/r.sizeMultiplier;return i.height*=o,i.depth*=o,i.maxFontSize=a.sizeMultiplier,i},cr=function(e,t,r){var n=t.havingBaseStyle(r),a=(1-t.sizeMultiplier/n.sizeMultiplier)*t.fontMetrics().axisHeight;e.classes.push("delimcenter"),e.style.top=F(a),e.height-=a,e.depth+=a},mr=function(e,t,r,n,a,i){var o=function(e,t,r,n){return Ke.makeSymbol(e,"Size"+t+"-Regular",r,n)}(e,t,a,n),s=hr(Ke.makeSpan(["delimsizing","size"+t],[o],n),x.TEXT,n,i);return r&&cr(s,n,x.TEXT),s},ur=function(e,t,r){var n;return n="Size1-Regular"===t?"delim-size1":"delim-size4",{type:"elem",elem:Ke.makeSpan(["delimsizinginner",n],[Ke.makeSpan([],[Ke.makeSymbol(e,t,r)])])}},pr=function(e,t,r){var n=T["Size4-Regular"][e.charCodeAt(0)]?T["Size4-Regular"][e.charCodeAt(0)][4]:T["Size1-Regular"][e.charCodeAt(0)][4],a=new J("inner",function(e,t){switch(e){case"\u239c":return"M291 0 H417 V"+t+" H291z M291 0 H417 V"+t+" H291z";case"\u2223":return"M145 0 H188 V"+t+" H145z M145 0 H188 V"+t+" H145z";case"\u2225":return"M145 0 H188 V"+t+" H145z M145 0 H188 V"+t+" H145zM367 0 H410 V"+t+" H367z M367 0 H410 V"+t+" H367z";case"\u239f":return"M457 0 H583 V"+t+" H457z M457 0 H583 V"+t+" H457z";case"\u23a2":return"M319 0 H403 V"+t+" H319z M319 0 H403 V"+t+" H319z";case"\u23a5":return"M263 0 H347 V"+t+" H263z M263 0 H347 V"+t+" H263z";case"\u23aa":return"M384 0 H504 V"+t+" H384z M384 0 H504 V"+t+" H384z";case"\u23d0":return"M312 0 H355 V"+t+" H312z M312 0 H355 V"+t+" H312z";case"\u2016":return"M257 0 H300 V"+t+" H257z M257 0 H300 V"+t+" H257zM478 0 H521 V"+t+" H478z M478 0 H521 V"+t+" H478z";default:return""}}(e,Math.round(1e3*t))),i=new K([a],{width:F(n),height:F(t),style:"width:"+F(n),viewBox:"0 0 "+1e3*n+" "+Math.round(1e3*t),preserveAspectRatio:"xMinYMin"}),o=Ke.makeSvgSpan([],[i],r);return o.height=t,o.style.height=F(t),o.style.width=F(n),{type:"elem",elem:o}},dr={type:"kern",size:-.008},fr=["|","\\lvert","\\rvert","\\vert"],gr=["\\|","\\lVert","\\rVert","\\Vert"],vr=function(e,t,r,n,a,i){var o,s,h,c,m="",u=0;o=h=c=e,s=null;var p="Size1-Regular";"\\uparrow"===e?h=c="\u23d0":"\\Uparrow"===e?h=c="\u2016":"\\downarrow"===e?o=h="\u23d0":"\\Downarrow"===e?o=h="\u2016":"\\updownarrow"===e?(o="\\uparrow",h="\u23d0",c="\\downarrow"):"\\Updownarrow"===e?(o="\\Uparrow",h="\u2016",c="\\Downarrow"):l.contains(fr,e)?(h="\u2223",m="vert",u=333):l.contains(gr,e)?(h="\u2225",m="doublevert",u=556):"["===e||"\\lbrack"===e?(o="\u23a1",h="\u23a2",c="\u23a3",p="Size4-Regular",m="lbrack",u=667):"]"===e||"\\rbrack"===e?(o="\u23a4",h="\u23a5",c="\u23a6",p="Size4-Regular",m="rbrack",u=667):"\\lfloor"===e||"\u230a"===e?(h=o="\u23a2",c="\u23a3",p="Size4-Regular",m="lfloor",u=667):"\\lceil"===e||"\u2308"===e?(o="\u23a1",h=c="\u23a2",p="Size4-Regular",m="lceil",u=667):"\\rfloor"===e||"\u230b"===e?(h=o="\u23a5",c="\u23a6",p="Size4-Regular",m="rfloor",u=667):"\\rceil"===e||"\u2309"===e?(o="\u23a4",h=c="\u23a5",p="Size4-Regular",m="rceil",u=667):"("===e||"\\lparen"===e?(o="\u239b",h="\u239c",c="\u239d",p="Size4-Regular",m="lparen",u=875):")"===e||"\\rparen"===e?(o="\u239e",h="\u239f",c="\u23a0",p="Size4-Regular",m="rparen",u=875):"\\{"===e||"\\lbrace"===e?(o="\u23a7",s="\u23a8",c="\u23a9",h="\u23aa",p="Size4-Regular"):"\\}"===e||"\\rbrace"===e?(o="\u23ab",s="\u23ac",c="\u23ad",h="\u23aa",p="Size4-Regular"):"\\lgroup"===e||"\u27ee"===e?(o="\u23a7",c="\u23a9",h="\u23aa",p="Size4-Regular"):"\\rgroup"===e||"\u27ef"===e?(o="\u23ab",c="\u23ad",h="\u23aa",p="Size4-Regular"):"\\lmoustache"===e||"\u23b0"===e?(o="\u23a7",c="\u23ad",h="\u23aa",p="Size4-Regular"):"\\rmoustache"!==e&&"\u23b1"!==e||(o="\u23ab",c="\u23a9",h="\u23aa",p="Size4-Regular");var d=lr(o,p,a),f=d.height+d.depth,g=lr(h,p,a),v=g.height+g.depth,y=lr(c,p,a),b=y.height+y.depth,w=0,k=1;if(null!==s){var S=lr(s,p,a);w=S.height+S.depth,k=2}var M=f+b+w,z=M+Math.max(0,Math.ceil((t-M)/(k*v)))*k*v,A=n.fontMetrics().axisHeight;r&&(A*=n.sizeMultiplier);var T=z/2-A,B=[];if(m.length>0){var C=z-f-b,N=Math.round(1e3*z),q=function(e,t){switch(e){case"lbrack":return"M403 1759 V84 H666 V0 H319 V1759 v"+t+" v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v"+t+" v1759 h84z";case"rbrack":return"M347 1759 V0 H0 V84 H263 V1759 v"+t+" v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v"+t+" v1759 h84z";case"vert":return"M145 15 v585 v"+t+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-t+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v"+t+" v585 h43z";case"doublevert":return"M145 15 v585 v"+t+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-t+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v"+t+" v585 h43z\nM367 15 v585 v"+t+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-t+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v"+t+" v585 h43z";case"lfloor":return"M319 602 V0 H403 V602 v"+t+" v1715 h263 v84 H319z\nMM319 602 V0 H403 V602 v"+t+" v1715 H319z";case"rfloor":return"M319 602 V0 H403 V602 v"+t+" v1799 H0 v-84 H319z\nMM319 602 V0 H403 V602 v"+t+" v1715 H319z";case"lceil":return"M403 1759 V84 H666 V0 H319 V1759 v"+t+" v602 h84z\nM403 1759 V0 H319 V1759 v"+t+" v602 h84z";case"rceil":return"M347 1759 V0 H0 V84 H263 V1759 v"+t+" v602 h84z\nM347 1759 V0 h-84 V1759 v"+t+" v602 h84z";case"lparen":return"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,"+(t+84)+"c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-"+(t+92)+"c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z";case"rparen":return"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,"+(t+9)+"\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-"+(t+144)+"c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z";default:throw new Error("Unknown stretchy delimiter.")}}(m,Math.round(1e3*C)),I=new J(m,q),R=(u/1e3).toFixed(3)+"em",H=(N/1e3).toFixed(3)+"em",O=new K([I],{width:R,height:H,viewBox:"0 0 "+u+" "+N}),E=Ke.makeSvgSpan([],[O],n);E.height=N/1e3,E.style.width=R,E.style.height=H,B.push({type:"elem",elem:E})}else{if(B.push(ur(c,p,a)),B.push(dr),null===s){var L=z-f-b+.016;B.push(pr(h,L,n))}else{var D=(z-f-b-w)/2+.016;B.push(pr(h,D,n)),B.push(dr),B.push(ur(s,p,a)),B.push(dr),B.push(pr(h,D,n))}B.push(dr),B.push(ur(o,p,a))}var V=n.havingBaseStyle(x.TEXT),P=Ke.makeVList({positionType:"bottom",positionData:T,children:B},V);return hr(Ke.makeSpan(["delimsizing","mult"],[P],V),x.TEXT,n,i)},yr=.08,br=function(e,t,r,n,a){var i=function(e,t,r){t*=1e3;var n="";switch(e){case"sqrtMain":n=function(e,t){return"M95,"+(622+e+t)+"\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl"+e/2.075+" -"+e+"\nc5.3,-9.3,12,-14,20,-14\nH400000v"+(40+e)+"H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM"+(834+e)+" "+t+"h400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize1":n=function(e,t){return"M263,"+(601+e+t)+"c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl"+e/2.084+" -"+e+"\nc4.7,-7.3,11,-11,19,-11\nH40000v"+(40+e)+"H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM"+(1001+e)+" "+t+"h400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize2":n=function(e,t){return"M983 "+(10+e+t)+"\nl"+e/3.13+" -"+e+"\nc4,-6.7,10,-10,18,-10 H400000v"+(40+e)+"\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM"+(1001+e)+" "+t+"h400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize3":n=function(e,t){return"M424,"+(2398+e+t)+"\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl"+e/4.223+" -"+e+"c4,-6.7,10,-10,18,-10 H400000\nv"+(40+e)+"H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M"+(1001+e)+" "+t+"\nh400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize4":n=function(e,t){return"M473,"+(2713+e+t)+"\nc339.3,-1799.3,509.3,-2700,510,-2702 l"+e/5.298+" -"+e+"\nc3.3,-7.3,9.3,-11,18,-11 H400000v"+(40+e)+"H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM"+(1001+e)+" "+t+"h400000v"+(40+e)+"H1017.7z"}(t,M);break;case"sqrtTall":n=function(e,t,r){return"M702 "+(e+t)+"H400000"+(40+e)+"\nH742v"+(r-54-t-e)+"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 "+t+"H400000v"+(40+e)+"H742z"}(t,M,r)}return n}(e,n,r),o=new J(e,i),s=new K([o],{width:"400em",height:F(t),viewBox:"0 0 400000 "+r,preserveAspectRatio:"xMinYMin slice"});return Ke.makeSvgSpan(["hide-tail"],[s],a)},xr=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\u230a","\u230b","\\lceil","\\rceil","\u2308","\u2309","\\surd"],wr=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\u27ee","\u27ef","\\lmoustache","\\rmoustache","\u23b0","\u23b1"],kr=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"],Sr=[0,1.2,1.8,2.4,3],Mr=[{type:"small",style:x.SCRIPTSCRIPT},{type:"small",style:x.SCRIPT},{type:"small",style:x.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}],zr=[{type:"small",style:x.SCRIPTSCRIPT},{type:"small",style:x.SCRIPT},{type:"small",style:x.TEXT},{type:"stack"}],Ar=[{type:"small",style:x.SCRIPTSCRIPT},{type:"small",style:x.SCRIPT},{type:"small",style:x.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}],Tr=function(e){if("small"===e.type)return"Main-Regular";if("large"===e.type)return"Size"+e.size+"-Regular";if("stack"===e.type)return"Size4-Regular";throw new Error("Add support for delim type '"+e.type+"' here.")},Br=function(e,t,r,n){for(var a=Math.min(2,3-n.style.size);a<r.length&&"stack"!==r[a].type;a++){var i=lr(e,Tr(r[a]),"math"),o=i.height+i.depth;if("small"===r[a].type&&(o*=n.havingBaseStyle(r[a].style).sizeMultiplier),o>t)return r[a]}return r[r.length-1]},Cr=function(e,t,r,n,a,i){var o;"<"===e||"\\lt"===e||"\u27e8"===e?e="\\langle":">"!==e&&"\\gt"!==e&&"\u27e9"!==e||(e="\\rangle"),o=l.contains(kr,e)?Mr:l.contains(xr,e)?Ar:zr;var s=Br(e,t,o,n);return"small"===s.type?function(e,t,r,n,a,i){var o=Ke.makeSymbol(e,"Main-Regular",a,n),s=hr(o,t,n,i);return r&&cr(s,n,t),s}(e,s.style,r,n,a,i):"large"===s.type?mr(e,s.size,r,n,a,i):vr(e,t,r,n,a,i)},Nr={sqrtImage:function(e,t){var r,n,a=t.havingBaseSizing(),i=Br("\\surd",e*a.sizeMultiplier,Ar,a),o=a.sizeMultiplier,s=Math.max(0,t.minRuleThickness-t.fontMetrics().sqrtRuleThickness),l=0,h=0,c=0;return"small"===i.type?(e<1?o=1:e<1.4&&(o=.7),h=(1+s)/o,(r=br("sqrtMain",l=(1+s+yr)/o,c=1e3+1e3*s+80,s,t)).style.minWidth="0.853em",n=.833/o):"large"===i.type?(c=1080*Sr[i.size],h=(Sr[i.size]+s)/o,l=(Sr[i.size]+s+yr)/o,(r=br("sqrtSize"+i.size,l,c,s,t)).style.minWidth="1.02em",n=1/o):(l=e+s+yr,h=e+s,c=Math.floor(1e3*e+s)+80,(r=br("sqrtTall",l,c,s,t)).style.minWidth="0.742em",n=1.056),r.height=h,r.style.height=F(l),{span:r,advanceWidth:n,ruleWidth:(t.fontMetrics().sqrtRuleThickness+s)*o}},sizedDelim:function(e,t,r,a,i){if("<"===e||"\\lt"===e||"\u27e8"===e?e="\\langle":">"!==e&&"\\gt"!==e&&"\u27e9"!==e||(e="\\rangle"),l.contains(xr,e)||l.contains(kr,e))return mr(e,t,!1,r,a,i);if(l.contains(wr,e))return vr(e,Sr[t],!1,r,a,i);throw new n("Illegal delimiter: '"+e+"'")},sizeToMaxHeight:Sr,customSizedDelim:Cr,leftRightDelim:function(e,t,r,n,a,i){var o=n.fontMetrics().axisHeight*n.sizeMultiplier,s=5/n.fontMetrics().ptPerEm,l=Math.max(t-o,r+o),h=Math.max(l/500*901,2*l-s);return Cr(e,h,!0,n,a,i)}},qr={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}},Ir=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\u230a","\u230b","\\lceil","\\rceil","\u2308","\u2309","<",">","\\langle","\u27e8","\\rangle","\u27e9","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\u27ee","\u27ef","\\lmoustache","\\rmoustache","\u23b0","\u23b1","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];function Rr(e,t){var r=Xt(e);if(r&&l.contains(Ir,r.text))return r;throw new n(r?"Invalid delimiter '"+r.text+"' after '"+t.funcName+"'":"Invalid delimiter type '"+e.type+"'",e)}function Hr(e){if(!e.body)throw new Error("Bug: The leftright ParseNode wasn't fully parsed.")}ot({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1,argTypes:["primitive"]},handler:function(e,t){var r=Rr(t[0],e);return{type:"delimsizing",mode:e.parser.mode,size:qr[e.funcName].size,mclass:qr[e.funcName].mclass,delim:r.text}},htmlBuilder:function(e,t){return"."===e.delim?Ke.makeSpan([e.mclass]):Nr.sizedDelim(e.delim,e.size,t,e.mode,[e.mclass])},mathmlBuilder:function(e){var t=[];"."!==e.delim&&t.push(Bt(e.delim,e.mode));var r=new Tt.MathNode("mo",t);"mopen"===e.mclass||"mclose"===e.mclass?r.setAttribute("fence","true"):r.setAttribute("fence","false"),r.setAttribute("stretchy","true");var n=F(Nr.sizeToMaxHeight[e.size]);return r.setAttribute("minsize",n),r.setAttribute("maxsize",n),r}}),ot({type:"leftright-right",names:["\\right"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser.gullet.macros.get("\\current@color");if(r&&"string"!=typeof r)throw new n("\\current@color set to non-string in \\right");return{type:"leftright-right",mode:e.parser.mode,delim:Rr(t[0],e).text,color:r}}}),ot({type:"leftright",names:["\\left"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=Rr(t[0],e),n=e.parser;++n.leftrightDepth;var a=n.parseExpression(!1);--n.leftrightDepth,n.expect("\\right",!1);var i=Ut(n.parseFunction(),"leftright-right");return{type:"leftright",mode:n.mode,body:a,left:r.text,right:i.delim,rightColor:i.color}},htmlBuilder:function(e,t){Hr(e);for(var r,n,a=ft(e.body,t,!0,["mopen","mclose"]),i=0,o=0,s=!1,l=0;l<a.length;l++)a[l].isMiddle?s=!0:(i=Math.max(a[l].height,i),o=Math.max(a[l].depth,o));if(i*=t.sizeMultiplier,o*=t.sizeMultiplier,r="."===e.left?xt(t,["mopen"]):Nr.leftRightDelim(e.left,i,o,t,e.mode,["mopen"]),a.unshift(r),s)for(var h=1;h<a.length;h++){var c=a[h].isMiddle;c&&(a[h]=Nr.leftRightDelim(c.delim,i,o,c.options,e.mode,[]))}if("."===e.right)n=xt(t,["mclose"]);else{var m=e.rightColor?t.withColor(e.rightColor):t;n=Nr.leftRightDelim(e.right,i,o,m,e.mode,["mclose"])}return a.push(n),Ke.makeSpan(["minner"],a,t)},mathmlBuilder:function(e,t){Hr(e);var r=qt(e.body,t);if("."!==e.left){var n=new Tt.MathNode("mo",[Bt(e.left,e.mode)]);n.setAttribute("fence","true"),r.unshift(n)}if("."!==e.right){var a=new Tt.MathNode("mo",[Bt(e.right,e.mode)]);a.setAttribute("fence","true"),e.rightColor&&a.setAttribute("mathcolor",e.rightColor),r.push(a)}return Ct(r)}}),ot({type:"middle",names:["\\middle"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=Rr(t[0],e);if(!e.parser.leftrightDepth)throw new n("\\middle without preceding \\left",r);return{type:"middle",mode:e.parser.mode,delim:r.text}},htmlBuilder:function(e,t){var r;if("."===e.delim)r=xt(t,[]);else{r=Nr.sizedDelim(e.delim,1,t,e.mode,[]);var n={delim:e.delim,options:t};r.isMiddle=n}return r},mathmlBuilder:function(e,t){var r="\\vert"===e.delim||"|"===e.delim?Bt("|","text"):Bt(e.delim,e.mode),n=new Tt.MathNode("mo",[r]);return n.setAttribute("fence","true"),n.setAttribute("lspace","0.05em"),n.setAttribute("rspace","0.05em"),n}});var Or=function(e,t){var r,n,a,i=Ke.wrapFragment(wt(e.body,t),t),o=e.label.slice(1),s=t.sizeMultiplier,h=0,c=l.isCharacterBox(e.body);if("sout"===o)(r=Ke.makeSpan(["stretchy","sout"])).height=t.fontMetrics().defaultRuleThickness/s,h=-.5*t.fontMetrics().xHeight;else if("phase"===o){var m=P({number:.6,unit:"pt"},t),u=P({number:.35,unit:"ex"},t);s/=t.havingBaseSizing().sizeMultiplier;var p=i.height+i.depth+m+u;i.style.paddingLeft=F(p/2+m);var d=Math.floor(1e3*p*s),f="M400000 "+(n=d)+" H0 L"+n/2+" 0 l65 45 L145 "+(n-80)+" H400000z",g=new K([new J("phase",f)],{width:"400em",height:F(d/1e3),viewBox:"0 0 400000 "+d,preserveAspectRatio:"xMinYMin slice"});(r=Ke.makeSvgSpan(["hide-tail"],[g],t)).style.height=F(p),h=i.depth+m+u}else{/cancel/.test(o)?c||i.classes.push("cancel-pad"):"angl"===o?i.classes.push("anglpad"):i.classes.push("boxpad");var v=0,y=0,b=0;/box/.test(o)?(b=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness),y=v=t.fontMetrics().fboxsep+("colorbox"===o?0:b)):"angl"===o?(v=4*(b=Math.max(t.fontMetrics().defaultRuleThickness,t.minRuleThickness)),y=Math.max(0,.25-i.depth)):y=v=c?.2:0,r=Pt(i,o,v,y,t),/fbox|boxed|fcolorbox/.test(o)?(r.style.borderStyle="solid",r.style.borderWidth=F(b)):"angl"===o&&.049!==b&&(r.style.borderTopWidth=F(b),r.style.borderRightWidth=F(b)),h=i.depth+y,e.backgroundColor&&(r.style.backgroundColor=e.backgroundColor,e.borderColor&&(r.style.borderColor=e.borderColor))}if(e.backgroundColor)a=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:r,shift:h},{type:"elem",elem:i,shift:0}]},t);else{var x=/cancel|phase/.test(o)?["svg-align"]:[];a=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:0},{type:"elem",elem:r,shift:h,wrapperClasses:x}]},t)}return/cancel/.test(o)&&(a.height=i.height,a.depth=i.depth),/cancel/.test(o)&&!c?Ke.makeSpan(["mord","cancel-lap"],[a],t):Ke.makeSpan(["mord"],[a],t)},Er=function(e,t){var r=0,n=new Tt.MathNode(e.label.indexOf("colorbox")>-1?"mpadded":"menclose",[Rt(e.body,t)]);switch(e.label){case"\\cancel":n.setAttribute("notation","updiagonalstrike");break;case"\\bcancel":n.setAttribute("notation","downdiagonalstrike");break;case"\\phase":n.setAttribute("notation","phasorangle");break;case"\\sout":n.setAttribute("notation","horizontalstrike");break;case"\\fbox":n.setAttribute("notation","box");break;case"\\angl":n.setAttribute("notation","actuarial");break;case"\\fcolorbox":case"\\colorbox":if(r=t.fontMetrics().fboxsep*t.fontMetrics().ptPerEm,n.setAttribute("width","+"+2*r+"pt"),n.setAttribute("height","+"+2*r+"pt"),n.setAttribute("lspace",r+"pt"),n.setAttribute("voffset",r+"pt"),"\\fcolorbox"===e.label){var a=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness);n.setAttribute("style","border: "+a+"em solid "+String(e.borderColor))}break;case"\\xcancel":n.setAttribute("notation","updiagonalstrike downdiagonalstrike")}return e.backgroundColor&&n.setAttribute("mathbackground",e.backgroundColor),n};ot({type:"enclose",names:["\\colorbox"],props:{numArgs:2,allowedInText:!0,argTypes:["color","text"]},handler:function(e,t,r){var n=e.parser,a=e.funcName,i=Ut(t[0],"color-token").color,o=t[1];return{type:"enclose",mode:n.mode,label:a,backgroundColor:i,body:o}},htmlBuilder:Or,mathmlBuilder:Er}),ot({type:"enclose",names:["\\fcolorbox"],props:{numArgs:3,allowedInText:!0,argTypes:["color","color","text"]},handler:function(e,t,r){var n=e.parser,a=e.funcName,i=Ut(t[0],"color-token").color,o=Ut(t[1],"color-token").color,s=t[2];return{type:"enclose",mode:n.mode,label:a,backgroundColor:o,borderColor:i,body:s}},htmlBuilder:Or,mathmlBuilder:Er}),ot({type:"enclose",names:["\\fbox"],props:{numArgs:1,argTypes:["hbox"],allowedInText:!0},handler:function(e,t){return{type:"enclose",mode:e.parser.mode,label:"\\fbox",body:t[0]}}}),ot({type:"enclose",names:["\\cancel","\\bcancel","\\xcancel","\\sout","\\phase"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"enclose",mode:r.mode,label:n,body:a}},htmlBuilder:Or,mathmlBuilder:Er}),ot({type:"enclose",names:["\\angl"],props:{numArgs:1,argTypes:["hbox"],allowedInText:!1},handler:function(e,t){return{type:"enclose",mode:e.parser.mode,label:"\\angl",body:t[0]}}});var Lr={};function Dr(e){for(var t=e.type,r=e.names,n=e.props,a=e.handler,i=e.htmlBuilder,o=e.mathmlBuilder,s={type:t,numArgs:n.numArgs||0,allowedInText:!1,numOptionalArgs:0,handler:a},l=0;l<r.length;++l)Lr[r[l]]=s;i&&(at[t]=i),o&&(it[t]=o)}var Vr={};function Pr(e,t){Vr[e]=t}var Fr=function(){function e(e,t,r){this.lexer=void 0,this.start=void 0,this.end=void 0,this.lexer=e,this.start=t,this.end=r}return e.range=function(t,r){return r?t&&t.loc&&r.loc&&t.loc.lexer===r.loc.lexer?new e(t.loc.lexer,t.loc.start,r.loc.end):null:t&&t.loc},e}(),Gr=function(){function e(e,t){this.text=void 0,this.loc=void 0,this.noexpand=void 0,this.treatAsRelax=void 0,this.text=e,this.loc=t}return e.prototype.range=function(t,r){return new e(r,Fr.range(this,t))},e}();function Ur(e){var t=[];e.consumeSpaces();var r=e.fetch().text;for("\\relax"===r&&(e.consume(),e.consumeSpaces(),r=e.fetch().text);"\\hline"===r||"\\hdashline"===r;)e.consume(),t.push("\\hdashline"===r),e.consumeSpaces(),r=e.fetch().text;return t}var Yr=function(e){if(!e.parser.settings.displayMode)throw new n("{"+e.envName+"} can be used only in display mode.")};function Xr(e){if(-1===e.indexOf("ed"))return-1===e.indexOf("*")}function Wr(e,t,r){var a=t.hskipBeforeAndAfter,i=t.addJot,o=t.cols,s=t.arraystretch,l=t.colSeparationType,h=t.autoTag,c=t.singleRow,m=t.emptySingleRow,u=t.maxNumCols,p=t.leqno;if(e.gullet.beginGroup(),c||e.gullet.macros.set("\\cr","\\\\\\relax"),!s){var d=e.gullet.expandMacroAsText("\\arraystretch");if(null==d)s=1;else if(!(s=parseFloat(d))||s<0)throw new n("Invalid \\arraystretch: "+d)}e.gullet.beginGroup();var f=[],g=[f],v=[],y=[],b=null!=h?[]:void 0;function x(){h&&e.gullet.macros.set("\\@eqnsw","1",!0)}function w(){b&&(e.gullet.macros.get("\\df@tag")?(b.push(e.subparse([new Gr("\\df@tag")])),e.gullet.macros.set("\\df@tag",void 0,!0)):b.push(Boolean(h)&&"1"===e.gullet.macros.get("\\@eqnsw")))}for(x(),y.push(Ur(e));;){var k=e.parseExpression(!1,c?"\\end":"\\\\");e.gullet.endGroup(),e.gullet.beginGroup(),k={type:"ordgroup",mode:e.mode,body:k},r&&(k={type:"styling",mode:e.mode,style:r,body:[k]}),f.push(k);var S=e.fetch().text;if("&"===S){if(u&&f.length===u){if(c||l)throw new n("Too many tab characters: &",e.nextToken);e.settings.reportNonstrict("textEnv","Too few columns specified in the {array} column argument.")}e.consume()}else{if("\\end"===S){w(),1===f.length&&"styling"===k.type&&0===k.body[0].body.length&&(g.length>1||!m)&&g.pop(),y.length<g.length+1&&y.push([]);break}if("\\\\"!==S)throw new n("Expected & or \\\\ or \\cr or \\end",e.nextToken);e.consume();var M=void 0;" "!==e.gullet.future().text&&(M=e.parseSizeGroup(!0)),v.push(M?M.value:null),w(),y.push(Ur(e)),f=[],g.push(f),x()}}return e.gullet.endGroup(),e.gullet.endGroup(),{type:"array",mode:e.mode,addJot:i,arraystretch:s,body:g,cols:o,rowGaps:v,hskipBeforeAndAfter:a,hLinesBeforeRow:y,colSeparationType:l,tags:b,leqno:p}}function _r(e){return"d"===e.slice(0,1)?"display":"text"}var jr=function(e,t){var r,a,i=e.body.length,o=e.hLinesBeforeRow,s=0,h=new Array(i),c=[],m=Math.max(t.fontMetrics().arrayRuleWidth,t.minRuleThickness),u=1/t.fontMetrics().ptPerEm,p=5*u;e.colSeparationType&&"small"===e.colSeparationType&&(p=t.havingStyle(x.SCRIPT).sizeMultiplier/t.sizeMultiplier*.2778);var d="CD"===e.colSeparationType?P({number:3,unit:"ex"},t):12*u,f=3*u,g=e.arraystretch*d,v=.7*g,y=.3*g,b=0;function w(e){for(var t=0;t<e.length;++t)t>0&&(b+=.25),c.push({pos:b,isDashed:e[t]})}for(w(o[0]),r=0;r<e.body.length;++r){var k=e.body[r],S=v,M=y;s<k.length&&(s=k.length);var z=new Array(k.length);for(a=0;a<k.length;++a){var A=wt(k[a],t);M<A.depth&&(M=A.depth),S<A.height&&(S=A.height),z[a]=A}var T=e.rowGaps[r],B=0;T&&(B=P(T,t))>0&&(M<(B+=y)&&(M=B),B=0),e.addJot&&(M+=f),z.height=S,z.depth=M,b+=S,z.pos=b,b+=M+B,h[r]=z,w(o[r+1])}var C,N,q=b/2+t.fontMetrics().axisHeight,I=e.cols||[],R=[],H=[];if(e.tags&&e.tags.some((function(e){return e})))for(r=0;r<i;++r){var O=h[r],E=O.pos-q,L=e.tags[r],D=void 0;(D=!0===L?Ke.makeSpan(["eqn-num"],[],t):!1===L?Ke.makeSpan([],[],t):Ke.makeSpan([],ft(L,t,!0),t)).depth=O.depth,D.height=O.height,H.push({type:"elem",elem:D,shift:E})}for(a=0,N=0;a<s||N<I.length;++a,++N){for(var V=I[N]||{},G=!0;"separator"===V.type;){if(G||((C=Ke.makeSpan(["arraycolsep"],[])).style.width=F(t.fontMetrics().doubleRuleSep),R.push(C)),"|"!==V.separator&&":"!==V.separator)throw new n("Invalid separator type: "+V.separator);var U="|"===V.separator?"solid":"dashed",Y=Ke.makeSpan(["vertical-separator"],[],t);Y.style.height=F(b),Y.style.borderRightWidth=F(m),Y.style.borderRightStyle=U,Y.style.margin="0 "+F(-m/2);var X=b-q;X&&(Y.style.verticalAlign=F(-X)),R.push(Y),V=I[++N]||{},G=!1}if(!(a>=s)){var W=void 0;(a>0||e.hskipBeforeAndAfter)&&0!==(W=l.deflt(V.pregap,p))&&((C=Ke.makeSpan(["arraycolsep"],[])).style.width=F(W),R.push(C));var _=[];for(r=0;r<i;++r){var j=h[r],$=j[a];if($){var Z=j.pos-q;$.depth=j.depth,$.height=j.height,_.push({type:"elem",elem:$,shift:Z})}}_=Ke.makeVList({positionType:"individualShift",children:_},t),_=Ke.makeSpan(["col-align-"+(V.align||"c")],[_]),R.push(_),(a<s-1||e.hskipBeforeAndAfter)&&0!==(W=l.deflt(V.postgap,p))&&((C=Ke.makeSpan(["arraycolsep"],[])).style.width=F(W),R.push(C))}}if(h=Ke.makeSpan(["mtable"],R),c.length>0){for(var K=Ke.makeLineSpan("hline",t,m),J=Ke.makeLineSpan("hdashline",t,m),Q=[{type:"elem",elem:h,shift:0}];c.length>0;){var ee=c.pop(),te=ee.pos-q;ee.isDashed?Q.push({type:"elem",elem:J,shift:te}):Q.push({type:"elem",elem:K,shift:te})}h=Ke.makeVList({positionType:"individualShift",children:Q},t)}if(0===H.length)return Ke.makeSpan(["mord"],[h],t);var re=Ke.makeVList({positionType:"individualShift",children:H},t);return re=Ke.makeSpan(["tag"],[re],t),Ke.makeFragment([h,re])},$r={c:"center ",l:"left ",r:"right "},Zr=function(e,t){for(var r=[],n=new Tt.MathNode("mtd",[],["mtr-glue"]),a=new Tt.MathNode("mtd",[],["mml-eqn-num"]),i=0;i<e.body.length;i++){for(var o=e.body[i],s=[],l=0;l<o.length;l++)s.push(new Tt.MathNode("mtd",[Rt(o[l],t)]));e.tags&&e.tags[i]&&(s.unshift(n),s.push(n),e.leqno?s.unshift(a):s.push(a)),r.push(new Tt.MathNode("mtr",s))}var h=new Tt.MathNode("mtable",r),c=.5===e.arraystretch?.1:.16+e.arraystretch-1+(e.addJot?.09:0);h.setAttribute("rowspacing",F(c));var m="",u="";if(e.cols&&e.cols.length>0){var p=e.cols,d="",f=!1,g=0,v=p.length;"separator"===p[0].type&&(m+="top ",g=1),"separator"===p[p.length-1].type&&(m+="bottom ",v-=1);for(var y=g;y<v;y++)"align"===p[y].type?(u+=$r[p[y].align],f&&(d+="none "),f=!0):"separator"===p[y].type&&f&&(d+="|"===p[y].separator?"solid ":"dashed ",f=!1);h.setAttribute("columnalign",u.trim()),/[sd]/.test(d)&&h.setAttribute("columnlines",d.trim())}if("align"===e.colSeparationType){for(var b=e.cols||[],x="",w=1;w<b.length;w++)x+=w%2?"0em ":"1em ";h.setAttribute("columnspacing",x.trim())}else"alignat"===e.colSeparationType||"gather"===e.colSeparationType?h.setAttribute("columnspacing","0em"):"small"===e.colSeparationType?h.setAttribute("columnspacing","0.2778em"):"CD"===e.colSeparationType?h.setAttribute("columnspacing","0.5em"):h.setAttribute("columnspacing","1em");var k="",S=e.hLinesBeforeRow;m+=S[0].length>0?"left ":"",m+=S[S.length-1].length>0?"right ":"";for(var M=1;M<S.length-1;M++)k+=0===S[M].length?"none ":S[M][0]?"dashed ":"solid ";return/[sd]/.test(k)&&h.setAttribute("rowlines",k.trim()),""!==m&&(h=new Tt.MathNode("menclose",[h])).setAttribute("notation",m.trim()),e.arraystretch&&e.arraystretch<1&&(h=new Tt.MathNode("mstyle",[h])).setAttribute("scriptlevel","1"),h},Kr=function(e,t){-1===e.envName.indexOf("ed")&&Yr(e);var r,a=[],i=e.envName.indexOf("at")>-1?"alignat":"align",o="split"===e.envName,s=Wr(e.parser,{cols:a,addJot:!0,autoTag:o?void 0:Xr(e.envName),emptySingleRow:!0,colSeparationType:i,maxNumCols:o?2:void 0,leqno:e.parser.settings.leqno},"display"),l=0,h={type:"ordgroup",mode:e.mode,body:[]};if(t[0]&&"ordgroup"===t[0].type){for(var c="",m=0;m<t[0].body.length;m++){c+=Ut(t[0].body[m],"textord").text}r=Number(c),l=2*r}var u=!l;s.body.forEach((function(e){for(var t=1;t<e.length;t+=2){var a=Ut(e[t],"styling");Ut(a.body[0],"ordgroup").body.unshift(h)}if(u)l<e.length&&(l=e.length);else{var i=e.length/2;if(r<i)throw new n("Too many math in a row: expected "+r+", but got "+i,e[0])}}));for(var p=0;p<l;++p){var d="r",f=0;p%2==1?d="l":p>0&&u&&(f=1),a[p]={type:"align",align:d,pregap:f,postgap:0}}return s.colSeparationType=u?"align":"alignat",s};Dr({type:"array",names:["array","darray"],props:{numArgs:1},handler:function(e,t){var r=(Xt(t[0])?[t[0]]:Ut(t[0],"ordgroup").body).map((function(e){var t=Yt(e).text;if(-1!=="lcr".indexOf(t))return{type:"align",align:t};if("|"===t)return{type:"separator",separator:"|"};if(":"===t)return{type:"separator",separator:":"};throw new n("Unknown column alignment: "+t,e)})),a={cols:r,hskipBeforeAndAfter:!0,maxNumCols:r.length};return Wr(e.parser,a,_r(e.envName))},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","matrix*","pmatrix*","bmatrix*","Bmatrix*","vmatrix*","Vmatrix*"],props:{numArgs:0},handler:function(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName.replace("*","")],r="c",a={hskipBeforeAndAfter:!1,cols:[{type:"align",align:r}]};if("*"===e.envName.charAt(e.envName.length-1)){var i=e.parser;if(i.consumeSpaces(),"["===i.fetch().text){if(i.consume(),i.consumeSpaces(),r=i.fetch().text,-1==="lcr".indexOf(r))throw new n("Expected l or c or r",i.nextToken);i.consume(),i.consumeSpaces(),i.expect("]"),i.consume(),a.cols=[{type:"align",align:r}]}}var o=Wr(e.parser,a,_r(e.envName)),s=Math.max.apply(Math,[0].concat(o.body.map((function(e){return e.length}))));return o.cols=new Array(s).fill({type:"align",align:r}),t?{type:"leftright",mode:e.mode,body:[o],left:t[0],right:t[1],rightColor:void 0}:o},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["smallmatrix"],props:{numArgs:0},handler:function(e){var t=Wr(e.parser,{arraystretch:.5},"script");return t.colSeparationType="small",t},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["subarray"],props:{numArgs:1},handler:function(e,t){var r=(Xt(t[0])?[t[0]]:Ut(t[0],"ordgroup").body).map((function(e){var t=Yt(e).text;if(-1!=="lc".indexOf(t))return{type:"align",align:t};throw new n("Unknown column alignment: "+t,e)}));if(r.length>1)throw new n("{subarray} can contain only one column");var a={cols:r,hskipBeforeAndAfter:!1,arraystretch:.5};if((a=Wr(e.parser,a,"script")).body.length>0&&a.body[0].length>1)throw new n("{subarray} can contain only one column");return a},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["cases","dcases","rcases","drcases"],props:{numArgs:0},handler:function(e){var t=Wr(e.parser,{arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]},_r(e.envName));return{type:"leftright",mode:e.mode,body:[t],left:e.envName.indexOf("r")>-1?".":"\\{",right:e.envName.indexOf("r")>-1?"\\}":".",rightColor:void 0}},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["align","align*","aligned","split"],props:{numArgs:0},handler:Kr,htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["gathered","gather","gather*"],props:{numArgs:0},handler:function(e){l.contains(["gather","gather*"],e.envName)&&Yr(e);var t={cols:[{type:"align",align:"c"}],addJot:!0,colSeparationType:"gather",autoTag:Xr(e.envName),emptySingleRow:!0,leqno:e.parser.settings.leqno};return Wr(e.parser,t,"display")},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["alignat","alignat*","alignedat"],props:{numArgs:1},handler:Kr,htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["equation","equation*"],props:{numArgs:0},handler:function(e){Yr(e);var t={autoTag:Xr(e.envName),emptySingleRow:!0,singleRow:!0,maxNumCols:1,leqno:e.parser.settings.leqno};return Wr(e.parser,t,"display")},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["CD"],props:{numArgs:0},handler:function(e){return Yr(e),function(e){var t=[];for(e.gullet.beginGroup(),e.gullet.macros.set("\\cr","\\\\\\relax"),e.gullet.beginGroup();;){t.push(e.parseExpression(!1,"\\\\")),e.gullet.endGroup(),e.gullet.beginGroup();var r=e.fetch().text;if("&"!==r&&"\\\\"!==r){if("\\end"===r){0===t[t.length-1].length&&t.pop();break}throw new n("Expected \\\\ or \\cr or \\end",e.nextToken)}e.consume()}for(var a,i,o=[],s=[o],l=0;l<t.length;l++){for(var h=t[l],c={type:"styling",body:[],mode:"math",style:"display"},m=0;m<h.length;m++)if(tr(h[m])){o.push(c);var u=Yt(h[m+=1]).text,p=new Array(2);if(p[0]={type:"ordgroup",mode:"math",body:[]},p[1]={type:"ordgroup",mode:"math",body:[]},"=|.".indexOf(u)>-1);else{if(!("<>AV".indexOf(u)>-1))throw new n('Expected one of "<>AV=|." after @',h[m]);for(var d=0;d<2;d++){for(var f=!0,g=m+1;g<h.length;g++){if(i=u,("mathord"===(a=h[g]).type||"atom"===a.type)&&a.text===i){f=!1,m=g;break}if(tr(h[g]))throw new n("Missing a "+u+" character to complete a CD arrow.",h[g]);p[d].body.push(h[g])}if(f)throw new n("Missing a "+u+" character to complete a CD arrow.",h[m])}}var v={type:"styling",body:[rr(u,p,e)],mode:"math",style:"display"};o.push(v),c={type:"styling",body:[],mode:"math",style:"display"}}else c.body.push(h[m]);l%2==0?o.push(c):o.shift(),o=[],s.push(o)}return e.gullet.endGroup(),e.gullet.endGroup(),{type:"array",mode:"math",body:s,arraystretch:1,addJot:!0,rowGaps:[null],cols:new Array(s[0].length).fill({type:"align",align:"c",pregap:.25,postgap:.25}),colSeparationType:"CD",hLinesBeforeRow:new Array(s.length+1).fill([])}}(e.parser)},htmlBuilder:jr,mathmlBuilder:Zr}),Pr("\\nonumber","\\gdef\\@eqnsw{0}"),Pr("\\notag","\\nonumber"),ot({type:"text",names:["\\hline","\\hdashline"],props:{numArgs:0,allowedInText:!0,allowedInMath:!0},handler:function(e,t){throw new n(e.funcName+" valid only within array environment")}});var Jr=Lr;ot({type:"environment",names:["\\begin","\\end"],props:{numArgs:1,argTypes:["text"]},handler:function(e,t){var r=e.parser,a=e.funcName,i=t[0];if("ordgroup"!==i.type)throw new n("Invalid environment name",i);for(var o="",s=0;s<i.body.length;++s)o+=Ut(i.body[s],"textord").text;if("\\begin"===a){if(!Jr.hasOwnProperty(o))throw new n("No such environment: "+o,i);var l=Jr[o],h=r.parseArguments("\\begin{"+o+"}",l),c=h.args,m=h.optArgs,u={mode:r.mode,envName:o,parser:r},p=l.handler(u,c,m);r.expect("\\end",!1);var d=r.nextToken,f=Ut(r.parseFunction(),"environment");if(f.name!==o)throw new n("Mismatch: \\begin{"+o+"} matched by \\end{"+f.name+"}",d);return p}return{type:"environment",mode:r.mode,name:o,nameGroup:i}}});var Qr=function(e,t){var r=e.font,n=t.withFont(r);return wt(e.body,n)},en=function(e,t){var r=e.font,n=t.withFont(r);return Rt(e.body,n)},tn={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak","\\bm":"\\boldsymbol"};ot({type:"font",names:["\\mathrm","\\mathit","\\mathbf","\\mathnormal","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],props:{numArgs:1,allowedInArgument:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=lt(t[0]),i=n;return i in tn&&(i=tn[i]),{type:"font",mode:r.mode,font:i.slice(1),body:a}},htmlBuilder:Qr,mathmlBuilder:en}),ot({type:"mclass",names:["\\boldsymbol","\\bm"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=t[0],a=l.isCharacterBox(n);return{type:"mclass",mode:r.mode,mclass:Qt(n),body:[{type:"font",mode:r.mode,font:"boldsymbol",body:n}],isCharacterBox:a}}}),ot({type:"font",names:["\\rm","\\sf","\\tt","\\bf","\\it","\\cal"],props:{numArgs:0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=e.breakOnTokenText,i=r.mode,o=r.parseExpression(!0,a);return{type:"font",mode:i,font:"math"+n.slice(1),body:{type:"ordgroup",mode:r.mode,body:o}}},htmlBuilder:Qr,mathmlBuilder:en});var rn=function(e,t){var r=t;return"display"===e?r=r.id>=x.SCRIPT.id?r.text():x.DISPLAY:"text"===e&&r.size===x.DISPLAY.size?r=x.TEXT:"script"===e?r=x.SCRIPT:"scriptscript"===e&&(r=x.SCRIPTSCRIPT),r},nn=function(e,t){var r,n=rn(e.size,t.style),a=n.fracNum(),i=n.fracDen();r=t.havingStyle(a);var o=wt(e.numer,r,t);if(e.continued){var s=8.5/t.fontMetrics().ptPerEm,l=3.5/t.fontMetrics().ptPerEm;o.height=o.height<s?s:o.height,o.depth=o.depth<l?l:o.depth}r=t.havingStyle(i);var h,c,m,u,p,d,f,g,v,y,b=wt(e.denom,r,t);if(e.hasBarLine?(e.barSize?(c=P(e.barSize,t),h=Ke.makeLineSpan("frac-line",t,c)):h=Ke.makeLineSpan("frac-line",t),c=h.height,m=h.height):(h=null,c=0,m=t.fontMetrics().defaultRuleThickness),n.size===x.DISPLAY.size||"display"===e.size?(u=t.fontMetrics().num1,p=c>0?3*m:7*m,d=t.fontMetrics().denom1):(c>0?(u=t.fontMetrics().num2,p=m):(u=t.fontMetrics().num3,p=3*m),d=t.fontMetrics().denom2),h){var w=t.fontMetrics().axisHeight;u-o.depth-(w+.5*c)<p&&(u+=p-(u-o.depth-(w+.5*c))),w-.5*c-(b.height-d)<p&&(d+=p-(w-.5*c-(b.height-d)));var k=-(w-.5*c);f=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:b,shift:d},{type:"elem",elem:h,shift:k},{type:"elem",elem:o,shift:-u}]},t)}else{var S=u-o.depth-(b.height-d);S<p&&(u+=.5*(p-S),d+=.5*(p-S)),f=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:b,shift:d},{type:"elem",elem:o,shift:-u}]},t)}return r=t.havingStyle(n),f.height*=r.sizeMultiplier/t.sizeMultiplier,f.depth*=r.sizeMultiplier/t.sizeMultiplier,g=n.size===x.DISPLAY.size?t.fontMetrics().delim1:n.size===x.SCRIPTSCRIPT.size?t.havingStyle(x.SCRIPT).fontMetrics().delim2:t.fontMetrics().delim2,v=null==e.leftDelim?xt(t,["mopen"]):Nr.customSizedDelim(e.leftDelim,g,!0,t.havingStyle(n),e.mode,["mopen"]),y=e.continued?Ke.makeSpan([]):null==e.rightDelim?xt(t,["mclose"]):Nr.customSizedDelim(e.rightDelim,g,!0,t.havingStyle(n),e.mode,["mclose"]),Ke.makeSpan(["mord"].concat(r.sizingClasses(t)),[v,Ke.makeSpan(["mfrac"],[f]),y],t)},an=function(e,t){var r=new Tt.MathNode("mfrac",[Rt(e.numer,t),Rt(e.denom,t)]);if(e.hasBarLine){if(e.barSize){var n=P(e.barSize,t);r.setAttribute("linethickness",F(n))}}else r.setAttribute("linethickness","0px");var a=rn(e.size,t.style);if(a.size!==t.style.size){r=new Tt.MathNode("mstyle",[r]);var i=a.size===x.DISPLAY.size?"true":"false";r.setAttribute("displaystyle",i),r.setAttribute("scriptlevel","0")}if(null!=e.leftDelim||null!=e.rightDelim){var o=[];if(null!=e.leftDelim){var s=new Tt.MathNode("mo",[new Tt.TextNode(e.leftDelim.replace("\\",""))]);s.setAttribute("fence","true"),o.push(s)}if(o.push(r),null!=e.rightDelim){var l=new Tt.MathNode("mo",[new Tt.TextNode(e.rightDelim.replace("\\",""))]);l.setAttribute("fence","true"),o.push(l)}return Ct(o)}return r};ot({type:"genfrac",names:["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac","\\\\bracefrac","\\\\brackfrac"],props:{numArgs:2,allowedInArgument:!0},handler:function(e,t){var r,n=e.parser,a=e.funcName,i=t[0],o=t[1],s=null,l=null,h="auto";switch(a){case"\\dfrac":case"\\frac":case"\\tfrac":r=!0;break;case"\\\\atopfrac":r=!1;break;case"\\dbinom":case"\\binom":case"\\tbinom":r=!1,s="(",l=")";break;case"\\\\bracefrac":r=!1,s="\\{",l="\\}";break;case"\\\\brackfrac":r=!1,s="[",l="]";break;default:throw new Error("Unrecognized genfrac command")}switch(a){case"\\dfrac":case"\\dbinom":h="display";break;case"\\tfrac":case"\\tbinom":h="text"}return{type:"genfrac",mode:n.mode,continued:!1,numer:i,denom:o,hasBarLine:r,leftDelim:s,rightDelim:l,size:h,barSize:null}},htmlBuilder:nn,mathmlBuilder:an}),ot({type:"genfrac",names:["\\cfrac"],props:{numArgs:2},handler:function(e,t){var r=e.parser,n=(e.funcName,t[0]),a=t[1];return{type:"genfrac",mode:r.mode,continued:!0,numer:n,denom:a,hasBarLine:!0,leftDelim:null,rightDelim:null,size:"display",barSize:null}}}),ot({type:"infix",names:["\\over","\\choose","\\atop","\\brace","\\brack"],props:{numArgs:0,infix:!0},handler:function(e){var t,r=e.parser,n=e.funcName,a=e.token;switch(n){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;case"\\brace":t="\\\\bracefrac";break;case"\\brack":t="\\\\brackfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",mode:r.mode,replaceWith:t,token:a}}});var on=["display","text","script","scriptscript"],sn=function(e){var t=null;return e.length>0&&(t="."===(t=e)?null:t),t};ot({type:"genfrac",names:["\\genfrac"],props:{numArgs:6,allowedInArgument:!0,argTypes:["math","math","size","text","math","math"]},handler:function(e,t){var r,n=e.parser,a=t[4],i=t[5],o=lt(t[0]),s="atom"===o.type&&"open"===o.family?sn(o.text):null,l=lt(t[1]),h="atom"===l.type&&"close"===l.family?sn(l.text):null,c=Ut(t[2],"size"),m=null;r=!!c.isBlank||(m=c.value).number>0;var u="auto",p=t[3];if("ordgroup"===p.type){if(p.body.length>0){var d=Ut(p.body[0],"textord");u=on[Number(d.text)]}}else p=Ut(p,"textord"),u=on[Number(p.text)];return{type:"genfrac",mode:n.mode,numer:a,denom:i,continued:!1,hasBarLine:r,barSize:m,leftDelim:s,rightDelim:h,size:u}},htmlBuilder:nn,mathmlBuilder:an}),ot({type:"infix",names:["\\above"],props:{numArgs:1,argTypes:["size"],infix:!0},handler:function(e,t){var r=e.parser,n=(e.funcName,e.token);return{type:"infix",mode:r.mode,replaceWith:"\\\\abovefrac",size:Ut(t[0],"size").value,token:n}}}),ot({type:"genfrac",names:["\\\\abovefrac"],props:{numArgs:3,argTypes:["math","size","math"]},handler:function(e,t){var r=e.parser,n=(e.funcName,t[0]),a=function(e){if(!e)throw new Error("Expected non-null, but got "+String(e));return e}(Ut(t[1],"infix").size),i=t[2],o=a.number>0;return{type:"genfrac",mode:r.mode,numer:n,denom:i,continued:!1,hasBarLine:o,barSize:a,leftDelim:null,rightDelim:null,size:"auto"}},htmlBuilder:nn,mathmlBuilder:an});var ln=function(e,t){var r,n,a=t.style;"supsub"===e.type?(r=e.sup?wt(e.sup,t.havingStyle(a.sup()),t):wt(e.sub,t.havingStyle(a.sub()),t),n=Ut(e.base,"horizBrace")):n=Ut(e,"horizBrace");var i,o=wt(n.base,t.havingBaseStyle(x.DISPLAY)),s=Gt(n,t);if(n.isOver?(i=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:s}]},t)).children[0].children[0].children[1].classes.push("svg-align"):(i=Ke.makeVList({positionType:"bottom",positionData:o.depth+.1+s.height,children:[{type:"elem",elem:s},{type:"kern",size:.1},{type:"elem",elem:o}]},t)).children[0].children[0].children[0].classes.push("svg-align"),r){var l=Ke.makeSpan(["mord",n.isOver?"mover":"munder"],[i],t);i=n.isOver?Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:l},{type:"kern",size:.2},{type:"elem",elem:r}]},t):Ke.makeVList({positionType:"bottom",positionData:l.depth+.2+r.height+r.depth,children:[{type:"elem",elem:r},{type:"kern",size:.2},{type:"elem",elem:l}]},t)}return Ke.makeSpan(["mord",n.isOver?"mover":"munder"],[i],t)};ot({type:"horizBrace",names:["\\overbrace","\\underbrace"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName;return{type:"horizBrace",mode:r.mode,label:n,isOver:/^\\over/.test(n),base:t[0]}},htmlBuilder:ln,mathmlBuilder:function(e,t){var r=Ft(e.label);return new Tt.MathNode(e.isOver?"mover":"munder",[Rt(e.base,t),r])}}),ot({type:"href",names:["\\href"],props:{numArgs:2,argTypes:["url","original"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[1],a=Ut(t[0],"url").url;return r.settings.isTrusted({command:"\\href",url:a})?{type:"href",mode:r.mode,href:a,body:ht(n)}:r.formatUnsupportedCmd("\\href")},htmlBuilder:function(e,t){var r=ft(e.body,t,!1);return Ke.makeAnchor(e.href,[],r,t)},mathmlBuilder:function(e,t){var r=It(e.body,t);return r instanceof zt||(r=new zt("mrow",[r])),r.setAttribute("href",e.href),r}}),ot({type:"href",names:["\\url"],props:{numArgs:1,argTypes:["url"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=Ut(t[0],"url").url;if(!r.settings.isTrusted({command:"\\url",url:n}))return r.formatUnsupportedCmd("\\url");for(var a=[],i=0;i<n.length;i++){var o=n[i];"~"===o&&(o="\\textasciitilde"),a.push({type:"textord",mode:"text",text:o})}var s={type:"text",mode:r.mode,font:"\\texttt",body:a};return{type:"href",mode:r.mode,href:n,body:ht(s)}}}),ot({type:"hbox",names:["\\hbox"],props:{numArgs:1,argTypes:["text"],allowedInText:!0,primitive:!0},handler:function(e,t){return{type:"hbox",mode:e.parser.mode,body:ht(t[0])}},htmlBuilder:function(e,t){var r=ft(e.body,t,!1);return Ke.makeFragment(r)},mathmlBuilder:function(e,t){return new Tt.MathNode("mrow",qt(e.body,t))}}),ot({type:"html",names:["\\htmlClass","\\htmlId","\\htmlStyle","\\htmlData"],props:{numArgs:2,argTypes:["raw","original"],allowedInText:!0},handler:function(e,t){var r,a=e.parser,i=e.funcName,o=(e.token,Ut(t[0],"raw").string),s=t[1];a.settings.strict&&a.settings.reportNonstrict("htmlExtension","HTML extension is disabled on strict mode");var l={};switch(i){case"\\htmlClass":l.class=o,r={command:"\\htmlClass",class:o};break;case"\\htmlId":l.id=o,r={command:"\\htmlId",id:o};break;case"\\htmlStyle":l.style=o,r={command:"\\htmlStyle",style:o};break;case"\\htmlData":for(var h=o.split(","),c=0;c<h.length;c++){var m=h[c].split("=");if(2!==m.length)throw new n("Error parsing key-value for \\htmlData");l["data-"+m[0].trim()]=m[1].trim()}r={command:"\\htmlData",attributes:l};break;default:throw new Error("Unrecognized html command")}return a.settings.isTrusted(r)?{type:"html",mode:a.mode,attributes:l,body:ht(s)}:a.formatUnsupportedCmd(i)},htmlBuilder:function(e,t){var r=ft(e.body,t,!1),n=["enclosing"];e.attributes.class&&n.push.apply(n,e.attributes.class.trim().split(/\s+/));var a=Ke.makeSpan(n,r,t);for(var i in e.attributes)"class"!==i&&e.attributes.hasOwnProperty(i)&&a.setAttribute(i,e.attributes[i]);return a},mathmlBuilder:function(e,t){return It(e.body,t)}}),ot({type:"htmlmathml",names:["\\html@mathml"],props:{numArgs:2,allowedInText:!0},handler:function(e,t){return{type:"htmlmathml",mode:e.parser.mode,html:ht(t[0]),mathml:ht(t[1])}},htmlBuilder:function(e,t){var r=ft(e.html,t,!1);return Ke.makeFragment(r)},mathmlBuilder:function(e,t){return It(e.mathml,t)}});var hn=function(e){if(/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(e))return{number:+e,unit:"bp"};var t=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(e);if(!t)throw new n("Invalid size: '"+e+"' in \\includegraphics");var r={number:+(t[1]+t[2]),unit:t[3]};if(!V(r))throw new n("Invalid unit: '"+r.unit+"' in \\includegraphics.");return r};ot({type:"includegraphics",names:["\\includegraphics"],props:{numArgs:1,numOptionalArgs:1,argTypes:["raw","url"],allowedInText:!1},handler:function(e,t,r){var a=e.parser,i={number:0,unit:"em"},o={number:.9,unit:"em"},s={number:0,unit:"em"},l="";if(r[0])for(var h=Ut(r[0],"raw").string.split(","),c=0;c<h.length;c++){var m=h[c].split("=");if(2===m.length){var u=m[1].trim();switch(m[0].trim()){case"alt":l=u;break;case"width":i=hn(u);break;case"height":o=hn(u);break;case"totalheight":s=hn(u);break;default:throw new n("Invalid key: '"+m[0]+"' in \\includegraphics.")}}}var p=Ut(t[0],"url").url;return""===l&&(l=(l=(l=p).replace(/^.*[\\/]/,"")).substring(0,l.lastIndexOf("."))),a.settings.isTrusted({command:"\\includegraphics",url:p})?{type:"includegraphics",mode:a.mode,alt:l,width:i,height:o,totalheight:s,src:p}:a.formatUnsupportedCmd("\\includegraphics")},htmlBuilder:function(e,t){var r=P(e.height,t),n=0;e.totalheight.number>0&&(n=P(e.totalheight,t)-r);var a=0;e.width.number>0&&(a=P(e.width,t));var i={height:F(r+n)};a>0&&(i.width=F(a)),n>0&&(i.verticalAlign=F(-n));var o=new j(e.src,e.alt,i);return o.height=r,o.depth=n,o},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mglyph",[]);r.setAttribute("alt",e.alt);var n=P(e.height,t),a=0;if(e.totalheight.number>0&&(a=P(e.totalheight,t)-n,r.setAttribute("valign",F(-a))),r.setAttribute("height",F(n+a)),e.width.number>0){var i=P(e.width,t);r.setAttribute("width",F(i))}return r.setAttribute("src",e.src),r}}),ot({type:"kern",names:["\\kern","\\mkern","\\hskip","\\mskip"],props:{numArgs:1,argTypes:["size"],primitive:!0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=Ut(t[0],"size");if(r.settings.strict){var i="m"===n[1],o="mu"===a.value.unit;i?(o||r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" supports only mu units, not "+a.value.unit+" units"),"math"!==r.mode&&r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" works only in math mode")):o&&r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" doesn't support mu units")}return{type:"kern",mode:r.mode,dimension:a.value}},htmlBuilder:function(e,t){return Ke.makeGlue(e.dimension,t)},mathmlBuilder:function(e,t){var r=P(e.dimension,t);return new Tt.SpaceNode(r)}}),ot({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"lap",mode:r.mode,alignment:n.slice(5),body:a}},htmlBuilder:function(e,t){var r;"clap"===e.alignment?(r=Ke.makeSpan([],[wt(e.body,t)]),r=Ke.makeSpan(["inner"],[r],t)):r=Ke.makeSpan(["inner"],[wt(e.body,t)]);var n=Ke.makeSpan(["fix"],[]),a=Ke.makeSpan([e.alignment],[r,n],t),i=Ke.makeSpan(["strut"]);return i.style.height=F(a.height+a.depth),a.depth&&(i.style.verticalAlign=F(-a.depth)),a.children.unshift(i),a=Ke.makeSpan(["thinbox"],[a],t),Ke.makeSpan(["mord","vbox"],[a],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mpadded",[Rt(e.body,t)]);if("rlap"!==e.alignment){var n="llap"===e.alignment?"-1":"-0.5";r.setAttribute("lspace",n+"width")}return r.setAttribute("width","0px"),r}}),ot({type:"styling",names:["\\(","$"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(e,t){var r=e.funcName,n=e.parser,a=n.mode;n.switchMode("math");var i="\\("===r?"\\)":"$",o=n.parseExpression(!1,i);return n.expect(i),n.switchMode(a),{type:"styling",mode:n.mode,style:"text",body:o}}}),ot({type:"text",names:["\\)","\\]"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(e,t){throw new n("Mismatched "+e.funcName)}});var cn=function(e,t){switch(t.style.size){case x.DISPLAY.size:return e.display;case x.TEXT.size:return e.text;case x.SCRIPT.size:return e.script;case x.SCRIPTSCRIPT.size:return e.scriptscript;default:return e.text}};ot({type:"mathchoice",names:["\\mathchoice"],props:{numArgs:4,primitive:!0},handler:function(e,t){return{type:"mathchoice",mode:e.parser.mode,display:ht(t[0]),text:ht(t[1]),script:ht(t[2]),scriptscript:ht(t[3])}},htmlBuilder:function(e,t){var r=cn(e,t),n=ft(r,t,!1);return Ke.makeFragment(n)},mathmlBuilder:function(e,t){var r=cn(e,t);return It(r,t)}});var mn=function(e,t,r,n,a,i,o){e=Ke.makeSpan([],[e]);var s,h,c,m=r&&l.isCharacterBox(r);if(t){var u=wt(t,n.havingStyle(a.sup()),n);h={elem:u,kern:Math.max(n.fontMetrics().bigOpSpacing1,n.fontMetrics().bigOpSpacing3-u.depth)}}if(r){var p=wt(r,n.havingStyle(a.sub()),n);s={elem:p,kern:Math.max(n.fontMetrics().bigOpSpacing2,n.fontMetrics().bigOpSpacing4-p.height)}}if(h&&s){var d=n.fontMetrics().bigOpSpacing5+s.elem.height+s.elem.depth+s.kern+e.depth+o;c=Ke.makeVList({positionType:"bottom",positionData:d,children:[{type:"kern",size:n.fontMetrics().bigOpSpacing5},{type:"elem",elem:s.elem,marginLeft:F(-i)},{type:"kern",size:s.kern},{type:"elem",elem:e},{type:"kern",size:h.kern},{type:"elem",elem:h.elem,marginLeft:F(i)},{type:"kern",size:n.fontMetrics().bigOpSpacing5}]},n)}else if(s){var f=e.height-o;c=Ke.makeVList({positionType:"top",positionData:f,children:[{type:"kern",size:n.fontMetrics().bigOpSpacing5},{type:"elem",elem:s.elem,marginLeft:F(-i)},{type:"kern",size:s.kern},{type:"elem",elem:e}]},n)}else{if(!h)return e;var g=e.depth+o;c=Ke.makeVList({positionType:"bottom",positionData:g,children:[{type:"elem",elem:e},{type:"kern",size:h.kern},{type:"elem",elem:h.elem,marginLeft:F(i)},{type:"kern",size:n.fontMetrics().bigOpSpacing5}]},n)}var v=[c];if(s&&0!==i&&!m){var y=Ke.makeSpan(["mspace"],[],n);y.style.marginRight=F(i),v.unshift(y)}return Ke.makeSpan(["mop","op-limits"],v,n)},un=["\\smallint"],pn=function(e,t){var r,n,a,i=!1;"supsub"===e.type?(r=e.sup,n=e.sub,a=Ut(e.base,"op"),i=!0):a=Ut(e,"op");var o,s=t.style,h=!1;if(s.size===x.DISPLAY.size&&a.symbol&&!l.contains(un,a.name)&&(h=!0),a.symbol){var c=h?"Size2-Regular":"Size1-Regular",m="";if("\\oiint"!==a.name&&"\\oiiint"!==a.name||(m=a.name.slice(1),a.name="oiint"===m?"\\iint":"\\iiint"),o=Ke.makeSymbol(a.name,c,"math",t,["mop","op-symbol",h?"large-op":"small-op"]),m.length>0){var u=o.italic,p=Ke.staticSvg(m+"Size"+(h?"2":"1"),t);o=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:o,shift:0},{type:"elem",elem:p,shift:h?.08:0}]},t),a.name="\\"+m,o.classes.unshift("mop"),o.italic=u}}else if(a.body){var d=ft(a.body,t,!0);1===d.length&&d[0]instanceof Z?(o=d[0]).classes[0]="mop":o=Ke.makeSpan(["mop"],d,t)}else{for(var f=[],g=1;g<a.name.length;g++)f.push(Ke.mathsym(a.name[g],a.mode,t));o=Ke.makeSpan(["mop"],f,t)}var v=0,y=0;return(o instanceof Z||"\\oiint"===a.name||"\\oiiint"===a.name)&&!a.suppressBaseShift&&(v=(o.height-o.depth)/2-t.fontMetrics().axisHeight,y=o.italic),i?mn(o,r,n,t,s,y,v):(v&&(o.style.position="relative",o.style.top=F(v)),o)},dn=function(e,t){var r;if(e.symbol)r=new zt("mo",[Bt(e.name,e.mode)]),l.contains(un,e.name)&&r.setAttribute("largeop","false");else if(e.body)r=new zt("mo",qt(e.body,t));else{r=new zt("mi",[new At(e.name.slice(1))]);var n=new zt("mo",[Bt("\u2061","text")]);r=e.parentIsSupSub?new zt("mrow",[r,n]):Mt([r,n])}return r},fn={"\u220f":"\\prod","\u2210":"\\coprod","\u2211":"\\sum","\u22c0":"\\bigwedge","\u22c1":"\\bigvee","\u22c2":"\\bigcap","\u22c3":"\\bigcup","\u2a00":"\\bigodot","\u2a01":"\\bigoplus","\u2a02":"\\bigotimes","\u2a04":"\\biguplus","\u2a06":"\\bigsqcup"};ot({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint","\u220f","\u2210","\u2211","\u22c0","\u22c1","\u22c2","\u22c3","\u2a00","\u2a01","\u2a02","\u2a04","\u2a06"],props:{numArgs:0},handler:function(e,t){var r=e.parser,n=e.funcName;return 1===n.length&&(n=fn[n]),{type:"op",mode:r.mode,limits:!0,parentIsSupSub:!1,symbol:!0,name:n}},htmlBuilder:pn,mathmlBuilder:dn}),ot({type:"op",names:["\\mathop"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"op",mode:r.mode,limits:!1,parentIsSupSub:!1,symbol:!1,body:ht(n)}},htmlBuilder:pn,mathmlBuilder:dn});var gn={"\u222b":"\\int","\u222c":"\\iint","\u222d":"\\iiint","\u222e":"\\oint","\u222f":"\\oiint","\u2230":"\\oiiint"};ot({type:"op",names:["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return{type:"op",mode:t.mode,limits:!1,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:pn,mathmlBuilder:dn}),ot({type:"op",names:["\\det","\\gcd","\\inf","\\lim","\\max","\\min","\\Pr","\\sup"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return{type:"op",mode:t.mode,limits:!0,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:pn,mathmlBuilder:dn}),ot({type:"op",names:["\\int","\\iint","\\iiint","\\oint","\\oiint","\\oiiint","\u222b","\u222c","\u222d","\u222e","\u222f","\u2230"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return 1===r.length&&(r=gn[r]),{type:"op",mode:t.mode,limits:!1,parentIsSupSub:!1,symbol:!0,name:r}},htmlBuilder:pn,mathmlBuilder:dn});var vn=function(e,t){var r,n,a,i,o=!1;if("supsub"===e.type?(r=e.sup,n=e.sub,a=Ut(e.base,"operatorname"),o=!0):a=Ut(e,"operatorname"),a.body.length>0){for(var s=a.body.map((function(e){var t=e.text;return"string"==typeof t?{type:"textord",mode:e.mode,text:t}:e})),l=ft(s,t.withFont("mathrm"),!0),h=0;h<l.length;h++){var c=l[h];c instanceof Z&&(c.text=c.text.replace(/\u2212/,"-").replace(/\u2217/,"*"))}i=Ke.makeSpan(["mop"],l,t)}else i=Ke.makeSpan(["mop"],[],t);return o?mn(i,r,n,t,t.style,0,0):i};function yn(e,t,r){for(var n=ft(e,t,!1),a=t.sizeMultiplier/r.sizeMultiplier,i=0;i<n.length;i++){var o=n[i].classes.indexOf("sizing");o<0?Array.prototype.push.apply(n[i].classes,t.sizingClasses(r)):n[i].classes[o+1]==="reset-size"+t.size&&(n[i].classes[o+1]="reset-size"+r.size),n[i].height*=a,n[i].depth*=a}return Ke.makeFragment(n)}ot({type:"operatorname",names:["\\operatorname@","\\operatornamewithlimits"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"operatorname",mode:r.mode,body:ht(a),alwaysHandleSupSub:"\\operatornamewithlimits"===n,limits:!1,parentIsSupSub:!1}},htmlBuilder:vn,mathmlBuilder:function(e,t){for(var r=qt(e.body,t.withFont("mathrm")),n=!0,a=0;a<r.length;a++){var i=r[a];if(i instanceof Tt.SpaceNode);else if(i instanceof Tt.MathNode)switch(i.type){case"mi":case"mn":case"ms":case"mspace":case"mtext":break;case"mo":var o=i.children[0];1===i.children.length&&o instanceof Tt.TextNode?o.text=o.text.replace(/\u2212/,"-").replace(/\u2217/,"*"):n=!1;break;default:n=!1}else n=!1}if(n){var s=r.map((function(e){return e.toText()})).join("");r=[new Tt.TextNode(s)]}var l=new Tt.MathNode("mi",r);l.setAttribute("mathvariant","normal");var h=new Tt.MathNode("mo",[Bt("\u2061","text")]);return e.parentIsSupSub?new Tt.MathNode("mrow",[l,h]):Tt.newDocumentFragment([l,h])}}),Pr("\\operatorname","\\@ifstar\\operatornamewithlimits\\operatorname@"),st({type:"ordgroup",htmlBuilder:function(e,t){return e.semisimple?Ke.makeFragment(ft(e.body,t,!1)):Ke.makeSpan(["mord"],ft(e.body,t,!0),t)},mathmlBuilder:function(e,t){return It(e.body,t,!0)}}),ot({type:"overline",names:["\\overline"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=t[0];return{type:"overline",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=wt(e.body,t.havingCrampedStyle()),n=Ke.makeLineSpan("overline-line",t),a=t.fontMetrics().defaultRuleThickness,i=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:3*a},{type:"elem",elem:n},{type:"kern",size:a}]},t);return Ke.makeSpan(["mord","overline"],[i],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mo",[new Tt.TextNode("\u203e")]);r.setAttribute("stretchy","true");var n=new Tt.MathNode("mover",[Rt(e.body,t),r]);return n.setAttribute("accent","true"),n}}),ot({type:"phantom",names:["\\phantom"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"phantom",mode:r.mode,body:ht(n)}},htmlBuilder:function(e,t){var r=ft(e.body,t.withPhantom(),!1);return Ke.makeFragment(r)},mathmlBuilder:function(e,t){var r=qt(e.body,t);return new Tt.MathNode("mphantom",r)}}),ot({type:"hphantom",names:["\\hphantom"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"hphantom",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=Ke.makeSpan([],[wt(e.body,t.withPhantom())]);if(r.height=0,r.depth=0,r.children)for(var n=0;n<r.children.length;n++)r.children[n].height=0,r.children[n].depth=0;return r=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},t),Ke.makeSpan(["mord"],[r],t)},mathmlBuilder:function(e,t){var r=qt(ht(e.body),t),n=new Tt.MathNode("mphantom",r),a=new Tt.MathNode("mpadded",[n]);return a.setAttribute("height","0px"),a.setAttribute("depth","0px"),a}}),ot({type:"vphantom",names:["\\vphantom"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"vphantom",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=Ke.makeSpan(["inner"],[wt(e.body,t.withPhantom())]),n=Ke.makeSpan(["fix"],[]);return Ke.makeSpan(["mord","rlap"],[r,n],t)},mathmlBuilder:function(e,t){var r=qt(ht(e.body),t),n=new Tt.MathNode("mphantom",r),a=new Tt.MathNode("mpadded",[n]);return a.setAttribute("width","0px"),a}}),ot({type:"raisebox",names:["\\raisebox"],props:{numArgs:2,argTypes:["size","hbox"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=Ut(t[0],"size").value,a=t[1];return{type:"raisebox",mode:r.mode,dy:n,body:a}},htmlBuilder:function(e,t){var r=wt(e.body,t),n=P(e.dy,t);return Ke.makeVList({positionType:"shift",positionData:-n,children:[{type:"elem",elem:r}]},t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mpadded",[Rt(e.body,t)]),n=e.dy.number+e.dy.unit;return r.setAttribute("voffset",n),r}}),ot({type:"internal",names:["\\relax"],props:{numArgs:0,allowedInText:!0},handler:function(e){return{type:"internal",mode:e.parser.mode}}}),ot({type:"rule",names:["\\rule"],props:{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},handler:function(e,t,r){var n=e.parser,a=r[0],i=Ut(t[0],"size"),o=Ut(t[1],"size");return{type:"rule",mode:n.mode,shift:a&&Ut(a,"size").value,width:i.value,height:o.value}},htmlBuilder:function(e,t){var r=Ke.makeSpan(["mord","rule"],[],t),n=P(e.width,t),a=P(e.height,t),i=e.shift?P(e.shift,t):0;return r.style.borderRightWidth=F(n),r.style.borderTopWidth=F(a),r.style.bottom=F(i),r.width=n,r.height=a+i,r.depth=-i,r.maxFontSize=1.125*a*t.sizeMultiplier,r},mathmlBuilder:function(e,t){var r=P(e.width,t),n=P(e.height,t),a=e.shift?P(e.shift,t):0,i=t.color&&t.getColor()||"black",o=new Tt.MathNode("mspace");o.setAttribute("mathbackground",i),o.setAttribute("width",F(r)),o.setAttribute("height",F(n));var s=new Tt.MathNode("mpadded",[o]);return a>=0?s.setAttribute("height",F(a)):(s.setAttribute("height",F(a)),s.setAttribute("depth",F(-a))),s.setAttribute("voffset",F(a)),s}});var bn=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];ot({type:"sizing",names:bn,props:{numArgs:0,allowedInText:!0},handler:function(e,t){var r=e.breakOnTokenText,n=e.funcName,a=e.parser,i=a.parseExpression(!1,r);return{type:"sizing",mode:a.mode,size:bn.indexOf(n)+1,body:i}},htmlBuilder:function(e,t){var r=t.havingSize(e.size);return yn(e.body,r,t)},mathmlBuilder:function(e,t){var r=t.havingSize(e.size),n=qt(e.body,r),a=new Tt.MathNode("mstyle",n);return a.setAttribute("mathsize",F(r.sizeMultiplier)),a}}),ot({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:!0},handler:function(e,t,r){var n=e.parser,a=!1,i=!1,o=r[0]&&Ut(r[0],"ordgroup");if(o)for(var s="",l=0;l<o.body.length;++l){if("t"===(s=o.body[l].text))a=!0;else{if("b"!==s){a=!1,i=!1;break}i=!0}}else a=!0,i=!0;var h=t[0];return{type:"smash",mode:n.mode,body:h,smashHeight:a,smashDepth:i}},htmlBuilder:function(e,t){var r=Ke.makeSpan([],[wt(e.body,t)]);if(!e.smashHeight&&!e.smashDepth)return r;if(e.smashHeight&&(r.height=0,r.children))for(var n=0;n<r.children.length;n++)r.children[n].height=0;if(e.smashDepth&&(r.depth=0,r.children))for(var a=0;a<r.children.length;a++)r.children[a].depth=0;var i=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},t);return Ke.makeSpan(["mord"],[i],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mpadded",[Rt(e.body,t)]);return e.smashHeight&&r.setAttribute("height","0px"),e.smashDepth&&r.setAttribute("depth","0px"),r}}),ot({type:"sqrt",names:["\\sqrt"],props:{numArgs:1,numOptionalArgs:1},handler:function(e,t,r){var n=e.parser,a=r[0],i=t[0];return{type:"sqrt",mode:n.mode,body:i,index:a}},htmlBuilder:function(e,t){var r=wt(e.body,t.havingCrampedStyle());0===r.height&&(r.height=t.fontMetrics().xHeight),r=Ke.wrapFragment(r,t);var n=t.fontMetrics().defaultRuleThickness,a=n;t.style.id<x.TEXT.id&&(a=t.fontMetrics().xHeight);var i=n+a/4,o=r.height+r.depth+i+n,s=Nr.sqrtImage(o,t),l=s.span,h=s.ruleWidth,c=s.advanceWidth,m=l.height-h;m>r.height+r.depth+i&&(i=(i+m-r.height-r.depth)/2);var u=l.height-r.height-i-h;r.style.paddingLeft=F(c);var p=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r,wrapperClasses:["svg-align"]},{type:"kern",size:-(r.height+u)},{type:"elem",elem:l},{type:"kern",size:h}]},t);if(e.index){var d=t.havingStyle(x.SCRIPTSCRIPT),f=wt(e.index,d,t),g=.6*(p.height-p.depth),v=Ke.makeVList({positionType:"shift",positionData:-g,children:[{type:"elem",elem:f}]},t),y=Ke.makeSpan(["root"],[v]);return Ke.makeSpan(["mord","sqrt"],[y,p],t)}return Ke.makeSpan(["mord","sqrt"],[p],t)},mathmlBuilder:function(e,t){var r=e.body,n=e.index;return n?new Tt.MathNode("mroot",[Rt(r,t),Rt(n,t)]):new Tt.MathNode("msqrt",[Rt(r,t)])}});var xn={display:x.DISPLAY,text:x.TEXT,script:x.SCRIPT,scriptscript:x.SCRIPTSCRIPT};ot({type:"styling",names:["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e,t){var r=e.breakOnTokenText,n=e.funcName,a=e.parser,i=a.parseExpression(!0,r),o=n.slice(1,n.length-5);return{type:"styling",mode:a.mode,style:o,body:i}},htmlBuilder:function(e,t){var r=xn[e.style],n=t.havingStyle(r).withFont("");return yn(e.body,n,t)},mathmlBuilder:function(e,t){var r=xn[e.style],n=t.havingStyle(r),a=qt(e.body,n),i=new Tt.MathNode("mstyle",a),o={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]}[e.style];return i.setAttribute("scriptlevel",o[0]),i.setAttribute("displaystyle",o[1]),i}});var wn=function(e,t){var r=e.base;return r?"op"===r.type?r.limits&&(t.style.size===x.DISPLAY.size||r.alwaysHandleSupSub)?pn:null:"operatorname"===r.type?r.alwaysHandleSupSub&&(t.style.size===x.DISPLAY.size||r.limits)?vn:null:"accent"===r.type?l.isCharacterBox(r.base)?Wt:null:"horizBrace"===r.type&&!e.sub===r.isOver?ln:null:null};st({type:"supsub",htmlBuilder:function(e,t){var r=wn(e,t);if(r)return r(e,t);var n,a,i,o=e.base,s=e.sup,h=e.sub,c=wt(o,t),m=t.fontMetrics(),u=0,p=0,d=o&&l.isCharacterBox(o);if(s){var f=t.havingStyle(t.style.sup());n=wt(s,f,t),d||(u=c.height-f.fontMetrics().supDrop*f.sizeMultiplier/t.sizeMultiplier)}if(h){var g=t.havingStyle(t.style.sub());a=wt(h,g,t),d||(p=c.depth+g.fontMetrics().subDrop*g.sizeMultiplier/t.sizeMultiplier)}i=t.style===x.DISPLAY?m.sup1:t.style.cramped?m.sup3:m.sup2;var v,y=t.sizeMultiplier,b=F(.5/m.ptPerEm/y),w=null;if(a){var k=e.base&&"op"===e.base.type&&e.base.name&&("\\oiint"===e.base.name||"\\oiiint"===e.base.name);(c instanceof Z||k)&&(w=F(-c.italic))}if(n&&a){u=Math.max(u,i,n.depth+.25*m.xHeight),p=Math.max(p,m.sub2);var S=4*m.defaultRuleThickness;if(u-n.depth-(a.height-p)<S){p=S-(u-n.depth)+a.height;var M=.8*m.xHeight-(u-n.depth);M>0&&(u+=M,p-=M)}var z=[{type:"elem",elem:a,shift:p,marginRight:b,marginLeft:w},{type:"elem",elem:n,shift:-u,marginRight:b}];v=Ke.makeVList({positionType:"individualShift",children:z},t)}else if(a){p=Math.max(p,m.sub1,a.height-.8*m.xHeight);var A=[{type:"elem",elem:a,marginLeft:w,marginRight:b}];v=Ke.makeVList({positionType:"shift",positionData:p,children:A},t)}else{if(!n)throw new Error("supsub must have either sup or sub.");u=Math.max(u,i,n.depth+.25*m.xHeight),v=Ke.makeVList({positionType:"shift",positionData:-u,children:[{type:"elem",elem:n,marginRight:b}]},t)}var T=bt(c,"right")||"mord";return Ke.makeSpan([T],[c,Ke.makeSpan(["msupsub"],[v])],t)},mathmlBuilder:function(e,t){var r,n=!1;e.base&&"horizBrace"===e.base.type&&!!e.sup===e.base.isOver&&(n=!0,r=e.base.isOver),!e.base||"op"!==e.base.type&&"operatorname"!==e.base.type||(e.base.parentIsSupSub=!0);var a,i=[Rt(e.base,t)];if(e.sub&&i.push(Rt(e.sub,t)),e.sup&&i.push(Rt(e.sup,t)),n)a=r?"mover":"munder";else if(e.sub)if(e.sup){var o=e.base;a=o&&"op"===o.type&&o.limits&&t.style===x.DISPLAY||o&&"operatorname"===o.type&&o.alwaysHandleSupSub&&(t.style===x.DISPLAY||o.limits)?"munderover":"msubsup"}else{var s=e.base;a=s&&"op"===s.type&&s.limits&&(t.style===x.DISPLAY||s.alwaysHandleSupSub)||s&&"operatorname"===s.type&&s.alwaysHandleSupSub&&(s.limits||t.style===x.DISPLAY)?"munder":"msub"}else{var l=e.base;a=l&&"op"===l.type&&l.limits&&(t.style===x.DISPLAY||l.alwaysHandleSupSub)||l&&"operatorname"===l.type&&l.alwaysHandleSupSub&&(l.limits||t.style===x.DISPLAY)?"mover":"msup"}return new Tt.MathNode(a,i)}}),st({type:"atom",htmlBuilder:function(e,t){return Ke.mathsym(e.text,e.mode,t,["m"+e.family])},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mo",[Bt(e.text,e.mode)]);if("bin"===e.family){var n=Nt(e,t);"bold-italic"===n&&r.setAttribute("mathvariant",n)}else"punct"===e.family?r.setAttribute("separator","true"):"open"!==e.family&&"close"!==e.family||r.setAttribute("stretchy","false");return r}});var kn={mi:"italic",mn:"normal",mtext:"normal"};st({type:"mathord",htmlBuilder:function(e,t){return Ke.makeOrd(e,t,"mathord")},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mi",[Bt(e.text,e.mode,t)]),n=Nt(e,t)||"italic";return n!==kn[r.type]&&r.setAttribute("mathvariant",n),r}}),st({type:"textord",htmlBuilder:function(e,t){return Ke.makeOrd(e,t,"textord")},mathmlBuilder:function(e,t){var r,n=Bt(e.text,e.mode,t),a=Nt(e,t)||"normal";return r="text"===e.mode?new Tt.MathNode("mtext",[n]):/[0-9]/.test(e.text)?new Tt.MathNode("mn",[n]):"\\prime"===e.text?new Tt.MathNode("mo",[n]):new Tt.MathNode("mi",[n]),a!==kn[r.type]&&r.setAttribute("mathvariant",a),r}});var Sn={"\\nobreak":"nobreak","\\allowbreak":"allowbreak"},Mn={" ":{},"\\ ":{},"~":{className:"nobreak"},"\\space":{},"\\nobreakspace":{className:"nobreak"}};st({type:"spacing",htmlBuilder:function(e,t){if(Mn.hasOwnProperty(e.text)){var r=Mn[e.text].className||"";if("text"===e.mode){var a=Ke.makeOrd(e,t,"textord");return a.classes.push(r),a}return Ke.makeSpan(["mspace",r],[Ke.mathsym(e.text,e.mode,t)],t)}if(Sn.hasOwnProperty(e.text))return Ke.makeSpan(["mspace",Sn[e.text]],[],t);throw new n('Unknown type of space "'+e.text+'"')},mathmlBuilder:function(e,t){if(!Mn.hasOwnProperty(e.text)){if(Sn.hasOwnProperty(e.text))return new Tt.MathNode("mspace");throw new n('Unknown type of space "'+e.text+'"')}return new Tt.MathNode("mtext",[new Tt.TextNode("\xa0")])}});var zn=function(){var e=new Tt.MathNode("mtd",[]);return e.setAttribute("width","50%"),e};st({type:"tag",mathmlBuilder:function(e,t){var r=new Tt.MathNode("mtable",[new Tt.MathNode("mtr",[zn(),new Tt.MathNode("mtd",[It(e.body,t)]),zn(),new Tt.MathNode("mtd",[It(e.tag,t)])])]);return r.setAttribute("width","100%"),r}});var An={"\\text":void 0,"\\textrm":"textrm","\\textsf":"textsf","\\texttt":"texttt","\\textnormal":"textrm"},Tn={"\\textbf":"textbf","\\textmd":"textmd"},Bn={"\\textit":"textit","\\textup":"textup"},Cn=function(e,t){var r=e.font;return r?An[r]?t.withTextFontFamily(An[r]):Tn[r]?t.withTextFontWeight(Tn[r]):t.withTextFontShape(Bn[r]):t};ot({type:"text",names:["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textmd","\\textit","\\textup"],props:{numArgs:1,argTypes:["text"],allowedInArgument:!0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"text",mode:r.mode,body:ht(a),font:n}},htmlBuilder:function(e,t){var r=Cn(e,t),n=ft(e.body,r,!0);return Ke.makeSpan(["mord","text"],n,r)},mathmlBuilder:function(e,t){var r=Cn(e,t);return It(e.body,r)}}),ot({type:"underline",names:["\\underline"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){return{type:"underline",mode:e.parser.mode,body:t[0]}},htmlBuilder:function(e,t){var r=wt(e.body,t),n=Ke.makeLineSpan("underline-line",t),a=t.fontMetrics().defaultRuleThickness,i=Ke.makeVList({positionType:"top",positionData:r.height,children:[{type:"kern",size:a},{type:"elem",elem:n},{type:"kern",size:3*a},{type:"elem",elem:r}]},t);return Ke.makeSpan(["mord","underline"],[i],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mo",[new Tt.TextNode("\u203e")]);r.setAttribute("stretchy","true");var n=new Tt.MathNode("munder",[Rt(e.body,t),r]);return n.setAttribute("accentunder","true"),n}}),ot({type:"vcenter",names:["\\vcenter"],props:{numArgs:1,argTypes:["original"],allowedInText:!1},handler:function(e,t){return{type:"vcenter",mode:e.parser.mode,body:t[0]}},htmlBuilder:function(e,t){var r=wt(e.body,t),n=t.fontMetrics().axisHeight,a=.5*(r.height-n-(r.depth+n));return Ke.makeVList({positionType:"shift",positionData:a,children:[{type:"elem",elem:r}]},t)},mathmlBuilder:function(e,t){return new Tt.MathNode("mpadded",[Rt(e.body,t)],["vcenter"])}}),ot({type:"verb",names:["\\verb"],props:{numArgs:0,allowedInText:!0},handler:function(e,t,r){throw new n("\\verb ended by end of line instead of matching delimiter")},htmlBuilder:function(e,t){for(var r=Nn(e),n=[],a=t.havingStyle(t.style.text()),i=0;i<r.length;i++){var o=r[i];"~"===o&&(o="\\textasciitilde"),n.push(Ke.makeSymbol(o,"Typewriter-Regular",e.mode,a,["mord","texttt"]))}return Ke.makeSpan(["mord","text"].concat(a.sizingClasses(t)),Ke.tryCombineChars(n),a)},mathmlBuilder:function(e,t){var r=new Tt.TextNode(Nn(e)),n=new Tt.MathNode("mtext",[r]);return n.setAttribute("mathvariant","monospace"),n}});var Nn=function(e){return e.body.replace(/ /g,e.star?"\u2423":"\xa0")},qn=nt,In=new RegExp("[\u0300-\u036f]+$"),Rn=function(){function e(e,t){this.input=void 0,this.settings=void 0,this.tokenRegex=void 0,this.catcodes=void 0,this.input=e,this.settings=t,this.tokenRegex=new RegExp("([ \r\n\t]+)|\\\\(\n|[ \r\t]+\n?)[ \r\t]*|([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff][\u0300-\u036f]*|[\ud800-\udbff][\udc00-\udfff][\u0300-\u036f]*|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5|(\\\\[a-zA-Z@]+)[ \r\n\t]*|\\\\[^\ud800-\udfff])","g"),this.catcodes={"%":14,"~":13}}var t=e.prototype;return t.setCatcode=function(e,t){this.catcodes[e]=t},t.lex=function(){var e=this.input,t=this.tokenRegex.lastIndex;if(t===e.length)return new Gr("EOF",new Fr(this,t,t));var r=this.tokenRegex.exec(e);if(null===r||r.index!==t)throw new n("Unexpected character: '"+e[t]+"'",new Gr(e[t],new Fr(this,t,t+1)));var a=r[6]||r[3]||(r[2]?"\\ ":" ");if(14===this.catcodes[a]){var i=e.indexOf("\n",this.tokenRegex.lastIndex);return-1===i?(this.tokenRegex.lastIndex=e.length,this.settings.reportNonstrict("commentAtEnd","% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")):this.tokenRegex.lastIndex=i+1,this.lex()}return new Gr(a,new Fr(this,t,this.tokenRegex.lastIndex))},e}(),Hn=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={}),this.current=void 0,this.builtins=void 0,this.undefStack=void 0,this.current=t,this.builtins=e,this.undefStack=[]}var t=e.prototype;return t.beginGroup=function(){this.undefStack.push({})},t.endGroup=function(){if(0===this.undefStack.length)throw new n("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");var e=this.undefStack.pop();for(var t in e)e.hasOwnProperty(t)&&(null==e[t]?delete this.current[t]:this.current[t]=e[t])},t.endGroups=function(){for(;this.undefStack.length>0;)this.endGroup()},t.has=function(e){return this.current.hasOwnProperty(e)||this.builtins.hasOwnProperty(e)},t.get=function(e){return this.current.hasOwnProperty(e)?this.current[e]:this.builtins[e]},t.set=function(e,t,r){if(void 0===r&&(r=!1),r){for(var n=0;n<this.undefStack.length;n++)delete this.undefStack[n][e];this.undefStack.length>0&&(this.undefStack[this.undefStack.length-1][e]=t)}else{var a=this.undefStack[this.undefStack.length-1];a&&!a.hasOwnProperty(e)&&(a[e]=this.current[e])}null==t?delete this.current[e]:this.current[e]=t},e}(),On=Vr;Pr("\\noexpand",(function(e){var t=e.popToken();return e.isExpandable(t.text)&&(t.noexpand=!0,t.treatAsRelax=!0),{tokens:[t],numArgs:0}})),Pr("\\expandafter",(function(e){var t=e.popToken();return e.expandOnce(!0),{tokens:[t],numArgs:0}})),Pr("\\@firstoftwo",(function(e){return{tokens:e.consumeArgs(2)[0],numArgs:0}})),Pr("\\@secondoftwo",(function(e){return{tokens:e.consumeArgs(2)[1],numArgs:0}})),Pr("\\@ifnextchar",(function(e){var t=e.consumeArgs(3);e.consumeSpaces();var r=e.future();return 1===t[0].length&&t[0][0].text===r.text?{tokens:t[1],numArgs:0}:{tokens:t[2],numArgs:0}})),Pr("\\@ifstar","\\@ifnextchar *{\\@firstoftwo{#1}}"),Pr("\\TextOrMath",(function(e){var t=e.consumeArgs(2);return"text"===e.mode?{tokens:t[0],numArgs:0}:{tokens:t[1],numArgs:0}}));var En={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15};Pr("\\char",(function(e){var t,r=e.popToken(),a="";if("'"===r.text)t=8,r=e.popToken();else if('"'===r.text)t=16,r=e.popToken();else if(""===r.text)if("\\"===(r=e.popToken()).text[0])a=r.text.charCodeAt(1);else{if("EOF"===r.text)throw new n("\\char missing argument");a=r.text.charCodeAt(0)}else t=10;if(t){if(null==(a=En[r.text])||a>=t)throw new n("Invalid base-"+t+" digit "+r.text);for(var i;null!=(i=En[e.future().text])&&i<t;)a*=t,a+=i,e.popToken()}return"\\@char{"+a+"}"}));var Ln=function(e,t,r){var a=e.consumeArg().tokens;if(1!==a.length)throw new n("\\newcommand's first argument must be a macro name");var i=a[0].text,o=e.isDefined(i);if(o&&!t)throw new n("\\newcommand{"+i+"} attempting to redefine "+i+"; use \\renewcommand");if(!o&&!r)throw new n("\\renewcommand{"+i+"} when command "+i+" does not yet exist; use \\newcommand");var s=0;if(1===(a=e.consumeArg().tokens).length&&"["===a[0].text){for(var l="",h=e.expandNextToken();"]"!==h.text&&"EOF"!==h.text;)l+=h.text,h=e.expandNextToken();if(!l.match(/^\s*[0-9]+\s*$/))throw new n("Invalid number of arguments: "+l);s=parseInt(l),a=e.consumeArg().tokens}return e.macros.set(i,{tokens:a,numArgs:s}),""};Pr("\\newcommand",(function(e){return Ln(e,!1,!0)})),Pr("\\renewcommand",(function(e){return Ln(e,!0,!1)})),Pr("\\providecommand",(function(e){return Ln(e,!0,!0)})),Pr("\\message",(function(e){var t=e.consumeArgs(1)[0];return console.log(t.reverse().map((function(e){return e.text})).join("")),""})),Pr("\\errmessage",(function(e){var t=e.consumeArgs(1)[0];return console.error(t.reverse().map((function(e){return e.text})).join("")),""})),Pr("\\show",(function(e){var t=e.popToken(),r=t.text;return console.log(t,e.macros.get(r),qn[r],ae.math[r],ae.text[r]),""})),Pr("\\bgroup","{"),Pr("\\egroup","}"),Pr("~","\\nobreakspace"),Pr("\\lq",""),Pr("\\rq","'"),Pr("\\aa","\\r a"),Pr("\\AA","\\r A"),Pr("\\textcopyright","\\html@mathml{\\textcircled{c}}{\\char\xa9}"),Pr("\\copyright","\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}"),Pr("\\textregistered","\\html@mathml{\\textcircled{\\scriptsize R}}{\\char\xae}"),Pr("\u212c","\\mathscr{B}"),Pr("\u2130","\\mathscr{E}"),Pr("\u2131","\\mathscr{F}"),Pr("\u210b","\\mathscr{H}"),Pr("\u2110","\\mathscr{I}"),Pr("\u2112","\\mathscr{L}"),Pr("\u2133","\\mathscr{M}"),Pr("\u211b","\\mathscr{R}"),Pr("\u212d","\\mathfrak{C}"),Pr("\u210c","\\mathfrak{H}"),Pr("\u2128","\\mathfrak{Z}"),Pr("\\Bbbk","\\Bbb{k}"),Pr("\xb7","\\cdotp"),Pr("\\llap","\\mathllap{\\textrm{#1}}"),Pr("\\rlap","\\mathrlap{\\textrm{#1}}"),Pr("\\clap","\\mathclap{\\textrm{#1}}"),Pr("\\mathstrut","\\vphantom{(}"),Pr("\\underbar","\\underline{\\text{#1}}"),Pr("\\not",'\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}'),Pr("\\neq","\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char\u2260}}"),Pr("\\ne","\\neq"),Pr("\u2260","\\neq"),Pr("\\notin","\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char\u2209}}"),Pr("\u2209","\\notin"),Pr("\u2258","\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char\u2258}}"),Pr("\u2259","\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char\u2258}}"),Pr("\u225a","\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char\u225a}}"),Pr("\u225b","\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char\u225b}}"),Pr("\u225d","\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char\u225d}}"),Pr("\u225e","\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char\u225e}}"),Pr("\u225f","\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char\u225f}}"),Pr("\u27c2","\\perp"),Pr("\u203c","\\mathclose{!\\mkern-0.8mu!}"),Pr("\u220c","\\notni"),Pr("\u231c","\\ulcorner"),Pr("\u231d","\\urcorner"),Pr("\u231e","\\llcorner"),Pr("\u231f","\\lrcorner"),Pr("\xa9","\\copyright"),Pr("\xae","\\textregistered"),Pr("\ufe0f","\\textregistered"),Pr("\\ulcorner",'\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}'),Pr("\\urcorner",'\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}'),Pr("\\llcorner",'\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}'),Pr("\\lrcorner",'\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}'),Pr("\\vdots","\\mathord{\\varvdots\\rule{0pt}{15pt}}"),Pr("\u22ee","\\vdots"),Pr("\\varGamma","\\mathit{\\Gamma}"),Pr("\\varDelta","\\mathit{\\Delta}"),Pr("\\varTheta","\\mathit{\\Theta}"),Pr("\\varLambda","\\mathit{\\Lambda}"),Pr("\\varXi","\\mathit{\\Xi}"),Pr("\\varPi","\\mathit{\\Pi}"),Pr("\\varSigma","\\mathit{\\Sigma}"),Pr("\\varUpsilon","\\mathit{\\Upsilon}"),Pr("\\varPhi","\\mathit{\\Phi}"),Pr("\\varPsi","\\mathit{\\Psi}"),Pr("\\varOmega","\\mathit{\\Omega}"),Pr("\\substack","\\begin{subarray}{c}#1\\end{subarray}"),Pr("\\colon","\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax"),Pr("\\boxed","\\fbox{$\\displaystyle{#1}$}"),Pr("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;"),Pr("\\implies","\\DOTSB\\;\\Longrightarrow\\;"),Pr("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");var Dn={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcup":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};Pr("\\dots",(function(e){var t="\\dotso",r=e.expandAfterFuture().text;return r in Dn?t=Dn[r]:("\\not"===r.slice(0,4)||r in ae.math&&l.contains(["bin","rel"],ae.math[r].group))&&(t="\\dotsb"),t}));var Vn={")":!0,"]":!0,"\\rbrack":!0,"\\}":!0,"\\rbrace":!0,"\\rangle":!0,"\\rceil":!0,"\\rfloor":!0,"\\rgroup":!0,"\\rmoustache":!0,"\\right":!0,"\\bigr":!0,"\\biggr":!0,"\\Bigr":!0,"\\Biggr":!0,$:!0,";":!0,".":!0,",":!0};Pr("\\dotso",(function(e){return e.future().text in Vn?"\\ldots\\,":"\\ldots"})),Pr("\\dotsc",(function(e){var t=e.future().text;return t in Vn&&","!==t?"\\ldots\\,":"\\ldots"})),Pr("\\cdots",(function(e){return e.future().text in Vn?"\\@cdots\\,":"\\@cdots"})),Pr("\\dotsb","\\cdots"),Pr("\\dotsm","\\cdots"),Pr("\\dotsi","\\!\\cdots"),Pr("\\dotsx","\\ldots\\,"),Pr("\\DOTSI","\\relax"),Pr("\\DOTSB","\\relax"),Pr("\\DOTSX","\\relax"),Pr("\\tmspace","\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"),Pr("\\,","\\tmspace+{3mu}{.1667em}"),Pr("\\thinspace","\\,"),Pr("\\>","\\mskip{4mu}"),Pr("\\:","\\tmspace+{4mu}{.2222em}"),Pr("\\medspace","\\:"),Pr("\\;","\\tmspace+{5mu}{.2777em}"),Pr("\\thickspace","\\;"),Pr("\\!","\\tmspace-{3mu}{.1667em}"),Pr("\\negthinspace","\\!"),Pr("\\negmedspace","\\tmspace-{4mu}{.2222em}"),Pr("\\negthickspace","\\tmspace-{5mu}{.277em}"),Pr("\\enspace","\\kern.5em "),Pr("\\enskip","\\hskip.5em\\relax"),Pr("\\quad","\\hskip1em\\relax"),Pr("\\qquad","\\hskip2em\\relax"),Pr("\\tag","\\@ifstar\\tag@literal\\tag@paren"),Pr("\\tag@paren","\\tag@literal{({#1})}"),Pr("\\tag@literal",(function(e){if(e.macros.get("\\df@tag"))throw new n("Multiple \\tag");return"\\gdef\\df@tag{\\text{#1}}"})),Pr("\\bmod","\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"),Pr("\\pod","\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)"),Pr("\\pmod","\\pod{{\\rm mod}\\mkern6mu#1}"),Pr("\\mod","\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1"),Pr("\\newline","\\\\\\relax"),Pr("\\TeX","\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");var Pn=F(T["Main-Regular"]["T".charCodeAt(0)][1]-.7*T["Main-Regular"]["A".charCodeAt(0)][1]);Pr("\\LaTeX","\\textrm{\\html@mathml{L\\kern-.36em\\raisebox{"+Pn+"}{\\scriptstyle A}\\kern-.15em\\TeX}{LaTeX}}"),Pr("\\KaTeX","\\textrm{\\html@mathml{K\\kern-.17em\\raisebox{"+Pn+"}{\\scriptstyle A}\\kern-.15em\\TeX}{KaTeX}}"),Pr("\\hspace","\\@ifstar\\@hspacer\\@hspace"),Pr("\\@hspace","\\hskip #1\\relax"),Pr("\\@hspacer","\\rule{0pt}{0pt}\\hskip #1\\relax"),Pr("\\ordinarycolon",":"),Pr("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}"),Pr("\\dblcolon",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}'),Pr("\\coloneqq",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}'),Pr("\\Coloneqq",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}'),Pr("\\coloneq",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}'),Pr("\\Coloneq",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}'),Pr("\\eqqcolon",'\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}'),Pr("\\Eqqcolon",'\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}'),Pr("\\eqcolon",'\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}'),Pr("\\Eqcolon",'\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}'),Pr("\\colonapprox",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}'),Pr("\\Colonapprox",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}'),Pr("\\colonsim",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}'),Pr("\\Colonsim",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}'),Pr("\u2237","\\dblcolon"),Pr("\u2239","\\eqcolon"),Pr("\u2254","\\coloneqq"),Pr("\u2255","\\eqqcolon"),Pr("\u2a74","\\Coloneqq"),Pr("\\ratio","\\vcentcolon"),Pr("\\coloncolon","\\dblcolon"),Pr("\\colonequals","\\coloneqq"),Pr("\\coloncolonequals","\\Coloneqq"),Pr("\\equalscolon","\\eqqcolon"),Pr("\\equalscoloncolon","\\Eqqcolon"),Pr("\\colonminus","\\coloneq"),Pr("\\coloncolonminus","\\Coloneq"),Pr("\\minuscolon","\\eqcolon"),Pr("\\minuscoloncolon","\\Eqcolon"),Pr("\\coloncolonapprox","\\Colonapprox"),Pr("\\coloncolonsim","\\Colonsim"),Pr("\\simcolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),Pr("\\simcoloncolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}"),Pr("\\approxcolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),Pr("\\approxcoloncolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}"),Pr("\\notni","\\html@mathml{\\not\\ni}{\\mathrel{\\char\u220c}}"),Pr("\\limsup","\\DOTSB\\operatorname*{lim\\,sup}"),Pr("\\liminf","\\DOTSB\\operatorname*{lim\\,inf}"),Pr("\\injlim","\\DOTSB\\operatorname*{inj\\,lim}"),Pr("\\projlim","\\DOTSB\\operatorname*{proj\\,lim}"),Pr("\\varlimsup","\\DOTSB\\operatorname*{\\overline{lim}}"),Pr("\\varliminf","\\DOTSB\\operatorname*{\\underline{lim}}"),Pr("\\varinjlim","\\DOTSB\\operatorname*{\\underrightarrow{lim}}"),Pr("\\varprojlim","\\DOTSB\\operatorname*{\\underleftarrow{lim}}"),Pr("\\gvertneqq","\\html@mathml{\\@gvertneqq}{\u2269}"),Pr("\\lvertneqq","\\html@mathml{\\@lvertneqq}{\u2268}"),Pr("\\ngeqq","\\html@mathml{\\@ngeqq}{\u2271}"),Pr("\\ngeqslant","\\html@mathml{\\@ngeqslant}{\u2271}"),Pr("\\nleqq","\\html@mathml{\\@nleqq}{\u2270}"),Pr("\\nleqslant","\\html@mathml{\\@nleqslant}{\u2270}"),Pr("\\nshortmid","\\html@mathml{\\@nshortmid}{\u2224}"),Pr("\\nshortparallel","\\html@mathml{\\@nshortparallel}{\u2226}"),Pr("\\nsubseteqq","\\html@mathml{\\@nsubseteqq}{\u2288}"),Pr("\\nsupseteqq","\\html@mathml{\\@nsupseteqq}{\u2289}"),Pr("\\varsubsetneq","\\html@mathml{\\@varsubsetneq}{\u228a}"),Pr("\\varsubsetneqq","\\html@mathml{\\@varsubsetneqq}{\u2acb}"),Pr("\\varsupsetneq","\\html@mathml{\\@varsupsetneq}{\u228b}"),Pr("\\varsupsetneqq","\\html@mathml{\\@varsupsetneqq}{\u2acc}"),Pr("\\imath","\\html@mathml{\\@imath}{\u0131}"),Pr("\\jmath","\\html@mathml{\\@jmath}{\u0237}"),Pr("\\llbracket","\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char\u27e6}}"),Pr("\\rrbracket","\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char\u27e7}}"),Pr("\u27e6","\\llbracket"),Pr("\u27e7","\\rrbracket"),Pr("\\lBrace","\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char\u2983}}"),Pr("\\rBrace","\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char\u2984}}"),Pr("\u2983","\\lBrace"),Pr("\u2984","\\rBrace"),Pr("\\minuso","\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char\u29b5}}"),Pr("\u29b5","\\minuso"),Pr("\\darr","\\downarrow"),Pr("\\dArr","\\Downarrow"),Pr("\\Darr","\\Downarrow"),Pr("\\lang","\\langle"),Pr("\\rang","\\rangle"),Pr("\\uarr","\\uparrow"),Pr("\\uArr","\\Uparrow"),Pr("\\Uarr","\\Uparrow"),Pr("\\N","\\mathbb{N}"),Pr("\\R","\\mathbb{R}"),Pr("\\Z","\\mathbb{Z}"),Pr("\\alef","\\aleph"),Pr("\\alefsym","\\aleph"),Pr("\\Alpha","\\mathrm{A}"),Pr("\\Beta","\\mathrm{B}"),Pr("\\bull","\\bullet"),Pr("\\Chi","\\mathrm{X}"),Pr("\\clubs","\\clubsuit"),Pr("\\cnums","\\mathbb{C}"),Pr("\\Complex","\\mathbb{C}"),Pr("\\Dagger","\\ddagger"),Pr("\\diamonds","\\diamondsuit"),Pr("\\empty","\\emptyset"),Pr("\\Epsilon","\\mathrm{E}"),Pr("\\Eta","\\mathrm{H}"),Pr("\\exist","\\exists"),Pr("\\harr","\\leftrightarrow"),Pr("\\hArr","\\Leftrightarrow"),Pr("\\Harr","\\Leftrightarrow"),Pr("\\hearts","\\heartsuit"),Pr("\\image","\\Im"),Pr("\\infin","\\infty"),Pr("\\Iota","\\mathrm{I}"),Pr("\\isin","\\in"),Pr("\\Kappa","\\mathrm{K}"),Pr("\\larr","\\leftarrow"),Pr("\\lArr","\\Leftarrow"),Pr("\\Larr","\\Leftarrow"),Pr("\\lrarr","\\leftrightarrow"),Pr("\\lrArr","\\Leftrightarrow"),Pr("\\Lrarr","\\Leftrightarrow"),Pr("\\Mu","\\mathrm{M}"),Pr("\\natnums","\\mathbb{N}"),Pr("\\Nu","\\mathrm{N}"),Pr("\\Omicron","\\mathrm{O}"),Pr("\\plusmn","\\pm"),Pr("\\rarr","\\rightarrow"),Pr("\\rArr","\\Rightarrow"),Pr("\\Rarr","\\Rightarrow"),Pr("\\real","\\Re"),Pr("\\reals","\\mathbb{R}"),Pr("\\Reals","\\mathbb{R}"),Pr("\\Rho","\\mathrm{P}"),Pr("\\sdot","\\cdot"),Pr("\\sect","\\S"),Pr("\\spades","\\spadesuit"),Pr("\\sub","\\subset"),Pr("\\sube","\\subseteq"),Pr("\\supe","\\supseteq"),Pr("\\Tau","\\mathrm{T}"),Pr("\\thetasym","\\vartheta"),Pr("\\weierp","\\wp"),Pr("\\Zeta","\\mathrm{Z}"),Pr("\\argmin","\\DOTSB\\operatorname*{arg\\,min}"),Pr("\\argmax","\\DOTSB\\operatorname*{arg\\,max}"),Pr("\\plim","\\DOTSB\\mathop{\\operatorname{plim}}\\limits"),Pr("\\bra","\\mathinner{\\langle{#1}|}"),Pr("\\ket","\\mathinner{|{#1}\\rangle}"),Pr("\\braket","\\mathinner{\\langle{#1}\\rangle}"),Pr("\\Bra","\\left\\langle#1\\right|"),Pr("\\Ket","\\left|#1\\right\\rangle");var Fn=function(e){return function(t){var r=t.consumeArg().tokens,n=t.consumeArg().tokens,a=t.consumeArg().tokens,i=t.consumeArg().tokens,o=t.macros.get("|"),s=t.macros.get("\\|");t.macros.beginGroup();var l=function(t){return function(r){e&&(r.macros.set("|",o),a.length&&r.macros.set("\\|",s));var i=t;!t&&a.length&&("|"===r.future().text&&(r.popToken(),i=!0));return{tokens:i?a:n,numArgs:0}}};t.macros.set("|",l(!1)),a.length&&t.macros.set("\\|",l(!0));var h=t.consumeArg().tokens,c=t.expandTokens([].concat(i,h,r));return t.macros.endGroup(),{tokens:c.reverse(),numArgs:0}}};Pr("\\bra@ket",Fn(!1)),Pr("\\bra@set",Fn(!0)),Pr("\\Braket","\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}"),Pr("\\Set","\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}"),Pr("\\set","\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}"),Pr("\\angln","{\\angl n}"),Pr("\\blue","\\textcolor{##6495ed}{#1}"),Pr("\\orange","\\textcolor{##ffa500}{#1}"),Pr("\\pink","\\textcolor{##ff00af}{#1}"),Pr("\\red","\\textcolor{##df0030}{#1}"),Pr("\\green","\\textcolor{##28ae7b}{#1}"),Pr("\\gray","\\textcolor{gray}{#1}"),Pr("\\purple","\\textcolor{##9d38bd}{#1}"),Pr("\\blueA","\\textcolor{##ccfaff}{#1}"),Pr("\\blueB","\\textcolor{##80f6ff}{#1}"),Pr("\\blueC","\\textcolor{##63d9ea}{#1}"),Pr("\\blueD","\\textcolor{##11accd}{#1}"),Pr("\\blueE","\\textcolor{##0c7f99}{#1}"),Pr("\\tealA","\\textcolor{##94fff5}{#1}"),Pr("\\tealB","\\textcolor{##26edd5}{#1}"),Pr("\\tealC","\\textcolor{##01d1c1}{#1}"),Pr("\\tealD","\\textcolor{##01a995}{#1}"),Pr("\\tealE","\\textcolor{##208170}{#1}"),Pr("\\greenA","\\textcolor{##b6ffb0}{#1}"),Pr("\\greenB","\\textcolor{##8af281}{#1}"),Pr("\\greenC","\\textcolor{##74cf70}{#1}"),Pr("\\greenD","\\textcolor{##1fab54}{#1}"),Pr("\\greenE","\\textcolor{##0d923f}{#1}"),Pr("\\goldA","\\textcolor{##ffd0a9}{#1}"),Pr("\\goldB","\\textcolor{##ffbb71}{#1}"),Pr("\\goldC","\\textcolor{##ff9c39}{#1}"),Pr("\\goldD","\\textcolor{##e07d10}{#1}"),Pr("\\goldE","\\textcolor{##a75a05}{#1}"),Pr("\\redA","\\textcolor{##fca9a9}{#1}"),Pr("\\redB","\\textcolor{##ff8482}{#1}"),Pr("\\redC","\\textcolor{##f9685d}{#1}"),Pr("\\redD","\\textcolor{##e84d39}{#1}"),Pr("\\redE","\\textcolor{##bc2612}{#1}"),Pr("\\maroonA","\\textcolor{##ffbde0}{#1}"),Pr("\\maroonB","\\textcolor{##ff92c6}{#1}"),Pr("\\maroonC","\\textcolor{##ed5fa6}{#1}"),Pr("\\maroonD","\\textcolor{##ca337c}{#1}"),Pr("\\maroonE","\\textcolor{##9e034e}{#1}"),Pr("\\purpleA","\\textcolor{##ddd7ff}{#1}"),Pr("\\purpleB","\\textcolor{##c6b9fc}{#1}"),Pr("\\purpleC","\\textcolor{##aa87ff}{#1}"),Pr("\\purpleD","\\textcolor{##7854ab}{#1}"),Pr("\\purpleE","\\textcolor{##543b78}{#1}"),Pr("\\mintA","\\textcolor{##f5f9e8}{#1}"),Pr("\\mintB","\\textcolor{##edf2df}{#1}"),Pr("\\mintC","\\textcolor{##e0e5cc}{#1}"),Pr("\\grayA","\\textcolor{##f6f7f7}{#1}"),Pr("\\grayB","\\textcolor{##f0f1f2}{#1}"),Pr("\\grayC","\\textcolor{##e3e5e6}{#1}"),Pr("\\grayD","\\textcolor{##d6d8da}{#1}"),Pr("\\grayE","\\textcolor{##babec2}{#1}"),Pr("\\grayF","\\textcolor{##888d93}{#1}"),Pr("\\grayG","\\textcolor{##626569}{#1}"),Pr("\\grayH","\\textcolor{##3b3e40}{#1}"),Pr("\\grayI","\\textcolor{##21242c}{#1}"),Pr("\\kaBlue","\\textcolor{##314453}{#1}"),Pr("\\kaGreen","\\textcolor{##71B307}{#1}");var Gn={"^":!0,_:!0,"\\limits":!0,"\\nolimits":!0},Un=function(){function e(e,t,r){this.settings=void 0,this.expansionCount=void 0,this.lexer=void 0,this.macros=void 0,this.stack=void 0,this.mode=void 0,this.settings=t,this.expansionCount=0,this.feed(e),this.macros=new Hn(On,t.macros),this.mode=r,this.stack=[]}var t=e.prototype;return t.feed=function(e){this.lexer=new Rn(e,this.settings)},t.switchMode=function(e){this.mode=e},t.beginGroup=function(){this.macros.beginGroup()},t.endGroup=function(){this.macros.endGroup()},t.endGroups=function(){this.macros.endGroups()},t.future=function(){return 0===this.stack.length&&this.pushToken(this.lexer.lex()),this.stack[this.stack.length-1]},t.popToken=function(){return this.future(),this.stack.pop()},t.pushToken=function(e){this.stack.push(e)},t.pushTokens=function(e){var t;(t=this.stack).push.apply(t,e)},t.scanArgument=function(e){var t,r,n;if(e){if(this.consumeSpaces(),"["!==this.future().text)return null;t=this.popToken();var a=this.consumeArg(["]"]);n=a.tokens,r=a.end}else{var i=this.consumeArg();n=i.tokens,t=i.start,r=i.end}return this.pushToken(new Gr("EOF",r.loc)),this.pushTokens(n),t.range(r,"")},t.consumeSpaces=function(){for(;;){if(" "!==this.future().text)break;this.stack.pop()}},t.consumeArg=function(e){var t=[],r=e&&e.length>0;r||this.consumeSpaces();var a,i=this.future(),o=0,s=0;do{if(a=this.popToken(),t.push(a),"{"===a.text)++o;else if("}"===a.text){if(-1===--o)throw new n("Extra }",a)}else if("EOF"===a.text)throw new n("Unexpected end of input in a macro argument, expected '"+(e&&r?e[s]:"}")+"'",a);if(e&&r)if((0===o||1===o&&"{"===e[s])&&a.text===e[s]){if(++s===e.length){t.splice(-s,s);break}}else s=0}while(0!==o||r);return"{"===i.text&&"}"===t[t.length-1].text&&(t.pop(),t.shift()),t.reverse(),{tokens:t,start:i,end:a}},t.consumeArgs=function(e,t){if(t){if(t.length!==e+1)throw new n("The length of delimiters doesn't match the number of args!");for(var r=t[0],a=0;a<r.length;a++){var i=this.popToken();if(r[a]!==i.text)throw new n("Use of the macro doesn't match its definition",i)}}for(var o=[],s=0;s<e;s++)o.push(this.consumeArg(t&&t[s+1]).tokens);return o},t.expandOnce=function(e){var t=this.popToken(),r=t.text,a=t.noexpand?null:this._getExpansion(r);if(null==a||e&&a.unexpandable){if(e&&null==a&&"\\"===r[0]&&!this.isDefined(r))throw new n("Undefined control sequence: "+r);return this.pushToken(t),t}if(this.expansionCount++,this.expansionCount>this.settings.maxExpand)throw new n("Too many expansions: infinite loop or need to increase maxExpand setting");var i=a.tokens,o=this.consumeArgs(a.numArgs,a.delimiters);if(a.numArgs)for(var s=(i=i.slice()).length-1;s>=0;--s){var l=i[s];if("#"===l.text){if(0===s)throw new n("Incomplete placeholder at end of macro body",l);if("#"===(l=i[--s]).text)i.splice(s+1,1);else{if(!/^[1-9]$/.test(l.text))throw new n("Not a valid argument number",l);var h;(h=i).splice.apply(h,[s,2].concat(o[+l.text-1]))}}}return this.pushTokens(i),i},t.expandAfterFuture=function(){return this.expandOnce(),this.future()},t.expandNextToken=function(){for(;;){var e=this.expandOnce();if(e instanceof Gr)return e.treatAsRelax&&(e.text="\\relax"),this.stack.pop()}throw new Error},t.expandMacro=function(e){return this.macros.has(e)?this.expandTokens([new Gr(e)]):void 0},t.expandTokens=function(e){var t=[],r=this.stack.length;for(this.pushTokens(e);this.stack.length>r;){var n=this.expandOnce(!0);n instanceof Gr&&(n.treatAsRelax&&(n.noexpand=!1,n.treatAsRelax=!1),t.push(this.stack.pop()))}return t},t.expandMacroAsText=function(e){var t=this.expandMacro(e);return t?t.map((function(e){return e.text})).join(""):t},t._getExpansion=function(e){var t=this.macros.get(e);if(null==t)return t;if(1===e.length){var r=this.lexer.catcodes[e];if(null!=r&&13!==r)return}var n="function"==typeof t?t(this):t;if("string"==typeof n){var a=0;if(-1!==n.indexOf("#"))for(var i=n.replace(/##/g,"");-1!==i.indexOf("#"+(a+1));)++a;for(var o=new Rn(n,this.settings),s=[],l=o.lex();"EOF"!==l.text;)s.push(l),l=o.lex();return s.reverse(),{tokens:s,numArgs:a}}return n},t.isDefined=function(e){return this.macros.has(e)||qn.hasOwnProperty(e)||ae.math.hasOwnProperty(e)||ae.text.hasOwnProperty(e)||Gn.hasOwnProperty(e)},t.isExpandable=function(e){var t=this.macros.get(e);return null!=t?"string"==typeof t||"function"==typeof t||!t.unexpandable:qn.hasOwnProperty(e)&&!qn[e].primitive},e}(),Yn=/^[\u208a\u208b\u208c\u208d\u208e\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089\u2090\u2091\u2095\u1d62\u2c7c\u2096\u2097\u2098\u2099\u2092\u209a\u1d63\u209b\u209c\u1d64\u1d65\u2093\u1d66\u1d67\u1d68\u1d69\u1d6a]/,Xn=Object.freeze({"\u208a":"+","\u208b":"-","\u208c":"=","\u208d":"(","\u208e":")","\u2080":"0","\u2081":"1","\u2082":"2","\u2083":"3","\u2084":"4","\u2085":"5","\u2086":"6","\u2087":"7","\u2088":"8","\u2089":"9","\u2090":"a","\u2091":"e","\u2095":"h","\u1d62":"i","\u2c7c":"j","\u2096":"k","\u2097":"l","\u2098":"m","\u2099":"n","\u2092":"o","\u209a":"p","\u1d63":"r","\u209b":"s","\u209c":"t","\u1d64":"u","\u1d65":"v","\u2093":"x","\u1d66":"\u03b2","\u1d67":"\u03b3","\u1d68":"\u03c1","\u1d69":"\u03d5","\u1d6a":"\u03c7","\u207a":"+","\u207b":"-","\u207c":"=","\u207d":"(","\u207e":")","\u2070":"0","\xb9":"1","\xb2":"2","\xb3":"3","\u2074":"4","\u2075":"5","\u2076":"6","\u2077":"7","\u2078":"8","\u2079":"9","\u1d2c":"A","\u1d2e":"B","\u1d30":"D","\u1d31":"E","\u1d33":"G","\u1d34":"H","\u1d35":"I","\u1d36":"J","\u1d37":"K","\u1d38":"L","\u1d39":"M","\u1d3a":"N","\u1d3c":"O","\u1d3e":"P","\u1d3f":"R","\u1d40":"T","\u1d41":"U","\u2c7d":"V","\u1d42":"W","\u1d43":"a","\u1d47":"b","\u1d9c":"c","\u1d48":"d","\u1d49":"e","\u1da0":"f","\u1d4d":"g","\u02b0":"h","\u2071":"i","\u02b2":"j","\u1d4f":"k","\u02e1":"l","\u1d50":"m","\u207f":"n","\u1d52":"o","\u1d56":"p","\u02b3":"r","\u02e2":"s","\u1d57":"t","\u1d58":"u","\u1d5b":"v","\u02b7":"w","\u02e3":"x","\u02b8":"y","\u1dbb":"z","\u1d5d":"\u03b2","\u1d5e":"\u03b3","\u1d5f":"\u03b4","\u1d60":"\u03d5","\u1d61":"\u03c7","\u1dbf":"\u03b8"}),Wn={"\u0301":{text:"\\'",math:"\\acute"},"\u0300":{text:"\\",math:"\\grave"},"\u0308":{text:'\\"',math:"\\ddot"},"\u0303":{text:"\\~",math:"\\tilde"},"\u0304":{text:"\\=",math:"\\bar"},"\u0306":{text:"\\u",math:"\\breve"},"\u030c":{text:"\\v",math:"\\check"},"\u0302":{text:"\\^",math:"\\hat"},"\u0307":{text:"\\.",math:"\\dot"},"\u030a":{text:"\\r",math:"\\mathring"},"\u030b":{text:"\\H"},"\u0327":{text:"\\c"}},_n={"\xe1":"a\u0301","\xe0":"a\u0300","\xe4":"a\u0308","\u01df":"a\u0308\u0304","\xe3":"a\u0303","\u0101":"a\u0304","\u0103":"a\u0306","\u1eaf":"a\u0306\u0301","\u1eb1":"a\u0306\u0300","\u1eb5":"a\u0306\u0303","\u01ce":"a\u030c","\xe2":"a\u0302","\u1ea5":"a\u0302\u0301","\u1ea7":"a\u0302\u0300","\u1eab":"a\u0302\u0303","\u0227":"a\u0307","\u01e1":"a\u0307\u0304","\xe5":"a\u030a","\u01fb":"a\u030a\u0301","\u1e03":"b\u0307","\u0107":"c\u0301","\u1e09":"c\u0327\u0301","\u010d":"c\u030c","\u0109":"c\u0302","\u010b":"c\u0307","\xe7":"c\u0327","\u010f":"d\u030c","\u1e0b":"d\u0307","\u1e11":"d\u0327","\xe9":"e\u0301","\xe8":"e\u0300","\xeb":"e\u0308","\u1ebd":"e\u0303","\u0113":"e\u0304","\u1e17":"e\u0304\u0301","\u1e15":"e\u0304\u0300","\u0115":"e\u0306","\u1e1d":"e\u0327\u0306","\u011b":"e\u030c","\xea":"e\u0302","\u1ebf":"e\u0302\u0301","\u1ec1":"e\u0302\u0300","\u1ec5":"e\u0302\u0303","\u0117":"e\u0307","\u0229":"e\u0327","\u1e1f":"f\u0307","\u01f5":"g\u0301","\u1e21":"g\u0304","\u011f":"g\u0306","\u01e7":"g\u030c","\u011d":"g\u0302","\u0121":"g\u0307","\u0123":"g\u0327","\u1e27":"h\u0308","\u021f":"h\u030c","\u0125":"h\u0302","\u1e23":"h\u0307","\u1e29":"h\u0327","\xed":"i\u0301","\xec":"i\u0300","\xef":"i\u0308","\u1e2f":"i\u0308\u0301","\u0129":"i\u0303","\u012b":"i\u0304","\u012d":"i\u0306","\u01d0":"i\u030c","\xee":"i\u0302","\u01f0":"j\u030c","\u0135":"j\u0302","\u1e31":"k\u0301","\u01e9":"k\u030c","\u0137":"k\u0327","\u013a":"l\u0301","\u013e":"l\u030c","\u013c":"l\u0327","\u1e3f":"m\u0301","\u1e41":"m\u0307","\u0144":"n\u0301","\u01f9":"n\u0300","\xf1":"n\u0303","\u0148":"n\u030c","\u1e45":"n\u0307","\u0146":"n\u0327","\xf3":"o\u0301","\xf2":"o\u0300","\xf6":"o\u0308","\u022b":"o\u0308\u0304","\xf5":"o\u0303","\u1e4d":"o\u0303\u0301","\u1e4f":"o\u0303\u0308","\u022d":"o\u0303\u0304","\u014d":"o\u0304","\u1e53":"o\u0304\u0301","\u1e51":"o\u0304\u0300","\u014f":"o\u0306","\u01d2":"o\u030c","\xf4":"o\u0302","\u1ed1":"o\u0302\u0301","\u1ed3":"o\u0302\u0300","\u1ed7":"o\u0302\u0303","\u022f":"o\u0307","\u0231":"o\u0307\u0304","\u0151":"o\u030b","\u1e55":"p\u0301","\u1e57":"p\u0307","\u0155":"r\u0301","\u0159":"r\u030c","\u1e59":"r\u0307","\u0157":"r\u0327","\u015b":"s\u0301","\u1e65":"s\u0301\u0307","\u0161":"s\u030c","\u1e67":"s\u030c\u0307","\u015d":"s\u0302","\u1e61":"s\u0307","\u015f":"s\u0327","\u1e97":"t\u0308","\u0165":"t\u030c","\u1e6b":"t\u0307","\u0163":"t\u0327","\xfa":"u\u0301","\xf9":"u\u0300","\xfc":"u\u0308","\u01d8":"u\u0308\u0301","\u01dc":"u\u0308\u0300","\u01d6":"u\u0308\u0304","\u01da":"u\u0308\u030c","\u0169":"u\u0303","\u1e79":"u\u0303\u0301","\u016b":"u\u0304","\u1e7b":"u\u0304\u0308","\u016d":"u\u0306","\u01d4":"u\u030c","\xfb":"u\u0302","\u016f":"u\u030a","\u0171":"u\u030b","\u1e7d":"v\u0303","\u1e83":"w\u0301","\u1e81":"w\u0300","\u1e85":"w\u0308","\u0175":"w\u0302","\u1e87":"w\u0307","\u1e98":"w\u030a","\u1e8d":"x\u0308","\u1e8b":"x\u0307","\xfd":"y\u0301","\u1ef3":"y\u0300","\xff":"y\u0308","\u1ef9":"y\u0303","\u0233":"y\u0304","\u0177":"y\u0302","\u1e8f":"y\u0307","\u1e99":"y\u030a","\u017a":"z\u0301","\u017e":"z\u030c","\u1e91":"z\u0302","\u017c":"z\u0307","\xc1":"A\u0301","\xc0":"A\u0300","\xc4":"A\u0308","\u01de":"A\u0308\u0304","\xc3":"A\u0303","\u0100":"A\u0304","\u0102":"A\u0306","\u1eae":"A\u0306\u0301","\u1eb0":"A\u0306\u0300","\u1eb4":"A\u0306\u0303","\u01cd":"A\u030c","\xc2":"A\u0302","\u1ea4":"A\u0302\u0301","\u1ea6":"A\u0302\u0300","\u1eaa":"A\u0302\u0303","\u0226":"A\u0307","\u01e0":"A\u0307\u0304","\xc5":"A\u030a","\u01fa":"A\u030a\u0301","\u1e02":"B\u0307","\u0106":"C\u0301","\u1e08":"C\u0327\u0301","\u010c":"C\u030c","\u0108":"C\u0302","\u010a":"C\u0307","\xc7":"C\u0327","\u010e":"D\u030c","\u1e0a":"D\u0307","\u1e10":"D\u0327","\xc9":"E\u0301","\xc8":"E\u0300","\xcb":"E\u0308","\u1ebc":"E\u0303","\u0112":"E\u0304","\u1e16":"E\u0304\u0301","\u1e14":"E\u0304\u0300","\u0114":"E\u0306","\u1e1c":"E\u0327\u0306","\u011a":"E\u030c","\xca":"E\u0302","\u1ebe":"E\u0302\u0301","\u1ec0":"E\u0302\u0300","\u1ec4":"E\u0302\u0303","\u0116":"E\u0307","\u0228":"E\u0327","\u1e1e":"F\u0307","\u01f4":"G\u0301","\u1e20":"G\u0304","\u011e":"G\u0306","\u01e6":"G\u030c","\u011c":"G\u0302","\u0120":"G\u0307","\u0122":"G\u0327","\u1e26":"H\u0308","\u021e":"H\u030c","\u0124":"H\u0302","\u1e22":"H\u0307","\u1e28":"H\u0327","\xcd":"I\u0301","\xcc":"I\u0300","\xcf":"I\u0308","\u1e2e":"I\u0308\u0301","\u0128":"I\u0303","\u012a":"I\u0304","\u012c":"I\u0306","\u01cf":"I\u030c","\xce":"I\u0302","\u0130":"I\u0307","\u0134":"J\u0302","\u1e30":"K\u0301","\u01e8":"K\u030c","\u0136":"K\u0327","\u0139":"L\u0301","\u013d":"L\u030c","\u013b":"L\u0327","\u1e3e":"M\u0301","\u1e40":"M\u0307","\u0143":"N\u0301","\u01f8":"N\u0300","\xd1":"N\u0303","\u0147":"N\u030c","\u1e44":"N\u0307","\u0145":"N\u0327","\xd3":"O\u0301","\xd2":"O\u0300","\xd6":"O\u0308","\u022a":"O\u0308\u0304","\xd5":"O\u0303","\u1e4c":"O\u0303\u0301","\u1e4e":"O\u0303\u0308","\u022c":"O\u0303\u0304","\u014c":"O\u0304","\u1e52":"O\u0304\u0301","\u1e50":"O\u0304\u0300","\u014e":"O\u0306","\u01d1":"O\u030c","\xd4":"O\u0302","\u1ed0":"O\u0302\u0301","\u1ed2":"O\u0302\u0300","\u1ed6":"O\u0302\u0303","\u022e":"O\u0307","\u0230":"O\u0307\u0304","\u0150":"O\u030b","\u1e54":"P\u0301","\u1e56":"P\u0307","\u0154":"R\u0301","\u0158":"R\u030c","\u1e58":"R\u0307","\u0156":"R\u0327","\u015a":"S\u0301","\u1e64":"S\u0301\u0307","\u0160":"S\u030c","\u1e66":"S\u030c\u0307","\u015c":"S\u0302","\u1e60":"S\u0307","\u015e":"S\u0327","\u0164":"T\u030c","\u1e6a":"T\u0307","\u0162":"T\u0327","\xda":"U\u0301","\xd9":"U\u0300","\xdc":"U\u0308","\u01d7":"U\u0308\u0301","\u01db":"U\u0308\u0300","\u01d5":"U\u0308\u0304","\u01d9":"U\u0308\u030c","\u0168":"U\u0303","\u1e78":"U\u0303\u0301","\u016a":"U\u0304","\u1e7a":"U\u0304\u0308","\u016c":"U\u0306","\u01d3":"U\u030c","\xdb":"U\u0302","\u016e":"U\u030a","\u0170":"U\u030b","\u1e7c":"V\u0303","\u1e82":"W\u0301","\u1e80":"W\u0300","\u1e84":"W\u0308","\u0174":"W\u0302","\u1e86":"W\u0307","\u1e8c":"X\u0308","\u1e8a":"X\u0307","\xdd":"Y\u0301","\u1ef2":"Y\u0300","\u0178":"Y\u0308","\u1ef8":"Y\u0303","\u0232":"Y\u0304","\u0176":"Y\u0302","\u1e8e":"Y\u0307","\u0179":"Z\u0301","\u017d":"Z\u030c","\u1e90":"Z\u0302","\u017b":"Z\u0307","\u03ac":"\u03b1\u0301","\u1f70":"\u03b1\u0300","\u1fb1":"\u03b1\u0304","\u1fb0":"\u03b1\u0306","\u03ad":"\u03b5\u0301","\u1f72":"\u03b5\u0300","\u03ae":"\u03b7\u0301","\u1f74":"\u03b7\u0300","\u03af":"\u03b9\u0301","\u1f76":"\u03b9\u0300","\u03ca":"\u03b9\u0308","\u0390":"\u03b9\u0308\u0301","\u1fd2":"\u03b9\u0308\u0300","\u1fd1":"\u03b9\u0304","\u1fd0":"\u03b9\u0306","\u03cc":"\u03bf\u0301","\u1f78":"\u03bf\u0300","\u03cd":"\u03c5\u0301","\u1f7a":"\u03c5\u0300","\u03cb":"\u03c5\u0308","\u03b0":"\u03c5\u0308\u0301","\u1fe2":"\u03c5\u0308\u0300","\u1fe1":"\u03c5\u0304","\u1fe0":"\u03c5\u0306","\u03ce":"\u03c9\u0301","\u1f7c":"\u03c9\u0300","\u038e":"\u03a5\u0301","\u1fea":"\u03a5\u0300","\u03ab":"\u03a5\u0308","\u1fe9":"\u03a5\u0304","\u1fe8":"\u03a5\u0306","\u038f":"\u03a9\u0301","\u1ffa":"\u03a9\u0300"},jn=function(){function e(e,t){this.mode=void 0,this.gullet=void 0,this.settings=void 0,this.leftrightDepth=void 0,this.nextToken=void 0,this.mode="math",this.gullet=new Un(e,t,this.mode),this.settings=t,this.leftrightDepth=0}var t=e.prototype;return t.expect=function(e,t){if(void 0===t&&(t=!0),this.fetch().text!==e)throw new n("Expected '"+e+"', got '"+this.fetch().text+"'",this.fetch());t&&this.consume()},t.consume=function(){this.nextToken=null},t.fetch=function(){return null==this.nextToken&&(this.nextToken=this.gullet.expandNextToken()),this.nextToken},t.switchMode=function(e){this.mode=e,this.gullet.switchMode(e)},t.parse=function(){this.settings.globalGroup||this.gullet.beginGroup(),this.settings.colorIsTextColor&&this.gullet.macros.set("\\color","\\textcolor");try{var e=this.parseExpression(!1);return this.expect("EOF"),this.settings.globalGroup||this.gullet.endGroup(),e}finally{this.gullet.endGroups()}},t.subparse=function(e){var t=this.nextToken;this.consume(),this.gullet.pushToken(new Gr("}")),this.gullet.pushTokens(e);var r=this.parseExpression(!1);return this.expect("}"),this.nextToken=t,r},t.parseExpression=function(t,r){for(var n=[];;){"math"===this.mode&&this.consumeSpaces();var a=this.fetch();if(-1!==e.endOfExpression.indexOf(a.text))break;if(r&&a.text===r)break;if(t&&qn[a.text]&&qn[a.text].infix)break;var i=this.parseAtom(r);if(!i)break;"internal"!==i.type&&n.push(i)}return"text"===this.mode&&this.formLigatures(n),this.handleInfixNodes(n)},t.handleInfixNodes=function(e){for(var t,r=-1,a=0;a<e.length;a++)if("infix"===e[a].type){if(-1!==r)throw new n("only one infix operator per group",e[a].token);r=a,t=e[a].replaceWith}if(-1!==r&&t){var i,o,s=e.slice(0,r),l=e.slice(r+1);return i=1===s.length&&"ordgroup"===s[0].type?s[0]:{type:"ordgroup",mode:this.mode,body:s},o=1===l.length&&"ordgroup"===l[0].type?l[0]:{type:"ordgroup",mode:this.mode,body:l},["\\\\abovefrac"===t?this.callFunction(t,[i,e[r],o],[]):this.callFunction(t,[i,o],[])]}return e},t.handleSupSubscript=function(e){var t=this.fetch(),r=t.text;this.consume(),this.consumeSpaces();var a=this.parseGroup(e);if(!a)throw new n("Expected group after '"+r+"'",t);return a},t.formatUnsupportedCmd=function(e){for(var t=[],r=0;r<e.length;r++)t.push({type:"textord",mode:"text",text:e[r]});var n={type:"text",mode:this.mode,body:t};return{type:"color",mode:this.mode,color:this.settings.errorColor,body:[n]}},t.parseAtom=function(t){var r,a,i=this.parseGroup("atom",t);if("text"===this.mode)return i;for(;;){this.consumeSpaces();var o=this.fetch();if("\\limits"===o.text||"\\nolimits"===o.text){if(i&&"op"===i.type){var s="\\limits"===o.text;i.limits=s,i.alwaysHandleSupSub=!0}else{if(!i||"operatorname"!==i.type)throw new n("Limit controls must follow a math operator",o);i.alwaysHandleSupSub&&(i.limits="\\limits"===o.text)}this.consume()}else if("^"===o.text){if(r)throw new n("Double superscript",o);r=this.handleSupSubscript("superscript")}else if("_"===o.text){if(a)throw new n("Double subscript",o);a=this.handleSupSubscript("subscript")}else if("'"===o.text){if(r)throw new n("Double superscript",o);var l={type:"textord",mode:this.mode,text:"\\prime"},h=[l];for(this.consume();"'"===this.fetch().text;)h.push(l),this.consume();"^"===this.fetch().text&&h.push(this.handleSupSubscript("superscript")),r={type:"ordgroup",mode:this.mode,body:h}}else{if(!Xn[o.text])break;var c=Xn[o.text],m=Yn.test(o.text);for(this.consume();;){var u=this.fetch().text;if(!Xn[u])break;if(Yn.test(u)!==m)break;this.consume(),c+=Xn[u]}var p=new e(c,this.settings).parse();m?a={type:"ordgroup",mode:"math",body:p}:r={type:"ordgroup",mode:"math",body:p}}}return r||a?{type:"supsub",mode:this.mode,base:i,sup:r,sub:a}:i},t.parseFunction=function(e,t){var r=this.fetch(),a=r.text,i=qn[a];if(!i)return null;if(this.consume(),t&&"atom"!==t&&!i.allowedInArgument)throw new n("Got function '"+a+"' with no arguments"+(t?" as "+t:""),r);if("text"===this.mode&&!i.allowedInText)throw new n("Can't use function '"+a+"' in text mode",r);if("math"===this.mode&&!1===i.allowedInMath)throw new n("Can't use function '"+a+"' in math mode",r);var o=this.parseArguments(a,i),s=o.args,l=o.optArgs;return this.callFunction(a,s,l,r,e)},t.callFunction=function(e,t,r,a,i){var o={funcName:e,parser:this,token:a,breakOnTokenText:i},s=qn[e];if(s&&s.handler)return s.handler(o,t,r);throw new n("No function handler for "+e)},t.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(0===r)return{args:[],optArgs:[]};for(var a=[],i=[],o=0;o<r;o++){var s=t.argTypes&&t.argTypes[o],l=o<t.numOptionalArgs;(t.primitive&&null==s||"sqrt"===t.type&&1===o&&null==i[0])&&(s="primitive");var h=this.parseGroupOfType("argument to '"+e+"'",s,l);if(l)i.push(h);else{if(null==h)throw new n("Null argument, please report this as a bug");a.push(h)}}return{args:a,optArgs:i}},t.parseGroupOfType=function(e,t,r){switch(t){case"color":return this.parseColorGroup(r);case"size":return this.parseSizeGroup(r);case"url":return this.parseUrlGroup(r);case"math":case"text":return this.parseArgumentGroup(r,t);case"hbox":var a=this.parseArgumentGroup(r,"text");return null!=a?{type:"styling",mode:a.mode,body:[a],style:"text"}:null;case"raw":var i=this.parseStringGroup("raw",r);return null!=i?{type:"raw",mode:"text",string:i.text}:null;case"primitive":if(r)throw new n("A primitive argument cannot be optional");var o=this.parseGroup(e);if(null==o)throw new n("Expected group as "+e,this.fetch());return o;case"original":case null:case void 0:return this.parseArgumentGroup(r);default:throw new n("Unknown group type as "+e,this.fetch())}},t.consumeSpaces=function(){for(;" "===this.fetch().text;)this.consume()},t.parseStringGroup=function(e,t){var r=this.gullet.scanArgument(t);if(null==r)return null;for(var n,a="";"EOF"!==(n=this.fetch()).text;)a+=n.text,this.consume();return this.consume(),r.text=a,r},t.parseRegexGroup=function(e,t){for(var r,a=this.fetch(),i=a,o="";"EOF"!==(r=this.fetch()).text&&e.test(o+r.text);)o+=(i=r).text,this.consume();if(""===o)throw new n("Invalid "+t+": '"+a.text+"'",a);return a.range(i,o)},t.parseColorGroup=function(e){var t=this.parseStringGroup("color",e);if(null==t)return null;var r=/^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);if(!r)throw new n("Invalid color: '"+t.text+"'",t);var a=r[0];return/^[0-9a-f]{6}$/i.test(a)&&(a="#"+a),{type:"color-token",mode:this.mode,color:a}},t.parseSizeGroup=function(e){var t,r=!1;if(this.gullet.consumeSpaces(),!(t=e||"{"===this.gullet.future().text?this.parseStringGroup("size",e):this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")))return null;e||0!==t.text.length||(t.text="0pt",r=!0);var a=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!a)throw new n("Invalid size: '"+t.text+"'",t);var i={number:+(a[1]+a[2]),unit:a[3]};if(!V(i))throw new n("Invalid unit: '"+i.unit+"'",t);return{type:"size",mode:this.mode,value:i,isBlank:r}},t.parseUrlGroup=function(e){this.gullet.lexer.setCatcode("%",13),this.gullet.lexer.setCatcode("~",12);var t=this.parseStringGroup("url",e);if(this.gullet.lexer.setCatcode("%",14),this.gullet.lexer.setCatcode("~",13),null==t)return null;var r=t.text.replace(/\\([#$%&~_^{}])/g,"$1");return{type:"url",mode:this.mode,url:r}},t.parseArgumentGroup=function(e,t){var r=this.gullet.scanArgument(e);if(null==r)return null;var n=this.mode;t&&this.switchMode(t),this.gullet.beginGroup();var a=this.parseExpression(!1,"EOF");this.expect("EOF"),this.gullet.endGroup();var i={type:"ordgroup",mode:this.mode,loc:r.loc,body:a};return t&&this.switchMode(n),i},t.parseGroup=function(e,t){var r,a=this.fetch(),i=a.text;if("{"===i||"\\begingroup"===i){this.consume();var o="{"===i?"}":"\\endgroup";this.gullet.beginGroup();var s=this.parseExpression(!1,o),l=this.fetch();this.expect(o),this.gullet.endGroup(),r={type:"ordgroup",mode:this.mode,loc:Fr.range(a,l),body:s,semisimple:"\\begingroup"===i||void 0}}else if(null==(r=this.parseFunction(t,e)||this.parseSymbol())&&"\\"===i[0]&&!Gn.hasOwnProperty(i)){if(this.settings.throwOnError)throw new n("Undefined control sequence: "+i,a);r=this.formatUnsupportedCmd(i),this.consume()}return r},t.formLigatures=function(e){for(var t=e.length-1,r=0;r<t;++r){var n=e[r],a=n.text;"-"===a&&"-"===e[r+1].text&&(r+1<t&&"-"===e[r+2].text?(e.splice(r,3,{type:"textord",mode:"text",loc:Fr.range(n,e[r+2]),text:"---"}),t-=2):(e.splice(r,2,{type:"textord",mode:"text",loc:Fr.range(n,e[r+1]),text:"--"}),t-=1)),"'"!==a&&""!==a||e[r+1].text!==a||(e.splice(r,2,{type:"textord",mode:"text",loc:Fr.range(n,e[r+1]),text:a+a}),t-=1)}},t.parseSymbol=function(){var e=this.fetch(),t=e.text;if(/^\\verb[^a-zA-Z]/.test(t)){this.consume();var r=t.slice(5),a="*"===r.charAt(0);if(a&&(r=r.slice(1)),r.length<2||r.charAt(0)!==r.slice(-1))throw new n("\\verb assertion failed --\n                    please report what input caused this bug");return{type:"verb",mode:"text",body:r=r.slice(1,-1),star:a}}_n.hasOwnProperty(t[0])&&!ae[this.mode][t[0]]&&(this.settings.strict&&"math"===this.mode&&this.settings.reportNonstrict("unicodeTextInMathMode",'Accented Unicode text character "'+t[0]+'" used in math mode',e),t=_n[t[0]]+t.slice(1));var i,o=In.exec(t);if(o&&("i"===(t=t.substring(0,o.index))?t="\u0131":"j"===t&&(t="\u0237")),ae[this.mode][t]){this.settings.strict&&"math"===this.mode&&Ee.indexOf(t)>=0&&this.settings.reportNonstrict("unicodeTextInMathMode",'Latin-1/Unicode text character "'+t[0]+'" used in math mode',e);var s,l=ae[this.mode][t].group,h=Fr.range(e);if(te.hasOwnProperty(l)){var c=l;s={type:"atom",mode:this.mode,family:c,loc:h,text:t}}else s={type:l,mode:this.mode,loc:h,text:t};i=s}else{if(!(t.charCodeAt(0)>=128))return null;this.settings.strict&&(S(t.charCodeAt(0))?"math"===this.mode&&this.settings.reportNonstrict("unicodeTextInMathMode",'Unicode text character "'+t[0]+'" used in math mode',e):this.settings.reportNonstrict("unknownSymbol",'Unrecognized Unicode character "'+t[0]+'" ('+t.charCodeAt(0)+")",e)),i={type:"textord",mode:"text",loc:Fr.range(e),text:t}}if(this.consume(),o)for(var m=0;m<o[0].length;m++){var u=o[0][m];if(!Wn[u])throw new n("Unknown accent ' "+u+"'",e);var p=Wn[u][this.mode]||Wn[u].text;if(!p)throw new n("Accent "+u+" unsupported in "+this.mode+" mode",e);i={type:"accent",mode:this.mode,loc:Fr.range(e),label:p,isStretchy:!1,isShifty:!0,base:i}}return i},e}();jn.endOfExpression=["}","\\endgroup","\\end","\\right","&"];var $n=function(e,t){if(!("string"==typeof e||e instanceof String))throw new TypeError("KaTeX can only parse string typed expression");var r=new jn(e,t);delete r.gullet.macros.current["\\df@tag"];var a=r.parse();if(delete r.gullet.macros.current["\\current@color"],delete r.gullet.macros.current["\\color"],r.gullet.macros.get("\\df@tag")){if(!t.displayMode)throw new n("\\tag works only in display equations");a=[{type:"tag",mode:"text",body:a,tag:r.subparse([new Gr("\\df@tag")])}]}return a},Zn=function(e,t,r){t.textContent="";var n=Jn(e,r).toNode();t.appendChild(n)};"undefined"!=typeof document&&"CSS1Compat"!==document.compatMode&&("undefined"!=typeof console&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."),Zn=function(){throw new n("KaTeX doesn't work in quirks mode.")});var Kn=function(e,t,r){if(r.throwOnError||!(e instanceof n))throw e;var a=Ke.makeSpan(["katex-error"],[new Z(t)]);return a.setAttribute("title",e.toString()),a.setAttribute("style","color:"+r.errorColor),a},Jn=function(e,t){var r=new m(t);try{var n=$n(e,r);return Lt(n,e,r)}catch(t){return Kn(t,e,r)}},Qn={version:"0.16.3",render:Zn,renderToString:function(e,t){return Jn(e,t).toMarkup()},ParseError:n,SETTINGS_SCHEMA:h,__parse:function(e,t){var r=new m(t);return $n(e,r)},__renderToDomTree:Jn,__renderToHTMLTree:function(e,t){var r=new m(t);try{return function(e,t,r){var n=St(e,Ot(r)),a=Ke.makeSpan(["katex"],[n]);return Et(a,r)}($n(e,r),0,r)}catch(t){return Kn(t,e,r)}},__setFontMetrics:function(e,t){T[e]=t},__defineSymbol:ie,__defineMacro:Pr,__domTree:{Span:W,Anchor:_,SymbolNode:Z,SvgNode:K,PathNode:J,LineNode:Q}};return t=t.default}()}));

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function succeedImpl_2348811307(inputInHEX60gensym43_2348811308, valueInHEX60gensym43_2348811309, tailInHEX60gensym43_2348811310) {
  var result_2348811312 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2348811312 = nimCopy(result_2348811312, {kind: 0, value: nimCopy(null, valueInHEX60gensym43_2348811309, NTI33554449), tail: nimCopy(null, tailInHEX60gensym43_2348811310, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym43_2348811308, NTI33554449), expected: []}, NTI2348810372);

  return result_2348811312;

}

function failImpl_2348811314(inputInHEX60gensym43_2348811315, expectedInHEX60gensym43_2348811316, tailInHEX60gensym43_2348811317) {
  var result_2348811319 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2348811319 = nimCopy(result_2348811319, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym43_2348811316, NTI2348811301), tail: nimCopy(null, tailInHEX60gensym43_2348811317, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym43_2348811315, NTI33554449), value: []}, NTI2348810372);

  return result_2348811319;

}

function succeedImpl_2348811343(inputInHEX60gensym45_2348811344, valueInHEX60gensym45_2348811345, tailInHEX60gensym45_2348811346) {
  var result_2348811348 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348811348 = nimCopy(result_2348811348, {kind: 0, value: valueInHEX60gensym45_2348811345, tail: nimCopy(null, tailInHEX60gensym45_2348811346, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym45_2348811344, NTI33554449), expected: []}, NTI2348810488);

  return result_2348811348;

}

function failImpl_2348811350(inputInHEX60gensym45_2348811351, expectedInHEX60gensym45_2348811352, tailInHEX60gensym45_2348811353) {
  var result_2348811355 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348811355 = nimCopy(result_2348811355, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym45_2348811352, NTI2348811335), tail: nimCopy(null, tailInHEX60gensym45_2348811353, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym45_2348811351, NTI33554449), value: 0}, NTI2348810488);

  return result_2348811355;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_2348811540 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2348811540 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_2348811540;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_2348811540 = addInt(i_2348811540, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX5BHEX5D_754976027(s_754976030, x_754976031) {
  var result_754976032 = [];

    var a_754976034 = x_754976031.a;
    var L_754976036 = addInt(subInt(subInt((s_754976030).length, x_754976031.b), a_754976034), 1);
    result_754976032 = nimCopy(null, mnewString(chckRange(L_754976036, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_754976041 = 0;
      var i_2315259117 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2315259117 < L_754976036)) break Label3;
            i_754976041 = i_2315259117;
            result_754976032[chckIndx(i_754976041, 0, (result_754976032).length - 1)] = s_754976030[chckIndx(addInt(i_754976041, a_754976034), 0, (s_754976030).length - 1)];
            i_2315259117 = addInt(i_2315259117, 1);
          }
      };
    };

  return result_754976032;

}

function HEX2EHEX2E_973078632(a_973078635, b_973078636) {
  var result_973078639 = ({a: 0, b: 0});

    result_973078639 = nimCopy(result_973078639, {a: a_973078635, b: b_973078636}, NTI973078613);

  return result_973078639;

}

function nsuFindChar(s_754976404, sub_754976405, start_754976406, last_754976407) {
    var Temporary1;

  var result_754976408 = 0;

  BeforeRet: {
    result_754976408 = (-1);
    if ((last_754976407 < 0)) {
    Temporary1 = (s_754976404).length - 1;
    }
    else {
    Temporary1 = last_754976407;
    }
    
    var last_754976409 = Temporary1;
    Label2: {
      var iHEX60gensym176_754976423 = 0;
      var colontmp__2348811554 = 0;
      colontmp__2348811554 = start_754976406;
      var res_2348811555 = colontmp__2348811554;
      Label3: {
          Label4: while (true) {
          if (!(res_2348811555 <= last_754976409)) break Label4;
            iHEX60gensym176_754976423 = res_2348811555;
            if ((s_754976404[chckIndx(iHEX60gensym176_754976423, 0, (s_754976404).length - 1)] == sub_754976405)) {
            result_754976408 = iHEX60gensym176_754976423;
            break BeforeRet;
            }
            
            res_2348811555 = addInt(res_2348811555, 1);
          }
      };
    };
  };

  return result_754976408;

}

function nsuFindStrA(a_754976382, s_754976383, sub_754976384, start_754976385, last_754976386) {
    var Temporary1;

  var result_754976387 = 0;

  BeforeRet: {
    if ((last_754976386 < 0)) {
    Temporary1 = (s_754976383).length - 1;
    }
    else {
    Temporary1 = last_754976386;
    }
    
    var last_754976388 = Temporary1;
    var subLast_754976389 = subInt((sub_754976384).length, 1);
    if ((subLast_754976389 == (-1))) {
    result_754976387 = start_754976385;
    break BeforeRet;
    }
    
    result_754976387 = (-1);
    var skip_754976390 = start_754976385;
    Label2: {
        Label3: while (true) {
        if (!(subLast_754976389 <= subInt(last_754976388, skip_754976390))) break Label3;
          var i_754976391 = subLast_754976389;
          Label4: {
              Label5: while (true) {
              if (!(s_754976383[chckIndx(addInt(skip_754976390, i_754976391), 0, (s_754976383).length - 1)] == sub_754976384[chckIndx(i_754976391, 0, (sub_754976384).length - 1)])) break Label5;
                if ((i_754976391 == 0)) {
                result_754976387 = skip_754976390;
                break BeforeRet;
                }
                
                i_754976391 = subInt(i_754976391, 1);
              }
          };
          skip_754976390 = addInt(skip_754976390, a_754976382[chckIndx(s_754976383[chckIndx(addInt(skip_754976390, subLast_754976389), 0, (s_754976383).length - 1)], 0, (a_754976382).length - 1)]);
        }
    };
  };

  return result_754976387;

}

function fill_754976342(a_754976344, value_754976345) {
    var xHEX60gensym172_754976351 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_754976351 <= (a_754976344).length - 1)) break Label2;
          a_754976344[chckIndx(xHEX60gensym172_754976351, 0, (a_754976344).length - 1)] = value_754976345;
          xHEX60gensym172_754976351 = addInt(xHEX60gensym172_754976351, 1);
        }
    };

  
}

function nsuInitSkipTable(a_754976339, sub_754976340) {
    var m_754976341 = (sub_754976340).length;
    fill_754976342(a_754976339, m_754976341);
    Label1: {
      var i_754976361 = 0;
      var colontmp__2348811560 = 0;
      colontmp__2348811560 = subInt(m_754976341, 1);
      var i_2348811561 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2348811561 < colontmp__2348811560)) break Label3;
            i_754976361 = i_2348811561;
            a_754976339[chckIndx(sub_754976340[chckIndx(i_754976361, 0, (sub_754976340).length - 1)], 0, (a_754976339).length - 1)] = subInt(subInt(m_754976341, 1), i_754976361);
            i_2348811561 = addInt(i_2348811561, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_754976379) {
  var result_754976380 = [new Int32Array(256)];

    nsuInitSkipTable(result_754976380[0], sub_754976379);

  return result_754976380[0];

}

function nsuFindStr(s_754976441, sub_754976442, start_754976443, last_754976444) {
  var result_754976445 = 0;

  BeforeRet: {
    if ((subInt((s_754976441).length, start_754976443) < (sub_754976442).length)) {
    result_754976445 = (-1);
    break BeforeRet;
    }
    
    if (((sub_754976442).length == 1)) {
    result_754976445 = nsuFindChar(s_754976441, sub_754976442[chckIndx(0, 0, (sub_754976442).length - 1)], start_754976443, last_754976444);
    break BeforeRet;
    }
    
    result_754976445 = nsuFindStrA(nsuInitNewSkipTable(sub_754976442), s_754976441, sub_754976442, start_754976443, last_754976444);
  };

  return result_754976445;

}

function findBounds_2348810248(s_2348810249, r_2348810250) {
  var result_2348810251 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var m_2348810252 = (toJSStr(s_2348810249).match(r_2348810250) || []);
    if (!(((m_2348810252) == null))) {
    var start_2348810260 = nsuFindStr(s_2348810249, cstrToNimstr(m_2348810252[chckIndx(0, 0, (m_2348810252).length - 1)]), 0, (-1));
    var colontmp__2348811545 = start_2348810260;
    var colontmp__2348811546 = subInt(addInt(start_2348810260, ((m_2348810252[chckIndx(0, 0, (m_2348810252).length - 1)]) == null ? 0 : (m_2348810252[chckIndx(0, 0, (m_2348810252).length - 1)]).length)), 1);
    result_2348810251 = nimCopy(result_2348810251, {Field0: colontmp__2348811545, Field1: colontmp__2348811546}, NTI2348810246);
    break BeforeRet;
    }
    
    var colontmp__2348811547 = (-1);
    var colontmp__2348811548 = 0;
    result_2348810251 = nimCopy(result_2348810251, {Field0: colontmp__2348811547, Field1: colontmp__2348811548}, NTI2348810246);
    break BeforeRet;
  };

  return result_2348810251;

}

function invalidFormatString_754977083(formatstr_754977084) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_754977084 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet5[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_754974932, b_754974933) {
          var Temporary7;
          var Temporary8;

  var result_754974934 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_754974943 = (a_754974932).length;
    var bLenHEX60gensym24_754974944 = (b_754974933).length;
    var iHEX60gensym24_754974945 = 0;
    var jHEX60gensym24_754974946 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_754974945 < aLenHEX60gensym24_754974943) && (a_754974932[iHEX60gensym24_754974945] == 95))) break Label4;
                iHEX60gensym24_754974945 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_754974946 < bLenHEX60gensym24_754974944) && (b_754974933[jHEX60gensym24_754974946] == 95))) break Label6;
                jHEX60gensym24_754974946 += 1;
              }
          };
          if ((iHEX60gensym24_754974945 < aLenHEX60gensym24_754974943)) {
          Temporary7 = toLowerAscii_1107296257(a_754974932[iHEX60gensym24_754974945]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_754974957 = Temporary7;
          if ((jHEX60gensym24_754974946 < bLenHEX60gensym24_754974944)) {
          Temporary8 = toLowerAscii_1107296257(b_754974933[jHEX60gensym24_754974946]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_754974958 = Temporary8;
          result_754974934 = (aaHEX60gensym24_754974957 - bbHEX60gensym24_754974958);
          if (!((result_754974934 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_754974943 <= iHEX60gensym24_754974945)) {
          if ((bLenHEX60gensym24_754974944 <= jHEX60gensym24_754974946)) {
          result_754974934 = 0;
          break BeforeRet;
          }
          
          result_754974934 = (-1);
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_754974944 <= jHEX60gensym24_754974946)) {
          result_754974934 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_754974945 += 1;
          jHEX60gensym24_754974946 += 1;
        }
    };
  };

  return result_754974934;

}

function findNormalized_754977070(x_754977071, inArray_754977072) {
  var result_754977073 = 0;

  BeforeRet: {
    var i_754977074 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_754977074 < (inArray_754977072).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_754977071, inArray_754977072[chckIndx(i_754977074, 0, (inArray_754977072).length - 1)]) == 0)) {
          result_754977073 = i_754977074;
          break BeforeRet;
          }
          
          i_754977074 = addInt(i_754977074, 2);
        }
    };
    result_754977073 = (-1);
    break BeforeRet;
  };

  return result_754977073;

}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

    var first_33558084 = nimMax(first_33558081, 0);
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558090 = 0;
      var colontmp__1778384910 = 0;
      colontmp__1778384910 = subInt(L_33558085, 1);
      var res_1778384911 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1778384911 <= colontmp__1778384910)) break Label3;
            i_33558090 = res_1778384911;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            res_1778384911 = addInt(res_1778384911, 1);
          }
      };
    };

  return result_33558083;

}

function nsuAddf(s_754977087, s_754977087_Idx, formatstr_754977088, a_754977089) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_754977091 = 0;
    var num_754977092 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_754977091 < (formatstr_754977088).length)) break Label2;
          if (((formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)] == 36) && (addInt(i_754977091, 1) < (formatstr_754977088).length))) {
          switch (formatstr_754977088[chckIndx(addInt(i_754977091, 1), 0, (formatstr_754977088).length - 1)]) {
          case 35:
            if (((a_754977089).length - 1 < num_754977092)) {
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(num_754977092, 0, (a_754977089).length - 1)]);;
            i_754977091 = addInt(i_754977091, 2);
            num_754977092 = addInt(num_754977092, 1);
            break;
          case 36:
            addChar(s_754977087[s_754977087_Idx], 36);;
            i_754977091 = addInt(i_754977091, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_754977111 = 0;
            i_754977091 = addInt(i_754977091, 1);
            var negative_754977117 = (formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)] == 45);
            if (negative_754977117) {
            i_754977091 = addInt(i_754977091, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_754977091 < (formatstr_754977088).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet2[formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_754977111 = subInt(addInt(mulInt(j_754977111, 10), formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)]), 48);
                  i_754977091 = addInt(i_754977091, 1);
                }
            };
            if (!(negative_754977117)) {
            Temporary6 = subInt(j_754977111, 1);
            }
            else {
            Temporary6 = subInt((a_754977089).length, j_754977111);
            }
            
            var idx_754977142 = Temporary6;
            if (((idx_754977142 < 0) || ((a_754977089).length - 1 < idx_754977142))) {
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(idx_754977142, 0, (a_754977089).length - 1)]);;
            break;
          case 123:
            var j_754977146 = addInt(i_754977091, 2);
            var k_754977147 = 0;
            var negative_754977148 = (formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)] == 45);
            if (negative_754977148) {
            j_754977146 = addInt(j_754977146, 1);
            }
            
            var isNumber_754977154 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_754977146 < (formatstr_754977088).length) && !((ConstSet3[formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet4[formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)]] != undefined)) {
                  k_754977147 = subInt(addInt(mulInt(k_754977147, 10), formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)]), 48);
                  if ((isNumber_754977154 == 0)) {
                  isNumber_754977154 = 1;
                  }
                  
                  }
                  else {
                    isNumber_754977154 = (-1);
                  }
                  
                  j_754977146 = addInt(j_754977146, 1);
                }
            };
            if ((isNumber_754977154 == 1)) {
            if (!(negative_754977148)) {
            Temporary9 = subInt(k_754977147, 1);
            }
            else {
            Temporary9 = subInt((a_754977089).length, k_754977147);
            }
            
            var idx_754977177 = Temporary9;
            if (((idx_754977177 < 0) || ((a_754977089).length - 1 < idx_754977177))) {
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(idx_754977177, 0, (a_754977089).length - 1)]);;
            }
            else {
              var x_754977181 = findNormalized_754977070(substr_33558079(formatstr_754977088, addInt(i_754977091, 2), subInt(j_754977146, 1)), a_754977089);
              if (((0 <= x_754977181) && (x_754977181 < (a_754977089).length - 1))) {
              s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(addInt(x_754977181, 1), 0, (a_754977089).length - 1)]);;
              }
              else {
              invalidFormatString_754977083(formatstr_754977088);
              }
              
            }
            
            i_754977091 = addInt(j_754977146, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_754977185 = addInt(i_754977091, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_754977185 < (formatstr_754977088).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet6[formatstr_754977088[chckIndx(j_754977185, 0, (formatstr_754977088).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_754977185 = addInt(j_754977185, 1);
                }
            };
            var x_754977195 = findNormalized_754977070(substr_33558079(formatstr_754977088, addInt(i_754977091, 1), subInt(j_754977185, 1)), a_754977089);
            if (((0 <= x_754977195) && (x_754977195 < (a_754977089).length - 1))) {
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(addInt(x_754977195, 1), 0, (a_754977089).length - 1)]);;
            }
            else {
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            i_754977091 = j_754977185;
            break;
          default: 
            invalidFormatString_754977083(formatstr_754977088);
            break;
          }
          }
          else {
            addChar(s_754977087[s_754977087_Idx], formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)]);;
            i_754977091 = addInt(i_754977091, 1);
          }
          
        }
    };

  
}

function nsuFormatSingleElem(formatstr_754977216, a_754977217) {
  var result_754977218 = [[]];

    result_754977218[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_754977218, 0, formatstr_754977216, [nimCopy(null, a_754977217, NTI33554449)]);

  return result_754977218[0];

}

function HEX5BHEX5D_754975999(s_754976002, x_754976003) {
  var result_754976004 = [];

    var a_754976006 = x_754976003.a;
    var L_754976008 = addInt(subInt(x_754976003.b, a_754976006), 1);
    result_754976004 = nimCopy(null, mnewString(chckRange(L_754976008, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_754976013 = 0;
      var i_2348811573 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2348811573 < L_754976008)) break Label3;
            i_754976013 = i_2348811573;
            result_754976004[chckIndx(i_754976013, 0, (result_754976004).length - 1)] = s_754976002[chckIndx(addInt(i_754976013, a_754976006), 0, (s_754976002).length - 1)];
            i_2348811573 = addInt(i_2348811573, 1);
          }
      };
    };

  return result_754976004;

}

function HEX2EHEX2E_1056964656(a_1056964659, b_1056964660) {
  var result_1056964661 = ({a: 0, b: 0});

    result_1056964661 = nimCopy(result_1056964661, {a: a_1056964659, b: b_1056964660}, NTI822083653);

  return result_1056964661;

}

function regex_2348810802(expect_2348810803) {

function succeedImpl_2348810817(inputInHEX60gensym20_2348810818, valueInHEX60gensym20_2348810819, tailInHEX60gensym20_2348810820) {
  var result_2348810822 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2348810822 = nimCopy(result_2348810822, {kind: 0, value: nimCopy(null, valueInHEX60gensym20_2348810819, NTI33554449), tail: nimCopy(null, tailInHEX60gensym20_2348810820, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym20_2348810818, NTI33554449), expected: []}, NTI2348810372);

  return result_2348810822;

}

function failImpl_2348810824(inputInHEX60gensym20_2348810825, expectedInHEX60gensym20_2348810826, tailInHEX60gensym20_2348810827) {
  var result_2348810829 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2348810829 = nimCopy(result_2348810829, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym20_2348810826, NTI2348810726), tail: nimCopy(null, tailInHEX60gensym20_2348810827, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym20_2348810825, NTI33554449), value: []}, NTI2348810372);

  return result_2348810829;

}
      expect_2348810803 = nimCopy(null, expect_2348810803, NTI33554449);
      
function HEX3Aanonymous_2348810832(input_2348810833) {
        var result_2348810835 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2348810836 = succeedImpl_2348810817;
          var fail_2348810837 = failImpl_2348810824;
          var bounds_2348810838 = findBounds_2348810248(input_2348810833, expreg_2348810806);
          if (!((bounds_2348810838["Field0"] == 0))) {
          result_2348810835 = nimCopy(result_2348810835, fail_2348810837(input_2348810833, [nsuFormatSingleElem([109,97,116,99,104,32,102,111,114,32,114,101,103,101,120,32,39,36,49,39], expect_2348810803)], input_2348810833), NTI2348810372);
          break BeforeRet;
          }
          
          result_2348810835 = nimCopy(result_2348810835, succeed_2348810836(input_2348810833, HEX5BHEX5D_754975999(input_2348810833, HEX2EHEX2E_1056964656(0, bounds_2348810838["Field1"])), HEX5BHEX5D_754976027(input_2348810833, HEX2EHEX2E_973078632(addInt(bounds_2348810838["Field1"], 1), 1))), NTI2348810372);
        };

        return result_2348810835;

      }

  var result_2348810805 = null;

    var expreg_2348810806 = new RegExp(toJSStr(expect_2348810803));
    Label1: {
    };
    result_2348810805 = {body: HEX3Aanonymous_2348810832};

  return result_2348810805;

}

function parse_2348811258(p_2348811260, input_2348811261) {
  var result_2348811262 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2348811260.body == null)) {
    result_2348811262 = nimCopy(result_2348811262, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2348811261, NTI33554449), fromInput: nimCopy(null, input_2348811261, NTI33554449), value: 0}, NTI2348810488);
    break BeforeRet;
    }
    
    result_2348811262 = nimCopy(result_2348811262, p_2348811260.body(input_2348811261), NTI2348810488);
  };

  return result_2348811262;

}

function HEX26_2332033126(x_2332033128, y_2332033129) {
  var result_2332033130 = [];

    result_2332033130 = new Array(chckRange(addInt((x_2332033128).length, (y_2332033129).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2332033128).length, (y_2332033129).length), 0, 2147483647) ; ++i) { result_2332033130[i] = []; }    Label1: {
      var i_2332033148 = 0;
      var colontmp__2348811577 = 0;
      colontmp__2348811577 = subInt((x_2332033128).length, 1);
      var res_2348811578 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2348811578 <= colontmp__2348811577)) break Label3;
            i_2332033148 = res_2348811578;
            result_2332033130[chckIndx(i_2332033148, 0, (result_2332033130).length - 1)] = nimCopy(null, x_2332033128[chckIndx(i_2332033148, 0, (x_2332033128).length - 1)], NTI33554449);
            res_2348811578 = addInt(res_2348811578, 1);
          }
      };
    };
    Label4: {
      var i_2332033156 = 0;
      var colontmp__2348811581 = 0;
      colontmp__2348811581 = subInt((y_2332033129).length, 1);
      var res_2348811582 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2348811582 <= colontmp__2348811581)) break Label6;
            i_2332033156 = res_2348811582;
            result_2332033130[chckIndx(addInt(i_2332033156, (x_2332033128).length), 0, (result_2332033130).length - 1)] = nimCopy(null, y_2332033129[chckIndx(i_2332033156, 0, (y_2332033129).length - 1)], NTI33554449);
            res_2348811582 = addInt(res_2348811582, 1);
          }
      };
    };

  return result_2332033130;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

    var tmp_33557579 = false;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      result_33557578 = nimCopy(null, (HEX24_385875976(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557578;

}

function HEX7C_2348811408(a_2348811410, b_2348811411) {

function succeedImpl_2348811423(inputInHEX60gensym49_2348811424, valueInHEX60gensym49_2348811425, tailInHEX60gensym49_2348811426) {
  var result_2348811428 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348811428 = nimCopy(result_2348811428, {kind: 0, value: valueInHEX60gensym49_2348811425, tail: nimCopy(null, tailInHEX60gensym49_2348811426, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym49_2348811424, NTI33554449), expected: []}, NTI2348810488);

  return result_2348811428;

}

function failImpl_2348811430(inputInHEX60gensym49_2348811431, expectedInHEX60gensym49_2348811432, tailInHEX60gensym49_2348811433) {
  var result_2348811435 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348811435 = nimCopy(result_2348811435, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym49_2348811432, NTI2348811397), tail: nimCopy(null, tailInHEX60gensym49_2348811433, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym49_2348811431, NTI33554449), value: 0}, NTI2348810488);

  return result_2348811435;

}
      
function HEX3Aanonymous_2348811438(input_2348811439) {
          var Temporary1;
          var Temporary2;

        var result_2348811441 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2348811442 = succeedImpl_2348811423;
          var fail_2348811443 = failImpl_2348811430;
          var result1_2348811456 = parse_2348811258(a_2348811410, input_2348811439);
          if ((result1_2348811456.kind == 0)) {
          result_2348811441 = nimCopy(result_2348811441, result1_2348811456, NTI2348810488);
          break BeforeRet;
          }
          
          var result2_2348811473 = parse_2348811258(b_2348811411, input_2348811439);
          if ((result2_2348811473.kind == 0)) {
          result_2348811441 = nimCopy(result_2348811441, result2_2348811473, NTI2348810488);
          break BeforeRet;
          }
          
          var Temporary1 = result1_2348811456;
          if (ConstSet7[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
          var Temporary2 = result2_2348811473;
          if (ConstSet8[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
          result_2348811441 = nimCopy(result_2348811441, fail_2348811443(input_2348811439, HEX26_2332033126(Temporary1.expected, Temporary2.expected), input_2348811439), NTI2348810488);
        };

        return result_2348811441;

      }

  var result_2348811412 = null;

    Label1: {
    };
    result_2348811412 = {body: HEX3Aanonymous_2348811438};

  return result_2348811412;

}

function contains_2315257668(s_2315257672, value_2315257673) {
  var result_2315257674 = false;

    result_2315257674 = ((s_2315257672.a <= value_2315257673) && (value_2315257673 <= s_2315257672.b));

  return result_2315257674;

}

function nsuFormatOpenArray(formatstr_754977205, a_754977206) {
  var result_754977207 = [[]];

    result_754977207[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_754977207, 0, formatstr_754977205, a_754977206);

  return result_754977207[0];

}

function c_2348810736(expect_2348810738) {

function succeedImpl_2348810751(inputInHEX60gensym14_2348810752, valueInHEX60gensym14_2348810753, tailInHEX60gensym14_2348810754) {
  var result_2348810756 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348810756 = nimCopy(result_2348810756, {kind: 0, value: valueInHEX60gensym14_2348810753, tail: nimCopy(null, tailInHEX60gensym14_2348810754, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym14_2348810752, NTI33554449), expected: []}, NTI2348810488);

  return result_2348810756;

}

function failImpl_2348810758(inputInHEX60gensym14_2348810759, expectedInHEX60gensym14_2348810760, tailInHEX60gensym14_2348810761) {
  var result_2348810763 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348810763 = nimCopy(result_2348810763, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym14_2348810760, NTI2348810669), tail: nimCopy(null, tailInHEX60gensym14_2348810761, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym14_2348810759, NTI33554449), value: 0}, NTI2348810488);

  return result_2348810763;

}
      expect_2348810738 = nimCopy(null, expect_2348810738, NTI2315257676);
      
function HEX3Aanonymous_2348810766(input_2348810767) {
        var result_2348810769 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2348810770 = succeedImpl_2348810751;
          var fail_2348810771 = failImpl_2348810758;
          if (((0 < (input_2348810767).length) && contains_2315257668(expect_2348810738, input_2348810767[chckIndx(0, 0, (input_2348810767).length - 1)]))) {
          result_2348810769 = nimCopy(result_2348810769, succeed_2348810770(input_2348810767, input_2348810767[chckIndx(0, 0, (input_2348810767).length - 1)], HEX5BHEX5D_754976027(input_2348810767, HEX2EHEX2E_973078632(1, 1))), NTI2348810488);
          break BeforeRet;
          }
          
          result_2348810769 = nimCopy(result_2348810769, fail_2348810771(input_2348810767, [nsuFormatOpenArray([99,104,97,114,97,99,116,101,114,32,102,114,111,109,32,36,49,46,46,36,50], [nimCharToStr(expect_2348810738.a), nimCharToStr(expect_2348810738.b)])], input_2348810767), NTI2348810488);
        };

        return result_2348810769;

      }

  var result_2348810740 = null;

    Label1: {
    };
    result_2348810740 = {body: HEX3Aanonymous_2348810766};

  return result_2348810740;

}

function HEX2EHEX2E_2315257583(a_2315257586, b_2315257587) {
  var result_2315257590 = ({a: 0, b: 0});

    result_2315257590 = nimCopy(result_2315257590, {a: a_2315257586, b: b_2315257587}, NTI2315257676);

  return result_2315257590;

}

function HEX3Aanonymous_2348811322(input_2348811323) {
  var result_2348811325 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    var succeed_2348811326 = succeedImpl_2348811307;
    var fail_2348811327 = failImpl_2348811314;
    if ((0 < (input_2348811323).length)) {
    result_2348811325 = nimCopy(result_2348811325, fail_2348811327(input_2348811323, [[69,79,70]], input_2348811323), NTI2348810372);
    break BeforeRet;
    }
    
    result_2348811325 = nimCopy(result_2348811325, succeed_2348811326(input_2348811323, [], []), NTI2348810372);
  };

  return result_2348811325;

}

function HEX3Aanonymous_2348811358(input_2348811359) {
  var result_2348811361 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

  BeforeRet: {
    var succeed_2348811362 = succeedImpl_2348811343;
    var fail_2348811363 = failImpl_2348811350;
    if ((0 < (input_2348811359).length)) {
    result_2348811361 = nimCopy(result_2348811361, succeed_2348811362(input_2348811359, input_2348811359[chckIndx(0, 0, (input_2348811359).length - 1)], HEX5BHEX5D_754976027(input_2348811359, HEX2EHEX2E_973078632(1, 1))), NTI2348810488);
    break BeforeRet;
    }
    
    result_2348811361 = nimCopy(result_2348811361, fail_2348811363(input_2348811359, [[97,110,121,32,99,104,97,114,97,99,116,101,114]], input_2348811359), NTI2348810488);
  };

  return result_2348811361;

}
Label1: {
};
var eofImpl_2348811332 = {body: HEX3Aanonymous_2348811322};
Label2: {
};
var anyCharImpl_2348811386 = {body: HEX3Aanonymous_2348811358};
var eof_2348811387 = eofImpl_2348811332;
var anyChar_2348811388 = anyCharImpl_2348811386;
var whitespace_2348811389 = regex_2348810802([92,115,43]);
var letter_2348811482 = HEX7C_2348811408(c_2348810736(HEX2EHEX2E_2315257583(97, 122)), c_2348810736(HEX2EHEX2E_2315257583(65, 90)));
var digit_2348811488 = c_2348810736(HEX2EHEX2E_2315257583(48, 57));
var alphanumeric_2348811501 = HEX7C_2348811408(letter_2348811482, digit_2348811488);

function parse_2298481319(p_2298481321, input_2298481322) {
  var result_2298481323 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298481321.body == null)) {
    result_2298481323 = nimCopy(result_2298481323, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298481322, NTI33554449), fromInput: nimCopy(null, input_2298481322, NTI33554449), value: []}, NTI2298479942);
    break BeforeRet;
    }
    
    result_2298481323 = nimCopy(result_2298481323, p_2298481321.body(input_2298481322), NTI2298479942);
  };

  return result_2298481323;

}

function map_2298481501(a_2298481504, fn_2298481506) {

function succeedImpl_2298481518(inputInHEX60gensym43_2298481519, valueInHEX60gensym43_2298481520, tailInHEX60gensym43_2298481521) {
  var result_2298481523 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481523 = nimCopy(result_2298481523, {kind: 0, value: nimCopy(null, valueInHEX60gensym43_2298481520, NTI536871232), tail: nimCopy(null, tailInHEX60gensym43_2298481521, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym43_2298481519, NTI33554449), expected: []}, NTI2298479452);

  return result_2298481523;

}

function failImpl_2298481525(inputInHEX60gensym43_2298481526, expectedInHEX60gensym43_2298481527, tailInHEX60gensym43_2298481528) {
  var result_2298481530 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481530 = nimCopy(result_2298481530, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym43_2298481527, NTI2298480569), tail: nimCopy(null, tailInHEX60gensym43_2298481528, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym43_2298481526, NTI33554449), value: []}, NTI2298479452);

  return result_2298481530;

}
      
function HEX3Aanonymous_2298481533(input_2298481534) {
            var Temporary2;
          var Temporary3;

        var result_2298481536 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298481537 = succeedImpl_2298481518;
          var fail_2298481538 = failImpl_2298481525;
          Label1: {
            var tempHEX60gensym24_2298481551 = parse_2298481319(a_2298481504, input_2298481534);
            if ((tempHEX60gensym24_2298481551.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298481551;
            if (ConstSet9[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298481536 = nimCopy(result_2298481536, {kind: 1, fromInput: nimCopy(null, input_2298481534, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298481551.tail, NTI33554449), value: []}, NTI2298479452);
            break BeforeRet;
            }
            
          };
          var result1_2298481557 = nimCopy(null, tempHEX60gensym24_2298481551, NTI2298479942);
          var Temporary3 = result1_2298481557;
          if (ConstSet10[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298481536 = nimCopy(result_2298481536, succeed_2298481537(input_2298481534, fn_2298481506(Temporary3.value), result1_2298481557.tail), NTI2298479452);
          break BeforeRet;
        };

        return result_2298481536;

      }

  var result_2298481507 = null;

    Label1: {
    };
    result_2298481507 = {body: HEX3Aanonymous_2298481533};

  return result_2298481507;

}

function HEX26_2298481361(x_2298481363, y_2298481364) {
  var result_2298481365 = [];

    result_2298481365 = new Array(chckRange(addInt((x_2298481363).length, (y_2298481364).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2298481363).length, (y_2298481364).length), 0, 2147483647) ; ++i) { result_2298481365[i] = []; }    Label1: {
      var i_2298481384 = 0;
      var colontmp__2281701465 = 0;
      colontmp__2281701465 = subInt((x_2298481363).length, 1);
      var res_2281701466 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701466 <= colontmp__2281701465)) break Label3;
            i_2298481384 = res_2281701466;
            result_2298481365[chckIndx(i_2298481384, 0, (result_2298481365).length - 1)] = nimCopy(null, x_2298481363[chckIndx(i_2298481384, 0, (x_2298481363).length - 1)], NTI2298479446);
            res_2281701466 = addInt(res_2281701466, 1);
          }
      };
    };
    Label4: {
      var i_2298481392 = 0;
      var colontmp__2281701469 = 0;
      colontmp__2281701469 = subInt((y_2298481364).length, 1);
      var res_2281701470 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2281701470 <= colontmp__2281701469)) break Label6;
            i_2298481392 = res_2281701470;
            result_2298481365[chckIndx(addInt(i_2298481392, (x_2298481363).length), 0, (result_2298481365).length - 1)] = nimCopy(null, y_2298481364[chckIndx(i_2298481392, 0, (y_2298481364).length - 1)], NTI2298479446);
            res_2281701470 = addInt(res_2281701470, 1);
          }
      };
    };

  return result_2298481365;

}

function HEX26_2298481266(a_2298481271, b_2298481275) {

function succeedImpl_2298481290(inputInHEX60gensym37_2298481291, valueInHEX60gensym37_2298481292, tailInHEX60gensym37_2298481293) {
  var result_2298481295 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481295 = nimCopy(result_2298481295, {kind: 0, value: nimCopy(null, valueInHEX60gensym37_2298481292, NTI2298480375), tail: nimCopy(null, tailInHEX60gensym37_2298481293, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym37_2298481291, NTI33554449), expected: []}, NTI2298479942);

  return result_2298481295;

}

function failImpl_2298481297(inputInHEX60gensym37_2298481298, expectedInHEX60gensym37_2298481299, tailInHEX60gensym37_2298481300) {
  var result_2298481302 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481302 = nimCopy(result_2298481302, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym37_2298481299, NTI2298480381), tail: nimCopy(null, tailInHEX60gensym37_2298481300, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym37_2298481298, NTI33554449), value: []}, NTI2298479942);

  return result_2298481302;

}
      
function HEX3Aanonymous_2298481305(input_2298481306) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_2298481308 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298481309 = succeedImpl_2298481290;
          var fail_2298481310 = failImpl_2298481297;
          Label1: {
            var tempHEX60gensym26_2298481335 = parse_2298481319(a_2298481271, input_2298481306);
            if ((tempHEX60gensym26_2298481335.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_2298481335;
            if (ConstSet11[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298481308 = nimCopy(result_2298481308, {kind: 1, fromInput: nimCopy(null, input_2298481306, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym26_2298481335.tail, NTI33554449), value: []}, NTI2298479942);
            break BeforeRet;
            }
            
          };
          var result1_2298481341 = nimCopy(null, tempHEX60gensym26_2298481335, NTI2298479942);
          Label3: {
            var tempHEX60gensym28_2298481354 = parse_2298481319(b_2298481275, result1_2298481341.tail);
            if ((tempHEX60gensym28_2298481354.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_2298481354;
            if (ConstSet12[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298481308 = nimCopy(result_2298481308, {kind: 1, fromInput: nimCopy(null, input_2298481306, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym28_2298481354.tail, NTI33554449), value: []}, NTI2298479942);
            break BeforeRet;
            }
            
          };
          var result2_2298481360 = nimCopy(null, tempHEX60gensym28_2298481354, NTI2298479942);
          var Temporary5 = result1_2298481341;
          if (ConstSet13[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          var Temporary6 = result2_2298481360;
          if (ConstSet14[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2348810258)); }
          result_2298481308 = nimCopy(result_2298481308, succeed_2298481309(input_2298481306, HEX26_2298481361(Temporary5.value, Temporary6.value), result2_2298481360.tail), NTI2298479942);
          break BeforeRet;
        };

        return result_2298481308;

      }

  var result_2298481279 = null;

    Label1: {
    };
    result_2298481279 = {body: HEX3Aanonymous_2298481305};

  return result_2298481279;

}

function parse_2298480719(p_2298480721, input_2298480722) {
  var result_2298480723 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298480721.body == null)) {
    result_2298480723 = nimCopy(result_2298480723, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298480722, NTI33554449), fromInput: nimCopy(null, input_2298480722, NTI33554449), value: []}, NTI2298479452);
    break BeforeRet;
    }
    
    result_2298480723 = nimCopy(result_2298480723, p_2298480721.body(input_2298480722), NTI2298479452);
  };

  return result_2298480723;

}

function map_2298481015(a_2298481018, fn_2298481020) {

function succeedImpl_2298481032(inputInHEX60gensym33_2298481033, valueInHEX60gensym33_2298481034, tailInHEX60gensym33_2298481035) {
  var result_2298481037 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481037 = nimCopy(result_2298481037, {kind: 0, value: nimCopy(null, valueInHEX60gensym33_2298481034, NTI2298480073), tail: nimCopy(null, tailInHEX60gensym33_2298481035, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym33_2298481033, NTI33554449), expected: []}, NTI2298479942);

  return result_2298481037;

}

function failImpl_2298481039(inputInHEX60gensym33_2298481040, expectedInHEX60gensym33_2298481041, tailInHEX60gensym33_2298481042) {
  var result_2298481044 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481044 = nimCopy(result_2298481044, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym33_2298481041, NTI2298480129), tail: nimCopy(null, tailInHEX60gensym33_2298481042, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym33_2298481040, NTI33554449), value: []}, NTI2298479942);

  return result_2298481044;

}
      
function HEX3Aanonymous_2298481047(input_2298481048) {
            var Temporary2;
          var Temporary3;

        var result_2298481050 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298481051 = succeedImpl_2298481032;
          var fail_2298481052 = failImpl_2298481039;
          Label1: {
            var tempHEX60gensym24_2298481065 = parse_2298480719(a_2298481018, input_2298481048);
            if ((tempHEX60gensym24_2298481065.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298481065;
            if (ConstSet15[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298481050 = nimCopy(result_2298481050, {kind: 1, fromInput: nimCopy(null, input_2298481048, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298481065.tail, NTI33554449), value: []}, NTI2298479942);
            break BeforeRet;
            }
            
          };
          var result1_2298481071 = nimCopy(null, tempHEX60gensym24_2298481065, NTI2298479452);
          var Temporary3 = result1_2298481071;
          if (ConstSet16[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298481050 = nimCopy(result_2298481050, succeed_2298481051(input_2298481048, fn_2298481020(Temporary3.value), result1_2298481071.tail), NTI2298479942);
          break BeforeRet;
        };

        return result_2298481050;

      }

  var result_2298481021 = null;

    Label1: {
    };
    result_2298481021 = {body: HEX3Aanonymous_2298481047};

  return result_2298481021;

}

function nop_2298480252() {

function succeedImpl_2298480265(inputInHEX60gensym23_2298480266, valueInHEX60gensym23_2298480267, tailInHEX60gensym23_2298480268) {
  var result_2298480270 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480270 = nimCopy(result_2298480270, {kind: 0, value: nimCopy(null, valueInHEX60gensym23_2298480267, NTI2298479506), tail: nimCopy(null, tailInHEX60gensym23_2298480268, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym23_2298480266, NTI33554449), expected: []}, NTI2298479452);

  return result_2298480270;

}

function failImpl_2298480298(inputInHEX60gensym23_2298480299, expectedInHEX60gensym23_2298480300, tailInHEX60gensym23_2298480301) {
  var result_2298480303 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480303 = nimCopy(result_2298480303, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym23_2298480300, NTI2298479536), tail: nimCopy(null, tailInHEX60gensym23_2298480301, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym23_2298480299, NTI33554449), value: []}, NTI2298479452);

  return result_2298480303;

}
      
function HEX3Aanonymous_2298480306(input_2298480307) {
        var result_2298480309 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_2298480310 = succeedImpl_2298480265;
          var fail_2298480311 = failImpl_2298480298;
          result_2298480309 = nimCopy(result_2298480309, succeed_2298480310(input_2298480307, [], input_2298480307), NTI2298479452);

        return result_2298480309;

      }

  var result_2298480254 = null;

    Label1: {
    };
    result_2298480254 = {body: HEX3Aanonymous_2298480306};

  return result_2298480254;

}

function parse_2298480475(p_2298480477, input_2298480478) {
  var result_2298480479 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298480477.body == null)) {
    result_2298480479 = nimCopy(result_2298480479, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298480478, NTI33554449), fromInput: nimCopy(null, input_2298480478, NTI33554449), value: []}, NTI2348810372);
    break BeforeRet;
    }
    
    result_2298480479 = nimCopy(result_2298480479, p_2298480477.body(input_2298480478), NTI2348810372);
  };

  return result_2298480479;

}

function map_2298480429(a_2298480432, fn_2298480434) {

function succeedImpl_2298480446(inputInHEX60gensym25_2298480447, valueInHEX60gensym25_2298480448, tailInHEX60gensym25_2298480449) {
  var result_2298480451 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480451 = nimCopy(result_2298480451, {kind: 0, value: nimCopy(null, valueInHEX60gensym25_2298480448, NTI1996488834), tail: nimCopy(null, tailInHEX60gensym25_2298480449, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym25_2298480447, NTI33554449), expected: []}, NTI2298479452);

  return result_2298480451;

}

function failImpl_2298480453(inputInHEX60gensym25_2298480454, expectedInHEX60gensym25_2298480455, tailInHEX60gensym25_2298480456) {
  var result_2298480458 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480458 = nimCopy(result_2298480458, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym25_2298480455, NTI2298479659), tail: nimCopy(null, tailInHEX60gensym25_2298480456, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym25_2298480454, NTI33554449), value: []}, NTI2298479452);

  return result_2298480458;

}
      
function HEX3Aanonymous_2298480461(input_2298480462) {
            var Temporary2;
          var Temporary3;

        var result_2298480464 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298480465 = succeedImpl_2298480446;
          var fail_2298480466 = failImpl_2298480453;
          Label1: {
            var tempHEX60gensym24_2298480491 = parse_2298480475(a_2298480432, input_2298480462);
            if ((tempHEX60gensym24_2298480491.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298480491;
            if (ConstSet17[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298480464 = nimCopy(result_2298480464, {kind: 1, fromInput: nimCopy(null, input_2298480462, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298480491.tail, NTI33554449), value: []}, NTI2298479452);
            break BeforeRet;
            }
            
          };
          var result1_2298480497 = nimCopy(null, tempHEX60gensym24_2298480491, NTI2348810372);
          var Temporary3 = result1_2298480497;
          if (ConstSet18[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298480464 = nimCopy(result_2298480464, succeed_2298480465(input_2298480462, fn_2298480434(Temporary3.value), result1_2298480497.tail), NTI2298479452);
          break BeforeRet;
        };

        return result_2298480464;

      }

  var result_2298480435 = null;

    Label1: {
    };
    result_2298480435 = {body: HEX3Aanonymous_2298480461};

  return result_2298480435;

}

function HEX2A_2298480244(a_2298480246, n_2298480247) {
    var Temporary1;
      
function HEX3Aanonymous_2298480392(x_2298480412) {
        var result_2298480415 = [];

          result_2298480415 = nimCopy(null, [nimCopy(null, x_2298480412, NTI33554449)], NTI1996488834);

        return result_2298480415;

      }

function succeedImpl_2298480508(inputInHEX60gensym26_2298480509, valueInHEX60gensym26_2298480510, tailInHEX60gensym26_2298480511) {
  var result_2298480513 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480513 = nimCopy(result_2298480513, {kind: 0, value: nimCopy(null, valueInHEX60gensym26_2298480510, NTI2298479711), tail: nimCopy(null, tailInHEX60gensym26_2298480511, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym26_2298480509, NTI33554449), expected: []}, NTI2298479452);

  return result_2298480513;

}

function failImpl_2298480515(inputInHEX60gensym26_2298480516, expectedInHEX60gensym26_2298480517, tailInHEX60gensym26_2298480518) {
  var result_2298480520 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480520 = nimCopy(result_2298480520, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym26_2298480517, NTI2298479717), tail: nimCopy(null, tailInHEX60gensym26_2298480518, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym26_2298480516, NTI33554449), value: []}, NTI2298479452);

  return result_2298480520;

}
        
function HEX3Aanonymous_2298480523(input_2298480524) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_2298480526 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: {
            var succeed_2298480527 = succeedImpl_2298480508;
            var fail_2298480528 = failImpl_2298480515;
            Label1: {
              var tempHEX60gensym38_2298480541 = parse_2298480475(a_2298480246, input_2298480524);
              if ((tempHEX60gensym38_2298480541.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_2298480541;
              if (ConstSet19[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
              result_2298480526 = nimCopy(result_2298480526, {kind: 1, fromInput: nimCopy(null, input_2298480524, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym38_2298480541.tail, NTI33554449), value: []}, NTI2298479452);
              break BeforeRet;
              }
              
            };
            var result1_2298480547 = nimCopy(null, tempHEX60gensym38_2298480541, NTI2348810372);
            var Temporary3 = result1_2298480547;
            if (ConstSet20[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
            var outputs_2298480552 = [nimCopy(null, Temporary3.value, NTI33554449)];
            var lastTail_2298480553 = nimCopy(null, result1_2298480547.tail, NTI33554449);
            Label4: {
              var i_2298480559 = 0;
              var res_2281701478 = 2;
              Label5: {
                  Label6: while (true) {
                  if (!(res_2281701478 <= n_2298480247)) break Label6;
                    i_2298480559 = res_2281701478;
                    Label7: {
                      var tempHEX60gensym40_2298480572 = parse_2298480475(a_2298480246, result1_2298480547.tail);
                      if ((tempHEX60gensym40_2298480572.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_2298480572;
                      if (ConstSet21[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2348810258)); }
                      result_2298480526 = nimCopy(result_2298480526, {kind: 1, fromInput: nimCopy(null, input_2298480524, NTI33554449), expected: nimCopy(null, Temporary8.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym40_2298480572.tail, NTI33554449), value: []}, NTI2298479452);
                      break BeforeRet;
                      }
                      
                    };
                    result1_2298480547 = nimCopy(result1_2298480547, tempHEX60gensym40_2298480572, NTI2348810372);
                    if (eqStrings(result1_2298480547.tail, lastTail_2298480553)) {
                    break Label4;
                    }
                    
                    lastTail_2298480553 = nimCopy(null, result1_2298480547.tail, NTI33554449);
                    var Temporary9 = result1_2298480547;
                    if (ConstSet22[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2348810258)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI33554449);
                    outputs_2298480552.push(Temporary10);;
                    res_2281701478 = addInt(res_2281701478, 1);
                  }
              };
            };
            result_2298480526 = nimCopy(result_2298480526, succeed_2298480527(input_2298480524, outputs_2298480552, result1_2298480547.tail), NTI2298479452);
          };

          return result_2298480526;

        }

  var result_2298480251 = null;

  BeforeRet: {
    if (    n_2298480247 == 0    ){      result_2298480251 = nop_2298480252();
      break BeforeRet;
      }
    else if (    n_2298480247 == 1    ){      result_2298480251 = map_2298480429(a_2298480246, HEX3Aanonymous_2298480392);
      break BeforeRet;
      }
    else{
      Label2: {
      };
      Temporary1 = {body: HEX3Aanonymous_2298480523};
      }
    result_2298480251 = Temporary1;
  };

  return result_2298480251;

}

function nop_2298480790() {

function succeedImpl_2298480803(inputInHEX60gensym31_2298480804, valueInHEX60gensym31_2298480805, tailInHEX60gensym31_2298480806) {
  var result_2298480808 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480808 = nimCopy(result_2298480808, {kind: 0, value: nimCopy(null, valueInHEX60gensym31_2298480805, NTI2298479949), tail: nimCopy(null, tailInHEX60gensym31_2298480806, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym31_2298480804, NTI33554449), expected: []}, NTI2298479942);

  return result_2298480808;

}

function failImpl_2298480852(inputInHEX60gensym31_2298480853, expectedInHEX60gensym31_2298480854, tailInHEX60gensym31_2298480855) {
  var result_2298480857 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480857 = nimCopy(result_2298480857, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym31_2298480854, NTI2298479988), tail: nimCopy(null, tailInHEX60gensym31_2298480855, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym31_2298480853, NTI33554449), value: []}, NTI2298479942);

  return result_2298480857;

}
      
function HEX3Aanonymous_2298480860(input_2298480861) {
        var result_2298480863 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_2298480864 = succeedImpl_2298480803;
          var fail_2298480865 = failImpl_2298480852;
          result_2298480863 = nimCopy(result_2298480863, succeed_2298480864(input_2298480861, [], input_2298480861), NTI2298479942);

        return result_2298480863;

      }

  var result_2298480792 = null;

    Label1: {
    };
    result_2298480792 = {body: HEX3Aanonymous_2298480860};

  return result_2298480792;

}

function HEX2A_2298480777(a_2298480779, n_2298480780) {
    var Temporary1;
      
function HEX3Aanonymous_2298480962(x_2298480998) {
        var result_2298481001 = [];

          result_2298481001 = nimCopy(null, [nimCopy(null, x_2298480998, NTI2298479446)], NTI2298480073);

        return result_2298481001;

      }

function succeedImpl_2298481082(inputInHEX60gensym34_2298481083, valueInHEX60gensym34_2298481084, tailInHEX60gensym34_2298481085) {
  var result_2298481087 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481087 = nimCopy(result_2298481087, {kind: 0, value: nimCopy(null, valueInHEX60gensym34_2298481084, NTI2298480169), tail: nimCopy(null, tailInHEX60gensym34_2298481085, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym34_2298481083, NTI33554449), expected: []}, NTI2298479942);

  return result_2298481087;

}

function failImpl_2298481089(inputInHEX60gensym34_2298481090, expectedInHEX60gensym34_2298481091, tailInHEX60gensym34_2298481092) {
  var result_2298481094 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481094 = nimCopy(result_2298481094, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym34_2298481091, NTI2298480175), tail: nimCopy(null, tailInHEX60gensym34_2298481092, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym34_2298481090, NTI33554449), value: []}, NTI2298479942);

  return result_2298481094;

}
        
function HEX3Aanonymous_2298481097(input_2298481098) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_2298481100 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: {
            var succeed_2298481101 = succeedImpl_2298481082;
            var fail_2298481102 = failImpl_2298481089;
            Label1: {
              var tempHEX60gensym38_2298481115 = parse_2298480719(a_2298480779, input_2298481098);
              if ((tempHEX60gensym38_2298481115.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_2298481115;
              if (ConstSet23[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
              result_2298481100 = nimCopy(result_2298481100, {kind: 1, fromInput: nimCopy(null, input_2298481098, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym38_2298481115.tail, NTI33554449), value: []}, NTI2298479942);
              break BeforeRet;
              }
              
            };
            var result1_2298481121 = nimCopy(null, tempHEX60gensym38_2298481115, NTI2298479452);
            var Temporary3 = result1_2298481121;
            if (ConstSet24[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
            var outputs_2298481126 = [nimCopy(null, Temporary3.value, NTI2298479446)];
            var lastTail_2298481127 = nimCopy(null, result1_2298481121.tail, NTI33554449);
            Label4: {
              var i_2298481133 = 0;
              var res_2281701487 = 2;
              Label5: {
                  Label6: while (true) {
                  if (!(res_2281701487 <= n_2298480780)) break Label6;
                    i_2298481133 = res_2281701487;
                    Label7: {
                      var tempHEX60gensym40_2298481146 = parse_2298480719(a_2298480779, result1_2298481121.tail);
                      if ((tempHEX60gensym40_2298481146.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_2298481146;
                      if (ConstSet25[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2348810258)); }
                      result_2298481100 = nimCopy(result_2298481100, {kind: 1, fromInput: nimCopy(null, input_2298481098, NTI33554449), expected: nimCopy(null, Temporary8.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym40_2298481146.tail, NTI33554449), value: []}, NTI2298479942);
                      break BeforeRet;
                      }
                      
                    };
                    result1_2298481121 = nimCopy(result1_2298481121, tempHEX60gensym40_2298481146, NTI2298479452);
                    if (eqStrings(result1_2298481121.tail, lastTail_2298481127)) {
                    break Label4;
                    }
                    
                    lastTail_2298481127 = nimCopy(null, result1_2298481121.tail, NTI33554449);
                    var Temporary9 = result1_2298481121;
                    if (ConstSet26[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2348810258)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI2298479446);
                    outputs_2298481126.push(Temporary10);;
                    res_2281701487 = addInt(res_2281701487, 1);
                  }
              };
            };
            result_2298481100 = nimCopy(result_2298481100, succeed_2298481101(input_2298481098, outputs_2298481126, result1_2298481121.tail), NTI2298479942);
          };

          return result_2298481100;

        }

  var result_2298480789 = null;

  BeforeRet: {
    if (    n_2298480780 == 0    ){      result_2298480789 = nop_2298480790();
      break BeforeRet;
      }
    else if (    n_2298480780 == 1    ){      result_2298480789 = map_2298481015(a_2298480779, HEX3Aanonymous_2298480962);
      break BeforeRet;
      }
    else{
      Label2: {
      };
      Temporary1 = {body: HEX3Aanonymous_2298481097};
      }
    result_2298480789 = Temporary1;
  };

  return result_2298480789;

}

function HEX7C_2298480675(a_2298480677, b_2298480678) {

function succeedImpl_2298480690(inputInHEX60gensym30_2298480691, valueInHEX60gensym30_2298480692, tailInHEX60gensym30_2298480693) {
  var result_2298480695 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480695 = nimCopy(result_2298480695, {kind: 0, value: nimCopy(null, valueInHEX60gensym30_2298480692, NTI2298479446), tail: nimCopy(null, tailInHEX60gensym30_2298480693, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym30_2298480691, NTI33554449), expected: []}, NTI2298479452);

  return result_2298480695;

}

function failImpl_2298480697(inputInHEX60gensym30_2298480698, expectedInHEX60gensym30_2298480699, tailInHEX60gensym30_2298480700) {
  var result_2298480702 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298480702 = nimCopy(result_2298480702, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym30_2298480699, NTI2298479887), tail: nimCopy(null, tailInHEX60gensym30_2298480700, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym30_2298480698, NTI33554449), value: []}, NTI2298479452);

  return result_2298480702;

}
      
function HEX3Aanonymous_2298480705(input_2298480706) {
          var Temporary1;
          var Temporary2;

        var result_2298480708 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298480709 = succeedImpl_2298480690;
          var fail_2298480710 = failImpl_2298480697;
          var result1_2298480735 = parse_2298480719(a_2298480677, input_2298480706);
          if ((result1_2298480735.kind == 0)) {
          result_2298480708 = nimCopy(result_2298480708, result1_2298480735, NTI2298479452);
          break BeforeRet;
          }
          
          var result2_2298480752 = parse_2298480719(b_2298480678, input_2298480706);
          if ((result2_2298480752.kind == 0)) {
          result_2298480708 = nimCopy(result_2298480708, result2_2298480752, NTI2298479452);
          break BeforeRet;
          }
          
          var Temporary1 = result1_2298480735;
          if (ConstSet27[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
          var Temporary2 = result2_2298480752;
          if (ConstSet28[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
          result_2298480708 = nimCopy(result_2298480708, fail_2298480710(input_2298480706, HEX26_2332033126(Temporary1.expected, Temporary2.expected), input_2298480706), NTI2298479452);
        };

        return result_2298480708;

      }

  var result_2298480679 = null;

    Label1: {
    };
    result_2298480679 = {body: HEX3Aanonymous_2298480705};

  return result_2298480679;

}

function newSeq_536871460(len_536871462) {
  var result_536871463 = [];

    result_536871463 = new Array(len_536871462); for (var i = 0 ; i < len_536871462 ; ++i) { result_536871463[i] = []; }
  return result_536871463;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function parse_2298482153(p_2298482155, input_2298482156) {
  var result_2298482157 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298482155.body == null)) {
    result_2298482157 = nimCopy(result_2298482157, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298482156, NTI33554449), fromInput: nimCopy(null, input_2298482156, NTI33554449), value: []}, NTI2298480618);
    break BeforeRet;
    }
    
    result_2298482157 = nimCopy(result_2298482157, p_2298482155.body(input_2298482156), NTI2298480618);
  };

  return result_2298482157;

}

function map_2298483075(a_2298483078, fn_2298483080) {

function succeedImpl_2298483092(inputInHEX60gensym70_2298483093, valueInHEX60gensym70_2298483094, tailInHEX60gensym70_2298483095) {
  var result_2298483097 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298483097 = nimCopy(result_2298483097, {kind: 0, value: nimCopy(null, valueInHEX60gensym70_2298483094, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym70_2298483095, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym70_2298483093, NTI33554449), expected: []}, NTI2298480603);

  return result_2298483097;

}

function failImpl_2298483099(inputInHEX60gensym70_2298483100, expectedInHEX60gensym70_2298483101, tailInHEX60gensym70_2298483102) {
  var result_2298483104 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298483104 = nimCopy(result_2298483104, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym70_2298483101, NTI2298481869), tail: nimCopy(null, tailInHEX60gensym70_2298483102, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym70_2298483100, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298483104;

}
      
function HEX3Aanonymous_2298483107(input_2298483108) {
            var Temporary2;
          var Temporary3;

        var result_2298483110 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483111 = succeedImpl_2298483092;
          var fail_2298483112 = failImpl_2298483099;
          Label1: {
            var tempHEX60gensym24_2298483125 = parse_2298482153(a_2298483078, input_2298483108);
            if ((tempHEX60gensym24_2298483125.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298483125;
            if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483110 = nimCopy(result_2298483110, {kind: 1, fromInput: nimCopy(null, input_2298483108, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298483125.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298483131 = nimCopy(null, tempHEX60gensym24_2298483125, NTI2298480618);
          var Temporary3 = result1_2298483131;
          if (ConstSet30[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298483110 = nimCopy(result_2298483110, succeed_2298483111(input_2298483108, fn_2298483080(Temporary3.value), result1_2298483131.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298483110;

      }

  var result_2298483081 = null;

    Label1: {
    };
    result_2298483081 = {body: HEX3Aanonymous_2298483107};

  return result_2298483081;

}

function parse_2298482753(p_2298482755, input_2298482756) {
  var result_2298482757 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298482755.body == null)) {
    result_2298482757 = nimCopy(result_2298482757, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298482756, NTI33554449), fromInput: nimCopy(null, input_2298482756, NTI33554449), value: []}, NTI2298481136);
    break BeforeRet;
    }
    
    result_2298482757 = nimCopy(result_2298482757, p_2298482755.body(input_2298482756), NTI2298481136);
  };

  return result_2298482757;

}

function map_2298482981(a_2298482984, fn_2298482986) {

function succeedImpl_2298482998(inputInHEX60gensym69_2298482999, valueInHEX60gensym69_2298483000, tailInHEX60gensym69_2298483001) {
  var result_2298483003 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298483003 = nimCopy(result_2298483003, {kind: 0, value: nimCopy(null, valueInHEX60gensym69_2298483000, NTI2332033238), tail: nimCopy(null, tailInHEX60gensym69_2298483001, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym69_2298482999, NTI33554449), expected: []}, NTI2298480618);

  return result_2298483003;

}

function failImpl_2298483005(inputInHEX60gensym69_2298483006, expectedInHEX60gensym69_2298483007, tailInHEX60gensym69_2298483008) {
  var result_2298483010 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298483010 = nimCopy(result_2298483010, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym69_2298483007, NTI2298481793), tail: nimCopy(null, tailInHEX60gensym69_2298483008, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym69_2298483006, NTI33554449), value: []}, NTI2298480618);

  return result_2298483010;

}
      
function HEX3Aanonymous_2298483013(input_2298483014) {
            var Temporary2;
          var Temporary3;

        var result_2298483016 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483017 = succeedImpl_2298482998;
          var fail_2298483018 = failImpl_2298483005;
          Label1: {
            var tempHEX60gensym24_2298483031 = parse_2298482753(a_2298482984, input_2298483014);
            if ((tempHEX60gensym24_2298483031.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298483031;
            if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483016 = nimCopy(result_2298483016, {kind: 1, fromInput: nimCopy(null, input_2298483014, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298483031.tail, NTI33554449), value: []}, NTI2298480618);
            break BeforeRet;
            }
            
          };
          var result1_2298483037 = nimCopy(null, tempHEX60gensym24_2298483031, NTI2298481136);
          var Temporary3 = result1_2298483037;
          if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298483016 = nimCopy(result_2298483016, succeed_2298483017(input_2298483014, fn_2298482986(Temporary3.value), result1_2298483037.tail), NTI2298480618);
          break BeforeRet;
        };

        return result_2298483016;

      }

  var result_2298482987 = null;

    Label1: {
    };
    result_2298482987 = {body: HEX3Aanonymous_2298483013};

  return result_2298482987;

}

function HEX26_2298482795(x_2298482797, y_2298482798) {
  var result_2298482799 = [];

    result_2298482799 = new Array(chckRange(addInt((x_2298482797).length, (y_2298482798).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2298482797).length, (y_2298482798).length), 0, 2147483647) ; ++i) { result_2298482799[i] = []; }    Label1: {
      var i_2298482818 = 0;
      var colontmp__2281701504 = 0;
      colontmp__2281701504 = subInt((x_2298482797).length, 1);
      var res_2281701505 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701505 <= colontmp__2281701504)) break Label3;
            i_2298482818 = res_2281701505;
            result_2298482799[chckIndx(i_2298482818, 0, (result_2298482799).length - 1)] = nimCopy(null, x_2298482797[chckIndx(i_2298482818, 0, (x_2298482797).length - 1)], NTI2298480612);
            res_2281701505 = addInt(res_2281701505, 1);
          }
      };
    };
    Label4: {
      var i_2298482826 = 0;
      var colontmp__2281701508 = 0;
      colontmp__2281701508 = subInt((y_2298482798).length, 1);
      var res_2281701509 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2281701509 <= colontmp__2281701508)) break Label6;
            i_2298482826 = res_2281701509;
            result_2298482799[chckIndx(addInt(i_2298482826, (x_2298482797).length), 0, (result_2298482799).length - 1)] = nimCopy(null, y_2298482798[chckIndx(i_2298482826, 0, (y_2298482798).length - 1)], NTI2298480612);
            res_2281701509 = addInt(res_2281701509, 1);
          }
      };
    };

  return result_2298482799;

}

function HEX26_2298482700(a_2298482705, b_2298482709) {

function succeedImpl_2298482724(inputInHEX60gensym63_2298482725, valueInHEX60gensym63_2298482726, tailInHEX60gensym63_2298482727) {
  var result_2298482729 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482729 = nimCopy(result_2298482729, {kind: 0, value: nimCopy(null, valueInHEX60gensym63_2298482726, NTI2298481569), tail: nimCopy(null, tailInHEX60gensym63_2298482727, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym63_2298482725, NTI33554449), expected: []}, NTI2298481136);

  return result_2298482729;

}

function failImpl_2298482731(inputInHEX60gensym63_2298482732, expectedInHEX60gensym63_2298482733, tailInHEX60gensym63_2298482734) {
  var result_2298482736 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482736 = nimCopy(result_2298482736, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym63_2298482733, NTI2298481575), tail: nimCopy(null, tailInHEX60gensym63_2298482734, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym63_2298482732, NTI33554449), value: []}, NTI2298481136);

  return result_2298482736;

}
      
function HEX3Aanonymous_2298482739(input_2298482740) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_2298482742 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298482743 = succeedImpl_2298482724;
          var fail_2298482744 = failImpl_2298482731;
          Label1: {
            var tempHEX60gensym26_2298482769 = parse_2298482753(a_2298482705, input_2298482740);
            if ((tempHEX60gensym26_2298482769.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_2298482769;
            if (ConstSet33[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298482742 = nimCopy(result_2298482742, {kind: 1, fromInput: nimCopy(null, input_2298482740, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym26_2298482769.tail, NTI33554449), value: []}, NTI2298481136);
            break BeforeRet;
            }
            
          };
          var result1_2298482775 = nimCopy(null, tempHEX60gensym26_2298482769, NTI2298481136);
          Label3: {
            var tempHEX60gensym28_2298482788 = parse_2298482753(b_2298482709, result1_2298482775.tail);
            if ((tempHEX60gensym28_2298482788.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_2298482788;
            if (ConstSet34[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298482742 = nimCopy(result_2298482742, {kind: 1, fromInput: nimCopy(null, input_2298482740, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym28_2298482788.tail, NTI33554449), value: []}, NTI2298481136);
            break BeforeRet;
            }
            
          };
          var result2_2298482794 = nimCopy(null, tempHEX60gensym28_2298482788, NTI2298481136);
          var Temporary5 = result1_2298482775;
          if (ConstSet35[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          var Temporary6 = result2_2298482794;
          if (ConstSet36[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2348810258)); }
          result_2298482742 = nimCopy(result_2298482742, succeed_2298482743(input_2298482740, HEX26_2298482795(Temporary5.value, Temporary6.value), result2_2298482794.tail), NTI2298481136);
          break BeforeRet;
        };

        return result_2298482742;

      }

  var result_2298482713 = null;

    Label1: {
    };
    result_2298482713 = {body: HEX3Aanonymous_2298482739};

  return result_2298482713;

}

function map_2298482449(a_2298482452, fn_2298482454) {

function succeedImpl_2298482466(inputInHEX60gensym59_2298482467, valueInHEX60gensym59_2298482468, tailInHEX60gensym59_2298482469) {
  var result_2298482471 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482471 = nimCopy(result_2298482471, {kind: 0, value: nimCopy(null, valueInHEX60gensym59_2298482468, NTI2298481267), tail: nimCopy(null, tailInHEX60gensym59_2298482469, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym59_2298482467, NTI33554449), expected: []}, NTI2298481136);

  return result_2298482471;

}

function failImpl_2298482473(inputInHEX60gensym59_2298482474, expectedInHEX60gensym59_2298482475, tailInHEX60gensym59_2298482476) {
  var result_2298482478 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482478 = nimCopy(result_2298482478, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym59_2298482475, NTI2298481323), tail: nimCopy(null, tailInHEX60gensym59_2298482476, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym59_2298482474, NTI33554449), value: []}, NTI2298481136);

  return result_2298482478;

}
      
function HEX3Aanonymous_2298482481(input_2298482482) {
            var Temporary2;
          var Temporary3;

        var result_2298482484 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298482485 = succeedImpl_2298482466;
          var fail_2298482486 = failImpl_2298482473;
          Label1: {
            var tempHEX60gensym24_2298482499 = parse_2298482153(a_2298482452, input_2298482482);
            if ((tempHEX60gensym24_2298482499.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298482499;
            if (ConstSet37[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298482484 = nimCopy(result_2298482484, {kind: 1, fromInput: nimCopy(null, input_2298482482, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298482499.tail, NTI33554449), value: []}, NTI2298481136);
            break BeforeRet;
            }
            
          };
          var result1_2298482505 = nimCopy(null, tempHEX60gensym24_2298482499, NTI2298480618);
          var Temporary3 = result1_2298482505;
          if (ConstSet38[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298482484 = nimCopy(result_2298482484, succeed_2298482485(input_2298482482, fn_2298482454(Temporary3.value), result1_2298482505.tail), NTI2298481136);
          break BeforeRet;
        };

        return result_2298482484;

      }

  var result_2298482455 = null;

    Label1: {
    };
    result_2298482455 = {body: HEX3Aanonymous_2298482481};

  return result_2298482455;

}

function nop_2298481622() {

function succeedImpl_2298481635(inputInHEX60gensym49_2298481636, valueInHEX60gensym49_2298481637, tailInHEX60gensym49_2298481638) {
  var result_2298481640 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481640 = nimCopy(result_2298481640, {kind: 0, value: nimCopy(null, valueInHEX60gensym49_2298481637, NTI2298480672), tail: nimCopy(null, tailInHEX60gensym49_2298481638, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym49_2298481636, NTI33554449), expected: []}, NTI2298480618);

  return result_2298481640;

}

function failImpl_2298481668(inputInHEX60gensym49_2298481669, expectedInHEX60gensym49_2298481670, tailInHEX60gensym49_2298481671) {
  var result_2298481673 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481673 = nimCopy(result_2298481673, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym49_2298481670, NTI2298480702), tail: nimCopy(null, tailInHEX60gensym49_2298481671, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym49_2298481669, NTI33554449), value: []}, NTI2298480618);

  return result_2298481673;

}
      
function HEX3Aanonymous_2298481676(input_2298481677) {
        var result_2298481679 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_2298481680 = succeedImpl_2298481635;
          var fail_2298481681 = failImpl_2298481668;
          result_2298481679 = nimCopy(result_2298481679, succeed_2298481680(input_2298481677, [], input_2298481677), NTI2298480618);

        return result_2298481679;

      }

  var result_2298481624 = null;

    Label1: {
    };
    result_2298481624 = {body: HEX3Aanonymous_2298481676};

  return result_2298481624;

}

function parse_2298481877(p_2298481879, input_2298481880) {
  var result_2298481881 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298481879.body == null)) {
    result_2298481881 = nimCopy(result_2298481881, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298481880, NTI33554449), fromInput: nimCopy(null, input_2298481880, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
    break BeforeRet;
    }
    
    result_2298481881 = nimCopy(result_2298481881, p_2298481879.body(input_2298481880), NTI2298480603);
  };

  return result_2298481881;

}

function map_2298481831(a_2298481834, fn_2298481836) {

function succeedImpl_2298481848(inputInHEX60gensym51_2298481849, valueInHEX60gensym51_2298481850, tailInHEX60gensym51_2298481851) {
  var result_2298481853 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481853 = nimCopy(result_2298481853, {kind: 0, value: nimCopy(null, valueInHEX60gensym51_2298481850, NTI2298480787), tail: nimCopy(null, tailInHEX60gensym51_2298481851, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym51_2298481849, NTI33554449), expected: []}, NTI2298480618);

  return result_2298481853;

}

function failImpl_2298481855(inputInHEX60gensym51_2298481856, expectedInHEX60gensym51_2298481857, tailInHEX60gensym51_2298481858) {
  var result_2298481860 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481860 = nimCopy(result_2298481860, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym51_2298481857, NTI2298480843), tail: nimCopy(null, tailInHEX60gensym51_2298481858, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym51_2298481856, NTI33554449), value: []}, NTI2298480618);

  return result_2298481860;

}
      
function HEX3Aanonymous_2298481863(input_2298481864) {
            var Temporary2;
          var Temporary3;

        var result_2298481866 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298481867 = succeedImpl_2298481848;
          var fail_2298481868 = failImpl_2298481855;
          Label1: {
            var tempHEX60gensym24_2298481925 = parse_2298481877(a_2298481834, input_2298481864);
            if ((tempHEX60gensym24_2298481925.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298481925;
            if (ConstSet39[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298481866 = nimCopy(result_2298481866, {kind: 1, fromInput: nimCopy(null, input_2298481864, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298481925.tail, NTI33554449), value: []}, NTI2298480618);
            break BeforeRet;
            }
            
          };
          var result1_2298481931 = nimCopy(null, tempHEX60gensym24_2298481925, NTI2298480603);
          var Temporary3 = result1_2298481931;
          if (ConstSet40[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298481866 = nimCopy(result_2298481866, succeed_2298481867(input_2298481864, fn_2298481836(Temporary3.value), result1_2298481931.tail), NTI2298480618);
          break BeforeRet;
        };

        return result_2298481866;

      }

  var result_2298481837 = null;

    Label1: {
    };
    result_2298481837 = {body: HEX3Aanonymous_2298481863};

  return result_2298481837;

}

function HEX2A_2298481614(a_2298481616, n_2298481617) {
    var Temporary1;
      
function HEX3Aanonymous_2298481778(x_2298481814) {
        var result_2298481817 = [];

          result_2298481817 = nimCopy(null, [nimCopy(null, x_2298481814, NTI2332033028)], NTI2298480787);

        return result_2298481817;

      }

function succeedImpl_2298481942(inputInHEX60gensym52_2298481943, valueInHEX60gensym52_2298481944, tailInHEX60gensym52_2298481945) {
  var result_2298481947 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481947 = nimCopy(result_2298481947, {kind: 0, value: nimCopy(null, valueInHEX60gensym52_2298481944, NTI2298480905), tail: nimCopy(null, tailInHEX60gensym52_2298481945, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym52_2298481943, NTI33554449), expected: []}, NTI2298480618);

  return result_2298481947;

}

function failImpl_2298481949(inputInHEX60gensym52_2298481950, expectedInHEX60gensym52_2298481951, tailInHEX60gensym52_2298481952) {
  var result_2298481954 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298481954 = nimCopy(result_2298481954, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym52_2298481951, NTI2298480911), tail: nimCopy(null, tailInHEX60gensym52_2298481952, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym52_2298481950, NTI33554449), value: []}, NTI2298480618);

  return result_2298481954;

}
        
function HEX3Aanonymous_2298481957(input_2298481958) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_2298481960 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: {
            var succeed_2298481961 = succeedImpl_2298481942;
            var fail_2298481962 = failImpl_2298481949;
            Label1: {
              var tempHEX60gensym38_2298481975 = parse_2298481877(a_2298481616, input_2298481958);
              if ((tempHEX60gensym38_2298481975.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_2298481975;
              if (ConstSet41[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
              result_2298481960 = nimCopy(result_2298481960, {kind: 1, fromInput: nimCopy(null, input_2298481958, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym38_2298481975.tail, NTI33554449), value: []}, NTI2298480618);
              break BeforeRet;
              }
              
            };
            var result1_2298481981 = nimCopy(null, tempHEX60gensym38_2298481975, NTI2298480603);
            var Temporary3 = result1_2298481981;
            if (ConstSet42[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
            var outputs_2298481986 = [nimCopy(null, Temporary3.value, NTI2332033028)];
            var lastTail_2298481987 = nimCopy(null, result1_2298481981.tail, NTI33554449);
            Label4: {
              var i_2298481993 = 0;
              var res_2281701517 = 2;
              Label5: {
                  Label6: while (true) {
                  if (!(res_2281701517 <= n_2298481617)) break Label6;
                    i_2298481993 = res_2281701517;
                    Label7: {
                      var tempHEX60gensym40_2298482006 = parse_2298481877(a_2298481616, result1_2298481981.tail);
                      if ((tempHEX60gensym40_2298482006.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_2298482006;
                      if (ConstSet43[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2348810258)); }
                      result_2298481960 = nimCopy(result_2298481960, {kind: 1, fromInput: nimCopy(null, input_2298481958, NTI33554449), expected: nimCopy(null, Temporary8.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym40_2298482006.tail, NTI33554449), value: []}, NTI2298480618);
                      break BeforeRet;
                      }
                      
                    };
                    result1_2298481981 = nimCopy(result1_2298481981, tempHEX60gensym40_2298482006, NTI2298480603);
                    if (eqStrings(result1_2298481981.tail, lastTail_2298481987)) {
                    break Label4;
                    }
                    
                    lastTail_2298481987 = nimCopy(null, result1_2298481981.tail, NTI33554449);
                    var Temporary9 = result1_2298481981;
                    if (ConstSet44[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2348810258)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI2332033028);
                    outputs_2298481986.push(Temporary10);;
                    res_2281701517 = addInt(res_2281701517, 1);
                  }
              };
            };
            result_2298481960 = nimCopy(result_2298481960, succeed_2298481961(input_2298481958, outputs_2298481986, result1_2298481981.tail), NTI2298480618);
          };

          return result_2298481960;

        }

  var result_2298481621 = null;

  BeforeRet: {
    if (    n_2298481617 == 0    ){      result_2298481621 = nop_2298481622();
      break BeforeRet;
      }
    else if (    n_2298481617 == 1    ){      result_2298481621 = map_2298481831(a_2298481616, HEX3Aanonymous_2298481778);
      break BeforeRet;
      }
    else{
      Label2: {
      };
      Temporary1 = {body: HEX3Aanonymous_2298481957};
      }
    result_2298481621 = Temporary1;
  };

  return result_2298481621;

}

function nop_2298482224() {

function succeedImpl_2298482237(inputInHEX60gensym57_2298482238, valueInHEX60gensym57_2298482239, tailInHEX60gensym57_2298482240) {
  var result_2298482242 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482242 = nimCopy(result_2298482242, {kind: 0, value: nimCopy(null, valueInHEX60gensym57_2298482239, NTI2298481143), tail: nimCopy(null, tailInHEX60gensym57_2298482240, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym57_2298482238, NTI33554449), expected: []}, NTI2298481136);

  return result_2298482242;

}

function failImpl_2298482286(inputInHEX60gensym57_2298482287, expectedInHEX60gensym57_2298482288, tailInHEX60gensym57_2298482289) {
  var result_2298482291 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482291 = nimCopy(result_2298482291, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym57_2298482288, NTI2298481182), tail: nimCopy(null, tailInHEX60gensym57_2298482289, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym57_2298482287, NTI33554449), value: []}, NTI2298481136);

  return result_2298482291;

}
      
function HEX3Aanonymous_2298482294(input_2298482295) {
        var result_2298482297 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_2298482298 = succeedImpl_2298482237;
          var fail_2298482299 = failImpl_2298482286;
          result_2298482297 = nimCopy(result_2298482297, succeed_2298482298(input_2298482295, [], input_2298482295), NTI2298481136);

        return result_2298482297;

      }

  var result_2298482226 = null;

    Label1: {
    };
    result_2298482226 = {body: HEX3Aanonymous_2298482294};

  return result_2298482226;

}

function HEX2A_2298482211(a_2298482213, n_2298482214) {
    var Temporary1;
      
function HEX3Aanonymous_2298482396(x_2298482432) {
        var result_2298482435 = [];

          result_2298482435 = nimCopy(null, [nimCopy(null, x_2298482432, NTI2298480612)], NTI2298481267);

        return result_2298482435;

      }

function succeedImpl_2298482516(inputInHEX60gensym60_2298482517, valueInHEX60gensym60_2298482518, tailInHEX60gensym60_2298482519) {
  var result_2298482521 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482521 = nimCopy(result_2298482521, {kind: 0, value: nimCopy(null, valueInHEX60gensym60_2298482518, NTI2298481363), tail: nimCopy(null, tailInHEX60gensym60_2298482519, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym60_2298482517, NTI33554449), expected: []}, NTI2298481136);

  return result_2298482521;

}

function failImpl_2298482523(inputInHEX60gensym60_2298482524, expectedInHEX60gensym60_2298482525, tailInHEX60gensym60_2298482526) {
  var result_2298482528 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482528 = nimCopy(result_2298482528, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym60_2298482525, NTI2298481369), tail: nimCopy(null, tailInHEX60gensym60_2298482526, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym60_2298482524, NTI33554449), value: []}, NTI2298481136);

  return result_2298482528;

}
        
function HEX3Aanonymous_2298482531(input_2298482532) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_2298482534 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: {
            var succeed_2298482535 = succeedImpl_2298482516;
            var fail_2298482536 = failImpl_2298482523;
            Label1: {
              var tempHEX60gensym38_2298482549 = parse_2298482153(a_2298482213, input_2298482532);
              if ((tempHEX60gensym38_2298482549.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_2298482549;
              if (ConstSet45[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
              result_2298482534 = nimCopy(result_2298482534, {kind: 1, fromInput: nimCopy(null, input_2298482532, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym38_2298482549.tail, NTI33554449), value: []}, NTI2298481136);
              break BeforeRet;
              }
              
            };
            var result1_2298482555 = nimCopy(null, tempHEX60gensym38_2298482549, NTI2298480618);
            var Temporary3 = result1_2298482555;
            if (ConstSet46[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
            var outputs_2298482560 = [nimCopy(null, Temporary3.value, NTI2298480612)];
            var lastTail_2298482561 = nimCopy(null, result1_2298482555.tail, NTI33554449);
            Label4: {
              var i_2298482567 = 0;
              var res_2281701526 = 2;
              Label5: {
                  Label6: while (true) {
                  if (!(res_2281701526 <= n_2298482214)) break Label6;
                    i_2298482567 = res_2281701526;
                    Label7: {
                      var tempHEX60gensym40_2298482580 = parse_2298482153(a_2298482213, result1_2298482555.tail);
                      if ((tempHEX60gensym40_2298482580.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_2298482580;
                      if (ConstSet47[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2348810258)); }
                      result_2298482534 = nimCopy(result_2298482534, {kind: 1, fromInput: nimCopy(null, input_2298482532, NTI33554449), expected: nimCopy(null, Temporary8.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym40_2298482580.tail, NTI33554449), value: []}, NTI2298481136);
                      break BeforeRet;
                      }
                      
                    };
                    result1_2298482555 = nimCopy(result1_2298482555, tempHEX60gensym40_2298482580, NTI2298480618);
                    if (eqStrings(result1_2298482555.tail, lastTail_2298482561)) {
                    break Label4;
                    }
                    
                    lastTail_2298482561 = nimCopy(null, result1_2298482555.tail, NTI33554449);
                    var Temporary9 = result1_2298482555;
                    if (ConstSet48[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2348810258)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI2298480612);
                    outputs_2298482560.push(Temporary10);;
                    res_2281701526 = addInt(res_2281701526, 1);
                  }
              };
            };
            result_2298482534 = nimCopy(result_2298482534, succeed_2298482535(input_2298482532, outputs_2298482560, result1_2298482555.tail), NTI2298481136);
          };

          return result_2298482534;

        }

  var result_2298482223 = null;

  BeforeRet: {
    if (    n_2298482214 == 0    ){      result_2298482223 = nop_2298482224();
      break BeforeRet;
      }
    else if (    n_2298482214 == 1    ){      result_2298482223 = map_2298482449(a_2298482213, HEX3Aanonymous_2298482396);
      break BeforeRet;
      }
    else{
      Label2: {
      };
      Temporary1 = {body: HEX3Aanonymous_2298482531};
      }
    result_2298482223 = Temporary1;
  };

  return result_2298482223;

}

function HEX7C_2298482109(a_2298482111, b_2298482112) {

function succeedImpl_2298482124(inputInHEX60gensym56_2298482125, valueInHEX60gensym56_2298482126, tailInHEX60gensym56_2298482127) {
  var result_2298482129 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482129 = nimCopy(result_2298482129, {kind: 0, value: nimCopy(null, valueInHEX60gensym56_2298482126, NTI2298480612), tail: nimCopy(null, tailInHEX60gensym56_2298482127, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym56_2298482125, NTI33554449), expected: []}, NTI2298480618);

  return result_2298482129;

}

function failImpl_2298482131(inputInHEX60gensym56_2298482132, expectedInHEX60gensym56_2298482133, tailInHEX60gensym56_2298482134) {
  var result_2298482136 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298482136 = nimCopy(result_2298482136, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym56_2298482133, NTI2298481081), tail: nimCopy(null, tailInHEX60gensym56_2298482134, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym56_2298482132, NTI33554449), value: []}, NTI2298480618);

  return result_2298482136;

}
      
function HEX3Aanonymous_2298482139(input_2298482140) {
          var Temporary1;
          var Temporary2;

        var result_2298482142 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298482143 = succeedImpl_2298482124;
          var fail_2298482144 = failImpl_2298482131;
          var result1_2298482169 = parse_2298482153(a_2298482111, input_2298482140);
          if ((result1_2298482169.kind == 0)) {
          result_2298482142 = nimCopy(result_2298482142, result1_2298482169, NTI2298480618);
          break BeforeRet;
          }
          
          var result2_2298482186 = parse_2298482153(b_2298482112, input_2298482140);
          if ((result2_2298482186.kind == 0)) {
          result_2298482142 = nimCopy(result_2298482142, result2_2298482186, NTI2298480618);
          break BeforeRet;
          }
          
          var Temporary1 = result1_2298482169;
          if (ConstSet49[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
          var Temporary2 = result2_2298482186;
          if (ConstSet50[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
          result_2298482142 = nimCopy(result_2298482142, fail_2298482144(input_2298482140, HEX26_2332033126(Temporary1.expected, Temporary2.expected), input_2298482140), NTI2298480618);
        };

        return result_2298482142;

      }

  var result_2298482113 = null;

    Label1: {
    };
    result_2298482113 = {body: HEX3Aanonymous_2298482139};

  return result_2298482113;

}

function newSeq_2332033386(len_2332033388) {
  var result_2332033389 = [];

    result_2332033389 = new Array(len_2332033388); for (var i = 0 ; i < len_2332033388 ; ++i) { result_2332033389[i] = ({rows: [], baseline: 0, width: 0, flag: 0}); }
  return result_2332033389;

}

function HEX26_2298482890(x_2298482892, y_2298482893) {
  var result_2298482894 = [];

    result_2298482894 = new Array(chckRange(addInt((x_2298482892).length, (y_2298482893).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2298482892).length, (y_2298482893).length), 0, 2147483647) ; ++i) { result_2298482894[i] = ({rows: [], baseline: 0, width: 0, flag: 0}); }    Label1: {
      var i_2298482912 = 0;
      var colontmp__2281701536 = 0;
      colontmp__2281701536 = subInt((x_2298482892).length, 1);
      var res_2281701537 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701537 <= colontmp__2281701536)) break Label3;
            i_2298482912 = res_2281701537;
            result_2298482894[chckIndx(i_2298482912, 0, (result_2298482894).length - 1)] = nimCopy(result_2298482894[chckIndx(i_2298482912, 0, (result_2298482894).length - 1)], x_2298482892[chckIndx(i_2298482912, 0, (x_2298482892).length - 1)], NTI2332033028);
            res_2281701537 = addInt(res_2281701537, 1);
          }
      };
    };
    Label4: {
      var i_2298482920 = 0;
      var colontmp__2281701540 = 0;
      colontmp__2281701540 = subInt((y_2298482893).length, 1);
      var res_2281701541 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2281701541 <= colontmp__2281701540)) break Label6;
            i_2298482920 = res_2281701541;
            result_2298482894[chckIndx(addInt(i_2298482920, (x_2298482892).length), 0, (result_2298482894).length - 1)] = nimCopy(result_2298482894[chckIndx(addInt(i_2298482920, (x_2298482892).length), 0, (result_2298482894).length - 1)], y_2298482893[chckIndx(i_2298482920, 0, (y_2298482893).length - 1)], NTI2332033028);
            res_2281701541 = addInt(res_2281701541, 1);
          }
      };
    };

  return result_2298482894;

}

function height_2332033065(rect_2332033066) {
  var result_2332033067 = 0;

    result_2332033067 = chckRange((rect_2332033066.rows).length, 0, 2147483647);

  return result_2332033067;

}

function isEmpty_2332033071(rect_2332033072) {
  var result_2332033073 = false;

    result_2332033073 = (height_2332033065(rect_2332033072) == 0);

  return result_2332033073;

}

function HEX3DHEX3D_2332033467(x_2332033469, y_2332033470) {
  var result_2332033471 = false;

  BeforeRet: {
    var sameObject_2332033478 = false;
    sameObject_2332033478 = x_2332033469 === y_2332033470
    if (sameObject_2332033478) {
    result_2332033471 = true;
    break BeforeRet;
    }
    
    if (!(((x_2332033469).length == (y_2332033470).length))) {
    result_2332033471 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2332033492 = 0;
      var colontmp__2281701596 = 0;
      colontmp__2281701596 = subInt((x_2332033469).length, 1);
      var res_2281701597 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701597 <= colontmp__2281701596)) break Label3;
            i_2332033492 = res_2281701597;
            if (!(eqStrings(x_2332033469[chckIndx(i_2332033492, 0, (x_2332033469).length - 1)], y_2332033470[chckIndx(i_2332033492, 0, (y_2332033470).length - 1)]))) {
            result_2332033471 = false;
            break BeforeRet;
            }
            
            res_2281701597 = addInt(res_2281701597, 1);
          }
      };
    };
    result_2332033471 = true;
    break BeforeRet;
  };

  return result_2332033471;

}

function HEX3DHEX3D_2332033457(x_2332033459, y_2332033460) {
  var result_2332033461 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2332033467(x_2332033459.rows, y_2332033460.rows))) {
    result_2332033461 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033459.baseline == y_2332033460.baseline))) {
    result_2332033461 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033459.width == y_2332033460.width))) {
    result_2332033461 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033459.flag == y_2332033460.flag))) {
    result_2332033461 = false;
    break BeforeRet;
    }
    
    result_2332033461 = true;
    break BeforeRet;
  };

  return result_2332033461;

}

function HEX3DHEX3D_2332033431(x_2332033433, y_2332033434) {
  var result_2332033435 = false;

  BeforeRet: {
    var sameObject_2332033442 = false;
    sameObject_2332033442 = x_2332033433 === y_2332033434
    if (sameObject_2332033442) {
    result_2332033435 = true;
    break BeforeRet;
    }
    
    if (!(((x_2332033433).length == (y_2332033434).length))) {
    result_2332033435 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2332033456 = 0;
      var colontmp__2281701592 = 0;
      colontmp__2281701592 = subInt((x_2332033433).length, 1);
      var res_2281701593 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701593 <= colontmp__2281701592)) break Label3;
            i_2332033456 = res_2281701593;
            if (!(HEX3DHEX3D_2332033457(x_2332033433[chckIndx(i_2332033456, 0, (x_2332033433).length - 1)], y_2332033434[chckIndx(i_2332033456, 0, (y_2332033434).length - 1)]))) {
            result_2332033435 = false;
            break BeforeRet;
            }
            
            res_2281701593 = addInt(res_2281701593, 1);
          }
      };
    };
    result_2332033435 = true;
    break BeforeRet;
  };

  return result_2332033435;

}

function extendRight_2332033217(rect_2332033218) {
    Label1: {
      var row_2332033222 = null;
      var row_2332033222_Idx = 0;
      var i_2281701601 = 0;
      var L_2281701602 = (rect_2332033218.rows).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701601 < L_2281701602)) break Label3;
            row_2332033222 = rect_2332033218.rows; row_2332033222_Idx = chckIndx(i_2281701601, 0, (rect_2332033218.rows).length - 1);
            row_2332033222[row_2332033222_Idx].push.apply(row_2332033222[row_2332033222_Idx], [32]);;
            i_2281701601 = addInt(i_2281701601, 1);
            if (!(((rect_2332033218.rows).length == L_2281701602))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    rect_2332033218.width = addInt(rect_2332033218.width, 1);

  
}

function extendLeft_2332033172(rect_2332033173) {
    Label1: {
      var row_2332033195 = null;
      var row_2332033195_Idx = 0;
      var i_2281701605 = 0;
      var L_2281701606 = (rect_2332033173.rows).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701605 < L_2281701606)) break Label3;
            row_2332033195 = rect_2332033173.rows; row_2332033195_Idx = chckIndx(i_2281701605, 0, (rect_2332033173.rows).length - 1);
            row_2332033195[row_2332033195_Idx] = nimCopy(null, ([32] || []).concat(row_2332033195[row_2332033195_Idx] || []), NTI33554449);
            i_2281701605 = addInt(i_2281701605, 1);
            if (!(((rect_2332033173.rows).length == L_2281701606))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    rect_2332033173.width = addInt(rect_2332033173.width, 1);

  
}

function max_2332033662(x_2332033664) {
  var result_2332033665 = 0;

    result_2332033665 = x_2332033664[chckIndx(0, 0, (x_2332033664).length - 1)];
    Label1: {
      var i_2332033673 = 0;
      var colontmp__2281701609 = 0;
      colontmp__2281701609 = (x_2332033664).length - 1;
      var res_2281701610 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701610 <= colontmp__2281701609)) break Label3;
            i_2332033673 = res_2281701610;
            if ((result_2332033665 < x_2332033664[chckIndx(i_2332033673, 0, (x_2332033664).length - 1)])) {
            result_2332033665 = x_2332033664[chckIndx(i_2332033673, 0, (x_2332033664).length - 1)];
            }
            
            res_2281701610 = addInt(res_2281701610, 1);
          }
      };
    };

  return result_2332033665;

}

function newSeq_2332033629(len_2332033631) {
  var result_2332033632 = [];

    result_2332033632 = new Array(len_2332033631); for (var i = 0 ; i < len_2332033631 ; ++i) { result_2332033632[i] = 0; }
  return result_2332033632;

}

function repeat_2332033113(x_2332033115, n_2332033116) {
  var result_2332033117 = [];

    result_2332033117 = nimCopy(null, newSeq_536871460(n_2332033116), NTI536871232);
    Label1: {
      var i_2332033125 = 0;
      var colontmp__2281701613 = 0;
      colontmp__2281701613 = n_2332033116;
      var i_2281701614 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701614 < colontmp__2281701613)) break Label3;
            i_2332033125 = i_2281701614;
            result_2332033117[chckIndx(i_2332033125, 0, (result_2332033117).length - 1)] = nimCopy(null, x_2332033115, NTI33554449);
            i_2281701614 = addInt(i_2281701614, 1);
          }
      };
    };

  return result_2332033117;

}

function nsuRepeatChar(c_754975841, count_754975842) {
  var result_754975843 = [];

    result_754975843 = nimCopy(null, mnewString(count_754975842), NTI33554449);
    Label1: {
      var i_754975848 = 0;
      var colontmp__2281701617 = 0;
      colontmp__2281701617 = subInt(count_754975842, 1);
      var res_2281701618 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701618 <= colontmp__2281701617)) break Label3;
            i_754975848 = res_2281701618;
            result_754975843[chckIndx(i_754975848, 0, (result_754975843).length - 1)] = c_754975841;
            res_2281701618 = addInt(res_2281701618, 1);
          }
      };
    };

  return result_754975843;

}

function extendUp_2332033109(rect_2332033110, num_2332033111) {
  var result_2332033112 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_2332033112.rows = nimCopy(null, HEX26_2332033126(repeat_2332033113(nsuRepeatChar(32, rect_2332033110.width), num_2332033111), rect_2332033110.rows), NTI2332033085);
    result_2332033112.baseline = addInt(rect_2332033110.baseline, num_2332033111);
    result_2332033112.width = rect_2332033110.width;

  return result_2332033112;

}

function max_2332033745(x_2332033747) {
  var result_2332033748 = 0;

    result_2332033748 = x_2332033747[chckIndx(0, 0, (x_2332033747).length - 1)];
    Label1: {
      var i_2332033756 = 0;
      var colontmp__2281701621 = 0;
      colontmp__2281701621 = (x_2332033747).length - 1;
      var res_2281701622 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701622 <= colontmp__2281701621)) break Label3;
            i_2332033756 = res_2281701622;
            if ((result_2332033748 < x_2332033747[chckIndx(i_2332033756, 0, (x_2332033747).length - 1)])) {
            result_2332033748 = x_2332033747[chckIndx(i_2332033756, 0, (x_2332033747).length - 1)];
            }
            
            res_2281701622 = addInt(res_2281701622, 1);
          }
      };
    };

  return result_2332033748;

}

function newSeq_2332033712(len_2332033714) {
  var result_2332033715 = [];

    result_2332033715 = new Array(len_2332033714); for (var i = 0 ; i < len_2332033714 ; ++i) { result_2332033715[i] = 0; }
  return result_2332033715;

}

function extendDown_2332033160(rect_2332033161, num_2332033162) {
  var result_2332033163 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_2332033163.rows = nimCopy(null, HEX26_2332033126(rect_2332033161.rows, repeat_2332033113(nsuRepeatChar(32, rect_2332033161.width), num_2332033162)), NTI2332033085);
    result_2332033163.baseline = rect_2332033161.baseline;
    result_2332033163.width = rect_2332033161.width;

  return result_2332033163;

}

function nsuJoinSep(a_754976299, sep_754976300) {
  var result_754976301 = [];

    if ((0 < (a_754976299).length)) {
    var L_754976308 = mulInt((sep_754976300).length, subInt((a_754976299).length, 1));
    Label1: {
      var i_754976316 = 0;
      var colontmp__2281701625 = 0;
      colontmp__2281701625 = (a_754976299).length - 1;
      var res_2281701626 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701626 <= colontmp__2281701625)) break Label3;
            i_754976316 = res_2281701626;
            L_754976308 = addInt(L_754976308, (a_754976299[chckIndx(i_754976316, 0, (a_754976299).length - 1)]).length);
            res_2281701626 = addInt(res_2281701626, 1);
          }
      };
    };
    result_754976301 = nimCopy(null, mnewString(0), NTI33554449);
    result_754976301.push.apply(result_754976301, a_754976299[chckIndx(0, 0, (a_754976299).length - 1)]);;
    Label4: {
      var i_754976329 = 0;
      var colontmp__2281701629 = 0;
      colontmp__2281701629 = (a_754976299).length - 1;
      var res_2281701630 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2281701630 <= colontmp__2281701629)) break Label6;
            i_754976329 = res_2281701630;
            result_754976301.push.apply(result_754976301, sep_754976300);;
            result_754976301.push.apply(result_754976301, a_754976299[chckIndx(i_754976329, 0, (a_754976299).length - 1)]);;
            res_2281701630 = addInt(res_2281701630, 1);
          }
      };
    };
    }
    else {
      result_754976301 = nimCopy(null, [], NTI33554449);
    }
    

  return result_754976301;

}

function sum_2332033892(x_2332033894) {
  var result_2332033895 = 0;

    Label1: {
      var i_2332033909 = 0;
      var i_2281701634 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701634 < (x_2332033894).length)) break Label3;
            i_2332033909 = x_2332033894[chckIndx(i_2281701634, 0, (x_2332033894).length - 1)];
            result_2332033895 = chckRange(addInt(result_2332033895, i_2332033909), 0, 2147483647);
            i_2281701634 = addInt(i_2281701634, 1);
          }
      };
    };

  return result_2332033895;

}

function join_2332033228(rects_2332033229) {
  var result_2332033230 = ({rows: [], baseline: 0, width: 0, flag: 0});

  BeforeRet: {
    Label1: {
      var iHEX60gensym8_2332033381 = 0;
      var resultHEX60gensym8_2332033394 = newSeq_2332033386(chckRange((rects_2332033229).length, 0, 2147483647));
      Label2: {
        var itHEX60gensym8_2332033398 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_2281701546 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2281701546 < (rects_2332033229).length)) break Label4;
              itHEX60gensym8_2332033398 = rects_2332033229[chckIndx(i_2281701546, 0, (rects_2332033229).length - 1)];
              resultHEX60gensym8_2332033394[chckIndx(iHEX60gensym8_2332033381, 0, (resultHEX60gensym8_2332033394).length - 1)] = nimCopy(resultHEX60gensym8_2332033394[chckIndx(iHEX60gensym8_2332033381, 0, (resultHEX60gensym8_2332033394).length - 1)], itHEX60gensym8_2332033398, NTI2332033028);
              iHEX60gensym8_2332033381 = addInt(iHEX60gensym8_2332033381, 1);
              i_2281701546 = addInt(i_2281701546, 1);
            }
        };
      };
    };
    var rects_2332033403 = [nimCopy(null, resultHEX60gensym8_2332033394, NTI2332033238)];
    var posHEX60gensym11_2332033407 = 0;
    Label5: {
      var iHEX60gensym11_2332033416 = 0;
      var colontmp__2281701549 = 0;
      colontmp__2281701549 = (rects_2332033403[0]).length;
      var i_2281701550 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_2281701550 < colontmp__2281701549)) break Label7;
            iHEX60gensym11_2332033416 = i_2281701550;
            var it_2332033417 = nimCopy(null, rects_2332033403[0][chckIndx(iHEX60gensym11_2332033416, 0, (rects_2332033403[0]).length - 1)], NTI2332033028);
            if (!(isEmpty_2332033071(it_2332033417))) {
            if (!((posHEX60gensym11_2332033407 == iHEX60gensym11_2332033416))) {
            rects_2332033403[0][chckIndx(posHEX60gensym11_2332033407, 0, (rects_2332033403[0]).length - 1)] = nimCopy(rects_2332033403[0][chckIndx(posHEX60gensym11_2332033407, 0, (rects_2332033403[0]).length - 1)], rects_2332033403[0][chckIndx(iHEX60gensym11_2332033416, 0, (rects_2332033403[0]).length - 1)], NTI2332033028);
            }
            
            posHEX60gensym11_2332033407 = addInt(posHEX60gensym11_2332033407, 1);
            }
            
            i_2281701550 = addInt(i_2281701550, 1);
          }
      };
    };
    if (rects_2332033403[0].length < chckRange(posHEX60gensym11_2332033407, 0, 2147483647)) { for (var i = rects_2332033403[0].length ; i < chckRange(posHEX60gensym11_2332033407, 0, 2147483647) ; ++i) rects_2332033403[0].push(({rows: [], baseline: 0, width: 0, flag: 0})); }
               else { rects_2332033403[0].length = chckRange(posHEX60gensym11_2332033407, 0, 2147483647); };
    if (HEX3DHEX3D_2332033431(rects_2332033403[0], [])) {
    break BeforeRet;
    }
    
    if (((rects_2332033403[0]).length == 1)) {
    result_2332033230 = nimCopy(result_2332033230, rects_2332033403[0][chckIndx(0, 0, (rects_2332033403[0]).length - 1)], NTI2332033028);
    break BeforeRet;
    }
    
    Label8: {
      var i_2332033557 = 0;
      var rect_2332033558 = null;
      var i_2281701554 = 0;
      var L_2281701555 = (rects_2332033403[0]).length;
      Label9: {
          Label10: while (true) {
          if (!(i_2281701554 < L_2281701555)) break Label10;
            i_2332033557 = i_2281701554;
            rect_2332033558 = rects_2332033403[0][chckIndx(i_2281701554, 0, (rects_2332033403[0]).length - 1)];
            switch (rect_2332033558.flag) {
            case 8:
              if (!((i_2332033557 == (rects_2332033403[0]).length - 1))) {
              extendRight_2332033217(rect_2332033558);
              }
              
              break;
            case 2:
            case 3:
              if (!((i_2332033557 == (rects_2332033403[0]).length - 1))) {
              extendRight_2332033217(rect_2332033558);
              }
              
              if ((!((i_2332033557 == 0)) && !((ConstSet51[rects_2332033403[0][chckIndx(subInt(i_2332033557, 1), 0, (rects_2332033403[0]).length - 1)].flag] != undefined)))) {
              extendLeft_2332033172(rect_2332033558);
              }
              
              break;
            case 4:
              if ((!((i_2332033557 == (rects_2332033403[0]).length - 1)) && (ConstSet52[rects_2332033403[0][chckIndx(addInt(i_2332033557, 1), 0, (rects_2332033403[0]).length - 1)].flag] != undefined))) {
              extendRight_2332033217(rect_2332033558);
              }
              
              if ((!((i_2332033557 == 0)) && (ConstSet53[rects_2332033403[0][chckIndx(subInt(i_2332033557, 1), 0, (rects_2332033403[0]).length - 1)].flag] != undefined))) {
              extendLeft_2332033172(rect_2332033558);
              }
              
              break;
            default: 
              break;
            }
            i_2281701554 = addInt(i_2281701554, 1);
            if (!(((rects_2332033403[0]).length == L_2281701555))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var iHEX60gensym23_2332033625 = 0;
      var resultHEX60gensym23_2332033653 = newSeq_2332033629(chckRange((rects_2332033403[0]).length, 0, 2147483647));
      Label12: {
        var it_2332033657 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_2281701560 = 0;
        var L_2281701561 = (rects_2332033403[0]).length;
        Label13: {
            Label14: while (true) {
            if (!(i_2281701560 < L_2281701561)) break Label14;
              it_2332033657 = rects_2332033403[0][chckIndx(i_2281701560, 0, (rects_2332033403[0]).length - 1)];
              resultHEX60gensym23_2332033653[chckIndx(iHEX60gensym23_2332033625, 0, (resultHEX60gensym23_2332033653).length - 1)] = it_2332033657.baseline;
              iHEX60gensym23_2332033625 = addInt(iHEX60gensym23_2332033625, 1);
              i_2281701560 = addInt(i_2281701560, 1);
              if (!(((rects_2332033403[0]).length == L_2281701561))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var maxBaseline_2332033674 = max_2332033662(resultHEX60gensym23_2332033653);
    Label15: {
      var iHEX60gensym28_2332033686 = 0;
      var colontmp__2281701564 = 0;
      colontmp__2281701564 = (rects_2332033403[0]).length - 1;
      var res_2281701565 = 0;
      Label16: {
          Label17: while (true) {
          if (!(res_2281701565 <= colontmp__2281701564)) break Label17;
            iHEX60gensym28_2332033686 = res_2281701565;
            var it_2332033687 = nimCopy(null, rects_2332033403[0][chckIndx(iHEX60gensym28_2332033686, 0, (rects_2332033403[0]).length - 1)], NTI2332033028);
            rects_2332033403[0][chckIndx(iHEX60gensym28_2332033686, 0, (rects_2332033403[0]).length - 1)] = nimCopy(rects_2332033403[0][chckIndx(iHEX60gensym28_2332033686, 0, (rects_2332033403[0]).length - 1)], extendUp_2332033109(it_2332033687, chckRange(subInt(maxBaseline_2332033674, it_2332033687.baseline), 0, 2147483647)), NTI2332033028);
            res_2281701565 = addInt(res_2281701565, 1);
          }
      };
    };
    Label18: {
      var iHEX60gensym29_2332033708 = 0;
      var resultHEX60gensym29_2332033736 = newSeq_2332033712(chckRange((rects_2332033403[0]).length, 0, 2147483647));
      Label19: {
        var it_2332033740 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_2281701569 = 0;
        var L_2281701570 = (rects_2332033403[0]).length;
        Label20: {
            Label21: while (true) {
            if (!(i_2281701569 < L_2281701570)) break Label21;
              it_2332033740 = rects_2332033403[0][chckIndx(i_2281701569, 0, (rects_2332033403[0]).length - 1)];
              resultHEX60gensym29_2332033736[chckIndx(iHEX60gensym29_2332033708, 0, (resultHEX60gensym29_2332033736).length - 1)] = height_2332033065(it_2332033740);
              iHEX60gensym29_2332033708 = addInt(iHEX60gensym29_2332033708, 1);
              i_2281701569 = addInt(i_2281701569, 1);
              if (!(((rects_2332033403[0]).length == L_2281701570))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var maxHeight_2332033757 = max_2332033745(resultHEX60gensym29_2332033736);
    Label22: {
      var iHEX60gensym32_2332033769 = 0;
      var colontmp__2281701573 = 0;
      colontmp__2281701573 = (rects_2332033403[0]).length - 1;
      var res_2281701574 = 0;
      Label23: {
          Label24: while (true) {
          if (!(res_2281701574 <= colontmp__2281701573)) break Label24;
            iHEX60gensym32_2332033769 = res_2281701574;
            var it_2332033770 = nimCopy(null, rects_2332033403[0][chckIndx(iHEX60gensym32_2332033769, 0, (rects_2332033403[0]).length - 1)], NTI2332033028);
            rects_2332033403[0][chckIndx(iHEX60gensym32_2332033769, 0, (rects_2332033403[0]).length - 1)] = nimCopy(rects_2332033403[0][chckIndx(iHEX60gensym32_2332033769, 0, (rects_2332033403[0]).length - 1)], extendDown_2332033160(it_2332033770, chckRange(subInt(maxHeight_2332033757, height_2332033065(it_2332033770)), 0, 2147483647)), NTI2332033028);
            res_2281701574 = addInt(res_2281701574, 1);
          }
      };
    };
    result_2332033230.rows = nimCopy(null, newSeq_536871460(height_2332033065(rects_2332033403[0][chckIndx(0, 0, (rects_2332033403[0]).length - 1)])), NTI536871232);
    Label25: {
      var i_2332033818 = 0;
      var row_2332033819 = null;
      var row_2332033819_Idx = 0;
      var i_2281701583 = 0;
      var L_2281701584 = (result_2332033230.rows).length;
      Label26: {
          Label27: while (true) {
          if (!(i_2281701583 < L_2281701584)) break Label27;
            i_2332033818 = i_2281701583;
            row_2332033819 = result_2332033230.rows; row_2332033819_Idx = chckIndx(i_2281701583, 0, (result_2332033230.rows).length - 1);
            Label28: {
              var iHEX60gensym35_2332033840 = 0;
              var resultHEX60gensym35_2332033847 = newSeq_536871460(chckRange((rects_2332033403[0]).length, 0, 2147483647));
              Label29: {
                var it_2332033851 = ({rows: [], baseline: 0, width: 0, flag: 0});
                var i_2281701579 = 0;
                var L_2281701580 = (rects_2332033403[0]).length;
                Label30: {
                    Label31: while (true) {
                    if (!(i_2281701579 < L_2281701580)) break Label31;
                      it_2332033851 = rects_2332033403[0][chckIndx(i_2281701579, 0, (rects_2332033403[0]).length - 1)];
                      resultHEX60gensym35_2332033847[chckIndx(iHEX60gensym35_2332033840, 0, (resultHEX60gensym35_2332033847).length - 1)] = nimCopy(null, it_2332033851.rows[chckIndx(i_2332033818, 0, (it_2332033851.rows).length - 1)], NTI33554449);
                      iHEX60gensym35_2332033840 = addInt(iHEX60gensym35_2332033840, 1);
                      i_2281701579 = addInt(i_2281701579, 1);
                      if (!(((rects_2332033403[0]).length == L_2281701580))) {
                      failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            row_2332033819[row_2332033819_Idx] = nimCopy(null, nsuJoinSep(resultHEX60gensym35_2332033847, []), NTI33554449);
            i_2281701583 = addInt(i_2281701583, 1);
            if (!(((result_2332033230.rows).length == L_2281701584))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2332033230.baseline = rects_2332033403[0][chckIndx(0, 0, (rects_2332033403[0]).length - 1)].baseline;
    Label32: {
      var iHEX60gensym38_2332033876 = 0;
      var resultHEX60gensym38_2332033883 = newSeq_2332033712(chckRange((rects_2332033403[0]).length, 0, 2147483647));
      Label33: {
        var it_2332033887 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_2281701588 = 0;
        var L_2281701589 = (rects_2332033403[0]).length;
        Label34: {
            Label35: while (true) {
            if (!(i_2281701588 < L_2281701589)) break Label35;
              it_2332033887 = rects_2332033403[0][chckIndx(i_2281701588, 0, (rects_2332033403[0]).length - 1)];
              resultHEX60gensym38_2332033883[chckIndx(iHEX60gensym38_2332033876, 0, (resultHEX60gensym38_2332033883).length - 1)] = it_2332033887.width;
              iHEX60gensym38_2332033876 = addInt(iHEX60gensym38_2332033876, 1);
              i_2281701588 = addInt(i_2281701588, 1);
              if (!(((rects_2332033403[0]).length == L_2281701589))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    result_2332033230.width = sum_2332033892(resultHEX60gensym38_2332033883);
  };

  return result_2332033230;

}

function map_2298483269(a_2298483272, fn_2298483274) {

function succeedImpl_2298483286(inputInHEX60gensym71_2298483287, valueInHEX60gensym71_2298483288, tailInHEX60gensym71_2298483289) {
  var result_2298483291 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298483291 = nimCopy(result_2298483291, {kind: 0, value: nimCopy(null, valueInHEX60gensym71_2298483288, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym71_2298483289, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym71_2298483287, NTI33554449), expected: []}, NTI2298480603);

  return result_2298483291;

}

function failImpl_2298483293(inputInHEX60gensym71_2298483294, expectedInHEX60gensym71_2298483295, tailInHEX60gensym71_2298483296) {
  var result_2298483298 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298483298 = nimCopy(result_2298483298, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym71_2298483295, NTI2298482005), tail: nimCopy(null, tailInHEX60gensym71_2298483296, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym71_2298483294, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298483298;

}
      
function HEX3Aanonymous_2298483301(input_2298483302) {
            var Temporary2;
          var Temporary3;

        var result_2298483304 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483305 = succeedImpl_2298483286;
          var fail_2298483306 = failImpl_2298483293;
          Label1: {
            var tempHEX60gensym24_2298483319 = parse_2348811258(a_2298483272, input_2298483302);
            if ((tempHEX60gensym24_2298483319.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298483319;
            if (ConstSet54[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483304 = nimCopy(result_2298483304, {kind: 1, fromInput: nimCopy(null, input_2298483302, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298483319.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298483325 = nimCopy(null, tempHEX60gensym24_2298483319, NTI2348810488);
          var Temporary3 = result1_2298483325;
          if (ConstSet55[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298483304 = nimCopy(result_2298483304, succeed_2298483305(input_2298483302, fn_2298483274(Temporary3.value), result1_2298483325.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298483304;

      }

  var result_2298483275 = null;

    Label1: {
    };
    result_2298483275 = {body: HEX3Aanonymous_2298483301};

  return result_2298483275;

}

function nucruneLen(s_1040187420) {
  var result_1040187421 = 0;

    result_1040187421 = 0;
    var i_1040187422 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1040187422 < (s_1040187420).length)) break Label2;
          if ((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] <= 127)) {
          i_1040187422 = addInt(i_1040187422, 1);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 5) == 6)) {
          i_1040187422 = addInt(i_1040187422, 2);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 4) == 14)) {
          i_1040187422 = addInt(i_1040187422, 3);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 3) == 30)) {
          i_1040187422 = addInt(i_1040187422, 4);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 2) == 62)) {
          i_1040187422 = addInt(i_1040187422, 5);
          }
          else {
          if (((s_1040187420[chckIndx(i_1040187422, 0, (s_1040187420).length - 1)] >>> 1) == 126)) {
          i_1040187422 = addInt(i_1040187422, 6);
          }
          else {
          i_1040187422 = addInt(i_1040187422, 1);
          }
          }}}}}
          result_1040187421 = addInt(result_1040187421, 1);
        }
    };

  return result_1040187421;

}

function runeLen_1040194581(s_1040194582) {
  var result_1040194583 = 0;

    result_1040194583 = nucruneLen((s_1040194582.slice(0, (s_1040194582).length - 1 + 1)));

  return result_1040194583;

}

function toTextRectOneLine_2332033100(s_2332033101, baseline_2332033102, flag_2332033103) {
  var result_2332033104 = ({rows: [], baseline: 0, width: 0, flag: 0});

  BeforeRet: {
    if (eqStrings(s_2332033101, [])) {
    result_2332033104.flag = flag_2332033103;
    break BeforeRet;
    }
    
    result_2332033104.rows = nimCopy(null, [nimCopy(null, s_2332033101, NTI33554449)], NTI1996488834);
    result_2332033104.width = chckRange(runeLen_1040194581(s_2332033101), 0, 2147483647);
    result_2332033104.baseline = baseline_2332033102;
    result_2332033104.flag = flag_2332033103;
  };

  return result_2332033104;

}

function HEX7C_2298484378(a_2298484380, b_2298484381) {

function succeedImpl_2298484393(inputInHEX60gensym92_2298484394, valueInHEX60gensym92_2298484395, tailInHEX60gensym92_2298484396) {
  var result_2298484398 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298484398 = nimCopy(result_2298484398, {kind: 0, value: nimCopy(null, valueInHEX60gensym92_2298484395, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym92_2298484396, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym92_2298484394, NTI33554449), expected: []}, NTI2298480603);

  return result_2298484398;

}

function failImpl_2298484400(inputInHEX60gensym92_2298484401, expectedInHEX60gensym92_2298484402, tailInHEX60gensym92_2298484403) {
  var result_2298484405 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298484405 = nimCopy(result_2298484405, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym92_2298484402, NTI2298482883), tail: nimCopy(null, tailInHEX60gensym92_2298484403, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym92_2298484401, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298484405;

}
      
function HEX3Aanonymous_2298484408(input_2298484409) {
          var Temporary1;
          var Temporary2;

        var result_2298484411 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298484412 = succeedImpl_2298484393;
          var fail_2298484413 = failImpl_2298484400;
          var result1_2298484426 = parse_2298481877(a_2298484380, input_2298484409);
          if ((result1_2298484426.kind == 0)) {
          result_2298484411 = nimCopy(result_2298484411, result1_2298484426, NTI2298480603);
          break BeforeRet;
          }
          
          var result2_2298484443 = parse_2298481877(b_2298484381, input_2298484409);
          if ((result2_2298484443.kind == 0)) {
          result_2298484411 = nimCopy(result_2298484411, result2_2298484443, NTI2298480603);
          break BeforeRet;
          }
          
          var Temporary1 = result1_2298484426;
          if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
          var Temporary2 = result2_2298484443;
          if (ConstSet57[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
          result_2298484411 = nimCopy(result_2298484411, fail_2298484413(input_2298484409, HEX26_2332033126(Temporary1.expected, Temporary2.expected), input_2298484409), NTI2298480603);
        };

        return result_2298484411;

      }

  var result_2298484382 = null;

    Label1: {
    };
    result_2298484382 = {body: HEX3Aanonymous_2298484408};

  return result_2298484382;

}

function HEX3CHEX3DHEX25_33555507(x_33555508, y_33555509) {
  var result_33555510 = false;

    result_33555510 = (Number(BigInt.asUintN(32, BigInt(x_33555508))) <= Number(BigInt.asUintN(32, BigInt(y_33555509))));

  return result_33555510;

}

function nuctoUTF8(c_1040187799) {
  var result_1040187800 = [];

    result_1040187800 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_1040187802 = c_1040187799;
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1040187802, 127)) {
    if (result_1040187800.length < 1) { for (var i = result_1040187800.length; i < 1; ++i) result_1040187800.push(0); }
         else {result_1040187800.length = 1; };
    result_1040187800[chckIndx(0, 0, (result_1040187800).length - 1)] = chckRange(iHEX60gensym21_1040187802, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1040187802, 2047)) {
    if (result_1040187800.length < 2) { for (var i = result_1040187800.length; i < 2; ++i) result_1040187800.push(0); }
         else {result_1040187800.length = 2; };
    result_1040187800[chckIndx(0, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 >> 6) | 192), 0, 255);
    result_1040187800[chckIndx(1, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1040187802, 65535)) {
    if (result_1040187800.length < 3) { for (var i = result_1040187800.length; i < 3; ++i) result_1040187800.push(0); }
         else {result_1040187800.length = 3; };
    result_1040187800[chckIndx(0, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 >> 12) | 224), 0, 255);
    result_1040187800[chckIndx(1, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 6) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(2, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1040187802, 2097151)) {
    if (result_1040187800.length < 4) { for (var i = result_1040187800.length; i < 4; ++i) result_1040187800.push(0); }
         else {result_1040187800.length = 4; };
    result_1040187800[chckIndx(0, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 >> 18) | 240), 0, 255);
    result_1040187800[chckIndx(1, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 12) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(2, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 6) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(3, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1040187802, 67108863)) {
    if (result_1040187800.length < 5) { for (var i = result_1040187800.length; i < 5; ++i) result_1040187800.push(0); }
         else {result_1040187800.length = 5; };
    result_1040187800[chckIndx(0, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 >> 24) | 248), 0, 255);
    result_1040187800[chckIndx(1, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 18) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(2, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 12) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(3, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 6) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(4, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555507(iHEX60gensym21_1040187802, 2147483647)) {
    if (result_1040187800.length < 6) { for (var i = result_1040187800.length; i < 6; ++i) result_1040187800.push(0); }
         else {result_1040187800.length = 6; };
    result_1040187800[chckIndx(0, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 >> 30) | 252), 0, 255);
    result_1040187800[chckIndx(1, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 24) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(2, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 18) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(3, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 12) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(4, 0, (result_1040187800).length - 1)] = chckRange((((iHEX60gensym21_1040187802 >> 6) & 63) | 128), 0, 255);
    result_1040187800[chckIndx(5, 0, (result_1040187800).length - 1)] = chckRange(((iHEX60gensym21_1040187802 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_1040187800;

}

function HEX24_1040188049(rune_1040188050) {
  var result_1040188051 = [];

    result_1040188051 = nimCopy(null, nuctoUTF8(rune_1040188050), NTI33554449);

  return result_1040188051;

}

function HEX3DHEX3D_1040188400(a_1040188401, b_1040188402) {
  var result_1040188403 = false;

  BeforeRet: {
    result_1040188403 = (((a_1040188401) | 0) == ((b_1040188402) | 0));
    break BeforeRet;
  };

  return result_1040188403;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function parseSaturatedNatural_788529558(s_788529559, b_788529560, b_788529560_Idx) {
      var Temporary1;
          var Temporary4;

  var result_788529561 = 0;

    var i_788529562 = 0;
    if (((i_788529562 < (s_788529559).length) && (s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)] == 43))) {
    i_788529562 = addInt(i_788529562, 1);
    }
    
      if (!(i_788529562 < (s_788529559).length)) Temporary1 = false; else {        Temporary1 = (ConstSet62[s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)]] != undefined);      }    if (Temporary1) {
    b_788529560[b_788529560_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_788529562 < (s_788529559).length)) Temporary4 = false; else {            Temporary4 = (ConstSet63[s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_788529591 = subInt(s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)], 48);
          if ((b_788529560[b_788529560_Idx] <= divInt(subInt(2147483647, c_788529591), 10))) {
          b_788529560[b_788529560_Idx] = addInt(mulInt(b_788529560[b_788529560_Idx], 10), c_788529591);
          }
          else {
            b_788529560[b_788529560_Idx] = 2147483647;
          }
          
          i_788529562 = addInt(i_788529562, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_788529562 < (s_788529559).length) && (s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)] == 95))) break Label6;
                i_788529562 = addInt(i_788529562, 1);
              }
          };
        }
    };
    result_788529561 = i_788529562;
    }
    

  return result_788529561;

}

function parseSaturatedNatural_788530064(s_788530065, b_788530066, b_788530066_Idx, start_788530067) {
  var result_788530068 = 0;

    result_788530068 = parseSaturatedNatural_788529558((s_788530065.slice(start_788530067, (s_788530065).length - 1 + 1)), b_788530066, b_788530066_Idx);

  return result_788530068;

}

function parseStandardFormatSpecifier_1442840634(s_1442840635, start_1442840636, ignoreUnknownSuffix_1442840637) {
      var Temporary1;
      var Temporary2;

  var result_1442840638 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1442840638.fill = 32;
    result_1442840638.align = 0;
    result_1442840638.sign = 45;
    var i_1442840640 = start_1442840636;
    if (((addInt(i_1442840640, 1) < (s_1442840635).length) && (ConstSet58[s_1442840635[chckIndx(addInt(i_1442840640, 1), 0, (s_1442840635).length - 1)]] != undefined))) {
    result_1442840638.fill = s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)];
    result_1442840638.align = s_1442840635[chckIndx(addInt(i_1442840640, 1), 0, (s_1442840635).length - 1)];
    i_1442840640 = addInt(i_1442840640, 2);
    }
    else {
    if (((i_1442840640 < (s_1442840635).length) && (ConstSet59[s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)]] != undefined))) {
    result_1442840638.align = s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)];
    i_1442840640 = addInt(i_1442840640, 1);
    }
    }
    if (((i_1442840640 < (s_1442840635).length) && (ConstSet60[s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)]] != undefined))) {
    result_1442840638.sign = s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)];
    i_1442840640 = addInt(i_1442840640, 1);
    }
    
    if (((i_1442840640 < (s_1442840635).length) && (s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)] == 35))) {
    result_1442840638.alternateForm = true;
    i_1442840640 = addInt(i_1442840640, 1);
    }
    
      if (!((addInt(i_1442840640, 1) < (s_1442840635).length) && (s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet61[s_1442840635[chckIndx(addInt(i_1442840640, 1), 0, (s_1442840635).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1442840638.padWithZero = true;
    i_1442840640 = addInt(i_1442840640, 1);
    }
    
    var parsedLength_1442840682 = parseSaturatedNatural_788530064(s_1442840635, result_1442840638, "minimumWidth", i_1442840640);
    i_1442840640 = addInt(i_1442840640, parsedLength_1442840682);
    if (((i_1442840640 < (s_1442840635).length) && (s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)] == 46))) {
    i_1442840640 = addInt(i_1442840640, 1);
    var parsedLengthB_1442840693 = parseSaturatedNatural_788530064(s_1442840635, result_1442840638, "precision", i_1442840640);
    i_1442840640 = addInt(i_1442840640, parsedLengthB_1442840693);
    }
    else {
      result_1442840638.precision = (-1);
    }
    
      if (!(i_1442840640 < (s_1442840635).length)) Temporary2 = false; else {        Temporary2 = (ConstSet64[s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1442840638.typ = s_1442840635[chckIndx(i_1442840640, 0, (s_1442840635).length - 1)];
    i_1442840640 = addInt(i_1442840640, 1);
    }
    
    result_1442840638.endPosition = i_1442840640;
    if ((!((i_1442840640 == (s_1442840635).length)) && !(ignoreUnknownSuffix_1442840637))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_754976027(s_1442840635, HEX2EHEX2E_973078632(i_1442840640, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1442840638;

}

function runeLenAt_1040187486(s_1040187487, i_1040187488) {
  var result_1040187489 = 0;

    if ((s_1040187487[chckIndx(i_1040187488, 0, (s_1040187487).length - 1)] <= 127)) {
    result_1040187489 = 1;
    }
    else {
    if (((s_1040187487[chckIndx(i_1040187488, 0, (s_1040187487).length - 1)] >>> 5) == 6)) {
    result_1040187489 = 2;
    }
    else {
    if (((s_1040187487[chckIndx(i_1040187488, 0, (s_1040187487).length - 1)] >>> 4) == 14)) {
    result_1040187489 = 3;
    }
    else {
    if (((s_1040187487[chckIndx(i_1040187488, 0, (s_1040187487).length - 1)] >>> 3) == 30)) {
    result_1040187489 = 4;
    }
    else {
    if (((s_1040187487[chckIndx(i_1040187488, 0, (s_1040187487).length - 1)] >>> 2) == 62)) {
    result_1040187489 = 5;
    }
    else {
    if (((s_1040187487[chckIndx(i_1040187488, 0, (s_1040187487).length - 1)] >>> 1) == 126)) {
    result_1040187489 = 6;
    }
    else {
      result_1040187489 = 1;
    }
    }}}}}

  return result_1040187489;

}

function runeOffset_1040188110(s_1040188111, pos_1040188112, start_1040188113) {
  var result_1040188114 = 0;

  BeforeRet: {
    var i_1040188115 = 0;
    var o_1040188116 = start_1040188113;
    Label1: {
        Label2: while (true) {
        if (!(i_1040188115 < pos_1040188112)) break Label2;
          o_1040188116 = addInt(o_1040188116, chckRange(runeLenAt_1040187486(s_1040188111, o_1040188116), 0, 2147483647));
          if (((s_1040188111).length <= o_1040188116)) {
          result_1040188114 = (-1);
          break BeforeRet;
          }
          
          i_1040188115 = addInt(i_1040188115, 1);
        }
    };
    result_1040188114 = o_1040188116;
    break BeforeRet;
  };

  return result_1040188114;

}

function runeOffset_1040194756(s_1040194757, pos_1040194758, start_1040194759) {
  var result_1040194760 = 0;

    result_1040194760 = runeOffset_1040188110((s_1040194757.slice(0, (s_1040194757).length - 1 + 1)), pos_1040194758, start_1040194759);

  return result_1040194760;

}

function validateUtf8_1040187728(s_1040187729) {
  var result_1040187730 = 0;

  BeforeRet: {
    var i_1040187731 = 0;
    var L_1040187735 = (s_1040187729).length;
    Label1: {
        Label2: while (true) {
        if (!(i_1040187731 < L_1040187735)) break Label2;
          if ((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] <= 127)) {
          i_1040187731 = addInt(i_1040187731, 1);
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 5) == 6)) {
          if ((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] < 194)) {
          result_1040187730 = i_1040187731;
          break BeforeRet;
          }
          
          if (((addInt(i_1040187731, 1) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          i_1040187731 = addInt(i_1040187731, 2);
          }
          else {
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1040187731, 2) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 2), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          i_1040187731 = addInt(i_1040187731, 3);
          }
          else {
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187729[chckIndx(i_1040187731, 0, (s_1040187729).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1040187731, 3) < L_1040187735) && ((s_1040187729[chckIndx(addInt(i_1040187731, 1), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 2), 0, (s_1040187729).length - 1)] >>> 6) == 2)) && ((s_1040187729[chckIndx(addInt(i_1040187731, 3), 0, (s_1040187729).length - 1)] >>> 6) == 2))) {
          i_1040187731 = addInt(i_1040187731, 4);
          }
          else {
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          
          }
          else {
            result_1040187730 = i_1040187731;
            break BeforeRet;
          }
          }}}
        }
    };
    result_1040187730 = (-1);
    break BeforeRet;
  };

  return result_1040187730;

}

function validateUtf8_1040194753(s_1040194754) {
  var result_1040194755 = 0;

    result_1040194755 = validateUtf8_1040187728((s_1040194754.slice(0, (s_1040194754).length - 1 + 1)));

  return result_1040194755;

}

function alignString_1442840596(s_1442840597, minimumWidth_1442840598, align_1442840599, fill_1442840600) {
      var Temporary1;

  var result_1442840601 = [];

    if ((minimumWidth_1442840598 == 0)) {
    result_1442840601 = nimCopy(null, s_1442840597, NTI33554449);
    }
    else {
      if ((validateUtf8_1040194753(s_1442840597) == (-1))) {
      Temporary1 = runeLen_1040194581(s_1442840597);
      }
      else {
      Temporary1 = (s_1442840597).length;
      }
      
      var sRuneLen_1442840602 = Temporary1;
      var toFill_1442840603 = subInt(minimumWidth_1442840598, sRuneLen_1442840602);
      if ((toFill_1442840603 <= 0)) {
      result_1442840601 = nimCopy(null, s_1442840597, NTI33554449);
      }
      else {
      if (((align_1442840599 == 60) || (align_1442840599 == 0))) {
      result_1442840601 = nimCopy(null, (s_1442840597 || []).concat(nsuRepeatChar(fill_1442840600, chckRange(toFill_1442840603, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_1442840599 == 94)) {
      var half_1442840604 = divInt(toFill_1442840603, 2);
      result_1442840601 = nimCopy(null, (nsuRepeatChar(fill_1442840600, chckRange(half_1442840604, 0, 2147483647)) || []).concat(s_1442840597 || [],nsuRepeatChar(fill_1442840600, chckRange(subInt(toFill_1442840603, half_1442840604), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_1442840601 = nimCopy(null, (nsuRepeatChar(fill_1442840600, chckRange(toFill_1442840603, 0, 2147483647)) || []).concat(s_1442840597 || []), NTI33554449);
      }
      }}
    }
    

  return result_1442840601;

}

function formatValue_1442840747(result_1442840748, result_1442840748_Idx, value_1442840749, specifier_1442840750) {
    var Temporary1;

    var spec_1442840751 = parseStandardFormatSpecifier_1442840634(specifier_1442840750, 0, false);
    var value_1442840752 = nimCopy(null, value_1442840749, NTI33554449);
    switch (spec_1442840751.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_1442840751.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1442840751.precision == (-1)))) {
    if ((spec_1442840751.precision < runeLen_1040194581(value_1442840752))) {
    if (value_1442840752.length < (Temporary1 = chckRange(runeOffset_1040194756(value_1442840752, chckRange(spec_1442840751.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_1442840752.length; i < Temporary1; ++i) value_1442840752.push(0); }
         else {value_1442840752.length = Temporary1; };
    }
    
    }
    
    result_1442840748[result_1442840748_Idx].push.apply(result_1442840748[result_1442840748_Idx], alignString_1442840596(value_1442840752, spec_1442840751.minimumWidth, spec_1442840751.align, spec_1442840751.fill));;

  
}

function formatValue_2315256017(result_2315256019, result_2315256019_Idx, value_2315256020, specifier_2315256021) {
    formatValue_1442840747(result_2315256019, result_2315256019_Idx, HEX24_1040188049(value_2315256020), specifier_2315256021);

  
}

function formatValue_2315256036(result_2315256038, result_2315256038_Idx, value_2315256039, specifier_2315256040) {
    formatValue_1442840747(result_2315256038, result_2315256038_Idx, reprEnum(value_2315256039, NTI2315255811), specifier_2315256040);

  
}

function inFont_2315255980(letter_2315255981, font_2315255982) {
    var Temporary4;

  var result_2315255983 = [];

  BeforeRet: {
    if ((font_2315255982 == 0)) {
    result_2315255983 = nimCopy(null, HEX24_1040188049(letter_2315255981), NTI33554449);
    break BeforeRet;
    }
    
    Label1: {
      var lhs_2315256011 = 0;
      var rhs_2315256012 = [];
      var colontmp__2281701640 = [];
      colontmp__2281701640 = fontExceptions_2315255979[chckIndx(font_2315255982, 1, (fontExceptions_2315255979).length + (1) - 1) - (1)];
      var i_2281701642 = 0;
      var L_2281701643 = (colontmp__2281701640).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701642 < L_2281701643)) break Label3;
            lhs_2315256011 = colontmp__2281701640[chckIndx(i_2281701642, 0, (colontmp__2281701640).length - 1)]["Field0"];
            rhs_2315256012 = colontmp__2281701640[chckIndx(i_2281701642, 0, (colontmp__2281701640).length - 1)]["Field1"];
            if (HEX3DHEX3D_1040188400(letter_2315255981, lhs_2315256011)) {
            result_2315255983 = nimCopy(null, rhs_2315256012, NTI33554449);
            break BeforeRet;
            }
            
            i_2281701642 = addInt(i_2281701642, 1);
            if (!(((colontmp__2281701640).length == L_2281701643))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (    letter_2315255981 >= 65 && letter_2315255981 <= 90    ){      Temporary4 = {Field0: 0, Field1: 65};
      }
    else if (    letter_2315255981 >= 97 && letter_2315255981 <= 122    ){      Temporary4 = {Field0: 0, Field1: 71};
      }
    else if (    letter_2315255981 >= 913 && letter_2315255981 <= 937    ){      Temporary4 = {Field0: 1, Field1: 913};
      }
    else if (    letter_2315255981 >= 945 && letter_2315255981 <= 969    ){      Temporary4 = {Field0: 1, Field1: 919};
      }
    else{
      Label5: {
        var fmtRes_2315256016 = [mnewString(0)];
        fmtRes_2315256016[0].push.apply(fmtRes_2315256016[0], [73,110,118,97,108,105,100,32,108,101,116,116,101,114,58,32]);;
        formatValue_2315256017(fmtRes_2315256016, 0, letter_2315255981, []);
      };
      raiseException({message: nimCopy(null, fmtRes_2315256016[0], NTI33554449), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
    var tmpTuple_2315256023 = nimCopy(null, Temporary4, NTI2315256499);
    var typ_2315256024 = tmpTuple_2315256023["Field0"];
    var shift_2315256025 = tmpTuple_2315256023["Field1"];
    var fontStart_2315256026 = fontStarts_2315255958[chckIndx(typ_2315256024, 0, (fontStarts_2315255958).length - 1)][chckIndx(font_2315255982, 1, (fontStarts_2315255958[chckIndx(typ_2315256024, 0, (fontStarts_2315255958).length - 1)]).length + (1) - 1) - (1)];
    if ((fontStart_2315256026 == 0)) {
    Label6: {
      var fmtRes_2315256030 = [mnewString(0)];
      fmtRes_2315256030[0].push.apply(fmtRes_2315256030[0], [76,101,116,116,101,114,32]);;
      formatValue_2315256017(fmtRes_2315256030, 0, letter_2315255981, []);
      fmtRes_2315256030[0].push.apply(fmtRes_2315256030[0], [32,99,97,110,39,116,32,98,101,32,114,101,110,100,101,114,101,100,32,105,110,32,102,111,110,116,32]);;
      formatValue_2315256036(fmtRes_2315256030, 0, font_2315255982, []);
    };
    raiseException({message: nimCopy(null, fmtRes_2315256030[0], NTI33554449), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_2315255983 = nimCopy(null, HEX24_1040188049(((subInt(addInt(fontStart_2315256026, letter_2315255981), shift_2315256025)) | 0)), NTI33554449);
    break BeforeRet;
  };

  return result_2315255983;

}

function map_2298484307(s_2298484310, op_2298484312) {
  var result_2298484313 = [];

    result_2298484313 = new Array(chckRange((s_2298484310).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2298484310).length, 0, 2147483647) ; ++i) { result_2298484313[i] = null; }    Label1: {
      var i_2298484329 = 0;
      var colontmp__2281701652 = 0;
      colontmp__2281701652 = (s_2298484310).length;
      var i_2281701653 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701653 < colontmp__2281701652)) break Label3;
            i_2298484329 = i_2281701653;
            result_2298484313[chckIndx(i_2298484329, 0, (result_2298484313).length - 1)] = op_2298484312(s_2298484310[chckIndx(i_2298484329, 0, (s_2298484310).length - 1)]);
            i_2281701653 = addInt(i_2281701653, 1);
          }
      };
    };

  return result_2298484313;

}

function HEX3CHEX3C_2298483765(a_2298483768, b_2298483769) {

function succeedImpl_2298483781(inputInHEX60gensym76_2298483782, valueInHEX60gensym76_2298483783, tailInHEX60gensym76_2298483784) {
  var result_2298483786 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298483786 = nimCopy(result_2298483786, {kind: 0, value: valueInHEX60gensym76_2298483783, tail: nimCopy(null, tailInHEX60gensym76_2298483784, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym76_2298483782, NTI33554449), expected: []}, NTI2348810488);

  return result_2298483786;

}

function failImpl_2298483788(inputInHEX60gensym76_2298483789, expectedInHEX60gensym76_2298483790, tailInHEX60gensym76_2298483791) {
  var result_2298483793 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298483793 = nimCopy(result_2298483793, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym76_2298483790, NTI2298482362), tail: nimCopy(null, tailInHEX60gensym76_2298483791, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym76_2298483789, NTI33554449), value: 0}, NTI2348810488);

  return result_2298483793;

}
      
function HEX3Aanonymous_2298483796(input_2298483797) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298483799 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483800 = succeedImpl_2298483781;
          var fail_2298483801 = failImpl_2298483788;
          Label1: {
            var tempHEX60gensym30_2298483814 = parse_2348811258(a_2298483768, input_2298483797);
            if ((tempHEX60gensym30_2298483814.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_2298483814;
            if (ConstSet65[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483799 = nimCopy(result_2298483799, {kind: 1, fromInput: nimCopy(null, input_2298483797, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym30_2298483814.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result1_2298483820 = nimCopy(null, tempHEX60gensym30_2298483814, NTI2348810488);
          Label3: {
            var tempHEX60gensym32_2298483833 = parse_2348811258(b_2298483769, result1_2298483820.tail);
            if ((tempHEX60gensym32_2298483833.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_2298483833;
            if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298483799 = nimCopy(result_2298483799, {kind: 1, fromInput: nimCopy(null, input_2298483797, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym32_2298483833.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result2_2298483839 = nimCopy(null, tempHEX60gensym32_2298483833, NTI2348810488);
          var Temporary5 = result1_2298483820;
          if (ConstSet67[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298483799 = nimCopy(result_2298483799, succeed_2298483800(input_2298483797, Temporary5.value, result2_2298483839.tail), NTI2348810488);
          break BeforeRet;
        };

        return result_2298483799;

      }

  var result_2298483770 = null;

    Label1: {
    };
    result_2298483770 = {body: HEX3Aanonymous_2298483796};

  return result_2298483770;

}

function HEX3CHEX3C_2298483682(a_2298483685, b_2298483686) {

function succeedImpl_2298483698(inputInHEX60gensym75_2298483699, valueInHEX60gensym75_2298483700, tailInHEX60gensym75_2298483701) {
  var result_2298483703 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298483703 = nimCopy(result_2298483703, {kind: 0, value: valueInHEX60gensym75_2298483700, tail: nimCopy(null, tailInHEX60gensym75_2298483701, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym75_2298483699, NTI33554449), expected: []}, NTI2348810488);

  return result_2298483703;

}

function failImpl_2298483705(inputInHEX60gensym75_2298483706, expectedInHEX60gensym75_2298483707, tailInHEX60gensym75_2298483708) {
  var result_2298483710 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298483710 = nimCopy(result_2298483710, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym75_2298483707, NTI2298482301), tail: nimCopy(null, tailInHEX60gensym75_2298483708, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym75_2298483706, NTI33554449), value: 0}, NTI2348810488);

  return result_2298483710;

}
      
function HEX3Aanonymous_2298483713(input_2298483714) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298483716 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483717 = succeedImpl_2298483698;
          var fail_2298483718 = failImpl_2298483705;
          Label1: {
            var tempHEX60gensym30_2298483731 = parse_2348811258(a_2298483685, input_2298483714);
            if ((tempHEX60gensym30_2298483731.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_2298483731;
            if (ConstSet68[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483716 = nimCopy(result_2298483716, {kind: 1, fromInput: nimCopy(null, input_2298483714, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym30_2298483731.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result1_2298483737 = nimCopy(null, tempHEX60gensym30_2298483731, NTI2348810488);
          Label3: {
            var tempHEX60gensym32_2298483750 = parse_2298480719(b_2298483686, result1_2298483737.tail);
            if ((tempHEX60gensym32_2298483750.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_2298483750;
            if (ConstSet69[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298483716 = nimCopy(result_2298483716, {kind: 1, fromInput: nimCopy(null, input_2298483714, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym32_2298483750.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result2_2298483756 = nimCopy(null, tempHEX60gensym32_2298483750, NTI2298479452);
          var Temporary5 = result1_2298483737;
          if (ConstSet70[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298483716 = nimCopy(result_2298483716, succeed_2298483717(input_2298483714, Temporary5.value, result2_2298483756.tail), NTI2348810488);
          break BeforeRet;
        };

        return result_2298483716;

      }

  var result_2298483687 = null;

    Label1: {
    };
    result_2298483687 = {body: HEX3Aanonymous_2298483713};

  return result_2298483687;

}

function HEX3EHEX3E_2298483503(a_2298483506, b_2298483507) {

function succeedImpl_2298483519(inputInHEX60gensym73_2298483520, valueInHEX60gensym73_2298483521, tailInHEX60gensym73_2298483522) {
  var result_2298483524 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298483524 = nimCopy(result_2298483524, {kind: 0, value: valueInHEX60gensym73_2298483521, tail: nimCopy(null, tailInHEX60gensym73_2298483522, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym73_2298483520, NTI33554449), expected: []}, NTI2348810488);

  return result_2298483524;

}

function failImpl_2298483526(inputInHEX60gensym73_2298483527, expectedInHEX60gensym73_2298483528, tailInHEX60gensym73_2298483529) {
  var result_2298483531 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298483531 = nimCopy(result_2298483531, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym73_2298483528, NTI2298482174), tail: nimCopy(null, tailInHEX60gensym73_2298483529, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym73_2298483527, NTI33554449), value: 0}, NTI2348810488);

  return result_2298483531;

}
      
function HEX3Aanonymous_2298483534(input_2298483535) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298483537 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483538 = succeedImpl_2298483519;
          var fail_2298483539 = failImpl_2298483526;
          Label1: {
            var tempHEX60gensym34_2298483552 = parse_2298480719(a_2298483506, input_2298483535);
            if ((tempHEX60gensym34_2298483552.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298483552;
            if (ConstSet71[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483537 = nimCopy(result_2298483537, {kind: 1, fromInput: nimCopy(null, input_2298483535, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298483552.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result1_2298483558 = nimCopy(null, tempHEX60gensym34_2298483552, NTI2298479452);
          Label3: {
            var tempHEX60gensym36_2298483571 = parse_2348811258(b_2298483507, result1_2298483558.tail);
            if ((tempHEX60gensym36_2298483571.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298483571;
            if (ConstSet72[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298483537 = nimCopy(result_2298483537, {kind: 1, fromInput: nimCopy(null, input_2298483535, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298483571.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result2_2298483577 = nimCopy(null, tempHEX60gensym36_2298483571, NTI2348810488);
          var Temporary5 = result2_2298483577;
          if (ConstSet73[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298483537 = nimCopy(result_2298483537, succeed_2298483538(input_2298483535, Temporary5.value, result2_2298483577.tail), NTI2348810488);
          break BeforeRet;
        };

        return result_2298483537;

      }

  var result_2298483508 = null;

    Label1: {
    };
    result_2298483508 = {body: HEX3Aanonymous_2298483534};

  return result_2298483508;

}

function HEX3EHEX3E_2298483586(a_2298483589, b_2298483590) {

function succeedImpl_2298483602(inputInHEX60gensym74_2298483603, valueInHEX60gensym74_2298483604, tailInHEX60gensym74_2298483605) {
  var result_2298483607 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298483607 = nimCopy(result_2298483607, {kind: 0, value: nimCopy(null, valueInHEX60gensym74_2298483604, NTI2298479446), tail: nimCopy(null, tailInHEX60gensym74_2298483605, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym74_2298483603, NTI33554449), expected: []}, NTI2298479452);

  return result_2298483607;

}

function failImpl_2298483609(inputInHEX60gensym74_2298483610, expectedInHEX60gensym74_2298483611, tailInHEX60gensym74_2298483612) {
  var result_2298483614 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298483614 = nimCopy(result_2298483614, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym74_2298483611, NTI2298482235), tail: nimCopy(null, tailInHEX60gensym74_2298483612, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym74_2298483610, NTI33554449), value: []}, NTI2298479452);

  return result_2298483614;

}
      
function HEX3Aanonymous_2298483617(input_2298483618) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298483620 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483621 = succeedImpl_2298483602;
          var fail_2298483622 = failImpl_2298483609;
          Label1: {
            var tempHEX60gensym34_2298483635 = parse_2348811258(a_2298483589, input_2298483618);
            if ((tempHEX60gensym34_2298483635.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298483635;
            if (ConstSet74[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483620 = nimCopy(result_2298483620, {kind: 1, fromInput: nimCopy(null, input_2298483618, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298483635.tail, NTI33554449), value: []}, NTI2298479452);
            break BeforeRet;
            }
            
          };
          var result1_2298483641 = nimCopy(null, tempHEX60gensym34_2298483635, NTI2348810488);
          Label3: {
            var tempHEX60gensym36_2298483654 = parse_2298480719(b_2298483590, result1_2298483641.tail);
            if ((tempHEX60gensym36_2298483654.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298483654;
            if (ConstSet75[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298483620 = nimCopy(result_2298483620, {kind: 1, fromInput: nimCopy(null, input_2298483618, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298483654.tail, NTI33554449), value: []}, NTI2298479452);
            break BeforeRet;
            }
            
          };
          var result2_2298483660 = nimCopy(null, tempHEX60gensym36_2298483654, NTI2298479452);
          var Temporary5 = result2_2298483660;
          if (ConstSet76[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298483620 = nimCopy(result_2298483620, succeed_2298483621(input_2298483618, Temporary5.value, result2_2298483660.tail), NTI2298479452);
          break BeforeRet;
        };

        return result_2298483620;

      }

  var result_2298483591 = null;

    Label1: {
    };
    result_2298483591 = {body: HEX3Aanonymous_2298483617};

  return result_2298483591;

}

function HEX3EHEX3E_2298483420(a_2298483423, b_2298483424) {

function succeedImpl_2298483436(inputInHEX60gensym72_2298483437, valueInHEX60gensym72_2298483438, tailInHEX60gensym72_2298483439) {
  var result_2298483441 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298483441 = nimCopy(result_2298483441, {kind: 0, value: nimCopy(null, valueInHEX60gensym72_2298483438, NTI2298479446), tail: nimCopy(null, tailInHEX60gensym72_2298483439, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym72_2298483437, NTI33554449), expected: []}, NTI2298479452);

  return result_2298483441;

}

function failImpl_2298483443(inputInHEX60gensym72_2298483444, expectedInHEX60gensym72_2298483445, tailInHEX60gensym72_2298483446) {
  var result_2298483448 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298483448 = nimCopy(result_2298483448, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym72_2298483445, NTI2298482113), tail: nimCopy(null, tailInHEX60gensym72_2298483446, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym72_2298483444, NTI33554449), value: []}, NTI2298479452);

  return result_2298483448;

}
      
function HEX3Aanonymous_2298483451(input_2298483452) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298483454 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298483455 = succeedImpl_2298483436;
          var fail_2298483456 = failImpl_2298483443;
          Label1: {
            var tempHEX60gensym34_2298483469 = parse_2298480475(a_2298483423, input_2298483452);
            if ((tempHEX60gensym34_2298483469.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298483469;
            if (ConstSet77[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298483454 = nimCopy(result_2298483454, {kind: 1, fromInput: nimCopy(null, input_2298483452, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298483469.tail, NTI33554449), value: []}, NTI2298479452);
            break BeforeRet;
            }
            
          };
          var result1_2298483475 = nimCopy(null, tempHEX60gensym34_2298483469, NTI2348810372);
          Label3: {
            var tempHEX60gensym36_2298483488 = parse_2298480719(b_2298483424, result1_2298483475.tail);
            if ((tempHEX60gensym36_2298483488.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298483488;
            if (ConstSet78[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298483454 = nimCopy(result_2298483454, {kind: 1, fromInput: nimCopy(null, input_2298483452, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298483488.tail, NTI33554449), value: []}, NTI2298479452);
            break BeforeRet;
            }
            
          };
          var result2_2298483494 = nimCopy(null, tempHEX60gensym36_2298483488, NTI2298479452);
          var Temporary5 = result2_2298483494;
          if (ConstSet79[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298483454 = nimCopy(result_2298483454, succeed_2298483455(input_2298483452, Temporary5.value, result2_2298483494.tail), NTI2298479452);
          break BeforeRet;
        };

        return result_2298483454;

      }

  var result_2298483425 = null;

    Label1: {
    };
    result_2298483425 = {body: HEX3Aanonymous_2298483451};

  return result_2298483425;

}

function nsuStartsWith(s_754976174, prefix_754976175) {
  var result_754976176 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_754976181 = (prefix_754976175).length;
    var sLenHEX60gensym146_754976182 = (s_754976174).length;
    var iHEX60gensym146_754976183 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_754976181 <= iHEX60gensym146_754976183)) {
          result_754976176 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_754976182 <= iHEX60gensym146_754976183) || !((s_754976174[chckIndx(iHEX60gensym146_754976183, 0, (s_754976174).length - 1)] == prefix_754976175[chckIndx(iHEX60gensym146_754976183, 0, (prefix_754976175).length - 1)])))) {
          result_754976176 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_754976183 = addInt(iHEX60gensym146_754976183, 1);
        }
    };
  };

  return result_754976176;

}

function s_2348810351(expect_2348810352) {

function succeedImpl_2348810373(inputInHEX60gensym2_2348810374, valueInHEX60gensym2_2348810375, tailInHEX60gensym2_2348810376) {
  var result_2348810378 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2348810378 = nimCopy(result_2348810378, {kind: 0, value: nimCopy(null, valueInHEX60gensym2_2348810375, NTI33554449), tail: nimCopy(null, tailInHEX60gensym2_2348810376, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym2_2348810374, NTI33554449), expected: []}, NTI2348810372);

  return result_2348810378;

}

function failImpl_2348810422(inputInHEX60gensym2_2348810423, expectedInHEX60gensym2_2348810424, tailInHEX60gensym2_2348810425) {
  var result_2348810427 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2348810427 = nimCopy(result_2348810427, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym2_2348810424, NTI2348810412), tail: nimCopy(null, tailInHEX60gensym2_2348810425, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym2_2348810423, NTI33554449), value: []}, NTI2348810372);

  return result_2348810427;

}
      expect_2348810352 = nimCopy(null, expect_2348810352, NTI33554449);
      
function HEX3Aanonymous_2348810430(input_2348810431) {
        var result_2348810433 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2348810434 = succeedImpl_2348810373;
          var fail_2348810435 = failImpl_2348810422;
          if (nsuStartsWith(input_2348810431, expect_2348810352)) {
          result_2348810433 = nimCopy(result_2348810433, succeed_2348810434(input_2348810431, expect_2348810352, HEX5BHEX5D_754976027(input_2348810431, HEX2EHEX2E_973078632((expect_2348810352).length, 1))), NTI2348810372);
          break BeforeRet;
          }
          
          result_2348810433 = nimCopy(result_2348810433, fail_2348810435(input_2348810431, [nsuFormatSingleElem([39,36,49,39], expect_2348810352)], input_2348810431), NTI2348810372);
        };

        return result_2348810433;

      }

  var result_2348810362 = null;

    Label1: {
    };
    result_2348810362 = {body: HEX3Aanonymous_2348810430};

  return result_2348810362;

}

function c_2348810521(expect_2348810522) {

function succeedImpl_2348810543(inputInHEX60gensym5_2348810544, valueInHEX60gensym5_2348810545, tailInHEX60gensym5_2348810546) {
  var result_2348810548 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348810548 = nimCopy(result_2348810548, {kind: 0, value: valueInHEX60gensym5_2348810545, tail: nimCopy(null, tailInHEX60gensym5_2348810546, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym5_2348810544, NTI33554449), expected: []}, NTI2348810488);

  return result_2348810548;

}

function failImpl_2348810576(inputInHEX60gensym5_2348810577, expectedInHEX60gensym5_2348810578, tailInHEX60gensym5_2348810579) {
  var result_2348810581 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2348810581 = nimCopy(result_2348810581, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym5_2348810578, NTI2348810519), tail: nimCopy(null, tailInHEX60gensym5_2348810579, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym5_2348810577, NTI33554449), value: 0}, NTI2348810488);

  return result_2348810581;

}
      
function HEX3Aanonymous_2348810584(input_2348810585) {
        var result_2348810587 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2348810588 = succeedImpl_2348810543;
          var fail_2348810589 = failImpl_2348810576;
          if (((0 < (input_2348810585).length) && (input_2348810585[chckIndx(0, 0, (input_2348810585).length - 1)] == expect_2348810522))) {
          result_2348810587 = nimCopy(result_2348810587, succeed_2348810588(input_2348810585, expect_2348810522, HEX5BHEX5D_754976027(input_2348810585, HEX2EHEX2E_973078632(1, 1))), NTI2348810488);
          break BeforeRet;
          }
          
          result_2348810587 = nimCopy(result_2348810587, fail_2348810589(input_2348810585, [nsuFormatSingleElem([39,36,49,39], nimCharToStr(expect_2348810522))], input_2348810585), NTI2348810488);
        };

        return result_2348810587;

      }

  var result_2348810532 = null;

    Label1: {
    };
    result_2348810532 = {body: HEX3Aanonymous_2348810584};

  return result_2348810532;

}

function map_2298484772(s_2298484775, op_2298484777) {
  var result_2298484778 = [];

    result_2298484778 = new Array(chckRange((s_2298484775).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2298484775).length, 0, 2147483647) ; ++i) { result_2298484778[i] = null; }    Label1: {
      var i_2298484793 = 0;
      var colontmp__2281701677 = 0;
      colontmp__2281701677 = (s_2298484775).length;
      var i_2281701678 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701678 < colontmp__2281701677)) break Label3;
            i_2298484793 = i_2281701678;
            result_2298484778[chckIndx(i_2298484793, 0, (result_2298484778).length - 1)] = op_2298484777(s_2298484775[chckIndx(i_2298484793, 0, (s_2298484775).length - 1)]);
            i_2281701678 = addInt(i_2281701678, 1);
          }
      };
    };

  return result_2298484778;

}

function map_2298484654(a_2298484657, fn_2298484659) {

function succeedImpl_2298484671(inputInHEX60gensym96_2298484672, valueInHEX60gensym96_2298484673, tailInHEX60gensym96_2298484674) {
  var result_2298484676 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298484676 = nimCopy(result_2298484676, {kind: 0, value: nimCopy(null, valueInHEX60gensym96_2298484673, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym96_2298484674, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym96_2298484672, NTI33554449), expected: []}, NTI2298480603);

  return result_2298484676;

}

function failImpl_2298484678(inputInHEX60gensym96_2298484679, expectedInHEX60gensym96_2298484680, tailInHEX60gensym96_2298484681) {
  var result_2298484683 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298484683 = nimCopy(result_2298484683, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym96_2298484680, NTI2298483082), tail: nimCopy(null, tailInHEX60gensym96_2298484681, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym96_2298484679, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298484683;

}
      
function HEX3Aanonymous_2298484686(input_2298484687) {
            var Temporary2;
          var Temporary3;

        var result_2298484689 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298484690 = succeedImpl_2298484671;
          var fail_2298484691 = failImpl_2298484678;
          Label1: {
            var tempHEX60gensym24_2298484704 = parse_2298480475(a_2298484657, input_2298484687);
            if ((tempHEX60gensym24_2298484704.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298484704;
            if (ConstSet80[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298484689 = nimCopy(result_2298484689, {kind: 1, fromInput: nimCopy(null, input_2298484687, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298484704.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298484710 = nimCopy(null, tempHEX60gensym24_2298484704, NTI2348810372);
          var Temporary3 = result1_2298484710;
          if (ConstSet81[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298484689 = nimCopy(result_2298484689, succeed_2298484690(input_2298484687, fn_2298484659(Temporary3.value), result1_2298484710.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298484689;

      }

  var result_2298484660 = null;

    Label1: {
    };
    result_2298484660 = {body: HEX3Aanonymous_2298484686};

  return result_2298484660;

}

function HEX3CHEX3C_2298484540(a_2298484543, b_2298484544) {

function succeedImpl_2298484556(inputInHEX60gensym94_2298484557, valueInHEX60gensym94_2298484558, tailInHEX60gensym94_2298484559) {
  var result_2298484561 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298484561 = nimCopy(result_2298484561, {kind: 0, value: nimCopy(null, valueInHEX60gensym94_2298484558, NTI33554449), tail: nimCopy(null, tailInHEX60gensym94_2298484559, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym94_2298484557, NTI33554449), expected: []}, NTI2348810372);

  return result_2298484561;

}

function failImpl_2298484563(inputInHEX60gensym94_2298484564, expectedInHEX60gensym94_2298484565, tailInHEX60gensym94_2298484566) {
  var result_2298484568 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298484568 = nimCopy(result_2298484568, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym94_2298484565, NTI2298482993), tail: nimCopy(null, tailInHEX60gensym94_2298484566, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym94_2298484564, NTI33554449), value: []}, NTI2348810372);

  return result_2298484568;

}
      
function HEX3Aanonymous_2298484571(input_2298484572) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298484574 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298484575 = succeedImpl_2298484556;
          var fail_2298484576 = failImpl_2298484563;
          Label1: {
            var tempHEX60gensym30_2298484589 = parse_2298480475(a_2298484543, input_2298484572);
            if ((tempHEX60gensym30_2298484589.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_2298484589;
            if (ConstSet82[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298484574 = nimCopy(result_2298484574, {kind: 1, fromInput: nimCopy(null, input_2298484572, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym30_2298484589.tail, NTI33554449), value: []}, NTI2348810372);
            break BeforeRet;
            }
            
          };
          var result1_2298484595 = nimCopy(null, tempHEX60gensym30_2298484589, NTI2348810372);
          Label3: {
            var tempHEX60gensym32_2298484608 = parse_2348811258(b_2298484544, result1_2298484595.tail);
            if ((tempHEX60gensym32_2298484608.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_2298484608;
            if (ConstSet83[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298484574 = nimCopy(result_2298484574, {kind: 1, fromInput: nimCopy(null, input_2298484572, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym32_2298484608.tail, NTI33554449), value: []}, NTI2348810372);
            break BeforeRet;
            }
            
          };
          var result2_2298484614 = nimCopy(null, tempHEX60gensym32_2298484608, NTI2348810488);
          var Temporary5 = result1_2298484595;
          if (ConstSet84[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298484574 = nimCopy(result_2298484574, succeed_2298484575(input_2298484572, Temporary5.value, result2_2298484614.tail), NTI2348810372);
          break BeforeRet;
        };

        return result_2298484574;

      }

  var result_2298484545 = null;

    Label1: {
    };
    result_2298484545 = {body: HEX3Aanonymous_2298484571};

  return result_2298484545;

}

function HEX21_2298484483(a_2298484485) {

function succeedImpl_2298484497(inputInHEX60gensym93_2298484498, valueInHEX60gensym93_2298484499, tailInHEX60gensym93_2298484500) {
  var result_2298484502 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298484502 = nimCopy(result_2298484502, {kind: 0, value: valueInHEX60gensym93_2298484499, tail: nimCopy(null, tailInHEX60gensym93_2298484500, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym93_2298484498, NTI33554449), expected: []}, NTI2348810488);

  return result_2298484502;

}

function failImpl_2298484504(inputInHEX60gensym93_2298484505, expectedInHEX60gensym93_2298484506, tailInHEX60gensym93_2298484507) {
  var result_2298484509 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298484509 = nimCopy(result_2298484509, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym93_2298484506, NTI2298482948), tail: nimCopy(null, tailInHEX60gensym93_2298484507, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym93_2298484505, NTI33554449), value: 0}, NTI2348810488);

  return result_2298484509;

}
      
function HEX3Aanonymous_2298484512(input_2298484513) {
        var result_2298484515 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298484516 = succeedImpl_2298484497;
          var fail_2298484517 = failImpl_2298484504;
          var result1_2298484530 = parse_2348811258(a_2298484485, input_2298484513);
          switch (result1_2298484530.kind) {
          case 0:
            result_2298484515 = nimCopy(result_2298484515, fail_2298484517(input_2298484513, [[115,117,99,99,101,115,115,102,117,108,32,110,101,103,97,116,105,118,101,32,108,111,111,107,97,104,101,97,100]], input_2298484513), NTI2348810488);
            break BeforeRet;
            break;
          case 1:
            result_2298484515 = nimCopy(result_2298484515, succeed_2298484516(input_2298484513, 0, input_2298484513), NTI2348810488);
            break BeforeRet;
            break;
          }
        };

        return result_2298484515;

      }

  var result_2298484486 = null;

    Label1: {
    };
    result_2298484486 = {body: HEX3Aanonymous_2298484512};

  return result_2298484486;

}

function validate_2298486558(p_2298486560, fn_2298486562, expected_2298486563) {

function succeedImpl_2298486575(inputInHEX60gensym129_2298486576, valueInHEX60gensym129_2298486577, tailInHEX60gensym129_2298486578) {
  var result_2298486580 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486580 = nimCopy(result_2298486580, {kind: 0, value: nimCopy(null, valueInHEX60gensym129_2298486577, NTI33554449), tail: nimCopy(null, tailInHEX60gensym129_2298486578, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym129_2298486576, NTI33554449), expected: []}, NTI2348810372);

  return result_2298486580;

}

function failImpl_2298486582(inputInHEX60gensym129_2298486583, expectedInHEX60gensym129_2298486584, tailInHEX60gensym129_2298486585) {
  var result_2298486587 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486587 = nimCopy(result_2298486587, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym129_2298486584, NTI2298484582), tail: nimCopy(null, tailInHEX60gensym129_2298486585, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym129_2298486583, NTI33554449), value: []}, NTI2348810372);

  return result_2298486587;

}
      expected_2298486563 = nimCopy(null, expected_2298486563, NTI33554449);
      
function HEX3Aanonymous_2298486590(input_2298486591) {
              var Temporary1;

        var result_2298486593 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298486594 = succeedImpl_2298486575;
          var fail_2298486595 = failImpl_2298486582;
          var result1_2298486608 = parse_2298480475(p_2298486560, input_2298486591);
          switch (result1_2298486608.kind) {
          case 1:
            result_2298486593 = nimCopy(result_2298486593, result1_2298486608, NTI2348810372);
            break BeforeRet;
            break;
          case 0:
              var Temporary1 = result1_2298486608;
              if (ConstSet85[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
            if (fn_2298486562(Temporary1.value)) {
            result_2298486593 = nimCopy(result_2298486593, result1_2298486608, NTI2348810372);
            break BeforeRet;
            }
            
            result_2298486593 = nimCopy(result_2298486593, fail_2298486595(input_2298486591, [nimCopy(null, expected_2298486563, NTI33554449)], input_2298486591), NTI2348810372);
            break BeforeRet;
            break;
          }
        };

        return result_2298486593;

      }

  var result_2298486564 = null;

    Label1: {
    };
    result_2298486564 = {body: HEX3Aanonymous_2298486590};

  return result_2298486564;

}

function parse_2298485397(p_2298485399, input_2298485400) {
  var result_2298485401 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298485399.body == null)) {
    result_2298485401 = nimCopy(result_2298485401, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298485400, NTI33554449), fromInput: nimCopy(null, input_2298485400, NTI33554449), value: []}, NTI2298483190);
    break BeforeRet;
    }
    
    result_2298485401 = nimCopy(result_2298485401, p_2298485399.body(input_2298485400), NTI2298483190);
  };

  return result_2298485401;

}

function map_2298486424(a_2298486427, fn_2298486429) {

function succeedImpl_2298486441(inputInHEX60gensym127_2298486442, valueInHEX60gensym127_2298486443, tailInHEX60gensym127_2298486444) {
  var result_2298486446 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486446 = nimCopy(result_2298486446, {kind: 0, value: nimCopy(null, valueInHEX60gensym127_2298486443, NTI33554449), tail: nimCopy(null, tailInHEX60gensym127_2298486444, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym127_2298486442, NTI33554449), expected: []}, NTI2348810372);

  return result_2298486446;

}

function failImpl_2298486448(inputInHEX60gensym127_2298486449, expectedInHEX60gensym127_2298486450, tailInHEX60gensym127_2298486451) {
  var result_2298486453 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486453 = nimCopy(result_2298486453, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym127_2298486450, NTI2298484504), tail: nimCopy(null, tailInHEX60gensym127_2298486451, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym127_2298486449, NTI33554449), value: []}, NTI2348810372);

  return result_2298486453;

}
      
function HEX3Aanonymous_2298486456(input_2298486457) {
            var Temporary2;
          var Temporary3;

        var result_2298486459 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298486460 = succeedImpl_2298486441;
          var fail_2298486461 = failImpl_2298486448;
          Label1: {
            var tempHEX60gensym24_2298486474 = parse_2298485397(a_2298486427, input_2298486457);
            if ((tempHEX60gensym24_2298486474.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298486474;
            if (ConstSet86[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298486459 = nimCopy(result_2298486459, {kind: 1, fromInput: nimCopy(null, input_2298486457, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298486474.tail, NTI33554449), value: []}, NTI2348810372);
            break BeforeRet;
            }
            
          };
          var result1_2298486480 = nimCopy(null, tempHEX60gensym24_2298486474, NTI2298483190);
          var Temporary3 = result1_2298486480;
          if (ConstSet87[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298486459 = nimCopy(result_2298486459, succeed_2298486460(input_2298486457, fn_2298486429(Temporary3.value), result1_2298486480.tail), NTI2348810372);
          break BeforeRet;
        };

        return result_2298486459;

      }

  var result_2298486430 = null;

    Label1: {
    };
    result_2298486430 = {body: HEX3Aanonymous_2298486456};

  return result_2298486430;

}

function HEX3EHEX3E_2298486296(a_2298486299, b_2298486300) {

function succeedImpl_2298486312(inputInHEX60gensym126_2298486313, valueInHEX60gensym126_2298486314, tailInHEX60gensym126_2298486315) {
  var result_2298486317 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486317 = nimCopy(result_2298486317, {kind: 0, value: nimCopy(null, valueInHEX60gensym126_2298486314, NTI2298483184), tail: nimCopy(null, tailInHEX60gensym126_2298486315, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym126_2298486313, NTI33554449), expected: []}, NTI2298483190);

  return result_2298486317;

}

function failImpl_2298486319(inputInHEX60gensym126_2298486320, expectedInHEX60gensym126_2298486321, tailInHEX60gensym126_2298486322) {
  var result_2298486324 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486324 = nimCopy(result_2298486324, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym126_2298486321, NTI2298484407), tail: nimCopy(null, tailInHEX60gensym126_2298486322, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym126_2298486320, NTI33554449), value: []}, NTI2298483190);

  return result_2298486324;

}
      
function HEX3Aanonymous_2298486327(input_2298486328) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298486330 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298486331 = succeedImpl_2298486312;
          var fail_2298486332 = failImpl_2298486319;
          Label1: {
            var tempHEX60gensym34_2298486345 = parse_2348811258(a_2298486299, input_2298486328);
            if ((tempHEX60gensym34_2298486345.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298486345;
            if (ConstSet88[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298486330 = nimCopy(result_2298486330, {kind: 1, fromInput: nimCopy(null, input_2298486328, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298486345.tail, NTI33554449), value: []}, NTI2298483190);
            break BeforeRet;
            }
            
          };
          var result1_2298486351 = nimCopy(null, tempHEX60gensym34_2298486345, NTI2348810488);
          Label3: {
            var tempHEX60gensym36_2298486364 = parse_2298485397(b_2298486300, result1_2298486351.tail);
            if ((tempHEX60gensym36_2298486364.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298486364;
            if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298486330 = nimCopy(result_2298486330, {kind: 1, fromInput: nimCopy(null, input_2298486328, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298486364.tail, NTI33554449), value: []}, NTI2298483190);
            break BeforeRet;
            }
            
          };
          var result2_2298486370 = nimCopy(null, tempHEX60gensym36_2298486364, NTI2298483190);
          var Temporary5 = result2_2298486370;
          if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298486330 = nimCopy(result_2298486330, succeed_2298486331(input_2298486328, Temporary5.value, result2_2298486370.tail), NTI2298483190);
          break BeforeRet;
        };

        return result_2298486330;

      }

  var result_2298486301 = null;

    Label1: {
    };
    result_2298486301 = {body: HEX3Aanonymous_2298486327};

  return result_2298486301;

}

function parse_2298485997(p_2298485999, input_2298486000) {
  var result_2298486001 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: {
    if ((p_2298485999.body == null)) {
    result_2298486001 = nimCopy(result_2298486001, {kind: 1, expected: [[102,111,114,119,97,114,100,45,100,101,99,108,97,114,101,100,32,112,97,114,115,101,114,32,116,111,32,98,101,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,46,98,101,99,111,109,101,40,80,97,114,115,101,114,41]], tail: nimCopy(null, input_2298486000, NTI33554449), fromInput: nimCopy(null, input_2298486000, NTI33554449), value: []}, NTI2298483700);
    break BeforeRet;
    }
    
    result_2298486001 = nimCopy(result_2298486001, p_2298485999.body(input_2298486000), NTI2298483700);
  };

  return result_2298486001;

}

function map_2298486231(a_2298486234, fn_2298486236) {

function succeedImpl_2298486248(inputInHEX60gensym125_2298486249, valueInHEX60gensym125_2298486250, tailInHEX60gensym125_2298486251) {
  var result_2298486253 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486253 = nimCopy(result_2298486253, {kind: 0, value: nimCopy(null, valueInHEX60gensym125_2298486250, NTI2298484252), tail: nimCopy(null, tailInHEX60gensym125_2298486251, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym125_2298486249, NTI33554449), expected: []}, NTI2298483190);

  return result_2298486253;

}

function failImpl_2298486255(inputInHEX60gensym125_2298486256, expectedInHEX60gensym125_2298486257, tailInHEX60gensym125_2298486258) {
  var result_2298486260 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298486260 = nimCopy(result_2298486260, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym125_2298486257, NTI2298484360), tail: nimCopy(null, tailInHEX60gensym125_2298486258, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym125_2298486256, NTI33554449), value: []}, NTI2298483190);

  return result_2298486260;

}
      
function HEX3Aanonymous_2298486263(input_2298486264) {
            var Temporary2;
          var Temporary3;

        var result_2298486266 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298486267 = succeedImpl_2298486248;
          var fail_2298486268 = failImpl_2298486255;
          Label1: {
            var tempHEX60gensym24_2298486281 = parse_2298485997(a_2298486234, input_2298486264);
            if ((tempHEX60gensym24_2298486281.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298486281;
            if (ConstSet91[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298486266 = nimCopy(result_2298486266, {kind: 1, fromInput: nimCopy(null, input_2298486264, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298486281.tail, NTI33554449), value: []}, NTI2298483190);
            break BeforeRet;
            }
            
          };
          var result1_2298486287 = nimCopy(null, tempHEX60gensym24_2298486281, NTI2298483700);
          var Temporary3 = result1_2298486287;
          if (ConstSet92[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298486266 = nimCopy(result_2298486266, succeed_2298486267(input_2298486264, fn_2298486236(Temporary3.value), result1_2298486287.tail), NTI2298483190);
          break BeforeRet;
        };

        return result_2298486266;

      }

  var result_2298486237 = null;

    Label1: {
    };
    result_2298486237 = {body: HEX3Aanonymous_2298486263};

  return result_2298486237;

}

function HEX26_2298486039(x_2298486041, y_2298486042) {
  var result_2298486043 = [];

    result_2298486043 = new Array(chckRange(addInt((x_2298486041).length, (y_2298486042).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2298486041).length, (y_2298486042).length), 0, 2147483647) ; ++i) { result_2298486043[i] = []; }    Label1: {
      var i_2298486062 = 0;
      var colontmp__2281701698 = 0;
      colontmp__2281701698 = subInt((x_2298486041).length, 1);
      var res_2281701699 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701699 <= colontmp__2281701698)) break Label3;
            i_2298486062 = res_2281701699;
            result_2298486043[chckIndx(i_2298486062, 0, (result_2298486043).length - 1)] = nimCopy(null, x_2298486041[chckIndx(i_2298486062, 0, (x_2298486041).length - 1)], NTI2298483184);
            res_2281701699 = addInt(res_2281701699, 1);
          }
      };
    };
    Label4: {
      var i_2298486070 = 0;
      var colontmp__2281701702 = 0;
      colontmp__2281701702 = subInt((y_2298486042).length, 1);
      var res_2281701703 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2281701703 <= colontmp__2281701702)) break Label6;
            i_2298486070 = res_2281701703;
            result_2298486043[chckIndx(addInt(i_2298486070, (x_2298486041).length), 0, (result_2298486043).length - 1)] = nimCopy(null, y_2298486042[chckIndx(i_2298486070, 0, (y_2298486042).length - 1)], NTI2298483184);
            res_2281701703 = addInt(res_2281701703, 1);
          }
      };
    };

  return result_2298486043;

}

function HEX26_2298485944(a_2298485949, b_2298485953) {

function succeedImpl_2298485968(inputInHEX60gensym119_2298485969, valueInHEX60gensym119_2298485970, tailInHEX60gensym119_2298485971) {
  var result_2298485973 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485973 = nimCopy(result_2298485973, {kind: 0, value: nimCopy(null, valueInHEX60gensym119_2298485970, NTI2298484133), tail: nimCopy(null, tailInHEX60gensym119_2298485971, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym119_2298485969, NTI33554449), expected: []}, NTI2298483700);

  return result_2298485973;

}

function failImpl_2298485975(inputInHEX60gensym119_2298485976, expectedInHEX60gensym119_2298485977, tailInHEX60gensym119_2298485978) {
  var result_2298485980 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485980 = nimCopy(result_2298485980, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym119_2298485977, NTI2298484139), tail: nimCopy(null, tailInHEX60gensym119_2298485978, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym119_2298485976, NTI33554449), value: []}, NTI2298483700);

  return result_2298485980;

}
      
function HEX3Aanonymous_2298485983(input_2298485984) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_2298485986 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298485987 = succeedImpl_2298485968;
          var fail_2298485988 = failImpl_2298485975;
          Label1: {
            var tempHEX60gensym26_2298486013 = parse_2298485997(a_2298485949, input_2298485984);
            if ((tempHEX60gensym26_2298486013.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_2298486013;
            if (ConstSet93[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298485986 = nimCopy(result_2298485986, {kind: 1, fromInput: nimCopy(null, input_2298485984, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym26_2298486013.tail, NTI33554449), value: []}, NTI2298483700);
            break BeforeRet;
            }
            
          };
          var result1_2298486019 = nimCopy(null, tempHEX60gensym26_2298486013, NTI2298483700);
          Label3: {
            var tempHEX60gensym28_2298486032 = parse_2298485997(b_2298485953, result1_2298486019.tail);
            if ((tempHEX60gensym28_2298486032.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_2298486032;
            if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298485986 = nimCopy(result_2298485986, {kind: 1, fromInput: nimCopy(null, input_2298485984, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym28_2298486032.tail, NTI33554449), value: []}, NTI2298483700);
            break BeforeRet;
            }
            
          };
          var result2_2298486038 = nimCopy(null, tempHEX60gensym28_2298486032, NTI2298483700);
          var Temporary5 = result1_2298486019;
          if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          var Temporary6 = result2_2298486038;
          if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2348810258)); }
          result_2298485986 = nimCopy(result_2298485986, succeed_2298485987(input_2298485984, HEX26_2298486039(Temporary5.value, Temporary6.value), result2_2298486038.tail), NTI2298483700);
          break BeforeRet;
        };

        return result_2298485986;

      }

  var result_2298485957 = null;

    Label1: {
    };
    result_2298485957 = {body: HEX3Aanonymous_2298485983};

  return result_2298485957;

}

function map_2298485693(a_2298485696, fn_2298485698) {

function succeedImpl_2298485710(inputInHEX60gensym115_2298485711, valueInHEX60gensym115_2298485712, tailInHEX60gensym115_2298485713) {
  var result_2298485715 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485715 = nimCopy(result_2298485715, {kind: 0, value: nimCopy(null, valueInHEX60gensym115_2298485712, NTI2298483831), tail: nimCopy(null, tailInHEX60gensym115_2298485713, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym115_2298485711, NTI33554449), expected: []}, NTI2298483700);

  return result_2298485715;

}

function failImpl_2298485717(inputInHEX60gensym115_2298485718, expectedInHEX60gensym115_2298485719, tailInHEX60gensym115_2298485720) {
  var result_2298485722 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485722 = nimCopy(result_2298485722, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym115_2298485719, NTI2298483887), tail: nimCopy(null, tailInHEX60gensym115_2298485720, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym115_2298485718, NTI33554449), value: []}, NTI2298483700);

  return result_2298485722;

}
      
function HEX3Aanonymous_2298485725(input_2298485726) {
            var Temporary2;
          var Temporary3;

        var result_2298485728 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298485729 = succeedImpl_2298485710;
          var fail_2298485730 = failImpl_2298485717;
          Label1: {
            var tempHEX60gensym24_2298485743 = parse_2298485397(a_2298485696, input_2298485726);
            if ((tempHEX60gensym24_2298485743.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298485743;
            if (ConstSet97[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298485728 = nimCopy(result_2298485728, {kind: 1, fromInput: nimCopy(null, input_2298485726, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298485743.tail, NTI33554449), value: []}, NTI2298483700);
            break BeforeRet;
            }
            
          };
          var result1_2298485749 = nimCopy(null, tempHEX60gensym24_2298485743, NTI2298483190);
          var Temporary3 = result1_2298485749;
          if (ConstSet98[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298485728 = nimCopy(result_2298485728, succeed_2298485729(input_2298485726, fn_2298485698(Temporary3.value), result1_2298485749.tail), NTI2298483700);
          break BeforeRet;
        };

        return result_2298485728;

      }

  var result_2298485699 = null;

    Label1: {
    };
    result_2298485699 = {body: HEX3Aanonymous_2298485725};

  return result_2298485699;

}

function nop_2298484878() {

function succeedImpl_2298484891(inputInHEX60gensym105_2298484892, valueInHEX60gensym105_2298484893, tailInHEX60gensym105_2298484894) {
  var result_2298484896 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298484896 = nimCopy(result_2298484896, {kind: 0, value: nimCopy(null, valueInHEX60gensym105_2298484893, NTI2298483233), tail: nimCopy(null, tailInHEX60gensym105_2298484894, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym105_2298484892, NTI33554449), expected: []}, NTI2298483190);

  return result_2298484896;

}

function failImpl_2298484940(inputInHEX60gensym105_2298484941, expectedInHEX60gensym105_2298484942, tailInHEX60gensym105_2298484943) {
  var result_2298484945 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298484945 = nimCopy(result_2298484945, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym105_2298484942, NTI2298483272), tail: nimCopy(null, tailInHEX60gensym105_2298484943, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym105_2298484941, NTI33554449), value: []}, NTI2298483190);

  return result_2298484945;

}
      
function HEX3Aanonymous_2298484948(input_2298484949) {
        var result_2298484951 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_2298484952 = succeedImpl_2298484891;
          var fail_2298484953 = failImpl_2298484940;
          result_2298484951 = nimCopy(result_2298484951, succeed_2298484952(input_2298484949, [], input_2298484949), NTI2298483190);

        return result_2298484951;

      }

  var result_2298484880 = null;

    Label1: {
    };
    result_2298484880 = {body: HEX3Aanonymous_2298484948};

  return result_2298484880;

}

function map_2298485111(a_2298485114, fn_2298485116) {

function succeedImpl_2298485128(inputInHEX60gensym107_2298485129, valueInHEX60gensym107_2298485130, tailInHEX60gensym107_2298485131) {
  var result_2298485133 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485133 = nimCopy(result_2298485133, {kind: 0, value: nimCopy(null, valueInHEX60gensym107_2298485130, NTI2298483357), tail: nimCopy(null, tailInHEX60gensym107_2298485131, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym107_2298485129, NTI33554449), expected: []}, NTI2298483190);

  return result_2298485133;

}

function failImpl_2298485135(inputInHEX60gensym107_2298485136, expectedInHEX60gensym107_2298485137, tailInHEX60gensym107_2298485138) {
  var result_2298485140 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485140 = nimCopy(result_2298485140, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym107_2298485137, NTI2298483421), tail: nimCopy(null, tailInHEX60gensym107_2298485138, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym107_2298485136, NTI33554449), value: []}, NTI2298483190);

  return result_2298485140;

}
      
function HEX3Aanonymous_2298485143(input_2298485144) {
            var Temporary2;
          var Temporary3;

        var result_2298485146 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298485147 = succeedImpl_2298485128;
          var fail_2298485148 = failImpl_2298485135;
          Label1: {
            var tempHEX60gensym24_2298485161 = parse_2348811258(a_2298485114, input_2298485144);
            if ((tempHEX60gensym24_2298485161.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298485161;
            if (ConstSet99[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298485146 = nimCopy(result_2298485146, {kind: 1, fromInput: nimCopy(null, input_2298485144, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298485161.tail, NTI33554449), value: []}, NTI2298483190);
            break BeforeRet;
            }
            
          };
          var result1_2298485167 = nimCopy(null, tempHEX60gensym24_2298485161, NTI2348810488);
          var Temporary3 = result1_2298485167;
          if (ConstSet100[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298485146 = nimCopy(result_2298485146, succeed_2298485147(input_2298485144, fn_2298485116(Temporary3.value), result1_2298485167.tail), NTI2298483190);
          break BeforeRet;
        };

        return result_2298485146;

      }

  var result_2298485117 = null;

    Label1: {
    };
    result_2298485117 = {body: HEX3Aanonymous_2298485143};

  return result_2298485117;

}

function HEX2A_2298484870(a_2298484872, n_2298484873) {
    var Temporary1;
      
function HEX3Aanonymous_2298485050(x_2298485086) {
        var result_2298485089 = [];

          result_2298485089 = nimCopy(null, [x_2298485086], NTI2298483357);

        return result_2298485089;

      }

function succeedImpl_2298485178(inputInHEX60gensym108_2298485179, valueInHEX60gensym108_2298485180, tailInHEX60gensym108_2298485181) {
  var result_2298485183 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485183 = nimCopy(result_2298485183, {kind: 0, value: nimCopy(null, valueInHEX60gensym108_2298485180, NTI2298483461), tail: nimCopy(null, tailInHEX60gensym108_2298485181, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym108_2298485179, NTI33554449), expected: []}, NTI2298483190);

  return result_2298485183;

}

function failImpl_2298485185(inputInHEX60gensym108_2298485186, expectedInHEX60gensym108_2298485187, tailInHEX60gensym108_2298485188) {
  var result_2298485190 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485190 = nimCopy(result_2298485190, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym108_2298485187, NTI2298483467), tail: nimCopy(null, tailInHEX60gensym108_2298485188, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym108_2298485186, NTI33554449), value: []}, NTI2298483190);

  return result_2298485190;

}
        
function HEX3Aanonymous_2298485193(input_2298485194) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_2298485196 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: {
            var succeed_2298485197 = succeedImpl_2298485178;
            var fail_2298485198 = failImpl_2298485185;
            Label1: {
              var tempHEX60gensym38_2298485211 = parse_2348811258(a_2298484872, input_2298485194);
              if ((tempHEX60gensym38_2298485211.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_2298485211;
              if (ConstSet101[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
              result_2298485196 = nimCopy(result_2298485196, {kind: 1, fromInput: nimCopy(null, input_2298485194, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym38_2298485211.tail, NTI33554449), value: []}, NTI2298483190);
              break BeforeRet;
              }
              
            };
            var result1_2298485217 = nimCopy(null, tempHEX60gensym38_2298485211, NTI2348810488);
            var Temporary3 = result1_2298485217;
            if (ConstSet102[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
            var outputs_2298485222 = [Temporary3.value];
            var lastTail_2298485223 = nimCopy(null, result1_2298485217.tail, NTI33554449);
            Label4: {
              var i_2298485229 = 0;
              var res_2281701711 = 2;
              Label5: {
                  Label6: while (true) {
                  if (!(res_2281701711 <= n_2298484873)) break Label6;
                    i_2298485229 = res_2281701711;
                    Label7: {
                      var tempHEX60gensym40_2298485242 = parse_2348811258(a_2298484872, result1_2298485217.tail);
                      if ((tempHEX60gensym40_2298485242.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_2298485242;
                      if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2348810258)); }
                      result_2298485196 = nimCopy(result_2298485196, {kind: 1, fromInput: nimCopy(null, input_2298485194, NTI33554449), expected: nimCopy(null, Temporary8.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym40_2298485242.tail, NTI33554449), value: []}, NTI2298483190);
                      break BeforeRet;
                      }
                      
                    };
                    result1_2298485217 = nimCopy(result1_2298485217, tempHEX60gensym40_2298485242, NTI2348810488);
                    if (eqStrings(result1_2298485217.tail, lastTail_2298485223)) {
                    break Label4;
                    }
                    
                    lastTail_2298485223 = nimCopy(null, result1_2298485217.tail, NTI33554449);
                    var Temporary9 = result1_2298485217;
                    if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2348810258)); }
                    outputs_2298485222.push(Temporary9.value);;
                    res_2281701711 = addInt(res_2281701711, 1);
                  }
              };
            };
            result_2298485196 = nimCopy(result_2298485196, succeed_2298485197(input_2298485194, outputs_2298485222, result1_2298485217.tail), NTI2298483190);
          };

          return result_2298485196;

        }

  var result_2298484877 = null;

  BeforeRet: {
    if (    n_2298484873 == 0    ){      result_2298484877 = nop_2298484878();
      break BeforeRet;
      }
    else if (    n_2298484873 == 1    ){      result_2298484877 = map_2298485111(a_2298484872, HEX3Aanonymous_2298485050);
      break BeforeRet;
      }
    else{
      Label2: {
      };
      Temporary1 = {body: HEX3Aanonymous_2298485193};
      }
    result_2298484877 = Temporary1;
  };

  return result_2298484877;

}

function nop_2298485468() {

function succeedImpl_2298485481(inputInHEX60gensym113_2298485482, valueInHEX60gensym113_2298485483, tailInHEX60gensym113_2298485484) {
  var result_2298485486 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485486 = nimCopy(result_2298485486, {kind: 0, value: nimCopy(null, valueInHEX60gensym113_2298485483, NTI2298483707), tail: nimCopy(null, tailInHEX60gensym113_2298485484, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym113_2298485482, NTI33554449), expected: []}, NTI2298483700);

  return result_2298485486;

}

function failImpl_2298485530(inputInHEX60gensym113_2298485531, expectedInHEX60gensym113_2298485532, tailInHEX60gensym113_2298485533) {
  var result_2298485535 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485535 = nimCopy(result_2298485535, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym113_2298485532, NTI2298483746), tail: nimCopy(null, tailInHEX60gensym113_2298485533, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym113_2298485531, NTI33554449), value: []}, NTI2298483700);

  return result_2298485535;

}
      
function HEX3Aanonymous_2298485538(input_2298485539) {
        var result_2298485541 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_2298485542 = succeedImpl_2298485481;
          var fail_2298485543 = failImpl_2298485530;
          result_2298485541 = nimCopy(result_2298485541, succeed_2298485542(input_2298485539, [], input_2298485539), NTI2298483700);

        return result_2298485541;

      }

  var result_2298485470 = null;

    Label1: {
    };
    result_2298485470 = {body: HEX3Aanonymous_2298485538};

  return result_2298485470;

}

function HEX2A_2298485455(a_2298485457, n_2298485458) {
    var Temporary1;
      
function HEX3Aanonymous_2298485640(x_2298485676) {
        var result_2298485679 = [];

          result_2298485679 = nimCopy(null, [nimCopy(null, x_2298485676, NTI2298483184)], NTI2298483831);

        return result_2298485679;

      }

function succeedImpl_2298485760(inputInHEX60gensym116_2298485761, valueInHEX60gensym116_2298485762, tailInHEX60gensym116_2298485763) {
  var result_2298485765 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485765 = nimCopy(result_2298485765, {kind: 0, value: nimCopy(null, valueInHEX60gensym116_2298485762, NTI2298483927), tail: nimCopy(null, tailInHEX60gensym116_2298485763, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym116_2298485761, NTI33554449), expected: []}, NTI2298483700);

  return result_2298485765;

}

function failImpl_2298485767(inputInHEX60gensym116_2298485768, expectedInHEX60gensym116_2298485769, tailInHEX60gensym116_2298485770) {
  var result_2298485772 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485772 = nimCopy(result_2298485772, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym116_2298485769, NTI2298483933), tail: nimCopy(null, tailInHEX60gensym116_2298485770, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym116_2298485768, NTI33554449), value: []}, NTI2298483700);

  return result_2298485772;

}
        
function HEX3Aanonymous_2298485775(input_2298485776) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_2298485778 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: {
            var succeed_2298485779 = succeedImpl_2298485760;
            var fail_2298485780 = failImpl_2298485767;
            Label1: {
              var tempHEX60gensym38_2298485793 = parse_2298485397(a_2298485457, input_2298485776);
              if ((tempHEX60gensym38_2298485793.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_2298485793;
              if (ConstSet105[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
              result_2298485778 = nimCopy(result_2298485778, {kind: 1, fromInput: nimCopy(null, input_2298485776, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym38_2298485793.tail, NTI33554449), value: []}, NTI2298483700);
              break BeforeRet;
              }
              
            };
            var result1_2298485799 = nimCopy(null, tempHEX60gensym38_2298485793, NTI2298483190);
            var Temporary3 = result1_2298485799;
            if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
            var outputs_2298485804 = [nimCopy(null, Temporary3.value, NTI2298483184)];
            var lastTail_2298485805 = nimCopy(null, result1_2298485799.tail, NTI33554449);
            Label4: {
              var i_2298485811 = 0;
              var res_2281701720 = 2;
              Label5: {
                  Label6: while (true) {
                  if (!(res_2281701720 <= n_2298485458)) break Label6;
                    i_2298485811 = res_2281701720;
                    Label7: {
                      var tempHEX60gensym40_2298485824 = parse_2298485397(a_2298485457, result1_2298485799.tail);
                      if ((tempHEX60gensym40_2298485824.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_2298485824;
                      if (ConstSet107[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2348810258)); }
                      result_2298485778 = nimCopy(result_2298485778, {kind: 1, fromInput: nimCopy(null, input_2298485776, NTI33554449), expected: nimCopy(null, Temporary8.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym40_2298485824.tail, NTI33554449), value: []}, NTI2298483700);
                      break BeforeRet;
                      }
                      
                    };
                    result1_2298485799 = nimCopy(result1_2298485799, tempHEX60gensym40_2298485824, NTI2298483190);
                    if (eqStrings(result1_2298485799.tail, lastTail_2298485805)) {
                    break Label4;
                    }
                    
                    lastTail_2298485805 = nimCopy(null, result1_2298485799.tail, NTI33554449);
                    var Temporary9 = result1_2298485799;
                    if (ConstSet108[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2348810258)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI2298483184);
                    outputs_2298485804.push(Temporary10);;
                    res_2281701720 = addInt(res_2281701720, 1);
                  }
              };
            };
            result_2298485778 = nimCopy(result_2298485778, succeed_2298485779(input_2298485776, outputs_2298485804, result1_2298485799.tail), NTI2298483700);
          };

          return result_2298485778;

        }

  var result_2298485467 = null;

  BeforeRet: {
    if (    n_2298485458 == 0    ){      result_2298485467 = nop_2298485468();
      break BeforeRet;
      }
    else if (    n_2298485458 == 1    ){      result_2298485467 = map_2298485693(a_2298485457, HEX3Aanonymous_2298485640);
      break BeforeRet;
      }
    else{
      Label2: {
      };
      Temporary1 = {body: HEX3Aanonymous_2298485775};
      }
    result_2298485467 = Temporary1;
  };

  return result_2298485467;

}

function HEX7C_2298485353(a_2298485355, b_2298485356) {

function succeedImpl_2298485368(inputInHEX60gensym112_2298485369, valueInHEX60gensym112_2298485370, tailInHEX60gensym112_2298485371) {
  var result_2298485373 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485373 = nimCopy(result_2298485373, {kind: 0, value: nimCopy(null, valueInHEX60gensym112_2298485370, NTI2298483184), tail: nimCopy(null, tailInHEX60gensym112_2298485371, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym112_2298485369, NTI33554449), expected: []}, NTI2298483190);

  return result_2298485373;

}

function failImpl_2298485375(inputInHEX60gensym112_2298485376, expectedInHEX60gensym112_2298485377, tailInHEX60gensym112_2298485378) {
  var result_2298485380 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298485380 = nimCopy(result_2298485380, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym112_2298485377, NTI2298483645), tail: nimCopy(null, tailInHEX60gensym112_2298485378, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym112_2298485376, NTI33554449), value: []}, NTI2298483190);

  return result_2298485380;

}
      
function HEX3Aanonymous_2298485383(input_2298485384) {
          var Temporary1;
          var Temporary2;

        var result_2298485386 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298485387 = succeedImpl_2298485368;
          var fail_2298485388 = failImpl_2298485375;
          var result1_2298485413 = parse_2298485397(a_2298485355, input_2298485384);
          if ((result1_2298485413.kind == 0)) {
          result_2298485386 = nimCopy(result_2298485386, result1_2298485413, NTI2298483190);
          break BeforeRet;
          }
          
          var result2_2298485430 = parse_2298485397(b_2298485356, input_2298485384);
          if ((result2_2298485430.kind == 0)) {
          result_2298485386 = nimCopy(result_2298485386, result2_2298485430, NTI2298483190);
          break BeforeRet;
          }
          
          var Temporary1 = result1_2298485413;
          if (ConstSet109[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
          var Temporary2 = result2_2298485430;
          if (ConstSet110[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
          result_2298485386 = nimCopy(result_2298485386, fail_2298485388(input_2298485384, HEX26_2332033126(Temporary1.expected, Temporary2.expected), input_2298485384), NTI2298483190);
        };

        return result_2298485386;

      }

  var result_2298485357 = null;

    Label1: {
    };
    result_2298485357 = {body: HEX3Aanonymous_2298485383};

  return result_2298485357;

}

function newSeq_2298486103(len_2298486105) {
  var result_2298486106 = [];

    result_2298486106 = new Array(len_2298486105); for (var i = 0 ; i < len_2298486105 ; ++i) { result_2298486106[i] = 0; }
  return result_2298486106;

}

function HEX26_2298486139(x_2298486141, y_2298486142) {
  var result_2298486143 = [];

    result_2298486143 = new Array(chckRange(addInt((x_2298486141).length, (y_2298486142).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2298486141).length, (y_2298486142).length), 0, 2147483647) ; ++i) { result_2298486143[i] = 0; }    Label1: {
      var i_2298486162 = 0;
      var colontmp__2281701730 = 0;
      colontmp__2281701730 = subInt((x_2298486141).length, 1);
      var res_2281701731 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701731 <= colontmp__2281701730)) break Label3;
            i_2298486162 = res_2281701731;
            result_2298486143[chckIndx(i_2298486162, 0, (result_2298486143).length - 1)] = x_2298486141[chckIndx(i_2298486162, 0, (x_2298486141).length - 1)];
            res_2281701731 = addInt(res_2281701731, 1);
          }
      };
    };
    Label4: {
      var i_2298486170 = 0;
      var colontmp__2281701734 = 0;
      colontmp__2281701734 = subInt((y_2298486142).length, 1);
      var res_2281701735 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2281701735 <= colontmp__2281701734)) break Label6;
            i_2298486170 = res_2281701735;
            result_2298486143[chckIndx(addInt(i_2298486170, (x_2298486141).length), 0, (result_2298486143).length - 1)] = y_2298486142[chckIndx(i_2298486170, 0, (y_2298486142).length - 1)];
            res_2281701735 = addInt(res_2281701735, 1);
          }
      };
    };

  return result_2298486143;

}

function join_2298486386(a_2298486388, sep_2298486389) {
  var result_2298486390 = [];

    result_2298486390 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2298486396 = 0;
      var x_2298486397 = 0;
      var i_2281701739 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701739 < (a_2298486388).length)) break Label3;
            i_2298486396 = i_2281701739;
            x_2298486397 = a_2298486388[chckIndx(i_2281701739, 0, (a_2298486388).length - 1)];
            if ((0 < i_2298486396)) {
            result_2298486390.push.apply(result_2298486390, sep_2298486389);;
            }
            
            result_2298486390.push.apply(result_2298486390, nimCharToStr(x_2298486397));;
            i_2281701739 = addInt(i_2281701739, 1);
          }
      };
    };

  return result_2298486390;

}

function imul_1275068728(a_1275068729, b_1275068730) {
  var result_1275068731 = 0;

    var mask_1275068732 = 65535;
    var aHi_1275068737 = (((a_1275068729 >>> 16) & mask_1275068732) >>> 0);
    var aLo_1275068738 = ((a_1275068729 & mask_1275068732) >>> 0);
    var bHi_1275068743 = (((b_1275068730 >>> 16) & mask_1275068732) >>> 0);
    var bLo_1275068744 = ((b_1275068730 & mask_1275068732) >>> 0);
    result_1275068731 = ((((aLo_1275068738 * bLo_1275068744) >>> 0) + ((((((aHi_1275068737 * bLo_1275068744) >>> 0) + ((aLo_1275068738 * bHi_1275068743) >>> 0)) >>> 0) << 16) >>> 0)) >>> 0);

  return result_1275068731;

}

function rotl32_1275068749(x_1275068750, r_1275068751) {
  var result_1275068752 = 0;

    result_1275068752 = ((((x_1275068750 << r_1275068751) >>> 0) | (x_1275068750 >>> subInt(32, r_1275068751))) >>> 0);

  return result_1275068752;

}

function murmurHash_1275068761(x_1275068762) {
  var result_1275068763 = 0;

  BeforeRet: {
    var size_1275068772 = (x_1275068762).length;
    var stepSize_1275068773 = 4;
    var n_1275068774 = divInt(size_1275068772, stepSize_1275068773);
    var h1_1275068775 = 0;
    var i_1275068776 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1275068776 < mulInt(n_1275068774, stepSize_1275068773))) break Label2;
          var k1_1275068777 = 0;
          var j_1275068778 = stepSize_1275068773;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1275068778)) break Label4;
                j_1275068778 = subInt(j_1275068778, 1);
                k1_1275068777 = ((((k1_1275068777 << 8) >>> 0) | x_1275068762[chckIndx(addInt(i_1275068776, j_1275068778), 0, (x_1275068762).length - 1)]) >>> 0);
              }
          };
          i_1275068776 = addInt(i_1275068776, stepSize_1275068773);
          k1_1275068777 = imul_1275068728(k1_1275068777, 3432918353);
          k1_1275068777 = rotl32_1275068749(k1_1275068777, 15);
          k1_1275068777 = imul_1275068728(k1_1275068777, 461845907);
          h1_1275068775 = ((h1_1275068775 ^ k1_1275068777) >>> 0);
          h1_1275068775 = rotl32_1275068749(h1_1275068775, 13);
          h1_1275068775 = ((((h1_1275068775 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1275068797 = 0;
    var rem_1275068798 = modInt(size_1275068772, stepSize_1275068773);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1275068798)) break Label6;
          rem_1275068798 = subInt(rem_1275068798, 1);
          k1_1275068797 = ((((k1_1275068797 << 8) >>> 0) | x_1275068762[chckIndx(addInt(i_1275068776, rem_1275068798), 0, (x_1275068762).length - 1)]) >>> 0);
        }
    };
    k1_1275068797 = imul_1275068728(k1_1275068797, 3432918353);
    k1_1275068797 = rotl32_1275068749(k1_1275068797, 15);
    k1_1275068797 = imul_1275068728(k1_1275068797, 461845907);
    h1_1275068775 = ((h1_1275068775 ^ k1_1275068797) >>> 0);
    h1_1275068775 = ((h1_1275068775 ^ size_1275068772) >>> 0);
    h1_1275068775 = ((h1_1275068775 ^ (h1_1275068775 >>> 16)) >>> 0);
    h1_1275068775 = imul_1275068728(h1_1275068775, 2246822507);
    h1_1275068775 = ((h1_1275068775 ^ (h1_1275068775 >>> 13)) >>> 0);
    h1_1275068775 = imul_1275068728(h1_1275068775, 3266489909);
    h1_1275068775 = ((h1_1275068775 ^ (h1_1275068775 >>> 16)) >>> 0);
    result_1275068763 = Number(BigInt.asIntN(32, BigInt(h1_1275068775)));
    break BeforeRet;
  };

  return result_1275068763;

}

function hash_1275068863(x_1275068864) {
  var result_1275068865 = 0;

    result_1275068865 = murmurHash_1275068761((x_1275068864.slice(0, (x_1275068864).length - 1 + 1)));

  return result_1275068865;

}

function isFilled_1627389983(hcode_1627389984) {
  var result_1627389985 = false;

    result_1627389985 = !((hcode_1627389984 == 0));

  return result_1627389985;

}

function nextTry_1627389986(h_1627389987, maxHash_1627389988) {
  var result_1627389989 = 0;

    result_1627389989 = (addInt(h_1627389987, 1) & maxHash_1627389988);

  return result_1627389989;

}

function rawGet_2315257897(t_2315257900, key_2315257901, hc_2315257902, hc_2315257902_Idx) {
  var result_2315257903 = 0;

  BeforeRet: {
    hc_2315257902[hc_2315257902_Idx] = hash_1275068863(key_2315257901);
    if ((hc_2315257902[hc_2315257902_Idx] == 0)) {
    hc_2315257902[hc_2315257902_Idx] = 314159265;
    }
    
    if (((t_2315257900.data).length == 0)) {
    result_2315257903 = (-1);
    break BeforeRet;
    }
    
    var h_2315257954 = (hc_2315257902[hc_2315257902_Idx] & (t_2315257900.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2315257900.data[chckIndx(h_2315257954, 0, (t_2315257900.data).length - 1)].Field0)) break Label2;
          if (((t_2315257900.data[chckIndx(h_2315257954, 0, (t_2315257900.data).length - 1)].Field0 == hc_2315257902[hc_2315257902_Idx]) && eqStrings(t_2315257900.data[chckIndx(h_2315257954, 0, (t_2315257900.data).length - 1)].Field1, key_2315257901))) {
          result_2315257903 = h_2315257954;
          break BeforeRet;
          }
          
          h_2315257954 = nextTry_1627389986(h_2315257954, (t_2315257900.data).length - 1);
        }
    };
    result_2315257903 = subInt((-1), h_2315257954);
  };

  return result_2315257903;

}

function hasKey_2298486544(t_2298486547, key_2298486548) {
  var result_2298486549 = false;

    var hc_2298486550 = [0];
    result_2298486549 = (0 <= rawGet_2315257897(t_2298486547, key_2298486548, hc_2298486550, 0));

  return result_2298486549;

}

function contains_2298486538(t_2298486541, key_2298486542) {
  var result_2298486543 = false;

  BeforeRet: {
    result_2298486543 = hasKey_2298486544(t_2298486541, key_2298486542);
    break BeforeRet;
  };

  return result_2298486543;

}

function raiseKeyError_1660944714(key_1660944716) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1660944716 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2298486681(t_2298486684, key_2298486685) {
  var result_2298486686 = ({rows: [], baseline: 0, width: 0, flag: 0});

    var hcHEX60gensym20_2298486687 = [0];
    var indexHEX60gensym20_2298486694 = rawGet_2315257897(t_2298486684, key_2298486685, hcHEX60gensym20_2298486687, 0);
    if ((0 <= indexHEX60gensym20_2298486694)) {
    result_2298486686 = nimCopy(result_2298486686, t_2298486684.data[chckIndx(indexHEX60gensym20_2298486694, 0, (t_2298486684.data).length - 1)].Field2, NTI2332033028);
    }
    else {
    raiseKeyError_1660944714(key_2298486685);
    }
    

  return result_2298486686;

}

function map_2298487261(s_2298487264, op_2298487266) {
  var result_2298487267 = [];

    result_2298487267 = new Array(chckRange((s_2298487264).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2298487264).length, 0, 2147483647) ; ++i) { result_2298487267[i] = null; }    Label1: {
      var i_2298487283 = 0;
      var colontmp__2281701745 = 0;
      colontmp__2281701745 = (s_2298487264).length;
      var i_2281701746 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701746 < colontmp__2281701745)) break Label3;
            i_2298487283 = i_2281701746;
            result_2298487267[chckIndx(i_2298487283, 0, (result_2298487267).length - 1)] = op_2298487266(s_2298487264[chckIndx(i_2298487283, 0, (s_2298487264).length - 1)]);
            i_2281701746 = addInt(i_2281701746, 1);
          }
      };
    };

  return result_2298487267;

}

function map_2298487186(a_2298487189, fn_2298487191) {

function succeedImpl_2298487203(inputInHEX60gensym139_2298487204, valueInHEX60gensym139_2298487205, tailInHEX60gensym139_2298487206) {
  var result_2298487208 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298487208 = nimCopy(result_2298487208, {kind: 0, value: nimCopy(null, valueInHEX60gensym139_2298487205, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym139_2298487206, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym139_2298487204, NTI33554449), expected: []}, NTI2298480603);

  return result_2298487208;

}

function failImpl_2298487210(inputInHEX60gensym139_2298487211, expectedInHEX60gensym139_2298487212, tailInHEX60gensym139_2298487213) {
  var result_2298487215 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298487215 = nimCopy(result_2298487215, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym139_2298487212, NTI2298485005), tail: nimCopy(null, tailInHEX60gensym139_2298487213, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym139_2298487211, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298487215;

}
      
function HEX3Aanonymous_2298487218(input_2298487219) {
            var Temporary2;
          var Temporary3;

        var result_2298487221 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298487222 = succeedImpl_2298487203;
          var fail_2298487223 = failImpl_2298487210;
          Label1: {
            var tempHEX60gensym24_2298487236 = parse_2298481877(a_2298487189, input_2298487219);
            if ((tempHEX60gensym24_2298487236.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298487236;
            if (ConstSet111[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298487221 = nimCopy(result_2298487221, {kind: 1, fromInput: nimCopy(null, input_2298487219, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298487236.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298487242 = nimCopy(null, tempHEX60gensym24_2298487236, NTI2298480603);
          var Temporary3 = result1_2298487242;
          if (ConstSet112[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298487221 = nimCopy(result_2298487221, succeed_2298487222(input_2298487219, fn_2298487191(Temporary3.value), result1_2298487242.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298487221;

      }

  var result_2298487192 = null;

    Label1: {
    };
    result_2298487192 = {body: HEX3Aanonymous_2298487218};

  return result_2298487192;

}

function HEX3EHEX3E_2298487064(a_2298487067, b_2298487068) {

function succeedImpl_2298487080(inputInHEX60gensym136_2298487081, valueInHEX60gensym136_2298487082, tailInHEX60gensym136_2298487083) {
  var result_2298487085 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298487085 = nimCopy(result_2298487085, {kind: 0, value: nimCopy(null, valueInHEX60gensym136_2298487082, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym136_2298487083, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym136_2298487081, NTI33554449), expected: []}, NTI2298480603);

  return result_2298487085;

}

function failImpl_2298487087(inputInHEX60gensym136_2298487088, expectedInHEX60gensym136_2298487089, tailInHEX60gensym136_2298487090) {
  var result_2298487092 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298487092 = nimCopy(result_2298487092, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym136_2298487089, NTI2298484891), tail: nimCopy(null, tailInHEX60gensym136_2298487090, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym136_2298487088, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298487092;

}
      
function HEX3Aanonymous_2298487095(input_2298487096) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298487098 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298487099 = succeedImpl_2298487080;
          var fail_2298487100 = failImpl_2298487087;
          Label1: {
            var tempHEX60gensym34_2298487113 = parse_2348811258(a_2298487067, input_2298487096);
            if ((tempHEX60gensym34_2298487113.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298487113;
            if (ConstSet113[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298487098 = nimCopy(result_2298487098, {kind: 1, fromInput: nimCopy(null, input_2298487096, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298487113.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298487119 = nimCopy(null, tempHEX60gensym34_2298487113, NTI2348810488);
          Label3: {
            var tempHEX60gensym36_2298487132 = parse_2298481877(b_2298487068, result1_2298487119.tail);
            if ((tempHEX60gensym36_2298487132.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298487132;
            if (ConstSet114[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298487098 = nimCopy(result_2298487098, {kind: 1, fromInput: nimCopy(null, input_2298487096, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298487132.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result2_2298487138 = nimCopy(null, tempHEX60gensym36_2298487132, NTI2298480603);
          var Temporary5 = result2_2298487138;
          if (ConstSet115[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298487098 = nimCopy(result_2298487098, succeed_2298487099(input_2298487096, Temporary5.value, result2_2298487138.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298487098;

      }

  var result_2298487069 = null;

    Label1: {
    };
    result_2298487069 = {body: HEX3Aanonymous_2298487095};

  return result_2298487069;

}

function HEX3EHEX3E_2298486981(a_2298486984, b_2298486985) {

function succeedImpl_2298486997(inputInHEX60gensym135_2298486998, valueInHEX60gensym135_2298486999, tailInHEX60gensym135_2298487000) {
  var result_2298487002 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298487002 = nimCopy(result_2298487002, {kind: 0, value: valueInHEX60gensym135_2298486999, tail: nimCopy(null, tailInHEX60gensym135_2298487000, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym135_2298486998, NTI33554449), expected: []}, NTI2348810488);

  return result_2298487002;

}

function failImpl_2298487004(inputInHEX60gensym135_2298487005, expectedInHEX60gensym135_2298487006, tailInHEX60gensym135_2298487007) {
  var result_2298487009 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_2298487009 = nimCopy(result_2298487009, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym135_2298487006, NTI2298484830), tail: nimCopy(null, tailInHEX60gensym135_2298487007, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym135_2298487005, NTI33554449), value: 0}, NTI2348810488);

  return result_2298487009;

}
      
function HEX3Aanonymous_2298487012(input_2298487013) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298487015 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298487016 = succeedImpl_2298486997;
          var fail_2298487017 = failImpl_2298487004;
          Label1: {
            var tempHEX60gensym34_2298487030 = parse_2298480475(a_2298486984, input_2298487013);
            if ((tempHEX60gensym34_2298487030.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298487030;
            if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298487015 = nimCopy(result_2298487015, {kind: 1, fromInput: nimCopy(null, input_2298487013, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298487030.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result1_2298487036 = nimCopy(null, tempHEX60gensym34_2298487030, NTI2348810372);
          Label3: {
            var tempHEX60gensym36_2298487049 = parse_2348811258(b_2298486985, result1_2298487036.tail);
            if ((tempHEX60gensym36_2298487049.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298487049;
            if (ConstSet117[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298487015 = nimCopy(result_2298487015, {kind: 1, fromInput: nimCopy(null, input_2298487013, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298487049.tail, NTI33554449), value: 0}, NTI2348810488);
            break BeforeRet;
            }
            
          };
          var result2_2298487055 = nimCopy(null, tempHEX60gensym36_2298487049, NTI2348810488);
          var Temporary5 = result2_2298487055;
          if (ConstSet118[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298487015 = nimCopy(result_2298487015, succeed_2298487016(input_2298487013, Temporary5.value, result2_2298487055.tail), NTI2348810488);
          break BeforeRet;
        };

        return result_2298487015;

      }

  var result_2298486986 = null;

    Label1: {
    };
    result_2298486986 = {body: HEX3Aanonymous_2298487012};

  return result_2298486986;

}

function row_2332033059(rect_2332033060) {
  var result_2332033061 = [];

    result_2332033061 = nimCopy(null, rect_2332033060.rows[chckIndx(0, 0, (rect_2332033060.rows).length - 1)], NTI33554449);

  return result_2332033061;

}

function nucRepeatRune(c_1040194544, count_1040194545) {
  var result_1040194546 = [];

    var s_1040194547 = HEX24_1040188049(c_1040194544);
    result_1040194546 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_1040194552 = 0;
      var colontmp__2281701768 = 0;
      colontmp__2281701768 = count_1040194545;
      var i_2281701769 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701769 < colontmp__2281701768)) break Label3;
            i_1040194552 = i_2281701769;
            result_1040194546.push.apply(result_1040194546, s_1040194547);;
            i_2281701769 = addInt(i_2281701769, 1);
          }
      };
    };

  return result_1040194546;

}

function center_2332033995(s_2332033996, width_2332033997, padding_2332033998) {
    var Temporary1;

  var result_2332033999 = [];

    var sLen_2332034000 = runeLen_1040194581(s_2332033996);
    if ((width_2332033997 <= sLen_2332034000)) {
    Temporary1 = s_2332033996;
    }
    else {
      var diff_2332034001 = subInt(width_2332033997, sLen_2332034000);
      var left_2332034002 = divInt(diff_2332034001, 2);
      var right_2332034003 = subInt(diff_2332034001, left_2332034002);
    Temporary1 = (nucRepeatRune(padding_2332033998, chckRange(left_2332034002, 0, 2147483647)) || []).concat(s_2332033996 || [],nucRepeatRune(padding_2332033998, chckRange(right_2332034003, 0, 2147483647)) || []);
    }
    
    result_2332033999 = nimCopy(null, Temporary1, NTI33554449);

  return result_2332033999;

}

function HEX3Aanonymous_2332034004(s_2332034005, width_2332034006) {
  var result_2332034007 = [];

    result_2332034007 = nimCopy(null, center_2332033995(s_2332034005, chckRange(width_2332034006, 0, 2147483647), 32), NTI33554449);

  return result_2332034007;

}

function add_1056964610(x_1056964611, x_1056964611_Idx, y_1056964612) {
    var Temporary1;

    var n_1056964613 = (x_1056964611[x_1056964611_Idx]).length;
    if (x_1056964611[x_1056964611_Idx].length < (Temporary1 = chckRange(addInt(n_1056964613, (y_1056964612).length), 0, 2147483647), Temporary1)) { for (var i = x_1056964611[x_1056964611_Idx].length; i < Temporary1; ++i) x_1056964611[x_1056964611_Idx].push(0); }
         else {x_1056964611[x_1056964611_Idx].length = Temporary1; };
    var i_1056964617 = 0;
    Label2: {
        Label3: while (true) {
        if (!(i_1056964617 < (y_1056964612).length)) break Label3;
          x_1056964611[x_1056964611_Idx][chckIndx(addInt(n_1056964613, i_1056964617), 0, (x_1056964611[x_1056964611_Idx]).length - 1)] = y_1056964612[chckIndx(i_1056964617, 0, (y_1056964612).length - 1)];
          i_1056964617 = addInt(i_1056964617, 1);
        }
    };

  
}

function substr_33558057(s_33558058) {
  var result_33558059 = [];

    result_33558059 = nimCopy(null, mnewString(chckRange((s_33558058).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558077 = 0;
      var ch_33558078 = 0;
      var i_2281701777 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701777 < (s_33558058).length)) break Label3;
            i_33558077 = i_2281701777;
            ch_33558078 = s_33558058[chckIndx(i_2281701777, 0, (s_33558058).length - 1)];
            result_33558059[chckIndx(i_33558077, 0, (result_33558059).length - 1)] = ch_33558078;
            i_2281701777 = addInt(i_2281701777, 1);
          }
      };
    };

  return result_33558059;

}

function alignLeft_1040194566(s_1040194567, count_1040194568, padding_1040194569) {
  var result_1040194570 = [[]];

    var sLen_1040194571 = nucruneLen(s_1040194567);
    if ((sLen_1040194571 < count_1040194568)) {
    var padStr_1040194572 = HEX24_1040188049(padding_1040194569);
    result_1040194570[0] = nimCopy(null, mnewString(0), NTI33554449);
    add_1056964610(result_1040194570, 0, s_1040194567);
    Label1: {
      var i_1040194580 = 0;
      var colontmp__2281701772 = 0;
      colontmp__2281701772 = count_1040194568;
      var i_2281701773 = sLen_1040194571;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701773 < colontmp__2281701772)) break Label3;
            i_1040194580 = i_2281701773;
            result_1040194570[0].push.apply(result_1040194570[0], padStr_1040194572);;
            i_2281701773 = addInt(i_2281701773, 1);
          }
      };
    };
    }
    else {
      result_1040194570[0] = nimCopy(null, substr_33558057(s_1040194567), NTI33554449);
    }
    

  return result_1040194570[0];

}

function alignLeft_1040195167(s_1040195168, count_1040195169, padding_1040195170) {
  var result_1040195171 = [];

    result_1040195171 = nimCopy(null, alignLeft_1040194566((s_1040195168.slice(0, (s_1040195168).length - 1 + 1)), count_1040195169, padding_1040195170), NTI33554449);

  return result_1040195171;

}

function HEX3Aanonymous_2332034008(s_2332034009, width_2332034010) {
  var result_2332034011 = [];

    result_2332034011 = nimCopy(null, alignLeft_1040195167(s_2332034009, chckRange(width_2332034010, 0, 2147483647), 32), NTI33554449);

  return result_2332034011;

}

function nucAlignString(s_1040194554, count_1040194555, padding_1040194556) {
  var result_1040194557 = [[]];

    var sLen_1040194558 = nucruneLen(s_1040194554);
    if ((sLen_1040194558 < count_1040194555)) {
    var padStr_1040194559 = HEX24_1040188049(padding_1040194556);
    result_1040194557[0] = nimCopy(null, mnewString(0), NTI33554449);
    var spaces_1040194560 = subInt(count_1040194555, sLen_1040194558);
    Label1: {
      var i_1040194565 = 0;
      var i_2281701780 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701780 < spaces_1040194560)) break Label3;
            i_1040194565 = i_2281701780;
            result_1040194557[0].push.apply(result_1040194557[0], padStr_1040194559);;
            i_2281701780 = addInt(i_2281701780, 1);
          }
      };
    };
    add_1056964610(result_1040194557, 0, s_1040194554);
    }
    else {
      result_1040194557[0] = nimCopy(null, substr_33558057(s_1040194554), NTI33554449);
    }
    

  return result_1040194557[0];

}

function align_1040195162(s_1040195163, count_1040195164, padding_1040195165) {
  var result_1040195166 = [];

    result_1040195166 = nimCopy(null, nucAlignString((s_1040195163.slice(0, (s_1040195163).length - 1 + 1)), count_1040195164, padding_1040195165), NTI33554449);

  return result_1040195166;

}

function HEX3Aanonymous_2332034012(s_2332034013, width_2332034014) {
  var result_2332034015 = [];

    result_2332034015 = nimCopy(null, align_1040195162(s_2332034013, chckRange(width_2332034014, 0, 2147483647), 32), NTI33554449);

  return result_2332034015;

}

function stack_2332034017(rects_2332034018, baseline_2332034019, alignment_2332034020) {
  var result_2332034021 = ({rows: [], baseline: 0, width: 0, flag: 0});

    Label1: {
      var iHEX60gensym42_2332034042 = 0;
      var resultHEX60gensym42_2332034049 = newSeq_2332033712(chckRange((rects_2332034018).length, 0, 2147483647));
      Label2: {
        var it_2332034053 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_2281701758 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2281701758 < (rects_2332034018).length)) break Label4;
              it_2332034053 = rects_2332034018[chckIndx(i_2281701758, 0, (rects_2332034018).length - 1)];
              resultHEX60gensym42_2332034049[chckIndx(iHEX60gensym42_2332034042, 0, (resultHEX60gensym42_2332034049).length - 1)] = it_2332034053.width;
              iHEX60gensym42_2332034042 = addInt(iHEX60gensym42_2332034042, 1);
              i_2281701758 = addInt(i_2281701758, 1);
            }
        };
      };
    };
    var width_2332034061 = max_2332033745(resultHEX60gensym42_2332034049);
    var alignFunc_2332034062 = alignFuncs_2332034016[chckIndx(alignment_2332034020, 0, (alignFuncs_2332034016).length - 1)];
    Label5: {
      var rect_2332034066 = ({rows: [], baseline: 0, width: 0, flag: 0});
      var i_2281701765 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_2281701765 < (rects_2332034018).length)) break Label7;
            rect_2332034066 = rects_2332034018[chckIndx(i_2281701765, 0, (rects_2332034018).length - 1)];
            Label8: {
              var row_2332034070 = [];
              var i_2281701762 = 0;
              var L_2281701763 = (rect_2332034066.rows).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2281701762 < L_2281701763)) break Label10;
                    row_2332034070 = rect_2332034066.rows[chckIndx(i_2281701762, 0, (rect_2332034066.rows).length - 1)];
                    result_2332034021.rows.push(alignFunc_2332034062(row_2332034070, width_2332034061));;
                    i_2281701762 = addInt(i_2281701762, 1);
                    if (!(((rect_2332034066.rows).length == L_2281701763))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_2281701765 = addInt(i_2281701765, 1);
          }
      };
    };
    result_2332034021.baseline = baseline_2332034019;
    result_2332034021.width = width_2332034061;

  return result_2332034021;

}

function HEX7C_2298487328(a_2298487330, b_2298487331) {

function succeedImpl_2298487343(inputInHEX60gensym144_2298487344, valueInHEX60gensym144_2298487345, tailInHEX60gensym144_2298487346) {
  var result_2298487348 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298487348 = nimCopy(result_2298487348, {kind: 0, value: nimCopy(null, valueInHEX60gensym144_2298487345, NTI33554449), tail: nimCopy(null, tailInHEX60gensym144_2298487346, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym144_2298487344, NTI33554449), expected: []}, NTI2348810372);

  return result_2298487348;

}

function failImpl_2298487350(inputInHEX60gensym144_2298487351, expectedInHEX60gensym144_2298487352, tailInHEX60gensym144_2298487353) {
  var result_2298487355 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298487355 = nimCopy(result_2298487355, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym144_2298487352, NTI2298485094), tail: nimCopy(null, tailInHEX60gensym144_2298487353, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym144_2298487351, NTI33554449), value: []}, NTI2348810372);

  return result_2298487355;

}
      
function HEX3Aanonymous_2298487358(input_2298487359) {
          var Temporary1;
          var Temporary2;

        var result_2298487361 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298487362 = succeedImpl_2298487343;
          var fail_2298487363 = failImpl_2298487350;
          var result1_2298487376 = parse_2298480475(a_2298487330, input_2298487359);
          if ((result1_2298487376.kind == 0)) {
          result_2298487361 = nimCopy(result_2298487361, result1_2298487376, NTI2348810372);
          break BeforeRet;
          }
          
          var result2_2298487393 = parse_2298480475(b_2298487331, input_2298487359);
          if ((result2_2298487393.kind == 0)) {
          result_2298487361 = nimCopy(result_2298487361, result2_2298487393, NTI2348810372);
          break BeforeRet;
          }
          
          var Temporary1 = result1_2298487376;
          if (ConstSet119[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2348810258)); }
          var Temporary2 = result2_2298487393;
          if (ConstSet120[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
          result_2298487361 = nimCopy(result_2298487361, fail_2298487363(input_2298487359, HEX26_2332033126(Temporary1.expected, Temporary2.expected), input_2298487359), NTI2348810372);
        };

        return result_2298487361;

      }

  var result_2298487332 = null;

    Label1: {
    };
    result_2298487332 = {body: HEX3Aanonymous_2298487358};

  return result_2298487332;

}

function HEX26_2298487594(a_2298487599, b_2298487603) {

function succeedImpl_2298487618(inputInHEX60gensym148_2298487619, valueInHEX60gensym148_2298487620, tailInHEX60gensym148_2298487621) {
  var result_2298487623 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298487623 = nimCopy(result_2298487623, {kind: 0, value: nimCopy(null, valueInHEX60gensym148_2298487620, NTI2298485326), tail: nimCopy(null, tailInHEX60gensym148_2298487621, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym148_2298487619, NTI33554449), expected: []}, NTI2298480618);

  return result_2298487623;

}

function failImpl_2298487625(inputInHEX60gensym148_2298487626, expectedInHEX60gensym148_2298487627, tailInHEX60gensym148_2298487628) {
  var result_2298487630 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298487630 = nimCopy(result_2298487630, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym148_2298487627, NTI2298485332), tail: nimCopy(null, tailInHEX60gensym148_2298487628, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym148_2298487626, NTI33554449), value: []}, NTI2298480618);

  return result_2298487630;

}
      
function HEX3Aanonymous_2298487633(input_2298487634) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_2298487636 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298487637 = succeedImpl_2298487618;
          var fail_2298487638 = failImpl_2298487625;
          Label1: {
            var tempHEX60gensym26_2298487651 = parse_2298482153(a_2298487599, input_2298487634);
            if ((tempHEX60gensym26_2298487651.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_2298487651;
            if (ConstSet121[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298487636 = nimCopy(result_2298487636, {kind: 1, fromInput: nimCopy(null, input_2298487634, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym26_2298487651.tail, NTI33554449), value: []}, NTI2298480618);
            break BeforeRet;
            }
            
          };
          var result1_2298487657 = nimCopy(null, tempHEX60gensym26_2298487651, NTI2298480618);
          Label3: {
            var tempHEX60gensym28_2298487670 = parse_2298482153(b_2298487603, result1_2298487657.tail);
            if ((tempHEX60gensym28_2298487670.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_2298487670;
            if (ConstSet122[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298487636 = nimCopy(result_2298487636, {kind: 1, fromInput: nimCopy(null, input_2298487634, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym28_2298487670.tail, NTI33554449), value: []}, NTI2298480618);
            break BeforeRet;
            }
            
          };
          var result2_2298487676 = nimCopy(null, tempHEX60gensym28_2298487670, NTI2298480618);
          var Temporary5 = result1_2298487657;
          if (ConstSet123[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          var Temporary6 = result2_2298487676;
          if (ConstSet124[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2348810258)); }
          result_2298487636 = nimCopy(result_2298487636, succeed_2298487637(input_2298487634, HEX26_2298482890(Temporary5.value, Temporary6.value), result2_2298487676.tail), NTI2298480618);
          break BeforeRet;
        };

        return result_2298487636;

      }

  var result_2298487607 = null;

    Label1: {
    };
    result_2298487607 = {body: HEX3Aanonymous_2298487633};

  return result_2298487607;

}

function rowAsAtom_2332033062(rect_2332033063) {
    var Temporary1;

  var result_2332033064 = [];

    if ((runeLen_1040194581(rect_2332033063.rows[chckIndx(0, 0, (rect_2332033063.rows).length - 1)]) == 1)) {
    Temporary1 = rect_2332033063.rows[chckIndx(0, 0, (rect_2332033063.rows).length - 1)];
    }
    else {
    Temporary1 = ([40] || []).concat(rect_2332033063.rows[chckIndx(0, 0, (rect_2332033063.rows).length - 1)] || [],[41] || []);
    }
    
    result_2332033064 = nimCopy(null, Temporary1, NTI33554449);

  return result_2332033064;

}

function max_754976484(x_754976486, y_754976487) {
    var Temporary1;

  var result_754976488 = 0;

    if ((y_754976487 <= x_754976486)) {
    Temporary1 = x_754976486;
    }
    else {
    Temporary1 = y_754976487;
    }
    
    result_754976488 = Temporary1;

  return result_754976488;

}

function nsuRepeatStr(s_754975850, n_754975851) {
  var result_754975852 = [];

    result_754975852 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_754975857 = 0;
      var colontmp__2281701787 = 0;
      colontmp__2281701787 = n_754975851;
      var res_2281701788 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2281701788 <= colontmp__2281701787)) break Label3;
            i_754975857 = res_2281701788;
            result_754975852.push.apply(result_754975852, s_754975850);;
            res_2281701788 = addInt(res_2281701788, 1);
          }
      };
    };

  return result_754975852;

}

function withFlag_2332034123(rect_2332034124, flag_2332034125) {
  var result_2332034126 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_2332034126 = nimCopy(result_2332034126, rect_2332034124, NTI2332033028);
    result_2332034126.flag = flag_2332034125;

  return result_2332034126;

}

function HEX5BHEX5DHEX3D_2298480033(s_2298480035, i_2298480036, x_2298480037) {
    s_2298480035[chckIndx(subInt((s_2298480035).length, i_2298480036), 0, (s_2298480035).length - 1)] = nimCopy(null, x_2298480037, NTI33554449);

  
}

function rawGet_2298478768(t_2298478771, key_2298478772, hc_2298478773, hc_2298478773_Idx) {
  var result_2298478774 = 0;

  BeforeRet: {
    hc_2298478773[hc_2298478773_Idx] = hash_1275068863(key_2298478772);
    if ((hc_2298478773[hc_2298478773_Idx] == 0)) {
    hc_2298478773[hc_2298478773_Idx] = 314159265;
    }
    
    if (((t_2298478771.data).length == 0)) {
    result_2298478774 = (-1);
    break BeforeRet;
    }
    
    var h_2298478825 = (hc_2298478773[hc_2298478773_Idx] & (t_2298478771.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2298478771.data[chckIndx(h_2298478825, 0, (t_2298478771.data).length - 1)].Field0)) break Label2;
          if (((t_2298478771.data[chckIndx(h_2298478825, 0, (t_2298478771.data).length - 1)].Field0 == hc_2298478773[hc_2298478773_Idx]) && eqStrings(t_2298478771.data[chckIndx(h_2298478825, 0, (t_2298478771.data).length - 1)].Field1, key_2298478772))) {
          result_2298478774 = h_2298478825;
          break BeforeRet;
          }
          
          h_2298478825 = nextTry_1627389986(h_2298478825, (t_2298478771.data).length - 1);
        }
    };
    result_2298478774 = subInt((-1), h_2298478825);
  };

  return result_2298478774;

}

function HEX5BHEX5D_2298480116(t_2298480119, key_2298480120) {
  var result_2298480121 = {Field0: [], Field1: [], Field2: []};

    var hcHEX60gensym20_2298480122 = [0];
    var indexHEX60gensym20_2298480129 = rawGet_2298478768(t_2298480119, key_2298480120, hcHEX60gensym20_2298480122, 0);
    if ((0 <= indexHEX60gensym20_2298480129)) {
    result_2298480121 = nimCopy(result_2298480121, t_2298480119.data[chckIndx(indexHEX60gensym20_2298480129, 0, (t_2298480119.data).length - 1)].Field2, NTI2298478599);
    }
    else {
    raiseKeyError_1660944714(key_2298480120);
    }
    

  return result_2298480121;

}

function substrEq_754974975(s_754974976, pos_754974977, substr_754974978) {
    var Temporary1;

  var result_754974979 = false;

    var length_754974980 = (substr_754974978).length;
    if ((0 < length_754974980)) {
    var i_754974981 = 0;
    Label2: {
        Label3: while (true) {
        if (!(((i_754974981 < length_754974980) && (addInt(pos_754974977, i_754974981) < (s_754974976).length)) && (s_754974976[chckIndx(addInt(pos_754974977, i_754974981), 0, (s_754974976).length - 1)] == substr_754974978[chckIndx(i_754974981, 0, (substr_754974978).length - 1)]))) break Label3;
          i_754974981 = addInt(i_754974981, 1);
        }
    };
    Temporary1 = (i_754974981 == length_754974980);
    }
    else {
    Temporary1 = false;
    }
    
    result_754974979 = Temporary1;

  return result_754974979;

}

function nsuSplitString(s_754975295, sep_754975296, maxsplit_754975297) {
      var Temporary2;

  var result_754975298 = [];

    result_754975298 = nimCopy(null, [], NTI754975126);
    Label1: {
      var xHEX60gensym69_754975304 = [];
      if (((sep_754975296).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_754975296).length;
      }
      
      var sepLen_2315255945 = Temporary2;
      var lastHEX60gensym41_2315255946 = 0;
      var splitsHEX60gensym41_2315255947 = maxsplit_754975297;
      Label3: {
          Label4: while (true) {
          if (!(lastHEX60gensym41_2315255946 <= (s_754975295).length)) break Label4;
            var firstHEX60gensym41_2315255949 = lastHEX60gensym41_2315255946;
            Label5: {
                Label6: while (true) {
                if (!((lastHEX60gensym41_2315255946 < (s_754975295).length) && !(substrEq_754974975(s_754975295, lastHEX60gensym41_2315255946, sep_754975296)))) break Label6;
                  lastHEX60gensym41_2315255946 = addInt(lastHEX60gensym41_2315255946, 1);
                }
            };
            if ((splitsHEX60gensym41_2315255947 == 0)) {
            lastHEX60gensym41_2315255946 = (s_754975295).length;
            }
            
            xHEX60gensym69_754975304 = substr_33558079(s_754975295, firstHEX60gensym41_2315255949, subInt(lastHEX60gensym41_2315255946, 1));
            var Temporary7 = nimCopy(null, xHEX60gensym69_754975304, NTI33554449);
            result_754975298.push(Temporary7);;
            if ((splitsHEX60gensym41_2315255947 == 0)) {
            break Label3;
            }
            
            splitsHEX60gensym41_2315255947 = subInt(splitsHEX60gensym41_2315255947, 1);
            lastHEX60gensym41_2315255946 = addInt(lastHEX60gensym41_2315255946, sepLen_2315255945);
          }
      };
    };

  return result_754975298;

}

function toTextRect_2332033074(s_2332033075, baseline_2332033076, flag_2332033077) {
  var result_2332033078 = ({rows: [], baseline: 0, width: 0, flag: 0});

  BeforeRet: {
    if (eqStrings(s_2332033075, [])) {
    result_2332033078.flag = flag_2332033077;
    break BeforeRet;
    }
    
    result_2332033078.rows = nimCopy(null, nsuSplitString(s_2332033075, [10], (-1)), NTI754975126);
    result_2332033078.width = chckRange(runeLen_1040194581(result_2332033078.rows[chckIndx(0, 0, (result_2332033078.rows).length - 1)]), 0, 2147483647);
    Label1: {
      var row_2332033082 = [];
      var i_2315255939 = 0;
      var L_2315255940 = (result_2332033078.rows).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2315255939 < L_2315255940)) break Label3;
            row_2332033082 = result_2332033078.rows[chckIndx(i_2315255939, 0, (result_2332033078.rows).length - 1)];
            if (!((runeLen_1040194581(row_2332033082) == result_2332033078.width))) {
            raiseException({message: [65,108,108,32,114,111,119,115,32,111,102,32,97,32,84,101,120,116,82,101,99,116,32,109,117,115,116,32,98,101,32,116,104,101,32,115,97,109,101,32,119,105,100,116,104], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
            }
            
            i_2315255939 = addInt(i_2315255939, 1);
            if (!(((result_2332033078.rows).length == L_2315255940))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2332033078.baseline = baseline_2332033076;
    result_2332033078.flag = flag_2332033077;
  };

  return result_2332033078;

}

function map_2298488710(s_2298488713, op_2298488715) {
  var result_2298488716 = [];

    result_2298488716 = new Array(chckRange((s_2298488713).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2298488713).length, 0, 2147483647) ; ++i) { result_2298488716[i] = null; }    Label1: {
      var i_2298488732 = 0;
      var colontmp__2281701811 = 0;
      colontmp__2281701811 = (s_2298488713).length;
      var i_2281701812 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701812 < colontmp__2281701811)) break Label3;
            i_2298488732 = i_2281701812;
            result_2298488716[chckIndx(i_2298488732, 0, (result_2298488716).length - 1)] = op_2298488715(s_2298488713[chckIndx(i_2298488732, 0, (s_2298488713).length - 1)]);
            i_2281701812 = addInt(i_2281701812, 1);
          }
      };
    };

  return result_2298488716;

}

function HEX26HEX3D_2332033992(left_2332033993, right_2332033994) {
    left_2332033993 = nimCopy(left_2332033993, join_2332033228([nimCopy(null, left_2332033993, NTI2332033028), nimCopy(null, right_2332033994, NTI2332033028)]), NTI2332033028);

  
}

function HEX3EHEX3E_2298489161(a_2298489164, b_2298489165) {

function succeedImpl_2298489177(inputInHEX60gensym194_2298489178, valueInHEX60gensym194_2298489179, tailInHEX60gensym194_2298489180) {
  var result_2298489182 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298489182 = nimCopy(result_2298489182, {kind: 0, value: nimCopy(null, valueInHEX60gensym194_2298489179, NTI2298485302), tail: nimCopy(null, tailInHEX60gensym194_2298489180, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym194_2298489178, NTI33554449), expected: []}, NTI2298480618);

  return result_2298489182;

}

function failImpl_2298489184(inputInHEX60gensym194_2298489185, expectedInHEX60gensym194_2298489186, tailInHEX60gensym194_2298489187) {
  var result_2298489189 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_2298489189 = nimCopy(result_2298489189, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym194_2298489186, NTI2298486621), tail: nimCopy(null, tailInHEX60gensym194_2298489187, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym194_2298489185, NTI33554449), value: []}, NTI2298480618);

  return result_2298489189;

}
      
function HEX3Aanonymous_2298489192(input_2298489193) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298489195 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298489196 = succeedImpl_2298489177;
          var fail_2298489197 = failImpl_2298489184;
          Label1: {
            var tempHEX60gensym34_2298489210 = parse_2298480719(a_2298489164, input_2298489193);
            if ((tempHEX60gensym34_2298489210.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298489210;
            if (ConstSet125[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298489195 = nimCopy(result_2298489195, {kind: 1, fromInput: nimCopy(null, input_2298489193, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298489210.tail, NTI33554449), value: []}, NTI2298480618);
            break BeforeRet;
            }
            
          };
          var result1_2298489216 = nimCopy(null, tempHEX60gensym34_2298489210, NTI2298479452);
          Label3: {
            var tempHEX60gensym36_2298489229 = parse_2298482153(b_2298489165, result1_2298489216.tail);
            if ((tempHEX60gensym36_2298489229.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298489229;
            if (ConstSet126[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298489195 = nimCopy(result_2298489195, {kind: 1, fromInput: nimCopy(null, input_2298489193, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298489229.tail, NTI33554449), value: []}, NTI2298480618);
            break BeforeRet;
            }
            
          };
          var result2_2298489235 = nimCopy(null, tempHEX60gensym36_2298489229, NTI2298480618);
          var Temporary5 = result2_2298489235;
          if (ConstSet127[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298489195 = nimCopy(result_2298489195, succeed_2298489196(input_2298489193, Temporary5.value, result2_2298489235.tail), NTI2298480618);
          break BeforeRet;
        };

        return result_2298489195;

      }

  var result_2298489166 = null;

    Label1: {
    };
    result_2298489166 = {body: HEX3Aanonymous_2298489192};

  return result_2298489166;

}

function HEX3EHEX3E_2298488790(a_2298488793, b_2298488794) {

function succeedImpl_2298488806(inputInHEX60gensym188_2298488807, valueInHEX60gensym188_2298488808, tailInHEX60gensym188_2298488809) {
  var result_2298488811 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298488811 = nimCopy(result_2298488811, {kind: 0, value: nimCopy(null, valueInHEX60gensym188_2298488808, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym188_2298488809, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym188_2298488807, NTI33554449), expected: []}, NTI2298480603);

  return result_2298488811;

}

function failImpl_2298488813(inputInHEX60gensym188_2298488814, expectedInHEX60gensym188_2298488815, tailInHEX60gensym188_2298488816) {
  var result_2298488818 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298488818 = nimCopy(result_2298488818, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym188_2298488815, NTI2298486272), tail: nimCopy(null, tailInHEX60gensym188_2298488816, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym188_2298488814, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298488818;

}
      
function HEX3Aanonymous_2298488821(input_2298488822) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298488824 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298488825 = succeedImpl_2298488806;
          var fail_2298488826 = failImpl_2298488813;
          Label1: {
            var tempHEX60gensym34_2298488839 = parse_2298480719(a_2298488793, input_2298488822);
            if ((tempHEX60gensym34_2298488839.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_2298488839;
            if (ConstSet128[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298488824 = nimCopy(result_2298488824, {kind: 1, fromInput: nimCopy(null, input_2298488822, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym34_2298488839.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298488845 = nimCopy(null, tempHEX60gensym34_2298488839, NTI2298479452);
          Label3: {
            var tempHEX60gensym36_2298488858 = parse_2298481877(b_2298488794, result1_2298488845.tail);
            if ((tempHEX60gensym36_2298488858.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_2298488858;
            if (ConstSet129[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298488824 = nimCopy(result_2298488824, {kind: 1, fromInput: nimCopy(null, input_2298488822, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym36_2298488858.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result2_2298488864 = nimCopy(null, tempHEX60gensym36_2298488858, NTI2298480603);
          var Temporary5 = result2_2298488864;
          if (ConstSet130[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298488824 = nimCopy(result_2298488824, succeed_2298488825(input_2298488822, Temporary5.value, result2_2298488864.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298488824;

      }

  var result_2298488795 = null;

    Label1: {
    };
    result_2298488795 = {body: HEX3Aanonymous_2298488821};

  return result_2298488795;

}

function HEX3CHEX3C_2298489307(a_2298489310, b_2298489311) {

function succeedImpl_2298489323(inputInHEX60gensym197_2298489324, valueInHEX60gensym197_2298489325, tailInHEX60gensym197_2298489326) {
  var result_2298489328 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298489328 = nimCopy(result_2298489328, {kind: 0, value: nimCopy(null, valueInHEX60gensym197_2298489325, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym197_2298489326, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym197_2298489324, NTI33554449), expected: []}, NTI2298480603);

  return result_2298489328;

}

function failImpl_2298489330(inputInHEX60gensym197_2298489331, expectedInHEX60gensym197_2298489332, tailInHEX60gensym197_2298489333) {
  var result_2298489335 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298489335 = nimCopy(result_2298489335, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym197_2298489332, NTI2298486723), tail: nimCopy(null, tailInHEX60gensym197_2298489333, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym197_2298489331, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298489335;

}
      
function HEX3Aanonymous_2298489338(input_2298489339) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298489341 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298489342 = succeedImpl_2298489323;
          var fail_2298489343 = failImpl_2298489330;
          Label1: {
            var tempHEX60gensym30_2298489356 = parse_2298481877(a_2298489310, input_2298489339);
            if ((tempHEX60gensym30_2298489356.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_2298489356;
            if (ConstSet131[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298489341 = nimCopy(result_2298489341, {kind: 1, fromInput: nimCopy(null, input_2298489339, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym30_2298489356.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298489362 = nimCopy(null, tempHEX60gensym30_2298489356, NTI2298480603);
          Label3: {
            var tempHEX60gensym32_2298489375 = parse_2348811258(b_2298489311, result1_2298489362.tail);
            if ((tempHEX60gensym32_2298489375.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_2298489375;
            if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298489341 = nimCopy(result_2298489341, {kind: 1, fromInput: nimCopy(null, input_2298489339, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym32_2298489375.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result2_2298489381 = nimCopy(null, tempHEX60gensym32_2298489375, NTI2348810488);
          var Temporary5 = result1_2298489362;
          if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298489341 = nimCopy(result_2298489341, succeed_2298489342(input_2298489339, Temporary5.value, result2_2298489381.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298489341;

      }

  var result_2298489312 = null;

    Label1: {
    };
    result_2298489312 = {body: HEX3Aanonymous_2298489338};

  return result_2298489312;

}

function HEX3CHEX3C_2298489523(a_2298489526, b_2298489527) {

function succeedImpl_2298489539(inputInHEX60gensym198_2298489540, valueInHEX60gensym198_2298489541, tailInHEX60gensym198_2298489542) {
  var result_2298489544 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298489544 = nimCopy(result_2298489544, {kind: 0, value: nimCopy(null, valueInHEX60gensym198_2298489541, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym198_2298489542, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym198_2298489540, NTI33554449), expected: []}, NTI2298480603);

  return result_2298489544;

}

function failImpl_2298489546(inputInHEX60gensym198_2298489547, expectedInHEX60gensym198_2298489548, tailInHEX60gensym198_2298489549) {
  var result_2298489551 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298489551 = nimCopy(result_2298489551, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym198_2298489548, NTI2298486850), tail: nimCopy(null, tailInHEX60gensym198_2298489549, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym198_2298489547, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298489551;

}
      
function HEX3Aanonymous_2298489554(input_2298489555) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298489557 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298489558 = succeedImpl_2298489539;
          var fail_2298489559 = failImpl_2298489546;
          Label1: {
            var tempHEX60gensym30_2298489572 = parse_2298481877(a_2298489526, input_2298489555);
            if ((tempHEX60gensym30_2298489572.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_2298489572;
            if (ConstSet134[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298489557 = nimCopy(result_2298489557, {kind: 1, fromInput: nimCopy(null, input_2298489555, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym30_2298489572.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298489578 = nimCopy(null, tempHEX60gensym30_2298489572, NTI2298480603);
          Label3: {
            var tempHEX60gensym32_2298489591 = parse_2298480719(b_2298489527, result1_2298489578.tail);
            if ((tempHEX60gensym32_2298489591.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_2298489591;
            if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298489557 = nimCopy(result_2298489557, {kind: 1, fromInput: nimCopy(null, input_2298489555, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym32_2298489591.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result2_2298489597 = nimCopy(null, tempHEX60gensym32_2298489591, NTI2298479452);
          var Temporary5 = result1_2298489578;
          if (ConstSet136[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298489557 = nimCopy(result_2298489557, succeed_2298489558(input_2298489555, Temporary5.value, result2_2298489597.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298489557;

      }

  var result_2298489528 = null;

    Label1: {
    };
    result_2298489528 = {body: HEX3Aanonymous_2298489554};

  return result_2298489528;

}

function map_2298490369(a_2298490372, fn_2298490374) {

function succeedImpl_2298490386(inputInHEX60gensym217_2298490387, valueInHEX60gensym217_2298490388, tailInHEX60gensym217_2298490389) {
  var result_2298490391 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298490391 = nimCopy(result_2298490391, {kind: 0, value: nimCopy(null, valueInHEX60gensym217_2298490388, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym217_2298490389, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym217_2298490387, NTI33554449), expected: []}, NTI2298480603);

  return result_2298490391;

}

function failImpl_2298490393(inputInHEX60gensym217_2298490394, expectedInHEX60gensym217_2298490395, tailInHEX60gensym217_2298490396) {
  var result_2298490398 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298490398 = nimCopy(result_2298490398, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym217_2298490395, NTI2298487485), tail: nimCopy(null, tailInHEX60gensym217_2298490396, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym217_2298490394, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298490398;

}
      
function HEX3Aanonymous_2298490401(input_2298490402) {
            var Temporary2;
          var Temporary3;

        var result_2298490404 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298490405 = succeedImpl_2298490386;
          var fail_2298490406 = failImpl_2298490393;
          Label1: {
            var tempHEX60gensym24_2298490419 = parse_2298485397(a_2298490372, input_2298490402);
            if ((tempHEX60gensym24_2298490419.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_2298490419;
            if (ConstSet137[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298490404 = nimCopy(result_2298490404, {kind: 1, fromInput: nimCopy(null, input_2298490402, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym24_2298490419.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298490425 = nimCopy(null, tempHEX60gensym24_2298490419, NTI2298483190);
          var Temporary3 = result1_2298490425;
          if (ConstSet138[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2348810258)); }
          result_2298490404 = nimCopy(result_2298490404, succeed_2298490405(input_2298490402, fn_2298490374(Temporary3.value), result1_2298490425.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298490404;

      }

  var result_2298490375 = null;

    Label1: {
    };
    result_2298490375 = {body: HEX3Aanonymous_2298490401};

  return result_2298490375;

}

function nop_2298490497() {

function succeedImpl_2298490510(inputInHEX60gensym219_2298490511, valueInHEX60gensym219_2298490512, tailInHEX60gensym219_2298490513) {
  var result_2298490515 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298490515 = nimCopy(result_2298490515, {kind: 0, value: nimCopy(null, valueInHEX60gensym219_2298490512, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym219_2298490513, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym219_2298490511, NTI33554449), expected: []}, NTI2298480603);

  return result_2298490515;

}

function failImpl_2298490517(inputInHEX60gensym219_2298490518, expectedInHEX60gensym219_2298490519, tailInHEX60gensym219_2298490520) {
  var result_2298490522 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298490522 = nimCopy(result_2298490522, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym219_2298490519, NTI2298487574), tail: nimCopy(null, tailInHEX60gensym219_2298490520, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym219_2298490518, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298490522;

}
      
function HEX3Aanonymous_2298490525(input_2298490526) {
        var result_2298490528 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

          var succeed_2298490529 = succeedImpl_2298490510;
          var fail_2298490530 = failImpl_2298490517;
          result_2298490528 = nimCopy(result_2298490528, succeed_2298490529(input_2298490526, ({rows: [], baseline: 0, width: 0, flag: 0}), input_2298490526), NTI2298480603);

        return result_2298490528;

      }

  var result_2298490499 = null;

    Label1: {
    };
    result_2298490499 = {body: HEX3Aanonymous_2298490525};

  return result_2298490499;

}

function isSome_2214592897(self_2214592899) {
  var result_2214592900 = false;

    result_2214592900 = self_2214592899.has;

  return result_2214592900;

}

function get_2231369976(self_2231369978, otherwise_2231369979) {
    var Temporary1;

  var result_2231369980 = [];

    if (isSome_2214592897(self_2231369978)) {
    Temporary1 = self_2231369978.val;
    }
    else {
    Temporary1 = otherwise_2231369979;
    }
    
    result_2231369980 = nimCopy(null, Temporary1, NTI33554449);

  return result_2231369980;

}

function hasJsBigInt_905969707() {
  var result_905969708 = false;

    result_905969708 = typeof BigInt != 'undefined'

  return result_905969708;

}

function hiXorLoJs_1275068501(a_1275068502, b_1275068503) {
  var result_1275068504 = 0n;

    var prod_1275068505 = (a_1275068502 * b_1275068503);
    var mask_1275068506 = BigInt("0xffffffffffffffff");
    result_1275068504 = ((prod_1275068505 >> BigInt("64")) ^ (prod_1275068505 & mask_1275068506));

  return result_1275068504;

}

function hashWangYi1_1275068609(x_1275068611) {
  var result_1275068612 = 0;

    if (hasJsBigInt_905969707()) {
    var P0HEX60gensym6_1275068631 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1275068632 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1275068633 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1275068634 = hiXorLoJs_1275068501(hiXorLoJs_1275068501(P0HEX60gensym6_1275068631, (BigInt(x_1275068611) ^ P1HEX60gensym6_1275068632)), P58HEX60gensym6_1275068633);
    result_1275068612 = Number((() => { const i = resHEX60gensym6_1275068634, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1275068612 = (Number(BigInt.asIntN(32, x_1275068611)) & Number(BigInt.asIntN(32, 4294967295n)));
    }
    

  return result_1275068612;

}

function hash_2315256349(x_2315256351) {
  var result_2315256352 = 0;

    result_2315256352 = hashWangYi1_1275068609(BigInt.asUintN(64, BigInt(x_2315256351)));

  return result_2315256352;

}

function rawGet_2315256342(t_2315256345, key_2315256346, hc_2315256347, hc_2315256347_Idx) {
  var result_2315256348 = 0;

  BeforeRet: {
    hc_2315256347[hc_2315256347_Idx] = hash_2315256349(key_2315256346);
    if ((hc_2315256347[hc_2315256347_Idx] == 0)) {
    hc_2315256347[hc_2315256347_Idx] = 314159265;
    }
    
    if (((t_2315256345.data).length == 0)) {
    result_2315256348 = (-1);
    break BeforeRet;
    }
    
    var h_2315256409 = (hc_2315256347[hc_2315256347_Idx] & (t_2315256345.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2315256345.data[chckIndx(h_2315256409, 0, (t_2315256345.data).length - 1)].Field0)) break Label2;
          if (((t_2315256345.data[chckIndx(h_2315256409, 0, (t_2315256345.data).length - 1)].Field0 == hc_2315256347[hc_2315256347_Idx]) && HEX3DHEX3D_1040188400(t_2315256345.data[chckIndx(h_2315256409, 0, (t_2315256345.data).length - 1)].Field1, key_2315256346))) {
          result_2315256348 = h_2315256409;
          break BeforeRet;
          }
          
          h_2315256409 = nextTry_1627389986(h_2315256409, (t_2315256345.data).length - 1);
        }
    };
    result_2315256348 = subInt((-1), h_2315256409);
  };

  return result_2315256348;

}

function hasKey_2298489672(t_2298489675, key_2298489676) {
  var result_2298489677 = false;

    var hc_2298489678 = [0];
    result_2298489677 = (0 <= rawGet_2315256342(t_2298489675, key_2298489676, hc_2298489678, 0));

  return result_2298489677;

}

function contains_2298489666(t_2298489669, key_2298489670) {
  var result_2298489671 = false;

  BeforeRet: {
    result_2298489671 = hasKey_2298489672(t_2298489669, key_2298489670);
    break BeforeRet;
  };

  return result_2298489671;

}

function some_2214593019(val_2214593021) {
  var result_2214593022 = ({val: [], has: false});

    result_2214593022.has = true;
    result_2214593022.val = nimCopy(null, val_2214593021, NTI33554449);

  return result_2214593022;

}

function raiseKeyError_2298489817(key_2298489819) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_1040188049(key_2298489819) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2298489750(t_2298489753, key_2298489754) {
  var result_2298489755 = [];

    var hcHEX60gensym20_2298489756 = [0];
    var indexHEX60gensym20_2298489763 = rawGet_2315256342(t_2298489753, key_2298489754, hcHEX60gensym20_2298489756, 0);
    if ((0 <= indexHEX60gensym20_2298489763)) {
    result_2298489755 = nimCopy(null, t_2298489753.data[chckIndx(indexHEX60gensym20_2298489763, 0, (t_2298489753.data).length - 1)].Field2, NTI33554449);
    }
    else {
    raiseKeyError_2298489817(key_2298489754);
    }
    

  return result_2298489755;

}

function HEX26_2332033972(left_2332033973, right_2332033974) {
  var result_2332033975 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_2332033975 = nimCopy(result_2332033975, join_2332033228([nimCopy(null, left_2332033973, NTI2332033028), nimCopy(null, right_2332033974, NTI2332033028)]), NTI2332033028);

  return result_2332033975;

}

function HEX3CHEX3C_2298491206(a_2298491209, b_2298491210) {

function succeedImpl_2298491222(inputInHEX60gensym233_2298491223, valueInHEX60gensym233_2298491224, tailInHEX60gensym233_2298491225) {
  var result_2298491227 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298491227 = nimCopy(result_2298491227, {kind: 0, value: nimCopy(null, valueInHEX60gensym233_2298491224, NTI2332033028), tail: nimCopy(null, tailInHEX60gensym233_2298491225, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym233_2298491223, NTI33554449), expected: []}, NTI2298480603);

  return result_2298491227;

}

function failImpl_2298491229(inputInHEX60gensym233_2298491230, expectedInHEX60gensym233_2298491231, tailInHEX60gensym233_2298491232) {
  var result_2298491234 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_2298491234 = nimCopy(result_2298491234, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym233_2298491231, NTI2298488222), tail: nimCopy(null, tailInHEX60gensym233_2298491232, NTI33554449), fromInput: nimCopy(null, inputInHEX60gensym233_2298491230, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);

  return result_2298491234;

}
      
function HEX3Aanonymous_2298491237(input_2298491238) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_2298491240 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: {
          var succeed_2298491241 = succeedImpl_2298491222;
          var fail_2298491242 = failImpl_2298491229;
          Label1: {
            var tempHEX60gensym30_2298491255 = parse_2298481877(a_2298491209, input_2298491238);
            if ((tempHEX60gensym30_2298491255.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_2298491255;
            if (ConstSet140[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2348810258)); }
            result_2298491240 = nimCopy(result_2298491240, {kind: 1, fromInput: nimCopy(null, input_2298491238, NTI33554449), expected: nimCopy(null, Temporary2.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym30_2298491255.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result1_2298491261 = nimCopy(null, tempHEX60gensym30_2298491255, NTI2298480603);
          Label3: {
            var tempHEX60gensym32_2298491274 = parse_2298480475(b_2298491210, result1_2298491261.tail);
            if ((tempHEX60gensym32_2298491274.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_2298491274;
            if (ConstSet141[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2348810258)); }
            result_2298491240 = nimCopy(result_2298491240, {kind: 1, fromInput: nimCopy(null, input_2298491238, NTI33554449), expected: nimCopy(null, Temporary4.expected, NTI2348810272), tail: nimCopy(null, tempHEX60gensym32_2298491274.tail, NTI33554449), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI2298480603);
            break BeforeRet;
            }
            
          };
          var result2_2298491280 = nimCopy(null, tempHEX60gensym32_2298491274, NTI2348810372);
          var Temporary5 = result1_2298491261;
          if (ConstSet142[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2348810258)); }
          result_2298491240 = nimCopy(result_2298491240, succeed_2298491241(input_2298491238, Temporary5.value, result2_2298491280.tail), NTI2298480603);
          break BeforeRet;
        };

        return result_2298491240;

      }

  var result_2298491211 = null;

    Label1: {
    };
    result_2298491211 = {body: HEX3Aanonymous_2298491237};

  return result_2298491211;

}

function HEX24_2332033056(rect_2332033057) {
  var result_2332033058 = [];

    result_2332033058 = nimCopy(null, nsuJoinSep(rect_2332033057.rows, [10]), NTI33554449);

  return result_2332033058;

}

function nsuCountLines(s_754976560) {
  var result_754976561 = 0;

    result_754976561 = 1;
    var i_754976562 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_754976562 < (s_754976560).length)) break Label2;
          switch (s_754976560[chckIndx(i_754976562, 0, (s_754976560).length - 1)]) {
          case 13:
            if (((addInt(i_754976562, 1) < (s_754976560).length) && (s_754976560[chckIndx(addInt(i_754976562, 1), 0, (s_754976560).length - 1)] == 10))) {
            i_754976562 = addInt(i_754976562, 1);
            }
            
            result_754976561 = addInt(result_754976561, 1);
            break;
          case 10:
            result_754976561 = addInt(result_754976561, 1);
            break;
          default: 
            break;
          }
          i_754976562 = addInt(i_754976562, 1);
        }
    };

  return result_754976561;

}

function nsuSplitLines(s_754975403, keepEol_754975404) {
            var Temporary6;

  var result_754975405 = [];

    result_754975405 = nimCopy(null, [], NTI754975239);
    Label1: {
      var xHEX60gensym73_754975411 = [];
      var first_2281701861 = 0;
      var last_2281701862 = 0;
      var eolpos_2281701863 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2281701862 < (s_754975403).length) && !((ConstSet144[s_754975403[chckIndx(last_2281701862, 0, (s_754975403).length - 1)]] != undefined)))) break Label5;
                  last_2281701862 = addInt(last_2281701862, 1);
                }
            };
            eolpos_2281701863 = last_2281701862;
            if ((last_2281701862 < (s_754975403).length)) {
            if ((s_754975403[chckIndx(last_2281701862, 0, (s_754975403).length - 1)] == 10)) {
            last_2281701862 = addInt(last_2281701862, 1);
            }
            else {
            if ((s_754975403[chckIndx(last_2281701862, 0, (s_754975403).length - 1)] == 13)) {
            last_2281701862 = addInt(last_2281701862, 1);
            if (((last_2281701862 < (s_754975403).length) && (s_754975403[chckIndx(last_2281701862, 0, (s_754975403).length - 1)] == 10))) {
            last_2281701862 = addInt(last_2281701862, 1);
            }
            
            }
            }
            }
            
            if (keepEol_754975404) {
            Temporary6 = subInt(last_2281701862, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2281701863, 1);
            }
            
            xHEX60gensym73_754975411 = substr_33558079(s_754975403, first_2281701861, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym73_754975411, NTI33554449);
            result_754975405.push(Temporary7);;
            if ((eolpos_2281701863 == last_2281701862)) {
            break Label2;
            }
            
            first_2281701861 = last_2281701862;
          }
      };
    };

  return result_754975405;

}

function lineInfo_2298491299(result1_2298491301) {
  var result_2298491302 = {Field0: 0, Field1: 0};

    var prior_2298491321 = HEX5BHEX5D_754976027(result1_2298491301.fromInput, HEX2EHEX2E_973078632(0, addInt((result1_2298491301.tail).length, 1)));
    var lineNum_2298491322 = nsuCountLines(prior_2298491321);
    var lines_2298491323 = nsuSplitLines(prior_2298491321, false);
    var colmNum_2298491327 = addInt((lines_2298491323[chckIndx(subInt((lines_2298491323).length, 1), 0, (lines_2298491323).length - 1)]).length, 1);
    result_2298491302 = nimCopy(result_2298491302, {Field0: lineNum_2298491322, Field1: colmNum_2298491327}, NTI2348810290);

  return result_2298491302;

}

function mkDigit_1442840581(v_1442840582, typ_1442840583) {
      var Temporary1;

  var result_1442840584 = [];

    if (!((v_1442840582 < 26))) {
    failedAssertImpl_268435541([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_1442840582 < 10)) {
    result_1442840584 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1442840582), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_1442840583 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1442840584 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1442840582), 10), 0, 255)), NTI33554449);
    }
    

  return result_1442840584;

}

function formatInt_1560281248(n_1560281250, radix_1560281251, spec_1560281252) {
    var Temporary1;

  var result_1560281253 = [];

    var n_1560281256 = BigInt(n_1560281250);
    var negative_1560281257 = (n_1560281256 < 0n);
    if (negative_1560281257) {
    Temporary1 = BigInt.asUintN(64, (BigInt.asUintN(64, ~(n_1560281256)) + 1n));
    }
    else {
    Temporary1 = BigInt.asUintN(64, n_1560281256);
    }
    
    var v_1560281258 = Temporary1;
    var xx_1560281259 = [];
    if (spec_1560281252.alternateForm) {
    switch (spec_1560281252.typ) {
    case 88:
      xx_1560281259 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_1560281259 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_1560281259 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_1560281259 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1560281258 == 0n)) {
    result_1560281253 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_1560281253 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0n < v_1560281258)) break Label3;
            var d_1560281260 = (v_1560281258 % BigInt.asUintN(64, BigInt(radix_1560281251)));
            v_1560281258 = BigInt.asUintN(64, (v_1560281258 / BigInt.asUintN(64, BigInt(radix_1560281251))));
            result_1560281253.push.apply(result_1560281253, mkDigit_1442840581(chckRange(Number(d_1560281260), (-2147483648), 2147483647), spec_1560281252.typ));;
          }
      };
      Label4: {
        var idx_1560281265 = 0;
        var colontmp__2281701868 = 0;
        colontmp__2281701868 = divInt((result_1560281253).length, 2);
        var i_2281701869 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2281701869 < colontmp__2281701868)) break Label6;
              idx_1560281265 = i_2281701869;
              var Temporary7 = result_1560281253[chckIndx(idx_1560281265, 0, (result_1560281253).length - 1)]; result_1560281253[chckIndx(idx_1560281265, 0, (result_1560281253).length - 1)] = result_1560281253[chckIndx(subInt(subInt((result_1560281253).length, idx_1560281265), 1), 0, (result_1560281253).length - 1)]; result_1560281253[chckIndx(subInt(subInt((result_1560281253).length, idx_1560281265), 1), 0, (result_1560281253).length - 1)] = Temporary7;              i_2281701869 = addInt(i_2281701869, 1);
            }
        };
      };
    }
    
    if (spec_1560281252.padWithZero) {
    var sign_1560281270 = (negative_1560281257 || !((spec_1560281252.sign == 45)));
    var toFill_1560281274 = subInt(subInt(subInt(spec_1560281252.minimumWidth, (result_1560281253).length), (xx_1560281259).length), (sign_1560281270 ? 1 : 0));
    if ((0 < toFill_1560281274)) {
    result_1560281253 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1560281274, 0, 2147483647)) || []).concat(result_1560281253 || []), NTI33554449);
    }
    
    }
    
    if (negative_1560281257) {
    result_1560281253 = nimCopy(null, ([45] || []).concat(xx_1560281259 || [],result_1560281253 || []), NTI33554449);
    }
    else {
    if (!((spec_1560281252.sign == 45))) {
    result_1560281253 = nimCopy(null, [spec_1560281252.sign].concat(xx_1560281259 || [],result_1560281253 || []), NTI33554449);
    }
    else {
      result_1560281253 = nimCopy(null, (xx_1560281259 || []).concat(result_1560281253 || []), NTI33554449);
    }
    }
    if ((spec_1560281252.align == 60)) {
    Label8: {
      var i_1560281279 = 0;
      var colontmp__2281701872 = 0;
      colontmp__2281701872 = (result_1560281253).length;
      var i_2281701873 = colontmp__2281701872;
      Label9: {
          Label10: while (true) {
          if (!(i_2281701873 < spec_1560281252.minimumWidth)) break Label10;
            i_1560281279 = i_2281701873;
            addChar(result_1560281253, spec_1560281252.fill);;
            i_2281701873 = addInt(i_2281701873, 1);
          }
      };
    };
    }
    else {
      var toFill_1560281280 = subInt(spec_1560281252.minimumWidth, (result_1560281253).length);
      if ((spec_1560281252.align == 94)) {
      var half_1560281281 = divInt(toFill_1560281280, 2);
      result_1560281253 = nimCopy(null, (nsuRepeatChar(spec_1560281252.fill, chckRange(half_1560281281, 0, 2147483647)) || []).concat(result_1560281253 || [],nsuRepeatChar(spec_1560281252.fill, chckRange(subInt(toFill_1560281280, half_1560281281), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_1560281280)) {
        result_1560281253 = nimCopy(null, (nsuRepeatChar(spec_1560281252.fill, chckRange(toFill_1560281280, 0, 2147483647)) || []).concat(result_1560281253 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_1560281253;

}

function formatValue_1560281240(result_1560281242, result_1560281242_Idx, value_1560281243, specifier_1560281244) {
  BeforeRet: {
    if (((specifier_1560281244).length == 0)) {
    result_1560281242[result_1560281242_Idx].push.apply(result_1560281242[result_1560281242_Idx], HEX24_385875976(value_1560281243));;
    break BeforeRet;
    }
    
    var spec_1560281245 = parseStandardFormatSpecifier_1442840634(specifier_1560281244, 0, false);
    var radix_1560281246 = 10;
    switch (spec_1560281245.typ) {
    case 120:
    case 88:
      radix_1560281246 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_1560281246 = 2;
      break;
    case 111:
      radix_1560281246 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1560281245.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1560281242[result_1560281242_Idx].push.apply(result_1560281242[result_1560281242_Idx], formatInt_1560281248(value_1560281243, radix_1560281246, spec_1560281245));;
  };

  
}

function render_2298478603(latex_2298478604, oneLine_2298478605) {
    
function HEX3Aanonymous_2298481201(x_2298481221) {
      var result_2298481224 = [];

        result_2298481224 = nimCopy(null, [nimCopy(null, x_2298481221, NTI2298479495)], NTI2298480073);

      return result_2298481224;

    }
    
function HEX3Aanonymous_2298480621(x_2298480641) {
      var result_2298480644 = [];

        result_2298480644 = nimCopy(null, [nimCopy(null, x_2298480641, NTI33554449)], NTI1996488834);

      return result_2298480644;

    }
    
function HEX3Aanonymous_2298481416(x_2298481469) {
      var result_2298481472 = [];

        var resultHEX60gensym42_2298481481 = newSeq_536871460(0);
        Label1: {
          var xHEX60gensym42_2298481485 = [];
          var i_2281701493 = 0;
          var L_2281701494 = (x_2298481469).length;
          Label2: {
              Label3: while (true) {
              if (!(i_2281701493 < L_2281701494)) break Label3;
                xHEX60gensym42_2298481485 = x_2298481469[chckIndx(i_2281701493, 0, (x_2298481469).length - 1)];
                var a_2298481486 = nimCopy(null, resultHEX60gensym42_2298481481, NTI536871232);
                var b_2298481487 = nimCopy(null, xHEX60gensym42_2298481485, NTI2298479446);
                resultHEX60gensym42_2298481481 = nimCopy(null, HEX26_2332033126(a_2298481486, b_2298481487), NTI2332033085);
                i_2281701493 = addInt(i_2281701493, 1);
                if (!(((x_2298481469).length == L_2281701494))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_2298481472 = nimCopy(null, resultHEX60gensym42_2298481481, NTI536871232);

      return result_2298481472;

    }
    
function HEX3Aanonymous_2298482635(x_2298482655) {
      var result_2298482658 = [];

        result_2298482658 = nimCopy(null, [nimCopy(null, x_2298482655, NTI2298480661)], NTI2298481267);

      return result_2298482658;

    }
    
function HEX3Aanonymous_2298482055(x_2298482075) {
      var result_2298482078 = [];

        result_2298482078 = nimCopy(null, [nimCopy(null, x_2298482075, NTI2332033028)], NTI2298480787);

      return result_2298482078;

    }
    
function HEX3Aanonymous_2298482850(x_2298482949) {
      var result_2298482952 = [];

        var resultHEX60gensym68_2298482961 = newSeq_2332033386(0);
        Label1: {
          var xHEX60gensym68_2298482965 = [];
          var i_2281701532 = 0;
          var L_2281701533 = (x_2298482949).length;
          Label2: {
              Label3: while (true) {
              if (!(i_2281701532 < L_2281701533)) break Label3;
                xHEX60gensym68_2298482965 = x_2298482949[chckIndx(i_2281701532, 0, (x_2298482949).length - 1)];
                var a_2298482966 = nimCopy(null, resultHEX60gensym68_2298482961, NTI2332033238);
                var b_2298482967 = nimCopy(null, xHEX60gensym68_2298482965, NTI2298480612);
                resultHEX60gensym68_2298482961 = nimCopy(null, HEX26_2298482890(a_2298482966, b_2298482967), NTI2298481709);
                i_2281701532 = addInt(i_2281701532, 1);
                if (!(((x_2298482949).length == L_2281701533))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_2298482952 = nimCopy(null, resultHEX60gensym68_2298482961, NTI2332033238);

      return result_2298482952;

    }
    
function HEX3Aanonymous_2298483046(atoms_2298483062) {
      var result_2298483065 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298483065 = nimCopy(result_2298483065, join_2332033228(atoms_2298483062), NTI2332033028);

      return result_2298483065;

    }
    
function HEX3Aanonymous_2298483232(ch_2298483248) {
      var result_2298483251 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298483251 = nimCopy(result_2298483251, toTextRectOneLine_2332033100(nimCharToStr(ch_2298483248), 0, 1), NTI2332033028);

      return result_2298483251;

    }
    
function HEX3Aanonymous_2298483335(letter_2298483351) {
      var result_2298483354 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298483354 = nimCopy(result_2298483354, toTextRectOneLine_2332033100(inFont_2315255980(((letter_2298483351) | 0), 1), 0, 1), NTI2332033028);

      return result_2298483354;

    }
    
function HEX3Aanonymous_2298483402(pair_2298483405) {
        
function HEX3Aanonymous_2298484025(x_2298484045) {
          var result_2298484048 = [];

            result_2298484048 = nimCopy(null, [nimCopy(null, x_2298484045, NTI2298479495)], NTI2298480073);

          return result_2298484048;

        }
        
function HEX3Aanonymous_2298483914(x_2298483934) {
          var result_2298483937 = [];

            result_2298483937 = nimCopy(null, [nimCopy(null, x_2298483934, NTI33554449)], NTI1996488834);

          return result_2298483937;

        }
        
function HEX3Aanonymous_2298484123(x_2298484158) {
          var result_2298484161 = [];

            var resultHEX60gensym87_2298484170 = newSeq_536871460(0);
            Label1: {
              var xHEX60gensym87_2298484174 = [];
              var i_2281701673 = 0;
              var L_2281701674 = (x_2298484158).length;
              Label2: {
                  Label3: while (true) {
                  if (!(i_2281701673 < L_2281701674)) break Label3;
                    xHEX60gensym87_2298484174 = x_2298484158[chckIndx(i_2281701673, 0, (x_2298484158).length - 1)];
                    var a_2298484175 = nimCopy(null, resultHEX60gensym87_2298484170, NTI536871232);
                    var b_2298484176 = nimCopy(null, xHEX60gensym87_2298484174, NTI2298479446);
                    resultHEX60gensym87_2298484170 = nimCopy(null, HEX26_2332033126(a_2298484175, b_2298484176), NTI2332033085);
                    i_2281701673 = addInt(i_2281701673, 1);
                    if (!(((x_2298484158).length == L_2281701674))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            result_2298484161 = nimCopy(null, resultHEX60gensym87_2298484170, NTI536871232);

          return result_2298484161;

        }
        
function HEX3Aanonymous_2298484234(letter_2298484249) {
          var result_2298484252 = ({rows: [], baseline: 0, width: 0, flag: 0});

            result_2298484252 = nimCopy(result_2298484252, toTextRectOneLine_2332033100(inFont_2315255980(((letter_2298484249) | 0), font_2298483411), 0, 1), NTI2332033028);

          return result_2298484252;

        }

      var result_2298483408 = null;

        var tmpTuple_2298483409 = nimCopy(null, pair_2298483405, NTI2315256373);
        var name_2298483410 = nimCopy(null, tmpTuple_2298483409["Field0"], NTI33554449);
        var font_2298483411 = tmpTuple_2298483409["Field1"];
        result_2298483408 = map_2298483269(HEX7C_2348811408(HEX3CHEX3C_2298483765(HEX3CHEX3C_2298483682(HEX3EHEX3E_2298483503(HEX3EHEX3E_2298483586(HEX3EHEX3E_2298483503(HEX3EHEX3E_2298483420(s_2348810351(name_2298483410), ws_2298481558), c_2348810521(123)), ws_2298481558), alpha_2298483218), ws_2298481558), c_2348810521(125)), HEX3EHEX3E_2298483503(HEX3EHEX3E_2298483420(s_2348810351(name_2298483410), map_2298481501(HEX26_2298481266(map_2298481015(HEX2A_2298480244(whitespace_2348811389, HEX2EHEX2E_1056964656(1, 2147483647).a), HEX3Aanonymous_2298484025), HEX2A_2298480777(HEX7C_2298480675(map_2298480429(whitespace_2348811389, HEX3Aanonymous_2298483914), nop_2298480252()), subInt(HEX2EHEX2E_1056964656(1, 2147483647).b, HEX2EHEX2E_1056964656(1, 2147483647).a))), HEX3Aanonymous_2298484123)), alpha_2298483218)), HEX3Aanonymous_2298484234);

      return result_2298483408;

    }
    
function HEX3Aanonymous_2298484457(entry_2298484460) {
        var Temporary1;
        
function HEX3Aanonymous_2298484625(x_2298484641) {
          var result_2298484644 = ({rows: [], baseline: 0, width: 0, flag: 0});

            result_2298484644 = nimCopy(result_2298484644, val_2298484466, NTI2332033028);

          return result_2298484644;

        }
          
function HEX3Aanonymous_2298484721(x_2298484737) {
            var result_2298484740 = ({rows: [], baseline: 0, width: 0, flag: 0});

              result_2298484740 = nimCopy(result_2298484740, val_2298484466, NTI2332033028);

            return result_2298484740;

          }

      var result_2298484463 = null;

        var tmpTuple_2298484464 = nimCopy(null, entry_2298484460, NTI2315255819);
        var key_2298484465 = nimCopy(null, tmpTuple_2298484464["Field0"], NTI33554449);
        var val_2298484466 = nimCopy(null, tmpTuple_2298484464["Field1"], NTI2332033028);
        if ((key_2298484465[chckIndx(0, 0, (key_2298484465).length - 1)] == 92)) {
        Temporary1 = map_2298484654(HEX3CHEX3C_2298484540(s_2348810351(key_2298484465), HEX21_2298484483(letter_2348811482)), HEX3Aanonymous_2298484625);
        }
        else {
        Temporary1 = map_2298484654(s_2348810351(key_2298484465), HEX3Aanonymous_2298484721);
        }
        
        result_2298484463 = Temporary1;

      return result_2298484463;

    }
    
function HEX3Aanonymous_2298485879(x_2298485899) {
      var result_2298485902 = [];

        result_2298485902 = nimCopy(null, [nimCopy(null, x_2298485899, NTI2298483222)], NTI2298483831);

      return result_2298485902;

    }
    
function HEX3Aanonymous_2298485291(x_2298485311) {
      var result_2298485314 = [];

        result_2298485314 = nimCopy(null, [x_2298485311], NTI2298483357);

      return result_2298485314;

    }
    
function HEX3Aanonymous_2298486094(x_2298486199) {
      var result_2298486202 = [];

        var resultHEX60gensym124_2298486211 = newSeq_2298486103(0);
        Label1: {
          var xHEX60gensym124_2298486215 = [];
          var i_2281701726 = 0;
          var L_2281701727 = (x_2298486199).length;
          Label2: {
              Label3: while (true) {
              if (!(i_2281701726 < L_2281701727)) break Label3;
                xHEX60gensym124_2298486215 = x_2298486199[chckIndx(i_2281701726, 0, (x_2298486199).length - 1)];
                var a_2298486216 = nimCopy(null, resultHEX60gensym124_2298486211, NTI2298484252);
                var b_2298486217 = nimCopy(null, xHEX60gensym124_2298486215, NTI2298483184);
                resultHEX60gensym124_2298486211 = nimCopy(null, HEX26_2298486139(a_2298486216, b_2298486217), NTI2298484276);
                i_2281701726 = addInt(i_2281701726, 1);
                if (!(((x_2298486199).length == L_2281701727))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_2298486202 = nimCopy(null, resultHEX60gensym124_2298486211, NTI2298484252);

      return result_2298486202;

    }
    
function HEX3Aanonymous_2298486379(chars_2298486407) {
      var result_2298486410 = [];

        result_2298486410 = nimCopy(null, join_2298486386(chars_2298486407, []), NTI33554449);

      return result_2298486410;

    }
    
function HEX3Aanonymous_2298486489(name_2298486492) {
      var result_2298486495 = false;

        result_2298486495 = contains_2298486538(commands_2315259127, name_2298486492);

      return result_2298486495;

    }
    
function HEX3Aanonymous_2298486621(name_2298486760) {
      var result_2298486763 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298486763 = nimCopy(result_2298486763, HEX5BHEX5D_2298486681(commands_2315259127, name_2298486760), NTI2332033028);

      return result_2298486763;

    }
    
function HEX3Aanonymous_2298486838(entry_2298486841) {
        
function HEX3Aanonymous_2298486858(x_2298486874) {
          var result_2298486877 = ({rows: [], baseline: 0, width: 0, flag: 0});

            result_2298486877 = nimCopy(result_2298486877, val_2298486847, NTI2332033028);

          return result_2298486877;

        }

      var result_2298486844 = null;

        var tmpTuple_2298486845 = nimCopy(null, entry_2298486841, NTI2315255824);
        var key_2298486846 = nimCopy(null, tmpTuple_2298486845["Field0"], NTI33554449);
        var val_2298486847 = nimCopy(null, tmpTuple_2298486845["Field1"], NTI2332033028);
        result_2298486844 = map_2298484654(s_2348810351(key_2298486846), HEX3Aanonymous_2298486858);

      return result_2298486844;

    }
    
function HEX3Aanonymous_2298486952(entry_2298486955) {
        
function HEX3Aanonymous_2298487147(rect_2298487168) {
            var Temporary1;

          var result_2298487171 = ({rows: [], baseline: 0, width: 0, flag: 0});

            var rect_2298487172 = nimCopy(null, rect_2298487168, NTI2332033028);
            if (((rect_2298487172.width == 1) && (height_2332033065(rect_2298487172) == 1))) {
            rect_2298487172.rows[chckIndx(0, 0, (rect_2298487172.rows).length - 1)].push.apply(rect_2298487172.rows[chckIndx(0, 0, (rect_2298487172.rows).length - 1)], val_2298486961.Field0);;
            Temporary1 = rect_2298487172;
            }
            else {
            if (oneLine_2298478605) {
            Label2: {
              var fmtRes_2298487177 = [mnewString(0)];
              formatValue_1442840747(fmtRes_2298487177, 0, val_2298486961.Field0, []);
              fmtRes_2298487177[0].push.apply(fmtRes_2298487177[0], [32,40]);;
              formatValue_1442840747(fmtRes_2298487177, 0, row_2332033059(rect_2298487172), []);
              fmtRes_2298487177[0].push.apply(fmtRes_2298487177[0], [41]);;
            };
            Temporary1 = toTextRectOneLine_2332033100(fmtRes_2298487177[0], 0, 0);
            }
            else {
            Temporary1 = stack_2332034017([toTextRectOneLine_2332033100(val_2298486961.Field1, 0, 0), nimCopy(null, rect_2298487172, NTI2332033028)], addInt(1, rect_2298487172.baseline), 0);
            }
            }
            result_2298487171 = nimCopy(result_2298487171, Temporary1, NTI2332033028);

          return result_2298487171;

        }

      var result_2298486958 = null;

        var tmpTuple_2298486959 = nimCopy(null, entry_2298486955, NTI2315256713);
        var key_2298486960 = nimCopy(null, tmpTuple_2298486959["Field0"], NTI33554449);
        var val_2298486961 = nimCopy(null, tmpTuple_2298486959["Field1"], NTI2315256714);
        result_2298486958 = map_2298487186(HEX3EHEX3E_2298487064(HEX3EHEX3E_2298486981(s_2348810351(key_2298486960), HEX21_2298484483(letter_2348811482)), atom_2298481569), HEX3Aanonymous_2298487147);

      return result_2298486958;

    }
    
function HEX3Aanonymous_2298487474(x_2298487494) {
      var result_2298487497 = [];

        result_2298487497 = nimCopy(null, [nimCopy(null, x_2298487494, NTI2332033028)], NTI2298480787);

      return result_2298487497;

    }
    
function HEX3Aanonymous_2298487537(x_2298487557) {
      var result_2298487560 = [];

        result_2298487560 = nimCopy(null, [nimCopy(null, x_2298487557, NTI2332033028)], NTI2298480787);

      return result_2298487560;

    }
    
function HEX3Aanonymous_2298487689(fraction_2298487742) {
        var Temporary1;

      var result_2298487745 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var numerator_2298487746 = nimCopy(null, fraction_2298487742[chckIndx(0, 0, (fraction_2298487742).length - 1)], NTI2332033028);
        var denominator_2298487747 = nimCopy(null, fraction_2298487742[chckIndx(1, 0, (fraction_2298487742).length - 1)], NTI2332033028);
        if (oneLine_2298478605) {
        Label2: {
          var fmtRes_2298487752 = [mnewString(0)];
          formatValue_1442840747(fmtRes_2298487752, 0, rowAsAtom_2332033062(numerator_2298487746), []);
          fmtRes_2298487752[0].push.apply(fmtRes_2298487752[0], [32,47,32]);;
          formatValue_1442840747(fmtRes_2298487752, 0, rowAsAtom_2332033062(denominator_2298487747), []);
        };
        Temporary1 = toTextRectOneLine_2332033100(fmtRes_2298487752[0], 0, 0);
        }
        else {
          var width_2298487757 = max_754976484(numerator_2298487746.width, denominator_2298487747.width);
          var fractionLine_2298487758 = nsuRepeatStr([226,148,128], width_2298487757);
          var flag_2298487759 = 5;
          if ((((numerator_2298487746.flag == 5) && (numerator_2298487746.width == width_2298487757)) || ((denominator_2298487747.flag == 5) && (denominator_2298487747.width == width_2298487757)))) {
          fractionLine_2298487758 = nimCopy(null, ([226,149,182] || []).concat(fractionLine_2298487758 || [],[226,149,180] || []), NTI33554449);
          flag_2298487759 = 0;
          }
          
        Temporary1 = withFlag_2332034123(stack_2332034017([nimCopy(null, numerator_2298487746, NTI2332033028), toTextRectOneLine_2332033100(fractionLine_2298487758, 0, 0), nimCopy(null, denominator_2298487747, NTI2332033028)], height_2332033065(numerator_2298487746), 0), flag_2298487759);
        }
        
        result_2298487745 = nimCopy(result_2298487745, Temporary1, NTI2332033028);

      return result_2298487745;

    }
    
function HEX3Aanonymous_2298487880(x_2298487900) {
      var result_2298487903 = [];

        result_2298487903 = nimCopy(null, [nimCopy(null, x_2298487900, NTI2332033028)], NTI2298480787);

      return result_2298487903;

    }
    
function HEX3Aanonymous_2298487943(x_2298487963) {
      var result_2298487966 = [];

        result_2298487966 = nimCopy(null, [nimCopy(null, x_2298487963, NTI2332033028)], NTI2298480787);

      return result_2298487966;

    }

function bigDelimiter_2298478607(delimiter_2298478608, height_2298478609, baseline_2298478610) {
  var result_2298478611 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_2298478611.rows = nimCopy(null, newSeq_536871460(height_2298478609), NTI536871232);
    result_2298478611.width = 1;
    result_2298478611.baseline = baseline_2298478610;
    switch (toJSStr(delimiter_2298478608)) {
    case "{":
      if ((height_2298478609 == 2)) {
      result_2298478611.rows[chckIndx(0, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,176], NTI33554449);
      result_2298478611.rows[chckIndx(1, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,177], NTI33554449);
      }
      else {
        result_2298478611.rows[chckIndx(0, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,167], NTI33554449);
        Label1: {
          var i_2298480032 = 0;
          var colontmp__2281701791 = 0;
          colontmp__2281701791 = subInt(height_2298478609, 1);
          var i_2281701792 = 1;
          Label2: {
              Label3: while (true) {
              if (!(i_2281701792 < colontmp__2281701791)) break Label3;
                i_2298480032 = i_2281701792;
                result_2298478611.rows[chckIndx(i_2298480032, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,170], NTI33554449);
                i_2281701792 = addInt(i_2281701792, 1);
              }
          };
        };
        result_2298478611.rows[chckIndx(divInt(height_2298478609, 2), 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,168], NTI33554449);
        HEX5BHEX5DHEX3D_2298480033(result_2298478611.rows, 1, [226,142,169]);
      }
      
      break;
    case "}":
      if ((height_2298478609 == 2)) {
      result_2298478611.rows[chckIndx(0, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,177], NTI33554449);
      result_2298478611.rows[chckIndx(1, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,176], NTI33554449);
      }
      else {
        result_2298478611.rows[chckIndx(0, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,171], NTI33554449);
        Label4: {
          var i_2298480045 = 0;
          var colontmp__2281701795 = 0;
          colontmp__2281701795 = subInt(height_2298478609, 1);
          var i_2281701796 = 1;
          Label5: {
              Label6: while (true) {
              if (!(i_2281701796 < colontmp__2281701795)) break Label6;
                i_2298480045 = i_2281701796;
                result_2298478611.rows[chckIndx(i_2298480045, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,170], NTI33554449);
                i_2281701796 = addInt(i_2281701796, 1);
              }
          };
        };
        result_2298478611.rows[chckIndx(divInt(height_2298478609, 2), 0, (result_2298478611.rows).length - 1)] = nimCopy(null, [226,142,172], NTI33554449);
        HEX5BHEX5DHEX3D_2298480033(result_2298478611.rows, 1, [226,142,173]);
      }
      
      break;
    case "⟨":
      result_2298478611.width = chckRange(divInt(addInt(height_2298478609, 1), 2), 0, 2147483647);
      var widthDec_2298480051 = subInt(result_2298478611.width, 1);
      if ((modInt(height_2298478609, 2) == 1)) {
      result_2298478611.rows[chckIndx(divInt(height_2298478609, 2), 0, (result_2298478611.rows).length - 1)] = nimCopy(null, ([226,159,168] || []).concat(nsuRepeatStr([32], chckRange(divInt(height_2298478609, 2), 0, 2147483647)) || []), NTI33554449);
      }
      
      Label7: {
        var i_2298480056 = 0;
        var colontmp__2281701799 = 0;
        colontmp__2281701799 = divInt(height_2298478609, 2);
        var i_2281701800 = 0;
        Label8: {
            Label9: while (true) {
            if (!(i_2281701800 < colontmp__2281701799)) break Label9;
              i_2298480056 = i_2281701800;
              result_2298478611.rows[chckIndx(i_2298480056, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, (nsuRepeatStr([32], chckRange(subInt(widthDec_2298480051, i_2298480056), 0, 2147483647)) || []).concat([226,149,177] || [],nsuRepeatStr([32], chckRange(i_2298480056, 0, 2147483647)) || []), NTI33554449);
              result_2298478611.rows[chckIndx(subInt(subInt(height_2298478609, 1), i_2298480056), 0, (result_2298478611.rows).length - 1)] = nimCopy(null, (nsuRepeatStr([32], chckRange(subInt(widthDec_2298480051, i_2298480056), 0, 2147483647)) || []).concat([226,149,178] || [],nsuRepeatStr([32], chckRange(i_2298480056, 0, 2147483647)) || []), NTI33554449);
              i_2281701800 = addInt(i_2281701800, 1);
            }
        };
      };
      break;
    case "⟩":
      result_2298478611.width = chckRange(divInt(addInt(height_2298478609, 1), 2), 0, 2147483647);
      var widthDec_2298480057 = subInt(result_2298478611.width, 1);
      if ((modInt(height_2298478609, 2) == 1)) {
      result_2298478611.rows[chckIndx(divInt(height_2298478609, 2), 0, (result_2298478611.rows).length - 1)] = nimCopy(null, (nsuRepeatStr([32], chckRange(divInt(height_2298478609, 2), 0, 2147483647)) || []).concat([226,159,169] || []), NTI33554449);
      }
      
      Label10: {
        var i_2298480062 = 0;
        var colontmp__2281701803 = 0;
        colontmp__2281701803 = divInt(height_2298478609, 2);
        var i_2281701804 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_2281701804 < colontmp__2281701803)) break Label12;
              i_2298480062 = i_2281701804;
              result_2298478611.rows[chckIndx(i_2298480062, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, (nsuRepeatStr([32], chckRange(i_2298480062, 0, 2147483647)) || []).concat([226,149,178] || [],nsuRepeatStr([32], chckRange(subInt(widthDec_2298480057, i_2298480062), 0, 2147483647)) || []), NTI33554449);
              result_2298478611.rows[chckIndx(subInt(subInt(height_2298478609, 1), i_2298480062), 0, (result_2298478611.rows).length - 1)] = nimCopy(null, (nsuRepeatStr([32], chckRange(i_2298480062, 0, 2147483647)) || []).concat([226,149,177] || [],nsuRepeatStr([32], chckRange(subInt(widthDec_2298480057, i_2298480062), 0, 2147483647)) || []), NTI33554449);
              i_2281701804 = addInt(i_2281701804, 1);
            }
        };
      };
      break;
    default: 
      var tmpTuple_2298480186 = HEX5BHEX5D_2298480116(delimiterParts_2298480020, delimiter_2298478608);
      var top_2298480187 = nimCopy(null, tmpTuple_2298480186["Field0"], NTI33554449);
      var mid_2298480188 = nimCopy(null, tmpTuple_2298480186["Field1"], NTI33554449);
      var bottom_2298480189 = nimCopy(null, tmpTuple_2298480186["Field2"], NTI33554449);
      result_2298478611.rows[chckIndx(0, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, top_2298480187, NTI33554449);
      Label13: {
        var i_2298480194 = 0;
        var colontmp__2281701807 = 0;
        colontmp__2281701807 = subInt(height_2298478609, 1);
        var i_2281701808 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2281701808 < colontmp__2281701807)) break Label15;
              i_2298480194 = i_2281701808;
              result_2298478611.rows[chckIndx(i_2298480194, 0, (result_2298478611.rows).length - 1)] = nimCopy(null, mid_2298480188, NTI33554449);
              i_2281701808 = addInt(i_2281701808, 1);
            }
        };
      };
      HEX5BHEX5DHEX3D_2298480033(result_2298478611.rows, 1, bottom_2298480189);
      break;
    }

  return result_2298478611;

}
    
function HEX3Aanonymous_2298488021(nk_2298488044) {
        var Temporary1;

      var result_2298488047 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var n_2298488048 = nimCopy(null, nk_2298488044[chckIndx(0, 0, (nk_2298488044).length - 1)], NTI2332033028);
        var k_2298488049 = nimCopy(null, nk_2298488044[chckIndx(1, 0, (nk_2298488044).length - 1)], NTI2332033028);
        if (oneLine_2298478605) {
        Label2: {
          var fmtRes_2298488054 = [mnewString(0)];
          fmtRes_2298488054[0].push.apply(fmtRes_2298488054[0], [67,40]);;
          formatValue_1442840747(fmtRes_2298488054, 0, row_2332033059(n_2298488048), []);
          fmtRes_2298488054[0].push.apply(fmtRes_2298488054[0], [44,32]);;
          formatValue_1442840747(fmtRes_2298488054, 0, row_2332033059(k_2298488049), []);
          fmtRes_2298488054[0].push.apply(fmtRes_2298488054[0], [41]);;
        };
        Temporary1 = toTextRectOneLine_2332033100(fmtRes_2298488054[0], 0, 0);
        }
        else {
          var inside_2298488055 = stack_2332034017([nimCopy(null, n_2298488048, NTI2332033028), nimCopy(null, k_2298488049, NTI2332033028)], height_2332033065(n_2298488048), 0);
        Temporary1 = join_2332033228([bigDelimiter_2298478607([40], height_2332033065(inside_2298488055), chckRange(inside_2298488055.baseline, 0, 2147483647)), nimCopy(null, inside_2298488055, NTI2332033028), bigDelimiter_2298478607([41], height_2332033065(inside_2298488055), chckRange(inside_2298488055.baseline, 0, 2147483647))]);
        }
        
        result_2298488047 = nimCopy(result_2298488047, Temporary1, NTI2332033028);

      return result_2298488047;

    }
    
function HEX3Aanonymous_2298488116(arg_2298488267) {
        var Temporary1;
          var Temporary3;

      var result_2298488270 = ({rows: [], baseline: 0, width: 0, flag: 0});

        if (oneLine_2298478605) {
        Label2: {
          var fmtRes_2298488275 = [mnewString(0)];
          fmtRes_2298488275[0].push.apply(fmtRes_2298488275[0], [226,136,154]);;
          formatValue_1442840747(fmtRes_2298488275, 0, rowAsAtom_2332033062(arg_2298488267), []);
        };
        Temporary1 = toTextRectOneLine_2332033100(fmtRes_2298488275[0], 0, 0);
        }
        else {
          var overbar_2298488276 = toTextRectOneLine_2332033100(nsuRepeatStr([95], arg_2298488267.width), 0, 0);
          if ((height_2332033065(arg_2298488267) == 1)) {
          Temporary3 = toTextRectOneLine_2332033100([226,136,154], 0, 0);
          }
          else {
            Label4: {
              var resultHEX60gensym168_2298488287 = [];
              Label5: {
                var xHEX60gensym168_2298488288 = 0;
                var colontmp__2281701427 = 0;
                colontmp__2281701427 = divInt(height_2332033065(arg_2298488267), 2);
                var res_2281701428 = colontmp__2281701427;
                Label6: {
                    Label7: while (true) {
                    if (!(1 <= res_2281701428)) break Label7;
                      xHEX60gensym168_2298488288 = res_2281701428;
                      resultHEX60gensym168_2298488287.push(xHEX60gensym168_2298488288);;
                      res_2281701428 = subInt(res_2281701428, 1);
                    }
                };
              };
              var HEX3Atmp_2298488311 = nimCopy(null, resultHEX60gensym168_2298488287, NTI2298485895);
              var iHEX60gensym169_2298488314 = 0;
              var resultHEX60gensym169_2298488321 = newSeq_2332033386(chckRange((HEX3Atmp_2298488311).length, 0, 2147483647));
              Label8: {
                var it_2298488325 = 0;
                var i_2281701432 = 0;
                var L_2281701433 = (HEX3Atmp_2298488311).length;
                Label9: {
                    Label10: while (true) {
                    if (!(i_2281701432 < L_2281701433)) break Label10;
                      it_2298488325 = HEX3Atmp_2298488311[chckIndx(i_2281701432, 0, (HEX3Atmp_2298488311).length - 1)];
                      resultHEX60gensym169_2298488321[chckIndx(iHEX60gensym169_2298488314, 0, (resultHEX60gensym169_2298488321).length - 1)] = nimCopy(resultHEX60gensym169_2298488321[chckIndx(iHEX60gensym169_2298488314, 0, (resultHEX60gensym169_2298488321).length - 1)], toTextRect_2332033074([226,149,178], addInt(subInt(arg_2298488267.baseline, height_2332033065(arg_2298488267)), it_2298488325), 0), NTI2332033028);
                      iHEX60gensym169_2298488314 = addInt(iHEX60gensym169_2298488314, 1);
                      i_2281701432 = addInt(i_2281701432, 1);
                      if (!(((HEX3Atmp_2298488311).length == L_2281701433))) {
                      failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            Label11: {
              var resultHEX60gensym172_2298488340 = [];
              Label12: {
                var xHEX60gensym172_2298488341 = 0;
                var colontmp__2281701437 = 0;
                colontmp__2281701437 = height_2332033065(arg_2298488267);
                var res_2281701438 = 1;
                Label13: {
                    Label14: while (true) {
                    if (!(res_2281701438 <= colontmp__2281701437)) break Label14;
                      xHEX60gensym172_2298488341 = res_2281701438;
                      resultHEX60gensym172_2298488340.push(xHEX60gensym172_2298488341);;
                      res_2281701438 = addInt(res_2281701438, 1);
                    }
                };
              };
              var HEX3Atmp_2298488364 = nimCopy(null, resultHEX60gensym172_2298488340, NTI2298485936);
              var iHEX60gensym173_2298488367 = 0;
              var resultHEX60gensym173_2298488374 = newSeq_2332033386(chckRange((HEX3Atmp_2298488364).length, 0, 2147483647));
              Label15: {
                var it_2298488378 = 0;
                var i_2281701441 = 0;
                var L_2281701442 = (HEX3Atmp_2298488364).length;
                Label16: {
                    Label17: while (true) {
                    if (!(i_2281701441 < L_2281701442)) break Label17;
                      it_2298488378 = HEX3Atmp_2298488364[chckIndx(i_2281701441, 0, (HEX3Atmp_2298488364).length - 1)];
                      resultHEX60gensym173_2298488374[chckIndx(iHEX60gensym173_2298488367, 0, (resultHEX60gensym173_2298488374).length - 1)] = nimCopy(resultHEX60gensym173_2298488374[chckIndx(iHEX60gensym173_2298488367, 0, (resultHEX60gensym173_2298488374).length - 1)], toTextRect_2332033074([226,149,177], addInt(subInt(arg_2298488267.baseline, height_2332033065(arg_2298488267)), it_2298488378), 0), NTI2332033028);
                      iHEX60gensym173_2298488367 = addInt(iHEX60gensym173_2298488367, 1);
                      i_2281701441 = addInt(i_2281701441, 1);
                      if (!(((HEX3Atmp_2298488364).length == L_2281701442))) {
                      failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
          Temporary3 = join_2332033228(HEX26_2298482890(resultHEX60gensym169_2298488321, resultHEX60gensym173_2298488374));
          }
          
          var symbol_2298488387 = nimCopy(null, Temporary3, NTI2332033028);
        Temporary1 = join_2332033228([nimCopy(null, symbol_2298488387, NTI2332033028), stack_2332034017([nimCopy(null, overbar_2298488276, NTI2332033028), nimCopy(null, arg_2298488267, NTI2332033028)], addInt(arg_2298488267.baseline, 1), 1)]);
        }
        
        result_2298488270 = nimCopy(result_2298488270, Temporary1, NTI2332033028);

      return result_2298488270;

    }
    
function HEX3Aanonymous_2298488448(arg_2298488494) {
        var Temporary1;

      var result_2298488497 = ({rows: [], baseline: 0, width: 0, flag: 0});

        if (oneLine_2298478605) {
        Label2: {
          var fmtRes_2298488502 = [mnewString(0)];
          fmtRes_2298488502[0].push.apply(fmtRes_2298488502[0], [91]);;
          formatValue_1442840747(fmtRes_2298488502, 0, row_2332033059(arg_2298488494), []);
          fmtRes_2298488502[0].push.apply(fmtRes_2298488502[0], [93]);;
        };
        Temporary1 = toTextRectOneLine_2332033100(fmtRes_2298488502[0], 0, 0);
        }
        else {
          var horizontal_2298488503 = toTextRectOneLine_2332033100(nsuRepeatStr([226,148,128], arg_2298488494.width), 0, 0);
          var sandwich_2298488504 = stack_2332034017([nimCopy(null, horizontal_2298488503, NTI2332033028), nimCopy(null, arg_2298488494, NTI2332033028), nimCopy(null, horizontal_2298488503, NTI2332033028)], addInt(arg_2298488494.baseline, 1), 1);
          var left_2298488505 = ({rows: [], baseline: 0, width: 0, flag: 0});
          left_2298488505.rows = nimCopy(null, newSeq_536871460(height_2332033065(sandwich_2298488504)), NTI536871232);
          left_2298488505.width = 1;
          left_2298488505.baseline = sandwich_2298488504.baseline;
          Label3: {
            var i_2298488517 = 0;
            var colontmp__2281701446 = 0;
            colontmp__2281701446 = subInt(height_2332033065(sandwich_2298488504), 1);
            var i_2281701447 = 1;
            Label4: {
                Label5: while (true) {
                if (!(i_2281701447 < colontmp__2281701446)) break Label5;
                  i_2298488517 = i_2281701447;
                  left_2298488505.rows[chckIndx(i_2298488517, 0, (left_2298488505.rows).length - 1)] = nimCopy(null, [226,148,130], NTI33554449);
                  i_2281701447 = addInt(i_2281701447, 1);
                }
            };
          };
          var right_2298488518 = nimCopy(null, left_2298488505, NTI2332033028);
          left_2298488505.rows[chckIndx(0, 0, (left_2298488505.rows).length - 1)] = nimCopy(null, [226,148,140], NTI33554449);
          HEX5BHEX5DHEX3D_2298480033(left_2298488505.rows, 1, [226,148,148]);
          right_2298488518.rows[chckIndx(0, 0, (right_2298488518.rows).length - 1)] = nimCopy(null, [226,148,144], NTI33554449);
          HEX5BHEX5DHEX3D_2298480033(right_2298488518.rows, 1, [226,148,152]);
        Temporary1 = join_2332033228([nimCopy(null, left_2298488505, NTI2332033028), nimCopy(null, sandwich_2298488504, NTI2332033028), nimCopy(null, right_2298488518, NTI2332033028)]);
        }
        
        result_2298488497 = nimCopy(result_2298488497, Temporary1, NTI2332033028);

      return result_2298488497;

    }
    
function HEX3Aanonymous_2298488573(entry_2298488576) {
        
function HEX3Aanonymous_2298488633(rect_2298488660) {
            var Temporary1;

          var result_2298488663 = ({rows: [], baseline: 0, width: 0, flag: 0});

            var rect_2298488664 = nimCopy(null, rect_2298488660, NTI2332033028);
            if (oneLine_2298478605) {
            Label2: {
              var fmtRes_2298488669 = [mnewString(0)];
              formatValue_1442840747(fmtRes_2298488669, 0, one_2298488584, []);
              fmtRes_2298488669[0].push.apply(fmtRes_2298488669[0], [91]);;
              formatValue_1442840747(fmtRes_2298488669, 0, row_2332033059(rect_2298488664), []);
              fmtRes_2298488669[0].push.apply(fmtRes_2298488669[0], [93]);;
            };
            Temporary1 = toTextRectOneLine_2332033100(fmtRes_2298488669[0], 0, 0);
            }
            else {
            if ((rect_2298488664.width <= 1)) {
            Temporary1 = stack_2332034017([nimCopy(null, rect_2298488664, NTI2332033028), toTextRectOneLine_2332033100(one_2298488584, 0, 0)], height_2332033065(rect_2298488664), 0);
            }
            else {
              var arrow_2298488670 = [toTextRectOneLine_2332033100(left_2298488585, 0, 0)];
              Label3: {
                var __2298488675 = 0;
                var colontmp__2281701451 = 0;
                colontmp__2281701451 = subInt(rect_2298488664.width, 2);
                var i_2281701452 = 0;
                Label4: {
                    Label5: while (true) {
                    if (!(i_2281701452 < colontmp__2281701451)) break Label5;
                      __2298488675 = i_2281701452;
                      HEX26HEX3D_2332033992(arrow_2298488670[0], toTextRectOneLine_2332033100(middle_2298488586, 0, 0));
                      i_2281701452 = addInt(i_2281701452, 1);
                    }
                };
              };
              HEX26HEX3D_2332033992(arrow_2298488670[0], toTextRectOneLine_2332033100(right_2298488587, 0, 0));
            Temporary1 = stack_2332034017([nimCopy(null, rect_2298488664, NTI2332033028), nimCopy(null, arrow_2298488670[0], NTI2332033028)], height_2332033065(rect_2298488664), 0);
            }
            }
            result_2298488663 = nimCopy(result_2298488663, withFlag_2332034123(Temporary1, 2), NTI2332033028);

          return result_2298488663;

        }

      var result_2298488579 = null;

        var tmpTuple_2298488580 = nimCopy(null, entry_2298488576, NTI2315256333);
        var key_2298488581 = nimCopy(null, tmpTuple_2298488580["Field0"], NTI33554449);
        var val_2298488582 = nimCopy(null, tmpTuple_2298488580["Field1"], NTI2315256334);
        var tmpTuple_2298488583 = nimCopy(null, val_2298488582, NTI2315256334);
        var one_2298488584 = nimCopy(null, tmpTuple_2298488583["Field0"], NTI33554449);
        var left_2298488585 = nimCopy(null, tmpTuple_2298488583["Field1"], NTI33554449);
        var middle_2298488586 = nimCopy(null, tmpTuple_2298488583["Field2"], NTI33554449);
        var right_2298488587 = nimCopy(null, tmpTuple_2298488583["Field3"], NTI33554449);
        result_2298488579 = map_2298487186(HEX3EHEX3E_2298487064(HEX3EHEX3E_2298486981(s_2348810351(key_2298488581), HEX21_2298484483(letter_2348811482)), atom_2298481569), HEX3Aanonymous_2298488633);

      return result_2298488579;

    }
    
function HEX3Aanonymous_2298488889(x_2298488909) {
      var result_2298488912 = [];

        result_2298488912 = nimCopy(null, [nimCopy(null, x_2298488909, NTI2332033028)], NTI2298480787);

      return result_2298488912;

    }
    
function HEX3Aanonymous_2298488952(x_2298488972) {
      var result_2298488975 = [];

        result_2298488975 = nimCopy(null, [nimCopy(null, x_2298488972, NTI2332033028)], NTI2298480787);

      return result_2298488975;

    }
    
function HEX3Aanonymous_2298489083(x_2298489103) {
      var result_2298489106 = [];

        result_2298489106 = nimCopy(null, [nimCopy(null, x_2298489103, NTI2332033028)], NTI2298480787);

      return result_2298489106;

    }
    
function HEX3Aanonymous_2298489244(things_2298489263) {
      var result_2298489266 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var inside_2298489267 = nimCopy(null, things_2298489263[chckIndx(1, 0, (things_2298489263).length - 1)], NTI2332033028);
        var left_2298489268 = nimCopy(null, things_2298489263[chckIndx(0, 0, (things_2298489263).length - 1)], NTI2332033028);
        var right_2298489269 = nimCopy(null, things_2298489263[chckIndx(2, 0, (things_2298489263).length - 1)], NTI2332033028);
        if ((1 < height_2332033065(inside_2298489267))) {
        left_2298489268 = nimCopy(left_2298489268, bigDelimiter_2298478607(row_2332033059(left_2298489268), height_2332033065(inside_2298489267), chckRange(inside_2298489267.baseline, 0, 2147483647)), NTI2332033028);
        right_2298489269 = nimCopy(right_2298489269, bigDelimiter_2298478607(row_2332033059(right_2298489269), height_2332033065(inside_2298489267), chckRange(inside_2298489267.baseline, 0, 2147483647)), NTI2332033028);
        }
        
        result_2298489266 = nimCopy(result_2298489266, join_2332033228([nimCopy(null, left_2298489268, NTI2332033028), nimCopy(null, inside_2298489267, NTI2332033028), nimCopy(null, right_2298489269, NTI2332033028)]), NTI2332033028);

      return result_2298489266;

    }
    
function HEX3Aanonymous_2298489927(sup_2298489943) {
      var result_2298489946 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298489946 = nimCopy(result_2298489946, withFlag_2332034123(sup_2298489943, 7), NTI2332033028);

      return result_2298489946;

    }
    
function HEX3Aanonymous_2298490155(x_2298490175) {
      var result_2298490178 = [];

        result_2298490178 = nimCopy(null, [nimCopy(null, x_2298490175, NTI2298483222)], NTI2298483831);

      return result_2298490178;

    }
    
function HEX3Aanonymous_2298490036(x_2298490056) {
      var result_2298490059 = [];

        result_2298490059 = nimCopy(null, [x_2298490056], NTI2298483357);

      return result_2298490059;

    }
    
function HEX3Aanonymous_2298490253(x_2298490288) {
      var result_2298490291 = [];

        var resultHEX60gensym216_2298490300 = newSeq_2298486103(0);
        Label1: {
          var xHEX60gensym216_2298490304 = [];
          var i_2281701829 = 0;
          var L_2281701830 = (x_2298490288).length;
          Label2: {
              Label3: while (true) {
              if (!(i_2281701829 < L_2281701830)) break Label3;
                xHEX60gensym216_2298490304 = x_2298490288[chckIndx(i_2281701829, 0, (x_2298490288).length - 1)];
                var a_2298490305 = nimCopy(null, resultHEX60gensym216_2298490300, NTI2298484252);
                var b_2298490306 = nimCopy(null, xHEX60gensym216_2298490304, NTI2298483184);
                resultHEX60gensym216_2298490300 = nimCopy(null, HEX26_2298486139(a_2298490305, b_2298490306), NTI2298484276);
                i_2281701829 = addInt(i_2281701829, 1);
                if (!(((x_2298490288).length == L_2281701830))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_2298490291 = nimCopy(null, resultHEX60gensym216_2298490300, NTI2298484252);

      return result_2298490291;

    }
    
function HEX3Aanonymous_2298490334(primes_2298490353) {
      var result_2298490356 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298490356 = nimCopy(result_2298490356, withFlag_2332034123(toTextRectOneLine_2332033100(nsuRepeatStr([226,128,178], chckRange((primes_2298490353).length, 0, 2147483647)), 0, 0), 7), NTI2332033028);

      return result_2298490356;

    }
    
function HEX3Aanonymous_2298490452(sub_2298490468) {
      var result_2298490471 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_2298490471 = nimCopy(result_2298490471, withFlag_2332034123(sub_2298490468, 6), NTI2332033028);

      return result_2298490471;

    }
    
function HEX3Aanonymous_2298490936(x_2298490956) {
      var result_2298490959 = [];

        result_2298490959 = nimCopy(null, [nimCopy(null, x_2298490956, NTI2332033028)], NTI2298480787);

      return result_2298490959;

    }
    
function HEX3Aanonymous_2298490580(x_2298490600) {
      var result_2298490603 = [];

        result_2298490603 = nimCopy(null, [nimCopy(null, x_2298490600, NTI2332033028)], NTI2298480787);

      return result_2298490603;

    }
    
function HEX3Aanonymous_2298490643(x_2298490663) {
      var result_2298490666 = [];

        result_2298490666 = nimCopy(null, [nimCopy(null, x_2298490663, NTI2332033028)], NTI2298480787);

      return result_2298490666;

    }
    
function HEX3Aanonymous_2298490760(x_2298490780) {
      var result_2298490783 = [];

        result_2298490783 = nimCopy(null, [nimCopy(null, x_2298490780, NTI2332033028)], NTI2298480787);

      return result_2298490783;

    }
    
function HEX3Aanonymous_2298490823(x_2298490843) {
      var result_2298490846 = [];

        result_2298490846 = nimCopy(null, [nimCopy(null, x_2298490843, NTI2332033028)], NTI2298480787);

      return result_2298490846;

    }

function translateIfPossible_2298489599(str_2298489600, table_2298489603) {
                var Temporary5;
              var Temporary6;
                var Temporary7;
              var Temporary8;
              var Temporary9;
                var Temporary10;
              var Temporary11;
              var Temporary12;
              var Temporary13;
                var Temporary14;
              var Temporary15;
              var Temporary16;
              var Temporary17;
              var Temporary18;
                var Temporary19;
              var Temporary20;
              var Temporary21;
              var Temporary22;
              var Temporary23;
              var Temporary24;
                var Temporary25;
              var Temporary26;
              var Temporary27;
              var Temporary28;
              var Temporary29;
              var Temporary30;
              var Temporary31;
                var Temporary32;

  var result_2298489605 = ({val: [], has: false});

  BeforeRet: {
    var resultHEX60gensym199_2298489611 = [];
    Label1: {
      var xHEX60gensym199_2298489612 = 0;
      Label2: {
        var rune_2281701840 = 0;
        var i_2281701841 = 0;
        var result_2281701842 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2281701841 < ((str_2298489600.slice(0, (str_2298489600).length - 1 + 1))).length)) break Label4;
              if (((Temporary5 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary5)[chckIndx(i_2281701841, 0, (Temporary5).length - 1)] <= 127)) {
              result_2281701842 = chckRange((Temporary6 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary6)[chckIndx(i_2281701841, 0, (Temporary6).length - 1)], (-2147483648), 2147483647);
              i_2281701841 = addInt(i_2281701841, 1);
              }
              else {
              if ((((Temporary7 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary7)[chckIndx(i_2281701841, 0, (Temporary7).length - 1)] >>> 5) == 6)) {
              if ((i_2281701841 <= subInt(((str_2298489600.slice(0, (str_2298489600).length - 1 + 1))).length, 2))) {
              result_2281701842 = chckRange((((((((Temporary8 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary8)[chckIndx(i_2281701841, 0, (Temporary8).length - 1)] & 31) >>> 0) << 6) >>> 0) | (((Temporary9 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary9)[chckIndx(addInt(i_2281701841, 1), 0, (Temporary9).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              i_2281701841 = addInt(i_2281701841, 2);
              }
              else {
                result_2281701842 = 65533;
                i_2281701841 = addInt(i_2281701841, 1);
              }
              
              }
              else {
              if ((((Temporary10 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary10)[chckIndx(i_2281701841, 0, (Temporary10).length - 1)] >>> 4) == 14)) {
              if ((i_2281701841 <= subInt(((str_2298489600.slice(0, (str_2298489600).length - 1 + 1))).length, 3))) {
              result_2281701842 = chckRange((((((((((Temporary11 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary11)[chckIndx(i_2281701841, 0, (Temporary11).length - 1)] & 15) >>> 0) << 12) >>> 0) | (((((Temporary12 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary12)[chckIndx(addInt(i_2281701841, 1), 0, (Temporary12).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary13 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary13)[chckIndx(addInt(i_2281701841, 2), 0, (Temporary13).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              i_2281701841 = addInt(i_2281701841, 3);
              }
              else {
                result_2281701842 = 65533;
                i_2281701841 = addInt(i_2281701841, 1);
              }
              
              }
              else {
              if ((((Temporary14 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary14)[chckIndx(i_2281701841, 0, (Temporary14).length - 1)] >>> 3) == 30)) {
              if ((i_2281701841 <= subInt(((str_2298489600.slice(0, (str_2298489600).length - 1 + 1))).length, 4))) {
              result_2281701842 = chckRange((((((((((((Temporary15 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary15)[chckIndx(i_2281701841, 0, (Temporary15).length - 1)] & 7) >>> 0) << 18) >>> 0) | (((((Temporary16 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary16)[chckIndx(addInt(i_2281701841, 1), 0, (Temporary16).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary17 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary17)[chckIndx(addInt(i_2281701841, 2), 0, (Temporary17).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary18 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary18)[chckIndx(addInt(i_2281701841, 3), 0, (Temporary18).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              i_2281701841 = addInt(i_2281701841, 4);
              }
              else {
                result_2281701842 = 65533;
                i_2281701841 = addInt(i_2281701841, 1);
              }
              
              }
              else {
              if ((((Temporary19 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary19)[chckIndx(i_2281701841, 0, (Temporary19).length - 1)] >>> 2) == 62)) {
              if ((i_2281701841 <= subInt(((str_2298489600.slice(0, (str_2298489600).length - 1 + 1))).length, 5))) {
              result_2281701842 = chckRange((((((((((((((Temporary20 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary20)[chckIndx(i_2281701841, 0, (Temporary20).length - 1)] & 3) >>> 0) << 24) >>> 0) | (((((Temporary21 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary21)[chckIndx(addInt(i_2281701841, 1), 0, (Temporary21).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary22 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary22)[chckIndx(addInt(i_2281701841, 2), 0, (Temporary22).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary23 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary23)[chckIndx(addInt(i_2281701841, 3), 0, (Temporary23).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary24 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary24)[chckIndx(addInt(i_2281701841, 4), 0, (Temporary24).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              i_2281701841 = addInt(i_2281701841, 5);
              }
              else {
                result_2281701842 = 65533;
                i_2281701841 = addInt(i_2281701841, 1);
              }
              
              }
              else {
              if ((((Temporary25 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary25)[chckIndx(i_2281701841, 0, (Temporary25).length - 1)] >>> 1) == 126)) {
              if ((i_2281701841 <= subInt(((str_2298489600.slice(0, (str_2298489600).length - 1 + 1))).length, 6))) {
              result_2281701842 = chckRange((((((((((((((((Temporary26 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary26)[chckIndx(i_2281701841, 0, (Temporary26).length - 1)] & 1) >>> 0) << 30) >>> 0) | (((((Temporary27 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary27)[chckIndx(addInt(i_2281701841, 1), 0, (Temporary27).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | (((((Temporary28 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary28)[chckIndx(addInt(i_2281701841, 2), 0, (Temporary28).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary29 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary29)[chckIndx(addInt(i_2281701841, 3), 0, (Temporary29).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary30 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary30)[chckIndx(addInt(i_2281701841, 4), 0, (Temporary30).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary31 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary31)[chckIndx(addInt(i_2281701841, 5), 0, (Temporary31).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              i_2281701841 = addInt(i_2281701841, 6);
              }
              else {
                result_2281701842 = 65533;
                i_2281701841 = addInt(i_2281701841, 1);
              }
              
              }
              else {
                result_2281701842 = chckRange((Temporary32 = (str_2298489600.slice(0, (str_2298489600).length - 1 + 1)), Temporary32)[chckIndx(i_2281701841, 0, (Temporary32).length - 1)], (-2147483648), 2147483647);
                i_2281701841 = addInt(i_2281701841, 1);
              }
              }}}}}
              rune_2281701840 = result_2281701842;
              xHEX60gensym199_2298489612 = rune_2281701840;
              resultHEX60gensym199_2298489611.push(xHEX60gensym199_2298489612);;
            }
        };
      };
    };
    var runes_2298489617 = nimCopy(null, resultHEX60gensym199_2298489611, NTI2298486900);
      var resultHEX60gensym200_2298489619 = true;
      Label33: {
        var it_2298489623 = 0;
        var i_2281701846 = 0;
        var L_2281701847 = (runes_2298489617).length;
        Label34: {
            Label35: while (true) {
            if (!(i_2281701846 < L_2281701847)) break Label35;
              it_2298489623 = runes_2298489617[chckIndx(i_2281701846, 0, (runes_2298489617).length - 1)];
              if (!(contains_2298489666(table_2298489603, it_2298489623))) {
              resultHEX60gensym200_2298489619 = false;
              break Label33;
              }
              
              i_2281701846 = addInt(i_2281701846, 1);
              if (!(((runes_2298489617).length == L_2281701847))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    if (resultHEX60gensym200_2298489619) {
    Label36: {
      var iHEX60gensym202_2298489829 = 0;
      var resultHEX60gensym202_2298489836 = newSeq_536871460(chckRange((runes_2298489617).length, 0, 2147483647));
      Label37: {
        var it_2298489840 = 0;
        var i_2281701851 = 0;
        var L_2281701852 = (runes_2298489617).length;
        Label38: {
            Label39: while (true) {
            if (!(i_2281701851 < L_2281701852)) break Label39;
              it_2298489840 = runes_2298489617[chckIndx(i_2281701851, 0, (runes_2298489617).length - 1)];
              resultHEX60gensym202_2298489836[chckIndx(iHEX60gensym202_2298489829, 0, (resultHEX60gensym202_2298489836).length - 1)] = nimCopy(null, HEX5BHEX5D_2298489750(table_2298489603, it_2298489840), NTI33554449);
              iHEX60gensym202_2298489829 = addInt(iHEX60gensym202_2298489829, 1);
              i_2281701851 = addInt(i_2281701851, 1);
              if (!(((runes_2298489617).length == L_2281701852))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    result_2298489605 = nimCopy(result_2298489605, some_2214593019(nsuJoinSep(resultHEX60gensym202_2298489836, [])), NTI1593835612);
    break BeforeRet;
    }
    
  };

  return result_2298489605;

}
    
function HEX3Aanonymous_2298491022(operands_2298491113) {
        var Temporary1;
          var Temporary2;
          var Temporary3;

      var result_2298491116 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var base_2298491117 = nimCopy(null, operands_2298491113[chckIndx(0, 0, (operands_2298491113).length - 1)], NTI2332033028);
        var flag_2298491118 = base_2298491117.flag;
        base_2298491117.flag = 0;
        if (        (operands_2298491113).length == 1        ){          Temporary1 = base_2298491117;
          }
        else if (        (operands_2298491113).length == 3        ){          if ((operands_2298491113[chckIndx(1, 0, (operands_2298491113).length - 1)].flag == 7)) {
          Temporary2 = {Field0: nimCopy(null, operands_2298491113[chckIndx(1, 0, (operands_2298491113).length - 1)], NTI2332033028), Field1: nimCopy(null, operands_2298491113[chckIndx(2, 0, (operands_2298491113).length - 1)], NTI2332033028)};
          }
          else {
          Temporary2 = {Field0: nimCopy(null, operands_2298491113[chckIndx(2, 0, (operands_2298491113).length - 1)], NTI2332033028), Field1: nimCopy(null, operands_2298491113[chckIndx(1, 0, (operands_2298491113).length - 1)], NTI2332033028)};
          }
          
          var tmpTuple_2298491126 = nimCopy(null, Temporary2, NTI2298488143);
          var sup_2298491127 = nimCopy(null, tmpTuple_2298491126["Field0"], NTI2332033028);
          var sub_2298491128 = nimCopy(null, tmpTuple_2298491126["Field1"], NTI2332033028);
          if (oneLine_2298478605) {
          var str_2298491129 = row_2332033059(base_2298491117);
          if (!(isEmpty_2332033071(sub_2298491128))) {
          str_2298491129.push.apply(str_2298491129, get_2231369976(translateIfPossible_2298489599(row_2332033059(sub_2298491128), subscripts_2315257577), ([95] || []).concat(rowAsAtom_2332033062(sub_2298491128) || [])));;
          }
          
          if (!(isEmpty_2332033071(sup_2298491127))) {
          str_2298491129.push.apply(str_2298491129, get_2231369976(translateIfPossible_2298489599(row_2332033059(sup_2298491127), superscripts_2315257572), ([94] || []).concat(rowAsAtom_2332033062(sup_2298491127) || [])));;
          }
          
          Temporary3 = toTextRectOneLine_2332033100(str_2298491129, 0, 0);
          }
          else {
          if ((ConstSet139[flag_2298491118] != undefined)) {
          Temporary3 = stack_2332034017([nimCopy(null, sup_2298491127, NTI2332033028), nimCopy(null, base_2298491117, NTI2332033028), nimCopy(null, sub_2298491128, NTI2332033028)], addInt(base_2298491117.baseline, height_2332033065(sup_2298491127)), 0);
          }
          else {
          Temporary3 = HEX26_2332033972(base_2298491117, stack_2332034017([extendDown_2332033160(sup_2298491127, height_2332033065(base_2298491117)), nimCopy(null, sub_2298491128, NTI2332033028)], addInt(base_2298491117.baseline, height_2332033065(sup_2298491127)), 1));
          }
          }
          Temporary1 = Temporary3;
          }
        else{
          Temporary1 = ({rows: [], baseline: 0, width: 0, flag: 0});
          }
        result_2298491116 = nimCopy(result_2298491116, withFlag_2332034123(Temporary1, flag_2298491118), NTI2332033028);

      return result_2298491116;

    }
    var Temporary16;
    var Temporary17;
      var Temporary18;

  var result_2298478606 = [];

    var ws_2298481558 = map_2298481501(HEX26_2298481266(map_2298481015(HEX2A_2298480244(whitespace_2348811389, HEX2EHEX2E_1056964656(0, 2147483647).a), HEX3Aanonymous_2298481201), HEX2A_2298480777(HEX7C_2298480675(map_2298480429(whitespace_2348811389, HEX3Aanonymous_2298480621), nop_2298480252()), subInt(HEX2EHEX2E_1056964656(0, 2147483647).b, HEX2EHEX2E_1056964656(0, 2147483647).a))), HEX3Aanonymous_2298481416);
    var atom_2298481569 = {body: null};
    var expr_2298483195 = map_2298483075(map_2298482981(HEX26_2298482700(map_2298482449(HEX2A_2298481614(atom_2298481569, HEX2EHEX2E_1056964656(0, 2147483647).a), HEX3Aanonymous_2298482635), HEX2A_2298482211(HEX7C_2298482109(map_2298481831(atom_2298481569, HEX3Aanonymous_2298482055), nop_2298481622()), subInt(HEX2EHEX2E_1056964656(0, 2147483647).b, HEX2EHEX2E_1056964656(0, 2147483647).a))), HEX3Aanonymous_2298482850), HEX3Aanonymous_2298483046);
    var alpha_2298483218 = HEX7C_2348811408(c_2348810736(HEX2EHEX2E_2315257583(65, 90)), c_2348810736(HEX2EHEX2E_2315257583(97, 122)));
    var digit_2298483326 = map_2298483269(c_2348810736(HEX2EHEX2E_2315257583(48, 57)), HEX3Aanonymous_2298483232);
    var sHEX60gensym88_2298484349 = map_2298484307(fontsByName_2315255957, HEX3Aanonymous_2298483402);
    if (!((0 < (sHEX60gensym88_2298484349).length))) {
    failedAssertImpl_268435541(makeNimstrLit("sequtils.nim(907, 3) `s`gensym88.len > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym88_2298484359 = null;
    resultHEX60gensym88_2298484359 = sHEX60gensym88_2298484349[chckIndx(0, 0, (sHEX60gensym88_2298484349).length - 1)];
    Label1: {
      var iHEX60gensym88_2298484367 = 0;
      var colontmp__2281701406 = 0;
      colontmp__2281701406 = (sHEX60gensym88_2298484349).length;
      var i_2281701407 = 1;
      Label2: {
          Label3: while (true) {
          if (!(i_2281701407 < colontmp__2281701406)) break Label3;
            iHEX60gensym88_2298484367 = i_2281701407;
            var a_2298484368 = resultHEX60gensym88_2298484359;
            var b_2298484369 = sHEX60gensym88_2298484349[chckIndx(iHEX60gensym88_2298484367, 0, (sHEX60gensym88_2298484349).length - 1)];
            resultHEX60gensym88_2298484359 = HEX7C_2298484378(a_2298484368, b_2298484369);
            i_2281701407 = addInt(i_2281701407, 1);
          }
      };
    };
    var latinLetter_2298484456 = HEX7C_2298484378(map_2298483269(alpha_2298483218, HEX3Aanonymous_2298483335), resultHEX60gensym88_2298484359);
    var sHEX60gensym98_2298484798 = map_2298484772(delimiters_2315255955, HEX3Aanonymous_2298484457);
    var nHEX60gensym98_2298484802 = (sHEX60gensym98_2298484798).length;
    if (!((0 < nHEX60gensym98_2298484802))) {
    failedAssertImpl_268435541([115,101,113,117,116,105,108,115,46,110,105,109,40,57,55,55,44,32,51,41,32,96,110,96,103,101,110,115,121,109,57,56,32,62,32,48,96,32,67,97,110,39,116,32,102,111,108,100,32,101,109,112,116,121,32,115,101,113,117,101,110,99,101,115]);
    }
    
    var resultHEX60gensym98_2298484808 = sHEX60gensym98_2298484798[chckIndx(subInt(nHEX60gensym98_2298484802, 1), 0, (sHEX60gensym98_2298484798).length - 1)];
    Label4: {
      var iHEX60gensym98_2298484814 = 0;
      var colontmp__2281701410 = 0;
      colontmp__2281701410 = subInt(nHEX60gensym98_2298484802, 2);
      var res_2281701411 = colontmp__2281701410;
      Label5: {
          Label6: while (true) {
          if (!(0 <= res_2281701411)) break Label6;
            iHEX60gensym98_2298484814 = res_2281701411;
            var a_2298484815 = sHEX60gensym98_2298484798[chckIndx(iHEX60gensym98_2298484814, 0, (sHEX60gensym98_2298484798).length - 1)];
            var b_2298484816 = resultHEX60gensym98_2298484808;
            resultHEX60gensym98_2298484808 = HEX7C_2298484378(a_2298484815, b_2298484816);
            res_2281701411 = subInt(res_2281701411, 1);
          }
      };
    };
    var delimiter_2298484829 = resultHEX60gensym98_2298484808;
    var command_2298486837 = map_2298484654(validate_2298486558(map_2298486424(HEX3EHEX3E_2298486296(c_2348810521(92), map_2298486231(HEX26_2298485944(map_2298485693(HEX2A_2298484870(letter_2348811482, HEX2EHEX2E_1056964656(1, 2147483647).a), HEX3Aanonymous_2298485879), HEX2A_2298485455(HEX7C_2298485353(map_2298485111(letter_2348811482, HEX3Aanonymous_2298485291), nop_2298484878()), subInt(HEX2EHEX2E_1056964656(1, 2147483647).b, HEX2EHEX2E_1056964656(1, 2147483647).a))), HEX3Aanonymous_2298486094)), HEX3Aanonymous_2298486379), HEX3Aanonymous_2298486489, [97,32,99,111,109,109,97,110,100]), HEX3Aanonymous_2298486621);
    var sHEX60gensym131_2298486904 = map_2298484772(nonCommands_2315259151, HEX3Aanonymous_2298486838);
    var nHEX60gensym131_2298486908 = (sHEX60gensym131_2298486904).length;
    if (!((0 < nHEX60gensym131_2298486908))) {
    failedAssertImpl_268435541(makeNimstrLit("sequtils.nim(977, 3) `n`gensym131 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym131_2298486914 = sHEX60gensym131_2298486904[chckIndx(subInt(nHEX60gensym131_2298486908, 1), 0, (sHEX60gensym131_2298486904).length - 1)];
    Label7: {
      var iHEX60gensym131_2298486920 = 0;
      var colontmp__2281701414 = 0;
      colontmp__2281701414 = subInt(nHEX60gensym131_2298486908, 2);
      var res_2281701415 = colontmp__2281701414;
      Label8: {
          Label9: while (true) {
          if (!(0 <= res_2281701415)) break Label9;
            iHEX60gensym131_2298486920 = res_2281701415;
            var a_2298486921 = sHEX60gensym131_2298486904[chckIndx(iHEX60gensym131_2298486920, 0, (sHEX60gensym131_2298486904).length - 1)];
            var b_2298486922 = resultHEX60gensym131_2298486914;
            resultHEX60gensym131_2298486914 = HEX7C_2298484378(a_2298486921, b_2298486922);
            res_2281701415 = subInt(res_2281701415, 1);
          }
      };
    };
    var nonCommand_2298486935 = resultHEX60gensym131_2298486914;
    var sHEX60gensym140_2298487288 = map_2298487261(simpleDiacritics_2315256185, HEX3Aanonymous_2298486952);
    var nHEX60gensym140_2298487292 = (sHEX60gensym140_2298487288).length;
    if (!((0 < nHEX60gensym140_2298487292))) {
    failedAssertImpl_268435541(makeNimstrLit("sequtils.nim(977, 3) `n`gensym140 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym140_2298487298 = sHEX60gensym140_2298487288[chckIndx(subInt(nHEX60gensym140_2298487292, 1), 0, (sHEX60gensym140_2298487288).length - 1)];
    Label10: {
      var iHEX60gensym140_2298487304 = 0;
      var colontmp__2281701419 = 0;
      colontmp__2281701419 = subInt(nHEX60gensym140_2298487292, 2);
      var res_2281701420 = colontmp__2281701419;
      Label11: {
          Label12: while (true) {
          if (!(0 <= res_2281701420)) break Label12;
            iHEX60gensym140_2298487304 = res_2281701420;
            var a_2298487305 = sHEX60gensym140_2298487288[chckIndx(iHEX60gensym140_2298487304, 0, (sHEX60gensym140_2298487288).length - 1)];
            var b_2298487306 = resultHEX60gensym140_2298487298;
            resultHEX60gensym140_2298487298 = HEX7C_2298484378(a_2298487305, b_2298487306);
            res_2281701420 = subInt(res_2281701420, 1);
          }
      };
    };
    var simpleDiacritic_2298487319 = resultHEX60gensym140_2298487298;
    var frac_2298487795 = HEX3EHEX3E_2298487064(HEX3EHEX3E_2298486981(HEX7C_2298487328(HEX7C_2298487328(HEX7C_2298487328(s_2348810351([92,102,114,97,99]), s_2348810351([92,116,102,114,97,99])), s_2348810351([92,100,102,114,97,99])), s_2348810351([92,99,102,114,97,99])), HEX21_2298484483(letter_2348811482)), map_2298483075(HEX26_2298487594(map_2298481831(atom_2298481569, HEX3Aanonymous_2298487474), map_2298481831(atom_2298481569, HEX3Aanonymous_2298487537)), HEX3Aanonymous_2298487689));
    var binom_2298488083 = HEX3EHEX3E_2298487064(HEX3EHEX3E_2298486981(HEX7C_2298487328(HEX7C_2298487328(HEX7C_2298487328(s_2348810351([92,98,105,110,111,109]), s_2348810351([92,116,98,105,110,111,109])), s_2348810351([92,100,98,105,110,111,109])), s_2348810351([92,99,98,105,110,111,109])), HEX21_2298484483(letter_2348811482)), map_2298483075(HEX26_2298487594(map_2298481831(atom_2298481569, HEX3Aanonymous_2298487880), map_2298481831(atom_2298481569, HEX3Aanonymous_2298487943)), HEX3Aanonymous_2298488021));
    var sqrt_2298488415 = HEX3EHEX3E_2298487064(HEX3EHEX3E_2298486981(s_2348810351([92,115,113,114,116]), HEX21_2298484483(letter_2348811482)), map_2298487186(atom_2298481569, HEX3Aanonymous_2298488116));
    var boxed_2298488556 = HEX3EHEX3E_2298487064(HEX3EHEX3E_2298486981(s_2348810351([92,98,111,120,101,100]), HEX21_2298484483(letter_2348811482)), map_2298487186(atom_2298481569, HEX3Aanonymous_2298488448));
    var sHEX60gensym184_2298488737 = map_2298488710(extensibleArrowParts_2315255956, HEX3Aanonymous_2298488573);
    var nHEX60gensym184_2298488741 = (sHEX60gensym184_2298488737).length;
    if (!((0 < nHEX60gensym184_2298488741))) {
    failedAssertImpl_268435541(makeNimstrLit("sequtils.nim(977, 3) `n`gensym184 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym184_2298488747 = sHEX60gensym184_2298488737[chckIndx(subInt(nHEX60gensym184_2298488741, 1), 0, (sHEX60gensym184_2298488737).length - 1)];
    Label13: {
      var iHEX60gensym184_2298488753 = 0;
      var colontmp__2281701455 = 0;
      colontmp__2281701455 = subInt(nHEX60gensym184_2298488741, 2);
      var res_2281701456 = colontmp__2281701455;
      Label14: {
          Label15: while (true) {
          if (!(0 <= res_2281701456)) break Label15;
            iHEX60gensym184_2298488753 = res_2281701456;
            var a_2298488754 = sHEX60gensym184_2298488737[chckIndx(iHEX60gensym184_2298488753, 0, (sHEX60gensym184_2298488737).length - 1)];
            var b_2298488755 = resultHEX60gensym184_2298488747;
            resultHEX60gensym184_2298488747 = HEX7C_2298484378(a_2298488754, b_2298488755);
            res_2281701456 = subInt(res_2281701456, 1);
          }
      };
    };
    var extensibleArrow_2298488768 = resultHEX60gensym184_2298488747;
    var leftright_2298489285 = map_2298483075(HEX3EHEX3E_2298489161(HEX3EHEX3E_2298483420(s_2348810351([92,108,101,102,116]), ws_2298481558), HEX26_2298487594(HEX26_2298487594(map_2298481831(delimiter_2298484829, HEX3Aanonymous_2298488889), map_2298481831(HEX3EHEX3E_2298488790(ws_2298481558, expr_2298483195), HEX3Aanonymous_2298488952)), map_2298481831(HEX3EHEX3E_2298488790(HEX3EHEX3E_2298483420(s_2348810351([92,114,105,103,104,116]), ws_2298481558), delimiter_2298484829), HEX3Aanonymous_2298489083))), HEX3Aanonymous_2298489244);
    var bracedExpr_2298489382 = HEX3CHEX3C_2298489307(HEX3EHEX3E_2298487064(c_2348810521(123), expr_2298483195), c_2348810521(125));
    var atom1_2298489598 = HEX3CHEX3C_2298489523(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(HEX7C_2298484378(bracedExpr_2298489382, leftright_2298489285), digit_2298483326), latinLetter_2298484456), command_2298486837), nonCommand_2298486935), simpleDiacritic_2298487319), frac_2298487795), binom_2298488083), sqrt_2298488415), boxed_2298488556), extensibleArrow_2298488768), ws_2298481558);
    var superscript_2298490430 = HEX7C_2298484378(map_2298487186(HEX3EHEX3E_2298487064(c_2348810521(94), atom1_2298489598), HEX3Aanonymous_2298489927), map_2298490369(map_2298486231(HEX26_2298485944(map_2298485693(HEX2A_2298484870(c_2348810521(39), HEX2EHEX2E_1056964656(1, 2147483647).a), HEX3Aanonymous_2298490155), HEX2A_2298485455(HEX7C_2298485353(map_2298485111(c_2348810521(39), HEX3Aanonymous_2298490036), nop_2298484878()), subInt(HEX2EHEX2E_1056964656(1, 2147483647).b, HEX2EHEX2E_1056964656(1, 2147483647).a))), HEX3Aanonymous_2298490253), HEX3Aanonymous_2298490334));
    var subscript_2298490487 = map_2298487186(HEX3EHEX3E_2298487064(c_2348810521(95), atom1_2298489598), HEX3Aanonymous_2298490452);
    atom_2298481569.body = HEX3EHEX3E_2298488790(ws_2298481558, map_2298483075(HEX26_2298487594(map_2298481831(atom1_2298489598, HEX3Aanonymous_2298490936), HEX7C_2298482109(HEX7C_2298482109(HEX26_2298487594(map_2298481831(superscript_2298490430, HEX3Aanonymous_2298490580), map_2298481831(HEX7C_2298484378(subscript_2298490487, nop_2298490497()), HEX3Aanonymous_2298490643)), HEX26_2298487594(map_2298481831(subscript_2298490487, HEX3Aanonymous_2298490760), map_2298481831(HEX7C_2298484378(superscript_2298490430, nop_2298490497()), HEX3Aanonymous_2298490823))), nop_2298481622())), HEX3Aanonymous_2298491022)).body;
    var completeExpr_2298491281 = HEX3CHEX3C_2298491206(expr_2298483195, eof_2348811387);
    var parsed_2298491294 = parse_2298481877(completeExpr_2298491281, latex_2298478604);
    if ((parsed_2298491294.kind == 0)) {
    var Temporary17 = parsed_2298491294;
    if (ConstSet143[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2348810258)); }
    Temporary16 = HEX24_2332033056(Temporary17.value);
    }
    else {
      var tmpTuple_2298491328 = lineInfo_2298491299(parsed_2298491294);
      var lnNum_2298491329 = tmpTuple_2298491328["Field0"];
      var colNum_2298491330 = tmpTuple_2298491328["Field1"];
      var showing_2298491331 = ([32,32,32,32] || []).concat((Temporary18 = nsuSplitLines(latex_2298478604, false), Temporary18)[chckIndx(subInt(lnNum_2298491329, 1), 0, (Temporary18).length - 1)] || [],[10] || [],nsuRepeatChar(32, chckRange(addInt(colNum_2298491330, 3), 0, 2147483647)) || [],[94] || []);
      Label19: {
        var fmtRes_2298491335 = [mnewString(0)];
        fmtRes_2298491335[0].push.apply(fmtRes_2298491335[0], [80,97,114,115,101,32,101,114,114,111,114,32,97,116,32,108,105,110,101,32]);;
        formatValue_1560281240(fmtRes_2298491335, 0, lnNum_2298491329, []);
        fmtRes_2298491335[0].push.apply(fmtRes_2298491335[0], [44,32,99,111,108,117,109,110,32]);;
        formatValue_1560281240(fmtRes_2298491335, 0, colNum_2298491330, []);
        fmtRes_2298491335[0].push.apply(fmtRes_2298491335[0], [10]);;
        formatValue_1442840747(fmtRes_2298491335, 0, showing_2298491331, []);
      };
      raiseException({message: nimCopy(null, fmtRes_2298491335[0], NTI33554449), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_2298478606 = nimCopy(null, Temporary16, NTI33554449);

  return result_2298478606;

}

function matext(latex_2281701385, opts_2281701386) {
  var result_2281701387 = null;

    var opts_2281701388 = opts_2281701386;
    if ((opts_2281701388 == undefined)) {
    opts_2281701388 = {};
    }
    
    result_2281701387 = toJSStr(render_2298478603(cstrToNimstr(latex_2281701385), (opts_2281701388.oneLine)));

  return result_2281701387;

}
export default matext;
if (globalThis.utcInstance_2667578996 === undefined) {
  globalThis.utcInstance_2667578996 = [null];
}
if (globalThis.localInstance_2667578997 === undefined) {
  globalThis.localInstance_2667578997 = [null];
}

function new_1476405395() {
  var result_1476405398 = null;
  var result_1476405398_Idx = 0;

  BeforeRet: {
    var r_1476405400 = null;
    var r_1476405400_Idx = 0;
    r_1476405400 = [[]]; r_1476405400_Idx = 0;
    result_1476405398 = r_1476405400; result_1476405398_Idx = r_1476405400_Idx;
    break BeforeRet;
  };

  return [result_1476405398, result_1476405398_Idx];

}

function toStringView_1560281142(body_1560281143) {
  var result_1560281144 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    result_1560281144.body[0] = [[]]; result_1560281144.body[1] = 0;
    result_1560281144.body[0][result_1560281144.body[1]] = nimCopy(null, body_1560281143, NTI33554449);
    result_1560281144.slice = nimCopy(result_1560281144.slice, HEX2EHEX2E_1056964656(0, (body_1560281143).length - 1), NTI822083653);

  return result_1560281144;

}

function nextPowerOfTwo_805306615(x_805306616) {
  var result_805306617 = 0;

    result_805306617 = (x_805306616 - 1);
    result_805306617 = (result_805306617 | (result_805306617 >> 16));
    result_805306617 = (result_805306617 | (result_805306617 >> 8));
    result_805306617 = (result_805306617 | (result_805306617 >> 4));
    result_805306617 = (result_805306617 | (result_805306617 >> 2));
    result_805306617 = (result_805306617 | (result_805306617 >> 1));
    result_805306617 += (1 + ((x_805306616 <= 0) ? 1 : 0));

  return result_805306617;

}

function slotsNeeded_1627389994(count_1627389995) {
  var result_1627389996 = 0;

    result_1627389996 = nextPowerOfTwo_805306615(addInt(divInt(mulInt(count_1627389995, 3), 2), 4));

  return result_1627389996;

}

function rawGet_1660944590(t_1660944593, key_1660944594, hc_1660944595, hc_1660944595_Idx) {
  var result_1660944596 = 0;

  BeforeRet: {
    hc_1660944595[hc_1660944595_Idx] = hash_1275068863(key_1660944594);
    if ((hc_1660944595[hc_1660944595_Idx] == 0)) {
    hc_1660944595[hc_1660944595_Idx] = 314159265;
    }
    
    if (((t_1660944593.data).length == 0)) {
    result_1660944596 = (-1);
    break BeforeRet;
    }
    
    var h_1660944608 = (hc_1660944595[hc_1660944595_Idx] & (t_1660944593.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_1660944593.data[chckIndx(h_1660944608, 0, (t_1660944593.data).length - 1)].Field0)) break Label2;
          if (((t_1660944593.data[chckIndx(h_1660944608, 0, (t_1660944593.data).length - 1)].Field0 == hc_1660944595[hc_1660944595_Idx]) && eqStrings(t_1660944593.data[chckIndx(h_1660944608, 0, (t_1660944593.data).length - 1)].Field1, key_1660944594))) {
          result_1660944596 = h_1660944608;
          break BeforeRet;
          }
          
          h_1660944608 = nextTry_1627389986(h_1660944608, (t_1660944593.data).length - 1);
        }
    };
    result_1660944596 = subInt((-1), h_1660944608);
  };

  return result_1660944596;

}

function mustRehash_2181038422(t_2181038424) {
  var result_2181038425 = false;

    if (!((t_2181038424.counter < (t_2181038424.data).length))) {
    failedAssertImpl_268435541([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2181038425 = ((mulInt((t_2181038424.data).length, 2) < mulInt(t_2181038424.counter, 3)) || (subInt((t_2181038424.data).length, t_2181038424.counter) < 4));

  return result_2181038425;

}

function rawInsert_2181038871(t_2181038875, data_2181038876, data_2181038876_Idx, key_2181038877, val_2181038878, hc_2181038879, h_2181038880) {
    data_2181038876[data_2181038876_Idx][chckIndx(h_2181038880, 0, (data_2181038876[data_2181038876_Idx]).length - 1)].Field1 = nimCopy(null, key_2181038877, NTI33554449);
    data_2181038876[data_2181038876_Idx][chckIndx(h_2181038880, 0, (data_2181038876[data_2181038876_Idx]).length - 1)].Field2 = val_2181038878;
    data_2181038876[data_2181038876_Idx][chckIndx(h_2181038880, 0, (data_2181038876[data_2181038876_Idx]).length - 1)].Field0 = hc_2181038879;

  
}

function enlarge_2181038577(t_2181038580) {
    var n_2181038583 = [];
    n_2181038583 = new Array(chckRange(mulInt((t_2181038580.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2181038580.data).length, 2), 0, 2147483647) ; ++i) { n_2181038583[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_2181038580.data; t_2181038580.data = n_2181038583; n_2181038583 = Temporary1;    Label2: {
      var i_2181038647 = 0;
      var colontmp__587203471 = 0;
      colontmp__587203471 = (n_2181038583).length - 1;
      var res_587203472 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_587203472 <= colontmp__587203471)) break Label4;
            i_2181038647 = res_587203472;
            var eh_2181038701 = n_2181038583[chckIndx(i_2181038647, 0, (n_2181038583).length - 1)].Field0;
            if (isFilled_1627389983(eh_2181038701)) {
            var j_2181038705 = (eh_2181038701 & (t_2181038580.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1627389983(t_2181038580.data[chckIndx(j_2181038705, 0, (t_2181038580.data).length - 1)].Field0)) break Label6;
                  j_2181038705 = nextTry_1627389986(j_2181038705, (t_2181038580.data).length - 1);
                }
            };
            rawInsert_2181038871(t_2181038580, t_2181038580, "data", n_2181038583[chckIndx(i_2181038647, 0, (n_2181038583).length - 1)].Field1, n_2181038583[chckIndx(i_2181038647, 0, (n_2181038583).length - 1)].Field2, eh_2181038701, j_2181038705);
            }
            
            res_587203472 = addInt(res_587203472, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2181039040(t_2181039043, key_2181039044, hc_2181039045) {
  var result_2181039046 = 0;

  BeforeRet: {
    if (((t_2181039043.data).length == 0)) {
    result_2181039046 = (-1);
    break BeforeRet;
    }
    
    var h_2181039097 = (hc_2181039045 & (t_2181039043.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2181039043.data[chckIndx(h_2181039097, 0, (t_2181039043.data).length - 1)].Field0)) break Label2;
          if (((t_2181039043.data[chckIndx(h_2181039097, 0, (t_2181039043.data).length - 1)].Field0 == hc_2181039045) && eqStrings(t_2181039043.data[chckIndx(h_2181039097, 0, (t_2181039043.data).length - 1)].Field1, key_2181039044))) {
          result_2181039046 = h_2181039097;
          break BeforeRet;
          }
          
          h_2181039097 = nextTry_1627389986(h_2181039097, (t_2181039043.data).length - 1);
        }
    };
    result_2181039046 = subInt((-1), h_2181039097);
  };

  return result_2181039046;

}

function HEX5BHEX5DHEX3D_2181038249(t_2181038252, key_2181038253, val_2181038254) {
    if (((t_2181038252.data).length == 0)) {
    var correctSizeHEX60gensym8_2181038303 = slotsNeeded_1627389994(32);
    t_2181038252.counter = 0;
    t_2181038252.data = new Array(chckRange(correctSizeHEX60gensym8_2181038303, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_2181038303, 0, 2147483647) ; ++i) { t_2181038252.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_2181038308 = [0];
    var index_2181038315 = rawGet_1660944590(t_2181038252, key_2181038253, hc_2181038308, 0);
    if ((0 <= index_2181038315)) {
    t_2181038252.data[chckIndx(index_2181038315, 0, (t_2181038252.data).length - 1)].Field2 = val_2181038254;
    }
    else {
      if (((t_2181038252.data).length == 0)) {
      var correctSizeHEX60gensym11_2181038417 = slotsNeeded_1627389994(32);
      t_2181038252.counter = 0;
      t_2181038252.data = new Array(chckRange(correctSizeHEX60gensym11_2181038417, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_2181038417, 0, 2147483647) ; ++i) { t_2181038252.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_2181038422(t_2181038252)) {
      enlarge_2181038577(t_2181038252);
      index_2181038315 = rawGetKnownHC_2181039040(t_2181038252, key_2181038253, hc_2181038308[0]);
      }
      
      index_2181038315 = subInt((-1), index_2181038315);
      rawInsert_2181038871(t_2181038252, t_2181038252, "data", key_2181038253, val_2181038254, hc_2181038308[0], index_2181038315);
      t_2181038252.counter = addInt(t_2181038252.counter, 1);
    }
    

  
}

function HEX3DHEX3D_2197815324(x_2197815326, y_2197815327) {
  var result_2197815328 = false;

  BeforeRet: {
    if (!((x_2197815326.kind == y_2197815327.kind))) {
    result_2197815328 = false;
    break BeforeRet;
    }
    
    if (!((x_2197815326.base == y_2197815327.base))) {
    result_2197815328 = false;
    break BeforeRet;
    }
    
    result_2197815328 = true;
    break BeforeRet;
  };

  return result_2197815328;

}

function HEX24_1560281153(view_1560281154) {
  var result_1560281155 = [];

    result_1560281155 = nimCopy(null, HEX5BHEX5D_754975999(view_1560281154.body[0][view_1560281154.body[1]], view_1560281154.slice), NTI33554449);

  return result_1560281155;

}

function strip_1560281282(view_1560281283) {
  var result_1560281284 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    result_1560281284 = nimCopy(result_1560281284, view_1560281283, NTI1560281091);
    Label1: {
        Label2: while (true) {
        if (!((result_1560281284.slice.a <= result_1560281284.slice.b) && (ConstSet145[result_1560281284.body[0][result_1560281284.body[1]][chckIndx(result_1560281284.slice.a, 0, (result_1560281284.body[0][result_1560281284.body[1]]).length - 1)]] != undefined))) break Label2;
          result_1560281284.slice.a = addInt(result_1560281284.slice.a, 1);
        }
    };
    Label3: {
        Label4: while (true) {
        if (!((result_1560281284.slice.a <= result_1560281284.slice.b) && (ConstSet146[result_1560281284.body[0][result_1560281284.body[1]][chckIndx(result_1560281284.slice.b, 0, (result_1560281284.body[0][result_1560281284.body[1]]).length - 1)]] != undefined))) break Label4;
          result_1560281284.slice.b = subInt(result_1560281284.slice.b, 1);
        }
    };

  return result_1560281284;

}

function skipBalancedText_1677721625(body_1677721626, body_1677721626_Idx, i_1677721627, i_1677721627_Idx, stop_1677721628) {
    var brackets_1677721629 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1677721627[i_1677721627_Idx] <= stop_1677721628)) break Label2;
          switch (body_1677721626[body_1677721626_Idx][chckIndx(i_1677721627[i_1677721627_Idx], 0, (body_1677721626[body_1677721626_Idx]).length - 1)]) {
          case 91:
            brackets_1677721629 = addInt(brackets_1677721629, 1);
            break;
          case 93:
            if ((brackets_1677721629 == 0)) {
            break Label1;
            }
            
            brackets_1677721629 = subInt(brackets_1677721629, 1);
            break;
          default: 
            break;
          }
          i_1677721627[i_1677721627_Idx] = addInt(i_1677721627[i_1677721627_Idx], 1);
        }
    };

  
}

function view_1560281095(body_1560281096, body_1560281096_Idx, slice_1560281098) {
  var result_1560281099 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    result_1560281099 = nimCopy(result_1560281099, {body: [body_1560281096, body_1560281096_Idx], slice: nimCopy(null, slice_1560281098, NTI822083653)}, NTI1560281091);

  return result_1560281099;

}

function parseXidocArgument_1677721913(body_1677721914, body_1677721914_Idx, i_1677721915, i_1677721915_Idx, stop_1677721916) {
  var result_1677721917 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    var start_1677721918 = i_1677721915[i_1677721915_Idx];
    Label1: {
        Label2: while (true) {
        if (!(i_1677721915[i_1677721915_Idx] <= stop_1677721916)) break Label2;
          switch (body_1677721914[body_1677721914_Idx][chckIndx(i_1677721915[i_1677721915_Idx], 0, (body_1677721914[body_1677721914_Idx]).length - 1)]) {
          case 59:
            break Label1;
            break;
          case 91:
            i_1677721915[i_1677721915_Idx] = addInt(i_1677721915[i_1677721915_Idx], 1);
            skipBalancedText_1677721625(body_1677721914, body_1677721914_Idx, i_1677721915, i_1677721915_Idx, stop_1677721916);
            if (!((body_1677721914[body_1677721914_Idx][chckIndx(i_1677721915[i_1677721915_Idx], 0, (body_1677721914[body_1677721914_Idx]).length - 1)] == 93))) {
            failedAssertImpl_268435541([112,97,114,115,101,114,46,110,105,109,40,49,49,51,44,32,55,41,32,96,98,111,100,121,91,93,91,105,93,32,61,61,32,39,93,39,96,32]);
            }
            
            break;
          default: 
            break;
          }
          i_1677721915[i_1677721915_Idx] = addInt(i_1677721915[i_1677721915_Idx], 1);
        }
    };
    result_1677721917 = nimCopy(result_1677721917, strip_1560281282(view_1560281095(body_1677721914, body_1677721914_Idx, HEX2EHEX2E_1056964656(start_1677721918, subInt(i_1677721915[i_1677721915_Idx], 1)))), NTI1560281091);

  return result_1677721917;

}

function nsuEndsWith(s_754976194, suffix_754976195) {
  var result_754976196 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_754976202 = (suffix_754976195).length;
    var sLenHEX60gensym153_754976203 = (s_754976194).length;
    var iHEX60gensym153_754976204 = 0;
    var jHEX60gensym153_754976205 = subInt(sLenHEX60gensym153_754976203, suffixLenHEX60gensym153_754976202);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205)) && (addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205) < sLenHEX60gensym153_754976203))) break Label2;
          if (!((s_754976194[chckIndx(addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205), 0, (s_754976194).length - 1)] == suffix_754976195[chckIndx(iHEX60gensym153_754976204, 0, (suffix_754976195).length - 1)]))) {
          result_754976196 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_754976204 = addInt(iHEX60gensym153_754976204, 1);
        }
    };
    if ((suffixLenHEX60gensym153_754976202 <= iHEX60gensym153_754976204)) {
    result_754976196 = true;
    break BeforeRet;
    }
    
  };

  return result_754976196;

}

function parseXidocArguments_1677721945(view_1677721946) {
  var result_1677721947 = [];

    var body_1677721948 = view_1677721946.body[0], body_1677721948_Idx = view_1677721946.body[1];
    var i_1677721949 = [view_1677721946.slice.a];
    var stop_1677721950 = view_1677721946.slice.b;
    Label1: {
        Label2: while (true) {
        if (!(i_1677721949[0] <= stop_1677721950)) break Label2;
          result_1677721947.push(parseXidocArgument_1677721913(body_1677721948, body_1677721948_Idx, i_1677721949, 0, stop_1677721950));;
          i_1677721949[0] = addInt(i_1677721949[0], 1);
        }
    };
    if (nsuEndsWith(HEX24_1560281153(view_1677721946), [59])) {
    result_1677721947.push(view_1560281095(body_1677721948, body_1677721948_Idx, HEX2EHEX2E_1056964656(0, (-1))));;
    }
    

  return result_1677721947;

}

function none_2197815360() {
  var result_2197815367 = ({val: 0, has: false});

  return result_2197815367;

}

function isNone_2197815419(self_2197815421) {
  var result_2197815422 = false;

    result_2197815422 = !(self_2197815421.has);

  return result_2197815422;

}

function some_2197815424(val_2197815426) {
  var result_2197815427 = ({val: 0, has: false});

    result_2197815427.has = true;
    result_2197815427.val = val_2197815426;

  return result_2197815427;

}

function HEX3DHEX3D_2197815495(x_2197815497, y_2197815498) {
  var result_2197815499 = false;

  BeforeRet: {
    if (!((x_2197815497.a == y_2197815498.a))) {
    result_2197815499 = false;
    break BeforeRet;
    }
    
    if (!((x_2197815497.b == y_2197815498.b))) {
    result_2197815499 = false;
    break BeforeRet;
    }
    
    result_2197815499 = true;
    break BeforeRet;
  };

  return result_2197815499;

}

function isSome_2197815514(self_2197815516) {
  var result_2197815517 = false;

    result_2197815517 = self_2197815516.has;

  return result_2197815517;

}

function len_2197815588(x_2197815591) {
  var result_2197815592 = 0;

    result_2197815592 = nimMax(0, addInt(subInt(x_2197815591.b, x_2197815591.a), 1));

  return result_2197815592;

}

function unsafeGet_2197815633(self_2197815635) {
  var result_2197815636 = 0;

    if (!(isSome_2197815514(self_2197815635))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,51,55,57,44,32,51,41,32,96,115,101,108,102,46,105,115,83,111,109,101,96,32]);
    }
    
    result_2197815636 = self_2197815635["val"];

  return result_2197815636;

}

function HEX5BHEX5D_2197815682(s_2197815686, x_2197815687) {
  var result_2197815688 = [];

    var a_2197815690 = x_2197815687.a;
    var L_2197815692 = addInt(subInt(x_2197815687.b, a_2197815690), 1);
    result_2197815688 = new Array(chckRange(L_2197815692, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2197815692, 0, 2147483647) ; ++i) { result_2197815688[i] = ({kind: 0, base: 0}); }    Label1: {
      var i_2197815701 = 0;
      var i_587203511 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203511 < L_2197815692)) break Label3;
            i_2197815701 = i_587203511;
            result_2197815688[chckIndx(i_2197815701, 0, (result_2197815688).length - 1)] = nimCopy(result_2197815688[chckIndx(i_2197815701, 0, (result_2197815688).length - 1)], s_2197815686[chckIndx(addInt(i_2197815701, a_2197815690), 0, (s_2197815686).length - 1)], NTI1593835527);
            i_587203511 = addInt(i_587203511, 1);
          }
      };
    };

  return result_2197815688;

}

function parseXidocWhitespace_1677721738(body_1677721739, body_1677721739_Idx, i_1677721740, i_1677721740_Idx, stop_1677721741) {
  var result_1677721742 = ({kind: 0, str: ({body: [null, 0], slice: ({a: 0, b: 0})}), newline: false, whole: ({body: [null, 0], slice: ({a: 0, b: 0})}), name: ({body: [null, 0], slice: ({a: 0, b: 0})}), arg: ({body: [null, 0], slice: ({a: 0, b: 0})})});

    var newline_1677721743 = false;
    Label1: {
        Label2: while (true) {
        if (!((i_1677721740[i_1677721740_Idx] <= stop_1677721741) && (ConstSet147[body_1677721739[body_1677721739_Idx][chckIndx(i_1677721740[i_1677721740_Idx], 0, (body_1677721739[body_1677721739_Idx]).length - 1)]] != undefined))) break Label2;
          newline_1677721743 = (newline_1677721743 || (body_1677721739[body_1677721739_Idx][chckIndx(i_1677721740[i_1677721740_Idx], 0, (body_1677721739[body_1677721739_Idx]).length - 1)] == 10));
          i_1677721740[i_1677721740_Idx] = addInt(i_1677721740[i_1677721740_Idx], 1);
        }
    };
    result_1677721742 = nimCopy(result_1677721742, {kind: 1, newline: newline_1677721743, str: ({body: [null, 0], slice: ({a: 0, b: 0})}), whole: ({body: [null, 0], slice: ({a: 0, b: 0})}), name: ({body: [null, 0], slice: ({a: 0, b: 0})}), arg: ({body: [null, 0], slice: ({a: 0, b: 0})})}, NTI1677721604);

  return result_1677721742;

}

function parseXidocStringHelper_1677721645(body_1677721646, body_1677721646_Idx, i_1677721647, i_1677721647_Idx, stop_1677721648) {
          var Temporary3;

  var result_1677721649 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    var start_1677721650 = i_1677721647[i_1677721647_Idx];
    Label1: {
        Label2: while (true) {
          if (!(i_1677721647[i_1677721647_Idx] <= stop_1677721648)) Temporary3 = false; else {            Temporary3 = !((ConstSet148[body_1677721646[body_1677721646_Idx][chckIndx(i_1677721647[i_1677721647_Idx], 0, (body_1677721646[body_1677721646_Idx]).length - 1)]] != undefined));          }        if (!Temporary3) break Label2;
          i_1677721647[i_1677721647_Idx] = addInt(i_1677721647[i_1677721647_Idx], 1);
        }
    };
    result_1677721649 = nimCopy(result_1677721649, view_1560281095(body_1677721646, body_1677721646_Idx, HEX2EHEX2E_1056964656(start_1677721650, subInt(i_1677721647[i_1677721647_Idx], 1))), NTI1560281091);

  return result_1677721649;

}

function lineContext_1560281202(body_1560281203, body_1560281203_Idx, i_1560281204) {
  var result_1560281208 = {Field0: 0, Field1: 0, Field2: []};

    var lns_1560281209 = nsuSplitLines(body_1560281203[body_1560281203_Idx], false);
    var lnIndex_1560281210 = 0;
    var lenSum_1560281211 = 0;
    Label1: {
        Label2: while (true) {
        if (!(addInt(lenSum_1560281211, (lns_1560281209[chckIndx(lnIndex_1560281210, 0, (lns_1560281209).length - 1)]).length) <= i_1560281204)) break Label2;
          lenSum_1560281211 = addInt(lenSum_1560281211, addInt((lns_1560281209[chckIndx(lnIndex_1560281210, 0, (lns_1560281209).length - 1)]).length, 1));
          lnIndex_1560281210 = addInt(lnIndex_1560281210, 1);
        }
    };
    var colIndex_1560281221 = subInt(i_1560281204, lenSum_1560281211);
    result_1560281208.Field0 = addInt(lnIndex_1560281210, 1);
    result_1560281208.Field1 = addInt(colIndex_1560281221, 1);
    Label3: {
      var fmtRes_1560281229 = [mnewString(0)];
      formatValue_1442840747(fmtRes_1560281229, 0, nsuRepeatChar(32, chckRange((HEX24_385875976(result_1560281208.Field0)).length, 0, 2147483647)), []);
      fmtRes_1560281229[0].push.apply(fmtRes_1560281229[0], [32,226,148,130,32]);;
      formatValue_1442840747(fmtRes_1560281229, 0, nsuRepeatChar(32, chckRange(colIndex_1560281221, 0, 2147483647)), []);
      fmtRes_1560281229[0].push.apply(fmtRes_1560281229[0], [94]);;
    };
    var caret_1560281235 = nimCopy(null, fmtRes_1560281229[0], NTI33554449);
    Label4: {
      var fmtRes_1560281239 = [mnewString(0)];
      formatValue_1560281240(fmtRes_1560281239, 0, result_1560281208.Field0, []);
      fmtRes_1560281239[0].push.apply(fmtRes_1560281239[0], [32,226,148,130,32]);;
      formatValue_1442840747(fmtRes_1560281239, 0, lns_1560281209[chckIndx(lnIndex_1560281210, 0, (lns_1560281209).length - 1)], []);
      fmtRes_1560281239[0].push.apply(fmtRes_1560281239[0], [10]);;
      formatValue_1442840747(fmtRes_1560281239, 0, caret_1560281235, []);
    };
    result_1560281208.Field2 = nimCopy(null, fmtRes_1560281239[0], NTI33554449);

  return result_1560281208;

}

function parseXidocCommand_1677721753(body_1677721754, body_1677721754_Idx, i_1677721755, i_1677721755_Idx, stop_1677721756) {
  var result_1677721757 = ({kind: 0, str: ({body: [null, 0], slice: ({a: 0, b: 0})}), newline: false, whole: ({body: [null, 0], slice: ({a: 0, b: 0})}), name: ({body: [null, 0], slice: ({a: 0, b: 0})}), arg: ({body: [null, 0], slice: ({a: 0, b: 0})})});

    if (!((body_1677721754[body_1677721754_Idx][chckIndx(i_1677721755[i_1677721755_Idx], 0, (body_1677721754[body_1677721754_Idx]).length - 1)] == 91))) {
    failedAssertImpl_268435541([112,97,114,115,101,114,46,110,105,109,40,55,49,44,32,51,41,32,96,98,111,100,121,91,105,93,32,61,61,32,39,91,39,96,32]);
    }
    
    var start_1677721763 = i_1677721755[i_1677721755_Idx];
    i_1677721755[i_1677721755_Idx] = addInt(i_1677721755[i_1677721755_Idx], 1);
    var name_1677721769 = parseXidocStringHelper_1677721645(body_1677721754, body_1677721754_Idx, i_1677721755, i_1677721755_Idx, stop_1677721756);
    if ((stop_1677721756 < i_1677721755[i_1677721755_Idx])) {
    raiseException({message: makeNimstrLit("Parse error: Unexpected end of file (did you forget to close a bracket?)"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if ((body_1677721754[body_1677721754_Idx][chckIndx(i_1677721755[i_1677721755_Idx], 0, (body_1677721754[body_1677721754_Idx]).length - 1)] == 91)) {
    var tmpTuple_1677721770 = lineContext_1560281202(body_1677721754, body_1677721754_Idx, i_1677721755[i_1677721755_Idx]);
    var lnNum_1677721771 = tmpTuple_1677721770["Field0"];
    var colNum_1677721772 = tmpTuple_1677721770["Field1"];
    var msg_1677721773 = nimCopy(null, tmpTuple_1677721770["Field2"], NTI33554449);
    Label1: {
      var fmtRes_1677721777 = [mnewString(0)];
      fmtRes_1677721777[0].push.apply(fmtRes_1677721777[0], [97,116,32]);;
      formatValue_1560281240(fmtRes_1677721777, 0, lnNum_1677721771, []);
      fmtRes_1677721777[0].push.apply(fmtRes_1677721777[0], [58]);;
      formatValue_1560281240(fmtRes_1677721777, 0, colNum_1677721772, []);
      fmtRes_1677721777[0].push.apply(fmtRes_1677721777[0], [45]);;
      formatValue_1560281240(fmtRes_1677721777, 0, lnNum_1677721771, []);
      fmtRes_1677721777[0].push.apply(fmtRes_1677721777[0], [58]);;
      formatValue_1560281240(fmtRes_1677721777, 0, colNum_1677721772, []);
      fmtRes_1677721777[0].push.apply(fmtRes_1677721777[0], [10,80,97,114,115,101,32,101,114,114,111,114,58,32,85,110,101,120,112,101,99,116,101,100,32,39,91,39,32,105,110,32,99,111,109,109,97,110,100,32,110,97,109,101,10]);;
      formatValue_1442840747(fmtRes_1677721777, 0, msg_1677721773, []);
    };
    raiseException({message: nimCopy(null, fmtRes_1677721777[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var argStart_1677721798 = i_1677721755[i_1677721755_Idx];
    skipBalancedText_1677721625(body_1677721754, body_1677721754_Idx, i_1677721755, i_1677721755_Idx, stop_1677721756);
    if ((stop_1677721756 < i_1677721755[i_1677721755_Idx])) {
    raiseException({message: makeNimstrLit("Parse error: Unexpected end of file (did you forget to close a bracket?)"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1677721757 = nimCopy(result_1677721757, {kind: 2, whole: view_1560281095(body_1677721754, body_1677721754_Idx, HEX2EHEX2E_1056964656(start_1677721763, i_1677721755[i_1677721755_Idx])), name: nimCopy(null, name_1677721769, NTI1560281091), arg: view_1560281095(body_1677721754, body_1677721754_Idx, HEX2EHEX2E_1056964656(argStart_1677721798, subInt(i_1677721755[i_1677721755_Idx], 1))), str: ({body: [null, 0], slice: ({a: 0, b: 0})}), newline: false}, NTI1677721604);
    i_1677721755[i_1677721755_Idx] = addInt(i_1677721755[i_1677721755_Idx], 1);

  return result_1677721757;

}

function parseXidocString_1677721671(body_1677721672, body_1677721672_Idx, i_1677721673, i_1677721673_Idx, stop_1677721674) {
  var result_1677721675 = ({kind: 0, str: ({body: [null, 0], slice: ({a: 0, b: 0})}), newline: false, whole: ({body: [null, 0], slice: ({a: 0, b: 0})}), name: ({body: [null, 0], slice: ({a: 0, b: 0})}), arg: ({body: [null, 0], slice: ({a: 0, b: 0})})});

    result_1677721675 = nimCopy(result_1677721675, {kind: 0, str: parseXidocStringHelper_1677721645(body_1677721672, body_1677721672_Idx, i_1677721673, i_1677721673_Idx, stop_1677721674), newline: false, whole: ({body: [null, 0], slice: ({a: 0, b: 0})}), name: ({body: [null, 0], slice: ({a: 0, b: 0})}), arg: ({body: [null, 0], slice: ({a: 0, b: 0})})}, NTI1677721604);

  return result_1677721675;

}

function parseXidoc_1677721874(view_1677721875, verbose_1677721876) {
          var Temporary3;

  var result_1677721877 = [];

    var body_1677721878 = view_1677721875.body[0], body_1677721878_Idx = view_1677721875.body[1];
    var i_1677721879 = [view_1677721875.slice.a];
    var stop_1677721880 = view_1677721875.slice.b;
    Label1: {
        Label2: while (true) {
        if (!(i_1677721879[0] <= stop_1677721880)) break Label2;
          switch (body_1677721878[body_1677721878_Idx][chckIndx(i_1677721879[0], 0, (body_1677721878[body_1677721878_Idx]).length - 1)]) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
            Temporary3 = parseXidocWhitespace_1677721738(body_1677721878, body_1677721878_Idx, i_1677721879, 0, stop_1677721880);
            break;
          case 91:
            Temporary3 = parseXidocCommand_1677721753(body_1677721878, body_1677721878_Idx, i_1677721879, 0, stop_1677721880);
            break;
          case 93:
            var tmpTuple_1677721881 = lineContext_1560281202(body_1677721878, body_1677721878_Idx, i_1677721879[0]);
            var lnNum_1677721882 = tmpTuple_1677721881["Field0"];
            var colNum_1677721883 = tmpTuple_1677721881["Field1"];
            var msg_1677721884 = nimCopy(null, tmpTuple_1677721881["Field2"], NTI33554449);
            Label4: {
              var fmtRes_1677721888 = [mnewString(0)];
              fmtRes_1677721888[0].push.apply(fmtRes_1677721888[0], [97,116,32]);;
              formatValue_1560281240(fmtRes_1677721888, 0, lnNum_1677721882, []);
              fmtRes_1677721888[0].push.apply(fmtRes_1677721888[0], [58]);;
              formatValue_1560281240(fmtRes_1677721888, 0, colNum_1677721883, []);
              fmtRes_1677721888[0].push.apply(fmtRes_1677721888[0], [45]);;
              formatValue_1560281240(fmtRes_1677721888, 0, lnNum_1677721882, []);
              fmtRes_1677721888[0].push.apply(fmtRes_1677721888[0], [58]);;
              formatValue_1560281240(fmtRes_1677721888, 0, colNum_1677721883, []);
              fmtRes_1677721888[0].push.apply(fmtRes_1677721888[0], [10,80,97,114,115,101,32,101,114,114,111,114,58,32,85,110,101,120,112,101,99,116,101,100,32,39,93,39,10]);;
              formatValue_1442840747(fmtRes_1677721888, 0, msg_1677721884, []);
            };
            raiseException({message: nimCopy(null, fmtRes_1677721888[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
            break;
          default: 
            Temporary3 = parseXidocString_1677721671(body_1677721878, body_1677721878_Idx, i_1677721879, 0, stop_1677721880);
            break;
          }
          var Temporary5 = nimCopy(null, Temporary3, NTI1677721604);
          result_1677721877.push(Temporary5);;
        }
    };

  return result_1677721877;

}

function HEX5BHEX5D_33557853(s_33557854, s_33557854_Idx, i_33557855) {
  var result_33557856 = null;
  var result_33557856_Idx = 0;

    result_33557856 = s_33557854[s_33557854_Idx]; result_33557856_Idx = chckIndx(subInt((s_33557854[s_33557854_Idx]).length, i_33557855), 0, (s_33557854[s_33557854_Idx]).length - 1);

  return [result_33557856, result_33557856_Idx];

}

function find_973078582(a_973078585, item_973078586) {
  var result_973078587 = 0;

  BeforeRet: {
    result_973078587 = 0;
    Label1: {
      var i_973078591 = [];
      var i_587203530 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203530 < (a_973078585).length)) break Label3;
            i_973078591 = a_973078585[chckIndx(i_587203530, 0, (a_973078585).length - 1)];
            if (eqStrings(i_973078591, item_973078586)) {
            break BeforeRet;
            }
            
            result_973078587 = addInt(result_973078587, 1);
            i_587203530 = addInt(i_587203530, 1);
          }
      };
    };
    result_973078587 = (-1);
  };

  return result_973078587;

}

function contains_973078577(a_973078579, item_973078580) {
  var result_973078581 = false;

  BeforeRet: {
    result_973078581 = (0 <= find_973078582(a_973078579, item_973078580));
    break BeforeRet;
  };

  return result_973078581;

}

function find_1660944448(a_1660944451, item_1660944452) {
  var result_1660944453 = 0;

  BeforeRet: {
    result_1660944453 = 0;
    Label1: {
      var i_1660944457 = 0;
      var i_587203534 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203534 < (a_1660944451).length)) break Label3;
            i_1660944457 = a_1660944451[chckIndx(i_587203534, 0, (a_1660944451).length - 1)];
            if ((i_1660944457 == item_1660944452)) {
            break BeforeRet;
            }
            
            result_1660944453 = addInt(result_1660944453, 1);
            i_587203534 = addInt(i_587203534, 1);
          }
      };
    };
    result_1660944453 = (-1);
  };

  return result_1660944453;

}

function contains_1660944443(a_1660944445, item_1660944446) {
  var result_1660944447 = false;

  BeforeRet: {
    result_1660944447 = (0 <= find_1660944448(a_1660944445, item_1660944446));
    break BeforeRet;
  };

  return result_1660944447;

}

function HEX5BHEX5DHEX3D_33557868(s_33557869, s_33557869_Idx, i_33557870, x_33557871) {
    s_33557869[s_33557869_Idx][chckIndx(subInt((s_33557869[s_33557869_Idx]).length, i_33557870), 0, (s_33557869[s_33557869_Idx]).length - 1)] = x_33557871;

  
}

function addIfNeeded_1660944431(s1_1660944432, s1_1660944432_Idx, s2_1660944433) {
    var Temporary1;
      var Temporary2;

  BeforeRet: {
    if (eqStrings(s1_1660944432[s1_1660944432_Idx], [])) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = (Temporary2 = HEX5BHEX5D_33557853(s1_1660944432, s1_1660944432_Idx, 1), Temporary2)[0][Temporary2[1]];
    }
    
    var s1Last_1660944434 = Temporary1;
    if ((contains_973078577([[32], [10]], s2_1660944433) && contains_1660944443(new Uint8Array([32, 10]), s1Last_1660944434))) {
    if ((eqStrings(s2_1660944433, [10]) && (s1Last_1660944434 == 32))) {
    HEX5BHEX5DHEX3D_33557868(s1_1660944432, s1_1660944432_Idx, 1, 10);
    }
    
    break BeforeRet;
    }
    
    s1_1660944432[s1_1660944432_Idx].push.apply(s1_1660944432[s1_1660944432_Idx], s2_1660944433);;
  };

  
}

function nsuContinuesWith(s_754976212, substr_754976213, start_754976214) {
  var result_754976215 = false;

  BeforeRet: {
    var i_754976216 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_754976213).length <= i_754976216)) {
          result_754976215 = true;
          break BeforeRet;
          }
          
          if ((((s_754976212).length <= addInt(i_754976216, start_754976214)) || !((s_754976212[chckIndx(addInt(i_754976216, start_754976214), 0, (s_754976212).length - 1)] == substr_754976213[chckIndx(i_754976216, 0, (substr_754976213).length - 1)])))) {
          result_754976215 = false;
          break BeforeRet;
          }
          
          i_754976216 = addInt(i_754976216, 1);
        }
    };
  };

  return result_754976215;

}

function multiReplace_754976635(s_754976636, replacements_754976637) {
                      var Temporary10;

  var result_754976638 = [];

    result_754976638 = nimCopy(null, mnewString(0), NTI33554449);
    var i_754976639 = 0;
    var fastChk_754976640 = nimCopy(null, ConstSet152, NTI754976073);
    Label1: {
      var sub_754976654 = [];
      var by_754976655 = [];
      var i_587203537 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203537 < (replacements_754976637).length)) break Label3;
            sub_754976654 = replacements_754976637[chckIndx(i_587203537, 0, (replacements_754976637).length - 1)]["Field0"];
            by_754976655 = replacements_754976637[chckIndx(i_587203537, 0, (replacements_754976637).length - 1)]["Field1"];
            if ((0 < (sub_754976654).length)) {
            fastChk_754976640[sub_754976654[chckIndx(0, 0, (sub_754976654).length - 1)]] = true;
            }
            
            i_587203537 = addInt(i_587203537, 1);
          }
      };
    };
    Label4: {
        Label5: while (true) {
        if (!(i_754976639 < (s_754976636).length)) break Label5;
          Label6: {
            if ((fastChk_754976640[s_754976636[chckIndx(i_754976639, 0, (s_754976636).length - 1)]] != undefined)) {
            Label7: {
              var sub_754976668 = [];
              var by_754976669 = [];
              var i_587203541 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_587203541 < (replacements_754976637).length)) break Label9;
                    sub_754976668 = replacements_754976637[chckIndx(i_587203541, 0, (replacements_754976637).length - 1)]["Field0"];
                    by_754976669 = replacements_754976637[chckIndx(i_587203541, 0, (replacements_754976637).length - 1)]["Field1"];
                      if (!(0 < (sub_754976668).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_754976636, sub_754976668, chckRange(i_754976639, 0, 2147483647));                      }                    if (Temporary10) {
                    result_754976638.push.apply(result_754976638, by_754976669);;
                    i_754976639 = addInt(i_754976639, (sub_754976668).length);
                    break Label6;
                    }
                    
                    i_587203541 = addInt(i_587203541, 1);
                  }
              };
            };
            }
            
            addChar(result_754976638, s_754976636[chckIndx(i_754976639, 0, (s_754976636).length - 1)]);;
            i_754976639 = addInt(i_754976639, 1);
          };
        }
    };

  return result_754976638;

}

function escapeText_1660944395(text_1660944396, target_1660944397) {
    var Temporary1;

  var result_1660944398 = [];

    switch (target_1660944397) {
    case 0:
      Temporary1 = multiReplace_754976635(text_1660944396, [{Field0: [60], Field1: [38,108,116,59]}, {Field0: [38], Field1: [38,97,109,112,59]}, {Field0: [34], Field1: [38,113,117,111,116,59]}]);
      break;
    case 1:
      Temporary1 = multiReplace_754976635(text_1660944396, [{Field0: [35], Field1: [92,35]}, {Field0: [36], Field1: [92,36]}, {Field0: [37], Field1: [92,37]}, {Field0: [38], Field1: [92,38]}, {Field0: [92], Field1: [92,116,101,120,116,98,97,99,107,115,108,97,115,104,123,125]}, {Field0: [94], Field1: [92,94,123,125]}, {Field0: [95], Field1: [92,95]}, {Field0: [123], Field1: [92,123]}, {Field0: [125], Field1: [92,125]}, {Field0: [126], Field1: [92,126,123,125]}]);
      break;
    case 2:
      Temporary1 = text_1660944396;
      break;
    }
    result_1660944398 = nimCopy(null, Temporary1, NTI33554449);

  return result_1660944398;

}

function isWhitespaceSensitive_1593835686(target_1593835687) {
  var result_1593835688 = false;

    result_1593835688 = (target_1593835687 == 2);

  return result_1593835688;

}

function hasKey_1660944583(t_1660944586, key_1660944587) {
  var result_1660944588 = false;

    var hc_1660944589 = [0];
    result_1660944588 = (0 <= rawGet_1660944590(t_1660944586, key_1660944587, hc_1660944589, 0));

  return result_1660944588;

}

function some_1660944733(val_1660944735) {
  var result_1660944739 = ({val: null});

    if (!(!((val_1660944735 == null)))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1660944739.val = val_1660944735;

  return result_1660944739;

}

function HEX5BHEX5D_1660944700(t_1660944703, key_1660944704) {
  var result_1660944705 = null;

    var hcHEX60gensym20_1660944706 = [0];
    var indexHEX60gensym20_1660944713 = rawGet_1660944590(t_1660944703, key_1660944704, hcHEX60gensym20_1660944706, 0);
    if ((0 <= indexHEX60gensym20_1660944713)) {
    result_1660944705 = t_1660944703.data[chckIndx(indexHEX60gensym20_1660944713, 0, (t_1660944703.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1660944714(key_1660944704);
    }
    

  return result_1660944705;

}

function none_1660944839() {
  var result_1660944845 = ({val: null});

  return result_1660944845;

}

function isSome_1660944866(self_1660944868) {
  var result_1660944869 = false;

    result_1660944869 = !((self_1660944868.val == null));

  return result_1660944869;

}

function unsafeGet_1660944878(self_1660944880) {
  var result_1660944881 = null;

    if (!(isSome_1660944866(self_1660944880))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,51,55,57,44,32,51,41,32,96,115,101,108,102,46,105,115,83,111,109,101,96,32]);
    }
    
    result_1660944881 = self_1660944880["val"];

  return result_1660944881;

}

function pop_1660944916(s_1660944918, s_1660944918_Idx) {
  var result_1660944919 = ({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});

    var L_1660944923 = subInt((s_1660944918[s_1660944918_Idx]).length, 1);
    result_1660944919 = nimCopy(result_1660944919, s_1660944918[s_1660944918_Idx][chckIndx(L_1660944923, 0, (s_1660944918[s_1660944918_Idx]).length - 1)], NTI1593835535);
    if (s_1660944918[s_1660944918_Idx].length < chckRange(L_1660944923, 0, 2147483647)) { for (var i = s_1660944918[s_1660944918_Idx].length ; i < chckRange(L_1660944923, 0, 2147483647) ; ++i) s_1660944918[s_1660944918_Idx].push(({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})})); }
               else { s_1660944918[s_1660944918_Idx].length = chckRange(L_1660944923, 0, 2147483647); };

  return result_1660944919;

}

function add_1660944932(x_1660944934, x_1660944934_Idx, y_1660944935) {
    var Temporary1;

    var xl_1660944940 = (x_1660944934[x_1660944934_Idx]).length;
    if (x_1660944934[x_1660944934_Idx].length < (Temporary1 = chckRange(addInt(xl_1660944940, (y_1660944935).length), 0, 2147483647), Temporary1)) { for (var i = x_1660944934[x_1660944934_Idx].length ; i < Temporary1 ; ++i) x_1660944934[x_1660944934_Idx].push(({typ: 0, str: [], list: [], opt: ({val: null})})); }
               else { x_1660944934[x_1660944934_Idx].length = Temporary1; };
    Label2: {
      var i_1660944956 = 0;
      var colontmp__587203549 = 0;
      colontmp__587203549 = (y_1660944935).length - 1;
      var res_587203550 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_587203550 <= colontmp__587203549)) break Label4;
            i_1660944956 = res_587203550;
            x_1660944934[x_1660944934_Idx][chckIndx(addInt(xl_1660944940, i_1660944956), 0, (x_1660944934[x_1660944934_Idx]).length - 1)] = nimCopy(x_1660944934[x_1660944934_Idx][chckIndx(addInt(xl_1660944940, i_1660944956), 0, (x_1660944934[x_1660944934_Idx]).length - 1)], y_1660944935[chckIndx(i_1660944956, 0, (y_1660944935).length - 1)], NTI1593835525);
            res_587203550 = addInt(res_587203550, 1);
          }
      };
    };

  
}

function formatValue_1543504130(result_1543504132, result_1543504132_Idx, value_1543504133, specifier_1543504134) {
    formatValue_1442840747(result_1543504132, result_1543504132_Idx, HEX24_1560281153(value_1543504133), specifier_1543504134);

  
}

function expand_1660944495(doc_1660944496, view_1660944497, typ_1660944498) {
                var Temporary4;
                var Temporary5;
                var Temporary6;
                var Temporary7;
                var Temporary8;
                var Temporary9;
                var Temporary10;
                  var Temporary11;
                  var Temporary12;
                var Temporary13;
              var Temporary14;
              
function HEX3Aanonymous_1660944531() {
                var result_1660944532 = ({val: null});

                BeforeRet: {
                  Label1: {
                    var iHEX60gensym6_1660944541 = 0;
                    var colontmp__587203545 = 0;
                    colontmp__587203545 = subInt((doc_1660944496.stack).length, 1);
                    var res_587203546 = colontmp__587203545;
                    Label2: {
                        Label3: while (true) {
                        if (!(0 <= res_587203546)) break Label3;
                          iHEX60gensym6_1660944541 = res_587203546;
                          var frameHEX60gensym6_1660944542 = nimCopy(null, doc_1660944496.stack[chckIndx(iHEX60gensym6_1660944541, 0, (doc_1660944496.stack).length - 1)], NTI1593835535);
                          if (hasKey_1660944583(frameHEX60gensym6_1660944542.commands, HEX24_1560281153(name_1660944528))) {
                          result_1660944532 = nimCopy(result_1660944532, some_1660944733(HEX5BHEX5D_1660944700(frameHEX60gensym6_1660944542.commands, HEX24_1560281153(name_1660944528))), NTI1660944629);
                          break BeforeRet;
                          }
                          
                          res_587203546 = subInt(res_587203546, 1);
                        }
                    };
                  };
                  result_1660944532 = nimCopy(result_1660944532, none_1660944839(), NTI1660944629);
                };

                return result_1660944532;

              }
              var Temporary15;
              var Temporary16;
              var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
                  var Temporary22;
                  var Temporary23;
                  var Temporary24;
                  var Temporary26;
                  var Temporary27;
                var Temporary28;
                var Temporary29;

  var result_1660944499 = ({typ: 0, str: [], list: [], opt: ({val: null})});

    result_1660944499 = nimCopy(result_1660944499, {typ: typ_1660944498, str: [], list: [], opt: ({val: null})}, NTI1593835525);
    Label1: {
      var node_1660944522 = ({kind: 0, str: ({body: [null, 0], slice: ({a: 0, b: 0})}), newline: false, whole: ({body: [null, 0], slice: ({a: 0, b: 0})}), name: ({body: [null, 0], slice: ({a: 0, b: 0})}), arg: ({body: [null, 0], slice: ({a: 0, b: 0})})});
      var colontmp__587203515 = [];
      colontmp__587203515 = parseXidoc_1677721874(view_1660944497, doc_1660944496.verbose);
      var i_587203517 = 0;
      var L_587203518 = (colontmp__587203515).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203517 < L_587203518)) break Label3;
            node_1660944522 = colontmp__587203515[chckIndx(i_587203517, 0, (colontmp__587203515).length - 1)];
            switch (node_1660944522.kind) {
            case 0:
              switch (typ_1660944498) {
              case 0:
                var Temporary4 = result_1660944499;
                if (ConstSet149[Temporary4.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary4.typ, NTI1593835524)); }
                var Temporary5 = node_1660944522;
                if (ConstSet150[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1677721603)); }
                addIfNeeded_1660944431(Temporary4, "str", HEX24_1560281153(Temporary5.str));
                break;
              case 1:
                var Temporary6 = result_1660944499;
                if (ConstSet151[Temporary6.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary6.typ, NTI1593835524)); }
                var Temporary7 = node_1660944522;
                if (ConstSet153[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1677721603)); }
                addIfNeeded_1660944431(Temporary6, "str", escapeText_1660944395(HEX24_1560281153(Temporary7.str), doc_1660944496.target));
                break;
              case 2:
                var Temporary8 = result_1660944499;
                if (ConstSet154[Temporary8.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary8.typ, NTI1593835524)); }
                var Temporary9 = node_1660944522;
                if (ConstSet155[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1677721603)); }
                Temporary8.list.push({typ: 0, str: HEX24_1560281153(Temporary9.str), list: [], opt: ({val: null})});;
                break;
              case 3:
                break;
              }
              break;
            case 1:
              switch (typ_1660944498) {
              case 0:
              case 1:
                  var Temporary12 = node_1660944522;
                  if (ConstSet156[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'newline\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1677721603)); }
                  if (!Temporary12.newline) Temporary11 = false; else {                    Temporary11 = !(isWhitespaceSensitive_1593835686(doc_1660944496.target));                  }                if (Temporary11) {
                Temporary10 = [10];
                }
                else {
                Temporary10 = [32];
                }
                
                var whitespace_1660944527 = nimCopy(null, Temporary10, NTI33554449);
                var Temporary13 = result_1660944499;
                if (ConstSet157[Temporary13.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary13.typ, NTI1593835524)); }
                addIfNeeded_1660944431(Temporary13, "str", whitespace_1660944527);
                break;
              case 2:
                break;
              case 3:
                break;
              }
              break;
            case 2:
              var Temporary14 = node_1660944522;
              if (ConstSet158[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1677721603)); }
              var name_1660944528 = nimCopy(null, Temporary14.name, NTI1560281091);
              var command_1660944861 = nimCopy(null, HEX3Aanonymous_1660944531(), NTI1660944629);
              if (isSome_1660944866(command_1660944861)) {
              var command_1660944910 = unsafeGet_1660944878(command_1660944861);
              var Temporary15 = node_1660944522;
              if (ConstSet159[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'whole\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1677721603)); }
              var Temporary16 = node_1660944522;
              if (ConstSet160[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI1677721603)); }
              doc_1660944496.stack.push({cmd: nimCopy(null, Temporary15.whole, NTI1560281091), cmdName: nimCopy(null, name_1660944528, NTI1560281091), cmdArg: nimCopy(null, Temporary16.arg, NTI1560281091), args: ({data: [], counter: 0}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});;
              var Temporary17 = node_1660944522;
              if (ConstSet161[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1677721603)); }
              var val_1660944915 = command_1660944910(Temporary17.arg);
              var _ = pop_1660944916(doc_1660944496, "stack");
              switch (typ_1660944498) {
              case 0:
                switch (val_1660944915.typ) {
                case 0:
                case 1:
                  var Temporary18 = result_1660944499;
                  if (ConstSet162[Temporary18.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary18.typ, NTI1593835524)); }
                  var Temporary19 = val_1660944915;
                  if (ConstSet163[Temporary19.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary19.typ, NTI1593835524)); }
                  addIfNeeded_1660944431(Temporary18, "str", Temporary19.str);
                  break;
                case 2:
                  raiseException({message: [67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,32,76,105,115,116,32,116,111,32,97,32,83,116,114,105,110,103], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                  break;
                case 3:
                  break;
                }
                break;
              case 1:
                switch (val_1660944915.typ) {
                case 0:
                  var Temporary20 = result_1660944499;
                  if (ConstSet164[Temporary20.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary20.typ, NTI1593835524)); }
                  var Temporary21 = val_1660944915;
                  if (ConstSet165[Temporary21.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary21.typ, NTI1593835524)); }
                  addIfNeeded_1660944431(Temporary20, "str", escapeText_1660944395(Temporary21.str, doc_1660944496.target));
                  break;
                case 1:
                  var Temporary22 = result_1660944499;
                  if (ConstSet166[Temporary22.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary22.typ, NTI1593835524)); }
                  var Temporary23 = val_1660944915;
                  if (ConstSet167[Temporary23.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary23.typ, NTI1593835524)); }
                  addIfNeeded_1660944431(Temporary22, "str", Temporary23.str);
                  break;
                case 2:
                  raiseException({message: [67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,32,76,105,115,116,32,116,111,32,97,32,77,97,114,107,117,112], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                  break;
                case 3:
                  break;
                }
                break;
              case 2:
                switch (val_1660944915.typ) {
                case 0:
                case 1:
                  var Temporary24 = result_1660944499;
                  if (ConstSet168[Temporary24.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary24.typ, NTI1593835524)); }
                  var Temporary25 = nimCopy(null, val_1660944915, NTI1593835525);
                  Temporary24.list.push(Temporary25);;
                  break;
                case 2:
                  var Temporary26 = result_1660944499;
                  if (ConstSet169[Temporary26.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary26.typ, NTI1593835524)); }
                  var Temporary27 = val_1660944915;
                  if (ConstSet170[Temporary27.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary27.typ, NTI1593835524)); }
                  add_1660944932(Temporary26, "list", Temporary27.list);
                  break;
                case 3:
                  break;
                }
                break;
              case 3:
                break;
              }
              }
              else {
                var Temporary28 = node_1660944522;
                if (ConstSet171[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'whole\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI1677721603)); }
                var Temporary29 = node_1660944522;
                if (ConstSet172[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI1677721603)); }
                doc_1660944496.stack.push({cmd: nimCopy(null, Temporary28.whole, NTI1560281091), cmdName: nimCopy(null, name_1660944528, NTI1560281091), cmdArg: nimCopy(null, Temporary29.arg, NTI1560281091), args: ({data: [], counter: 0}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});;
                Label30: {
                  var fmtRes_1660944990 = [mnewString(0)];
                  fmtRes_1660944990[0].push.apply(fmtRes_1660944990[0], [67,111,109,109,97,110,100,32,110,111,116,32,102,111,117,110,100,58,32]);;
                  formatValue_1543504130(fmtRes_1660944990, 0, name_1660944528, []);
                };
                raiseException({message: nimCopy(null, fmtRes_1660944990[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
              }
              
              break;
            }
            i_587203517 = addInt(i_587203517, 1);
            if (!(((colontmp__587203515).length == L_587203518))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1660944499;

}

function isEmpty_1560281169(view_1560281170) {
  var result_1560281171 = false;

    result_1560281171 = (view_1560281170.slice.b < view_1560281170.slice.a);

  return result_1560281171;

}

function HEX5BHEX5D_2197815767(s_2197815769, i_2197815770) {
  var result_2197815771 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    result_2197815771 = nimCopy(result_2197815771, s_2197815769[chckIndx(subInt((s_2197815769).length, i_2197815770), 0, (s_2197815769).length - 1)], NTI1560281091);

  return result_2197815771;

}

function map_2197815836(s_2197815839, op_2197815841) {
  var result_2197815842 = [];

    result_2197815842 = new Array(chckRange((s_2197815839).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2197815839).length, 0, 2147483647) ; ++i) { result_2197815842[i] = ({typ: 0, str: [], list: [], opt: ({val: null})}); }    Label1: {
      var i_2197815857 = 0;
      var colontmp__587203553 = 0;
      colontmp__587203553 = (s_2197815839).length;
      var i_587203554 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203554 < colontmp__587203553)) break Label3;
            i_2197815857 = i_587203554;
            result_2197815842[chckIndx(i_2197815857, 0, (result_2197815842).length - 1)] = nimCopy(result_2197815842[chckIndx(i_2197815857, 0, (result_2197815842).length - 1)], op_2197815841(s_2197815839[chckIndx(i_2197815857, 0, (s_2197815839).length - 1)]), NTI1593835525);
            i_587203554 = addInt(i_587203554, 1);
          }
      };
    };

  return result_2197815842;

}

function HEX5BHEX5D_2197815789(s_2197815793, x_2197815794) {
  var result_2197815795 = [];

    var a_2197815797 = x_2197815794.a;
    var L_2197815799 = addInt(subInt(x_2197815794.b, a_2197815797), 1);
    result_2197815795 = new Array(chckRange(L_2197815799, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2197815799, 0, 2147483647) ; ++i) { result_2197815795[i] = ({body: [null, 0], slice: ({a: 0, b: 0})}); }    Label1: {
      var i_2197815808 = 0;
      var i_587203557 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203557 < L_2197815799)) break Label3;
            i_2197815808 = i_587203557;
            result_2197815795[chckIndx(i_2197815808, 0, (result_2197815795).length - 1)] = nimCopy(result_2197815795[chckIndx(i_2197815808, 0, (result_2197815795).length - 1)], s_2197815793[chckIndx(addInt(i_2197815808, a_2197815797), 0, (s_2197815793).length - 1)], NTI1560281091);
            i_587203557 = addInt(i_587203557, 1);
          }
      };
    };

  return result_2197815795;

}

function HEX5BHEX5D_2197815873(s_2197815877, x_2197815878) {
  var result_2197815879 = [];

    var a_2197815881 = x_2197815878.a;
    var L_2197815886 = addInt(subInt(subInt((s_2197815877).length, x_2197815878.b), a_2197815881), 1);
    result_2197815879 = new Array(chckRange(L_2197815886, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2197815886, 0, 2147483647) ; ++i) { result_2197815879[i] = ({kind: 0, base: 0}); }    Label1: {
      var i_2197815895 = 0;
      var i_587203560 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203560 < L_2197815886)) break Label3;
            i_2197815895 = i_587203560;
            result_2197815879[chckIndx(i_2197815895, 0, (result_2197815879).length - 1)] = nimCopy(result_2197815879[chckIndx(i_2197815895, 0, (result_2197815879).length - 1)], s_2197815877[chckIndx(addInt(i_2197815895, a_2197815881), 0, (s_2197815877).length - 1)], NTI1593835527);
            i_587203560 = addInt(i_587203560, 1);
          }
      };
    };

  return result_2197815879;

}

function new_2197816035() {
  var result_2197816038 = null;

  BeforeRet: {
    var r_2197816040 = null;
    r_2197816040 = {typ: 0, str: [], list: [], opt: ({val: null})};
    result_2197816038 = r_2197816040;
    break BeforeRet;
  };

  return result_2197816038;

}

function some_2197816061(val_2197816063) {
  var result_2197816064 = ({val: null});

    if (!(!((val_2197816063 == null)))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2197816064.val = val_2197816063;

  return result_2197816064;

}

function none_2197816078() {
  var result_2197816084 = ({val: null});

  return result_2197816084;

}

function expandArguments_2197815314(doc_2197815315, name_2197815316, arg_2197815317, types_2197815318) {
              
function expandIfNeeded_2197815613(doc_2197815614, arg_2197815615, typ_2197815616) {
                  var Temporary1;

                var result_2197815617 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                  if ((typ_2197815616.kind == 3)) {
                  Temporary1 = {typ: 0, str: HEX24_1560281153(arg_2197815615), list: [], opt: ({val: null})};
                  }
                  else {
                  Temporary1 = expand_1660944495(doc_2197815614, arg_2197815615, typ_2197815616.base);
                  }
                  
                  result_2197815617 = nimCopy(result_2197815617, Temporary1, NTI1593835525);

                return result_2197815617;

              }
      
function HEX3Aanonymous_2197815825(arg_2197815832) {
        var result_2197815835 = ({typ: 0, str: [], list: [], opt: ({val: null})});

          result_2197815835 = nimCopy(result_2197815835, expand_1660944495(doc_2197815315, arg_2197815832, base_2197815779), NTI1593835525);

        return result_2197815835;

      }

  var result_2197815319 = [];

  BeforeRet: {
    if ((((types_2197815318).length == 1) && HEX3DHEX3D_2197815324(types_2197815318[chckIndx(0, 0, (types_2197815318).length - 1)], Literal_1593835747))) {
    result_2197815319 = nimCopy(null, [{typ: 0, str: HEX24_1560281153(arg_2197815317), list: [], opt: ({val: null})}], NTI2197815317);
    break BeforeRet;
    }
    
    if ((((types_2197815318).length == 1) && HEX3DHEX3D_2197815324(types_2197815318[chckIndx(0, 0, (types_2197815318).length - 1)], Raw_1593835746))) {
    result_2197815319 = nimCopy(null, [{typ: 0, str: HEX24_1560281153(strip_1560281282(arg_2197815317)), list: [], opt: ({val: null})}], NTI2197815317);
    break BeforeRet;
    }
    
    var args_2197815359 = parseXidocArguments_1677721945(arg_2197815317);
    var starPos_2197815368 = none_2197815360();
    var questionPos_2197815380 = nimCopy(null, HEX2EHEX2E_1056964656(0, (-1)), NTI822083653);
    Label1: {
      var index_2197815413 = 0;
      var typ_2197815414 = ({kind: 0, base: 0});
      var i_587203477 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203477 < (types_2197815318).length)) break Label3;
            index_2197815413 = i_587203477;
            typ_2197815414 = nimCopy(typ_2197815414, types_2197815318[chckIndx(i_587203477, 0, (types_2197815318).length - 1)], NTI1593835527);
            switch (typ_2197815414.kind) {
            case 2:
              if (isNone_2197815419(starPos_2197815368)) {
              starPos_2197815368 = nimCopy(starPos_2197815368, some_2197815424(index_2197815413), NTI2197815332);
              }
              else {
                raiseException({message: [84,104,101,114,101,32,99,97,110,32,111,110,108,121,32,98,101,32,111,110,101,32,115,116,97,114,32,112,97,114,97,109,101,116,101,114], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
              }
              
              break Label1;
              break;
            case 1:
              if (HEX3DHEX3D_2197815495(questionPos_2197815380, HEX2EHEX2E_1056964656(0, (-1)))) {
              questionPos_2197815380 = nimCopy(questionPos_2197815380, HEX2EHEX2E_1056964656(index_2197815413, index_2197815413), NTI822083653);
              }
              else {
                questionPos_2197815380.b = index_2197815413;
              }
              
              break;
            case 0:
            case 3:
            case 4:
              break;
            }
            i_587203477 = addInt(i_587203477, 1);
          }
      };
    };
    if (isSome_2197815514(starPos_2197815368)) {
    var minLen_2197815522 = subInt((types_2197815318).length, 1);
    if (((args_2197815359).length < minLen_2197815522)) {
    raiseException({message: nsuFormatOpenArray([67,111,109,109,97,110,100,32,36,49,32,110,101,101,100,115,32,97,116,32,108,101,97,115,116,32,36,50,32,97,114,103,117,109,101,110,116,115,44,32,36,51,32,103,105,118,101,110], [nimCopy(null, name_2197815316, NTI33554449), HEX24_385875976(minLen_2197815522), HEX24_385875976((args_2197815359).length)]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    }
    else {
      var minLen_2197815599 = subInt((types_2197815318).length, len_2197815588(questionPos_2197815380));
      var maxLen_2197815603 = (types_2197815318).length;
      if ((((args_2197815359).length < minLen_2197815599) || (maxLen_2197815603 < (args_2197815359).length))) {
      raiseException({message: nsuFormatOpenArray([67,111,109,109,97,110,100,32,36,49,32,110,101,101,100,115,32,97,116,32,108,101,97,115,116,32,36,50,32,97,110,100,32,97,116,32,109,111,115,116,32,36,51,32,97,114,103,117,109,101,110,116,115,44,32,36,52,32,103,105,118,101,110], [nimCopy(null, name_2197815316, NTI33554449), HEX24_385875976(minLen_2197815599), HEX24_385875976(maxLen_2197815603), HEX24_385875976((args_2197815359).length)]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
    }
    
    if (isSome_2197815514(starPos_2197815368)) {
    var starPos_2197815665 = unsafeGet_2197815633(starPos_2197815368);
    Label4: {
      Label5: {
        var index_2197815742 = 0;
        var typ_2197815743 = ({kind: 0, base: 0});
        var colontmp__587203480 = [];
        colontmp__587203480 = HEX5BHEX5D_2197815682(types_2197815318, HEX2EHEX2E_1056964656(0, subInt(starPos_2197815665, 1)));
        var i_587203482 = 0;
        var L_587203483 = (colontmp__587203480).length;
        Label6: {
            Label7: while (true) {
            if (!(i_587203482 < L_587203483)) break Label7;
              index_2197815742 = i_587203482;
              typ_2197815743 = nimCopy(typ_2197815743, colontmp__587203480[chckIndx(i_587203482, 0, (colontmp__587203480).length - 1)], NTI1593835527);
              var val_2197815744 = expandIfNeeded_2197815613(doc_2197815315, args_2197815359[chckIndx(index_2197815742, 0, (args_2197815359).length - 1)], typ_2197815743);
              var Temporary8 = nimCopy(null, val_2197815744, NTI1593835525);
              result_2197815319.push(Temporary8);;
              i_587203482 = addInt(i_587203482, 1);
              if (!(((colontmp__587203480).length == L_587203483))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    Label9: {
      var start_2197815750 = starPos_2197815665;
      var end_2197815757 = addInt(subInt((args_2197815359).length, (types_2197815318).length), start_2197815750);
      if ((start_2197815750 <= end_2197815757)) {
      if ((((start_2197815750 == 0) && (0 < (args_2197815359).length)) && isEmpty_1560281169(args_2197815359[chckIndx(0, 0, (args_2197815359).length - 1)]))) {
      start_2197815750 = 1;
      }
      
      if ((((end_2197815757 == subInt((args_2197815359).length, 1)) && (0 < (args_2197815359).length)) && isEmpty_1560281169(HEX5BHEX5D_2197815767(args_2197815359, 1)))) {
      end_2197815757 = subInt((args_2197815359).length, 2);
      }
      
      }
      
      var base_2197815779 = types_2197815318[chckIndx(starPos_2197815665, 0, (types_2197815318).length - 1)].base;
      var vals_2197815858 = map_2197815836(HEX5BHEX5D_2197815789(args_2197815359, HEX2EHEX2E_1056964656(start_2197815750, end_2197815757)), HEX3Aanonymous_2197815825);
      result_2197815319.push({typ: 2, list: nimCopy(null, vals_2197815858, NTI2197815641), str: [], opt: ({val: null})});;
    };
    Label10: {
      Label11: {
        var index_2197815901 = 0;
        var typ_2197815902 = ({kind: 0, base: 0});
        var colontmp__587203486 = [];
        colontmp__587203486 = HEX5BHEX5D_2197815873(types_2197815318, HEX2EHEX2E_973078632(addInt(starPos_2197815665, 1), 1));
        var i_587203487 = 0;
        var L_587203488 = (colontmp__587203486).length;
        Label12: {
            Label13: while (true) {
            if (!(i_587203487 < L_587203488)) break Label13;
              index_2197815901 = i_587203487;
              typ_2197815902 = nimCopy(typ_2197815902, colontmp__587203486[chckIndx(i_587203487, 0, (colontmp__587203486).length - 1)], NTI1593835527);
              var index_2197815906 = subInt(subInt(subInt((types_2197815318).length, index_2197815901), starPos_2197815665), 1);
              var val_2197815911 = expandIfNeeded_2197815613(doc_2197815315, HEX5BHEX5D_2197815767(args_2197815359, index_2197815906), typ_2197815902);
              var Temporary14 = nimCopy(null, val_2197815911, NTI1593835525);
              result_2197815319.push(Temporary14);;
              i_587203487 = addInt(i_587203487, 1);
              if (!(((colontmp__587203486).length == L_587203488))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    else {
      Label15: {
        Label16: {
          var index_2197815943 = 0;
          var typ_2197815944 = ({kind: 0, base: 0});
          var colontmp__587203491 = [];
          colontmp__587203491 = HEX5BHEX5D_2197815682(types_2197815318, HEX2EHEX2E_1056964656(0, subInt(questionPos_2197815380.a, 1)));
          var i_587203492 = 0;
          var L_587203493 = (colontmp__587203491).length;
          Label17: {
              Label18: while (true) {
              if (!(i_587203492 < L_587203493)) break Label18;
                index_2197815943 = i_587203492;
                typ_2197815944 = nimCopy(typ_2197815944, colontmp__587203491[chckIndx(i_587203492, 0, (colontmp__587203491).length - 1)], NTI1593835527);
                var val_2197815945 = expandIfNeeded_2197815613(doc_2197815315, args_2197815359[chckIndx(index_2197815943, 0, (args_2197815359).length - 1)], typ_2197815944);
                var Temporary19 = nimCopy(null, val_2197815945, NTI1593835525);
                result_2197815319.push(Temporary19);;
                i_587203492 = addInt(i_587203492, 1);
                if (!(((colontmp__587203491).length == L_587203493))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Label20: {
        var minLen_2197816013 = subInt((types_2197815318).length, len_2197815588(questionPos_2197815380));
        var start_2197816014 = questionPos_2197815380.a;
        Label21: {
          var index_2197816030 = 0;
          var typ_2197816031 = ({kind: 0, base: 0});
          var colontmp__587203496 = [];
          colontmp__587203496 = HEX5BHEX5D_2197815682(types_2197815318, questionPos_2197815380);
          var i_587203497 = 0;
          var L_587203498 = (colontmp__587203496).length;
          Label22: {
              Label23: while (true) {
              if (!(i_587203497 < L_587203498)) break Label23;
                index_2197816030 = i_587203497;
                typ_2197816031 = nimCopy(typ_2197816031, colontmp__587203496[chckIndx(i_587203497, 0, (colontmp__587203496).length - 1)], NTI1593835527);
                if ((index_2197816030 < subInt((args_2197815359).length, minLen_2197816013))) {
                var val_2197816060 = new_2197816035();
                val_2197816060 = nimCopy(val_2197816060, expand_1660944495(doc_2197815315, args_2197815359[chckIndx(addInt(start_2197816014, index_2197816030), 0, (args_2197815359).length - 1)], typ_2197816031.base), NTI1593835525);
                result_2197815319.push({typ: 3, opt: some_2197816061(val_2197816060), str: [], list: []});;
                }
                else {
                result_2197815319.push({typ: 3, opt: none_2197816078(), str: [], list: []});;
                }
                
                i_587203497 = addInt(i_587203497, 1);
                if (!(((colontmp__587203496).length == L_587203498))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Label24: {
        Label25: {
          var index_2197816110 = 0;
          var typ_2197816111 = ({kind: 0, base: 0});
          var colontmp__587203501 = [];
          colontmp__587203501 = HEX5BHEX5D_2197815873(types_2197815318, HEX2EHEX2E_973078632(addInt(questionPos_2197815380.b, 1), 1));
          var i_587203502 = 0;
          var L_587203503 = (colontmp__587203501).length;
          Label26: {
              Label27: while (true) {
              if (!(i_587203502 < L_587203503)) break Label27;
                index_2197816110 = i_587203502;
                typ_2197816111 = nimCopy(typ_2197816111, colontmp__587203501[chckIndx(i_587203502, 0, (colontmp__587203501).length - 1)], NTI1593835527);
                var index_2197816115 = subInt(subInt(subInt((types_2197815318).length, index_2197816110), questionPos_2197815380.b), 1);
                var val_2197816120 = expandIfNeeded_2197815613(doc_2197815315, HEX5BHEX5D_2197815767(args_2197815359, index_2197816115), typ_2197816111);
                var Temporary28 = nimCopy(null, val_2197816120, NTI1593835525);
                result_2197815319.push(Temporary28);;
                i_587203502 = addInt(i_587203502, 1);
                if (!(((colontmp__587203501).length == L_587203503))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
    }
    
  };

  return result_2197815319;

}

function to_2181038173(val_2181038175) {
    var Temporary1;

  var result_2181038177 = [];

    var Temporary1 = val_2181038175;
    if (ConstSet173[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_2181038177 = nimCopy(null, Temporary1.str, NTI33554449);

  return result_2181038177;

}

function HEX21_1593835705(typ_1593835706) {
  var result_1593835707 = ({kind: 0, base: 0});

    result_1593835707.kind = 0;
    result_1593835707.base = typ_1593835706;

  return result_1593835707;

}

function translate_1610612762(phrase_1610612763, lang_1610612764) {
  var result_1610612765 = [];

    result_1610612765 = nimCopy(null, translations_1610612761[chckIndx(phrase_1610612763, 0, (translations_1610612761).length - 1)][chckIndx(lang_1610612764, 0, (translations_1610612761[chckIndx(phrase_1610612763, 0, (translations_1610612761).length - 1)]).length - 1)], NTI33554449);

  return result_1610612765;

}

function isSome_1476395589(self_1476395591) {
  var result_1476395592 = false;

    result_1476395592 = self_1476395591.has;

  return result_1476395592;

}

function isNone_1476395614(self_1476395616) {
  var result_1476395617 = false;

    result_1476395617 = !(self_1476395616.has);

  return result_1476395617;

}

function get_1476395606(self_1476395608) {
  var result_1476395609 = 0;

    if (isNone_1476395614(self_1476395608)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1358954516, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1476395609 = self_1476395608["val"];

  return result_1476395609;

}

function HEX5BHEX5D_2197816618(s_2197816620, i_2197816621) {
  var result_2197816622 = null;

    result_2197816622 = s_2197816620[chckIndx(subInt((s_2197816620).length, i_2197816621), 0, (s_2197816620).length - 1)];

  return result_2197816622;

}

function HEX3F_1593835740(typ_1593835741) {
  var result_1593835742 = ({kind: 0, base: 0});

    result_1593835742.kind = 1;
    result_1593835742.base = typ_1593835741;

  return result_1593835742;

}

function isNone_1543503922(self_1543503924) {
  var result_1543503925 = false;

    result_1543503925 = !(self_1543503924.has);

  return result_1543503925;

}

function get_2214592918(self_2214592920) {
  var result_2214592921 = [];

    if (isNone_1543503922(self_2214592920)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1358954516, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2214592921 = self_2214592920["val"];

  return result_2214592921;

}

function isSome_2214593011(self_2214593013) {
  var result_2214593014 = false;

    result_2214593014 = !((self_2214593013.val == null));

  return result_2214593014;

}

function none_2214593024() {
  var result_2214593031 = ({val: [], has: false});

  return result_2214593031;

}

function map_2214593000(self_2214593003, callback_2214593005) {
    var Temporary1;

  var result_2214593006 = ({val: [], has: false});

    if (isSome_2214593011(self_2214593003)) {
    Temporary1 = some_2214593019(callback_2214593005(self_2214593003.val));
    }
    else {
    Temporary1 = none_2214593024();
    }
    
    result_2214593006 = nimCopy(result_2214593006, Temporary1, NTI1593835612);

  return result_2214593006;

}

function to_2214592966(val_2214592969) {
    var Temporary1;
    
function HEX3Aanonymous_2214592976(x_2214592987) {
      var result_2214592990 = [];

        result_2214592990 = nimCopy(null, to_2181038173(x_2214592987), NTI33554449);

      return result_2214592990;

    }

  var result_2214592971 = ({val: [], has: false});

    var Temporary1 = val_2214592969;
    if (ConstSet174[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'opt\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_2214592971 = nimCopy(result_2214592971, map_2214593000(Temporary1.opt, HEX3Aanonymous_2214592976), NTI1593835612);

  return result_2214592971;

}

function unsafeGet_2248147493(self_2248147495) {
  var result_2248147496 = [];

    if (!(isSome_2214592897(self_2248147495))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,51,55,57,44,32,51,41,32,96,115,101,108,102,46,105,115,83,111,109,101,96,32]);
    }
    
    result_2248147496 = self_2248147495["val"];

  return result_2248147496;

}

function runeLenAt_1040194584(s_1040194585, i_1040194586) {
  var result_1040194587 = 0;

    result_1040194587 = runeLenAt_1040187486((s_1040194585.slice(0, (s_1040194585).length - 1 + 1)), i_1040194586);

  return result_1040194587;

}

function binarySearch_1040188413(c_1040188414, tab_1040188415, len_1040188416, stride_1040188417) {
  var result_1040188418 = 0;

  BeforeRet: {
    var n_1040188419 = len_1040188416;
    var t_1040188420 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_1040188419)) break Label2;
          var m_1040188421 = divInt(n_1040188419, 2);
          var p_1040188422 = addInt(t_1040188420, mulInt(m_1040188421, stride_1040188417));
          if ((((tab_1040188415[chckIndx(p_1040188422, 0, (tab_1040188415).length - 1)]) | 0) <= c_1040188414)) {
          t_1040188420 = p_1040188422;
          n_1040188419 = subInt(n_1040188419, m_1040188421);
          }
          else {
            n_1040188419 = m_1040188421;
          }
          
        }
    };
    if ((!((n_1040188419 == 0)) && (((tab_1040188415[chckIndx(t_1040188420, 0, (tab_1040188415).length - 1)]) | 0) <= c_1040188414))) {
    result_1040188418 = t_1040188420;
    break BeforeRet;
    }
    
    result_1040188418 = (-1);
    break BeforeRet;
  };

  return result_1040188418;

}

function nucisUpper(c_1040188657) {
  var result_1040188658 = false;

  BeforeRet: {
    var c_1040188659 = c_1040188657;
    var p_1040188667 = binarySearch_1040188413(c_1040188659, toLowerRanges_1040188404, 45, 3);
    if ((((0 <= p_1040188667) && (((toLowerRanges_1040188404[chckIndx(p_1040188667, 0, (toLowerRanges_1040188404).length - 1)]) | 0) <= c_1040188659)) && (c_1040188659 <= ((toLowerRanges_1040188404[chckIndx(addInt(p_1040188667, 1), 0, (toLowerRanges_1040188404).length - 1)]) | 0)))) {
    result_1040188658 = true;
    break BeforeRet;
    }
    
    p_1040188667 = binarySearch_1040188413(c_1040188659, toLowerSinglets_1040188405, 610, 2);
    if (((0 <= p_1040188667) && (c_1040188659 == ((toLowerSinglets_1040188405[chckIndx(p_1040188667, 0, (toLowerSinglets_1040188405).length - 1)]) | 0)))) {
    result_1040188658 = true;
    break BeforeRet;
    }
    
  };

  return result_1040188658;

}

function nucisLower(c_1040188638) {
  var result_1040188639 = false;

  BeforeRet: {
    var c_1040188640 = c_1040188638;
    var p_1040188648 = binarySearch_1040188413(c_1040188640, toUpperRanges_1040188406, 46, 3);
    if ((((0 <= p_1040188648) && (((toUpperRanges_1040188406[chckIndx(p_1040188648, 0, (toUpperRanges_1040188406).length - 1)]) | 0) <= c_1040188640)) && (c_1040188640 <= ((toUpperRanges_1040188406[chckIndx(addInt(p_1040188648, 1), 0, (toUpperRanges_1040188406).length - 1)]) | 0)))) {
    result_1040188639 = true;
    break BeforeRet;
    }
    
    p_1040188648 = binarySearch_1040188413(c_1040188640, toUpperSinglets_1040188407, 624, 2);
    if (((0 <= p_1040188648) && (c_1040188640 == ((toUpperSinglets_1040188407[chckIndx(p_1040188648, 0, (toUpperSinglets_1040188407).length - 1)]) | 0)))) {
    result_1040188639 = true;
    break BeforeRet;
    }
    
  };

  return result_1040188639;

}

function nucisAlpha(c_1040188676) {
  var result_1040188677 = false;

  BeforeRet: {
    if ((nucisUpper(c_1040188676) || nucisLower(c_1040188676))) {
    result_1040188677 = true;
    break BeforeRet;
    }
    
    var c_1040188678 = c_1040188676;
    var p_1040188687 = binarySearch_1040188413(c_1040188678, alphaRanges_1040188409, 471, 2);
    if ((((0 <= p_1040188687) && (((alphaRanges_1040188409[chckIndx(p_1040188687, 0, (alphaRanges_1040188409).length - 1)]) | 0) <= c_1040188678)) && (c_1040188678 <= ((alphaRanges_1040188409[chckIndx(addInt(p_1040188687, 1), 0, (alphaRanges_1040188409).length - 1)]) | 0)))) {
    result_1040188677 = true;
    break BeforeRet;
    }
    
    p_1040188687 = binarySearch_1040188413(c_1040188678, alphaSinglets_1040188410, 147, 1);
    if (((0 <= p_1040188687) && (c_1040188678 == ((alphaSinglets_1040188410[chckIndx(p_1040188687, 0, (alphaSinglets_1040188410).length - 1)]) | 0)))) {
    result_1040188677 = true;
    break BeforeRet;
    }
    
  };

  return result_1040188677;

}

function nucisTitle(c_1040188761) {
  var result_1040188762 = false;

  BeforeRet: {
    result_1040188762 = (nucisUpper(c_1040188761) && nucisLower(c_1040188761));
    break BeforeRet;
  };

  return result_1040188762;

}

function nucisWhiteSpace(c_1040188764) {
  var result_1040188765 = false;

  BeforeRet: {
    var c_1040188766 = c_1040188764;
    var p_1040188775 = binarySearch_1040188413(c_1040188766, spaceRanges_1040188411, 10, 2);
    if ((((0 <= p_1040188775) && (((spaceRanges_1040188411[chckIndx(p_1040188775, 0, (spaceRanges_1040188411).length - 1)]) | 0) <= c_1040188766)) && (c_1040188766 <= ((spaceRanges_1040188411[chckIndx(addInt(p_1040188775, 1), 0, (spaceRanges_1040188411).length - 1)]) | 0)))) {
    result_1040188765 = true;
    break BeforeRet;
    }
    
  };

  return result_1040188765;

}

function nuctoLower(c_1040188424) {
  var result_1040188425 = 0;

  BeforeRet: {
    var c_1040188426 = c_1040188424;
    var p_1040188435 = binarySearch_1040188413(c_1040188426, toLowerRanges_1040188404, 45, 3);
    if ((((0 <= p_1040188435) && (((toLowerRanges_1040188404[chckIndx(p_1040188435, 0, (toLowerRanges_1040188404).length - 1)]) | 0) <= c_1040188426)) && (c_1040188426 <= ((toLowerRanges_1040188404[chckIndx(addInt(p_1040188435, 1), 0, (toLowerRanges_1040188404).length - 1)]) | 0)))) {
    result_1040188425 = subInt(addInt(c_1040188426, ((toLowerRanges_1040188404[chckIndx(addInt(p_1040188435, 2), 0, (toLowerRanges_1040188404).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_1040188435 = binarySearch_1040188413(c_1040188426, toLowerSinglets_1040188405, 610, 2);
    if (((0 <= p_1040188435) && (c_1040188426 == ((toLowerSinglets_1040188405[chckIndx(p_1040188435, 0, (toLowerSinglets_1040188405).length - 1)]) | 0)))) {
    result_1040188425 = subInt(addInt(c_1040188426, ((toLowerSinglets_1040188405[chckIndx(addInt(p_1040188435, 1), 0, (toLowerSinglets_1040188405).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_1040188425 = c_1040188426;
    break BeforeRet;
  };

  return result_1040188425;

}

function npegsrawMatch(s_1493173064, p_1493173065, start_1493173066, c_1493173067) {
    
function matchIt_1493173120(sHEX60gensym26_1493173121, pHEX60gensym26_1493173122, startHEX60gensym26_1493173123, cHEX60gensym26_1493173124) {
          var Temporary1;
                    var Temporary5;
                      var Temporary6;
                      var Temporary7;
                var Temporary10;
                  var Temporary11;
                  var Temporary12;
                var Temporary13;
                var Temporary14;
                  var Temporary15;
                  var Temporary16;
                  var Temporary17;
                var Temporary18;
                var Temporary19;
                var Temporary20;
                var Temporary21;
                  var Temporary22;
                  var Temporary23;
                  var Temporary24;
                var Temporary25;
                var Temporary26;
                var Temporary27;
                var Temporary28;
                var Temporary29;
                var Temporary30;
                  var Temporary31;
                  var Temporary32;
                  var Temporary33;
                var Temporary34;
                var Temporary35;
                var Temporary36;
                var Temporary37;
                var Temporary38;
                var Temporary39;
                var Temporary40;
                var Temporary41;
                  var Temporary42;
                  var Temporary43;
                  var Temporary44;
                var Temporary45;
                var Temporary46;
                var Temporary47;
                var Temporary48;
                var Temporary49;
                var Temporary50;
                var Temporary51;
                var Temporary52;
                var Temporary53;
                var Temporary54;
                  var Temporary55;
                  var Temporary56;
                  var Temporary57;
                var Temporary58;
                var Temporary59;
                var Temporary60;
                var Temporary61;
                var Temporary62;
                var Temporary63;
                var Temporary64;
                var Temporary65;
                var Temporary66;
                var Temporary67;
                var Temporary68;
                var Temporary69;
                  var Temporary70;
                  var Temporary71;
                var Temporary74;
                      var Temporary77;
                        var Temporary78;
                        var Temporary79;
                      var Temporary80;
                      var Temporary81;
                        var Temporary82;
                        var Temporary83;
                        var Temporary84;
                      var Temporary85;
                      var Temporary86;
                      var Temporary87;
                      var Temporary88;
                        var Temporary89;
                        var Temporary90;
                        var Temporary91;
                      var Temporary92;
                      var Temporary93;
                      var Temporary94;
                      var Temporary95;
                      var Temporary96;
                      var Temporary97;
                        var Temporary98;
                        var Temporary99;
                        var Temporary100;
                      var Temporary101;
                      var Temporary102;
                      var Temporary103;
                      var Temporary104;
                      var Temporary105;
                      var Temporary106;
                      var Temporary107;
                      var Temporary108;
                        var Temporary109;
                        var Temporary110;
                        var Temporary111;
                      var Temporary112;
                      var Temporary113;
                      var Temporary114;
                      var Temporary115;
                      var Temporary116;
                      var Temporary117;
                      var Temporary118;
                      var Temporary119;
                      var Temporary120;
                      var Temporary121;
                        var Temporary122;
                        var Temporary123;
                        var Temporary124;
                      var Temporary125;
                      var Temporary126;
                      var Temporary127;
                      var Temporary128;
                      var Temporary129;
                      var Temporary130;
                      var Temporary131;
                      var Temporary132;
                      var Temporary133;
                      var Temporary134;
                      var Temporary135;
                      var Temporary136;
                        var Temporary137;
                        var Temporary138;
                  var Temporary141;
            var Temporary142;
              var Temporary143;
            var Temporary144;
              var Temporary145;
          var Temporary146;
            var Temporary148;
                  var Temporary151;
                  var Temporary152;
            var Temporary154;
                  var Temporary157;
                  var Temporary158;
                var Temporary161;
                var Temporary162;
                var Temporary165;
                var Temporary166;
                var Temporary169;
                var Temporary170;
          var Temporary171;
                var Temporary176;
                  var Temporary177;
          var Temporary178;
          var Temporary179;
          var Temporary180;
          var Temporary181;
          var Temporary182;
          var Temporary183;
            var Temporary184;
            var Temporary185;
              var Temporary186;
              var Temporary187;
            var Temporary188;
            var Temporary189;
          
function matchBackRef_1493173126(sHEX60gensym26_1493173127, pHEX60gensym26_1493173128, startHEX60gensym26_1493173129, cHEX60gensym26_1493173130) {
              var Temporary1;

            var result_1493173131 = 0;

            BeforeRet: {
              var Temporary1 = pHEX60gensym26_1493173128;
              if (ConstSet265[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'index\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1493172229)); }
              var indexHEX60gensym26_1493173132 = Temporary1.index;
              if ((indexHEX60gensym26_1493173132 < 0)) {
              indexHEX60gensym26_1493173132 = addInt(indexHEX60gensym26_1493173132, cHEX60gensym26_1493173130.ml);
              }
              
              if (((indexHEX60gensym26_1493173132 < 0) || (cHEX60gensym26_1493173130.ml <= indexHEX60gensym26_1493173132))) {
              result_1493173131 = (-1);
              break BeforeRet;
              }
              
              var tmpTuple_1493173138 = nimCopy(null, cHEX60gensym26_1493173130.matches[chckIndx(indexHEX60gensym26_1493173132, 0, (cHEX60gensym26_1493173130.matches).length - 1)], NTI1493172814);
              var aHEX60gensym26_1493173139 = tmpTuple_1493173138["Field0"];
              var bHEX60gensym26_1493173140 = tmpTuple_1493173138["Field1"];
              var nHEX60gensym26_1493173141 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              switch (pHEX60gensym26_1493173128.kind) {
              case 25:
                nHEX60gensym26_1493173141 = nimCopy(nHEX60gensym26_1493173141, {kind: 9, term: substr_33558079(sHEX60gensym26_1493173127, aHEX60gensym26_1493173139, bHEX60gensym26_1493173140), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);
                break;
              case 27:
                nHEX60gensym26_1493173141 = nimCopy(nHEX60gensym26_1493173141, {kind: 11, term: substr_33558079(sHEX60gensym26_1493173127, aHEX60gensym26_1493173139, bHEX60gensym26_1493173140), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);
                break;
              case 26:
                nHEX60gensym26_1493173141 = nimCopy(nHEX60gensym26_1493173141, {kind: 10, term: substr_33558079(sHEX60gensym26_1493173127, aHEX60gensym26_1493173139, bHEX60gensym26_1493173140), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);
                break;
              default: 
                if (true) {
                failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,53,56,50,44,32,49,57,41,32,96,102,97,108,115,101,96,32,105,109,112,111,115,115,105,98,108,101,32,99,97,115,101]);
                }
                
                break;
              }
              result_1493173131 = matchIt_1493173120(sHEX60gensym26_1493173127, nHEX60gensym26_1493173141, startHEX60gensym26_1493173129, cHEX60gensym26_1493173130);
            };

            return result_1493173131;

          }

      var result_1493173125 = 0;

      BeforeRet: {
        switch (pHEX60gensym26_1493173122.kind) {
        case 0:
          result_1493173125 = 0;
          break;
        case 1:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          result_1493173125 = 1;
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 2:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          result_1493173125 = runeLenAt_1040194584(sHEX60gensym26_1493173121, chckRange(startHEX60gensym26_1493173123, 0, 2147483647));
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 4:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          var aHEX60gensym26_1493173147 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
          aHEX60gensym26_1493173147 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 1);
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
          aHEX60gensym26_1493173147 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 2);
          }
          else {
            aHEX60gensym26_1493173147 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
          aHEX60gensym26_1493173147 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 3);
          }
          else {
            aHEX60gensym26_1493173147 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
          aHEX60gensym26_1493173147 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 4);
          }
          else {
            aHEX60gensym26_1493173147 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
          aHEX60gensym26_1493173147 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 5);
          }
          else {
            aHEX60gensym26_1493173147 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
          aHEX60gensym26_1493173147 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 6);
          }
          else {
            aHEX60gensym26_1493173147 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
            aHEX60gensym26_1493173147 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
            result_1493173125 = addInt(result_1493173125, 1);
          }
          }}}}}
          if (nucisAlpha(aHEX60gensym26_1493173147)) {
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          }
          else {
            result_1493173125 = (-1);
          }
          
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 5:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          var aHEX60gensym26_1493173374 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
          aHEX60gensym26_1493173374 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 1);
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
          aHEX60gensym26_1493173374 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 2);
          }
          else {
            aHEX60gensym26_1493173374 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
          aHEX60gensym26_1493173374 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 3);
          }
          else {
            aHEX60gensym26_1493173374 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
          aHEX60gensym26_1493173374 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 4);
          }
          else {
            aHEX60gensym26_1493173374 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
          aHEX60gensym26_1493173374 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 5);
          }
          else {
            aHEX60gensym26_1493173374 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
          aHEX60gensym26_1493173374 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 6);
          }
          else {
            aHEX60gensym26_1493173374 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
            aHEX60gensym26_1493173374 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
            result_1493173125 = addInt(result_1493173125, 1);
          }
          }}}}}
          if (nucisLower(aHEX60gensym26_1493173374)) {
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          }
          else {
            result_1493173125 = (-1);
          }
          
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 6:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          var aHEX60gensym26_1493173601 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
          aHEX60gensym26_1493173601 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 1);
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
          aHEX60gensym26_1493173601 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 2);
          }
          else {
            aHEX60gensym26_1493173601 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
          aHEX60gensym26_1493173601 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 3);
          }
          else {
            aHEX60gensym26_1493173601 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
          aHEX60gensym26_1493173601 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 4);
          }
          else {
            aHEX60gensym26_1493173601 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
          aHEX60gensym26_1493173601 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 5);
          }
          else {
            aHEX60gensym26_1493173601 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
          aHEX60gensym26_1493173601 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 6);
          }
          else {
            aHEX60gensym26_1493173601 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
            aHEX60gensym26_1493173601 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
            result_1493173125 = addInt(result_1493173125, 1);
          }
          }}}}}
          if (nucisUpper(aHEX60gensym26_1493173601)) {
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          }
          else {
            result_1493173125 = (-1);
          }
          
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 7:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          var aHEX60gensym26_1493173828 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
          aHEX60gensym26_1493173828 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 1);
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
          aHEX60gensym26_1493173828 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 2);
          }
          else {
            aHEX60gensym26_1493173828 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
          aHEX60gensym26_1493173828 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 3);
          }
          else {
            aHEX60gensym26_1493173828 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
          aHEX60gensym26_1493173828 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 4);
          }
          else {
            aHEX60gensym26_1493173828 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
          aHEX60gensym26_1493173828 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 5);
          }
          else {
            aHEX60gensym26_1493173828 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
          aHEX60gensym26_1493173828 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 6);
          }
          else {
            aHEX60gensym26_1493173828 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
            aHEX60gensym26_1493173828 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
            result_1493173125 = addInt(result_1493173125, 1);
          }
          }}}}}
          if (nucisTitle(aHEX60gensym26_1493173828)) {
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          }
          else {
            result_1493173125 = (-1);
          }
          
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 8:
          if ((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) {
          var aHEX60gensym26_1493174055 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
          aHEX60gensym26_1493174055 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 1);
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
          aHEX60gensym26_1493174055 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 2);
          }
          else {
            aHEX60gensym26_1493174055 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
          aHEX60gensym26_1493174055 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 3);
          }
          else {
            aHEX60gensym26_1493174055 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
          aHEX60gensym26_1493174055 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 4);
          }
          else {
            aHEX60gensym26_1493174055 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
          aHEX60gensym26_1493174055 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 5);
          }
          else {
            aHEX60gensym26_1493174055 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
          if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
          aHEX60gensym26_1493174055 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          result_1493173125 = addInt(result_1493173125, 6);
          }
          else {
            aHEX60gensym26_1493174055 = 65533;
            result_1493173125 = addInt(result_1493173125, 1);
          }
          
          }
          else {
            aHEX60gensym26_1493174055 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
            result_1493173125 = addInt(result_1493173125, 1);
          }
          }}}}}
          if (nucisWhiteSpace(aHEX60gensym26_1493174055)) {
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          }
          else {
            result_1493173125 = (-1);
          }
          
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 20:
          result_1493173125 = subInt((sHEX60gensym26_1493173121).length, startHEX60gensym26_1493173123);
          break;
        case 3:
          if (((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length) && (sHEX60gensym26_1493173121[chckIndx(startHEX60gensym26_1493173123, 0, (sHEX60gensym26_1493173121).length - 1)] == 10))) {
          result_1493173125 = 1;
          }
          else {
          if (((startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length) && (sHEX60gensym26_1493173121[chckIndx(startHEX60gensym26_1493173123, 0, (sHEX60gensym26_1493173121).length - 1)] == 13))) {
          if (((addInt(startHEX60gensym26_1493173123, 1) < (sHEX60gensym26_1493173121).length) && (sHEX60gensym26_1493173121[chckIndx(addInt(startHEX60gensym26_1493173123, 1), 0, (sHEX60gensym26_1493173121).length - 1)] == 10))) {
          result_1493173125 = 2;
          }
          else {
            result_1493173125 = 1;
          }
          
          }
          else {
            result_1493173125 = (-1);
          }
          }
          break;
        case 9:
          var Temporary1 = pHEX60gensym26_1493173122;
          if (ConstSet175[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1493172229)); }
          result_1493173125 = (Temporary1.term).length;
          Label2: {
            var iHEX60gensym26_1493174286 = 0;
            var colontmp__587203573 = 0;
            colontmp__587203573 = subInt(result_1493173125, 1);
            var res_587203574 = 0;
            Label3: {
                Label4: while (true) {
                if (!(res_587203574 <= colontmp__587203573)) break Label4;
                  iHEX60gensym26_1493174286 = res_587203574;
                    if (((sHEX60gensym26_1493173121).length <= addInt(startHEX60gensym26_1493173123, iHEX60gensym26_1493174286))) Temporary5 = true; else {                      var Temporary6 = pHEX60gensym26_1493173122;
                      if (ConstSet176[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1493172229)); }
                      Temporary5 = !(((Temporary7 = Temporary6.term, Temporary7)[chckIndx(iHEX60gensym26_1493174286, 0, (Temporary7).length - 1)] == sHEX60gensym26_1493173121[chckIndx(addInt(startHEX60gensym26_1493173123, iHEX60gensym26_1493174286), 0, (sHEX60gensym26_1493173121).length - 1)]));                    }                  if (Temporary5) {
                  result_1493173125 = (-1);
                  break Label2;
                  }
                  
                  res_587203574 = addInt(res_587203574, 1);
                }
            };
          };
          break;
        case 10:
          var iHEX60gensym26_1493174287 = 0;
          var aHEX60gensym26_1493174288 = 0;
          var bHEX60gensym26_1493174289 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          Label8: {
              Label9: while (true) {
                var Temporary10 = pHEX60gensym26_1493173122;
                if (ConstSet177[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1493172229)); }
              if (!(iHEX60gensym26_1493174287 < (Temporary10.term).length)) break Label9;
                if (((sHEX60gensym26_1493173121).length <= result_1493173125)) {
                result_1493173125 = (-1);
                break Label8;
                }
                
                  var Temporary11 = pHEX60gensym26_1493173122;
                  if (ConstSet178[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1493172229)); }
                if (((Temporary12 = Temporary11.term, Temporary12)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary12).length - 1)] <= 127)) {
                var Temporary13 = pHEX60gensym26_1493173122;
                if (ConstSet179[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI1493172229)); }
                aHEX60gensym26_1493174288 = chckRange((Temporary14 = Temporary13.term, Temporary14)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary14).length - 1)], (-2147483648), 2147483647);
                iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                else {
                  var Temporary15 = pHEX60gensym26_1493173122;
                  if (ConstSet180[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1493172229)); }
                if ((((Temporary16 = Temporary15.term, Temporary16)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary16).length - 1)] >>> 5) == 6)) {
                  var Temporary17 = pHEX60gensym26_1493173122;
                  if (ConstSet181[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1493172229)); }
                if ((iHEX60gensym26_1493174287 <= subInt((Temporary17.term).length, 2))) {
                var Temporary18 = pHEX60gensym26_1493173122;
                if (ConstSet182[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1493172229)); }
                var Temporary20 = pHEX60gensym26_1493173122;
                if (ConstSet183[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI1493172229)); }
                aHEX60gensym26_1493174288 = chckRange((((((((Temporary19 = Temporary18.term, Temporary19)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary19).length - 1)] & 31) >>> 0) << 6) >>> 0) | (((Temporary21 = Temporary20.term, Temporary21)[chckIndx(addInt(iHEX60gensym26_1493174287, 1), 0, (Temporary21).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 2);
                }
                else {
                  aHEX60gensym26_1493174288 = 65533;
                  iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                
                }
                else {
                  var Temporary22 = pHEX60gensym26_1493173122;
                  if (ConstSet184[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI1493172229)); }
                if ((((Temporary23 = Temporary22.term, Temporary23)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary23).length - 1)] >>> 4) == 14)) {
                  var Temporary24 = pHEX60gensym26_1493173122;
                  if (ConstSet185[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI1493172229)); }
                if ((iHEX60gensym26_1493174287 <= subInt((Temporary24.term).length, 3))) {
                var Temporary25 = pHEX60gensym26_1493173122;
                if (ConstSet186[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI1493172229)); }
                var Temporary27 = pHEX60gensym26_1493173122;
                if (ConstSet187[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI1493172229)); }
                var Temporary29 = pHEX60gensym26_1493173122;
                if (ConstSet188[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI1493172229)); }
                aHEX60gensym26_1493174288 = chckRange((((((((((Temporary26 = Temporary25.term, Temporary26)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary26).length - 1)] & 15) >>> 0) << 12) >>> 0) | (((((Temporary28 = Temporary27.term, Temporary28)[chckIndx(addInt(iHEX60gensym26_1493174287, 1), 0, (Temporary28).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary30 = Temporary29.term, Temporary30)[chckIndx(addInt(iHEX60gensym26_1493174287, 2), 0, (Temporary30).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 3);
                }
                else {
                  aHEX60gensym26_1493174288 = 65533;
                  iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                
                }
                else {
                  var Temporary31 = pHEX60gensym26_1493173122;
                  if (ConstSet189[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI1493172229)); }
                if ((((Temporary32 = Temporary31.term, Temporary32)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary32).length - 1)] >>> 3) == 30)) {
                  var Temporary33 = pHEX60gensym26_1493173122;
                  if (ConstSet190[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI1493172229)); }
                if ((iHEX60gensym26_1493174287 <= subInt((Temporary33.term).length, 4))) {
                var Temporary34 = pHEX60gensym26_1493173122;
                if (ConstSet191[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI1493172229)); }
                var Temporary36 = pHEX60gensym26_1493173122;
                if (ConstSet192[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI1493172229)); }
                var Temporary38 = pHEX60gensym26_1493173122;
                if (ConstSet193[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI1493172229)); }
                var Temporary40 = pHEX60gensym26_1493173122;
                if (ConstSet194[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI1493172229)); }
                aHEX60gensym26_1493174288 = chckRange((((((((((((Temporary35 = Temporary34.term, Temporary35)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary35).length - 1)] & 7) >>> 0) << 18) >>> 0) | (((((Temporary37 = Temporary36.term, Temporary37)[chckIndx(addInt(iHEX60gensym26_1493174287, 1), 0, (Temporary37).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary39 = Temporary38.term, Temporary39)[chckIndx(addInt(iHEX60gensym26_1493174287, 2), 0, (Temporary39).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary41 = Temporary40.term, Temporary41)[chckIndx(addInt(iHEX60gensym26_1493174287, 3), 0, (Temporary41).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 4);
                }
                else {
                  aHEX60gensym26_1493174288 = 65533;
                  iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                
                }
                else {
                  var Temporary42 = pHEX60gensym26_1493173122;
                  if (ConstSet195[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI1493172229)); }
                if ((((Temporary43 = Temporary42.term, Temporary43)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary43).length - 1)] >>> 2) == 62)) {
                  var Temporary44 = pHEX60gensym26_1493173122;
                  if (ConstSet196[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI1493172229)); }
                if ((iHEX60gensym26_1493174287 <= subInt((Temporary44.term).length, 5))) {
                var Temporary45 = pHEX60gensym26_1493173122;
                if (ConstSet197[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI1493172229)); }
                var Temporary47 = pHEX60gensym26_1493173122;
                if (ConstSet198[Temporary47.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary47.kind, NTI1493172229)); }
                var Temporary49 = pHEX60gensym26_1493173122;
                if (ConstSet199[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI1493172229)); }
                var Temporary51 = pHEX60gensym26_1493173122;
                if (ConstSet200[Temporary51.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary51.kind, NTI1493172229)); }
                var Temporary53 = pHEX60gensym26_1493173122;
                if (ConstSet201[Temporary53.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary53.kind, NTI1493172229)); }
                aHEX60gensym26_1493174288 = chckRange((((((((((((((Temporary46 = Temporary45.term, Temporary46)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary46).length - 1)] & 3) >>> 0) << 24) >>> 0) | (((((Temporary48 = Temporary47.term, Temporary48)[chckIndx(addInt(iHEX60gensym26_1493174287, 1), 0, (Temporary48).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary50 = Temporary49.term, Temporary50)[chckIndx(addInt(iHEX60gensym26_1493174287, 2), 0, (Temporary50).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary52 = Temporary51.term, Temporary52)[chckIndx(addInt(iHEX60gensym26_1493174287, 3), 0, (Temporary52).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary54 = Temporary53.term, Temporary54)[chckIndx(addInt(iHEX60gensym26_1493174287, 4), 0, (Temporary54).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 5);
                }
                else {
                  aHEX60gensym26_1493174288 = 65533;
                  iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                
                }
                else {
                  var Temporary55 = pHEX60gensym26_1493173122;
                  if (ConstSet202[Temporary55.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary55.kind, NTI1493172229)); }
                if ((((Temporary56 = Temporary55.term, Temporary56)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary56).length - 1)] >>> 1) == 126)) {
                  var Temporary57 = pHEX60gensym26_1493173122;
                  if (ConstSet203[Temporary57.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary57.kind, NTI1493172229)); }
                if ((iHEX60gensym26_1493174287 <= subInt((Temporary57.term).length, 6))) {
                var Temporary58 = pHEX60gensym26_1493173122;
                if (ConstSet204[Temporary58.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary58.kind, NTI1493172229)); }
                var Temporary60 = pHEX60gensym26_1493173122;
                if (ConstSet205[Temporary60.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary60.kind, NTI1493172229)); }
                var Temporary62 = pHEX60gensym26_1493173122;
                if (ConstSet206[Temporary62.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary62.kind, NTI1493172229)); }
                var Temporary64 = pHEX60gensym26_1493173122;
                if (ConstSet207[Temporary64.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary64.kind, NTI1493172229)); }
                var Temporary66 = pHEX60gensym26_1493173122;
                if (ConstSet208[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI1493172229)); }
                var Temporary68 = pHEX60gensym26_1493173122;
                if (ConstSet209[Temporary68.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary68.kind, NTI1493172229)); }
                aHEX60gensym26_1493174288 = chckRange((((((((((((((((Temporary59 = Temporary58.term, Temporary59)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary59).length - 1)] & 1) >>> 0) << 30) >>> 0) | (((((Temporary61 = Temporary60.term, Temporary61)[chckIndx(addInt(iHEX60gensym26_1493174287, 1), 0, (Temporary61).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | (((((Temporary63 = Temporary62.term, Temporary63)[chckIndx(addInt(iHEX60gensym26_1493174287, 2), 0, (Temporary63).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary65 = Temporary64.term, Temporary65)[chckIndx(addInt(iHEX60gensym26_1493174287, 3), 0, (Temporary65).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary67 = Temporary66.term, Temporary67)[chckIndx(addInt(iHEX60gensym26_1493174287, 4), 0, (Temporary67).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary69 = Temporary68.term, Temporary69)[chckIndx(addInt(iHEX60gensym26_1493174287, 5), 0, (Temporary69).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 6);
                }
                else {
                  aHEX60gensym26_1493174288 = 65533;
                  iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                
                }
                else {
                  var Temporary70 = pHEX60gensym26_1493173122;
                  if (ConstSet210[Temporary70.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary70.kind, NTI1493172229)); }
                  aHEX60gensym26_1493174288 = chckRange((Temporary71 = Temporary70.term, Temporary71)[chckIndx(iHEX60gensym26_1493174287, 0, (Temporary71).length - 1)], (-2147483648), 2147483647);
                  iHEX60gensym26_1493174287 = addInt(iHEX60gensym26_1493174287, 1);
                }
                }}}}}
                if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
                bHEX60gensym26_1493174289 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
                result_1493173125 = addInt(result_1493173125, 1);
                }
                else {
                if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
                if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
                bHEX60gensym26_1493174289 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                result_1493173125 = addInt(result_1493173125, 2);
                }
                else {
                  bHEX60gensym26_1493174289 = 65533;
                  result_1493173125 = addInt(result_1493173125, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
                if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
                bHEX60gensym26_1493174289 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                result_1493173125 = addInt(result_1493173125, 3);
                }
                else {
                  bHEX60gensym26_1493174289 = 65533;
                  result_1493173125 = addInt(result_1493173125, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
                if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
                bHEX60gensym26_1493174289 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                result_1493173125 = addInt(result_1493173125, 4);
                }
                else {
                  bHEX60gensym26_1493174289 = 65533;
                  result_1493173125 = addInt(result_1493173125, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
                if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
                bHEX60gensym26_1493174289 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                result_1493173125 = addInt(result_1493173125, 5);
                }
                else {
                  bHEX60gensym26_1493174289 = 65533;
                  result_1493173125 = addInt(result_1493173125, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
                if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
                bHEX60gensym26_1493174289 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                result_1493173125 = addInt(result_1493173125, 6);
                }
                else {
                  bHEX60gensym26_1493174289 = 65533;
                  result_1493173125 = addInt(result_1493173125, 1);
                }
                
                }
                else {
                  bHEX60gensym26_1493174289 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
                  result_1493173125 = addInt(result_1493173125, 1);
                }
                }}}}}
                if (!(HEX3DHEX3D_1040188400(nuctoLower(aHEX60gensym26_1493174288), nuctoLower(bHEX60gensym26_1493174289)))) {
                result_1493173125 = (-1);
                break Label8;
                }
                
              }
          };
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          break;
        case 11:
          var iHEX60gensym26_1493174737 = 0;
          var aHEX60gensym26_1493174738 = 0;
          var bHEX60gensym26_1493174739 = 0;
          result_1493173125 = startHEX60gensym26_1493173123;
          Label72: {
              Label73: while (true) {
                var Temporary74 = pHEX60gensym26_1493173122;
                if (ConstSet211[Temporary74.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary74.kind, NTI1493172229)); }
              if (!(iHEX60gensym26_1493174737 < (Temporary74.term).length)) break Label73;
                Label75: {
                    Label76: while (true) {
                      var Temporary77 = pHEX60gensym26_1493173122;
                      if (ConstSet212[Temporary77.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary77.kind, NTI1493172229)); }
                    if (!(iHEX60gensym26_1493174737 < (Temporary77.term).length)) break Label76;
                        var Temporary78 = pHEX60gensym26_1493173122;
                        if (ConstSet213[Temporary78.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary78.kind, NTI1493172229)); }
                      if (((Temporary79 = Temporary78.term, Temporary79)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary79).length - 1)] <= 127)) {
                      var Temporary80 = pHEX60gensym26_1493173122;
                      if (ConstSet214[Temporary80.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary80.kind, NTI1493172229)); }
                      aHEX60gensym26_1493174738 = chckRange((Temporary81 = Temporary80.term, Temporary81)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary81).length - 1)], (-2147483648), 2147483647);
                      iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      else {
                        var Temporary82 = pHEX60gensym26_1493173122;
                        if (ConstSet215[Temporary82.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary82.kind, NTI1493172229)); }
                      if ((((Temporary83 = Temporary82.term, Temporary83)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary83).length - 1)] >>> 5) == 6)) {
                        var Temporary84 = pHEX60gensym26_1493173122;
                        if (ConstSet216[Temporary84.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary84.kind, NTI1493172229)); }
                      if ((iHEX60gensym26_1493174737 <= subInt((Temporary84.term).length, 2))) {
                      var Temporary85 = pHEX60gensym26_1493173122;
                      if (ConstSet217[Temporary85.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary85.kind, NTI1493172229)); }
                      var Temporary87 = pHEX60gensym26_1493173122;
                      if (ConstSet218[Temporary87.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary87.kind, NTI1493172229)); }
                      aHEX60gensym26_1493174738 = chckRange((((((((Temporary86 = Temporary85.term, Temporary86)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary86).length - 1)] & 31) >>> 0) << 6) >>> 0) | (((Temporary88 = Temporary87.term, Temporary88)[chckIndx(addInt(iHEX60gensym26_1493174737, 1), 0, (Temporary88).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 2);
                      }
                      else {
                        aHEX60gensym26_1493174738 = 65533;
                        iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      
                      }
                      else {
                        var Temporary89 = pHEX60gensym26_1493173122;
                        if (ConstSet219[Temporary89.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary89.kind, NTI1493172229)); }
                      if ((((Temporary90 = Temporary89.term, Temporary90)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary90).length - 1)] >>> 4) == 14)) {
                        var Temporary91 = pHEX60gensym26_1493173122;
                        if (ConstSet220[Temporary91.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary91.kind, NTI1493172229)); }
                      if ((iHEX60gensym26_1493174737 <= subInt((Temporary91.term).length, 3))) {
                      var Temporary92 = pHEX60gensym26_1493173122;
                      if (ConstSet221[Temporary92.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary92.kind, NTI1493172229)); }
                      var Temporary94 = pHEX60gensym26_1493173122;
                      if (ConstSet222[Temporary94.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary94.kind, NTI1493172229)); }
                      var Temporary96 = pHEX60gensym26_1493173122;
                      if (ConstSet223[Temporary96.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary96.kind, NTI1493172229)); }
                      aHEX60gensym26_1493174738 = chckRange((((((((((Temporary93 = Temporary92.term, Temporary93)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary93).length - 1)] & 15) >>> 0) << 12) >>> 0) | (((((Temporary95 = Temporary94.term, Temporary95)[chckIndx(addInt(iHEX60gensym26_1493174737, 1), 0, (Temporary95).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary97 = Temporary96.term, Temporary97)[chckIndx(addInt(iHEX60gensym26_1493174737, 2), 0, (Temporary97).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 3);
                      }
                      else {
                        aHEX60gensym26_1493174738 = 65533;
                        iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      
                      }
                      else {
                        var Temporary98 = pHEX60gensym26_1493173122;
                        if (ConstSet224[Temporary98.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary98.kind, NTI1493172229)); }
                      if ((((Temporary99 = Temporary98.term, Temporary99)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary99).length - 1)] >>> 3) == 30)) {
                        var Temporary100 = pHEX60gensym26_1493173122;
                        if (ConstSet225[Temporary100.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary100.kind, NTI1493172229)); }
                      if ((iHEX60gensym26_1493174737 <= subInt((Temporary100.term).length, 4))) {
                      var Temporary101 = pHEX60gensym26_1493173122;
                      if (ConstSet226[Temporary101.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary101.kind, NTI1493172229)); }
                      var Temporary103 = pHEX60gensym26_1493173122;
                      if (ConstSet227[Temporary103.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary103.kind, NTI1493172229)); }
                      var Temporary105 = pHEX60gensym26_1493173122;
                      if (ConstSet228[Temporary105.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary105.kind, NTI1493172229)); }
                      var Temporary107 = pHEX60gensym26_1493173122;
                      if (ConstSet229[Temporary107.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary107.kind, NTI1493172229)); }
                      aHEX60gensym26_1493174738 = chckRange((((((((((((Temporary102 = Temporary101.term, Temporary102)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary102).length - 1)] & 7) >>> 0) << 18) >>> 0) | (((((Temporary104 = Temporary103.term, Temporary104)[chckIndx(addInt(iHEX60gensym26_1493174737, 1), 0, (Temporary104).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary106 = Temporary105.term, Temporary106)[chckIndx(addInt(iHEX60gensym26_1493174737, 2), 0, (Temporary106).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary108 = Temporary107.term, Temporary108)[chckIndx(addInt(iHEX60gensym26_1493174737, 3), 0, (Temporary108).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 4);
                      }
                      else {
                        aHEX60gensym26_1493174738 = 65533;
                        iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      
                      }
                      else {
                        var Temporary109 = pHEX60gensym26_1493173122;
                        if (ConstSet230[Temporary109.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary109.kind, NTI1493172229)); }
                      if ((((Temporary110 = Temporary109.term, Temporary110)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary110).length - 1)] >>> 2) == 62)) {
                        var Temporary111 = pHEX60gensym26_1493173122;
                        if (ConstSet231[Temporary111.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary111.kind, NTI1493172229)); }
                      if ((iHEX60gensym26_1493174737 <= subInt((Temporary111.term).length, 5))) {
                      var Temporary112 = pHEX60gensym26_1493173122;
                      if (ConstSet232[Temporary112.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary112.kind, NTI1493172229)); }
                      var Temporary114 = pHEX60gensym26_1493173122;
                      if (ConstSet233[Temporary114.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary114.kind, NTI1493172229)); }
                      var Temporary116 = pHEX60gensym26_1493173122;
                      if (ConstSet234[Temporary116.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary116.kind, NTI1493172229)); }
                      var Temporary118 = pHEX60gensym26_1493173122;
                      if (ConstSet235[Temporary118.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary118.kind, NTI1493172229)); }
                      var Temporary120 = pHEX60gensym26_1493173122;
                      if (ConstSet236[Temporary120.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary120.kind, NTI1493172229)); }
                      aHEX60gensym26_1493174738 = chckRange((((((((((((((Temporary113 = Temporary112.term, Temporary113)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary113).length - 1)] & 3) >>> 0) << 24) >>> 0) | (((((Temporary115 = Temporary114.term, Temporary115)[chckIndx(addInt(iHEX60gensym26_1493174737, 1), 0, (Temporary115).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary117 = Temporary116.term, Temporary117)[chckIndx(addInt(iHEX60gensym26_1493174737, 2), 0, (Temporary117).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary119 = Temporary118.term, Temporary119)[chckIndx(addInt(iHEX60gensym26_1493174737, 3), 0, (Temporary119).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary121 = Temporary120.term, Temporary121)[chckIndx(addInt(iHEX60gensym26_1493174737, 4), 0, (Temporary121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 5);
                      }
                      else {
                        aHEX60gensym26_1493174738 = 65533;
                        iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      
                      }
                      else {
                        var Temporary122 = pHEX60gensym26_1493173122;
                        if (ConstSet237[Temporary122.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary122.kind, NTI1493172229)); }
                      if ((((Temporary123 = Temporary122.term, Temporary123)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary123).length - 1)] >>> 1) == 126)) {
                        var Temporary124 = pHEX60gensym26_1493173122;
                        if (ConstSet238[Temporary124.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary124.kind, NTI1493172229)); }
                      if ((iHEX60gensym26_1493174737 <= subInt((Temporary124.term).length, 6))) {
                      var Temporary125 = pHEX60gensym26_1493173122;
                      if (ConstSet239[Temporary125.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary125.kind, NTI1493172229)); }
                      var Temporary127 = pHEX60gensym26_1493173122;
                      if (ConstSet240[Temporary127.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary127.kind, NTI1493172229)); }
                      var Temporary129 = pHEX60gensym26_1493173122;
                      if (ConstSet241[Temporary129.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary129.kind, NTI1493172229)); }
                      var Temporary131 = pHEX60gensym26_1493173122;
                      if (ConstSet242[Temporary131.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary131.kind, NTI1493172229)); }
                      var Temporary133 = pHEX60gensym26_1493173122;
                      if (ConstSet243[Temporary133.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary133.kind, NTI1493172229)); }
                      var Temporary135 = pHEX60gensym26_1493173122;
                      if (ConstSet244[Temporary135.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary135.kind, NTI1493172229)); }
                      aHEX60gensym26_1493174738 = chckRange((((((((((((((((Temporary126 = Temporary125.term, Temporary126)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary126).length - 1)] & 1) >>> 0) << 30) >>> 0) | (((((Temporary128 = Temporary127.term, Temporary128)[chckIndx(addInt(iHEX60gensym26_1493174737, 1), 0, (Temporary128).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | (((((Temporary130 = Temporary129.term, Temporary130)[chckIndx(addInt(iHEX60gensym26_1493174737, 2), 0, (Temporary130).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary132 = Temporary131.term, Temporary132)[chckIndx(addInt(iHEX60gensym26_1493174737, 3), 0, (Temporary132).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary134 = Temporary133.term, Temporary134)[chckIndx(addInt(iHEX60gensym26_1493174737, 4), 0, (Temporary134).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary136 = Temporary135.term, Temporary136)[chckIndx(addInt(iHEX60gensym26_1493174737, 5), 0, (Temporary136).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 6);
                      }
                      else {
                        aHEX60gensym26_1493174738 = 65533;
                        iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      
                      }
                      else {
                        var Temporary137 = pHEX60gensym26_1493173122;
                        if (ConstSet245[Temporary137.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary137.kind, NTI1493172229)); }
                        aHEX60gensym26_1493174738 = chckRange((Temporary138 = Temporary137.term, Temporary138)[chckIndx(iHEX60gensym26_1493174737, 0, (Temporary138).length - 1)], (-2147483648), 2147483647);
                        iHEX60gensym26_1493174737 = addInt(iHEX60gensym26_1493174737, 1);
                      }
                      }}}}}
                      if (!(HEX3DHEX3D_1040188400(aHEX60gensym26_1493174738, 95))) {
                      break Label75;
                      }
                      
                    }
                };
                Label139: {
                    Label140: while (true) {
                    if (!(result_1493173125 < (sHEX60gensym26_1493173121).length)) break Label140;
                      if ((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] <= 127)) {
                      bHEX60gensym26_1493174739 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
                      result_1493173125 = addInt(result_1493173125, 1);
                      }
                      else {
                      if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 5) == 6)) {
                      if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 2))) {
                      bHEX60gensym26_1493174739 = chckRange(((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      result_1493173125 = addInt(result_1493173125, 2);
                      }
                      else {
                        bHEX60gensym26_1493174739 = 65533;
                        result_1493173125 = addInt(result_1493173125, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 4) == 14)) {
                      if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 3))) {
                      bHEX60gensym26_1493174739 = chckRange(((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      result_1493173125 = addInt(result_1493173125, 3);
                      }
                      else {
                        bHEX60gensym26_1493174739 = 65533;
                        result_1493173125 = addInt(result_1493173125, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 3) == 30)) {
                      if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 4))) {
                      bHEX60gensym26_1493174739 = chckRange(((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      result_1493173125 = addInt(result_1493173125, 4);
                      }
                      else {
                        bHEX60gensym26_1493174739 = 65533;
                        result_1493173125 = addInt(result_1493173125, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 2) == 62)) {
                      if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 5))) {
                      bHEX60gensym26_1493174739 = chckRange(((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      result_1493173125 = addInt(result_1493173125, 5);
                      }
                      else {
                        bHEX60gensym26_1493174739 = 65533;
                        result_1493173125 = addInt(result_1493173125, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] >>> 1) == 126)) {
                      if ((result_1493173125 <= subInt((sHEX60gensym26_1493173121).length, 6))) {
                      bHEX60gensym26_1493174739 = chckRange(((((((((((((((sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 1), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 2), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 3), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 4), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((sHEX60gensym26_1493173121[chckIndx(addInt(result_1493173125, 5), 0, (sHEX60gensym26_1493173121).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
                      result_1493173125 = addInt(result_1493173125, 6);
                      }
                      else {
                        bHEX60gensym26_1493174739 = 65533;
                        result_1493173125 = addInt(result_1493173125, 1);
                      }
                      
                      }
                      else {
                        bHEX60gensym26_1493174739 = chckRange(sHEX60gensym26_1493173121[chckIndx(result_1493173125, 0, (sHEX60gensym26_1493173121).length - 1)], (-2147483648), 2147483647);
                        result_1493173125 = addInt(result_1493173125, 1);
                      }
                      }}}}}
                      if (!(HEX3DHEX3D_1040188400(bHEX60gensym26_1493174739, 95))) {
                      break Label139;
                      }
                      
                    }
                };
                if (((sHEX60gensym26_1493173121).length <= result_1493173125)) {
                  var Temporary141 = pHEX60gensym26_1493173122;
                  if (ConstSet246[Temporary141.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary141.kind, NTI1493172229)); }
                if (((Temporary141.term).length <= iHEX60gensym26_1493174737)) {
                break Label72;
                }
                else {
                  result_1493173125 = (-1);
                  break Label72;
                }
                
                }
                else {
                if (!(HEX3DHEX3D_1040188400(nuctoLower(aHEX60gensym26_1493174738), nuctoLower(bHEX60gensym26_1493174739)))) {
                result_1493173125 = (-1);
                break Label72;
                }
                }
              }
          };
          result_1493173125 = subInt(result_1493173125, startHEX60gensym26_1493173123);
          break;
        case 12:
            if (!(startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) Temporary142 = false; else {              var Temporary143 = pHEX60gensym26_1493173122;
              if (ConstSet247[Temporary143.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary143.kind, NTI1493172229)); }
              Temporary142 = (Temporary143.ch == sHEX60gensym26_1493173121[chckIndx(startHEX60gensym26_1493173123, 0, (sHEX60gensym26_1493173121).length - 1)]);            }          if (Temporary142) {
          result_1493173125 = 1;
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 13:
            if (!(startHEX60gensym26_1493173123 < (sHEX60gensym26_1493173121).length)) Temporary144 = false; else {              var Temporary145 = pHEX60gensym26_1493173122;
              if (ConstSet248[Temporary145.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary145.kind, NTI1493172229)); }
              Temporary144 = (Temporary145.charChoice[sHEX60gensym26_1493173121[chckIndx(startHEX60gensym26_1493173123, 0, (sHEX60gensym26_1493173121).length - 1)]] != undefined);            }          if (Temporary144) {
          result_1493173125 = 1;
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 14:
          var oldMlHEX60gensym26_1493175191 = cHEX60gensym26_1493173124.ml;
          var Temporary146 = pHEX60gensym26_1493173122;
          if (ConstSet249[Temporary146.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nt\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary146.kind, NTI1493172229)); }
          result_1493173125 = matchIt_1493173120(sHEX60gensym26_1493173121, Temporary146.nt.rule, startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
          if ((result_1493173125 < 0)) {
          cHEX60gensym26_1493173124.ml = oldMlHEX60gensym26_1493175191;
          }
          
          break;
        case 15:
          var oldMlHEX60gensym26_1493175192 = cHEX60gensym26_1493173124.ml;
          result_1493173125 = 0;
          Label147: {
            var iHEX60gensym26_1493175200 = 0;
            var colontmp__587203581 = 0;
            var Temporary148 = pHEX60gensym26_1493173122;
            if (ConstSet250[Temporary148.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary148.kind, NTI1493172229)); }
            colontmp__587203581 = (Temporary148.sons).length - 1;
            var res_587203582 = 0;
            Label149: {
                Label150: while (true) {
                if (!(res_587203582 <= colontmp__587203581)) break Label150;
                  iHEX60gensym26_1493175200 = res_587203582;
                  var Temporary151 = pHEX60gensym26_1493173122;
                  if (ConstSet251[Temporary151.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary151.kind, NTI1493172229)); }
                  var xHEX60gensym26_1493175201 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary152 = Temporary151.sons, Temporary152)[chckIndx(iHEX60gensym26_1493175200, 0, (Temporary152).length - 1)], addInt(startHEX60gensym26_1493173123, result_1493173125), cHEX60gensym26_1493173124);
                  if ((xHEX60gensym26_1493175201 < 0)) {
                  cHEX60gensym26_1493173124.ml = oldMlHEX60gensym26_1493175192;
                  result_1493173125 = (-1);
                  break Label147;
                  }
                  else {
                  result_1493173125 = addInt(result_1493173125, xHEX60gensym26_1493175201);
                  }
                  
                  res_587203582 = addInt(res_587203582, 1);
                }
            };
          };
          break;
        case 16:
          var oldMlHEX60gensym26_1493175207 = cHEX60gensym26_1493173124.ml;
          Label153: {
            var iHEX60gensym26_1493175215 = 0;
            var colontmp__587203585 = 0;
            var Temporary154 = pHEX60gensym26_1493173122;
            if (ConstSet252[Temporary154.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary154.kind, NTI1493172229)); }
            colontmp__587203585 = (Temporary154.sons).length - 1;
            var res_587203586 = 0;
            Label155: {
                Label156: while (true) {
                if (!(res_587203586 <= colontmp__587203585)) break Label156;
                  iHEX60gensym26_1493175215 = res_587203586;
                  var Temporary157 = pHEX60gensym26_1493173122;
                  if (ConstSet253[Temporary157.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary157.kind, NTI1493172229)); }
                  result_1493173125 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary158 = Temporary157.sons, Temporary158)[chckIndx(iHEX60gensym26_1493175215, 0, (Temporary158).length - 1)], startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
                  if ((0 <= result_1493173125)) {
                  break Label153;
                  }
                  
                  cHEX60gensym26_1493173124.ml = oldMlHEX60gensym26_1493175207;
                  res_587203586 = addInt(res_587203586, 1);
                }
            };
          };
          break;
        case 28:
          var oldMlHEX60gensym26_1493175216 = cHEX60gensym26_1493173124.ml;
          result_1493173125 = 0;
          Label159: {
              Label160: while (true) {
              if (!(addInt(startHEX60gensym26_1493173123, result_1493173125) <= (sHEX60gensym26_1493173121).length)) break Label160;
                var Temporary161 = pHEX60gensym26_1493173122;
                if (ConstSet254[Temporary161.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary161.kind, NTI1493172229)); }
                var xHEX60gensym26_1493175217 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary162 = Temporary161.sons, Temporary162)[chckIndx(0, 0, (Temporary162).length - 1)], addInt(startHEX60gensym26_1493173123, result_1493173125), cHEX60gensym26_1493173124);
                if ((0 <= xHEX60gensym26_1493175217)) {
                result_1493173125 = addInt(result_1493173125, xHEX60gensym26_1493175217);
                break BeforeRet;
                }
                
                result_1493173125 = addInt(result_1493173125, 1);
              }
          };
          result_1493173125 = (-1);
          cHEX60gensym26_1493173124.ml = oldMlHEX60gensym26_1493175216;
          break;
        case 29:
          var idxHEX60gensym26_1493175228 = cHEX60gensym26_1493173124.ml;
          cHEX60gensym26_1493173124.ml = addInt(cHEX60gensym26_1493173124.ml, 1);
          result_1493173125 = 0;
          Label163: {
              Label164: while (true) {
              if (!(addInt(startHEX60gensym26_1493173123, result_1493173125) <= (sHEX60gensym26_1493173121).length)) break Label164;
                var Temporary165 = pHEX60gensym26_1493173122;
                if (ConstSet255[Temporary165.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary165.kind, NTI1493172229)); }
                var xHEX60gensym26_1493175234 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary166 = Temporary165.sons, Temporary166)[chckIndx(0, 0, (Temporary166).length - 1)], addInt(startHEX60gensym26_1493173123, result_1493173125), cHEX60gensym26_1493173124);
                if ((0 <= xHEX60gensym26_1493175234)) {
                if ((idxHEX60gensym26_1493175228 < 20)) {
                var colontmp__587203590 = startHEX60gensym26_1493173123;
                var colontmp__587203591 = subInt(addInt(startHEX60gensym26_1493173123, result_1493173125), 1);
                cHEX60gensym26_1493173124.matches[chckIndx(idxHEX60gensym26_1493175228, 0, (cHEX60gensym26_1493173124.matches).length - 1)] = nimCopy(cHEX60gensym26_1493173124.matches[chckIndx(idxHEX60gensym26_1493175228, 0, (cHEX60gensym26_1493173124.matches).length - 1)], {Field0: colontmp__587203590, Field1: colontmp__587203591}, NTI1493172814);
                }
                
                result_1493173125 = addInt(result_1493173125, xHEX60gensym26_1493175234);
                break BeforeRet;
                }
                
                result_1493173125 = addInt(result_1493173125, 1);
              }
          };
          result_1493173125 = (-1);
          cHEX60gensym26_1493173124.ml = idxHEX60gensym26_1493175228;
          break;
        case 17:
          result_1493173125 = 0;
          Label167: {
              Label168: while (true) {
              if (!true) break Label168;
                var Temporary169 = pHEX60gensym26_1493173122;
                if (ConstSet256[Temporary169.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary169.kind, NTI1493172229)); }
                var xHEX60gensym26_1493175245 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary170 = Temporary169.sons, Temporary170)[chckIndx(0, 0, (Temporary170).length - 1)], addInt(startHEX60gensym26_1493173123, result_1493173125), cHEX60gensym26_1493173124);
                if ((xHEX60gensym26_1493175245 <= 0)) {
                break Label167;
                }
                
                result_1493173125 = addInt(result_1493173125, xHEX60gensym26_1493175245);
              }
          };
          break;
        case 18:
          result_1493173125 = 0;
          var Temporary171 = pHEX60gensym26_1493173122;
          if (ConstSet257[Temporary171.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary171.kind, NTI1493172229)); }
          var chHEX60gensym26_1493175251 = Temporary171.ch;
          Label172: {
              Label173: while (true) {
              if (!((addInt(startHEX60gensym26_1493173123, result_1493173125) < (sHEX60gensym26_1493173121).length) && (chHEX60gensym26_1493175251 == sHEX60gensym26_1493173121[chckIndx(addInt(startHEX60gensym26_1493173123, result_1493173125), 0, (sHEX60gensym26_1493173121).length - 1)]))) break Label173;
                result_1493173125 = addInt(result_1493173125, 1);
              }
          };
          break;
        case 19:
          result_1493173125 = 0;
          Label174: {
              Label175: while (true) {
                if (!(addInt(startHEX60gensym26_1493173123, result_1493173125) < (sHEX60gensym26_1493173121).length)) Temporary176 = false; else {                  var Temporary177 = pHEX60gensym26_1493173122;
                  if (ConstSet258[Temporary177.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary177.kind, NTI1493172229)); }
                  Temporary176 = (Temporary177.charChoice[sHEX60gensym26_1493173121[chckIndx(addInt(startHEX60gensym26_1493173123, result_1493173125), 0, (sHEX60gensym26_1493173121).length - 1)]] != undefined);                }              if (!Temporary176) break Label175;
                result_1493173125 = addInt(result_1493173125, 1);
              }
          };
          break;
        case 21:
          var Temporary178 = pHEX60gensym26_1493173122;
          if (ConstSet259[Temporary178.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary178.kind, NTI1493172229)); }
          result_1493173125 = nimMax(0, matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary179 = Temporary178.sons, Temporary179)[chckIndx(0, 0, (Temporary179).length - 1)], startHEX60gensym26_1493173123, cHEX60gensym26_1493173124));
          break;
        case 22:
          var oldMlHEX60gensym26_1493175266 = cHEX60gensym26_1493173124.ml;
          var Temporary180 = pHEX60gensym26_1493173122;
          if (ConstSet260[Temporary180.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary180.kind, NTI1493172229)); }
          result_1493173125 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary181 = Temporary180.sons, Temporary181)[chckIndx(0, 0, (Temporary181).length - 1)], startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
          if ((0 <= result_1493173125)) {
          result_1493173125 = 0;
          }
          else {
            cHEX60gensym26_1493173124.ml = oldMlHEX60gensym26_1493175266;
          }
          
          break;
        case 23:
          var oldMlHEX60gensym26_1493175267 = cHEX60gensym26_1493173124.ml;
          var Temporary182 = pHEX60gensym26_1493173122;
          if (ConstSet261[Temporary182.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary182.kind, NTI1493172229)); }
          result_1493173125 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary183 = Temporary182.sons, Temporary183)[chckIndx(0, 0, (Temporary183).length - 1)], startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
          if ((result_1493173125 < 0)) {
          result_1493173125 = 0;
          }
          else {
            cHEX60gensym26_1493173124.ml = oldMlHEX60gensym26_1493175267;
            result_1493173125 = (-1);
          }
          
          break;
        case 24:
            var Temporary185 = pHEX60gensym26_1493173122;
            if (ConstSet262[Temporary185.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary185.kind, NTI1493172229)); }
            if (((Temporary185.sons).length == 0)) Temporary184 = true; else {              var Temporary186 = pHEX60gensym26_1493173122;
              if (ConstSet263[Temporary186.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary186.kind, NTI1493172229)); }
              Temporary184 = ((Temporary187 = Temporary186.sons, Temporary187)[chckIndx(0, 0, (Temporary187).length - 1)].kind == 0);            }          if (Temporary184) {
          cHEX60gensym26_1493173124.ml = subInt(cHEX60gensym26_1493173124.ml, 1);
          var colontmp__587203595 = 0;
          var colontmp__587203596 = 0;
          cHEX60gensym26_1493173124.matches[chckIndx(cHEX60gensym26_1493173124.ml, 0, (cHEX60gensym26_1493173124.matches).length - 1)] = nimCopy(cHEX60gensym26_1493173124.matches[chckIndx(cHEX60gensym26_1493173124.ml, 0, (cHEX60gensym26_1493173124.matches).length - 1)], {Field0: colontmp__587203595, Field1: colontmp__587203596}, NTI1493172814);
          result_1493173125 = 0;
          }
          else {
            var idxHEX60gensym26_1493175280 = cHEX60gensym26_1493173124.ml;
            var Temporary188 = pHEX60gensym26_1493173122;
            if (ConstSet264[Temporary188.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary188.kind, NTI1493172229)); }
            result_1493173125 = matchIt_1493173120(sHEX60gensym26_1493173121, (Temporary189 = Temporary188.sons, Temporary189)[chckIndx(0, 0, (Temporary189).length - 1)], startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
            if ((0 <= result_1493173125)) {
            if ((idxHEX60gensym26_1493175280 < 20)) {
            if (!((idxHEX60gensym26_1493175280 == cHEX60gensym26_1493173124.ml))) {
            Label190: {
              var iHEX60gensym26_1493175286 = 0;
              var res_587203598 = cHEX60gensym26_1493173124.ml;
              Label191: {
                  Label192: while (true) {
                  if (!(idxHEX60gensym26_1493175280 <= res_587203598)) break Label192;
                    iHEX60gensym26_1493175286 = res_587203598;
                    cHEX60gensym26_1493173124.matches[chckIndx(addInt(iHEX60gensym26_1493175286, 1), 0, (cHEX60gensym26_1493173124.matches).length - 1)] = nimCopy(cHEX60gensym26_1493173124.matches[chckIndx(addInt(iHEX60gensym26_1493175286, 1), 0, (cHEX60gensym26_1493173124.matches).length - 1)], cHEX60gensym26_1493173124.matches[chckIndx(iHEX60gensym26_1493175286, 0, (cHEX60gensym26_1493173124.matches).length - 1)], NTI1493172814);
                    res_587203598 = subInt(res_587203598, 1);
                  }
              };
            };
            }
            
            var colontmp__587203600 = startHEX60gensym26_1493173123;
            var colontmp__587203601 = subInt(addInt(startHEX60gensym26_1493173123, result_1493173125), 1);
            cHEX60gensym26_1493173124.matches[chckIndx(idxHEX60gensym26_1493175280, 0, (cHEX60gensym26_1493173124.matches).length - 1)] = nimCopy(cHEX60gensym26_1493173124.matches[chckIndx(idxHEX60gensym26_1493175280, 0, (cHEX60gensym26_1493173124.matches).length - 1)], {Field0: colontmp__587203600, Field1: colontmp__587203601}, NTI1493172814);
            }
            
            cHEX60gensym26_1493173124.ml = addInt(cHEX60gensym26_1493173124.ml, 1);
            }
            
          }
          
          break;
        case 25:
          result_1493173125 = matchBackRef_1493173126(sHEX60gensym26_1493173121, pHEX60gensym26_1493173122, startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
          break;
        case 26:
          result_1493173125 = matchBackRef_1493173126(sHEX60gensym26_1493173121, pHEX60gensym26_1493173122, startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
          break;
        case 27:
          result_1493173125 = matchBackRef_1493173126(sHEX60gensym26_1493173121, pHEX60gensym26_1493173122, startHEX60gensym26_1493173123, cHEX60gensym26_1493173124);
          break;
        case 32:
          if ((cHEX60gensym26_1493173124.origStart == startHEX60gensym26_1493173123)) {
          result_1493173125 = 0;
          }
          else {
            result_1493173125 = (-1);
          }
          
          break;
        case 30:
        case 31:
          if (true) {
          failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,56,54,55,44,32,50,52,41,32,96,102,97,108,115,101,96,32]);
          }
          
          break;
        }
      };

      return result_1493173125;

    }

  var result_1493173068 = 0;

    result_1493173068 = matchIt_1493173120(s_1493173064, p_1493173065, start_1493173066, c_1493173067);

  return result_1493173068;

}

function substr_33558091(s_33558092, first_33558093) {
  var result_33558094 = [];

    result_33558094 = nimCopy(null, substr_33558079(s_33558092, first_33558093, (s_33558092).length - 1), NTI33554449);

  return result_33558094;

}

function npegsreplacef(s_1493175545, sub_1493175546, by_1493175547) {
  var result_1493175548 = [[]];

    result_1493175548[0] = nimCopy(null, [], NTI33554449);
    var i_1493175549 = 0;
    var caps_1493175550 = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];
    var c_1493175551 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    Label1: {
        Label2: while (true) {
        if (!(i_1493175549 < (s_1493175545).length)) break Label2;
          c_1493175551[0].ml = 0;
          var x_1493175552 = npegsrawMatch(s_1493175545, sub_1493175546, i_1493175549, c_1493175551[0]);
          if ((x_1493175552 <= 0)) {
          addChar(result_1493175548[0], s_1493175545[chckIndx(i_1493175549, 0, (s_1493175545).length - 1)]);;
          i_1493175549 = addInt(i_1493175549, 1);
          }
          else {
            Label3: {
              var kHEX60gensym580_1493175565 = 0;
              var colontmp__587203569 = 0;
              colontmp__587203569 = subInt(c_1493175551[0].ml, 1);
              var res_587203570 = 0;
              Label4: {
                  Label5: while (true) {
                  if (!(res_587203570 <= colontmp__587203569)) break Label5;
                    kHEX60gensym580_1493175565 = res_587203570;
                    var startIdxHEX60gensym580_1493175566 = c_1493175551[0].matches[chckIndx(kHEX60gensym580_1493175565, 0, (c_1493175551[0].matches).length - 1)]["Field0"];
                    var endIdxHEX60gensym580_1493175567 = c_1493175551[0].matches[chckIndx(kHEX60gensym580_1493175565, 0, (c_1493175551[0].matches).length - 1)]["Field1"];
                    if (!((startIdxHEX60gensym580_1493175566 == (-1)))) {
                    caps_1493175550[chckIndx(kHEX60gensym580_1493175565, 0, (caps_1493175550).length - 1)] = nimCopy(null, substr_33558079(s_1493175545, startIdxHEX60gensym580_1493175566, endIdxHEX60gensym580_1493175567), NTI33554449);
                    }
                    else {
                      caps_1493175550[chckIndx(kHEX60gensym580_1493175565, 0, (caps_1493175550).length - 1)] = nimCopy(null, [], NTI33554449);
                    }
                    
                    res_587203570 = addInt(res_587203570, 1);
                  }
              };
            };
            nsuAddf(result_1493175548, 0, by_1493175547, caps_1493175550);
            i_1493175549 = addInt(i_1493175549, x_1493175552);
          }
          
        }
    };
    result_1493175548[0].push.apply(result_1493175548[0], substr_33558091(s_1493175545, i_1493175549));;

  return result_1493175548[0];

}

function init_1493175800(L_1493175801, input_1493175802, filename_1493175803, line_1493175804, col_1493175805) {
    L_1493175801.buf = nimCopy(null, input_1493175802, NTI33554449);
    L_1493175801.bufpos = 0;
    L_1493175801.lineNumber = line_1493175804;
    L_1493175801.colOffset = col_1493175805;
    L_1493175801.lineStart = 0;
    L_1493175801.filename = nimCopy(null, filename_1493175803, NTI33554449);

  
}

function handleCR_1493175767(L_1493175768, pos_1493175769) {
  var result_1493175770 = 0;

    if (!((L_1493175768.buf[chckIndx(pos_1493175769, 0, (L_1493175768.buf).length - 1)] == 13))) {
    failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,49,52,53,57,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1493175768.lineNumber = addInt(L_1493175768.lineNumber, 1);
    result_1493175770 = addInt(pos_1493175769, 1);
    if (((result_1493175770 < (L_1493175768.buf).length) && (L_1493175768.buf[chckIndx(result_1493175770, 0, (L_1493175768.buf).length - 1)] == 10))) {
    result_1493175770 = addInt(result_1493175770, 1);
    }
    
    L_1493175768.lineStart = result_1493175770;

  return result_1493175770;

}

function handleLF_1493175786(L_1493175787, pos_1493175788) {
  var result_1493175789 = 0;

    if (!((L_1493175787.buf[chckIndx(pos_1493175788, 0, (L_1493175787.buf).length - 1)] == 10))) {
    failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,49,52,54,54,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1493175787.lineNumber = addInt(L_1493175787.lineNumber, 1);
    result_1493175789 = addInt(pos_1493175788, 1);
    L_1493175787.lineStart = result_1493175789;

  return result_1493175789;

}

function skip_1493175942(c_1493175943) {
    var pos_1493175944 = c_1493175943.bufpos;
    Label1: {
        Label2: while (true) {
        if (!(pos_1493175944 < (c_1493175943.buf).length)) break Label2;
          switch (c_1493175943.buf[chckIndx(pos_1493175944, 0, (c_1493175943.buf).length - 1)]) {
          case 32:
          case 9:
            pos_1493175944 = addInt(pos_1493175944, 1);
            break;
          case 35:
            Label3: {
                Label4: while (true) {
                if (!((pos_1493175944 < (c_1493175943.buf).length) && !((ConstSet267[c_1493175943.buf[chckIndx(pos_1493175944, 0, (c_1493175943.buf).length - 1)]] != undefined)))) break Label4;
                  pos_1493175944 = addInt(pos_1493175944, 1);
                }
            };
            break;
          case 13:
            pos_1493175944 = handleCR_1493175767(c_1493175943, pos_1493175944);
            break;
          case 10:
            pos_1493175944 = handleLF_1493175786(c_1493175943, pos_1493175944);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    c_1493175943.bufpos = pos_1493175944;

  
}

function handleHexChar_1509949441(c_1509949442, x_1509949443, x_1509949443_Idx) {
  var result_1509949444 = false;

    result_1509949444 = true;
    switch (c_1509949442) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1509949443[x_1509949443_Idx] = (((x_1509949443[x_1509949443_Idx] << 4) << 0 >> 0) | subInt(c_1509949442, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1509949443[x_1509949443_Idx] = (((x_1509949443[x_1509949443_Idx] << 4) << 0 >> 0) | addInt(subInt(c_1509949442, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1509949443[x_1509949443_Idx] = (((x_1509949443[x_1509949443_Idx] << 4) << 0 >> 0) | addInt(subInt(c_1509949442, 65), 10));
      break;
    default: 
      result_1509949444 = false;
      break;
    }

  return result_1509949444;

}

function getEscapedChar_1493175820(c_1493175821, tok_1493175822) {
            var Temporary3;

  BeforeRet: {
    c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
    if (((c_1493175821.buf).length <= c_1493175821.bufpos)) {
    tok_1493175822.kind = 0;
    break BeforeRet;
    }
    
    switch (c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)]) {
    case 114:
    case 82:
    case 99:
    case 67:
      addChar(tok_1493175822.literal, 13);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 108:
    case 76:
      addChar(tok_1493175822.literal, 10);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 102:
    case 70:
      addChar(tok_1493175822.literal, 12);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 101:
    case 69:
      addChar(tok_1493175822.literal, 27);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 97:
    case 65:
      addChar(tok_1493175822.literal, 7);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 98:
    case 66:
      addChar(tok_1493175822.literal, 8);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 118:
    case 86:
      addChar(tok_1493175822.literal, 11);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 116:
    case 84:
      addChar(tok_1493175822.literal, 9);;
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      break;
    case 120:
    case 88:
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      if (((c_1493175821.buf).length <= c_1493175821.bufpos)) {
      tok_1493175822.kind = 0;
      break BeforeRet;
      }
      
      var xi_1493175873 = [0];
      if (handleHexChar_1509949441(c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)], xi_1493175873, 0)) {
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      if (handleHexChar_1509949441(c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)], xi_1493175873, 0)) {
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      }
      
      }
      
      if ((xi_1493175873[0] == 0)) {
      tok_1493175822.kind = 0;
      }
      else {
      addChar(tok_1493175822.literal, chckRange(xi_1493175873[0], 0, 255));;
      }
      
      break;
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      var val_1493175890 = subInt(c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)], 48);
      c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      var i_1493175896 = 1;
      Label1: {
          Label2: while (true) {
            if (!((c_1493175821.bufpos < (c_1493175821.buf).length) && (i_1493175896 <= 3))) Temporary3 = false; else {              Temporary3 = (ConstSet269[c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)]] != undefined);            }          if (!Temporary3) break Label2;
            val_1493175890 = subInt(addInt(mulInt(val_1493175890, 10), c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)]), 48);
            c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
            i_1493175896 = addInt(i_1493175896, 1);
          }
      };
      if (((0 < val_1493175890) && (val_1493175890 <= 255))) {
      addChar(tok_1493175822.literal, chckRange(val_1493175890, 0, 255));;
      }
      else {
        tok_1493175822.kind = 0;
      }
      
      break;
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      tok_1493175822.kind = 0;
      break;
    default: 
      if ((ConstSet270[c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)]] != undefined)) {
      tok_1493175822.kind = 0;
      }
      else {
        addChar(tok_1493175822.literal, c_1493175821.buf[chckIndx(c_1493175821.bufpos, 0, (c_1493175821.buf).length - 1)]);;
        c_1493175821.bufpos = addInt(c_1493175821.bufpos, 1);
      }
      
      break;
    }
  };

  
}

function getCharSet_1493176008(c_1493176009, tok_1493176010) {
    tok_1493176010.kind = 6;
    tok_1493176010.charset = nimCopy(tok_1493176010.charset, ConstSet268, NTI1493177983);
    var pos_1493176011 = addInt(c_1493176009.bufpos, 1);
    var caret_1493176012 = false;
    if ((pos_1493176011 < (c_1493176009.buf).length)) {
    if ((c_1493176009.buf[chckIndx(pos_1493176011, 0, (c_1493176009.buf).length - 1)] == 94)) {
    pos_1493176011 = addInt(pos_1493176011, 1);
    caret_1493176012 = true;
    }
    
    Label1: {
        Label2: while (true) {
        if (!(pos_1493176011 < (c_1493176009.buf).length)) break Label2;
          var ch_1493176018 = 0;
          switch (c_1493176009.buf[chckIndx(pos_1493176011, 0, (c_1493176009.buf).length - 1)]) {
          case 93:
            if ((pos_1493176011 < (c_1493176009.buf).length)) {
            pos_1493176011 = addInt(pos_1493176011, 1);
            }
            
            break Label1;
            break;
          case 92:
            c_1493176009.bufpos = pos_1493176011;
            getEscapedChar_1493175820(c_1493176009, tok_1493176010);
            pos_1493176011 = c_1493176009.bufpos;
            ch_1493176018 = tok_1493176010.literal[chckIndx(subInt((tok_1493176010.literal).length, 1), 0, (tok_1493176010.literal).length - 1)];
            break;
          case 13:
          case 10:
          case 0:
            tok_1493176010.kind = 0;
            break Label1;
            break;
          default: 
            ch_1493176018 = c_1493176009.buf[chckIndx(pos_1493176011, 0, (c_1493176009.buf).length - 1)];
            pos_1493176011 = addInt(pos_1493176011, 1);
            break;
          }
          tok_1493176010.charset[ch_1493176018] = true;
          if ((c_1493176009.buf[chckIndx(pos_1493176011, 0, (c_1493176009.buf).length - 1)] == 45)) {
          if (((addInt(pos_1493176011, 1) < (c_1493176009.buf).length) && (c_1493176009.buf[chckIndx(addInt(pos_1493176011, 1), 0, (c_1493176009.buf).length - 1)] == 93))) {
          tok_1493176010.charset[45] = true;
          pos_1493176011 = addInt(pos_1493176011, 1);
          }
          else {
            if ((addInt(pos_1493176011, 1) < (c_1493176009.buf).length)) {
            pos_1493176011 = addInt(pos_1493176011, 1);
            }
            else {
              break Label1;
            }
            
            var ch2_1493176047 = 0;
            switch (c_1493176009.buf[chckIndx(pos_1493176011, 0, (c_1493176009.buf).length - 1)]) {
            case 92:
              c_1493176009.bufpos = pos_1493176011;
              getEscapedChar_1493175820(c_1493176009, tok_1493176010);
              pos_1493176011 = c_1493176009.bufpos;
              ch2_1493176047 = tok_1493176010.literal[chckIndx(subInt((tok_1493176010.literal).length, 1), 0, (tok_1493176010.literal).length - 1)];
              break;
            case 13:
            case 10:
            case 0:
              tok_1493176010.kind = 0;
              break Label1;
              break;
            default: 
              if ((addInt(pos_1493176011, 1) < (c_1493176009.buf).length)) {
              ch2_1493176047 = c_1493176009.buf[chckIndx(pos_1493176011, 0, (c_1493176009.buf).length - 1)];
              pos_1493176011 = addInt(pos_1493176011, 1);
              }
              else {
                break Label1;
              }
              
              break;
            }
            Label3: {
              var i_1493176063 = 0;
              var colontmp__587203607 = 0;
              var colontmp__587203608 = 0;
              colontmp__587203607 = addInt(ch_1493176018, 1);
              colontmp__587203608 = ch2_1493176047;
              var res_587203609 = colontmp__587203607;
              Label4: {
                  Label5: while (true) {
                  if (!(res_587203609 <= colontmp__587203608)) break Label5;
                    i_1493176063 = res_587203609;
                    tok_1493176010.charset[chckRange(i_1493176063, 0, 255)] = true;
                    res_587203609 = addInt(res_587203609, 1);
                  }
              };
            };
          }
          
          }
          
        }
    };
    }
    
    c_1493176009.bufpos = pos_1493176011;
    if (caret_1493176012) {
    tok_1493176010.charset = nimCopy(tok_1493176010.charset, SetMinus(ConstSet271, tok_1493176010.charset), NTI1493177983);
    }
    

  
}

function getSymbol_1493176072(c_1493176073, tok_1493176074) {
            var Temporary3;

    var pos_1493176075 = c_1493176073.bufpos;
    Label1: {
        Label2: while (true) {
        if (!(pos_1493176075 < (c_1493176073.buf).length)) break Label2;
          addChar(tok_1493176074.literal, c_1493176073.buf[chckIndx(pos_1493176075, 0, (c_1493176073.buf).length - 1)]);;
          pos_1493176075 = addInt(pos_1493176075, 1);
            if (!(pos_1493176075 < (c_1493176073.buf).length)) Temporary3 = false; else {              Temporary3 = !((ConstSet273[c_1493176073.buf[chckIndx(pos_1493176075, 0, (c_1493176073.buf).length - 1)]] != undefined));            }          if (Temporary3) {
          break Label1;
          }
          
        }
    };
    c_1493176073.bufpos = pos_1493176075;
    tok_1493176074.kind = 4;

  
}

function getBuiltin_1493176085(c_1493176086, tok_1493176087) {
      var Temporary1;

      if (!(addInt(c_1493176086.bufpos, 1) < (c_1493176086.buf).length)) Temporary1 = false; else {        Temporary1 = (ConstSet272[c_1493176086.buf[chckIndx(addInt(c_1493176086.bufpos, 1), 0, (c_1493176086.buf).length - 1)]] != undefined);      }    if (Temporary1) {
    c_1493176086.bufpos = addInt(c_1493176086.bufpos, 1);
    getSymbol_1493176072(c_1493176086, tok_1493176087);
    tok_1493176087.kind = 21;
    }
    else {
      tok_1493176087.kind = 22;
      getEscapedChar_1493175820(c_1493176086, tok_1493176087);
    }
    

  
}

function getString_1493175959(c_1493175960, tok_1493175961) {
    tok_1493175961.kind = 5;
    var pos_1493175962 = addInt(c_1493175960.bufpos, 1);
    var quote_1493175963 = c_1493175960.buf[chckIndx(subInt(pos_1493175962, 1), 0, (c_1493175960.buf).length - 1)];
    Label1: {
        Label2: while (true) {
        if (!(pos_1493175962 < (c_1493175960.buf).length)) break Label2;
          switch (c_1493175960.buf[chckIndx(pos_1493175962, 0, (c_1493175960.buf).length - 1)]) {
          case 92:
            c_1493175960.bufpos = pos_1493175962;
            getEscapedChar_1493175820(c_1493175960, tok_1493175961);
            pos_1493175962 = c_1493175960.bufpos;
            break;
          case 13:
          case 10:
          case 0:
            tok_1493175961.kind = 0;
            break Label1;
            break;
          default: 
            if ((c_1493175960.buf[chckIndx(pos_1493175962, 0, (c_1493175960.buf).length - 1)] == quote_1493175963)) {
            pos_1493175962 = addInt(pos_1493175962, 1);
            break Label1;
            }
            else {
              addChar(tok_1493175961.literal, c_1493175960.buf[chckIndx(pos_1493175962, 0, (c_1493175960.buf).length - 1)]);;
              pos_1493175962 = addInt(pos_1493175962, 1);
            }
            
            break;
          }
        }
    };
    c_1493175960.bufpos = pos_1493175962;

  
}

function getDollar_1493175974(c_1493175975, tok_1493175976) {
      var Temporary1;
          var Temporary4;

    var pos_1493175977 = addInt(c_1493175975.bufpos, 1);
    var neg_1493175978 = false;
    if (((pos_1493175977 < (c_1493175975.buf).length) && (c_1493175975.buf[chckIndx(pos_1493175977, 0, (c_1493175975.buf).length - 1)] == 94))) {
    neg_1493175978 = true;
    pos_1493175977 = addInt(pos_1493175977, 1);
    }
    
      if (!(pos_1493175977 < (c_1493175975.buf).length)) Temporary1 = false; else {        Temporary1 = (ConstSet274[c_1493175975.buf[chckIndx(pos_1493175977, 0, (c_1493175975.buf).length - 1)]] != undefined);      }    if (Temporary1) {
    tok_1493175976.kind = 23;
    tok_1493175976.index = 0;
    Label2: {
        Label3: while (true) {
          if (!(pos_1493175977 < (c_1493175975.buf).length)) Temporary4 = false; else {            Temporary4 = (ConstSet275[c_1493175975.buf[chckIndx(pos_1493175977, 0, (c_1493175975.buf).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          tok_1493175976.index = subInt(addInt(mulInt(tok_1493175976.index, 10), c_1493175975.buf[chckIndx(pos_1493175977, 0, (c_1493175975.buf).length - 1)]), 48);
          pos_1493175977 = addInt(pos_1493175977, 1);
        }
    };
    if (neg_1493175978) {
    tok_1493175976.index = negInt(tok_1493175976.index);
    }
    
    }
    else {
      if (neg_1493175978) {
      pos_1493175977 = subInt(pos_1493175977, 1);
      }
      
      tok_1493175976.kind = 24;
    }
    
    c_1493175975.bufpos = pos_1493175977;

  
}

function getTok_1493176097(c_1493176098, tok_1493176099) {
        var Temporary1;
          var Temporary2;

  BeforeRet: {
    tok_1493176099.kind = 0;
    tok_1493176099.modifier = 0;
    if (tok_1493176099.literal.length < 0) { for (var i = tok_1493176099.literal.length; i < 0; ++i) tok_1493176099.literal.push(0); }
         else {tok_1493176099.literal.length = 0; };
    skip_1493175942(c_1493176098);
    if (((c_1493176098.buf).length <= c_1493176098.bufpos)) {
    tok_1493176099.kind = 1;
    tok_1493176099.literal = nimCopy(null, [91,69,79,70,93], NTI33554449);
    addChar(tok_1493176099.literal, 0);;
    c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
    break BeforeRet;
    }
    
    switch (c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)]) {
    case 123:
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      if ((((c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)] == 64) && (addInt(c_1493176098.bufpos, 2) < (c_1493176098.buf).length)) && (c_1493176098.buf[chckIndx(addInt(c_1493176098.bufpos, 1), 0, (c_1493176098.buf).length - 1)] == 125))) {
      tok_1493176099.kind = 11;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 2);
      tok_1493176099.literal.push.apply(tok_1493176099.literal, [123,64,125]);;
      }
      else {
      if (((c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)] == 125) && (c_1493176098.bufpos < (c_1493176098.buf).length))) {
      tok_1493176099.kind = 12;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      tok_1493176099.literal.push.apply(tok_1493176099.literal, [123,125]);;
      }
      else {
        tok_1493176099.kind = 9;
        addChar(tok_1493176099.literal, 123);;
      }
      }
      break;
    case 125:
      tok_1493176099.kind = 10;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 125);;
      break;
    case 91:
      getCharSet_1493176008(c_1493176098, tok_1493176099);
      break;
    case 40:
      tok_1493176099.kind = 7;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 40);;
      break;
    case 41:
      tok_1493176099.kind = 8;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 41);;
      break;
    case 46:
      tok_1493176099.kind = 2;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 46);;
      break;
    case 95:
      tok_1493176099.kind = 3;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 95);;
      break;
    case 92:
      getBuiltin_1493176085(c_1493176098, tok_1493176099);
      break;
    case 39:
    case 34:
      getString_1493175959(c_1493176098, tok_1493176099);
      break;
    case 36:
      getDollar_1493175974(c_1493176098, tok_1493176099);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      getSymbol_1493176072(c_1493176098, tok_1493176099);
      if (((c_1493176098.buf).length <= c_1493176098.bufpos)) {
      break BeforeRet;
      }
      
        if ((ConstSet276[c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)]] != undefined)) Temporary1 = true; else {          if (!((c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)] == 36) && (addInt(c_1493176098.bufpos, 1) < (c_1493176098.buf).length))) Temporary2 = false; else {            Temporary2 = (ConstSet277[c_1493176098.buf[chckIndx(addInt(c_1493176098.bufpos, 1), 0, (c_1493176098.buf).length - 1)]] != undefined);          }          Temporary1 = Temporary2;        }      if (Temporary1) {
      switch (toJSStr(tok_1493176099.literal)) {
      case "i":
        tok_1493176099.modifier = 2;
        break;
      case "y":
        tok_1493176099.modifier = 3;
        break;
      case "v":
        tok_1493176099.modifier = 1;
        break;
      default: 
        break;
      }
      if (tok_1493176099.literal.length < 0) { for (var i = tok_1493176099.literal.length; i < 0; ++i) tok_1493176099.literal.push(0); }
         else {tok_1493176099.literal.length = 0; };
      if ((c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)] == 36)) {
      getDollar_1493175974(c_1493176098, tok_1493176099);
      }
      else {
      getString_1493175959(c_1493176098, tok_1493176099);
      }
      
      if ((tok_1493176099.modifier == 0)) {
      tok_1493176099.kind = 0;
      }
      
      }
      
      break;
    case 43:
      tok_1493176099.kind = 16;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 43);;
      break;
    case 42:
      tok_1493176099.kind = 15;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 43);;
      break;
    case 60:
      if (((addInt(c_1493176098.bufpos, 2) < (c_1493176098.buf).length) && (c_1493176098.buf[chckIndx(addInt(c_1493176098.bufpos, 1), 0, (c_1493176098.buf).length - 1)] == 45))) {
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 2);
      tok_1493176099.kind = 13;
      tok_1493176099.literal.push.apply(tok_1493176099.literal, [60,45]);;
      }
      else {
      addChar(tok_1493176099.literal, 60);;
      }
      
      break;
    case 47:
      tok_1493176099.kind = 14;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 47);;
      break;
    case 63:
      tok_1493176099.kind = 19;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 63);;
      break;
    case 33:
      tok_1493176099.kind = 18;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 33);;
      break;
    case 38:
      tok_1493176099.kind = 17;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 33);;
      break;
    case 64:
      tok_1493176099.kind = 20;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 64);;
      if ((c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)] == 64)) {
      tok_1493176099.kind = 11;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 64);;
      }
      
      break;
    case 94:
      tok_1493176099.kind = 25;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      addChar(tok_1493176099.literal, 94);;
      break;
    default: 
      if (((c_1493176098.buf).length <= c_1493176098.bufpos)) {
      tok_1493176099.kind = 1;
      tok_1493176099.literal = nimCopy(null, [91,69,79,70,93], NTI33554449);
      }
      
      addChar(tok_1493176099.literal, c_1493176098.buf[chckIndx(c_1493176098.bufpos, 0, (c_1493176098.buf).length - 1)]);;
      c_1493176098.bufpos = addInt(c_1493176098.bufpos, 1);
      break;
    }
  };

  
}

function getLine_1493175809(L_1493175810) {
  var result_1493175811 = 0;

    result_1493175811 = L_1493175810.lineNumber;

  return result_1493175811;

}

function getColumn_1493175806(L_1493175807) {
  var result_1493175808 = 0;

    result_1493175808 = addInt(absInt(subInt(L_1493175807.bufpos, L_1493175807.lineStart)), L_1493175807.colOffset);

  return result_1493175808;

}

function errorStr_1493175812(L_1493175813, msg_1493175814, line_1493175815, col_1493175816) {
    var Temporary1;
    var Temporary2;

  var result_1493175817 = [];

    if ((line_1493175815 < 0)) {
    Temporary1 = getLine_1493175809(L_1493175813);
    }
    else {
    Temporary1 = line_1493175815;
    }
    
    var line_1493175818 = Temporary1;
    if ((col_1493175816 < 0)) {
    Temporary2 = getColumn_1493175806(L_1493175813);
    }
    else {
    Temporary2 = col_1493175816;
    }
    
    var col_1493175819 = Temporary2;
    result_1493175817 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, L_1493175813.filename, NTI33554449), HEX24_385875976(line_1493175818), HEX24_385875976(col_1493175819), nimCopy(null, msg_1493175814, NTI33554449)]), NTI33554449);

  return result_1493175817;

}

function pegError_1493176250(p_1493176251, msg_1493176252, line_1493176253, col_1493176254) {
    var e_1493176255 = {message: errorStr_1493175812(p_1493176251, msg_1493176252, line_1493176253, col_1493176254), m_type: NTI1493178274, parent: null, name: null, trace: [], up: null};
    raiseException(e_1493176255, "EInvalidPeg");

  
}

function getTok_1493176360(p_1493176361) {
    getTok_1493176097(p_1493176361, p_1493176361.tok);
    if ((p_1493176361.tok.kind == 0)) {
    pegError_1493176250(p_1493176361, ([39] || []).concat(p_1493176361.tok.literal || [],[39,32,105,115,32,105,110,118,97,108,105,100,32,116,111,107,101,110] || []), (-1), (-1));
    }
    

  
}

function npegsOptional(a_1493172667) {
  var result_1493172668 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if ((ConstSet278[a_1493172667.kind] != undefined)) {
    result_1493172668 = nimCopy(result_1493172668, a_1493172667, NTI1493172232);
    }
    else {
      result_1493172668 = nimCopy(result_1493172668, {kind: 21, sons: [nimCopy(null, a_1493172667, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);
    }
    

  return result_1493172668;

}

function npegsAndPredicate(a_1493172755) {
  var result_1493172756 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172756 = nimCopy(result_1493172756, {kind: 22, sons: [nimCopy(null, a_1493172755, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);

  return result_1493172756;

}

function npegsNotPredicate(a_1493172762) {
  var result_1493172763 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172763 = nimCopy(result_1493172763, {kind: 23, sons: [nimCopy(null, a_1493172762, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);

  return result_1493172763;

}

function npegsSearch(a_1493172707) {
  var result_1493172708 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172708 = nimCopy(result_1493172708, {kind: 28, sons: [nimCopy(null, a_1493172707, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);

  return result_1493172708;

}

function npgegsCapturedSearch(a_1493172714) {
  var result_1493172715 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172715 = nimCopy(result_1493172715, {kind: 29, sons: [nimCopy(null, a_1493172714, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);

  return result_1493172715;

}

function len_1493172571(a_1493172572) {
    var Temporary1;

  var result_1493172573 = 0;

  BeforeRet: {
    var Temporary1 = a_1493172572;
    if (ConstSet280[Temporary1.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1493172229)); }
    result_1493172573 = (Temporary1.sons).length;
    break BeforeRet;
  };

  return result_1493172573;

}

function npegstermStr(t_1493172540) {
  var result_1493172541 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(((t_1493172540).length == 1))) {
    result_1493172541 = nimCopy(result_1493172541, {kind: 9, term: nimCopy(null, t_1493172540, NTI33554449), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);
    }
    else {
      result_1493172541 = nimCopy(result_1493172541, {kind: 12, ch: t_1493172540[chckIndx(0, 0, (t_1493172540).length - 1)], term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);
    }
    

  return result_1493172541;

}

function add_1493172577(d_1493172578, s_1493172579) {
    var Temporary1;

    var Temporary1 = d_1493172578;
    if (ConstSet290[Temporary1.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1493172229)); }
    var Temporary2 = nimCopy(null, s_1493172579, NTI1493172232);
    Temporary1.sons.push(Temporary2);;

  
}

function addSequence_1493172637(dest_1493172638, elem_1493172639) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;

    var L_1493172640 = subInt(len_1493172571(dest_1493172638), 1);
      if (!(0 <= L_1493172640)) Temporary1 = false; else {        var Temporary2 = dest_1493172638;
        if (ConstSet281[Temporary2.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1493172229)); }
        Temporary1 = ((Temporary3 = Temporary2.sons, Temporary3)[chckIndx(L_1493172640, 0, (Temporary3).length - 1)].kind == 9);      }    if (Temporary1) {
    switch (elem_1493172639.kind) {
    case 9:
      var Temporary4 = dest_1493172638;
      if (ConstSet282[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1493172229)); }
      var Temporary6 = dest_1493172638;
      if (ConstSet284[Temporary6.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1493172229)); }
      var Temporary8 = (Temporary7 = Temporary6.sons, Temporary7)[chckIndx(L_1493172640, 0, (Temporary7).length - 1)];
      if (ConstSet283[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1493172229)); }
      var Temporary9 = elem_1493172639;
      if (ConstSet285[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1493172229)); }
      (Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1493172640, 0, (Temporary5).length - 1)] = nimCopy((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1493172640, 0, (Temporary5).length - 1)], npegstermStr((Temporary8.term || []).concat(Temporary9.term || [])), NTI1493172232);
      break;
    case 12:
      var Temporary10 = dest_1493172638;
      if (ConstSet286[Temporary10.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1493172229)); }
      var Temporary12 = dest_1493172638;
      if (ConstSet288[Temporary12.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1493172229)); }
      var Temporary14 = (Temporary13 = Temporary12.sons, Temporary13)[chckIndx(L_1493172640, 0, (Temporary13).length - 1)];
      if (ConstSet287[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1493172229)); }
      var Temporary15 = elem_1493172639;
      if (ConstSet289[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1493172229)); }
      (Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1493172640, 0, (Temporary11).length - 1)] = nimCopy((Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1493172640, 0, (Temporary11).length - 1)], npegstermStr((Temporary14.term || []).concat([Temporary15.ch])), NTI1493172232);
      break;
    default: 
      add_1493172577(dest_1493172638, elem_1493172639);
      break;
    }
    }
    else {
    add_1493172577(dest_1493172638, elem_1493172639);
    }
    

  
}

function npegssequence(a_1493172646) {
              var Temporary5;
    var Temporary8;
    var Temporary9;

  var result_1493172647 = [({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})];

    result_1493172647[0] = nimCopy(result_1493172647[0], {kind: 15, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);
    Label1: {
      var xHEX60gensym12_1493172657 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
      var i_587203630 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203630 < (a_1493172646).length)) break Label3;
            xHEX60gensym12_1493172657 = a_1493172646[chckIndx(i_587203630, 0, (a_1493172646).length - 1)];
            if ((xHEX60gensym12_1493172657.kind == 15)) {
            Label4: {
              var yHEX60gensym12_1493172665 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              var colontmp__587203624 = [];
              var Temporary5 = xHEX60gensym12_1493172657;
              if (ConstSet279[Temporary5.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1493172229)); }
              colontmp__587203624 = Temporary5.sons;
              var i_587203626 = 0;
              var L_587203627 = (colontmp__587203624).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_587203626 < L_587203627)) break Label7;
                    yHEX60gensym12_1493172665 = colontmp__587203624[chckIndx(i_587203626, 0, (colontmp__587203624).length - 1)];
                    addSequence_1493172637(result_1493172647[0], yHEX60gensym12_1493172665);
                    i_587203626 = addInt(i_587203626, 1);
                    if (!(((colontmp__587203624).length == L_587203627))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            else {
            addSequence_1493172637(result_1493172647[0], xHEX60gensym12_1493172657);
            }
            
            i_587203630 = addInt(i_587203630, 1);
          }
      };
    };
    if ((len_1493172571(result_1493172647[0]) == 1)) {
    var Temporary8 = result_1493172647[0];
    if (ConstSet291[Temporary8.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1493172229)); }
    result_1493172647[0] = nimCopy(result_1493172647[0], (Temporary9 = Temporary8.sons, Temporary9)[chckIndx(0, 0, (Temporary9).length - 1)], NTI1493172232);
    }
    

  return result_1493172647[0];

}

function token_1493176452(terminal_1493176453, p_1493176454) {
  var result_1493176455 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if ((p_1493176454.skip.kind == 0)) {
    result_1493176455 = nimCopy(result_1493176455, terminal_1493176453, NTI1493172232);
    }
    else {
      result_1493176455 = nimCopy(result_1493176455, npegssequence([nimCopy(null, p_1493176454.skip, NTI1493172232), nimCopy(null, terminal_1493176453, NTI1493172232)]), NTI1493172232);
    }
    

  return result_1493176455;

}

function npegstermIgnoreCase(t_1493172543) {
  var result_1493172544 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172544 = nimCopy(result_1493172544, {kind: 10, term: nimCopy(null, t_1493172543, NTI33554449), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172544;

}

function npegstermIgnoreStyle(t_1493172546) {
  var result_1493172547 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172547 = nimCopy(result_1493172547, {kind: 11, term: nimCopy(null, t_1493172546, NTI33554449), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172547;

}

function modifiedTerm_1493176423(s_1493176424, m_1493176425) {
  var result_1493176426 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (m_1493176425) {
    case 0:
    case 1:
      result_1493176426 = nimCopy(result_1493176426, npegstermStr(s_1493176424), NTI1493172232);
      break;
    case 2:
      result_1493176426 = nimCopy(result_1493176426, npegstermIgnoreCase(s_1493176424), NTI1493172232);
      break;
    case 3:
      result_1493176426 = nimCopy(result_1493176426, npegstermIgnoreStyle(s_1493176424), NTI1493172232);
      break;
    }

  return result_1493176426;

}

function arrowIsNextTok_1493176229(c_1493176230) {
  var result_1493176231 = false;

  BeforeRet: {
    var pos_1493176232 = c_1493176230.bufpos;
    Label1: {
        Label2: while (true) {
        if (!((pos_1493176232 < (c_1493176230.buf).length) && (ConstSet292[c_1493176230.buf[chckIndx(pos_1493176232, 0, (c_1493176230.buf).length - 1)]] != undefined))) break Label2;
          pos_1493176232 = addInt(pos_1493176232, 1);
        }
    };
    if (((c_1493176230.buf).length <= addInt(pos_1493176232, 1))) {
    break BeforeRet;
    }
    
    result_1493176231 = ((c_1493176230.buf[chckIndx(pos_1493176232, 0, (c_1493176230.buf).length - 1)] == 60) && (c_1493176230.buf[chckIndx(addInt(pos_1493176232, 1), 0, (c_1493176230.buf).length - 1)] == 45));
  };

  return result_1493176231;

}

function npegsnewNonTerminal(name_1493172854, line_1493172855, column_1493172856) {
  var result_1493172857 = null;

    result_1493172857 = {name: nimCopy(null, name_1493172854, NTI33554449), line: line_1493172855, col: column_1493172856, rule: {kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, flags: {}};

  return result_1493172857;

}

function getNonTerminal_1493176376(p_1493176377, name_1493176378) {
  var result_1493176379 = null;

  BeforeRet: {
    Label1: {
      var i_1493176387 = 0;
      var colontmp__587203634 = 0;
      colontmp__587203634 = (p_1493176377.nonterms).length - 1;
      var res_587203635 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_587203635 <= colontmp__587203634)) break Label3;
            i_1493176387 = res_587203635;
            result_1493176379 = p_1493176377.nonterms[chckIndx(i_1493176387, 0, (p_1493176377.nonterms).length - 1)];
            if ((nsuCmpIgnoreStyle(result_1493176379.name, name_1493176378) == 0)) {
            break BeforeRet;
            }
            
            res_587203635 = addInt(res_587203635, 1);
          }
      };
    };
    result_1493176379 = npegsnewNonTerminal(name_1493176378, getLine_1493175809(p_1493176377), getColumn_1493175806(p_1493176377));
    p_1493176377.nonterms.push(result_1493176379);;
  };

  return result_1493176379;

}

function spaceCost_1493172823(n_1493172824) {
              var Temporary4;
              var Temporary5;

  var result_1493172825 = 0;

    switch (n_1493172824.kind) {
    case 0:
      break;
    case 9:
    case 10:
    case 11:
    case 12:
    case 18:
    case 13:
    case 19:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 20:
    case 25:
    case 26:
    case 27:
      result_1493172825 = 1;
      break;
    case 14:
      result_1493172825 = 6;
      break;
    default: 
      Label1: {
        var i_1493172830 = 0;
        var colontmp__587203638 = 0;
        colontmp__587203638 = subInt(len_1493172571(n_1493172824), 1);
        var res_587203639 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_587203639 <= colontmp__587203638)) break Label3;
              i_1493172830 = res_587203639;
              var Temporary4 = n_1493172824;
              if (ConstSet293[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1493172229)); }
              result_1493172825 = addInt(result_1493172825, spaceCost_1493172823((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(i_1493172830, 0, (Temporary5).length - 1)]));
              if ((5 <= result_1493172825)) {
              break Label1;
              }
              
              res_587203639 = addInt(res_587203639, 1);
            }
        };
      };
      break;
    }

  return result_1493172825;

}

function npegsnonterminal(n_1493172837) {
  var result_1493172838 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((n_1493172837 == null)))) {
    failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,51,53,51,44,32,51,41,32,96,110,32,33,61,32,110,105,108,96,32]);
    }
    
    if (((n_1493172837.flags[0] != undefined) && (spaceCost_1493172823(n_1493172837.rule) < 5))) {
    result_1493172838 = nimCopy(result_1493172838, n_1493172837.rule, NTI1493172232);
    }
    else {
      result_1493172838 = nimCopy(result_1493172838, {kind: 14, nt: n_1493172837, term: [], ch: 0, charChoice: null, index: 0, sons: []}, NTI1493172232);
    }
    

  return result_1493172838;

}

function npegscharSet(s_1493172557) {
    var Temporary1;
    var Temporary2;

  var result_1493172558 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((s_1493172557[0] != undefined)))) {
    failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,49,54,57,44,32,51,41,32,96,39,92,120,48,48,39,32,110,111,116,105,110,32,115,96,32]);
    }
    
    result_1493172558 = nimCopy(result_1493172558, {kind: 13, charChoice: null, term: [], ch: 0, nt: null, index: 0, sons: []}, NTI1493172232);
    var Temporary1 = result_1493172558;
    if (ConstSet294[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1493172229)); }
    Temporary1.charChoice = {};
    var Temporary2 = result_1493172558;
    if (ConstSet295[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1493172229)); }
    Temporary2.charChoice = nimCopy(Temporary2.charChoice, s_1493172557, NTI1493172237);

  return result_1493172558;

}

function seqExpr_1493176492(p_1493176493) {
  var result_1493176494 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493176494 = nimCopy(result_1493176494, primary_1493176460(p_1493176493), NTI1493172232);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (p_1493176493.tok.kind) {
          case 17:
          case 18:
          case 20:
          case 5:
          case 6:
          case 7:
          case 9:
          case 2:
          case 3:
          case 21:
          case 22:
          case 24:
          case 23:
          case 25:
          case 11:
          case 12:
            result_1493176494 = nimCopy(result_1493176494, npegssequence([nimCopy(null, result_1493176494, NTI1493172232), primary_1493176460(p_1493176493)]), NTI1493172232);
            break;
          case 4:
            if (!(arrowIsNextTok_1493176229(p_1493176493))) {
            result_1493176494 = nimCopy(result_1493176494, npegssequence([nimCopy(null, result_1493176494, NTI1493172232), primary_1493176460(p_1493176493)]), NTI1493172232);
            }
            else {
              break Label1;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    };

  return result_1493176494;

}

function addChoice_1493172584(dest_1493172585, elem_1493172586) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;

    var L_1493172587 = subInt(len_1493172571(dest_1493172585), 1);
      if (!(0 <= L_1493172587)) Temporary1 = false; else {        var Temporary2 = dest_1493172585;
        if (ConstSet297[Temporary2.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1493172229)); }
        Temporary1 = ((Temporary3 = Temporary2.sons, Temporary3)[chckIndx(L_1493172587, 0, (Temporary3).length - 1)].kind == 13);      }    if (Temporary1) {
    switch (elem_1493172586.kind) {
    case 13:
      var Temporary4 = dest_1493172585;
      if (ConstSet298[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1493172229)); }
      var Temporary6 = dest_1493172585;
      if (ConstSet300[Temporary6.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1493172229)); }
      var Temporary8 = (Temporary7 = Temporary6.sons, Temporary7)[chckIndx(L_1493172587, 0, (Temporary7).length - 1)];
      if (ConstSet299[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1493172229)); }
      var Temporary9 = elem_1493172586;
      if (ConstSet301[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1493172229)); }
      (Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1493172587, 0, (Temporary5).length - 1)] = nimCopy((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1493172587, 0, (Temporary5).length - 1)], npegscharSet(SetPlus(Temporary8.charChoice, Temporary9.charChoice)), NTI1493172232);
      break;
    case 12:
      var Temporary10 = dest_1493172585;
      if (ConstSet302[Temporary10.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1493172229)); }
      var Temporary12 = dest_1493172585;
      if (ConstSet304[Temporary12.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1493172229)); }
      var Temporary14 = (Temporary13 = Temporary12.sons, Temporary13)[chckIndx(L_1493172587, 0, (Temporary13).length - 1)];
      if (ConstSet303[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1493172229)); }
      var Temporary15 = elem_1493172586;
      if (ConstSet305[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1493172229)); }
      (Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1493172587, 0, (Temporary11).length - 1)] = nimCopy((Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1493172587, 0, (Temporary11).length - 1)], npegscharSet(SetPlus(Temporary14.charChoice, setConstr(Temporary15.ch))), NTI1493172232);
      break;
    default: 
      add_1493172577(dest_1493172585, elem_1493172586);
      break;
    }
    }
    else {
    add_1493172577(dest_1493172585, elem_1493172586);
    }
    

  
}

function npegsOrderedChoice(a_1493172607) {
              var Temporary5;
    var Temporary8;
    var Temporary9;

  var result_1493172608 = [({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})];

    result_1493172608[0] = nimCopy(result_1493172608[0], {kind: 16, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);
    Label1: {
      var xHEX60gensym10_1493172628 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
      var i_587203649 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203649 < (a_1493172607).length)) break Label3;
            xHEX60gensym10_1493172628 = a_1493172607[chckIndx(i_587203649, 0, (a_1493172607).length - 1)];
            if ((xHEX60gensym10_1493172628.kind == 16)) {
            Label4: {
              var yHEX60gensym10_1493172636 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              var colontmp__587203645 = [];
              var Temporary5 = xHEX60gensym10_1493172628;
              if (ConstSet296[Temporary5.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1493172229)); }
              colontmp__587203645 = Temporary5.sons;
              var i_587203646 = 0;
              var L_587203647 = (colontmp__587203645).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_587203646 < L_587203647)) break Label7;
                    yHEX60gensym10_1493172636 = colontmp__587203645[chckIndx(i_587203646, 0, (colontmp__587203645).length - 1)];
                    addChoice_1493172584(result_1493172608[0], yHEX60gensym10_1493172636);
                    i_587203646 = addInt(i_587203646, 1);
                    if (!(((colontmp__587203645).length == L_587203647))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            else {
            addChoice_1493172584(result_1493172608[0], xHEX60gensym10_1493172628);
            }
            
            i_587203649 = addInt(i_587203649, 1);
          }
      };
    };
    if ((len_1493172571(result_1493172608[0]) == 1)) {
    var Temporary8 = result_1493172608[0];
    if (ConstSet306[Temporary8.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1493172229)); }
    result_1493172608[0] = nimCopy(result_1493172608[0], (Temporary9 = Temporary8.sons, Temporary9)[chckIndx(0, 0, (Temporary9).length - 1)], NTI1493172232);
    }
    

  return result_1493172608[0];

}

function parseExpr_1493176374(p_1493176375) {
  var result_1493176497 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493176497 = nimCopy(result_1493176497, seqExpr_1493176492(p_1493176375), NTI1493172232);
    Label1: {
        Label2: while (true) {
        if (!(p_1493176375.tok.kind == 14)) break Label2;
          getTok_1493176360(p_1493176375);
          result_1493176497 = nimCopy(result_1493176497, npegsOrderedChoice([nimCopy(null, result_1493176497, NTI1493172232), seqExpr_1493176492(p_1493176375)]), NTI1493172232);
        }
    };

  return result_1493176497;

}

function eat_1493176367(p_1493176368, kind_1493176369) {
    if ((p_1493176368.tok.kind == kind_1493176369)) {
    getTok_1493176360(p_1493176368);
    }
    else {
    pegError_1493176250(p_1493176368, (tokKindToStr_1493175766[chckIndx(kind_1493176369, 0, (tokKindToStr_1493175766).length - 1)] || []).concat([32,101,120,112,101,99,116,101,100] || []), (-1), (-1));
    }
    

  
}

function npegsCapture(a_1493172789) {
  var result_1493172790 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172790 = nimCopy(result_1493172790, {kind: 24, sons: [nimCopy(null, a_1493172789, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);

  return result_1493172790;

}

function any_1493172768() {
  var result_1493172769 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172769 = nimCopy(result_1493172769, {kind: 1, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172769;

}

function anyRune_1493172770() {
  var result_1493172771 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172771 = nimCopy(result_1493172771, {kind: 2, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172771;

}

function newLine_1493172772() {
  var result_1493172773 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172773 = nimCopy(result_1493172773, {kind: 3, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172773;

}

function npegsGreedyRep(a_1493172695) {
      var Temporary1;
      var Temporary2;

  var result_1493172696 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (a_1493172695.kind) {
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      if (true) {
      failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,50,51,55,44,32,53,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    case 12:
      var Temporary1 = a_1493172695;
      if (ConstSet316[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1493172229)); }
      result_1493172696 = nimCopy(result_1493172696, {kind: 18, ch: Temporary1.ch, term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);
      break;
    case 13:
      var Temporary2 = a_1493172695;
      if (ConstSet317[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1493172229)); }
      result_1493172696 = nimCopy(result_1493172696, {kind: 19, charChoice: Temporary2.charChoice, term: [], ch: 0, nt: null, index: 0, sons: []}, NTI1493172232);
      break;
    case 1:
    case 2:
      result_1493172696 = nimCopy(result_1493172696, {kind: 20, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);
      break;
    default: 
      result_1493172696 = nimCopy(result_1493172696, {kind: 17, sons: [nimCopy(null, a_1493172695, NTI1493172232)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);
      break;
    }

  return result_1493172696;

}

function unicodeLetter_1493172774() {
  var result_1493172775 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172775 = nimCopy(result_1493172775, {kind: 4, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172775;

}

function unicodeUpper_1493172778() {
  var result_1493172779 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172779 = nimCopy(result_1493172779, {kind: 6, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172779;

}

function unicodeLower_1493172776() {
  var result_1493172777 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172777 = nimCopy(result_1493172777, {kind: 5, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172777;

}

function unicodeTitle_1493172780() {
  var result_1493172781 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172781 = nimCopy(result_1493172781, {kind: 7, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172781;

}

function unicodeWhitespace_1493172782() {
  var result_1493172783 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172783 = nimCopy(result_1493172783, {kind: 8, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172783;

}

function builtin_1493176433(p_1493176434) {
  var result_1493176435 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (toJSStr(p_1493176434.tok.literal)) {
    case "n":
      result_1493176435 = nimCopy(result_1493176435, newLine_1493172772(), NTI1493172232);
      break;
    case "d":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet307), NTI1493172232);
      break;
    case "D":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet308), NTI1493172232);
      break;
    case "s":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet309), NTI1493172232);
      break;
    case "S":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet310), NTI1493172232);
      break;
    case "w":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet311), NTI1493172232);
      break;
    case "W":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet312), NTI1493172232);
      break;
    case "a":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet313), NTI1493172232);
      break;
    case "A":
      result_1493176435 = nimCopy(result_1493176435, npegscharSet(ConstSet314), NTI1493172232);
      break;
    case "ident":
      result_1493176435 = nimCopy(result_1493176435, npegssequence([npegscharSet(ConstSet315), npegsGreedyRep(npegscharSet(ConstSet318))]), NTI1493172232);
      break;
    case "letter":
      result_1493176435 = nimCopy(result_1493176435, unicodeLetter_1493172774(), NTI1493172232);
      break;
    case "upper":
      result_1493176435 = nimCopy(result_1493176435, unicodeUpper_1493172778(), NTI1493172232);
      break;
    case "lower":
      result_1493176435 = nimCopy(result_1493176435, unicodeLower_1493172776(), NTI1493172232);
      break;
    case "title":
      result_1493176435 = nimCopy(result_1493176435, unicodeTitle_1493172780(), NTI1493172232);
      break;
    case "white":
      result_1493176435 = nimCopy(result_1493176435, unicodeWhitespace_1493172782(), NTI1493172232);
      break;
    default: 
      pegError_1493176250(p_1493176434, ([117,110,107,110,111,119,110,32,98,117,105,108,116,45,105,110,58,32] || []).concat(p_1493176434.tok.literal || []), (-1), (-1));
      break;
    }

  return result_1493176435;

}

function npegstermChar(t_1493172549) {
  var result_1493172550 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((t_1493172549 == 0)))) {
    failedAssertImpl_268435541([112,101,103,115,46,110,105,109,40,49,54,52,44,32,51,41,32,96,116,32,33,61,32,39,92,120,48,48,39,96,32]);
    }
    
    result_1493172550 = nimCopy(result_1493172550, {kind: 12, ch: t_1493172549, term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1493172232);

  return result_1493172550;

}

function endAnchor_1493172786() {
  var result_1493172787 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172787 = nimCopy(result_1493172787, npegsNotPredicate(any_1493172768()), NTI1493172232);

  return result_1493172787;

}

function startAnchor_1493172784() {
  var result_1493172785 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493172785 = nimCopy(result_1493172785, {kind: 32, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1493172232);

  return result_1493172785;

}

function npegsbackref(index_1493172796, reverse_1493172797) {
    var Temporary1;

  var result_1493172798 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1493172797) {
    Temporary1 = negInt(index_1493172796);
    }
    else {
    Temporary1 = subInt(index_1493172796, 1);
    }
    
    result_1493172798 = nimCopy(result_1493172798, {kind: 25, index: nimCopy(null, chckRange(Temporary1, (-20), 19), NTI1493172239), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1493172232);

  return result_1493172798;

}

function npegsbackrefIgnoreCase(index_1493172816, reverse_1493172817) {
    var Temporary1;

  var result_1493172818 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1493172817) {
    Temporary1 = negInt(index_1493172816);
    }
    else {
    Temporary1 = subInt(index_1493172816, 1);
    }
    
    result_1493172818 = nimCopy(result_1493172818, {kind: 26, index: nimCopy(null, chckRange(Temporary1, (-20), 19), NTI1493172239), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1493172232);

  return result_1493172818;

}

function npegsbackrefIgnoreStyle(index_1493172820, reverse_1493172821) {
    var Temporary1;

  var result_1493172822 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1493172821) {
    Temporary1 = negInt(index_1493172820);
    }
    else {
    Temporary1 = subInt(index_1493172820, 1);
    }
    
    result_1493172822 = nimCopy(result_1493172822, {kind: 27, index: nimCopy(null, chckRange(Temporary1, (-20), 19), NTI1493172239), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1493172232);

  return result_1493172822;

}

function modifiedBackref_1493176427(s_1493176428, m_1493176429) {
    var Temporary1;

  var result_1493176430 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    var reverse_1493176431 = (s_1493176428 < 0);
    if (reverse_1493176431) {
    Temporary1 = negInt(s_1493176428);
    }
    else {
    Temporary1 = s_1493176428;
    }
    
    var index_1493176432 = Temporary1;
    switch (m_1493176429) {
    case 0:
    case 1:
      result_1493176430 = nimCopy(result_1493176430, npegsbackref(chckRange(index_1493176432, 1, 20), reverse_1493176431), NTI1493172232);
      break;
    case 2:
      result_1493176430 = nimCopy(result_1493176430, npegsbackrefIgnoreCase(chckRange(index_1493176432, 1, 20), reverse_1493176431), NTI1493172232);
      break;
    case 3:
      result_1493176430 = nimCopy(result_1493176430, npegsbackrefIgnoreStyle(chckRange(index_1493176432, 1, 20), reverse_1493176431), NTI1493172232);
      break;
    }

  return result_1493176430;

}

function npegsGreedyPosRep(a_1493172721) {
  var result_1493172722 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

  BeforeRet: {
    result_1493172722 = nimCopy(result_1493172722, npegssequence([nimCopy(null, a_1493172721, NTI1493172232), npegsGreedyRep(a_1493172721)]), NTI1493172232);
    break BeforeRet;
  };

  return result_1493172722;

}

function primary_1493176460(p_1493176461) {
  var result_1493176462 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

  BeforeRet: {
    switch (p_1493176461.tok.kind) {
    case 17:
      getTok_1493176360(p_1493176461);
      result_1493176462 = nimCopy(result_1493176462, npegsAndPredicate(primary_1493176460(p_1493176461)), NTI1493172232);
      break BeforeRet;
      break;
    case 18:
      getTok_1493176360(p_1493176461);
      result_1493176462 = nimCopy(result_1493176462, npegsNotPredicate(primary_1493176460(p_1493176461)), NTI1493172232);
      break BeforeRet;
      break;
    case 20:
      getTok_1493176360(p_1493176461);
      result_1493176462 = nimCopy(result_1493176462, npegsSearch(primary_1493176460(p_1493176461)), NTI1493172232);
      break BeforeRet;
      break;
    case 11:
      getTok_1493176360(p_1493176461);
      result_1493176462 = nimCopy(result_1493176462, npgegsCapturedSearch(token_1493176452(primary_1493176460(p_1493176461), p_1493176461)), NTI1493172232);
      break BeforeRet;
      break;
    default: 
      break;
    }
    switch (p_1493176461.tok.kind) {
    case 4:
      if (p_1493176461.identIsVerbatim) {
      var m_1493176463 = p_1493176461.tok.modifier;
      if ((m_1493176463 == 0)) {
      m_1493176463 = p_1493176461.modifier;
      }
      
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(modifiedTerm_1493176423(p_1493176461.tok.literal, m_1493176463), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      }
      else {
      if (!(arrowIsNextTok_1493176229(p_1493176461))) {
      var nt_1493176468 = getNonTerminal_1493176376(p_1493176461, p_1493176461.tok.literal);
      nt_1493176468.flags[1] = true;
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(npegsnonterminal(nt_1493176468), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      }
      else {
      pegError_1493176250(p_1493176461, ([101,120,112,114,101,115,115,105,111,110,32,101,120,112,101,99,116,101,100,44,32,98,117,116,32,102,111,117,110,100,58,32] || []).concat(p_1493176461.tok.literal || []), (-1), (-1));
      }
      }
      break;
    case 5:
      var m_1493176473 = p_1493176461.tok.modifier;
      if ((m_1493176473 == 0)) {
      m_1493176473 = p_1493176461.modifier;
      }
      
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(modifiedTerm_1493176423(p_1493176461.tok.literal, m_1493176473), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 6:
      if ((p_1493176461.tok.charset[0] != undefined)) {
      pegError_1493176250(p_1493176461, [98,105,110,97,114,121,32,122,101,114,111,32,40,39,92,48,39,41,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,99,104,97,114,97,99,116,101,114,32,99,108,97,115,115], (-1), (-1));
      }
      
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(npegscharSet(p_1493176461.tok.charset), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 7:
      getTok_1493176360(p_1493176461);
      result_1493176462 = nimCopy(result_1493176462, parseExpr_1493176374(p_1493176461), NTI1493172232);
      eat_1493176367(p_1493176461, 8);
      break;
    case 9:
      getTok_1493176360(p_1493176461);
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(npegsCapture(parseExpr_1493176374(p_1493176461)), p_1493176461), NTI1493172232);
      eat_1493176367(p_1493176461, 10);
      p_1493176461.captures = addInt(p_1493176461.captures, 1);
      break;
    case 12:
      result_1493176462 = nimCopy(result_1493176462, npegsCapture({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 2:
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(any_1493172768(), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 3:
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(anyRune_1493172770(), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 21:
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(builtin_1493176433(p_1493176461), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 22:
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(npegstermChar(p_1493176461.tok.literal[chckIndx(0, 0, (p_1493176461.tok.literal).length - 1)]), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 24:
      result_1493176462 = nimCopy(result_1493176462, endAnchor_1493172786(), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 25:
      result_1493176462 = nimCopy(result_1493176462, startAnchor_1493172784(), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    case 23:
      if (((p_1493176461.captures < absInt(p_1493176461.tok.index)) || (p_1493176461.tok.index == 0))) {
      pegError_1493176250(p_1493176461, ([105,110,118,97,108,105,100,32,98,97,99,107,32,114,101,102,101,114,101,110,99,101,32,105,110,100,101,120,58,32] || []).concat(HEX24_385875976(p_1493176461.tok.index) || []), (-1), (-1));
      }
      
      var m_1493176487 = p_1493176461.tok.modifier;
      if ((m_1493176487 == 0)) {
      m_1493176487 = p_1493176461.modifier;
      }
      
      result_1493176462 = nimCopy(result_1493176462, token_1493176452(modifiedBackref_1493176427(p_1493176461.tok.index, m_1493176487), p_1493176461), NTI1493172232);
      getTok_1493176360(p_1493176461);
      break;
    default: 
      pegError_1493176250(p_1493176461, ([101,120,112,114,101,115,115,105,111,110,32,101,120,112,101,99,116,101,100,44,32,98,117,116,32,102,111,117,110,100,58,32] || []).concat(p_1493176461.tok.literal || []), (-1), (-1));
      getTok_1493176360(p_1493176461);
      break;
    }
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (p_1493176461.tok.kind) {
          case 19:
            result_1493176462 = nimCopy(result_1493176462, npegsOptional(result_1493176462), NTI1493172232);
            getTok_1493176360(p_1493176461);
            break;
          case 15:
            result_1493176462 = nimCopy(result_1493176462, npegsGreedyRep(result_1493176462), NTI1493172232);
            getTok_1493176360(p_1493176461);
            break;
          case 16:
            result_1493176462 = nimCopy(result_1493176462, npegsGreedyPosRep(result_1493176462), NTI1493172232);
            getTok_1493176360(p_1493176461);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
  };

  return result_1493176462;

}

function parseRule_1493176502(p_1493176503) {
      var Temporary1;

  var result_1493176504 = null;

      if (!(p_1493176503.tok.kind == 4)) Temporary1 = false; else {        Temporary1 = arrowIsNextTok_1493176229(p_1493176503);      }    if (Temporary1) {
    result_1493176504 = getNonTerminal_1493176376(p_1493176503, p_1493176503.tok.literal);
    if ((result_1493176504.flags[0] != undefined)) {
    pegError_1493176250(p_1493176503, ([97,116,116,101,109,112,116,32,116,111,32,114,101,100,101,102,105,110,101,58,32] || []).concat(result_1493176504.name || []), (-1), (-1));
    }
    
    result_1493176504.line = getLine_1493175809(p_1493176503);
    result_1493176504.col = getColumn_1493175806(p_1493176503);
    getTok_1493176360(p_1493176503);
    eat_1493176367(p_1493176503, 13);
    result_1493176504.rule = nimCopy(result_1493176504.rule, parseExpr_1493176374(p_1493176503), NTI1493172232);
    result_1493176504.flags[0] = true;
    }
    else {
    pegError_1493176250(p_1493176503, ([114,117,108,101,32,101,120,112,101,99,116,101,100,44,32,98,117,116,32,102,111,117,110,100,58,32] || []).concat(p_1493176503.tok.literal || []), (-1), (-1));
    }
    

  return result_1493176504;

}

function rawParse_1493176517(p_1493176518) {
      var Temporary3;

  var result_1493176519 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    Label1: {
        Label2: while (true) {
        if (!(p_1493176518.tok.kind == 21)) break Label2;
          switch (toJSStr(p_1493176518.tok.literal)) {
          case "i":
            p_1493176518.modifier = 2;
            getTok_1493176360(p_1493176518);
            break;
          case "y":
            p_1493176518.modifier = 3;
            getTok_1493176360(p_1493176518);
            break;
          case "skip":
            getTok_1493176360(p_1493176518);
            p_1493176518.skip = nimCopy(p_1493176518.skip, npegsOptional(primary_1493176460(p_1493176518)), NTI1493172232);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
      if (!(p_1493176518.tok.kind == 4)) Temporary3 = false; else {        Temporary3 = arrowIsNextTok_1493176229(p_1493176518);      }    if (Temporary3) {
    result_1493176519 = nimCopy(result_1493176519, parseRule_1493176502(p_1493176518).rule, NTI1493172232);
    Label4: {
        Label5: while (true) {
        if (!!((p_1493176518.tok.kind == 1))) break Label5;
          var _ = parseRule_1493176502(p_1493176518);
        }
    };
    }
    else {
      p_1493176518.identIsVerbatim = true;
      result_1493176519 = nimCopy(result_1493176519, parseExpr_1493176374(p_1493176518), NTI1493172232);
    }
    
    if (!((p_1493176518.tok.kind == 1))) {
    pegError_1493176250(p_1493176518, ([69,79,70,32,101,120,112,101,99,116,101,100,44,32,98,117,116,32,102,111,117,110,100,58,32] || []).concat(p_1493176518.tok.literal || []), (-1), (-1));
    }
    
    Label6: {
      var i_1493176543 = 0;
      var colontmp__587203618 = 0;
      colontmp__587203618 = (p_1493176518.nonterms).length - 1;
      var res_587203619 = 0;
      Label7: {
          Label8: while (true) {
          if (!(res_587203619 <= colontmp__587203618)) break Label8;
            i_1493176543 = res_587203619;
            var nt_1493176544 = p_1493176518.nonterms[chckIndx(i_1493176543, 0, (p_1493176518.nonterms).length - 1)];
            if (!((nt_1493176544.flags[0] != undefined))) {
            pegError_1493176250(p_1493176518, ([117,110,100,101,99,108,97,114,101,100,32,105,100,101,110,116,105,102,105,101,114,58,32] || []).concat(nt_1493176544.name || []), nt_1493176544.line, nt_1493176544.col);
            }
            else {
            if ((!((nt_1493176544.flags[1] != undefined)) && (0 < i_1493176543))) {
            pegError_1493176250(p_1493176518, ([117,110,117,115,101,100,32,114,117,108,101,58,32] || []).concat(nt_1493176544.name || []), nt_1493176544.line, nt_1493176544.col);
            }
            }
            res_587203619 = addInt(res_587203619, 1);
          }
      };
    };

  return result_1493176519;

}

function parsePeg_1493176553(pattern_1493176554, filename_1493176555, line_1493176556, col_1493176557) {
  var result_1493176558 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    var p_1493176559 = [({m_type: NTI1493178275, tok: ({kind: 0, modifier: 0, literal: [], charset: {}, index: 0}), nonterms: [], modifier: 0, captures: 0, identIsVerbatim: false, skip: ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}), bufpos: 0, buf: [], lineNumber: 0, lineStart: 0, colOffset: 0, filename: []})];
    init_1493175800(p_1493176559[0], pattern_1493176554, filename_1493176555, line_1493176556, col_1493176557);
    p_1493176559[0].tok.kind = 0;
    p_1493176559[0].tok.modifier = 0;
    p_1493176559[0].tok.literal = nimCopy(null, [], NTI33554449);
    p_1493176559[0].tok.charset = nimCopy(p_1493176559[0].tok.charset, ConstSet266, NTI1493177983);
    p_1493176559[0].nonterms = nimCopy(null, [], NTI1493178470);
    p_1493176559[0].identIsVerbatim = false;
    getTok_1493176360(p_1493176559[0]);
    result_1493176558 = nimCopy(result_1493176558, rawParse_1493176517(p_1493176559[0]), NTI1493172232);

  return result_1493176558;

}

function peg_1493176580(pattern_1493176581) {
  var result_1493176582 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1493176582 = nimCopy(result_1493176582, parsePeg_1493176553(pattern_1493176581, [112,97,116,116,101,114,110], 1, 0), NTI1493172232);

  return result_1493176582;

}

function mathCommands_2264924174(doc_2264924175) {

function underCmd_2264924183(arg_2264924184) {
  var result_2264924185 = [];

    Label1: {
      var fmtRes_2264924189 = [mnewString(0)];
      fmtRes_2264924189[0].push.apply(fmtRes_2264924189[0], [91]);;
      formatValue_1442840747(fmtRes_2264924189, 0, arg_2264924184, []);
      fmtRes_2264924189[0].push.apply(fmtRes_2264924189[0], [93]);;
    };
    result_2264924185 = nimCopy(null, fmtRes_2264924189[0], NTI33554449);

  return result_2264924185;

}
    
function HEX3Aanonymous_2264924195(arg_2264924196) {
      var result_2264924197 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [95]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924182 = expandArguments_2197815314(doc_2264924175, [95], arg_2264924196, [HEX21_1593835705(0)]);
        result_2264924197 = nimCopy(result_2264924197, {typ: 0, str: underCmd_2264924183(to_2181038173(vals_2264924182[chckIndx(0, 0, (vals_2264924182).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924197;

    }

function fracCmd_2264924253(a_2264924255, b_2264924256) {
    var Temporary1;

  var result_2264924257 = [];

    if (isSome_2214592897(a_2264924255)) {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,36,49,125,123,36,50,125], [nimCopy(null, get_2214592918(a_2264924255), NTI33554449), nimCopy(null, b_2264924256, NTI33554449)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,49,125,123,36,49,125], [nimCopy(null, b_2264924256, NTI33554449)]);
    }
    
    result_2264924257 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264924257;

}
    
function HEX3Aanonymous_2264924285(arg_2264924286) {
      var result_2264924287 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [47]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924252 = expandArguments_2197815314(doc_2264924175, [47], arg_2264924286, [HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264924287 = nimCopy(result_2264924287, {typ: 0, str: fracCmd_2264924253(to_2214592966(vals_2264924252[chckIndx(0, 0, (vals_2264924252).length - 1)]), to_2181038173(vals_2264924252[chckIndx(1, 0, (vals_2264924252).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924287;

    }

function dotCmd_2264924353(arg_2264924354) {
  var result_2264924355 = [];

    result_2264924355 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,40,36,49,92,114,105,103,104,116,41,125], arg_2264924354), NTI33554449);

  return result_2264924355;

}
    
function HEX3Aanonymous_2264924361(arg_2264924362) {
      var result_2264924363 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [46]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924352 = expandArguments_2197815314(doc_2264924175, [46], arg_2264924362, [HEX21_1593835705(0)]);
        result_2264924363 = nimCopy(result_2264924363, {typ: 0, str: dotCmd_2264924353(to_2181038173(vals_2264924352[chckIndx(0, 0, (vals_2264924352).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924363;

    }

function bracketsCmd_2264924419(arg_2264924420) {
  var result_2264924421 = [];

    result_2264924421 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,91,36,49,92,114,105,103,104,116,93,125], arg_2264924420), NTI33554449);

  return result_2264924421;

}
    
function HEX3Aanonymous_2264924427(arg_2264924428) {
      var result_2264924429 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [40,41]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924418 = expandArguments_2197815314(doc_2264924175, [40,41], arg_2264924428, [HEX21_1593835705(0)]);
        result_2264924429 = nimCopy(result_2264924429, {typ: 0, str: bracketsCmd_2264924419(to_2181038173(vals_2264924418[chckIndx(0, 0, (vals_2264924418).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924429;

    }

function bracesCmd_2264924485(x_2264924486, y_2264924488) {
    var Temporary1;

  var result_2264924489 = [];

    if (isSome_2214592897(y_2264924488)) {
    var y_2264924504 = nimCopy(null, unsafeGet_2248147493(y_2264924488), NTI33554449);
    Temporary1 = ([92,44,92,109,105,100,100,108,101,124,92,44] || []).concat(y_2264924504 || []);
    }
    else {
    Temporary1 = [];
    }
    
    result_2264924489 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,92,123,36,49,92,114,105,103,104,116,92,125,125], (x_2264924486 || []).concat(Temporary1 || [])), NTI33554449);

  return result_2264924489;

}
    
function HEX3Aanonymous_2264924510(arg_2264924511) {
      var result_2264924512 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [123,125]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924484 = expandArguments_2197815314(doc_2264924175, [123,125], arg_2264924511, [HEX21_1593835705(0), HEX3F_1593835740(0)]);
        result_2264924512 = nimCopy(result_2264924512, {typ: 0, str: bracesCmd_2264924485(to_2181038173(vals_2264924484[chckIndx(0, 0, (vals_2264924484).length - 1)]), to_2214592966(vals_2264924484[chckIndx(1, 0, (vals_2264924484).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924512;

    }

function anglesCmd_2264924578(arg_2264924579) {
  var result_2264924580 = [];

    result_2264924580 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,92,108,97,110,103,108,101,32,36,49,92,114,105,103,104,116,92,114,97,110,103,108,101,125], arg_2264924579), NTI33554449);

  return result_2264924580;

}
    
function HEX3Aanonymous_2264924586(arg_2264924587) {
      var result_2264924588 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [60,62]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924577 = expandArguments_2197815314(doc_2264924175, [60,62], arg_2264924587, [HEX21_1593835705(0)]);
        result_2264924588 = nimCopy(result_2264924588, {typ: 0, str: anglesCmd_2264924578(to_2181038173(vals_2264924577[chckIndx(0, 0, (vals_2264924577).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924588;

    }

function pipeCmd_2264924644(arg_2264924645) {
  var result_2264924646 = [];

    result_2264924646 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,92,108,118,101,114,116,32,36,49,92,114,105,103,104,116,92,114,118,101,114,116,125], arg_2264924645), NTI33554449);

  return result_2264924646;

}
    
function HEX3Aanonymous_2264924652(arg_2264924653) {
      var result_2264924654 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [124]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924643 = expandArguments_2197815314(doc_2264924175, [124], arg_2264924653, [HEX21_1593835705(0)]);
        result_2264924654 = nimCopy(result_2264924654, {typ: 0, str: pipeCmd_2264924644(to_2181038173(vals_2264924643[chckIndx(0, 0, (vals_2264924643).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924654;

    }

function pipePipeCmd_2264924710(arg_2264924711) {
  var result_2264924712 = [];

    result_2264924712 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,92,108,86,101,114,116,32,36,49,92,114,105,103,104,116,92,114,86,101,114,116,125], arg_2264924711), NTI33554449);

  return result_2264924712;

}
    
function HEX3Aanonymous_2264924718(arg_2264924719) {
      var result_2264924720 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [124,124]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924709 = expandArguments_2197815314(doc_2264924175, [124,124], arg_2264924719, [HEX21_1593835705(0)]);
        result_2264924720 = nimCopy(result_2264924720, {typ: 0, str: pipePipeCmd_2264924710(to_2181038173(vals_2264924709[chckIndx(0, 0, (vals_2264924709).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924720;

    }

function vDotCmd_2264924776(arg_2264924777) {
  var result_2264924778 = [];

    result_2264924778 = nimCopy(null, nsuFormatSingleElem([123,92,111,118,101,114,103,114,111,117,112,123,92,117,110,100,101,114,103,114,111,117,112,123,36,49,125,125,125], arg_2264924777), NTI33554449);

  return result_2264924778;

}
    
function HEX3Aanonymous_2264924784(arg_2264924785) {
      var result_2264924786 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [118,46]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924775 = expandArguments_2197815314(doc_2264924175, [118,46], arg_2264924785, [HEX21_1593835705(0)]);
        result_2264924786 = nimCopy(result_2264924786, {typ: 0, str: vDotCmd_2264924776(to_2181038173(vals_2264924775[chckIndx(0, 0, (vals_2264924775).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924786;

    }

function floorCmd_2264924842(arg_2264924843) {
  var result_2264924844 = [];

    result_2264924844 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,92,108,102,108,111,111,114,32,36,49,92,114,105,103,104,116,92,114,102,108,111,111,114,125], arg_2264924843), NTI33554449);

  return result_2264924844;

}
    
function HEX3Aanonymous_2264924850(arg_2264924851) {
      var result_2264924852 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [102,108,111,111,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924841 = expandArguments_2197815314(doc_2264924175, [102,108,111,111,114], arg_2264924851, [HEX21_1593835705(0)]);
        result_2264924852 = nimCopy(result_2264924852, {typ: 0, str: floorCmd_2264924842(to_2181038173(vals_2264924841[chckIndx(0, 0, (vals_2264924841).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924852;

    }

function ceilCmd_2264924908(arg_2264924909) {
  var result_2264924910 = [];

    result_2264924910 = nimCopy(null, nsuFormatSingleElem([123,92,108,101,102,116,92,108,99,101,105,108,32,36,49,92,114,105,103,104,116,92,114,99,101,105,108,125], arg_2264924909), NTI33554449);

  return result_2264924910;

}
    
function HEX3Aanonymous_2264924916(arg_2264924917) {
      var result_2264924918 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [99,101,105,108]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924907 = expandArguments_2197815314(doc_2264924175, [99,101,105,108], arg_2264924917, [HEX21_1593835705(0)]);
        result_2264924918 = nimCopy(result_2264924918, {typ: 0, str: ceilCmd_2264924908(to_2181038173(vals_2264924907[chckIndx(0, 0, (vals_2264924907).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264924918;

    }

function intCmd_2264924974(lb_2264924976, ub_2264924978, expr_2264924979, varname_2264924980) {
    var Temporary1;
    var Temporary2;

  var result_2264924981 = [];

    if (isSome_2214592897(lb_2264924976)) {
    if (isSome_2214592897(ub_2264924978)) {
    Temporary2 = nsuFormatOpenArray([92,105,110,116,95,123,36,49,125,94,123,36,50,125,36,51,92,44,92,109,97,116,104,114,109,32,100,36,52], [nimCopy(null, get_2214592918(lb_2264924976), NTI33554449), nimCopy(null, get_2214592918(ub_2264924978), NTI33554449), nimCopy(null, expr_2264924979, NTI33554449), nimCopy(null, varname_2264924980, NTI33554449)]);
    }
    else {
    Temporary2 = nsuFormatOpenArray([92,105,110,116,95,123,36,49,125,36,50,92,44,92,109,97,116,104,114,109,32,100,36,51], [nimCopy(null, get_2214592918(lb_2264924976), NTI33554449), nimCopy(null, expr_2264924979, NTI33554449), nimCopy(null, varname_2264924980, NTI33554449)]);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,105,110,116,32,36,49,92,44,92,109,97,116,104,114,109,32,100,36,50], [nimCopy(null, expr_2264924979, NTI33554449), nimCopy(null, varname_2264924980, NTI33554449)]);
    }
    
    result_2264924981 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264924981;

}
    
function HEX3Aanonymous_2264925046(arg_2264925047) {
      var result_2264925048 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,110,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264924973 = expandArguments_2197815314(doc_2264924175, [105,110,116], arg_2264925047, [HEX3F_1593835740(0), HEX3F_1593835740(0), HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2264925048 = nimCopy(result_2264925048, {typ: 0, str: intCmd_2264924974(to_2214592966(vals_2264924973[chckIndx(0, 0, (vals_2264924973).length - 1)]), to_2214592966(vals_2264924973[chckIndx(1, 0, (vals_2264924973).length - 1)]), to_2181038173(vals_2264924973[chckIndx(2, 0, (vals_2264924973).length - 1)]), to_2181038173(vals_2264924973[chckIndx(3, 0, (vals_2264924973).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925048;

    }

function intdCmd_2264925128(varname_2264925129, lb_2264925131, ub_2264925133, expr_2264925134) {
  var result_2264925135 = [];

    result_2264925135 = nimCopy(null, intCmd_2264924974(lb_2264925131, ub_2264925133, expr_2264925134, varname_2264925129), NTI33554449);

  return result_2264925135;

}
    
function HEX3Aanonymous_2264925141(arg_2264925142) {
      var result_2264925143 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,110,116,100]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925127 = expandArguments_2197815314(doc_2264924175, [105,110,116,100], arg_2264925142, [HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264925143 = nimCopy(result_2264925143, {typ: 0, str: intdCmd_2264925128(to_2181038173(vals_2264925127[chckIndx(0, 0, (vals_2264925127).length - 1)]), to_2214592966(vals_2264925127[chckIndx(1, 0, (vals_2264925127).length - 1)]), to_2214592966(vals_2264925127[chckIndx(2, 0, (vals_2264925127).length - 1)]), to_2181038173(vals_2264925127[chckIndx(3, 0, (vals_2264925127).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925143;

    }

function dintCmd_2264925223(varname_2264925224, lb_2264925226, ub_2264925228, expr_2264925229) {
    var Temporary1;
    var Temporary2;

  var result_2264925230 = [];

    if (isSome_2214592897(lb_2264925226)) {
    if (isSome_2214592897(ub_2264925228)) {
    Temporary2 = nsuFormatOpenArray([92,105,110,116,95,123,36,49,125,94,123,36,50,125,92,109,97,116,104,114,109,32,100,36,52,92,44,36,51], [nimCopy(null, get_2214592918(lb_2264925226), NTI33554449), nimCopy(null, get_2214592918(ub_2264925228), NTI33554449), nimCopy(null, expr_2264925229, NTI33554449), nimCopy(null, varname_2264925224, NTI33554449)]);
    }
    else {
    Temporary2 = nsuFormatOpenArray([92,105,110,116,95,123,36,49,125,92,109,97,116,104,114,109,32,100,36,51,92,44,36,50], [nimCopy(null, get_2214592918(lb_2264925226), NTI33554449), nimCopy(null, expr_2264925229, NTI33554449), nimCopy(null, varname_2264925224, NTI33554449)]);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,105,110,116,92,109,97,116,104,114,109,32,100,36,50,92,44,36,49], [nimCopy(null, expr_2264925229, NTI33554449), nimCopy(null, varname_2264925224, NTI33554449)]);
    }
    
    result_2264925230 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264925230;

}
    
function HEX3Aanonymous_2264925295(arg_2264925296) {
      var result_2264925297 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,105,110,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925222 = expandArguments_2197815314(doc_2264924175, [100,105,110,116], arg_2264925296, [HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264925297 = nimCopy(result_2264925297, {typ: 0, str: dintCmd_2264925223(to_2181038173(vals_2264925222[chckIndx(0, 0, (vals_2264925222).length - 1)]), to_2214592966(vals_2264925222[chckIndx(1, 0, (vals_2264925222).length - 1)]), to_2214592966(vals_2264925222[chckIndx(2, 0, (vals_2264925222).length - 1)]), to_2181038173(vals_2264925222[chckIndx(3, 0, (vals_2264925222).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925297;

    }

function limCmd_2264925377(varname_2264925379, point_2264925381, set_2264925383) {
    var Temporary1;

  var result_2264925384 = [];

    if (isSome_2214592897(set_2264925383)) {
    var set_2264925399 = nimCopy(null, unsafeGet_2248147493(set_2264925383), NTI33554449);
    Temporary1 = nsuFormatOpenArray([92,108,105,109,95,123,92,115,117,98,115,116,97,99,107,123,36,49,92,116,111,32,36,50,92,92,36,49,92,105,110,32,36,51,125,125], [get_2231369976(varname_2264925379, [110]), get_2231369976(point_2264925381, [92,105,110,102,116,121]), nimCopy(null, set_2264925399, NTI33554449)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,108,105,109,95,123,36,49,92,116,111,32,36,50,125], [get_2231369976(varname_2264925379, [110]), get_2231369976(point_2264925381, [92,105,110,102,116,121])]);
    }
    
    result_2264925384 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264925384;

}
    
function HEX3Aanonymous_2264925469(arg_2264925470) {
      var result_2264925471 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,109]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925376 = expandArguments_2197815314(doc_2264924175, [108,105,109], arg_2264925470, [HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2264925471 = nimCopy(result_2264925471, {typ: 0, str: limCmd_2264925377(to_2214592966(vals_2264925376[chckIndx(0, 0, (vals_2264925376).length - 1)]), to_2214592966(vals_2264925376[chckIndx(1, 0, (vals_2264925376).length - 1)]), to_2214592966(vals_2264925376[chckIndx(2, 0, (vals_2264925376).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925471;

    }

function liminfCmd_2264925553(varname_2264925555, point_2264925557) {
  var result_2264925558 = [];

    result_2264925558 = nimCopy(null, nsuFormatOpenArray([92,108,105,109,105,110,102,95,123,36,49,92,116,111,32,36,50,125], [get_2231369976(varname_2264925555, [110]), get_2231369976(point_2264925557, [92,105,110,102,116,121])]), NTI33554449);

  return result_2264925558;

}
    
function HEX3Aanonymous_2264925596(arg_2264925597) {
      var result_2264925598 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,109,105,110,102]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925552 = expandArguments_2197815314(doc_2264924175, [108,105,109,105,110,102], arg_2264925597, [HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2264925598 = nimCopy(result_2264925598, {typ: 0, str: liminfCmd_2264925553(to_2214592966(vals_2264925552[chckIndx(0, 0, (vals_2264925552).length - 1)]), to_2214592966(vals_2264925552[chckIndx(1, 0, (vals_2264925552).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925598;

    }

function limsupCmd_2264925670(varname_2264925672, point_2264925674) {
  var result_2264925675 = [];

    result_2264925675 = nimCopy(null, nsuFormatOpenArray([92,108,105,109,115,117,112,95,123,36,49,92,116,111,32,36,50,125], [get_2231369976(varname_2264925672, [110]), get_2231369976(point_2264925674, [92,105,110,102,116,121])]), NTI33554449);

  return result_2264925675;

}
    
function HEX3Aanonymous_2264925713(arg_2264925714) {
      var result_2264925715 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,109,115,117,112]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925669 = expandArguments_2197815314(doc_2264924175, [108,105,109,115,117,112], arg_2264925714, [HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2264925715 = nimCopy(result_2264925715, {typ: 0, str: limsupCmd_2264925670(to_2214592966(vals_2264925669[chckIndx(0, 0, (vals_2264925669).length - 1)]), to_2214592966(vals_2264925669[chckIndx(1, 0, (vals_2264925669).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925715;

    }

function sumCmd_2264925787(varname_2264925789, lowerBound_2264925791, upperBound_2264925793) {
  var result_2264925794 = [];

    result_2264925794 = nimCopy(null, nsuFormatOpenArray([92,115,117,109,95,123,36,49,61,36,50,125,94,123,36,51,125], [get_2231369976(varname_2264925789, [110]), get_2231369976(lowerBound_2264925791, [49]), get_2231369976(upperBound_2264925793, [92,105,110,102,116,121])]), NTI33554449);

  return result_2264925794;

}
    
function HEX3Aanonymous_2264925848(arg_2264925849) {
      var result_2264925850 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [115,117,109]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925786 = expandArguments_2197815314(doc_2264924175, [115,117,109], arg_2264925849, [HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2264925850 = nimCopy(result_2264925850, {typ: 0, str: sumCmd_2264925787(to_2214592966(vals_2264925786[chckIndx(0, 0, (vals_2264925786).length - 1)]), to_2214592966(vals_2264925786[chckIndx(1, 0, (vals_2264925786).length - 1)]), to_2214592966(vals_2264925786[chckIndx(2, 0, (vals_2264925786).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925850;

    }

function ddCmd_2264925932(x_2264925933) {
  var result_2264925934 = [];

    result_2264925934 = nimCopy(null, nsuFormatOpenArray([123,92,109,97,116,104,114,109,32,100,36,49,125], [nimCopy(null, x_2264925933, NTI33554449)]), NTI33554449);

  return result_2264925934;

}
    
function HEX3Aanonymous_2264925940(arg_2264925941) {
      var result_2264925942 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,100]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925931 = expandArguments_2197815314(doc_2264924175, [100,100], arg_2264925941, [HEX21_1593835705(0)]);
        result_2264925942 = nimCopy(result_2264925942, {typ: 0, str: ddCmd_2264925932(to_2181038173(vals_2264925931[chckIndx(0, 0, (vals_2264925931).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264925942;

    }

function ddExpCmd_2264925998(n_2264925999, x_2264926000) {
  var result_2264926001 = [];

    result_2264926001 = nimCopy(null, nsuFormatOpenArray([123,92,109,97,116,104,114,109,32,100,94,123,36,49,125,36,50,125], [nimCopy(null, n_2264925999, NTI33554449), nimCopy(null, x_2264926000, NTI33554449)]), NTI33554449);

  return result_2264926001;

}
    
function HEX3Aanonymous_2264926007(arg_2264926008) {
      var result_2264926009 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,100,94]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264925997 = expandArguments_2197815314(doc_2264924175, [100,100,94], arg_2264926008, [HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2264926009 = nimCopy(result_2264926009, {typ: 0, str: ddExpCmd_2264925998(to_2181038173(vals_2264925997[chckIndx(0, 0, (vals_2264925997).length - 1)]), to_2181038173(vals_2264925997[chckIndx(1, 0, (vals_2264925997).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926009;

    }

function dvCmd_2264926069(f_2264926071, x_2264926072) {
    var Temporary1;

  var result_2264926073 = [];

    if (isSome_2214592897(f_2264926071)) {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,109,97,116,104,114,109,32,100,36,49,125,123,92,109,97,116,104,114,109,32,100,36,50,125], [nimCopy(null, get_2214592918(f_2264926071), NTI33554449), nimCopy(null, x_2264926072, NTI33554449)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,109,97,116,104,114,109,32,100,125,123,92,109,97,116,104,114,109,32,100,36,49,125], [nimCopy(null, x_2264926072, NTI33554449)]);
    }
    
    result_2264926073 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264926073;

}
    
function HEX3Aanonymous_2264926101(arg_2264926102) {
      var result_2264926103 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,118]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926068 = expandArguments_2197815314(doc_2264924175, [100,118], arg_2264926102, [HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264926103 = nimCopy(result_2264926103, {typ: 0, str: dvCmd_2264926069(to_2214592966(vals_2264926068[chckIndx(0, 0, (vals_2264926068).length - 1)]), to_2181038173(vals_2264926068[chckIndx(1, 0, (vals_2264926068).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926103;

    }

function dvExpCmd_2264926169(n_2264926170, f_2264926172, x_2264926173) {
    var Temporary1;

  var result_2264926174 = [];

    if (isSome_2214592897(f_2264926172)) {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,109,97,116,104,114,109,32,100,94,123,36,49,125,36,50,125,123,92,109,97,116,104,114,109,32,100,36,51,94,123,36,49,125,125], [nimCopy(null, n_2264926170, NTI33554449), nimCopy(null, get_2214592918(f_2264926172), NTI33554449), nimCopy(null, x_2264926173, NTI33554449)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,109,97,116,104,114,109,32,100,94,123,36,49,125,125,123,92,109,97,116,104,114,109,32,100,36,50,94,123,36,49,125,125], [nimCopy(null, n_2264926170, NTI33554449), nimCopy(null, x_2264926173, NTI33554449)]);
    }
    
    result_2264926174 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264926174;

}
    
function HEX3Aanonymous_2264926202(arg_2264926203) {
      var result_2264926204 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,118,94]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926168 = expandArguments_2197815314(doc_2264924175, [100,118,94], arg_2264926203, [HEX21_1593835705(0), HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264926204 = nimCopy(result_2264926204, {typ: 0, str: dvExpCmd_2264926169(to_2181038173(vals_2264926168[chckIndx(0, 0, (vals_2264926168).length - 1)]), to_2214592966(vals_2264926168[chckIndx(1, 0, (vals_2264926168).length - 1)]), to_2181038173(vals_2264926168[chckIndx(2, 0, (vals_2264926168).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926204;

    }

function pdvCmd_2264926274(f_2264926276, x_2264926277) {
    var Temporary1;

  var result_2264926278 = [];

    if (isSome_2214592897(f_2264926276)) {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,112,97,114,116,105,97,108,32,36,49,125,123,92,112,97,114,116,105,97,108,32,36,50,125], [nimCopy(null, get_2214592918(f_2264926276), NTI33554449), nimCopy(null, x_2264926277, NTI33554449)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,112,97,114,116,105,97,108,125,123,92,112,97,114,116,105,97,108,32,36,49,125], [nimCopy(null, x_2264926277, NTI33554449)]);
    }
    
    result_2264926278 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264926278;

}
    
function HEX3Aanonymous_2264926306(arg_2264926307) {
      var result_2264926308 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [112,100,118]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926273 = expandArguments_2197815314(doc_2264924175, [112,100,118], arg_2264926307, [HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264926308 = nimCopy(result_2264926308, {typ: 0, str: pdvCmd_2264926274(to_2214592966(vals_2264926273[chckIndx(0, 0, (vals_2264926273).length - 1)]), to_2181038173(vals_2264926273[chckIndx(1, 0, (vals_2264926273).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926308;

    }

function pdvExpCmd_2264926374(n_2264926375, f_2264926377, x_2264926378) {
    var Temporary1;

  var result_2264926379 = [];

    if (isSome_2214592897(f_2264926377)) {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,112,97,114,116,105,97,108,94,123,36,49,125,36,50,125,123,92,112,97,114,116,105,97,108,32,36,51,94,123,36,49,125,125], [nimCopy(null, n_2264926375, NTI33554449), nimCopy(null, get_2214592918(f_2264926377), NTI33554449), nimCopy(null, x_2264926378, NTI33554449)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray([92,102,114,97,99,123,92,112,97,114,116,105,97,108,94,123,36,49,125,125,123,92,112,97,114,116,105,97,108,32,36,50,94,123,36,49,125,125], [nimCopy(null, n_2264926375, NTI33554449), nimCopy(null, x_2264926378, NTI33554449)]);
    }
    
    result_2264926379 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264926379;

}
    
function HEX3Aanonymous_2264926407(arg_2264926408) {
      var result_2264926409 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [112,100,118,94]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926373 = expandArguments_2197815314(doc_2264924175, [112,100,118,94], arg_2264926408, [HEX21_1593835705(0), HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2264926409 = nimCopy(result_2264926409, {typ: 0, str: pdvExpCmd_2264926374(to_2181038173(vals_2264926373[chckIndx(0, 0, (vals_2264926373).length - 1)]), to_2214592966(vals_2264926373[chckIndx(1, 0, (vals_2264926373).length - 1)]), to_2181038173(vals_2264926373[chckIndx(2, 0, (vals_2264926373).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926409;

    }

function matCmd_2264926479(arg_2264926480) {
  var result_2264926481 = [];

    result_2264926481 = nimCopy(null, nsuFormatOpenArray([92,98,101,103,105,110,123,109,97,116,114,105,120,125,36,49,92,101,110,100,123,109,97,116,114,105,120,125], [nimCopy(null, arg_2264926480, NTI33554449)]), NTI33554449);

  return result_2264926481;

}
    
function HEX3Aanonymous_2264926487(arg_2264926488) {
      var result_2264926489 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [109,97,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926478 = expandArguments_2197815314(doc_2264924175, [109,97,116], arg_2264926488, [HEX21_1593835705(0)]);
        result_2264926489 = nimCopy(result_2264926489, {typ: 0, str: matCmd_2264926479(to_2181038173(vals_2264926478[chckIndx(0, 0, (vals_2264926478).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926489;

    }

function dotMatCmd_2264926545(arg_2264926546) {
  var result_2264926547 = [];

    result_2264926547 = nimCopy(null, nsuFormatOpenArray([92,98,101,103,105,110,123,112,109,97,116,114,105,120,125,36,49,92,101,110,100,123,112,109,97,116,114,105,120,125], [nimCopy(null, arg_2264926546, NTI33554449)]), NTI33554449);

  return result_2264926547;

}
    
function HEX3Aanonymous_2264926553(arg_2264926554) {
      var result_2264926555 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [46,109,97,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926544 = expandArguments_2197815314(doc_2264924175, [46,109,97,116], arg_2264926554, [HEX21_1593835705(0)]);
        result_2264926555 = nimCopy(result_2264926555, {typ: 0, str: dotMatCmd_2264926545(to_2181038173(vals_2264926544[chckIndx(0, 0, (vals_2264926544).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926555;

    }

function bracketsMatCmd_2264926611(arg_2264926612) {
  var result_2264926613 = [];

    result_2264926613 = nimCopy(null, nsuFormatOpenArray([92,98,101,103,105,110,123,98,109,97,116,114,105,120,125,36,49,92,101,110,100,123,98,109,97,116,114,105,120,125], [nimCopy(null, arg_2264926612, NTI33554449)]), NTI33554449);

  return result_2264926613;

}
    
function HEX3Aanonymous_2264926619(arg_2264926620) {
      var result_2264926621 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [40,109,97,116,41]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926610 = expandArguments_2197815314(doc_2264924175, [40,109,97,116,41], arg_2264926620, [HEX21_1593835705(0)]);
        result_2264926621 = nimCopy(result_2264926621, {typ: 0, str: bracketsMatCmd_2264926611(to_2181038173(vals_2264926610[chckIndx(0, 0, (vals_2264926610).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926621;

    }

function pipesMatCmd_2264926677(arg_2264926678) {
  var result_2264926679 = [];

    result_2264926679 = nimCopy(null, nsuFormatOpenArray([92,98,101,103,105,110,123,118,109,97,116,114,105,120,125,36,49,92,101,110,100,123,118,109,97,116,114,105,120,125], [nimCopy(null, arg_2264926678, NTI33554449)]), NTI33554449);

  return result_2264926679;

}
    
function HEX3Aanonymous_2264926685(arg_2264926686) {
      var result_2264926687 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [124,109,97,116,124]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926676 = expandArguments_2197815314(doc_2264924175, [124,109,97,116,124], arg_2264926686, [HEX21_1593835705(0)]);
        result_2264926687 = nimCopy(result_2264926687, {typ: 0, str: pipesMatCmd_2264926677(to_2181038173(vals_2264926676[chckIndx(0, 0, (vals_2264926676).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926687;

    }

function pipePipesMatCmd_2264926743(arg_2264926744) {
  var result_2264926745 = [];

    result_2264926745 = nimCopy(null, nsuFormatOpenArray([92,98,101,103,105,110,123,86,109,97,116,114,105,120,125,36,49,92,101,110,100,123,86,109,97,116,114,105,120,125], [nimCopy(null, arg_2264926744, NTI33554449)]), NTI33554449);

  return result_2264926745;

}
    
function HEX3Aanonymous_2264926751(arg_2264926752) {
      var result_2264926753 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [124,124,109,97,116,124,124]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926742 = expandArguments_2197815314(doc_2264924175, [124,124,109,97,116,124,124], arg_2264926752, [HEX21_1593835705(0)]);
        result_2264926753 = nimCopy(result_2264926753, {typ: 0, str: pipePipesMatCmd_2264926743(to_2181038173(vals_2264926742[chckIndx(0, 0, (vals_2264926742).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926753;

    }

function unitCmd_2264926809(number_2264926811, unit_2264926812) {
    var Temporary1;

  var result_2264926813 = [];

    var unitRendered_2264926814 = npegsreplacef(npegsreplacef(unit_2264926812, peg_1493176580([94,123,92,108,101,116,116,101,114,43,125]), [92,109,97,116,104,114,109,123,36,49,125]), peg_1493176580([123,33,92,108,101,116,116,101,114,91,94,92,92,93,125,123,92,108,101,116,116,101,114,43,125]), [36,49,92,109,97,116,104,114,109,123,36,50,125]);
    if (isSome_2214592897(number_2264926811)) {
    Temporary1 = (get_2214592918(number_2264926811) || []).concat([92,44] || [],unitRendered_2264926814 || []);
    }
    else {
    Temporary1 = unitRendered_2264926814;
    }
    
    result_2264926813 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264926813;

}
    
function HEX3Aanonymous_2264926842(arg_2264926843) {
      var result_2264926844 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [117,110,105,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926808 = expandArguments_2197815314(doc_2264924175, [117,110,105,116], arg_2264926843, [HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_2264926844 = nimCopy(result_2264926844, {typ: 0, str: unitCmd_2264926809(to_2214592966(vals_2264926808[chckIndx(0, 0, (vals_2264926808).length - 1)]), to_2181038173(vals_2264926808[chckIndx(1, 0, (vals_2264926808).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926844;

    }

function inlineMathCmd_2264926910(arg_2264926911) {
  var result_2264926912 = [];

    raiseException({message: [77,97,116,104,32,99,97,110,39,116,32,98,101,32,110,101,115,116,101,100,32,105,110,115,105,100,101,32,109,97,116,104], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2264926912;

}
    
function HEX3Aanonymous_2264926918(arg_2264926919) {
      var result_2264926920 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [36]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926909 = expandArguments_2197815314(doc_2264924175, [36], arg_2264926919, [{kind: 4, base: 0}]);
        result_2264926920 = nimCopy(result_2264926920, {typ: 0, str: inlineMathCmd_2264926910(to_2181038173(vals_2264926909[chckIndx(0, 0, (vals_2264926909).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926920;

    }

function blockMathCmd_2264926976(arg_2264926977) {
  var result_2264926978 = [];

    raiseException({message: [77,97,116,104,32,99,97,110,39,116,32,98,101,32,110,101,115,116,101,100,32,105,110,115,105,100,101,32,109,97,116,104], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2264926978;

}
    
function HEX3Aanonymous_2264926984(arg_2264926985) {
      var result_2264926986 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [36,36]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264926975 = expandArguments_2197815314(doc_2264924175, [36,36], arg_2264926985, [{kind: 4, base: 0}]);
        result_2264926986 = nimCopy(result_2264926986, {typ: 0, str: blockMathCmd_2264926976(to_2181038173(vals_2264926975[chckIndx(0, 0, (vals_2264926975).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264926986;

    }

function alignedMathCmd_2264927042(arg_2264927043) {
  var result_2264927044 = [];

    raiseException({message: [77,97,116,104,32,99,97,110,39,116,32,98,101,32,110,101,115,116,101,100,32,105,110,115,105,100,101,32,109,97,116,104], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2264927044;

}
    
function HEX3Aanonymous_2264927050(arg_2264927051) {
      var result_2264927052 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264924175.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [36,36,38]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264927041 = expandArguments_2197815314(doc_2264924175, [36,36,38], arg_2264927051, [{kind: 4, base: 0}]);
        result_2264927052 = nimCopy(result_2264927052, {typ: 0, str: alignedMathCmd_2264927042(to_2181038173(vals_2264927041[chckIndx(0, 0, (vals_2264927041).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264927052;

    }

  var result_2264924178 = ({data: [], counter: 0});

    var commands_2264924181 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [95], HEX3Aanonymous_2264924195);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [47], HEX3Aanonymous_2264924285);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [46], HEX3Aanonymous_2264924361);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [40,41], HEX3Aanonymous_2264924427);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [123,125], HEX3Aanonymous_2264924510);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [60,62], HEX3Aanonymous_2264924586);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [124], HEX3Aanonymous_2264924652);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [124,124], HEX3Aanonymous_2264924718);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [118,46], HEX3Aanonymous_2264924784);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [102,108,111,111,114], HEX3Aanonymous_2264924850);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [99,101,105,108], HEX3Aanonymous_2264924916);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [105,110,116], HEX3Aanonymous_2264925046);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [105,110,116,100], HEX3Aanonymous_2264925141);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [100,105,110,116], HEX3Aanonymous_2264925295);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [108,105,109], HEX3Aanonymous_2264925469);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [108,105,109,105,110,102], HEX3Aanonymous_2264925596);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [108,105,109,115,117,112], HEX3Aanonymous_2264925713);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [115,117,109], HEX3Aanonymous_2264925848);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [100,100], HEX3Aanonymous_2264925940);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [100,100,94], HEX3Aanonymous_2264926007);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [100,118], HEX3Aanonymous_2264926101);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [100,118,94], HEX3Aanonymous_2264926202);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [112,100,118], HEX3Aanonymous_2264926306);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [112,100,118,94], HEX3Aanonymous_2264926407);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [109,97,116], HEX3Aanonymous_2264926487);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [46,109,97,116], HEX3Aanonymous_2264926553);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [40,109,97,116,41], HEX3Aanonymous_2264926619);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [124,109,97,116,124], HEX3Aanonymous_2264926685);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [124,124,109,97,116,124,124], HEX3Aanonymous_2264926751);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [117,110,105,116], HEX3Aanonymous_2264926842);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [36], HEX3Aanonymous_2264926918);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [36,36], HEX3Aanonymous_2264926984);
    HEX5BHEX5DHEX3D_2181038249(commands_2264924181[0], [36,36,38], HEX3Aanonymous_2264927050);
    result_2264924178 = nimCopy(result_2264924178, commands_2264924181[0], NTI1593835562);

  return result_2264924178;

}

function slotsNeeded_1375731762(count_1375731763) {
  var result_1375731764 = 0;

    result_1375731764 = nextPowerOfTwo_805306615(addInt(divInt(mulInt(count_1375731763, 3), 2), 4));

  return result_1375731764;

}

function isFilled_1375731751(hcode_1375731752) {
  var result_1375731753 = false;

    result_1375731753 = !((hcode_1375731752 == 0));

  return result_1375731753;

}

function nextTry_1375731754(h_1375731755, maxHash_1375731756) {
  var result_1375731757 = 0;

    result_1375731757 = (addInt(h_1375731755, 1) & maxHash_1375731756);

  return result_1375731757;

}

function rawGet_2264927220(t_2264927222, key_2264927223, hc_2264927224, hc_2264927224_Idx) {
  var result_2264927225 = 0;

  BeforeRet: {
    hc_2264927224[hc_2264927224_Idx] = hash_1275068863(key_2264927223);
    if ((hc_2264927224[hc_2264927224_Idx] == 0)) {
    hc_2264927224[hc_2264927224_Idx] = 314159265;
    }
    
    if (((t_2264927222.data).length == 0)) {
    result_2264927225 = (-1);
    break BeforeRet;
    }
    
    var h_2264927287 = (hc_2264927224[hc_2264927224_Idx] & (t_2264927222.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1375731751(t_2264927222.data[chckIndx(h_2264927287, 0, (t_2264927222.data).length - 1)].Field0)) break Label2;
          if (((t_2264927222.data[chckIndx(h_2264927287, 0, (t_2264927222.data).length - 1)].Field0 == hc_2264927224[hc_2264927224_Idx]) && eqStrings(t_2264927222.data[chckIndx(h_2264927287, 0, (t_2264927222.data).length - 1)].Field2, key_2264927223))) {
          result_2264927225 = h_2264927287;
          break BeforeRet;
          }
          
          h_2264927287 = nextTry_1375731754(h_2264927287, (t_2264927222.data).length - 1);
        }
    };
    result_2264927225 = subInt((-1), h_2264927287);
  };

  return result_2264927225;

}

function mustRehash_2264927494(t_2264927496) {
  var result_2264927497 = false;

    if (!((t_2264927496.counter < (t_2264927496.data).length))) {
    failedAssertImpl_268435541([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2264927497 = ((mulInt((t_2264927496.data).length, 2) < mulInt(t_2264927496.counter, 3)) || (subInt((t_2264927496.data).length, t_2264927496.counter) < 4));

  return result_2264927497;

}

function rawGetKnownHC_2264927989(t_2264927992, key_2264927993, hc_2264927994) {
  var result_2264927995 = 0;

  BeforeRet: {
    if (((t_2264927992.data).length == 0)) {
    result_2264927995 = (-1);
    break BeforeRet;
    }
    
    var h_2264928057 = (hc_2264927994 & (t_2264927992.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1375731751(t_2264927992.data[chckIndx(h_2264928057, 0, (t_2264927992.data).length - 1)].Field0)) break Label2;
          if (((t_2264927992.data[chckIndx(h_2264928057, 0, (t_2264927992.data).length - 1)].Field0 == hc_2264927994) && eqStrings(t_2264927992.data[chckIndx(h_2264928057, 0, (t_2264927992.data).length - 1)].Field2, key_2264927993))) {
          result_2264927995 = h_2264928057;
          break BeforeRet;
          }
          
          h_2264928057 = nextTry_1375731754(h_2264928057, (t_2264927992.data).length - 1);
        }
    };
    result_2264927995 = subInt((-1), h_2264928057);
  };

  return result_2264927995;

}

function rawInsert_2264928358(s_2264928360, data_2264928361, data_2264928361_Idx, key_2264928362, hc_2264928363, h_2264928364) {
    if (((data_2264928361[data_2264928361_Idx]).length == 0)) {
    var correctSizeHEX60gensym196_2264928424 = slotsNeeded_1375731762(64);
    s_2264928360.first = (-1);
    s_2264928360.last = (-1);
    s_2264928360.counter = 0;
    s_2264928360.data = new Array(chckRange(correctSizeHEX60gensym196_2264928424, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym196_2264928424, 0, 2147483647) ; ++i) { s_2264928360.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    data_2264928361[data_2264928361_Idx][chckIndx(h_2264928364, 0, (data_2264928361[data_2264928361_Idx]).length - 1)].Field2 = nimCopy(null, key_2264928362, NTI33554449);
    data_2264928361[data_2264928361_Idx][chckIndx(h_2264928364, 0, (data_2264928361[data_2264928361_Idx]).length - 1)].Field0 = hc_2264928363;
    data_2264928361[data_2264928361_Idx][chckIndx(h_2264928364, 0, (data_2264928361[data_2264928361_Idx]).length - 1)].Field1 = (-1);
    if ((s_2264928360.first < 0)) {
    s_2264928360.first = h_2264928364;
    }
    
    if ((0 <= s_2264928360.last)) {
    data_2264928361[data_2264928361_Idx][chckIndx(s_2264928360.last, 0, (data_2264928361[data_2264928361_Idx]).length - 1)].Field1 = h_2264928364;
    }
    
    s_2264928360.last = h_2264928364;

  
}

function enlarge_2264927688(s_2264927690) {
    var n_2264927692 = [];
    n_2264927692 = new Array(chckRange(mulInt((s_2264927690.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2264927690.data).length, 2), 0, 2147483647) ; ++i) { n_2264927692[i] = {Field0: 0, Field1: 0, Field2: []}; }    var h_2264927755 = s_2264927690.first;
    s_2264927690.first = (-1);
    s_2264927690.last = (-1);
    var Temporary1 = s_2264927690.data; s_2264927690.data = n_2264927692; n_2264927692 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_2264927755)) break Label3;
          var nxt_2264927817 = n_2264927692[chckIndx(h_2264927755, 0, (n_2264927692).length - 1)].Field1;
          if (isFilled_1375731751(n_2264927692[chckIndx(h_2264927755, 0, (n_2264927692).length - 1)].Field0)) {
          var j_2264928232 = subInt((-1), rawGetKnownHC_2264927989(s_2264927690, n_2264927692[chckIndx(h_2264927755, 0, (n_2264927692).length - 1)].Field2, n_2264927692[chckIndx(h_2264927755, 0, (n_2264927692).length - 1)].Field0));
          rawInsert_2264928358(s_2264927690, s_2264927690, "data", n_2264927692[chckIndx(h_2264927755, 0, (n_2264927692).length - 1)].Field2, n_2264927692[chckIndx(h_2264927755, 0, (n_2264927692).length - 1)].Field0, j_2264928232);
          }
          
          h_2264927755 = nxt_2264927817;
        }
    };

  
}

function incl_2264927133(s_2264927135, key_2264927136) {
    if (((s_2264927135.data).length == 0)) {
    var correctSizeHEX60gensym187_2264927197 = slotsNeeded_1375731762(64);
    s_2264927135.first = (-1);
    s_2264927135.last = (-1);
    s_2264927135.counter = 0;
    s_2264927135.data = new Array(chckRange(correctSizeHEX60gensym187_2264927197, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym187_2264927197, 0, 2147483647) ; ++i) { s_2264927135.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2264927212 = [0];
    var index_2264927493 = rawGet_2264927220(s_2264927135, key_2264927136, hc_2264927212, 0);
    if ((index_2264927493 < 0)) {
    if (mustRehash_2264927494(s_2264927135)) {
    enlarge_2264927688(s_2264927135);
    index_2264927493 = rawGetKnownHC_2264927989(s_2264927135, key_2264927136, hc_2264927212[0]);
    }
    
    rawInsert_2264928358(s_2264927135, s_2264927135, "data", key_2264927136, hc_2264927212[0], subInt((-1), index_2264927493));
    s_2264927135.counter = addInt(s_2264927135.counter, 1);
    }
    

  
}

function renderMathKatex_2063600884(math_2063600885, displayMode_2063600886, trust_2063600887, renderer_2063600888) {
  var result_2063600889 = [];

    if ((renderer_2063600888 == 2)) {
    raiseException({message: [84,101,109,109,108,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,104,101,110,32,117,115,105,110,103,32,74,97,118,97,83,99,114,105,112,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var opts_2063600895 = {};
    opts_2063600895["throwOnError"] = false;
    opts_2063600895["displayMode"] = displayMode_2063600886;
    opts_2063600895["trust"] = trust_2063600887;
    if ((renderer_2063600888 == 1)) {
    opts_2063600895["output"] = [109,97,116,104,109,108];
    }
    
    result_2063600889 = nimCopy(null, cstrToNimstr(katex.renderToString(toJSStr(math_2063600885), opts_2063600895)), NTI33554449);

  return result_2063600889;

}

function matext_2281701379(latex_2281701380, oneLine_2281701381) {
  var result_2281701382 = [];

    result_2281701382 = nimCopy(null, render_2298478603(latex_2281701380, oneLine_2281701381), NTI33554449);

  return result_2281701382;

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function renderMath_2264927107(doc_2264927108, latex_2264927109, displayMode_2264927110, addDelimiters_2264927111) {
    var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;

  var result_2264927112 = [];

    switch (doc_2264927108.target) {
    case 0:
      switch (doc_2264927108.settings.mathRenderer) {
      case 0:
        if (eqStrings(doc_2264927108.settings.katexStylesheetPath, [])) {
        Temporary2 = [104,116,116,112,115,58,47,47,99,100,110,46,106,115,100,101,108,105,118,114,46,110,101,116,47,110,112,109,47,107,97,116,101,120,64,48,46,49,54,46,51,47,100,105,115,116,47,107,97,116,101,120,46,109,105,110,46,99,115,115];
        }
        else {
        Temporary2 = doc_2264927108.settings.katexStylesheetPath;
        }
        
        var path_2264927113 = nimCopy(null, Temporary2, NTI33554449);
        incl_2264927133(doc_2264927108.addToHead, ([60,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34] || []).concat(path_2264927113 || [],[34,32,99,114,111,115,115,111,114,105,103,105,110,61,34,97,110,111,110,121,109,111,117,115,34,32,47,62] || []));
        break;
      case 1:
        break;
      case 2:
        if (eqStrings(doc_2264927108.settings.temmlStylesheetPath, [])) {
        Temporary3 = [104,116,116,112,115,58,47,47,99,100,110,46,106,115,100,101,108,105,118,114,46,110,101,116,47,110,112,109,47,116,101,109,109,108,64,48,46,49,48,46,49,48,47,100,105,115,116,47,84,101,109,109,108,45,76,111,99,97,108,46,99,115,115];
        }
        else {
        Temporary3 = doc_2264927108.settings.temmlStylesheetPath;
        }
        
        var path_2264928696 = nimCopy(null, Temporary3, NTI33554449);
        incl_2264927133(doc_2264927108.addToHead, ([60,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34] || []).concat(path_2264928696 || [],[34,32,99,114,111,115,115,111,114,105,103,105,110,61,34,97,110,111,110,121,109,111,117,115,34,32,47,62] || []));
        break;
      }
      if (displayMode_2264927110) {
      var Temporary4 = doc_2264927108;
      if (ConstSet319[Temporary4.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary4.target, NTI1593835523)); }
      incl_2264927133(Temporary4.addToStyle, [120,100,45,98,108,111,99,107,45,109,97,116,104,123,100,105,115,112,108,97,121,58,98,108,111,99,107,125]);
      }
      
      if (displayMode_2264927110) {
      Temporary5 = [60,120,100,45,98,108,111,99,107,45,109,97,116,104,62,36,49,60,47,120,100,45,98,108,111,99,107,45,109,97,116,104,62];
      }
      else {
      Temporary5 = [60,120,100,45,105,110,108,105,110,101,45,109,97,116,104,62,36,49,60,47,120,100,45,105,110,108,105,110,101,45,109,97,116,104,62];
      }
      
      var format_2264928743 = nimCopy(null, Temporary5, NTI33554449);
      Temporary1 = nsuFormatSingleElem(format_2264928743, renderMathKatex_2063600884(latex_2264927109, displayMode_2264927110, !(doc_2264927108.safeMode), doc_2264927108.settings.mathRenderer));
      break;
    case 1:
      incl_2264927133(doc_2264927108.addToHead, [92,117,115,101,112,97,99,107,97,103,101,123,97,109,115,109,97,116,104,125]);
      incl_2264927133(doc_2264927108.addToHead, [92,117,115,101,112,97,99,107,97,103,101,123,97,109,115,115,121,109,98,125]);
      incl_2264927133(doc_2264927108.addToHead, [92,117,115,101,112,97,99,107,97,103,101,123,109,97,116,104,116,111,111,108,115,125]);
      if (displayMode_2264927110) {
      Temporary6 = [92,91,36,49,92,93];
      }
      else {
      Temporary6 = [92,40,36,49,92,41];
      }
      
      var format_2264928813 = nimCopy(null, Temporary6, NTI33554449);
      if (addDelimiters_2264927111) {
      Temporary7 = nsuFormatSingleElem(format_2264928813, latex_2264927109);
      }
      else {
      Temporary7 = latex_2264927109;
      }
      
      Temporary1 = Temporary7;
      break;
    case 2:
++excHandler;
      try {
      Temporary8 = matext_2281701379(latex_2264927109, false);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      raiseException({message: nsuFormatSingleElem([69,114,114,111,114,32,119,104,101,110,32,112,97,114,115,105,110,103,32,109,97,116,104,58,32,36,49], latex_2264927109), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var math_2264928814 = nimCopy(null, Temporary8, NTI33554449);
      Label10: {
        var fmtRes_2264928818 = [mnewString(0)];
        fmtRes_2264928818[0].push.apply(fmtRes_2264928818[0], [10,96,96,96,10]);;
        formatValue_1442840747(fmtRes_2264928818, 0, math_2264928814, []);
        fmtRes_2264928818[0].push.apply(fmtRes_2264928818[0], [10,96,96,96,10]);;
      };
      Temporary1 = fmtRes_2264928818[0];
      break;
    }
    result_2264927112 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264927112;

}

function env_2197816511(name_2197816512, content_2197816513) {
  var result_2197816514 = [];

    result_2197816514 = nimCopy(null, ([92,98,101,103,105,110,123] || []).concat(name_2197816512 || [],[125] || [],content_2197816513 || [],[92,101,110,100,123] || [],name_2197816512 || [],[125] || []), NTI33554449);

  return result_2197816514;

}

function match_2415934390(p_2415934394, s_2415934395, userData_2415934396) {
  var result_2415934397 = ({ok: false, matchLen: 0, matchMax: 0, cs: ({capList: []})});

    var ms_2415934398 = [p_2415934394.fn_init()];
    result_2415934397 = nimCopy(result_2415934397, p_2415934394.fn_run(ms_2415934398[0], s_2415934395, userData_2415934396), NTI2449473608);

  return result_2415934397;

}

function initStack_2499805242(name_2499805244, len_2499805245, max_2499805246) {
  var result_2499805251 = ({name: [], top: 0, max: 0, frames: []});

    result_2499805251.name = nimCopy(null, name_2499805244, NTI33554449);
    if (result_2499805251.frames.length < chckRange(len_2499805245, 0, 2147483647)) { for (var i = result_2499805251.frames.length ; i < chckRange(len_2499805245, 0, 2147483647) ; ++i) result_2499805251.frames.push(0); }
               else { result_2499805251.frames.length = chckRange(len_2499805245, 0, 2147483647); };
    result_2499805251.max = max_2499805246;

  return result_2499805251;

}

function initStack_2415919650(name_2415919652, len_2415919653, max_2415919654) {
  var result_2415919655 = ({name: [], top: 0, max: 0, frames: []});

    result_2415919655.name = nimCopy(null, name_2415919652, NTI33554449);
    if (result_2415919655.frames.length < chckRange(len_2415919653, 0, 2147483647)) { for (var i = result_2415919655.frames.length ; i < chckRange(len_2415919653, 0, 2147483647) ; ++i) result_2415919655.frames.push(({cft: 0, name: [], si: 0, ck: 0, sPushed: []})); }
               else { result_2415919655.frames.length = chckRange(len_2415919653, 0, 2147483647); };
    result_2415919655.max = max_2415919654;

  return result_2415919655;

}

function initStack_2415919660(name_2415919662, len_2415919663, max_2415919664) {
  var result_2415919665 = ({name: [], top: 0, max: 0, frames: []});

    result_2415919665.name = nimCopy(null, name_2415919662, NTI33554449);
    if (result_2415919665.frames.length < chckRange(len_2415919663, 0, 2147483647)) { for (var i = result_2415919665.frames.length ; i < chckRange(len_2415919663, 0, 2147483647) ; ++i) result_2415919665.frames.push(({ip: 0, si: 0, rp: 0, cp: 0, pp: 0})); }
               else { result_2415919665.frames.length = chckRange(len_2415919663, 0, 2147483647); };
    result_2415919665.max = max_2415919664;

  return result_2415919665;

}

function grow_2499805270(s_2499805272) {
    var Temporary1;

    if ((s_2499805272.max <= s_2499805272.top)) {
    raiseException({message: (s_2499805272.name || []).concat([32,115,116,97,99,107,32,111,118,101,114,102,108,111,119,44,32,100,101,112,116,104,62] || [],HEX24_385875976(s_2499805272.max) || []), parent: null, m_type: NTI2466250795, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegStackOverflowError");
    }
    
    if (s_2499805272.frames.length < (Temporary1 = chckRange(mulInt((s_2499805272.frames).length, 2), 0, 2147483647), Temporary1)) { for (var i = s_2499805272.frames.length ; i < Temporary1 ; ++i) s_2499805272.frames.push(0); }
               else { s_2499805272.frames.length = Temporary1; };

  
}

function fn_initHEX60gensym395_2415919618() {
  var result_2415919642 = ({ip: 0, si: 0, simax: 0, refs: ({data: [], counter: 0}), retStack: ({name: [], top: 0, max: 0, frames: []}), capStack: ({name: [], top: 0, max: 0, frames: []}), backStack: ({name: [], top: 0, max: 0, frames: []}), precStack: ({name: [], top: 0, max: 0, frames: []})});

    result_2415919642 = nimCopy(result_2415919642, {retStack: initStack_2499805242([114,101,116,117,114,110], 8, 1024), capStack: initStack_2415919650([99,97,112,116,117,114,101], 8, 2147483647), backStack: initStack_2415919660([98,97,99,107,116,114,97,99,101], 8, 1024), precStack: initStack_2499805242([112,114,101,99,101,100,101,110,99,101], 8, 16), ip: 0, si: 0, simax: 0, refs: ({data: [], counter: 0})}, NTI2415919272);
    if (((result_2415919642.precStack.frames).length <= result_2415919642.precStack.top)) {
    grow_2499805270(result_2415919642.precStack);
    }
    
    result_2415919642.precStack.frames[chckIndx(result_2415919642.precStack.top, 0, (result_2415919642.precStack.frames).length - 1)] = 0;
    result_2415919642.precStack.top = addInt(result_2415919642.precStack.top, 1);

  return result_2415919642;

}

function grow_2415920055(s_2415920057) {
    var Temporary1;

    if ((s_2415920057.max <= s_2415920057.top)) {
    raiseException({message: (s_2415920057.name || []).concat([32,115,116,97,99,107,32,111,118,101,114,102,108,111,119,44,32,100,101,112,116,104,62] || [],HEX24_385875976(s_2415920057.max) || []), parent: null, m_type: NTI2466250795, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegStackOverflowError");
    }
    
    if (s_2415920057.frames.length < (Temporary1 = chckRange(mulInt((s_2415920057.frames).length, 2), 0, 2147483647), Temporary1)) { for (var i = s_2415920057.frames.length ; i < Temporary1 ; ++i) s_2415920057.frames.push(({cft: 0, name: [], si: 0, ck: 0, sPushed: []})); }
               else { s_2415920057.frames.length = Temporary1; };

  
}

function grow_2415920099(s_2415920101) {
    var Temporary1;

    if ((s_2415920101.max <= s_2415920101.top)) {
    raiseException({message: (s_2415920101.name || []).concat([32,115,116,97,99,107,32,111,118,101,114,102,108,111,119,44,32,100,101,112,116,104,62] || [],HEX24_385875976(s_2415920101.max) || []), parent: null, m_type: NTI2466250795, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegStackOverflowError");
    }
    
    if (s_2415920101.frames.length < (Temporary1 = chckRange(mulInt((s_2415920101.frames).length, 2), 0, 2147483647), Temporary1)) { for (var i = s_2415920101.frames.length ; i < Temporary1 ; ++i) s_2415920101.frames.push(({ip: 0, si: 0, rp: 0, cp: 0, pp: 0})); }
               else { s_2415920101.frames.length = Temporary1; };

  
}

function newSeq_2449473736(len_2449473738) {
  var result_2449473739 = [];

    result_2449473739 = new Array(len_2449473738); for (var i = 0 ; i < len_2449473738 ; ++i) { result_2449473739[i] = null; }
  return result_2449473739;

}

function collectCaptures_2449473730(caps_2449473732) {
  var result_2449473733 = ({capList: []});

    var resultHEX60gensym1_2449473776 = newSeq_2449473736(0);
    Label1: {
      var it_2449473799 = null;
      var i_587203693 = 0;
      var L_587203694 = (caps_2449473732.capList).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203693 < L_587203694)) break Label3;
            it_2449473799 = caps_2449473732.capList[chckIndx(i_587203693, 0, (caps_2449473732.capList).length - 1)];
            if ((ConstSet322[it_2449473799.ck] != undefined)) {
            resultHEX60gensym1_2449473776.push(it_2449473799);;
            }
            
            i_587203693 = addInt(i_587203693, 1);
            if (!(((caps_2449473732.capList).length == L_587203694))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2449473733 = nimCopy(result_2449473733, {capList: nimCopy(null, resultHEX60gensym1_2449473776, NTI2449473639)}, NTI2449473611);

  return result_2449473733;

}

function findTop_2415920307(capStack_2415920313, fm_2415920314) {
  var result_2415920315 = 0;

    if ((fm_2415920314 == 1)) {
    var i_2415920321 = subInt(capStack_2415920313.top, 1);
    var depth_2415920322 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
            if (!((i_2415920321 < capStack_2415920313.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,52,53,44,32,51,41,32,96,105,32,60,32,99,97,112,83,116,97,99,107,46,116,111,112,96,32]);
            }
            
          if ((capStack_2415920313.frames[chckIndx(i_2415920321, 0, (capStack_2415920313.frames).length - 1)].cft == 1)) {
          depth_2415920322 = addInt(depth_2415920322, 1);
          }
          else {
          depth_2415920322 = subInt(depth_2415920322, 1);
          }
          
          if ((depth_2415920322 == 0)) {
          break Label1;
          }
          
          i_2415920321 = subInt(i_2415920321, 1);
        }
    };
    result_2415920315 = i_2415920321;
    }
    

  return result_2415920315;

}

function getCapture_2415920675(cs_2415920677, i_2415920678) {
  var result_2415920679 = null;

    if (((cs_2415920677.capList).length <= i_2415920678)) {
    var msg_2415920686 = ([67,97,112,116,117,114,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32] || []).concat(HEX24_385875976(i_2415920678) || [],[32,105,115,32,110,111,116,32,105,110,32,91,48,46,46] || [],HEX24_385875976((cs_2415920677.capList).length - 1) || [],[93] || []);
    raiseException({message: nimCopy(null, msg_2415920686, NTI33554449), parent: null, m_type: NTI2466250797, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegCaptureOutOfRangeError");
    }
    
    result_2415920679 = cs_2415920677.capList[chckIndx(i_2415920678, 0, (cs_2415920677.capList).length - 1)];

  return result_2415920679;

}

function HEX5BHEX5D_2415920663(cs_2415920665, i_2415920666) {
  var result_2415920667 = null;

    result_2415920667 = getCapture_2415920675(cs_2415920665, i_2415920666);

  return result_2415920667;

}

function slice_2466252926(s_2466252927, iFrom_2466252928, iTo_2466252929) {
  var result_2466252930 = [];

    var len_2466252931 = subInt(iTo_2466252929, iFrom_2466252928);
    if (result_2466252930.length < chckRange(len_2466252931, 0, 2147483647)) { for (var i = result_2466252930.length; i < chckRange(len_2466252931, 0, 2147483647); ++i) result_2466252930.push(0); }
         else {result_2466252930.length = chckRange(len_2466252931, 0, 2147483647); };
    Label1: {
      var i_2466252936 = 0;
      var i_587203701 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203701 < len_2466252931)) break Label3;
            i_2466252936 = i_587203701;
            result_2466252930[chckIndx(i_2466252936, 0, (result_2466252930).length - 1)] = s_2466252927[chckIndx(addInt(i_2466252936, iFrom_2466252928), 0, (s_2466252927).length - 1)];
            i_587203701 = addInt(i_587203701, 1);
          }
      };
    };

  return result_2466252930;

}

function fixCaptures_2415920260(s_2415920262, capStack_2415920267, fm_2415920268) {
              var Temporary4;

  var result_2415920269 = ({capList: []});

    if (!((0 < capStack_2415920267.top))) {
    failedAssertImpl_268435541([99,97,112,116,117,114,101,46,110,105,109,40,52,49,44,32,51,41,32,96,10,48,32,60,32,99,97,112,83,116,97,99,107,46,116,111,112,96,32]);
    }
    
      if (!((0 < capStack_2415920267.top))) {
      failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,52,49,44,32,51,41,32,96,99,97,112,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
      }
      
    if (!((capStack_2415920267.frames[chckIndx(subInt(capStack_2415920267.top, 1), 0, (capStack_2415920267.frames).length - 1)].cft == 1))) {
    failedAssertImpl_268435541([99,97,112,116,117,114,101,46,110,105,109,40,52,50,44,32,51,41,32,96,99,97,112,83,116,97,99,107,46,112,101,101,107,46,99,102,116,32,61,61,32,99,102,116,67,108,111,115,101,96,32]);
    }
    
    var stack_2415920296 = [initStack_2499805242([99,97,112,116,117,114,101,115], 8, 2147483647)];
    var iFrom_2415920422 = findTop_2415920307(capStack_2415920267, fm_2415920268);
    Label1: {
      var i_2415920427 = 0;
      var i_587203697 = iFrom_2415920422;
      Label2: {
          Label3: while (true) {
          if (!(i_587203697 < capStack_2415920267.top)) break Label3;
            i_2415920427 = i_587203697;
            if (!((i_2415920427 < capStack_2415920267.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,52,53,44,32,51,41,32,96,105,32,60,32,99,97,112,83,116,97,99,107,46,116,111,112,96,32]);
            }
            
            var c_2415920508 = nimCopy(null, capStack_2415920267.frames[chckIndx(i_2415920427, 0, (capStack_2415920267.frames).length - 1)], NTI2415919281);
            if ((c_2415920508.cft == 0)) {
            if (((stack_2415920296[0].frames).length <= stack_2415920296[0].top)) {
            grow_2499805270(stack_2415920296[0]);
            }
            
            stack_2415920296[0].frames[chckIndx(stack_2415920296[0].top, 0, (stack_2415920296[0].frames).length - 1)] = (result_2415920269.capList).length;
            stack_2415920296[0].top = addInt(stack_2415920296[0].top, 1);
            result_2415920269.capList.push({ck: c_2415920508.ck, si: c_2415920508.si, name: nimCopy(null, c_2415920508.name, NTI33554449), len: 0, s: []});;
            }
            else {
              if (!((0 < stack_2415920296[0].top))) {
              failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,115,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
              }
              
              stack_2415920296[0].top = subInt(stack_2415920296[0].top, 1);
              var i2_2415920588 = stack_2415920296[0].frames[chckIndx(stack_2415920296[0].top, 0, (stack_2415920296[0].frames).length - 1)];
              if (!((HEX5BHEX5D_2415920663(result_2415920269, i2_2415920588).ck == c_2415920508.ck))) {
              failedAssertImpl_268435541([99,97,112,116,117,114,101,46,110,105,109,40,53,55,44,32,55,41,32,96,114,101,115,117,108,116,91,105,50,93,46,99,107,32,61,61,32,99,46,99,107,96,32]);
              }
              
              if ((c_2415920508.ck == 1)) {
              Temporary4 = c_2415920508.sPushed;
              }
              else {
              Temporary4 = slice_2466252926(s_2415920262, HEX5BHEX5D_2415920663(result_2415920269, i2_2415920588).si, c_2415920508.si);
              }
              
              HEX5BHEX5D_2415920663(result_2415920269, i2_2415920588).s = nimCopy(null, Temporary4, NTI33554449);
              HEX5BHEX5D_2415920663(result_2415920269, i2_2415920588).len = subInt(subInt((result_2415920269.capList).length, i2_2415920588), 1);
            }
            
            i_587203697 = addInt(i_587203697, 1);
          }
      };
    };
    if (!((stack_2415920296[0].top == 0))) {
    failedAssertImpl_268435541([99,97,112,116,117,114,101,46,110,105,109,40,54,51,44,32,51,41,32,96,115,116,97,99,107,46,116,111,112,32,61,61,32,48,96,32]);
    }
    
    capStack_2415920267.top = iFrom_2415920422;

  return result_2415920269;

}

function len_2415921086(captures_2415921088) {
  var result_2415921089 = 0;

    result_2415921089 = (captures_2415921088.capList).length;

  return result_2415921089;

}

function pop_1996488879(s_1996488881, s_1996488881_Idx) {
  var result_1996488882 = [];

    var L_1996488886 = subInt((s_1996488881[s_1996488881_Idx]).length, 1);
    result_1996488882 = nimCopy(null, s_1996488881[s_1996488881_Idx][chckIndx(L_1996488886, 0, (s_1996488881[s_1996488881_Idx]).length - 1)], NTI33554449);
    if (s_1996488881[s_1996488881_Idx].length < chckRange(L_1996488886, 0, 2147483647)) { for (var i = s_1996488881[s_1996488881_Idx].length ; i < chckRange(L_1996488886, 0, 2147483647) ; ++i) s_1996488881[s_1996488881_Idx].push([]); }
               else { s_1996488881[s_1996488881_Idx].length = chckRange(L_1996488886, 0, 2147483647); };

  return result_1996488882;

}

function HEX5BHEX5D_33557807(s_33557808, i_33557809) {
  var result_33557810 = 0;

    result_33557810 = s_33557808[chckIndx(subInt((s_33557808).length, i_33557809), 0, (s_33557808).length - 1)];

  return result_33557810;

}

function HEX7BHEX7D_2415919121(cmd_2415919122, arg_2415919123) {
    var Temporary1;

  var result_2415919124 = [];

    if (nsuStartsWith(cmd_2415919122, [92])) {
    Temporary1 = [];
    }
    else {
    Temporary1 = [92];
    }
    
    result_2415919124 = nimCopy(null, (Temporary1 || []).concat(cmd_2415919122 || [],[123] || [],arg_2415919123 || [],[125] || []), NTI33554449);

  return result_2415919124;

}

function HEX5BHEX5D_2415922075(s_2415922077, i_2415922078) {
  var result_2415922079 = null;
  var result_2415922079_Idx = 0;

    result_2415922079 = s_2415922077; result_2415922079_Idx = chckIndx(subInt((s_2415922077).length, i_2415922078), 0, (s_2415922077).length - 1);

  return [result_2415922079, result_2415922079_Idx];

}

function rawGet_2063597710(t_2063597713, key_2063597714, hc_2063597715, hc_2063597715_Idx) {
  var result_2063597716 = 0;

  BeforeRet: {
    hc_2063597715[hc_2063597715_Idx] = hash_1275068863(key_2063597714);
    if ((hc_2063597715[hc_2063597715_Idx] == 0)) {
    hc_2063597715[hc_2063597715_Idx] = 314159265;
    }
    
    if (((t_2063597713.data).length == 0)) {
    result_2063597716 = (-1);
    break BeforeRet;
    }
    
    var h_2063597767 = (hc_2063597715[hc_2063597715_Idx] & (t_2063597713.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2063597713.data[chckIndx(h_2063597767, 0, (t_2063597713.data).length - 1)].Field0)) break Label2;
          if (((t_2063597713.data[chckIndx(h_2063597767, 0, (t_2063597713.data).length - 1)].Field0 == hc_2063597715[hc_2063597715_Idx]) && eqStrings(t_2063597713.data[chckIndx(h_2063597767, 0, (t_2063597713.data).length - 1)].Field1, key_2063597714))) {
          result_2063597716 = h_2063597767;
          break BeforeRet;
          }
          
          h_2063597767 = nextTry_1627389986(h_2063597767, (t_2063597713.data).length - 1);
        }
    };
    result_2063597716 = subInt((-1), h_2063597767);
  };

  return result_2063597716;

}

function hasKey_2130706738(t_2130706741, key_2130706742) {
  var result_2130706743 = false;

    var hc_2130706744 = [0];
    result_2130706743 = (0 <= rawGet_2063597710(t_2130706741, key_2130706742, hc_2130706744, 0));

  return result_2130706743;

}

function contains_2415924681(t_2415924684, key_2415924685) {
  var result_2415924686 = false;

  BeforeRet: {
    result_2415924686 = hasKey_2130706738(t_2415924684, key_2415924685);
    break BeforeRet;
  };

  return result_2415924686;

}

function HEX5BHEX5D_2583691387(t_2583691390, key_2583691391) {
  var result_2583691392 = [];

    var hcHEX60gensym20_2583691393 = [0];
    var indexHEX60gensym20_2583691400 = rawGet_2063597710(t_2583691390, key_2583691391, hcHEX60gensym20_2583691393, 0);
    if ((0 <= indexHEX60gensym20_2583691400)) {
    result_2583691392 = nimCopy(null, t_2583691390.data[chckIndx(indexHEX60gensym20_2583691400, 0, (t_2583691390.data).length - 1)].Field2, NTI33554449);
    }
    else {
    raiseKeyError_1660944714(key_2583691391);
    }
    

  return result_2583691392;

}

function rawGet_2415930973(t_2415930976, key_2415930977, hc_2415930978, hc_2415930978_Idx) {
  var result_2415930979 = 0;

  BeforeRet: {
    hc_2415930978[hc_2415930978_Idx] = hash_1275068863(key_2415930977);
    if ((hc_2415930978[hc_2415930978_Idx] == 0)) {
    hc_2415930978[hc_2415930978_Idx] = 314159265;
    }
    
    if (((t_2415930976.data).length == 0)) {
    result_2415930979 = (-1);
    break BeforeRet;
    }
    
    var h_2415931037 = (hc_2415930978[hc_2415930978_Idx] & (t_2415930976.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2415930976.data[chckIndx(h_2415931037, 0, (t_2415930976.data).length - 1)].Field0)) break Label2;
          if (((t_2415930976.data[chckIndx(h_2415931037, 0, (t_2415930976.data).length - 1)].Field0 == hc_2415930978[hc_2415930978_Idx]) && eqStrings(t_2415930976.data[chckIndx(h_2415931037, 0, (t_2415930976.data).length - 1)].Field1, key_2415930977))) {
          result_2415930979 = h_2415931037;
          break BeforeRet;
          }
          
          h_2415931037 = nextTry_1627389986(h_2415931037, (t_2415930976.data).length - 1);
        }
    };
    result_2415930979 = subInt((-1), h_2415931037);
  };

  return result_2415930979;

}

function HEX5BHEX5D_2415932705(t_2415932708, key_2415932709) {
  var result_2415932710 = {Field0: [], Field1: []};

    var hcHEX60gensym20_2415932711 = [0];
    var indexHEX60gensym20_2415932718 = rawGet_2415930973(t_2415932708, key_2415932709, hcHEX60gensym20_2415932711, 0);
    if ((0 <= indexHEX60gensym20_2415932718)) {
    result_2415932710 = nimCopy(result_2415932710, t_2415932708.data[chckIndx(indexHEX60gensym20_2415932718, 0, (t_2415932708.data).length - 1)].Field2, NTI2415927053);
    }
    else {
    raiseKeyError_1660944714(key_2415932709);
    }
    

  return result_2415932710;

}

function HEX5BHEX5D_2466250949(s_2466250950, ip_2466250951) {
  var result_2466250952 = ({ip: 0, name: [], repr: [], lineInfo: ({filename: [], line: 0, column: 0})});

    Label1: {
      var sym_2466250975 = ({ip: 0, name: [], repr: [], lineInfo: ({filename: [], line: 0, column: 0})});
      var i_587203712 = 0;
      var L_587203713 = (s_2466250950.syms).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203712 < L_587203713)) break Label3;
            sym_2466250975 = s_2466250950.syms[chckIndx(i_587203712, 0, (s_2466250950.syms).length - 1)];
            if ((sym_2466250975.ip <= ip_2466250951)) {
            result_2466250952 = nimCopy(result_2466250952, sym_2466250975, NTI2466250807);
            }
            
            i_587203712 = addInt(i_587203712, 1);
            if (!(((s_2466250950.syms).length == L_587203713))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2466250952;

}

function insert_2415934103(x_2415934105, x_2415934105_Idx, item_2415934106, i_2415934107) {
    var it_2415934128 = ({procname: null, line: 0, filename: null});
    x_2415934105[x_2415934105_Idx] = x_2415934105[x_2415934105_Idx] || []; x_2415934105[x_2415934105_Idx].splice(i_2415934107, 0, it_2415934128);
    x_2415934105[x_2415934105_Idx][chckIndx(i_2415934107, 0, (x_2415934105[x_2415934105_Idx]).length - 1)] = nimCopy(x_2415934105[x_2415934105_Idx][chckIndx(i_2415934107, 0, (x_2415934105[x_2415934105_Idx]).length - 1)], item_2415934106, NTI33555176);

  
}

function getCurrentException() {
  var result_33556446 = null;

    if (isNimException_33556443()) {
    result_33556446 = lastJSError;
    }
    

  return result_33556446;

}

function fn_runHEX60gensym395_2415919987(ms_NP_2415919990, s_NP_2415919991, state_2415919992) {
              
function fn_2415921028(capture_2415921030, ms_NP_2415921032, state_2415921033) {
                var result_2415921034 = false;

                  result_2415921034 = true;
                  if ((1 < len_2415921086(capture_2415921030))) {
                  var b_2415921096 = pop_1996488879(state_2415921033, "stack");
                  var a_2415921100 = pop_1996488879(state_2415921033, "stack");
                  if (((Letters_754974734[HEX5BHEX5D_33557807(a_2415921100, 1)] != undefined) && (Letters_754974734[b_2415921096[chckIndx(0, 0, (b_2415921096).length - 1)]] != undefined))) {
                  state_2415921033.stack.push((a_2415921100 || []).concat([32] || [],b_2415921096 || []));;
                  }
                  else {
                  state_2415921033.stack.push((a_2415921100 || []).concat(b_2415921096 || []));;
                  }
                  
                  }
                  

                return result_2415921034;

              }
              
function fn_2415921430(capture_2415921432, ms_NP_2415921434, state_2415921435) {
                          var Temporary4;

                var result_2415921436 = false;

                BeforeRet: {
                  result_2415921436 = true;
                  var latex_2415921440 = pop_1996488879(state_2415921435, "stack");
                  Label1: {
                    var i_2415921524 = 0;
                    var colontmp__587203704 = 0;
                    colontmp__587203704 = (HEX5BHEX5D_2415920663(capture_2415921432, 1).s).length - 1;
                    var res_587203705 = 1;
                    Label2: {
                        Label3: while (true) {
                        if (!(res_587203705 <= colontmp__587203704)) break Label3;
                          i_2415921524 = res_587203705;
                          switch ((Temporary4 = HEX5BHEX5D_2415920663(capture_2415921432, 1).s, Temporary4)[chckIndx(i_2415921524, 0, (Temporary4).length - 1)]) {
                          case 39:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[39,125] || []), NTI33554449);
                            break;
                          case 42:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,42,125] || []), NTI33554449);
                            break;
                          case 43:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,43,125] || []), NTI33554449);
                            break;
                          case 45:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,45,125] || []), NTI33554449);
                            break;
                          case 66:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,98,98], latex_2415921440), NTI33554449);
                            break;
                          case 67:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,92,99,111,109,112,108,101,109,101,110,116,125] || []), NTI33554449);
                            break;
                          case 68:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([100,100,111,116], latex_2415921440), NTI33554449);
                            break;
                          case 72:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,92,109,97,116,104,114,109,123,72,125,125] || []), NTI33554449);
                            break;
                          case 76:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([111,118,101,114,108,105,110,101], latex_2415921440), NTI33554449);
                            break;
                          case 84:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,92,109,97,116,104,114,109,123,84,125,125] || []), NTI33554449);
                            break;
                          case 94:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([104,97,116], latex_2415921440), NTI33554449);
                            break;
                          case 96:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([103,114,97,118,101], latex_2415921440), NTI33554449);
                            break;
                          case 98:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,98,102], latex_2415921440), NTI33554449);
                            break;
                          case 99:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,99,97,108], latex_2415921440), NTI33554449);
                            break;
                          case 100:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([100,111,116], latex_2415921440), NTI33554449);
                            break;
                          case 102:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,102,114,97,107], latex_2415921440), NTI33554449);
                            break;
                          case 104:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([119,105,100,101,104,97,116], latex_2415921440), NTI33554449);
                            break;
                          case 105:
                            latex_2415921440 = nimCopy(null, ([123] || []).concat(latex_2415921440 || [],[94,123,45,49,125,125] || []), NTI33554449);
                            break;
                          case 108:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([98,97,114], latex_2415921440), NTI33554449);
                            break;
                          case 114:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,114,109], latex_2415921440), NTI33554449);
                            break;
                          case 115:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,115,99,114], latex_2415921440), NTI33554449);
                            break;
                          case 118:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([118,101,99], latex_2415921440), NTI33554449);
                            break;
                          case 126:
                            latex_2415921440 = nimCopy(null, HEX7BHEX7D_2415919121([116,105,108,100,101], latex_2415921440), NTI33554449);
                            break;
                          default: 
                            result_2415921436 = false;
                            break BeforeRet;
                            break;
                          }
                          res_587203705 = addInt(res_587203705, 2);
                        }
                    };
                  };
                  var Temporary5 = nimCopy(null, latex_2415921440, NTI33554449);
                  state_2415921435.stack.push(Temporary5);;
                };

                return result_2415921436;

              }
              
function fn_2415921846(capture_2415921848, ms_NP_2415921850, state_2415921851) {
                    var Temporary1;

                var result_2415921852 = false;

                  result_2415921852 = true;
                  if ((2 < len_2415921086(capture_2415921848))) {
                  var b_2415921910 = pop_1996488879(state_2415921851, "stack");
                  var a_2415921914 = pop_1996488879(state_2415921851, "stack");
                  state_2415921851.stack.push((a_2415921914 || []).concat(HEX5BHEX5D_2415920663(capture_2415921848, 1).s || [],HEX5BHEX5D_2415920663(capture_2415921848, 2).s || [],b_2415921910 || []));;
                  }
                  else {
                  (Temporary1 = HEX5BHEX5D_2415922075(state_2415921851.stack, 1), Temporary1)[0][Temporary1[1]].push.apply(Temporary1[0][Temporary1[1]], HEX5BHEX5D_2415920663(capture_2415921848, 1).s);;
                  }
                  

                return result_2415921852;

              }
              
function fn_2415922405(capture_2415922407, ms_NP_2415922409, state_2415922410) {
                var result_2415922411 = false;

                  result_2415922411 = true;
                  if (((HEX5BHEX5D_2415920663(capture_2415922407, 2).s).length == 0)) {
                  var Temporary1 = nimCopy(null, HEX5BHEX5D_2415920663(capture_2415922407, 1).s, NTI33554449);
                  state_2415922410.stack.push(Temporary1);;
                  }
                  else {
                  state_2415922410.stack.push((HEX5BHEX5D_2415920663(capture_2415922407, 1).s || []).concat([92,59] || []));;
                  }
                  

                return result_2415922411;

              }
              
function fn_2415922840(capture_2415922842, ms_NP_2415922844, state_2415922845) {
                var result_2415922846 = false;

                  result_2415922846 = true;
                  var Temporary1 = nimCopy(null, HEX5BHEX5D_2415920663(capture_2415922842, 1).s, NTI33554449);
                  state_2415922845.stack.push(Temporary1);;

                return result_2415922846;

              }
              
function fn_2415923403(capture_2415923405, ms_NP_2415923407, state_2415923408) {
                var result_2415923409 = false;

                  result_2415923409 = true;
                  var num_2415923488 = nimCopy(null, HEX5BHEX5D_2415920663(capture_2415923405, 1).s, NTI33554449);
                  if ((2 < len_2415921086(capture_2415923405))) {
                  num_2415923488.push.apply(num_2415923488, ([92,116,105,109,101,115,49,48,94,123] || []).concat(HEX5BHEX5D_2415920663(capture_2415923405, 2).s || [],[125] || []));;
                  }
                  
                  if (((num_2415923488).length == 1)) {
                  var Temporary1 = nimCopy(null, num_2415923488, NTI33554449);
                  state_2415923408.stack.push(Temporary1);;
                  }
                  else {
                  state_2415923408.stack.push(([123] || []).concat(num_2415923488 || [],[125] || []));;
                  }
                  

                return result_2415923409;

              }
              
function fn_2415924261(capture_2415924263, ms_NP_2415924265, state_2415924266) {
                var result_2415924267 = false;

                  result_2415924267 = true;
                  if ((1 < len_2415921086(capture_2415924263))) {
                  var right_2415924325 = pop_1996488879(state_2415924266, "stack");
                  var left_2415924329 = pop_1996488879(state_2415924266, "stack");
                  state_2415924266.stack.push(nsuFormatOpenArray([123,92,108,101,102,116,92,123,36,49,92,44,92,109,105,100,100,108,101,124,92,44,36,50,92,114,105,103,104,116,92,125,125], [nimCopy(null, left_2415924329, NTI33554449), nimCopy(null, right_2415924325, NTI33554449)]));;
                  }
                  else {
                  state_2415924266.stack.push(nsuFormatSingleElem([123,92,108,101,102,116,92,123,36,49,92,114,105,103,104,116,92,125,125], pop_1996488879(state_2415924266, "stack")));;
                  }
                  

                return result_2415924267;

              }
              
function fn_2415924554(capture_2415924556, ms_NP_2415924558, state_2415924559) {
                var result_2415924560 = false;

                BeforeRet: {
                  result_2415924560 = true;
                  if (!(contains_2415924681(symbols_2432696453, HEX5BHEX5D_2415920663(capture_2415924556, 1).s))) {
                  result_2415924560 = false;
                  break BeforeRet;
                  }
                  
                  state_2415924559.stack.push(HEX5BHEX5D_2583691387(symbols_2432696453, HEX5BHEX5D_2415920663(capture_2415924556, 1).s));;
                };

                return result_2415924560;

              }
              
function fn_2415925018(capture_2415925020, ms_NP_2415925022, state_2415925023) {
                var result_2415925024 = false;

                  result_2415925024 = true;
                  state_2415925023.stack.push(([123] || []).concat(pop_1996488879(state_2415925023, "stack") || [],[125] || []));;

                return result_2415925024;

              }
              
function fn_2415925323(capture_2415925325, ms_NP_2415925327, state_2415925328) {
                var result_2415925329 = false;

                  result_2415925329 = true;
                  var Temporary1 = nimCopy(null, HEX5BHEX5D_2415920663(capture_2415925325, 1).s, NTI33554449);
                  state_2415925328.stack.push(Temporary1);;

                return result_2415925329;

              }
              
function fn_2415925714(capture_2415925716, ms_NP_2415925718, state_2415925719) {
                var result_2415925720 = false;

                  result_2415925720 = true;
                  state_2415925719.stack.push(state_2415925719.customCmdHandler(HEX5BHEX5D_2415920663(capture_2415925716, 1).s));;

                return result_2415925720;

              }
              
function fn_2415926010(capture_2415926012, ms_NP_2415926014, state_2415926015) {
                var result_2415926016 = false;

                  result_2415926016 = true;
                  state_2415926015.stack.push(([92,116,101,120,116,123] || []).concat(HEX5BHEX5D_2415920663(capture_2415926012, 1).s || [],[125] || []));;

                return result_2415926016;

              }
              
function fn_2415926304(capture_2415926306, ms_NP_2415926308, state_2415926309) {
                var result_2415926310 = false;

                  result_2415926310 = true;
                  state_2415926309.stack.push(([92,111,112,101,114,97,116,111,114,110,97,109,101,123] || []).concat(HEX5BHEX5D_2415920663(capture_2415926306, 1).s || [],[125] || []));;

                return result_2415926310;

              }
              
function fn_2415926581(capture_2415926583, ms_NP_2415926585, state_2415926586) {
                var result_2415926587 = false;

                  result_2415926587 = true;
                  var Temporary1 = nimCopy(null, HEX5BHEX5D_2415920663(capture_2415926583, 1).s, NTI33554449);
                  state_2415926586.stack.push(Temporary1);;

                return result_2415926587;

              }
              
function fn_2415928094(capture_2415928096, ms_NP_2415928098, state_2415928099) {
                var result_2415928100 = false;

                  result_2415928100 = true;
                  var name_2415928263 = HEX5BHEX5D_2583691387(names_2415928105, HEX5BHEX5D_2415920663(capture_2415928096, 1).s);
                  state_2415928099.stack.push(nsuFormatOpenArray([92,98,101,103,105,110,123,36,49,125,36,50,92,101,110,100,123,36,49,125], [nimCopy(null, name_2415928263, NTI33554449), pop_1996488879(state_2415928099, "stack")]));;

                return result_2415928100;

              }
              
function fn_2415928544(capture_2415928546, ms_NP_2415928548, state_2415928549) {
                var result_2415928550 = false;

                  result_2415928550 = true;
                  if ((1 < len_2415921086(capture_2415928546))) {
                  var b_2415928608 = pop_1996488879(state_2415928549, "stack");
                  var a_2415928612 = pop_1996488879(state_2415928549, "stack");
                  if (((Letters_754974734[HEX5BHEX5D_33557807(a_2415928612, 1)] != undefined) && (Letters_754974734[b_2415928608[chckIndx(0, 0, (b_2415928608).length - 1)]] != undefined))) {
                  state_2415928549.stack.push((a_2415928612 || []).concat([32] || [],b_2415928608 || []));;
                  }
                  else {
                  state_2415928549.stack.push((a_2415928612 || []).concat(b_2415928608 || []));;
                  }
                  
                  }
                  

                return result_2415928550;

              }
              
function fn_2415928908(capture_2415928910, ms_NP_2415928912, state_2415928913) {
                var result_2415928914 = false;

                  result_2415928914 = true;
                  state_2415928913.stack.push(nsuFormatSingleElem(HEX5BHEX5D_2583691387(commands_2415928919, HEX5BHEX5D_2415920663(capture_2415928910, 1).s), pop_1996488879(state_2415928913, "stack")));;

                return result_2415928914;

              }
              
function fn_2415929470(capture_2415929472, ms_NP_2415929474, state_2415929475) {
                var result_2415929476 = false;

                  result_2415929476 = true;
                  var second_2415929485 = pop_1996488879(state_2415929475, "stack");
                  var first_2415929489 = pop_1996488879(state_2415929475, "stack");
                  state_2415929475.stack.push(nsuFormatOpenArray(HEX5BHEX5D_2583691387(commands_2415929481, HEX5BHEX5D_2415920663(capture_2415929472, 1).s), [nimCopy(null, first_2415929489, NTI33554449), nimCopy(null, second_2415929485, NTI33554449)]));;

                return result_2415929476;

              }
              
function fn_2415930803(capture_2415930805, ms_NP_2415930807, state_2415930808) {
                var result_2415930809 = false;

                  result_2415930809 = true;
                  var tmpTuple_2415932796 = HEX5BHEX5D_2415932705(equivalents_2415932552, HEX5BHEX5D_2415920663(capture_2415930805, 1).s);
                  var left_2415932797 = nimCopy(null, tmpTuple_2415932796["Field0"], NTI33554449);
                  var right_2415932798 = nimCopy(null, tmpTuple_2415932796["Field1"], NTI33554449);
                  state_2415930808.stack.push(nsuFormatOpenArray([123,92,108,101,102,116,36,49,36,50,92,114,105,103,104,116,36,51,125], [nimCopy(null, left_2415932797, NTI33554449), pop_1996488879(state_2415930808, "stack"), nimCopy(null, right_2415932798, NTI33554449)]));;

                return result_2415930809;

              }
              
function fn_2415933260(capture_2415933262, ms_NP_2415933264, state_2415933265) {
                          var Temporary4;

                var result_2415933266 = false;

                BeforeRet: {
                  result_2415933266 = true;
                  var latex_2415933270 = pop_1996488879(state_2415933265, "stack");
                  Label1: {
                    var i_2415933354 = 0;
                    var colontmp__587203708 = 0;
                    colontmp__587203708 = (HEX5BHEX5D_2415920663(capture_2415933262, 1).s).length - 1;
                    var res_587203709 = 1;
                    Label2: {
                        Label3: while (true) {
                        if (!(res_587203709 <= colontmp__587203708)) break Label3;
                          i_2415933354 = res_587203709;
                          switch ((Temporary4 = HEX5BHEX5D_2415920663(capture_2415933262, 1).s, Temporary4)[chckIndx(i_2415933354, 0, (Temporary4).length - 1)]) {
                          case 39:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[39,125] || []), NTI33554449);
                            break;
                          case 42:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,42,125] || []), NTI33554449);
                            break;
                          case 43:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,43,125] || []), NTI33554449);
                            break;
                          case 45:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,45,125] || []), NTI33554449);
                            break;
                          case 66:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,98,98], latex_2415933270), NTI33554449);
                            break;
                          case 67:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,92,99,111,109,112,108,101,109,101,110,116,125] || []), NTI33554449);
                            break;
                          case 68:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([100,100,111,116], latex_2415933270), NTI33554449);
                            break;
                          case 72:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,92,109,97,116,104,114,109,123,72,125,125] || []), NTI33554449);
                            break;
                          case 76:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([111,118,101,114,108,105,110,101], latex_2415933270), NTI33554449);
                            break;
                          case 84:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,92,109,97,116,104,114,109,123,84,125,125] || []), NTI33554449);
                            break;
                          case 94:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([104,97,116], latex_2415933270), NTI33554449);
                            break;
                          case 96:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([103,114,97,118,101], latex_2415933270), NTI33554449);
                            break;
                          case 98:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,98,102], latex_2415933270), NTI33554449);
                            break;
                          case 99:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,99,97,108], latex_2415933270), NTI33554449);
                            break;
                          case 100:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([100,111,116], latex_2415933270), NTI33554449);
                            break;
                          case 102:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,102,114,97,107], latex_2415933270), NTI33554449);
                            break;
                          case 104:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([119,105,100,101,104,97,116], latex_2415933270), NTI33554449);
                            break;
                          case 105:
                            latex_2415933270 = nimCopy(null, ([123] || []).concat(latex_2415933270 || [],[94,123,45,49,125,125] || []), NTI33554449);
                            break;
                          case 108:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([98,97,114], latex_2415933270), NTI33554449);
                            break;
                          case 114:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,114,109], latex_2415933270), NTI33554449);
                            break;
                          case 115:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([109,97,116,104,115,99,114], latex_2415933270), NTI33554449);
                            break;
                          case 118:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([118,101,99], latex_2415933270), NTI33554449);
                            break;
                          case 126:
                            latex_2415933270 = nimCopy(null, HEX7BHEX7D_2415919121([116,105,108,100,101], latex_2415933270), NTI33554449);
                            break;
                          default: 
                            result_2415933266 = false;
                            break BeforeRet;
                            break;
                          }
                          res_587203709 = addInt(res_587203709, 2);
                        }
                    };
                  };
                  var Temporary5 = nimCopy(null, latex_2415933270, NTI33554449);
                  state_2415933265.stack.push(Temporary5);;
                };

                return result_2415933266;

              }
              
function fn_2415933676(capture_2415933678, ms_NP_2415933680, state_2415933681) {
                    var Temporary1;

                var result_2415933682 = false;

                  result_2415933682 = true;
                  if ((2 < len_2415921086(capture_2415933678))) {
                  var b_2415933740 = pop_1996488879(state_2415933681, "stack");
                  var a_2415933744 = pop_1996488879(state_2415933681, "stack");
                  state_2415933681.stack.push((a_2415933744 || []).concat(HEX5BHEX5D_2415920663(capture_2415933678, 1).s || [],HEX5BHEX5D_2415920663(capture_2415933678, 2).s || [],b_2415933740 || []));;
                  }
                  else {
                  (Temporary1 = HEX5BHEX5D_2415922075(state_2415933681.stack, 1), Temporary1)[0][Temporary1[1]].push.apply(Temporary1[0][Temporary1[1]], HEX5BHEX5D_2415920663(capture_2415933678, 1).s);;
                  }
                  

                return result_2415933682;

              }
    
function aux_2415934100(ipHEX60gensym394_2415934101) {
        var symHEX60gensym394_2415934102 = HEX5BHEX5D_2466250949(symTabHEX60gensym394_2415934099, ipHEX60gensym394_2415934101);
        insert_2415934103(traceHEX60gensym394_2415934094, 0, {procname: toJSStr(symHEX60gensym394_2415934102.repr), filename: toJSStr(symHEX60gensym394_2415934102.lineInfo.filename), line: symHEX60gensym394_2415934102.lineInfo.line}, 0);

      
    }

  var result_2415919993 = ({ok: false, matchLen: 0, matchMax: 0, cs: ({capList: []})});

    var ip_NP_2415919994 = chckRange(ms_NP_2415919990.ip, 0, 391);
    var si_NP_2415919995 = ms_NP_2415919990.si;
    var simax_NP_2415919996 = ms_NP_2415919990.simax;
++excHandler;
    try {
    Label2: {
        Label3: while (true) {
        if (!true) break Label3;
          switch (ip_NP_2415919994) {
          case 0:
            Label4: {
                Label5: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet320[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label5;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 1;
            break;
          case 1:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 2;
            break;
          case 2:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 3;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 12;
            break;
          case 3:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 9, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 4;
            break;
          case 4:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 5;
            break;
          case 5:
            Label6: {
                Label7: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet321[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label7;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 6;
            break;
          case 6:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 7;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 7:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 8;
            break;
          case 8:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 9;
            break;
          case 9:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym10_2415921027 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415921028(captureHEX60gensym10_2415921027, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 10;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 10:
            Label8: {
                Label9: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet324[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label9;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 11;
            break;
          case 11:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 12:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 34, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 13;
            break;
          case 13:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 14;
            break;
          case 14:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 15;
            break;
          case 15:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 16;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 54;
            break;
          case 16:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 17;
            break;
          case 17:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 46))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 18;
            }
            else {
              ip_NP_2415919994 = 21;
            }
            
            break;
          case 18:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 21, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 19;
            break;
          case 19:
            if ((si_NP_2415919995 < (s_NP_2415919991).length)) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 20;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 20:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 17;
            break;
          case 21:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 22;
            break;
          case 22:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym23_2415921429 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415921430(captureHEX60gensym23_2415921429, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 23;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 23:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 24;
            break;
          case 24:
            Label10: {
                Label11: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet325[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label11;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 25;
            break;
          case 25:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 26;
            break;
          case 26:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet326[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 27;
            }
            else {
              ip_NP_2415919994 = 32;
            }
            
            break;
          case 27:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 32, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 28;
            break;
          case 28:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 29;
            break;
          case 29:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 30;
            break;
          case 30:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 31;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 370;
            break;
          case 31:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 32;
            break;
          case 32:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym33_2415921845 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415921846(captureHEX60gensym33_2415921845, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 33;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 33:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 53;
            break;
          case 34:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet327[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 35;
            }
            else {
              ip_NP_2415919994 = 44;
            }
            
            break;
          case 35:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 44, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 36;
            break;
          case 36:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 37;
            break;
          case 37:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 38;
            break;
          case 38:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 39;
            break;
          case 39:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 40;
            break;
          case 40:
            Label12: {
                Label13: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet328[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label13;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 41;
            break;
          case 41:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 42;
            break;
          case 42:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym43_2415922404 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415922405(captureHEX60gensym43_2415922404, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 43;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 43:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 53;
            break;
          case 44:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 45;
            break;
          case 45:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 46;
            break;
          case 46:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 38))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 47;
            }
            else {
              ip_NP_2415919994 = 49;
            }
            
            break;
          case 47:
            ip_NP_2415919994 = 51;
            break;
          case 48:
            ip_NP_2415919994 = 49;
            break;
          case 49:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 50;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 50:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 51;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 51:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 52;
            break;
          case 52:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym53_2415922839 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415922840(captureHEX60gensym53_2415922839, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 53;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 53:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 54:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 80, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 55;
            break;
          case 55:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 56;
            break;
          case 56:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 57;
            break;
          case 57:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 45))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 58;
            }
            else {
              ip_NP_2415919994 = 60;
            }
            
            break;
          case 58:
            ip_NP_2415919994 = 60;
            break;
          case 59:
            ip_NP_2415919994 = 60;
            break;
          case 60:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet329[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 61;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 61:
            Label14: {
                Label15: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet330[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label15;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 62;
            break;
          case 62:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 46))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 63;
            }
            else {
              ip_NP_2415919994 = 67;
            }
            
            break;
          case 63:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 67, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 64;
            break;
          case 64:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet331[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 65;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 65:
            Label16: {
                Label17: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet332[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label17;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 66;
            break;
          case 66:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 67;
            break;
          case 67:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 68;
            break;
          case 68:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 101))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 69;
            }
            else {
              ip_NP_2415919994 = 78;
            }
            
            break;
          case 69:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 78, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 70;
            break;
          case 70:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 71;
            break;
          case 71:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 45))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 72;
            }
            else {
              ip_NP_2415919994 = 74;
            }
            
            break;
          case 72:
            ip_NP_2415919994 = 74;
            break;
          case 73:
            ip_NP_2415919994 = 74;
            break;
          case 74:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet333[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 75;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 75:
            Label18: {
                Label19: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet334[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label19;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 76;
            break;
          case 76:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 77;
            break;
          case 77:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 78;
            break;
          case 78:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym79_2415923402 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415923403(captureHEX60gensym79_2415923402, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 79;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 79:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 80:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 83, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 81;
            break;
          case 81:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 82;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 177;
            break;
          case 82:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 83:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 86, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 84;
            break;
          case 84:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 85;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 269;
            break;
          case 85:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 86:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 108, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 87;
            break;
          case 87:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 90, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 88;
            break;
          case 88:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 89;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 303;
            break;
          case 89:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 107;
            break;
          case 90:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 91;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 91:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 92;
            break;
          case 92:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 93;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 93:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 94;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 94:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet335[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 95;
            }
            else {
              ip_NP_2415919994 = 104;
            }
            
            break;
          case 95:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 104, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 96;
            break;
          case 96:
            Label20: {
                Label21: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet336[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label21;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 97;
            break;
          case 97:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 98;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 98:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 99;
            break;
          case 99:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 100;
            break;
          case 100:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet337[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 101;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 101:
            Label22: {
                Label23: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet338[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label23;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 102;
            break;
          case 102:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 103;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 103:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 104;
            break;
          case 104:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 105;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 105:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 106;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 106:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym107_2415924260 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415924261(captureHEX60gensym107_2415924260, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 107;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 107:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 108:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 117, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 109;
            break;
          case 109:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 110;
            break;
          case 110:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 111;
            break;
          case 111:
            Label24: {
                Label25: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet339[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label25;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 112;
            break;
          case 112:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet340[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 113;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 113:
            Label26: {
                Label27: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet341[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label27;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 114;
            break;
          case 114:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 115;
            break;
          case 115:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym116_2415924553 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415924554(captureHEX60gensym116_2415924553, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 116;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 116:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 117:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 118;
            }
            else {
              ip_NP_2415919994 = 124;
            }
            
            break;
          case 118:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 124, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 119;
            break;
          case 119:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 120;
            break;
          case 120:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 121;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 121:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 122;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 122:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym123_2415925017 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415925018(captureHEX60gensym123_2415925017, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 123;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 123:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 124:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 125;
            }
            else {
              ip_NP_2415919994 = 136;
            }
            
            break;
          case 125:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 136, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 126;
            break;
          case 126:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 127;
            break;
          case 127:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 128;
            break;
          case 128:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet342[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 129;
            }
            else {
              ip_NP_2415919994 = 132;
            }
            
            break;
          case 129:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 132, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 130;
            break;
          case 130:
            Label28: {
                Label29: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet343[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label29;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 131;
            break;
          case 131:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 133;
            break;
          case 132:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet344[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 133;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 133:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 134;
            break;
          case 134:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym135_2415925322 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415925323(captureHEX60gensym135_2415925322, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 135;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 135:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 136:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 137;
            }
            else {
              ip_NP_2415919994 = 151;
            }
            
            break;
          case 137:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 151, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 138;
            break;
          case 138:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 139;
            break;
          case 139:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 91))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 140;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 140:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 141;
            break;
          case 141:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 147, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 142;
            break;
          case 142:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet345[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 143;
            }
            else {
              ip_NP_2415919994 = 145;
            }
            
            break;
          case 143:
            ip_NP_2415919994 = 146;
            break;
          case 144:
            ip_NP_2415919994 = 145;
            break;
          case 145:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 146;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 361;
            break;
          case 146:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 141;
            break;
          case 147:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 93))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 148;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 148:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 149;
            break;
          case 149:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym150_2415925713 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415925714(captureHEX60gensym150_2415925713, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 150;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 150:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 151:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 34))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 152;
            }
            else {
              ip_NP_2415919994 = 160;
            }
            
            break;
          case 152:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 160, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 153;
            break;
          case 153:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 154;
            break;
          case 154:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 155;
            break;
          case 155:
            Label30: {
                Label31: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet346[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label31;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 156;
            break;
          case 156:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 157;
            break;
          case 157:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 34))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 158;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 158:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym159_2415926009 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415926010(captureHEX60gensym159_2415926009, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 159;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 159:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 160:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 39))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 161;
            }
            else {
              ip_NP_2415919994 = 169;
            }
            
            break;
          case 161:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 169, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 162;
            break;
          case 162:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 163;
            break;
          case 163:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 164;
            break;
          case 164:
            Label32: {
                Label33: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet347[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label33;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 165;
            break;
          case 165:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 166;
            break;
          case 166:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 39))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 167;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 167:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym168_2415926303 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415926304(captureHEX60gensym168_2415926303, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 168;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 168:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 176;
            break;
          case 169:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 96))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 170;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 170:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 171;
            break;
          case 171:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 172;
            break;
          case 172:
            Label34: {
                Label35: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet348[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label35;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 173;
            break;
          case 173:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 174;
            break;
          case 174:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 96))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 175;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 175:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym176_2415926580 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415926581(captureHEX60gensym176_2415926580, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 176;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 176:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 177:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 178;
            break;
          case 178:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 109))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 179;
            }
            else {
              ip_NP_2415919994 = 189;
            }
            
            break;
          case 179:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 189, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 180;
            break;
          case 180:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 181;
            break;
          case 181:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 182;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 182:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 183;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 183:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 184;
            break;
          case 184:
            Label36: {
                Label37: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet349[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label37;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 185;
            break;
          case 185:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 186;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 186:
            Label38: {
                Label39: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet350[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label39;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 187;
            break;
          case 187:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 188;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 188:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 257;
            break;
          case 189:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 109))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 190;
            }
            else {
              ip_NP_2415919994 = 200;
            }
            
            break;
          case 190:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 200, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 191;
            break;
          case 191:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 192;
            break;
          case 192:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 193;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 193:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 40))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 194;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 194:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 195;
            break;
          case 195:
            Label40: {
                Label41: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet351[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label41;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 196;
            break;
          case 196:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 197;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 197:
            Label42: {
                Label43: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet352[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label43;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 198;
            break;
          case 198:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 41))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 199;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 199:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 257;
            break;
          case 200:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 109))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 201;
            }
            else {
              ip_NP_2415919994 = 211;
            }
            
            break;
          case 201:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 211, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 202;
            break;
          case 202:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 203;
            break;
          case 203:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 204;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 204:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 205;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 205:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 206;
            break;
          case 206:
            Label44: {
                Label45: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet353[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label45;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 207;
            break;
          case 207:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 208;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 208:
            Label46: {
                Label47: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet354[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label47;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 209;
            break;
          case 209:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 210;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 210:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 257;
            break;
          case 211:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 109))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 212;
            }
            else {
              ip_NP_2415919994 = 222;
            }
            
            break;
          case 212:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 222, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 213;
            break;
          case 213:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 214;
            break;
          case 214:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 215;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 215:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 91))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 216;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 216:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 217;
            break;
          case 217:
            Label48: {
                Label49: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet355[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label49;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 218;
            break;
          case 218:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 219;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 219:
            Label50: {
                Label51: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet356[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label51;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 220;
            break;
          case 220:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 93))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 221;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 221:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 257;
            break;
          case 222:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 109))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 223;
            }
            else {
              ip_NP_2415919994 = 235;
            }
            
            break;
          case 223:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 235, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 224;
            break;
          case 224:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 225;
            break;
          case 225:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 226;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 226:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 227;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 227:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 228;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 228:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 229;
            break;
          case 229:
            Label52: {
                Label53: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet357[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label53;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 230;
            break;
          case 230:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 231;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 231:
            Label54: {
                Label55: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet358[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label55;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 232;
            break;
          case 232:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 92))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 233;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 233:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 234;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 234:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 257;
            break;
          case 235:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 109))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 236;
            }
            else {
              ip_NP_2415919994 = 248;
            }
            
            break;
          case 236:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 248, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 237;
            break;
          case 237:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 238;
            break;
          case 238:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 239;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 239:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 240;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 240:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 241;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 241:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 242;
            break;
          case 242:
            Label56: {
                Label57: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet359[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label57;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 243;
            break;
          case 243:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 244;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 244:
            Label58: {
                Label59: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet360[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label59;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 245;
            break;
          case 245:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 246;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 246:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 247;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 247:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 257;
            break;
          case 248:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 99))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 249;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 249:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 250;
            break;
          case 250:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 115))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 251;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 251:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 252;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 252:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 253;
            break;
          case 253:
            Label60: {
                Label61: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet361[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label61;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 254;
            break;
          case 254:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 255;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 255:
            Label62: {
                Label63: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet362[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label63;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 256;
            break;
          case 256:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 257;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 257:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym258_2415928093 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415928094(captureHEX60gensym258_2415928093, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 258;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 258:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 259:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 260;
            break;
          case 260:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 261;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 12;
            break;
          case 261:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 267, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 262;
            break;
          case 262:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 263;
            break;
          case 263:
            Label64: {
                Label65: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet363[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label65;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 264;
            break;
          case 264:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 265;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 265:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 266;
            break;
          case 266:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 267;
            break;
          case 267:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym268_2415928543 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415928544(captureHEX60gensym268_2415928543, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 268;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 268:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 269:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 115))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 270;
            }
            else {
              ip_NP_2415919994 = 282;
            }
            
            break;
          case 270:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 282, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 271;
            break;
          case 271:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 272;
            break;
          case 272:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 273;
            break;
          case 273:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 113))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 274;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 274:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 275;
            break;
          case 275:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet364[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 276;
            }
            else {
              ip_NP_2415919994 = 279;
            }
            
            break;
          case 276:
            ip_NP_2415919994 = 278;
            break;
          case 277:
            ip_NP_2415919994 = 278;
            break;
          case 278:
            simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
            if ((0 < ms_NP_2415919990.backStack.top)) {
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var tHEX60gensym279_2415928849 = nimCopy(null, ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], NTI2483027972);
            var __2415928850 = nimCopy(null, {Field0: tHEX60gensym279_2415928849.ip, Field1: tHEX60gensym279_2415928849.si, Field2: tHEX60gensym279_2415928849.rp, Field3: tHEX60gensym279_2415928849.cp, Field4: tHEX60gensym279_2415928849.pp}, NTI2415925820);
            ip_NP_2415919994 = chckRange(__2415928850["Field0"], 0, 391);
            si_NP_2415919995 = __2415928850["Field1"];
            ms_NP_2415919990.retStack.top = __2415928850["Field2"];
            ms_NP_2415919990.capStack.top = __2415928850["Field3"];
            ms_NP_2415919990.precStack.top = __2415928850["Field4"];
            }
            else {
              break Label2;
            }
            
            break;
          case 279:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 280;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 54;
            break;
          case 280:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym281_2415928907 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415928908(captureHEX60gensym281_2415928907, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 281;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 281:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 302;
            break;
          case 282:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 283;
            break;
          case 283:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 284;
            break;
          case 284:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 114))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 285;
            }
            else {
              ip_NP_2415919994 = 288;
            }
            
            break;
          case 285:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 288, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 286;
            break;
          case 286:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 116))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 287;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 287:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 294;
            break;
          case 288:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 47))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 289;
            }
            else {
              ip_NP_2415919994 = 291;
            }
            
            break;
          case 289:
            ip_NP_2415919994 = 294;
            break;
          case 290:
            ip_NP_2415919994 = 291;
            break;
          case 291:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 110))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 292;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 292:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 99))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 293;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 293:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 114))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 294;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 294:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 295;
            break;
          case 295:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet365[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 296;
            }
            else {
              ip_NP_2415919994 = 299;
            }
            
            break;
          case 296:
            ip_NP_2415919994 = 298;
            break;
          case 297:
            ip_NP_2415919994 = 298;
            break;
          case 298:
            simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
            if ((0 < ms_NP_2415919990.backStack.top)) {
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var tHEX60gensym299_2415929394 = nimCopy(null, ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], NTI2483027972);
            var __2415929395 = nimCopy(null, {Field0: tHEX60gensym299_2415929394.ip, Field1: tHEX60gensym299_2415929394.si, Field2: tHEX60gensym299_2415929394.rp, Field3: tHEX60gensym299_2415929394.cp, Field4: tHEX60gensym299_2415929394.pp}, NTI2415926147);
            ip_NP_2415919994 = chckRange(__2415929395["Field0"], 0, 391);
            si_NP_2415919995 = __2415929395["Field1"];
            ms_NP_2415919990.retStack.top = __2415929395["Field2"];
            ms_NP_2415919990.capStack.top = __2415929395["Field3"];
            ms_NP_2415919990.precStack.top = __2415929395["Field4"];
            }
            else {
              break Label2;
            }
            
            break;
          case 299:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 300;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 54;
            break;
          case 300:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 301;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 54;
            break;
          case 301:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym302_2415929469 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415929470(captureHEX60gensym302_2415929469, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 302;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 302:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 303:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 304;
            break;
          case 304:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 40))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 305;
            }
            else {
              ip_NP_2415919994 = 311;
            }
            
            break;
          case 305:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 311, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 306;
            break;
          case 306:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 307;
            break;
          case 307:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 308;
            break;
          case 308:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 309;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 309:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 41))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 310;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 310:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 359;
            break;
          case 311:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 91))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 312;
            }
            else {
              ip_NP_2415919994 = 318;
            }
            
            break;
          case 312:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 318, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 313;
            break;
          case 313:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 314;
            break;
          case 314:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 315;
            break;
          case 315:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 316;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 316:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 93))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 317;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 317:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 359;
            break;
          case 318:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 60))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 319;
            }
            else {
              ip_NP_2415919994 = 327;
            }
            
            break;
          case 319:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 327, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 320;
            break;
          case 320:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 321;
            break;
          case 321:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 322;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 322:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 323;
            break;
          case 323:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 324;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 324:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 325;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 325:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 62))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 326;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 326:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 359;
            break;
          case 327:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 328;
            }
            else {
              ip_NP_2415919994 = 336;
            }
            
            break;
          case 328:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 336, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 329;
            break;
          case 329:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 330;
            break;
          case 330:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 331;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 331:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 332;
            break;
          case 332:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 333;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 333:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 334;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 334:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 335;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 335:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 359;
            break;
          case 336:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 337;
            }
            else {
              ip_NP_2415919994 = 345;
            }
            
            break;
          case 337:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 345, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 338;
            break;
          case 338:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 339;
            break;
          case 339:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 95))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 340;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 340:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 341;
            break;
          case 341:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 342;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 342:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 95))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 343;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 343:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 344;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 344:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 359;
            break;
          case 345:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 123))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 346;
            }
            else {
              ip_NP_2415919994 = 354;
            }
            
            break;
          case 346:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 354, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 347;
            break;
          case 347:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 348;
            break;
          case 348:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 94))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 349;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 349:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 350;
            break;
          case 350:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 351;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 351:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 94))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 352;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 352:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 125))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 353;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 353:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 359;
            break;
          case 354:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 355;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 355:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 356;
            break;
          case 356:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 357;
            break;
          case 357:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 358;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 259;
            break;
          case 358:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 124))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 359;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 359:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym360_2415930802 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415930803(captureHEX60gensym360_2415930802, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 360;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 360:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 361:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 91))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 362;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 362:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 368, si: addInt(si_NP_2415919995, 0), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 363;
            break;
          case 363:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet366[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 364;
            }
            else {
              ip_NP_2415919994 = 366;
            }
            
            break;
          case 364:
            ip_NP_2415919994 = 367;
            break;
          case 365:
            ip_NP_2415919994 = 366;
            break;
          case 366:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 367;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 361;
            break;
          case 367:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 362;
            break;
          case 368:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 93))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 369;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 369:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 370:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 371;
            break;
          case 371:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 372;
            break;
          case 372:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 373;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 54;
            break;
          case 373:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 374;
            break;
          case 374:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)] == 46))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 375;
            }
            else {
              ip_NP_2415919994 = 378;
            }
            
            break;
          case 375:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 378, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 376;
            break;
          case 376:
            if ((si_NP_2415919995 < (s_NP_2415919991).length)) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 377;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 377:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 374;
            break;
          case 378:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 379;
            break;
          case 379:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym380_2415933259 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415933260(captureHEX60gensym380_2415933259, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 380;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 380:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, 0), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 381;
            break;
          case 381:
            Label66: {
                Label67: while (true) {
                if (!((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet367[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) break Label67;
                  si_NP_2415919995 = addInt(si_NP_2415919995, 1);
                }
            };
            ip_NP_2415919994 = 382;
            break;
          case 382:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 383;
            break;
          case 383:
            if (((si_NP_2415919995 < (s_NP_2415919991).length) && (ConstSet368[s_NP_2415919991[chckIndx(si_NP_2415919995, 0, (s_NP_2415919991).length - 1)]] != undefined))) {
            si_NP_2415919995 = addInt(si_NP_2415919995, 1);
            ip_NP_2415919994 = 384;
            }
            else {
              ip_NP_2415919994 = 389;
            }
            
            break;
          case 384:
            if (((ms_NP_2415919990.backStack.frames).length <= ms_NP_2415919990.backStack.top)) {
            grow_2415920099(ms_NP_2415919990.backStack);
            }
            
            ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], {ip: 389, si: addInt(si_NP_2415919995, (-1)), rp: ms_NP_2415919990.retStack.top, cp: ms_NP_2415919990.capStack.top, pp: ms_NP_2415919990.precStack.top}, NTI2483027972);
            ms_NP_2415919990.backStack.top = addInt(ms_NP_2415919990.backStack.top, 1);
            ip_NP_2415919994 = 385;
            break;
          case 385:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 0, si: addInt(si_NP_2415919995, (-1)), ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 386;
            break;
          case 386:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 0, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            ip_NP_2415919994 = 387;
            break;
          case 387:
            if (((ms_NP_2415919990.retStack.frames).length <= ms_NP_2415919990.retStack.top)) {
            grow_2499805270(ms_NP_2415919990.retStack);
            }
            
            ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)] = 388;
            ms_NP_2415919990.retStack.top = addInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = 370;
            break;
          case 388:
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var _ = ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)];
            ip_NP_2415919994 = 389;
            break;
          case 389:
            if (((ms_NP_2415919990.capStack.frames).length <= ms_NP_2415919990.capStack.top)) {
            grow_2415920055(ms_NP_2415919990.capStack);
            }
            
            ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)] = nimCopy(ms_NP_2415919990.capStack.frames[chckIndx(ms_NP_2415919990.capStack.top, 0, (ms_NP_2415919990.capStack.frames).length - 1)], {cft: 1, si: si_NP_2415919995, ck: 2, name: [], sPushed: []}, NTI2415919281);
            ms_NP_2415919990.capStack.top = addInt(ms_NP_2415919990.capStack.top, 1);
            var captureHEX60gensym390_2415933675 = collectCaptures_2449473730(fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 1));
            if (fn_2415933676(captureHEX60gensym390_2415933675, ms_NP_2415919990, state_2415919992)) {
            ip_NP_2415919994 = 390;
            }
            else {
              ip_NP_2415919994 = 391;
            }
            
            break;
          case 390:
            if ((0 < ms_NP_2415919990.retStack.top)) {
            if (!((0 < ms_NP_2415919990.retStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
            ip_NP_2415919994 = chckRange(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)], 0, 391);
            }
            else {
              result_2415919993.ok = true;
              simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
              break Label2;
            }
            
            break;
          case 391:
            simax_NP_2415919996 = nimMax(simax_NP_2415919996, si_NP_2415919995);
            if ((0 < ms_NP_2415919990.backStack.top)) {
            if (!((0 < ms_NP_2415919990.backStack.top))) {
            failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,98,97,99,107,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
            }
            
            ms_NP_2415919990.backStack.top = subInt(ms_NP_2415919990.backStack.top, 1);
            var tHEX60gensym392_2415934091 = nimCopy(null, ms_NP_2415919990.backStack.frames[chckIndx(ms_NP_2415919990.backStack.top, 0, (ms_NP_2415919990.backStack.frames).length - 1)], NTI2483027972);
            var __2415934092 = nimCopy(null, {Field0: tHEX60gensym392_2415934091.ip, Field1: tHEX60gensym392_2415934091.si, Field2: tHEX60gensym392_2415934091.rp, Field3: tHEX60gensym392_2415934091.cp, Field4: tHEX60gensym392_2415934091.pp}, NTI2415928872);
            ip_NP_2415919994 = chckRange(__2415934092["Field0"], 0, 391);
            si_NP_2415919995 = __2415934092["Field1"];
            ms_NP_2415919990.retStack.top = __2415934092["Field2"];
            ms_NP_2415919990.capStack.top = __2415934092["Field3"];
            ms_NP_2415919990.precStack.top = __2415934092["Field4"];
            }
            else {
              break Label2;
            }
            
            break;
          }
        }
    };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555179))) {
    var traceHEX60gensym394_2415934094 = [[]];
    var symTabHEX60gensym394_2415934099 = {syms: [{ip: 0, name: [104,101,105,110,101], repr: [104,101,105,110,101,32,60,45,32,119,115,32,42,32,101,120,112,114,32,42,32,119,115], lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 185, column: 8}}, {ip: 12, name: [116,101,114,109], repr: [116,101,114,109,32,60,45,32,97,116,111,109,87,105,116,104,77,111,100,105,102,105,101,114,115,65,110,100,65,100,115,99,114,105,112,116,115,32,124,32,99,111,109,109,97,32,124,32,115,101,112,97,114,97,116,111,114], lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 174, column: 7}}, {ip: 54, name: [97,116,111,109], repr: makeNimstrLit("atom <-\x0A    number | environment | operation | delimitedExpr | symbol | group |\x0A    latexCommand |\x0A    customCommand |\x0A    text |\x0A    operatorName |\x0A    passthrough"), lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 134, column: 7}}, {ip: 177, name: [101,110,118,105,114,111,110,109,101,110,116], repr: makeNimstrLit("environment <- (>\"mt{\" * ws * expr * ws * \"}\" | >\"mt(\" * ws * expr * ws * \")\" |\x0A    >\"mt|\" * ws * expr * ws * \"|\" |\x0A    >\"mt[\" * ws * expr * ws * \"]\" |\x0A    >\"mt\\\\{\" * ws * expr * ws * \"\\\\}\" |\x0A    >\"mt||\" * ws * expr * ws * \"||\" |\x0A    >\"cs{\" * ws * expr * ws * \"}\") do:\x0A  const\x0A    names = {\"mt{\": \"matrix\", \"mt(\": \"pmatrix\", \"mt|\": \"vmatrix\",\x0A             \"mt[\": \"bmatrix\", \"mt\\\\{\": \"Bmatrix\", \"mt||\": \"Vmatrix\",\x0A             \"cs{\": \"cases\"}.toTable\x0A  let name = names[$1]\x0A  stack.add(r\"\\begin{$1}$2\\end{$1}\" % [name, stack.pop])"), lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 97, column: 14}}, {ip: 259, name: [101,120,112,114], repr: makeNimstrLit("expr <- term * ?>(ws * expr) do:\x0A  if capture.len > 1:\x0A    let b = stack.pop\x0A    let a = stack.pop\x0A    if a[^1] in Letters and b[0] in Letters:\x0A      stack.add(a & \" \" & b)\x0A    else:\x0A      stack.add(a & b)"), lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 176, column: 7}}, {ip: 269, name: [111,112,101,114,97,116,105,111,110], repr: [111,112,101,114,97,116,105,111,110,32,60,45,32,117,110,97,114,121,79,112,101,114,97,116,105,111,110,32,124,32,98,105,110,97,114,121,79,112,101,114,97,116,105,111,110], lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 132, column: 12}}, {ip: 303, name: [100,101,108,105,109,105,116,101,100,69,120,112,114,65], repr: makeNimstrLit("delimitedExprA <- (>\"(\" * expr * \")\" | >\"[\" * expr * \"]\" |\x0A    >\"<{\" * expr * \"}>\" |\x0A    >\"||\" * expr * \"||\" |\x0A    >\"{_\" * expr * \"_}\" |\x0A    >\"{^\" * expr * \"^}\" |\x0A    >\"|\" * expr * \"|\") do:\x0A  const\x0A    equivalents = {\"(\": (\"(\", \")\"), \"[\": (\"[\", \"]\"),\x0A                   \"<{\": (\"\\\\langle \", \"\\\\rangle\"),\x0A                   \"||\": (\"\\\\Vert \", \"\\\\Vert\"),\x0A                   \"{_\": (\"\\\\lfloor \", \"\\\\rfloor\"),\x0A                   \"{^\": (\"\\\\lceil \", \"\\\\rceil\"), \"|\": (\"|\", \"|\")}.toTable\x0A  let (left, right) = equivalents[$1]\x0A  stack.add(r\"{\\left$1$2\\right$3}\" % [left, stack.pop, right])"), lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 68, column: 17}}, {ip: 361, name: [98,114,97,99,107,101,116,115], repr: [98,114,97,99,107,101,116,115,32,60,45,32,39,91,39,32,42,32,42,40,49,32,45,32,123,39,91,39,44,32,39,93,39,125,32,124,32,98,114,97,99,107,101,116,115,41,32,42,32,39,93,39], lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 49, column: 11}}, {ip: 370, name: [97,116,111,109,87,105,116,104,77,111,100,105,102,105,101,114,115,65,110,100,65,100,115,99,114,105,112,116,115], repr: makeNimstrLit("atomWithModifiersAndAdscripts <- atomWithModifiers * >*\'\\\'\' *\x0A    ?(>{\'^\', \'_\'} * atomWithModifiersAndAdscripts) do:\x0A  if capture.len > 2:\x0A    let b = stack.pop\x0A    let a = stack.pop\x0A    stack.add(a & $1 & $2 & b)\x0A  else:\x0A    stack[^1] &= $1"), lineInfo: {filename: makeNimstrLit("/home/xigoi/.nimble/pkgs2/heine-2023.1010.1-7e71e8de6016feaa6fb4ba975ff96173b0bb24cb/heinepkg/render.nim"), line: 166, column: 32}}, {ip: 391, name: [95,102,97,105,108], repr: [], lineInfo: {filename: [], line: 0, column: 0}}]};
    aux_2415934100(ip_NP_2415919994);
    Label68: {
        Label69: while (true) {
        if (!(0 < ms_NP_2415919990.retStack.top)) break Label69;
          if (!((0 < ms_NP_2415919990.retStack.top))) {
          failedAssertImpl_268435541([115,116,97,99,107,46,110,105,109,40,51,54,44,32,51,41,32,96,109,115,95,78,80,46,114,101,116,83,116,97,99,107,46,116,111,112,32,62,32,48,96,32]);
          }
          
          ms_NP_2415919990.retStack.top = subInt(ms_NP_2415919990.retStack.top, 1);
          aux_2415934100(ms_NP_2415919990.retStack.frames[chckIndx(ms_NP_2415919990.retStack.top, 0, (ms_NP_2415919990.retStack.frames).length - 1)]);
        }
    };
    var eHEX60gensym394_2415934198 = getCurrentException();
    if (isObj(eHEX60gensym394_2415934198.m_type, NTI2466250793)) {
    var erefHEX60gensym394_2415934206 = eHEX60gensym394_2415934198;
    erefHEX60gensym394_2415934206.matchLen = si_NP_2415919995;
    erefHEX60gensym394_2415934206.matchMax = simax_NP_2415919996;
    }
    
    reraiseException();
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    ms_NP_2415919990.ip = ip_NP_2415919994;
    ms_NP_2415919990.si = si_NP_2415919995;
    ms_NP_2415919990.simax = simax_NP_2415919996;
    result_2415919993.matchLen = ms_NP_2415919990.si;
    result_2415919993.matchMax = ms_NP_2415919990.simax;
    if ((result_2415919993.ok && (0 < ms_NP_2415919990.capStack.top))) {
    result_2415919993.cs = nimCopy(result_2415919993.cs, fixCaptures_2415920260(s_NP_2415919991, ms_NP_2415919990.capStack, 0), NTI2449473611);
    }
    

  return result_2415919993;

}

function render_2415934383(input_2415934384, customCmdHandler_2415934387) {
  var result_2415934388 = [];

  BeforeRet: {
    var state_2415934389 = [{customCmdHandler: customCmdHandler_2415934387, stack: []}];
    var res_2415934422 = match_2415934390(heineParser_2415934340, input_2415934384, state_2415934389[0]);
    if ((res_2415934422.ok && (res_2415934422.matchLen == (input_2415934384).length))) {
    result_2415934388 = nimCopy(null, state_2415934389[0].stack[chckIndx(0, 0, (state_2415934389[0].stack).length - 1)], NTI33554449);
    break BeforeRet;
    }
    else {
      var caret_2415934423 = ([10] || []).concat(nsuRepeatChar(32, chckRange(res_2415934422.matchMax, 0, 2147483647)) || [],[94] || []);
      raiseException({message: ([80,97,114,115,101,32,101,114,114,111,114,58,10] || []).concat(input_2415934384 || [],caret_2415934423 || []), parent: null, m_type: NTI2466250794, matchLen: 0, matchMax: 0, name: null, trace: [], up: null}, "NPegParseError");
    }
    
  };

  return result_2415934388;

}

function heine_2399141891(arg_2399141892, customCmdHandler_2399141895) {
  var result_2399141896 = [];

    result_2399141896 = nimCopy(null, render_2415934383(arg_2399141892, customCmdHandler_2399141895), NTI33554449);

  return result_2399141896;

}

function expandStr_1660945068(doc_1660945069, str_1660945070) {
    var Temporary1;

  var result_1660945071 = [];

    var Temporary1 = expand_1660944495(doc_1660945069, toStringView_1560281142(str_1660945070), 0);
    if (ConstSet369[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_1660945071 = nimCopy(null, Temporary1.str, NTI33554449);

  return result_1660945071;

}

function getCurrentExceptionMsg_33556463() {
  var result_33556464 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556443()) {
    result_33556464 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556469 = null;
            if (lastJSError.message !== undefined) {
        msg_33556469 = lastJSError.message;
      }
      
      if (!((msg_33556469 == null))) {
      result_33556464 = nimCopy(null, cstrToNimstr(msg_33556469), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556464 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556464;

}

function HEX7BHEX7D_2197816503(cmd_2197816504, arg_2197816505) {
    var Temporary1;

  var result_2197816506 = [];

    if (nsuStartsWith(cmd_2197816504, [92])) {
    Temporary1 = [];
    }
    else {
    Temporary1 = [92];
    }
    
    result_2197816506 = nimCopy(null, (Temporary1 || []).concat(cmd_2197816504 || [],[123] || [],arg_2197816505 || [],[125] || []), NTI33554449);

  return result_2197816506;

}

function rawGet_1476396556(t_1476396559, key_1476396560, hc_1476396561, hc_1476396561_Idx) {
  var result_1476396562 = 0;

  BeforeRet: {
    hc_1476396561[hc_1476396561_Idx] = hash_1275068863(key_1476396560);
    if ((hc_1476396561[hc_1476396561_Idx] == 0)) {
    hc_1476396561[hc_1476396561_Idx] = 314159265;
    }
    
    if (((t_1476396559.data).length == 0)) {
    result_1476396562 = (-1);
    break BeforeRet;
    }
    
    var h_1476396625 = (hc_1476396561[hc_1476396561_Idx] & (t_1476396559.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_1476396559.data[chckIndx(h_1476396625, 0, (t_1476396559.data).length - 1)].Field0)) break Label2;
          if (((t_1476396559.data[chckIndx(h_1476396625, 0, (t_1476396559.data).length - 1)].Field0 == hc_1476396561[hc_1476396561_Idx]) && eqStrings(t_1476396559.data[chckIndx(h_1476396625, 0, (t_1476396559.data).length - 1)].Field1, key_1476396560))) {
          result_1476396562 = h_1476396625;
          break BeforeRet;
          }
          
          h_1476396625 = nextTry_1627389986(h_1476396625, (t_1476396559.data).length - 1);
        }
    };
    result_1476396562 = subInt((-1), h_1476396625);
  };

  return result_1476396562;

}

function hasKey_1476396549(t_1476396552, key_1476396553) {
  var result_1476396554 = false;

    var hc_1476396555 = [0];
    result_1476396554 = (0 <= rawGet_1476396556(t_1476396552, key_1476396553, hc_1476396555, 0));

  return result_1476396554;

}

function some_1476396962(val_1476396964) {
  var result_1476396969 = ({val: ({body: [null, 0], slice: ({a: 0, b: 0})}), has: false});

    result_1476396969.has = true;
    result_1476396969.val = nimCopy(result_1476396969.val, val_1476396964, NTI1560281091);

  return result_1476396969;

}

function HEX5BHEX5D_1476396888(t_1476396891, key_1476396892) {
  var result_1476396893 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    var hcHEX60gensym20_1476396894 = [0];
    var indexHEX60gensym20_1476396901 = rawGet_1476396556(t_1476396891, key_1476396892, hcHEX60gensym20_1476396894, 0);
    if ((0 <= indexHEX60gensym20_1476396901)) {
    result_1476396893 = nimCopy(result_1476396893, t_1476396891.data[chckIndx(indexHEX60gensym20_1476396901, 0, (t_1476396891.data).length - 1)].Field2, NTI1560281091);
    }
    else {
    raiseKeyError_1660944714(key_1476396892);
    }
    

  return result_1476396893;

}

function none_1476397118() {
  var result_1476397125 = ({val: ({body: [null, 0], slice: ({a: 0, b: 0})}), has: false});

  return result_1476397125;

}

function isSome_1476397150(self_1476397152) {
  var result_1476397153 = false;

    result_1476397153 = self_1476397152.has;

  return result_1476397153;

}

function unsafeGet_1476397159(self_1476397161) {
  var result_1476397162 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    if (!(isSome_1476397150(self_1476397161))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,51,55,57,44,32,51,41,32,96,115,101,108,102,46,105,115,83,111,109,101,96,32]);
    }
    
    result_1476397162 = self_1476397161.val;

  return result_1476397162;

}

function renderStr_1660945076(doc_1660945077, str_1660945078) {
    var Temporary1;

  var result_1660945079 = [];

    var Temporary1 = expand_1660944495(doc_1660945077, toStringView_1560281142(str_1660945078), 1);
    if (ConstSet371[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_1660945079 = nimCopy(null, Temporary1.str, NTI33554449);

  return result_1660945079;

}

function checkboxCommands_2181038086(doc_2181038087) {

function dashCmd_2181038119(arg_2181038120) {
    var Temporary1;

  var result_2181038121 = [];

    switch (doc_2181038087.target) {
    case 0:
      Temporary1 = ([60,108,105,32,99,108,97,115,115,61,34,120,100,45,99,104,101,99,107,98,111,120,45,117,110,99,104,101,99,107,101,100,34,62] || []).concat(arg_2181038120 || [],[60,47,108,105,62] || []);
      break;
    case 1:
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,76,97,84,101,88,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,71,101,109,116,101,120,116,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2181038121 = nimCopy(null, Temporary1, NTI33554449);

  return result_2181038121;

}
    
function HEX3Aanonymous_2181038166(arg_2181038167) {
      var result_2181038168 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2181038087.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [45]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2181038115 = expandArguments_2197815314(doc_2181038087, [45], arg_2181038167, [HEX21_1593835705(1)]);
        result_2181038168 = nimCopy(result_2181038168, {typ: 1, str: dashCmd_2181038119(to_2181038173(vals_2181038115[chckIndx(0, 0, (vals_2181038115).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2181038168;

    }

function vCmd_2181039279(arg_2181039280) {
    var Temporary1;

  var result_2181039281 = [];

    switch (doc_2181038087.target) {
    case 0:
      Temporary1 = ([60,108,105,32,99,108,97,115,115,61,34,120,100,45,99,104,101,99,107,98,111,120,45,99,104,101,99,107,101,100,34,62] || []).concat(arg_2181039280 || [],[60,47,108,105,62] || []);
      break;
    case 1:
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,76,97,84,101,88,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,71,101,109,116,101,120,116,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2181039281 = nimCopy(null, Temporary1, NTI33554449);

  return result_2181039281;

}
    
function HEX3Aanonymous_2181039287(arg_2181039288) {
      var result_2181039289 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2181038087.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [118]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2181039278 = expandArguments_2197815314(doc_2181038087, [118], arg_2181039288, [HEX21_1593835705(1)]);
        result_2181039289 = nimCopy(result_2181039289, {typ: 1, str: vCmd_2181039279(to_2181038173(vals_2181039278[chckIndx(0, 0, (vals_2181039278).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2181039289;

    }

function xCmd_2181039345(arg_2181039346) {
    var Temporary1;

  var result_2181039347 = [];

    switch (doc_2181038087.target) {
    case 0:
      Temporary1 = ([60,108,105,32,99,108,97,115,115,61,34,120,100,45,99,104,101,99,107,98,111,120,45,99,114,111,115,115,101,100,34,62] || []).concat(arg_2181039346 || [],[60,47,108,105,62] || []);
      break;
    case 1:
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,76,97,84,101,88,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,71,101,109,116,101,120,116,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2181039347 = nimCopy(null, Temporary1, NTI33554449);

  return result_2181039347;

}
    
function HEX3Aanonymous_2181039353(arg_2181039354) {
      var result_2181039355 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2181038087.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [120]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2181039344 = expandArguments_2197815314(doc_2181038087, [120], arg_2181039354, [HEX21_1593835705(1)]);
        result_2181039355 = nimCopy(result_2181039355, {typ: 1, str: xCmd_2181039345(to_2181038173(vals_2181039344[chckIndx(0, 0, (vals_2181039344).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2181039355;

    }

  var result_2181038090 = ({data: [], counter: 0});

    var commands_2181038093 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_2181038093[0], [45], HEX3Aanonymous_2181038166);
    HEX5BHEX5DHEX3D_2181038249(commands_2181038093[0], [118], HEX3Aanonymous_2181039287);
    HEX5BHEX5DHEX3D_2181038249(commands_2181038093[0], [120], HEX3Aanonymous_2181039353);
    result_2181038090 = nimCopy(result_2181038090, commands_2181038093[0], NTI1593835562);

  return result_2181038090;

}

function compileCivet_2063600878(src_2063600879) {
  var result_2063600880 = [];

    raiseException({message: makeNimstrLit("Civet compilation is currently not available when using JavaScript (how ironic)"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2063600880;

}

function highlightCode_2063600920(code_2063600921, lang_2063600922) {
  var result_2063600923 = [];

    result_2063600923 = nimCopy(null, code_2063600921, NTI33554449);

  return result_2063600923;

}

function HEX5BHEX5D_2197816507(cmd_2197816508, arg_2197816509) {
    var Temporary1;

  var result_2197816510 = [];

    if (nsuStartsWith(cmd_2197816508, [92])) {
    Temporary1 = [];
    }
    else {
    Temporary1 = [92];
    }
    
    result_2197816510 = nimCopy(null, (Temporary1 || []).concat(cmd_2197816508 || [],[91] || [],arg_2197816509 || [],[93] || []), NTI33554449);

  return result_2197816510;

}

function filter_2231369786(self_2231369788, callback_2231369790) {
    var Temporary1;

  var result_2231369791 = ({val: [], has: false});

    if ((isSome_2214592897(self_2231369788) && !(callback_2231369790(self_2231369788.val)))) {
    Temporary1 = none_2214593024();
    }
    else {
    Temporary1 = self_2231369788;
    }
    
    result_2231369791 = nimCopy(result_2231369791, Temporary1, NTI1593835612);

  return result_2231369791;

}

function rawGet_1476398654(t_1476398657, key_1476398658, hc_1476398659, hc_1476398659_Idx) {
  var result_1476398660 = 0;

  BeforeRet: {
    hc_1476398659[hc_1476398659_Idx] = hash_1275068863(key_1476398658);
    if ((hc_1476398659[hc_1476398659_Idx] == 0)) {
    hc_1476398659[hc_1476398659_Idx] = 314159265;
    }
    
    if (((t_1476398657.data).length == 0)) {
    result_1476398660 = (-1);
    break BeforeRet;
    }
    
    var h_1476398722 = (hc_1476398659[hc_1476398659_Idx] & (t_1476398657.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_1476398657.data[chckIndx(h_1476398722, 0, (t_1476398657.data).length - 1)].Field0)) break Label2;
          if (((t_1476398657.data[chckIndx(h_1476398722, 0, (t_1476398657.data).length - 1)].Field0 == hc_1476398659[hc_1476398659_Idx]) && eqStrings(t_1476398657.data[chckIndx(h_1476398722, 0, (t_1476398657.data).length - 1)].Field1, key_1476398658))) {
          result_1476398660 = h_1476398722;
          break BeforeRet;
          }
          
          h_1476398722 = nextTry_1627389986(h_1476398722, (t_1476398657.data).length - 1);
        }
    };
    result_1476398660 = subInt((-1), h_1476398722);
  };

  return result_1476398660;

}

function mustRehash_1476399019(t_1476399021) {
  var result_1476399022 = false;

    if (!((t_1476399021.counter < (t_1476399021.data).length))) {
    failedAssertImpl_268435541([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1476399022 = ((mulInt((t_1476399021.data).length, 2) < mulInt(t_1476399021.counter, 3)) || (subInt((t_1476399021.data).length, t_1476399021.counter) < 4));

  return result_1476399022;

}

function rawInsert_1476399528(t_1476399532, data_1476399533, data_1476399533_Idx, key_1476399534, val_1476399535, hc_1476399536, h_1476399537) {
    data_1476399533[data_1476399533_Idx][chckIndx(h_1476399537, 0, (data_1476399533[data_1476399533_Idx]).length - 1)].Field1 = nimCopy(null, key_1476399534, NTI33554449);
    data_1476399533[data_1476399533_Idx][chckIndx(h_1476399537, 0, (data_1476399533[data_1476399533_Idx]).length - 1)].Field2 = nimCopy(data_1476399533[data_1476399533_Idx][chckIndx(h_1476399537, 0, (data_1476399533[data_1476399533_Idx]).length - 1)].Field2, val_1476399535, NTI1593835651);
    data_1476399533[data_1476399533_Idx][chckIndx(h_1476399537, 0, (data_1476399533[data_1476399533_Idx]).length - 1)].Field0 = hc_1476399536;

  
}

function enlarge_1476399207(t_1476399210) {
    var n_1476399213 = [];
    n_1476399213 = new Array(chckRange(mulInt((t_1476399210.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1476399210.data).length, 2), 0, 2147483647) ; ++i) { n_1476399213[i] = {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}; }    var Temporary1 = t_1476399210.data; t_1476399210.data = n_1476399213; n_1476399213 = Temporary1;    Label2: {
      var i_1476399288 = 0;
      var colontmp__587203737 = 0;
      colontmp__587203737 = (n_1476399213).length - 1;
      var res_587203738 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_587203738 <= colontmp__587203737)) break Label4;
            i_1476399288 = res_587203738;
            var eh_1476399346 = n_1476399213[chckIndx(i_1476399288, 0, (n_1476399213).length - 1)].Field0;
            if (isFilled_1627389983(eh_1476399346)) {
            var j_1476399350 = (eh_1476399346 & (t_1476399210.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1627389983(t_1476399210.data[chckIndx(j_1476399350, 0, (t_1476399210.data).length - 1)].Field0)) break Label6;
                  j_1476399350 = nextTry_1627389986(j_1476399350, (t_1476399210.data).length - 1);
                }
            };
            rawInsert_1476399528(t_1476399210, t_1476399210, "data", n_1476399213[chckIndx(i_1476399288, 0, (n_1476399213).length - 1)].Field1, n_1476399213[chckIndx(i_1476399288, 0, (n_1476399213).length - 1)].Field2, eh_1476399346, j_1476399350);
            }
            
            res_587203738 = addInt(res_587203738, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1476399709(t_1476399712, key_1476399713, hc_1476399714) {
  var result_1476399715 = 0;

  BeforeRet: {
    if (((t_1476399712.data).length == 0)) {
    result_1476399715 = (-1);
    break BeforeRet;
    }
    
    var h_1476399777 = (hc_1476399714 & (t_1476399712.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_1476399712.data[chckIndx(h_1476399777, 0, (t_1476399712.data).length - 1)].Field0)) break Label2;
          if (((t_1476399712.data[chckIndx(h_1476399777, 0, (t_1476399712.data).length - 1)].Field0 == hc_1476399714) && eqStrings(t_1476399712.data[chckIndx(h_1476399777, 0, (t_1476399712.data).length - 1)].Field1, key_1476399713))) {
          result_1476399715 = h_1476399777;
          break BeforeRet;
          }
          
          h_1476399777 = nextTry_1627389986(h_1476399777, (t_1476399712.data).length - 1);
        }
    };
    result_1476399715 = subInt((-1), h_1476399777);
  };

  return result_1476399715;

}

function HEX5BHEX5DHEX3D_1476398582(t_1476398585, key_1476398586, val_1476398587) {
    if (((t_1476398585.data).length == 0)) {
    var correctSizeHEX60gensym127_1476398648 = slotsNeeded_1627389994(32);
    t_1476398585.counter = 0;
    t_1476398585.data = new Array(chckRange(correctSizeHEX60gensym127_1476398648, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym127_1476398648, 0, 2147483647) ; ++i) { t_1476398585.data[i] = {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}; }    }
    
    var hc_1476398653 = [0];
    var index_1476398897 = rawGet_1476398654(t_1476398585, key_1476398586, hc_1476398653, 0);
    if ((0 <= index_1476398897)) {
    t_1476398585.data[chckIndx(index_1476398897, 0, (t_1476398585.data).length - 1)].Field2 = nimCopy(t_1476398585.data[chckIndx(index_1476398897, 0, (t_1476398585.data).length - 1)].Field2, val_1476398587, NTI1593835651);
    }
    else {
      if (((t_1476398585.data).length == 0)) {
      var correctSizeHEX60gensym132_1476399014 = slotsNeeded_1627389994(32);
      t_1476398585.counter = 0;
      t_1476398585.data = new Array(chckRange(correctSizeHEX60gensym132_1476399014, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym132_1476399014, 0, 2147483647) ; ++i) { t_1476398585.data[i] = {Field0: 0, Field1: [], Field2: {Field0: [], Field1: []}}; }      }
      
      if (mustRehash_1476399019(t_1476398585)) {
      enlarge_1476399207(t_1476398585);
      index_1476398897 = rawGetKnownHC_1476399709(t_1476398585, key_1476398586, hc_1476398653[0]);
      }
      
      index_1476398897 = subInt((-1), index_1476398897);
      rawInsert_1476399528(t_1476398585, t_1476398585, "data", key_1476398586, val_1476398587, hc_1476398653[0], index_1476398897);
      t_1476398585.counter = addInt(t_1476398585.counter, 1);
    }
    

  
}

function nsuSplitWhitespace(s_754975417, maxsplit_754975418) {
  var result_754975419 = [];

    result_754975419 = nimCopy(null, [], NTI754975255);
    Label1: {
      var xHEX60gensym74_754975425 = [];
      var lastHEX60gensym59_2181038138 = 0;
      var splitsHEX60gensym59_2181038139 = maxsplit_754975418;
      if (false) {
      failedAssertImpl_268435541([115,116,114,117,116,105,108,115,46,110,105,109,40,52,48,53,44,32,57,41,32,96,110,111,116,32,40,39,92,120,48,48,39,32,105,110,32,87,104,105,116,101,115,112,97,99,101,41,96,32]);
      }
      
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym59_2181038138 < (s_754975417).length)) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym59_2181038138 < (s_754975417).length) && (ConstSet375[s_754975417[chckIndx(lastHEX60gensym59_2181038138, 0, (s_754975417).length - 1)]] != undefined))) break Label5;
                  lastHEX60gensym59_2181038138 = addInt(lastHEX60gensym59_2181038138, 1);
                }
            };
            var firstHEX60gensym59_2181038142 = lastHEX60gensym59_2181038138;
            Label6: {
                Label7: while (true) {
                if (!((lastHEX60gensym59_2181038138 < (s_754975417).length) && !((ConstSet376[s_754975417[chckIndx(lastHEX60gensym59_2181038138, 0, (s_754975417).length - 1)]] != undefined)))) break Label7;
                  lastHEX60gensym59_2181038138 = addInt(lastHEX60gensym59_2181038138, 1);
                }
            };
            if ((firstHEX60gensym59_2181038142 <= subInt(lastHEX60gensym59_2181038138, 1))) {
            if ((splitsHEX60gensym59_2181038139 == 0)) {
            lastHEX60gensym59_2181038138 = (s_754975417).length;
            }
            
            xHEX60gensym74_754975425 = substr_33558079(s_754975417, firstHEX60gensym59_2181038142, subInt(lastHEX60gensym59_2181038138, 1));
            var Temporary8 = nimCopy(null, xHEX60gensym74_754975425, NTI33554449);
            result_754975419.push(Temporary8);;
            if ((splitsHEX60gensym59_2181038139 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym59_2181038139 = subInt(splitsHEX60gensym59_2181038139, 1);
            }
            
          }
      };
    };

  return result_754975419;

}

function initTable_1476400354(initialSize_1476400357) {
  var result_1476400358 = ({data: [], counter: 0});

    var correctSizeHEX60gensym158_1476400360 = slotsNeeded_1627389994(chckRange(initialSize_1476400357, 0, 2147483647));
    result_1476400358.counter = 0;
    result_1476400358.data = new Array(chckRange(correctSizeHEX60gensym158_1476400360, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym158_1476400360, 0, 2147483647) ; ++i) { result_1476400358.data[i] = {Field0: 0, Field1: [], Field2: ({body: [null, 0], slice: ({a: 0, b: 0})})}; }
  return result_1476400358;

}

function mustRehash_1476400622(t_1476400624) {
  var result_1476400625 = false;

    if (!((t_1476400624.counter < (t_1476400624.data).length))) {
    failedAssertImpl_268435541([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1476400625 = ((mulInt((t_1476400624.data).length, 2) < mulInt(t_1476400624.counter, 3)) || (subInt((t_1476400624.data).length, t_1476400624.counter) < 4));

  return result_1476400625;

}

function rawInsert_1476401131(t_1476401135, data_1476401136, data_1476401136_Idx, key_1476401137, val_1476401138, hc_1476401139, h_1476401140) {
    data_1476401136[data_1476401136_Idx][chckIndx(h_1476401140, 0, (data_1476401136[data_1476401136_Idx]).length - 1)].Field1 = nimCopy(null, key_1476401137, NTI33554449);
    data_1476401136[data_1476401136_Idx][chckIndx(h_1476401140, 0, (data_1476401136[data_1476401136_Idx]).length - 1)].Field2 = nimCopy(data_1476401136[data_1476401136_Idx][chckIndx(h_1476401140, 0, (data_1476401136[data_1476401136_Idx]).length - 1)].Field2, val_1476401138, NTI1560281091);
    data_1476401136[data_1476401136_Idx][chckIndx(h_1476401140, 0, (data_1476401136[data_1476401136_Idx]).length - 1)].Field0 = hc_1476401139;

  
}

function enlarge_1476400810(t_1476400813) {
    var n_1476400816 = [];
    n_1476400816 = new Array(chckRange(mulInt((t_1476400813.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1476400813.data).length, 2), 0, 2147483647) ; ++i) { n_1476400816[i] = {Field0: 0, Field1: [], Field2: ({body: [null, 0], slice: ({a: 0, b: 0})})}; }    var Temporary1 = t_1476400813.data; t_1476400813.data = n_1476400816; n_1476400816 = Temporary1;    Label2: {
      var i_1476400891 = 0;
      var colontmp__587203747 = 0;
      colontmp__587203747 = (n_1476400816).length - 1;
      var res_587203748 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_587203748 <= colontmp__587203747)) break Label4;
            i_1476400891 = res_587203748;
            var eh_1476400949 = n_1476400816[chckIndx(i_1476400891, 0, (n_1476400816).length - 1)].Field0;
            if (isFilled_1627389983(eh_1476400949)) {
            var j_1476400953 = (eh_1476400949 & (t_1476400813.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1627389983(t_1476400813.data[chckIndx(j_1476400953, 0, (t_1476400813.data).length - 1)].Field0)) break Label6;
                  j_1476400953 = nextTry_1627389986(j_1476400953, (t_1476400813.data).length - 1);
                }
            };
            rawInsert_1476401131(t_1476400813, t_1476400813, "data", n_1476400816[chckIndx(i_1476400891, 0, (n_1476400816).length - 1)].Field1, n_1476400816[chckIndx(i_1476400891, 0, (n_1476400816).length - 1)].Field2, eh_1476400949, j_1476400953);
            }
            
            res_587203748 = addInt(res_587203748, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1476401312(t_1476401315, key_1476401316, hc_1476401317) {
  var result_1476401318 = 0;

  BeforeRet: {
    if (((t_1476401315.data).length == 0)) {
    result_1476401318 = (-1);
    break BeforeRet;
    }
    
    var h_1476401380 = (hc_1476401317 & (t_1476401315.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_1476401315.data[chckIndx(h_1476401380, 0, (t_1476401315.data).length - 1)].Field0)) break Label2;
          if (((t_1476401315.data[chckIndx(h_1476401380, 0, (t_1476401315.data).length - 1)].Field0 == hc_1476401317) && eqStrings(t_1476401315.data[chckIndx(h_1476401380, 0, (t_1476401315.data).length - 1)].Field1, key_1476401316))) {
          result_1476401318 = h_1476401380;
          break BeforeRet;
          }
          
          h_1476401380 = nextTry_1627389986(h_1476401380, (t_1476401315.data).length - 1);
        }
    };
    result_1476401318 = subInt((-1), h_1476401380);
  };

  return result_1476401318;

}

function HEX5BHEX5DHEX3D_1476400423(t_1476400426, key_1476400427, val_1476400428) {
    if (((t_1476400426.data).length == 0)) {
    var correctSizeHEX60gensym161_1476400488 = slotsNeeded_1627389994(32);
    t_1476400426.counter = 0;
    t_1476400426.data = new Array(chckRange(correctSizeHEX60gensym161_1476400488, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym161_1476400488, 0, 2147483647) ; ++i) { t_1476400426.data[i] = {Field0: 0, Field1: [], Field2: ({body: [null, 0], slice: ({a: 0, b: 0})})}; }    }
    
    var hc_1476400493 = [0];
    var index_1476400500 = rawGet_1476396556(t_1476400426, key_1476400427, hc_1476400493, 0);
    if ((0 <= index_1476400500)) {
    t_1476400426.data[chckIndx(index_1476400500, 0, (t_1476400426.data).length - 1)].Field2 = nimCopy(t_1476400426.data[chckIndx(index_1476400500, 0, (t_1476400426.data).length - 1)].Field2, val_1476400428, NTI1560281091);
    }
    else {
      if (((t_1476400426.data).length == 0)) {
      var correctSizeHEX60gensym164_1476400617 = slotsNeeded_1627389994(32);
      t_1476400426.counter = 0;
      t_1476400426.data = new Array(chckRange(correctSizeHEX60gensym164_1476400617, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_1476400617, 0, 2147483647) ; ++i) { t_1476400426.data[i] = {Field0: 0, Field1: [], Field2: ({body: [null, 0], slice: ({a: 0, b: 0})})}; }      }
      
      if (mustRehash_1476400622(t_1476400426)) {
      enlarge_1476400810(t_1476400426);
      index_1476400500 = rawGetKnownHC_1476401312(t_1476400426, key_1476400427, hc_1476400493[0]);
      }
      
      index_1476400500 = subInt((-1), index_1476400500);
      rawInsert_1476401131(t_1476400426, t_1476400426, "data", key_1476400427, val_1476400428, hc_1476400493[0], index_1476400500);
      t_1476400426.counter = addInt(t_1476400426.counter, 1);
    }
    

  
}

function toTable_1476400349(pairs_1476400352) {
  var result_1476400353 = [({data: [], counter: 0})];

    result_1476400353[0] = nimCopy(result_1476400353[0], initTable_1476400354((pairs_1476400352).length), NTI1593835581);
    Label1: {
      var key_1476400381 = [];
      var val_1476400382 = ({body: [null, 0], slice: ({a: 0, b: 0})});
      var i_587203743 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203743 < (pairs_1476400352).length)) break Label3;
            key_1476400381 = pairs_1476400352[chckIndx(i_587203743, 0, (pairs_1476400352).length - 1)]["Field0"];
            val_1476400382 = pairs_1476400352[chckIndx(i_587203743, 0, (pairs_1476400352).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1476400423(result_1476400353[0], key_1476400381, val_1476400382);
            i_587203743 = addInt(i_587203743, 1);
          }
      };
    };

  return result_1476400353[0];

}

function zip_1476400292(s1_1476400295, s2_1476400296) {
  var result_1476400297 = [];

    var mHEX60gensym8_1476400304 = nimMin((s1_1476400295).length, (s2_1476400296).length);
    result_1476400297 = new Array(chckRange(mHEX60gensym8_1476400304, 0, 2147483647)); for (var i = 0 ; i < chckRange(mHEX60gensym8_1476400304, 0, 2147483647) ; ++i) { result_1476400297[i] = {Field0: [], Field1: ({body: [null, 0], slice: ({a: 0, b: 0})})}; }    Label1: {
      var iHEX60gensym8_1476400313 = 0;
      var i_587203754 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203754 < mHEX60gensym8_1476400304)) break Label3;
            iHEX60gensym8_1476400313 = i_587203754;
            var colontmp__587203752 = nimCopy(null, s1_1476400295[chckIndx(iHEX60gensym8_1476400313, 0, (s1_1476400295).length - 1)], NTI33554449);
            var colontmp__587203753 = nimCopy(null, s2_1476400296[chckIndx(iHEX60gensym8_1476400313, 0, (s2_1476400296).length - 1)], NTI1560281091);
            result_1476400297[chckIndx(iHEX60gensym8_1476400313, 0, (result_1476400297).length - 1)] = nimCopy(result_1476400297[chckIndx(iHEX60gensym8_1476400313, 0, (result_1476400297).length - 1)], {Field0: nimCopy(null, colontmp__587203752, NTI33554449), Field1: nimCopy(null, colontmp__587203753, NTI1560281091)}, NTI1476398479);
            i_587203754 = addInt(i_587203754, 1);
          }
      };
    };

  return result_1476400297;

}

function HEX2A_1593835743(typ_1593835744) {
  var result_1593835745 = ({kind: 0, base: 0});

    result_1593835745.kind = 2;
    result_1593835745.base = typ_1593835744;

  return result_1593835745;

}

function map_2248147140(s_2248147143, op_2248147145) {
  var result_2248147146 = [];

    result_2248147146 = new Array(chckRange((s_2248147143).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2248147143).length, 0, 2147483647) ; ++i) { result_2248147146[i] = []; }    Label1: {
      var i_2248147161 = 0;
      var colontmp__587203757 = 0;
      colontmp__587203757 = (s_2248147143).length;
      var i_587203758 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203758 < colontmp__587203757)) break Label3;
            i_2248147161 = i_587203758;
            result_2248147146[chckIndx(i_2248147161, 0, (result_2248147146).length - 1)] = nimCopy(null, op_2248147145(s_2248147143[chckIndx(i_2248147161, 0, (s_2248147143).length - 1)]), NTI33554449);
            i_587203758 = addInt(i_587203758, 1);
          }
      };
    };

  return result_2248147146;

}

function to_2248147113(val_2248147116) {
    var Temporary1;
    
function HEX3Aanonymous_2248147119(x_2248147131) {
      var result_2248147134 = [];

        result_2248147134 = nimCopy(null, to_2181038173(x_2248147131), NTI33554449);

      return result_2248147134;

    }

  var result_2248147118 = [];

    var Temporary1 = val_2248147116;
    if (ConstSet377[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_2248147118 = nimCopy(null, map_2248147140(Temporary1.list, HEX3Aanonymous_2248147119), NTI2248147141);

  return result_2248147118;

}

function nsuSplitChar(s_754975265, sep_754975266, maxsplit_754975267) {
  var result_754975268 = [];

    result_754975268 = nimCopy(null, [], NTI754975093);
    Label1: {
      var xHEX60gensym67_754975274 = [];
      var lastHEX60gensym34_587203776 = 0;
      var splitsHEX60gensym34_587203777 = maxsplit_754975267;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym34_587203776 <= (s_754975265).length)) break Label3;
            var firstHEX60gensym34_587203779 = lastHEX60gensym34_587203776;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym34_587203776 < (s_754975265).length) && !((s_754975265[chckIndx(lastHEX60gensym34_587203776, 0, (s_754975265).length - 1)] == sep_754975266)))) break Label5;
                  lastHEX60gensym34_587203776 = addInt(lastHEX60gensym34_587203776, 1);
                }
            };
            if ((splitsHEX60gensym34_587203777 == 0)) {
            lastHEX60gensym34_587203776 = (s_754975265).length;
            }
            
            xHEX60gensym67_754975274 = substr_33558079(s_754975265, firstHEX60gensym34_587203779, subInt(lastHEX60gensym34_587203776, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym67_754975274, NTI33554449);
            result_754975268.push(Temporary6);;
            if ((splitsHEX60gensym34_587203777 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym34_587203777 = subInt(splitsHEX60gensym34_587203777, 1);
            lastHEX60gensym34_587203776 = addInt(lastHEX60gensym34_587203776, 1);
          }
      };
    };

  return result_754975268;

}

function parseFloatNative_33557428(a_33557429) {
  var result_33557430 = 0.0;

    var str_33557431 = [];
    Label1: {
      var x_33557445 = 0;
      var i_587203789 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203789 < (a_33557429).length)) break Label3;
            x_33557445 = a_33557429[i_587203789];
            addChar(str_33557431, x_33557445);;
            i_587203789 += 1;
          }
      };
    };
    var cstr_33557446 = toJSStr(str_33557431);
      result_33557430 = Number(cstr_33557446);
  

  return result_33557430;

}

function npuParseFloat(s_788529682, number_788529683, number_788529683_Idx) {
  var result_788529684 = 0;

    var bf_788529685 = [0.0];
    result_788529684 = nimParseBiggestFloat(s_788529682, bf_788529685, 0);
    if (!((result_788529684 == 0))) {
    number_788529683[number_788529683_Idx] = bf_788529685[0];
    }
    

  return result_788529684;

}

function parseFloat_788530084(s_788530085, number_788530086, number_788530086_Idx, start_788530087) {
  var result_788530088 = 0;

    result_788530088 = npuParseFloat((s_788530085.slice(start_788530087, (s_788530085).length - 1 + 1)), number_788530086, number_788530086_Idx);

  return result_788530088;

}

function nsuParseFloat(s_754975597) {
  var result_754975598 = [0.0];

    result_754975598[0] = 0.0;
    var L_754975599 = parseFloat_788530084(s_754975597, result_754975598, 0, 0);
    if ((!((L_754975599 == (s_754975597).length)) || (L_754975599 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_754975597 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_754975598[0];

}

function isSome_2231369944(self_2231369946) {
  var result_2231369947 = false;

    result_2231369947 = self_2231369946.has;

  return result_2231369947;

}

function isNone_2231369960(self_2231369962) {
  var result_2231369963 = false;

    result_2231369963 = !(self_2231369962.has);

  return result_2231369963;

}

function HEX3DHEX3D_2231369934(a_2231369936, b_2231369937) {
  var result_2231369938 = false;

    result_2231369938 = (((isSome_2231369944(a_2231369936) && isSome_2231369944(b_2231369937)) && (a_2231369936.val == b_2231369937.val)) || (isNone_2231369960(a_2231369936) && isNone_2231369960(b_2231369937)));

  return result_2231369938;

}

function some_2231369841(val_2231369843) {
  var result_2231369844 = ({val: false, has: false});

    result_2231369844.has = true;
    result_2231369844.val = val_2231369843;

  return result_2231369844;

}

function none_2231369862() {
  var result_2231369869 = ({val: false, has: false});

  return result_2231369869;

}

function map_2231369823(self_2231369826, callback_2231369828) {
    var Temporary1;

  var result_2231369833 = ({val: false, has: false});

    if (isSome_2214592897(self_2231369826)) {
    Temporary1 = some_2231369841(callback_2231369828(self_2231369826.val));
    }
    else {
    Temporary1 = none_2231369862();
    }
    
    result_2231369833 = nimCopy(result_2231369833, Temporary1, NTI2231369825);

  return result_2231369833;

}

function nimFloatToString_402653337(a_402653338) {
  var result_402653339 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_402653338))
      result_402653339 = a_402653338 === 0 && 1 / a_402653338 < 0 ? "-0.0" : a_402653338+".0"
    else {
      result_402653339 = a_402653338+""
      if(nimOnlyDigitsOrMinus(result_402653339)){
        result_402653339 = a_402653338+".0"
      }
    }
  

  return result_402653339;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_402653337(x_33557566));

  
}

function HEX24_33557559(x_33557561) {
  var result_33557562 = [[]];

    addFloat_33557563(result_33557562, 0, x_33557561);

  return result_33557562[0];

}

function nsuformatBiggestFloat(f_754976835, format_754976836, precision_754976837, decimalSep_754976838) {
  var result_754976839 = [];

    var precision_754976840 = precision_754976837;
    if ((precision_754976840 == (-1))) {
    precision_754976840 = 6;
    }
    
    var res_754976841 = null;
    switch (format_754976836) {
    case 0:
      res_754976841 = f_754976835.toString();
      break;
    case 1:
      res_754976841 = f_754976835.toFixed(precision_754976840);
      break;
    case 2:
      res_754976841 = f_754976835.toExponential(precision_754976840);
      break;
    }
    result_754976839 = nimCopy(null, cstrToNimstr(res_754976841), NTI33554449);
    if (((1.0 / f_754976835) == -Infinity)) {
    result_754976839 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_754976841) || []), NTI33554449);
    }
    
    Label1: {
      var i_754976846 = 0;
      var colontmp__587203792 = 0;
      colontmp__587203792 = (result_754976839).length;
      var i_587203793 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203793 < colontmp__587203792)) break Label3;
            i_754976846 = i_587203793;
            if ((ConstSet386[result_754976839[chckIndx(i_754976846, 0, (result_754976839).length - 1)]] != undefined)) {
            result_754976839[chckIndx(i_754976846, 0, (result_754976839).length - 1)] = decimalSep_754976838;
            }
            
            i_587203793 = addInt(i_587203793, 1);
          }
      };
    };

  return result_754976839;

}

function insert_33558003(x_33558004, x_33558004_Idx, item_33558005, i_33558006) {
    var Temporary1;

    var xl_33558007 = (x_33558004[x_33558004_Idx]).length;
    if (x_33558004[x_33558004_Idx].length < (Temporary1 = chckRange(addInt(xl_33558007, (item_33558005).length), 0, 2147483647), Temporary1)) { for (var i = x_33558004[x_33558004_Idx].length; i < Temporary1; ++i) x_33558004[x_33558004_Idx].push(0); }
         else {x_33558004[x_33558004_Idx].length = Temporary1; };
    var j_33558008 = subInt(xl_33558007, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33558006 <= j_33558008)) break Label3;
          x_33558004[x_33558004_Idx][chckIndx(addInt(j_33558008, (item_33558005).length), 0, (x_33558004[x_33558004_Idx]).length - 1)] = x_33558004[x_33558004_Idx][chckIndx(j_33558008, 0, (x_33558004[x_33558004_Idx]).length - 1)];
          j_33558008 = subInt(j_33558008, 1);
        }
    };
    j_33558008 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33558008 < (item_33558005).length)) break Label5;
          x_33558004[x_33558004_Idx][chckIndx(addInt(j_33558008, i_33558006), 0, (x_33558004[x_33558004_Idx]).length - 1)] = item_33558005[chckIndx(j_33558008, 0, (item_33558005).length - 1)];
          j_33558008 = addInt(j_33558008, 1);
        }
    };

  
}

function nsuToUpperAsciiChar(c_754974824) {
  var result_754974825 = 0;

    if ((ConstSet388[c_754974824] != undefined)) {
    result_754974825 = (c_754974824 ^ 32);
    }
    else {
      result_754974825 = c_754974824;
    }
    

  return result_754974825;

}

function nsuToUpperAsciiStr(s_754974831) {
  var result_754974832 = [];

    result_754974832 = nimCopy(null, mnewString(chckRange((s_754974831).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_754974838 = 0;
      var colontmp__587203798 = 0;
      colontmp__587203798 = subInt((s_754974831).length, 1);
      var res_587203799 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_587203799 <= colontmp__587203798)) break Label3;
            iHEX60gensym11_754974838 = res_587203799;
            result_754974832[chckIndx(iHEX60gensym11_754974838, 0, (result_754974832).length - 1)] = nsuToUpperAsciiChar(s_754974831[chckIndx(iHEX60gensym11_754974838, 0, (s_754974831).length - 1)]);
            res_587203799 = addInt(res_587203799, 1);
          }
      };
    };

  return result_754974832;

}

function formatValue_2231370047(result_2231370049, result_2231370049_Idx, value_2231370050, specifier_2231370051) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2231370051).length == 0)) {
    result_2231370049[result_2231370049_Idx].push.apply(result_2231370049[result_2231370049_Idx], HEX24_33557559(value_2231370050));;
    break BeforeRet;
    }
    
    var spec_2231370055 = parseStandardFormatSpecifier_1442840634(specifier_2231370051, 0, false);
    var fmode_2231370056 = 0;
    switch (spec_2231370055.typ) {
    case 101:
    case 69:
      fmode_2231370056 = 2;
      break;
    case 102:
    case 70:
      fmode_2231370056 = 1;
      break;
    case 103:
    case 71:
      fmode_2231370056 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2231370055.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2231370058 = [nsuformatBiggestFloat(value_2231370050, fmode_2231370056, chckRange(spec_2231370055.precision, (-1), 32), 46)];
    var sign_2231370059 = false;
    if ((0.0 <= value_2231370050)) {
    if (!((spec_2231370055.sign == 45))) {
    sign_2231370059 = true;
    if ((value_2231370050 == 0.0)) {
    if (((1.0 / value_2231370050) == Infinity)) {
    insert_33558003(f_2231370058, 0, nimCharToStr(spec_2231370055.sign), 0);
    }
    
    }
    else {
    insert_33558003(f_2231370058, 0, nimCharToStr(spec_2231370055.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2231370059 = true;
    }
    
    if (spec_2231370055.padWithZero) {
    var signStr_2231370060 = [];
    if (sign_2231370059) {
    signStr_2231370060 = nimCopy(null, nimCharToStr(f_2231370058[0][chckIndx(0, 0, (f_2231370058[0]).length - 1)]), NTI33554449);
    f_2231370058[0] = nimCopy(null, HEX5BHEX5D_754976027(f_2231370058[0], HEX2EHEX2E_973078632(1, 1)), NTI33554449);
    }
    
    var toFill_2231370082 = subInt(subInt(spec_2231370055.minimumWidth, (f_2231370058[0]).length), (sign_2231370059 ? 1 : 0));
    if ((0 < toFill_2231370082)) {
    f_2231370058[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2231370082, 0, 2147483647)) || []).concat(f_2231370058[0] || []), NTI33554449);
    }
    
    if (sign_2231370059) {
    f_2231370058[0] = nimCopy(null, (signStr_2231370060 || []).concat(f_2231370058[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2231370055.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2231370055.align;
    }
    
    var align_2231370083 = Temporary1;
    var res_2231370084 = alignString_1442840596(f_2231370058[0], spec_2231370055.minimumWidth, align_2231370083, spec_2231370055.fill);
    if ((ConstSet387[spec_2231370055.typ] != undefined)) {
    result_2231370049[result_2231370049_Idx].push.apply(result_2231370049[result_2231370049_Idx], nsuToUpperAsciiStr(res_2231370084));;
    }
    else {
    result_2231370049[result_2231370049_Idx].push.apply(result_2231370049[result_2231370049_Idx], res_2231370084);;
    }
    
  };

  
}

function drawCommands_2231369736(doc_2231369737) {

function parseFloat_2231369749(x_2231369750) {
    var Temporary1;

  var result_2231369751 = 0.0;

++excHandler;
    try {
    Temporary1 = nsuParseFloat(x_2231369750);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    Label3: {
      var fmtRes_2231369755 = [mnewString(0)];
      fmtRes_2231369755[0].push.apply(fmtRes_2231369755[0], [73,110,118,97,108,105,100,32,110,117,109,98,101,114,58,32]);;
      formatValue_1442840747(fmtRes_2231369755, 0, x_2231369750, []);
    };
    raiseException({message: nimCopy(null, fmtRes_2231369755[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_2231369751 = Temporary1;

  return result_2231369751;

}

function parseXY_2231369756(xy_2231369757) {
  var result_2231369758 = {Field0: 0.0, Field1: 0.0};

++excHandler;
    try {
    var xy_2231369759 = nsuSplitChar(xy_2231369757, 44, (-1));
    result_2231369758.Field0 = parseFloat_2231369749(xy_2231369759[chckIndx(0, 0, (xy_2231369759).length - 1)]);
    result_2231369758.Field1 = parseFloat_2231369749(xy_2231369759[chckIndx(1, 0, (xy_2231369759).length - 1)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746)||isObj(lastJSError.m_type, NTI134217749))) {
    Label2: {
      var fmtRes_2231369763 = [mnewString(0)];
      fmtRes_2231369763[0].push.apply(fmtRes_2231369763[0], [73,110,118,97,108,105,100,32,99,111,111,114,100,105,110,97,116,101,115,58,32]);;
      formatValue_1442840747(fmtRes_2231369763, 0, xy_2231369757, []);
    };
    raiseException({message: nimCopy(null, fmtRes_2231369763[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2231369758;

}

function CarCmd_2231369766(a_2231369767, r_2231369768, width_2231369770, color_2231369772, fill_2231369774) {
    
function nonEmpty_2231369778(s_2231369779) {
      var result_2231369780 = false;

        result_2231369780 = !(eqStrings(s_2231369779, []));

      return result_2231369780;

    }
    var Temporary1;
    var Temporary2;

  var result_2231369775 = [];

    var a_2231369776 = parseXY_2231369756(a_2231369767);
    var r_2231369777 = parseFloat_2231369749(r_2231369768);
    if (HEX3DHEX3D_2231369934(map_2231369823(fill_2231369774, nonEmpty_2231369778), some_2231369841(true))) {
    Temporary1 = [48];
    }
    else {
    Temporary1 = [51];
    }
    
    var width_2231369988 = get_2231369976(filter_2231369786(width_2231369770, nonEmpty_2231369778), Temporary1);
    var color_2231370015 = get_2231369976(filter_2231369786(color_2231369772, nonEmpty_2231369778), [99,117,114,114,101,110,116,67,111,108,111,114]);
    var fill_2231370042 = get_2231369976(filter_2231369786(fill_2231369774, nonEmpty_2231369778), [116,114,97,110,115,112,97,114,101,110,116]);
    switch (doc_2231369737.target) {
    case 0:
      Label3: {
        var fmtRes_2231370046 = [mnewString(0)];
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [60,99,105,114,99,108,101,32,99,120,61]);;
        formatValue_2231370047(fmtRes_2231370046, 0, (a_2231369776.Field0 + r_2231369777), []);
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [32,99,121,61]);;
        formatValue_2231370047(fmtRes_2231370046, 0, (a_2231369776.Field1 + r_2231369777), []);
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [32,114,61]);;
        formatValue_2231370047(fmtRes_2231370046, 0, r_2231369777, []);
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231370046, 0, width_2231369988, []);
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231370046, 0, color_2231370015, []);
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [34,32,102,105,108,108,61,34]);;
        formatValue_1442840747(fmtRes_2231370046, 0, fill_2231370042, []);
        fmtRes_2231370046[0].push.apply(fmtRes_2231370046[0], [34,32,47,62]);;
      };
      Temporary2 = fmtRes_2231370046[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231369775 = nimCopy(null, Temporary2, NTI33554449);

  return result_2231369775;

}
    
function HEX3Aanonymous_2231370168(arg_2231370169) {
      var result_2231370170 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [67,97,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231369765 = expandArguments_2197815314(doc_2231369737, [67,97,114], arg_2231370169, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231370170 = nimCopy(result_2231370170, {typ: 1, str: CarCmd_2231369766(to_2181038173(vals_2231369765[chckIndx(0, 0, (vals_2231369765).length - 1)]), to_2181038173(vals_2231369765[chckIndx(1, 0, (vals_2231369765).length - 1)]), to_2214592966(vals_2231369765[chckIndx(2, 0, (vals_2231369765).length - 1)]), to_2214592966(vals_2231369765[chckIndx(3, 0, (vals_2231369765).length - 1)]), to_2214592966(vals_2231369765[chckIndx(4, 0, (vals_2231369765).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231370170;

    }

function CcrCmd_2231370276(c_2231370277, r_2231370278, width_2231370280, color_2231370282, fill_2231370284) {
    
function nonEmpty_2231370288(s_2231370289) {
      var result_2231370290 = false;

        result_2231370290 = !(eqStrings(s_2231370289, []));

      return result_2231370290;

    }
    var Temporary1;
    var Temporary2;

  var result_2231370285 = [];

    var c_2231370286 = parseXY_2231369756(c_2231370277);
    var r_2231370287 = parseFloat_2231369749(r_2231370278);
    if (HEX3DHEX3D_2231369934(map_2231369823(fill_2231370284, nonEmpty_2231370288), some_2231369841(true))) {
    Temporary1 = [48];
    }
    else {
    Temporary1 = [51];
    }
    
    var width_2231370383 = get_2231369976(filter_2231369786(width_2231370280, nonEmpty_2231370288), Temporary1);
    var color_2231370410 = get_2231369976(filter_2231369786(color_2231370282, nonEmpty_2231370288), [99,117,114,114,101,110,116,67,111,108,111,114]);
    var fill_2231370437 = get_2231369976(filter_2231369786(fill_2231370284, nonEmpty_2231370288), [116,114,97,110,115,112,97,114,101,110,116]);
    switch (doc_2231369737.target) {
    case 0:
      Label3: {
        var fmtRes_2231370441 = [mnewString(0)];
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [60,99,105,114,99,108,101,32,99,120,61]);;
        formatValue_2231370047(fmtRes_2231370441, 0, c_2231370286.Field0, []);
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [32,99,121,61]);;
        formatValue_2231370047(fmtRes_2231370441, 0, c_2231370286.Field1, []);
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [32,114,61]);;
        formatValue_2231370047(fmtRes_2231370441, 0, r_2231370287, []);
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231370441, 0, width_2231370383, []);
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231370441, 0, color_2231370410, []);
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [34,32,102,105,108,108,61,34]);;
        formatValue_1442840747(fmtRes_2231370441, 0, fill_2231370437, []);
        fmtRes_2231370441[0].push.apply(fmtRes_2231370441[0], [34,32,47,62]);;
      };
      Temporary2 = fmtRes_2231370441[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231370285 = nimCopy(null, Temporary2, NTI33554449);

  return result_2231370285;

}
    
function HEX3Aanonymous_2231370462(arg_2231370463) {
      var result_2231370464 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [67,99,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231370275 = expandArguments_2197815314(doc_2231369737, [67,99,114], arg_2231370463, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231370464 = nimCopy(result_2231370464, {typ: 1, str: CcrCmd_2231370276(to_2181038173(vals_2231370275[chckIndx(0, 0, (vals_2231370275).length - 1)]), to_2181038173(vals_2231370275[chckIndx(1, 0, (vals_2231370275).length - 1)]), to_2214592966(vals_2231370275[chckIndx(2, 0, (vals_2231370275).length - 1)]), to_2214592966(vals_2231370275[chckIndx(3, 0, (vals_2231370275).length - 1)]), to_2214592966(vals_2231370275[chckIndx(4, 0, (vals_2231370275).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231370464;

    }

function LabCmd_2231370554(a_2231370555, b_2231370556, width_2231370558, color_2231370560) {
    
function nonEmpty_2231370564(s_2231370565) {
      var result_2231370566 = false;

        result_2231370566 = !(eqStrings(s_2231370565, []));

      return result_2231370566;

    }
    var Temporary1;

  var result_2231370561 = [];

    var a_2231370562 = parseXY_2231369756(a_2231370555);
    var b_2231370563 = parseXY_2231369756(b_2231370556);
    var width_2231370593 = get_2231369976(filter_2231369786(width_2231370558, nonEmpty_2231370564), [51]);
    var color_2231370620 = get_2231369976(filter_2231369786(color_2231370560, nonEmpty_2231370564), [99,117,114,114,101,110,116,67,111,108,111,114]);
    switch (doc_2231369737.target) {
    case 0:
      Label2: {
        var fmtRes_2231370624 = [mnewString(0)];
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [60,108,105,110,101,32,120,49,61]);;
        formatValue_2231370047(fmtRes_2231370624, 0, a_2231370562.Field0, []);
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [32,121,49,61]);;
        formatValue_2231370047(fmtRes_2231370624, 0, a_2231370562.Field1, []);
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [32,120,50,61]);;
        formatValue_2231370047(fmtRes_2231370624, 0, b_2231370563.Field0, []);
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [32,121,50,61]);;
        formatValue_2231370047(fmtRes_2231370624, 0, b_2231370563.Field1, []);
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231370624, 0, width_2231370593, []);
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231370624, 0, color_2231370620, []);
        fmtRes_2231370624[0].push.apply(fmtRes_2231370624[0], [34,32,47,62]);;
      };
      Temporary1 = fmtRes_2231370624[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231370561 = nimCopy(null, Temporary1, NTI33554449);

  return result_2231370561;

}
    
function HEX3Aanonymous_2231370650(arg_2231370651) {
      var result_2231370652 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [76,97,98]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231370553 = expandArguments_2197815314(doc_2231369737, [76,97,98], arg_2231370651, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231370652 = nimCopy(result_2231370652, {typ: 1, str: LabCmd_2231370554(to_2181038173(vals_2231370553[chckIndx(0, 0, (vals_2231370553).length - 1)]), to_2181038173(vals_2231370553[chckIndx(1, 0, (vals_2231370553).length - 1)]), to_2214592966(vals_2231370553[chckIndx(2, 0, (vals_2231370553).length - 1)]), to_2214592966(vals_2231370553[chckIndx(3, 0, (vals_2231370553).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231370652;

    }

function LauCmd_2231370748(a_2231370749, u_2231370750, width_2231370752, color_2231370754) {
    
function nonEmpty_2231370758(s_2231370759) {
      var result_2231370760 = false;

        result_2231370760 = !(eqStrings(s_2231370759, []));

      return result_2231370760;

    }
    var Temporary1;

  var result_2231370755 = [];

    var a_2231370756 = parseXY_2231369756(a_2231370749);
    var u_2231370757 = parseXY_2231369756(u_2231370750);
    var width_2231370787 = get_2231369976(filter_2231369786(width_2231370752, nonEmpty_2231370758), [51]);
    var color_2231370814 = get_2231369976(filter_2231369786(color_2231370754, nonEmpty_2231370758), [99,117,114,114,101,110,116,67,111,108,111,114]);
    switch (doc_2231369737.target) {
    case 0:
      Label2: {
        var fmtRes_2231370818 = [mnewString(0)];
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [60,108,105,110,101,32,120,49,61]);;
        formatValue_2231370047(fmtRes_2231370818, 0, a_2231370756.Field0, []);
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [32,121,49,61]);;
        formatValue_2231370047(fmtRes_2231370818, 0, a_2231370756.Field1, []);
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [32,120,50,61]);;
        formatValue_2231370047(fmtRes_2231370818, 0, (a_2231370756.Field0 + u_2231370757.Field0), []);
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [32,121,50,61]);;
        formatValue_2231370047(fmtRes_2231370818, 0, (a_2231370756.Field1 + u_2231370757.Field1), []);
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231370818, 0, width_2231370787, []);
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231370818, 0, color_2231370814, []);
        fmtRes_2231370818[0].push.apply(fmtRes_2231370818[0], [34,32,47,62]);;
      };
      Temporary1 = fmtRes_2231370818[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231370755 = nimCopy(null, Temporary1, NTI33554449);

  return result_2231370755;

}
    
function HEX3Aanonymous_2231370844(arg_2231370845) {
      var result_2231370846 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [76,97,117]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231370747 = expandArguments_2197815314(doc_2231369737, [76,97,117], arg_2231370845, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231370846 = nimCopy(result_2231370846, {typ: 1, str: LauCmd_2231370748(to_2181038173(vals_2231370747[chckIndx(0, 0, (vals_2231370747).length - 1)]), to_2181038173(vals_2231370747[chckIndx(1, 0, (vals_2231370747).length - 1)]), to_2214592966(vals_2231370747[chckIndx(2, 0, (vals_2231370747).length - 1)]), to_2214592966(vals_2231370747[chckIndx(3, 0, (vals_2231370747).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231370846;

    }

function LcuCmd_2231370926(c_2231370927, u_2231370928, width_2231370930, color_2231370932) {
    
function nonEmpty_2231370936(s_2231370937) {
      var result_2231370938 = false;

        result_2231370938 = !(eqStrings(s_2231370937, []));

      return result_2231370938;

    }
    var Temporary1;

  var result_2231370933 = [];

    var c_2231370934 = parseXY_2231369756(c_2231370927);
    var u_2231370935 = parseXY_2231369756(u_2231370928);
    var width_2231370965 = get_2231369976(filter_2231369786(width_2231370930, nonEmpty_2231370936), [51]);
    var color_2231370992 = get_2231369976(filter_2231369786(color_2231370932, nonEmpty_2231370936), [99,117,114,114,101,110,116,67,111,108,111,114]);
    switch (doc_2231369737.target) {
    case 0:
      Label2: {
        var fmtRes_2231370996 = [mnewString(0)];
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [60,108,105,110,101,32,120,49,61]);;
        formatValue_2231370047(fmtRes_2231370996, 0, (c_2231370934.Field0 - u_2231370935.Field0), []);
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [32,121,49,61]);;
        formatValue_2231370047(fmtRes_2231370996, 0, (c_2231370934.Field1 - u_2231370935.Field1), []);
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [32,120,50,61]);;
        formatValue_2231370047(fmtRes_2231370996, 0, (c_2231370934.Field0 + u_2231370935.Field0), []);
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [32,121,50,61]);;
        formatValue_2231370047(fmtRes_2231370996, 0, (c_2231370934.Field1 + u_2231370935.Field1), []);
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231370996, 0, width_2231370965, []);
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231370996, 0, color_2231370992, []);
        fmtRes_2231370996[0].push.apply(fmtRes_2231370996[0], [34,32,47,62]);;
      };
      Temporary1 = fmtRes_2231370996[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231370933 = nimCopy(null, Temporary1, NTI33554449);

  return result_2231370933;

}
    
function HEX3Aanonymous_2231371022(arg_2231371023) {
      var result_2231371024 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [76,99,117]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231370925 = expandArguments_2197815314(doc_2231369737, [76,99,117], arg_2231371023, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231371024 = nimCopy(result_2231371024, {typ: 1, str: LcuCmd_2231370926(to_2181038173(vals_2231370925[chckIndx(0, 0, (vals_2231370925).length - 1)]), to_2181038173(vals_2231370925[chckIndx(1, 0, (vals_2231370925).length - 1)]), to_2214592966(vals_2231370925[chckIndx(2, 0, (vals_2231370925).length - 1)]), to_2214592966(vals_2231370925[chckIndx(3, 0, (vals_2231370925).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231371024;

    }

function RabCmd_2231371104(a_2231371105, b_2231371106, width_2231371108, color_2231371110, fill_2231371112) {
    
function nonEmpty_2231371116(s_2231371117) {
      var result_2231371118 = false;

        result_2231371118 = !(eqStrings(s_2231371117, []));

      return result_2231371118;

    }
    var Temporary1;
    var Temporary2;

  var result_2231371113 = [];

    var a_2231371114 = parseXY_2231369756(a_2231371105);
    var b_2231371115 = parseXY_2231369756(b_2231371106);
    if (HEX3DHEX3D_2231369934(map_2231369823(fill_2231371112, nonEmpty_2231371116), some_2231369841(true))) {
    Temporary1 = [48];
    }
    else {
    Temporary1 = [51];
    }
    
    var width_2231371211 = get_2231369976(filter_2231369786(width_2231371108, nonEmpty_2231371116), Temporary1);
    var color_2231371238 = get_2231369976(filter_2231369786(color_2231371110, nonEmpty_2231371116), [99,117,114,114,101,110,116,67,111,108,111,114]);
    var fill_2231371265 = get_2231369976(filter_2231369786(fill_2231371112, nonEmpty_2231371116), [116,114,97,110,115,112,97,114,101,110,116]);
    switch (doc_2231369737.target) {
    case 0:
      Label3: {
        var fmtRes_2231371269 = [mnewString(0)];
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [60,114,101,99,116,32,120,61]);;
        formatValue_2231370047(fmtRes_2231371269, 0, a_2231371114.Field0, []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [32,121,61]);;
        formatValue_2231370047(fmtRes_2231371269, 0, a_2231371114.Field1, []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [32,119,105,100,116,104,61]);;
        formatValue_2231370047(fmtRes_2231371269, 0, (b_2231371115.Field0 - a_2231371114.Field0), []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [32,104,101,105,103,104,116,61]);;
        formatValue_2231370047(fmtRes_2231371269, 0, (b_2231371115.Field1 - a_2231371114.Field1), []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231371269, 0, width_2231371211, []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231371269, 0, color_2231371238, []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [34,32,102,105,108,108,61,34]);;
        formatValue_1442840747(fmtRes_2231371269, 0, fill_2231371265, []);
        fmtRes_2231371269[0].push.apply(fmtRes_2231371269[0], [34,32,47,62]);;
      };
      Temporary2 = fmtRes_2231371269[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231371113 = nimCopy(null, Temporary2, NTI33554449);

  return result_2231371113;

}
    
function HEX3Aanonymous_2231371295(arg_2231371296) {
      var result_2231371297 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [82,97,98]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231371103 = expandArguments_2197815314(doc_2231369737, [82,97,98], arg_2231371296, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231371297 = nimCopy(result_2231371297, {typ: 1, str: RabCmd_2231371104(to_2181038173(vals_2231371103[chckIndx(0, 0, (vals_2231371103).length - 1)]), to_2181038173(vals_2231371103[chckIndx(1, 0, (vals_2231371103).length - 1)]), to_2214592966(vals_2231371103[chckIndx(2, 0, (vals_2231371103).length - 1)]), to_2214592966(vals_2231371103[chckIndx(3, 0, (vals_2231371103).length - 1)]), to_2214592966(vals_2231371103[chckIndx(4, 0, (vals_2231371103).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231371297;

    }

function RauCmd_2231371387(a_2231371388, u_2231371389, width_2231371391, color_2231371393, fill_2231371395) {
    
function nonEmpty_2231371399(s_2231371400) {
      var result_2231371401 = false;

        result_2231371401 = !(eqStrings(s_2231371400, []));

      return result_2231371401;

    }
    var Temporary1;
    var Temporary2;

  var result_2231371396 = [];

    var a_2231371397 = parseXY_2231369756(a_2231371388);
    var u_2231371398 = parseXY_2231369756(u_2231371389);
    if (HEX3DHEX3D_2231369934(map_2231369823(fill_2231371395, nonEmpty_2231371399), some_2231369841(true))) {
    Temporary1 = [48];
    }
    else {
    Temporary1 = [51];
    }
    
    var width_2231371494 = get_2231369976(filter_2231369786(width_2231371391, nonEmpty_2231371399), Temporary1);
    var color_2231371521 = get_2231369976(filter_2231369786(color_2231371393, nonEmpty_2231371399), [99,117,114,114,101,110,116,67,111,108,111,114]);
    var fill_2231371548 = get_2231369976(filter_2231369786(fill_2231371395, nonEmpty_2231371399), [116,114,97,110,115,112,97,114,101,110,116]);
    switch (doc_2231369737.target) {
    case 0:
      Label3: {
        var fmtRes_2231371552 = [mnewString(0)];
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [60,114,101,99,116,32,120,61]);;
        formatValue_2231370047(fmtRes_2231371552, 0, a_2231371397.Field0, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [32,121,61]);;
        formatValue_2231370047(fmtRes_2231371552, 0, a_2231371397.Field1, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [32,119,105,100,116,104,61]);;
        formatValue_2231370047(fmtRes_2231371552, 0, u_2231371398.Field0, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [32,104,101,105,103,104,116,61]);;
        formatValue_2231370047(fmtRes_2231371552, 0, u_2231371398.Field1, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231371552, 0, width_2231371494, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231371552, 0, color_2231371521, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [34,32,102,105,108,108,61,34]);;
        formatValue_1442840747(fmtRes_2231371552, 0, fill_2231371548, []);
        fmtRes_2231371552[0].push.apply(fmtRes_2231371552[0], [34,32,47,62]);;
      };
      Temporary2 = fmtRes_2231371552[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231371396 = nimCopy(null, Temporary2, NTI33554449);

  return result_2231371396;

}
    
function HEX3Aanonymous_2231371578(arg_2231371579) {
      var result_2231371580 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [82,97,117]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231371386 = expandArguments_2197815314(doc_2231369737, [82,97,117], arg_2231371579, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231371580 = nimCopy(result_2231371580, {typ: 1, str: RauCmd_2231371387(to_2181038173(vals_2231371386[chckIndx(0, 0, (vals_2231371386).length - 1)]), to_2181038173(vals_2231371386[chckIndx(1, 0, (vals_2231371386).length - 1)]), to_2214592966(vals_2231371386[chckIndx(2, 0, (vals_2231371386).length - 1)]), to_2214592966(vals_2231371386[chckIndx(3, 0, (vals_2231371386).length - 1)]), to_2214592966(vals_2231371386[chckIndx(4, 0, (vals_2231371386).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231371580;

    }

function RcuCmd_2231371670(c_2231371671, u_2231371672, width_2231371674, color_2231371676, fill_2231371678) {
    
function nonEmpty_2231371682(s_2231371683) {
      var result_2231371684 = false;

        result_2231371684 = !(eqStrings(s_2231371683, []));

      return result_2231371684;

    }
    var Temporary1;
    var Temporary2;

  var result_2231371679 = [];

    var c_2231371680 = parseXY_2231369756(c_2231371671);
    var u_2231371681 = parseXY_2231369756(u_2231371672);
    if (HEX3DHEX3D_2231369934(map_2231369823(fill_2231371678, nonEmpty_2231371682), some_2231369841(true))) {
    Temporary1 = [48];
    }
    else {
    Temporary1 = [51];
    }
    
    var width_2231371777 = get_2231369976(filter_2231369786(width_2231371674, nonEmpty_2231371682), Temporary1);
    var color_2231371804 = get_2231369976(filter_2231369786(color_2231371676, nonEmpty_2231371682), [99,117,114,114,101,110,116,67,111,108,111,114]);
    var fill_2231371831 = get_2231369976(filter_2231369786(fill_2231371678, nonEmpty_2231371682), [116,114,97,110,115,112,97,114,101,110,116]);
    switch (doc_2231369737.target) {
    case 0:
      Label3: {
        var fmtRes_2231371835 = [mnewString(0)];
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [60,114,101,99,116,32,120,61]);;
        formatValue_2231370047(fmtRes_2231371835, 0, (c_2231371680.Field0 - u_2231371681.Field0), []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [32,121,61]);;
        formatValue_2231370047(fmtRes_2231371835, 0, (c_2231371680.Field1 - u_2231371681.Field1), []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [32,119,105,100,116,104,61]);;
        formatValue_2231370047(fmtRes_2231371835, 0, (2.0 * u_2231371681.Field0), []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [32,104,101,105,103,104,116,61]);;
        formatValue_2231370047(fmtRes_2231371835, 0, (2.0 * u_2231371681.Field1), []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [32,115,116,114,111,107,101,45,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_2231371835, 0, width_2231371777, []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [34,32,115,116,114,111,107,101,61,34]);;
        formatValue_1442840747(fmtRes_2231371835, 0, color_2231371804, []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [34,32,102,105,108,108,61,34]);;
        formatValue_1442840747(fmtRes_2231371835, 0, fill_2231371831, []);
        fmtRes_2231371835[0].push.apply(fmtRes_2231371835[0], [34,32,47,62]);;
      };
      Temporary2 = fmtRes_2231371835[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_2231371679 = nimCopy(null, Temporary2, NTI33554449);

  return result_2231371679;

}
    
function HEX3Aanonymous_2231371861(arg_2231371862) {
      var result_2231371863 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2231369737.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [82,99,117]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2231371669 = expandArguments_2197815314(doc_2231369737, [82,99,117], arg_2231371862, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX3F_1593835740(0)]);
        result_2231371863 = nimCopy(result_2231371863, {typ: 1, str: RcuCmd_2231371670(to_2181038173(vals_2231371669[chckIndx(0, 0, (vals_2231371669).length - 1)]), to_2181038173(vals_2231371669[chckIndx(1, 0, (vals_2231371669).length - 1)]), to_2214592966(vals_2231371669[chckIndx(2, 0, (vals_2231371669).length - 1)]), to_2214592966(vals_2231371669[chckIndx(3, 0, (vals_2231371669).length - 1)]), to_2214592966(vals_2231371669[chckIndx(4, 0, (vals_2231371669).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2231371863;

    }

  var result_2231369740 = ({data: [], counter: 0});

    var commands_2231369743 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [67,97,114], HEX3Aanonymous_2231370168);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [67,99,114], HEX3Aanonymous_2231370462);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [76,97,98], HEX3Aanonymous_2231370650);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [76,97,117], HEX3Aanonymous_2231370844);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [76,99,117], HEX3Aanonymous_2231371022);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [82,97,98], HEX3Aanonymous_2231371295);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [82,97,117], HEX3Aanonymous_2231371578);
    HEX5BHEX5DHEX3D_2181038249(commands_2231369743[0], [82,99,117], HEX3Aanonymous_2231371861);
    result_2231369740 = nimCopy(result_2231369740, commands_2231369743[0], NTI1593835562);

  return result_2231369740;

}

function expand_1660945059(doc_1660945060, str_1660945061, typ_1660945062) {
  var result_1660945063 = ({typ: 0, str: [], list: [], opt: ({val: null})});

    result_1660945063 = nimCopy(result_1660945063, expand_1660944495(doc_1660945060, toStringView_1560281142(str_1660945061), typ_1660945062), NTI1593835525);

  return result_1660945063;

}

function map_1476404039(s_1476404042, op_1476404044) {
  var result_1476404045 = [];

    result_1476404045 = new Array(chckRange((s_1476404042).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1476404042).length, 0, 2147483647) ; ++i) { result_1476404045[i] = ({typ: 0, str: [], list: [], opt: ({val: null})}); }    Label1: {
      var i_1476404060 = 0;
      var colontmp__587203810 = 0;
      colontmp__587203810 = (s_1476404042).length;
      var i_587203811 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203811 < colontmp__587203810)) break Label3;
            i_1476404060 = i_587203811;
            result_1476404045[chckIndx(i_1476404060, 0, (result_1476404045).length - 1)] = nimCopy(result_1476404045[chckIndx(i_1476404060, 0, (result_1476404045).length - 1)], op_1476404044(s_1476404042[chckIndx(i_1476404060, 0, (s_1476404042).length - 1)]), NTI1593835525);
            i_587203811 = addInt(i_587203811, 1);
          }
      };
    };

  return result_1476404045;

}

function to_1476404024(val_1476404026) {
  var result_1476404028 = ({typ: 0, str: [], list: [], opt: ({val: null})});

    result_1476404028 = nimCopy(result_1476404028, val_1476404026, NTI1593835525);

  return result_1476404028;

}

function to_1476404011(val_1476404014) {
    var Temporary1;
    
function HEX3Aanonymous_1476404017(x_1476404030) {
      var result_1476404033 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        result_1476404033 = nimCopy(result_1476404033, to_1476404024(x_1476404030), NTI1593835525);

      return result_1476404033;

    }

  var result_1476404016 = [];

    var Temporary1 = val_1476404014;
    if (ConstSet391[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_1476404016 = nimCopy(null, map_1476404039(Temporary1.list, HEX3Aanonymous_1476404017), NTI1476401130);

  return result_1476404016;

}

function nosisAbsolute(path_1862271088) {
  var result_1862271089 = false;

  BeforeRet: {
    if (((path_1862271088).length == 0)) {
    result_1862271089 = false;
    break BeforeRet;
    }
    
    result_1862271089 = (path_1862271088[chckIndx(0, 0, (path_1862271088).length - 1)] == 47);
  };

  return result_1862271089;

}

function normalizePathEnd_1862270994(path_1862270995, path_1862270995_Idx, trailingSep_1862270996) {
  BeforeRet: {
    if (((path_1862270995[path_1862270995_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1862270997 = (path_1862270995[path_1862270995_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1862270997)) break Label2;
          if ((ConstSet394[path_1862270995[path_1862270995_Idx][chckIndx(subInt(i_1862270997, 1), 0, (path_1862270995[path_1862270995_Idx]).length - 1)]] != undefined)) {
          i_1862270997 = subInt(i_1862270997, 1);
          }
          else {
          if ((((path_1862270995[path_1862270995_Idx][chckIndx(subInt(i_1862270997, 1), 0, (path_1862270995[path_1862270995_Idx]).length - 1)] == 46) && (2 <= i_1862270997)) && (ConstSet395[path_1862270995[path_1862270995_Idx][chckIndx(subInt(i_1862270997, 2), 0, (path_1862270995[path_1862270995_Idx]).length - 1)]] != undefined))) {
          i_1862270997 = subInt(i_1862270997, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1862270996) {
    if (path_1862270995[path_1862270995_Idx].length < chckRange(i_1862270997, 0, 2147483647)) { for (var i = path_1862270995[path_1862270995_Idx].length; i < chckRange(i_1862270997, 0, 2147483647); ++i) path_1862270995[path_1862270995_Idx].push(0); }
         else {path_1862270995[path_1862270995_Idx].length = chckRange(i_1862270997, 0, 2147483647); };
    addChar(path_1862270995[path_1862270995_Idx], 47);;
    }
    else {
    if ((0 < i_1862270997)) {
    if (path_1862270995[path_1862270995_Idx].length < chckRange(i_1862270997, 0, 2147483647)) { for (var i = path_1862270995[path_1862270995_Idx].length; i < chckRange(i_1862270997, 0, 2147483647); ++i) path_1862270995[path_1862270995_Idx].push(0); }
         else {path_1862270995[path_1862270995_Idx].length = chckRange(i_1862270997, 0, 2147483647); };
    }
    else {
      path_1862270995[path_1862270995_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1879048198(it_1879048199, x_1879048200) {
  var result_1879048201 = false;

    result_1879048201 = (it_1879048199.i < (x_1879048200).length);

  return result_1879048201;

}

function next_1879048202(it_1879048203, x_1879048204) {
  var result_1879048205 = {Field0: 0, Field1: 0};

    it_1879048203.prev = it_1879048203.i;
    if ((!(it_1879048203.notFirst) && (ConstSet397[x_1879048204[chckIndx(it_1879048203.i, 0, (x_1879048204).length - 1)]] != undefined))) {
    it_1879048203.i = addInt(it_1879048203.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1879048203.i < (x_1879048204).length) && !((ConstSet398[x_1879048204[chckIndx(it_1879048203.i, 0, (x_1879048204).length - 1)]] != undefined)))) break Label2;
            it_1879048203.i = addInt(it_1879048203.i, 1);
          }
      };
    }
    
    if ((it_1879048203.prev < it_1879048203.i)) {
    var colontmp__1778384906 = it_1879048203.prev;
    var colontmp__1778384907 = subInt(it_1879048203.i, 1);
    result_1879048205 = nimCopy(result_1879048205, {Field0: colontmp__1778384906, Field1: colontmp__1778384907}, NTI1879048199);
    }
    else {
    if (hasNext_1879048198(it_1879048203, x_1879048204)) {
    result_1879048205 = nimCopy(result_1879048205, next_1879048202(it_1879048203, x_1879048204), NTI1879048199);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1879048203.i < (x_1879048204).length) && (ConstSet399[x_1879048204[chckIndx(it_1879048203.i, 0, (x_1879048204).length - 1)]] != undefined))) break Label4;
          it_1879048203.i = addInt(it_1879048203.i, 1);
        }
    };
    it_1879048203.notFirst = true;

  return result_1879048205;

}

function isSlash_1879048267(x_1879048268, bounds_1879048269) {
  var result_1879048270 = false;

    result_1879048270 = ((bounds_1879048269["Field1"] == bounds_1879048269["Field0"]) && (ConstSet400[x_1879048268[chckIndx(bounds_1879048269["Field0"], 0, (x_1879048268).length - 1)]] != undefined));

  return result_1879048270;

}

function isDotDot_1879048263(x_1879048264, bounds_1879048265) {
  var result_1879048266 = false;

    result_1879048266 = (((bounds_1879048265["Field1"] == addInt(bounds_1879048265["Field0"], 1)) && (x_1879048264[chckIndx(bounds_1879048265["Field0"], 0, (x_1879048264).length - 1)] == 46)) && (x_1879048264[chckIndx(addInt(bounds_1879048265["Field0"], 1), 0, (x_1879048264).length - 1)] == 46));

  return result_1879048266;

}

function isDot_1879048259(x_1879048260, bounds_1879048261) {
  var result_1879048262 = false;

    result_1879048262 = ((bounds_1879048261["Field1"] == bounds_1879048261["Field0"]) && (x_1879048260[chckIndx(bounds_1879048261["Field0"], 0, (x_1879048260).length - 1)] == 46));

  return result_1879048262;

}

function addNormalizePath_1879048275(x_1879048276, result_1879048277, result_1879048277_Idx, state_1879048278, state_1879048278_Idx, dirSep_1879048279) {
          var Temporary7;

    var it_1879048280 = [({i: 0, prev: 0, notFirst: false})];
    it_1879048280[0].notFirst = (0 < (state_1879048278[state_1879048278_Idx] >> 1));
    if (it_1879048280[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1879048280[0].i < (x_1879048276).length) && (ConstSet396[x_1879048276[chckIndx(it_1879048280[0].i, 0, (x_1879048276).length - 1)]] != undefined))) break Label2;
          it_1879048280[0].i = addInt(it_1879048280[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1879048198(it_1879048280[0], x_1879048276)) break Label4;
          var b_1879048294 = next_1879048202(it_1879048280[0], x_1879048276);
          if ((((state_1879048278[state_1879048278_Idx] >> 1) == 0) && isSlash_1879048267(x_1879048276, b_1879048294))) {
          if ((((result_1879048277[result_1879048277_Idx]).length == 0) || !((ConstSet401[result_1879048277[result_1879048277_Idx][chckIndx(subInt((result_1879048277[result_1879048277_Idx]).length, 1), 0, (result_1879048277[result_1879048277_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1879048277[result_1879048277_Idx], dirSep_1879048279);;
          }
          
          state_1879048278[state_1879048278_Idx] = (state_1879048278[state_1879048278_Idx] | 1);
          }
          else {
          if (isDotDot_1879048263(x_1879048276, b_1879048294)) {
          if ((1 <= (state_1879048278[state_1879048278_Idx] >> 1))) {
          var d_1879048307 = (result_1879048277[result_1879048277_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1879048278[state_1879048278_Idx] & 1) < subInt(d_1879048307, 1)) && !((ConstSet402[result_1879048277[result_1879048277_Idx][chckIndx(subInt(d_1879048307, 1), 0, (result_1879048277[result_1879048277_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1879048307 = subInt(d_1879048307, 1);
              }
          };
          if ((0 < d_1879048307)) {
          if (result_1879048277[result_1879048277_Idx].length < (Temporary7 = chckRange(subInt(d_1879048307, 1), 0, 2147483647), Temporary7)) { for (var i = result_1879048277[result_1879048277_Idx].length; i < Temporary7; ++i) result_1879048277[result_1879048277_Idx].push(0); }
         else {result_1879048277[result_1879048277_Idx].length = Temporary7; };
          state_1879048278[state_1879048278_Idx] = subInt(state_1879048278[state_1879048278_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1879048277[result_1879048277_Idx]).length) && !((ConstSet403[result_1879048277[result_1879048277_Idx][chckIndx(subInt((result_1879048277[result_1879048277_Idx]).length, 1), 0, (result_1879048277[result_1879048277_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1879048277[result_1879048277_Idx], dirSep_1879048279);;
            }
            
            result_1879048277[result_1879048277_Idx].push.apply(result_1879048277[result_1879048277_Idx], substr_33558079(x_1879048276, b_1879048294["Field0"], b_1879048294["Field1"]));;
          }
          
          }
          else {
          if (isDot_1879048259(x_1879048276, b_1879048294)) {
          }
          else {
          if ((b_1879048294["Field0"] <= b_1879048294["Field1"])) {
          if (((0 < (result_1879048277[result_1879048277_Idx]).length) && !((ConstSet404[result_1879048277[result_1879048277_Idx][chckIndx(subInt((result_1879048277[result_1879048277_Idx]).length, 1), 0, (result_1879048277[result_1879048277_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1879048277[result_1879048277_Idx], dirSep_1879048279);;
          }
          
          result_1879048277[result_1879048277_Idx].push.apply(result_1879048277[result_1879048277_Idx], substr_33558079(x_1879048276, b_1879048294["Field0"], b_1879048294["Field1"]));;
          state_1879048278[state_1879048278_Idx] = addInt(state_1879048278[state_1879048278_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1879048277[result_1879048277_Idx], []) && !(eqStrings(x_1879048276, [])))) {
    result_1879048277[result_1879048277_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1862271023(result_1862271024, result_1862271024_Idx, state_1862271025, state_1862271025_Idx, tail_1862271026) {
    var Temporary1;

    var trailingSep_1862271035 = (((0 < (tail_1862271026).length) && (ConstSet392[HEX5BHEX5D_33557807(tail_1862271026, 1)] != undefined)) || (((tail_1862271026).length == 0) && ((0 < (result_1862271024[result_1862271024_Idx]).length) && (ConstSet393[(Temporary1 = HEX5BHEX5D_33557853(result_1862271024, result_1862271024_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1862270994(result_1862271024, result_1862271024_Idx, false);
    addNormalizePath_1879048275(tail_1862271026, result_1862271024, result_1862271024_Idx, state_1862271025, state_1862271025_Idx, 47);
    normalizePathEnd_1862270994(result_1862271024, result_1862271024_Idx, trailingSep_1862271035);

  
}

function nosjoinPath(head_1862271037, tail_1862271038) {
  var result_1862271039 = [[]];

    result_1862271039[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1862271040 = [0];
    joinPathImpl_1862271023(result_1862271039, 0, state_1862271040, 0, head_1862271037);
    joinPathImpl_1862271023(result_1862271039, 0, state_1862271040, 0, tail_1862271038);

  return result_1862271039[0];

}

function absolutePath_1862271311(path_1862271312, root_1862271313) {
    var Temporary1;

  var result_1862271314 = [];

    if (nosisAbsolute(path_1862271312)) {
    Temporary1 = path_1862271312;
    }
    else {
      if (!(nosisAbsolute(root_1862271313))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1862271313 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1862271313, path_1862271312);
    }
    
    result_1862271314 = nimCopy(null, Temporary1, NTI33554449);

  return result_1862271314;

}

function nosgetCurrentDir() {
  var result_1862271305 = [];

    if (true) {
    failedAssertImpl_268435541(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1862271305;

}

function npegsmatchLenCapture(s_1493175374, pattern_1493175375, matches_1493175376, start_1493175377) {
  var result_1493175378 = 0;

    var c_1493175379 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    c_1493175379[0].origStart = start_1493175377;
    result_1493175378 = npegsrawMatch(s_1493175374, pattern_1493175375, start_1493175377, c_1493175379[0]);
    if ((0 <= result_1493175378)) {
    Label1: {
      var kHEX60gensym566_1493175387 = 0;
      var colontmp__587203818 = 0;
      colontmp__587203818 = subInt(c_1493175379[0].ml, 1);
      var res_587203819 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_587203819 <= colontmp__587203818)) break Label3;
            kHEX60gensym566_1493175387 = res_587203819;
            var startIdxHEX60gensym566_1493175388 = c_1493175379[0].matches[chckIndx(kHEX60gensym566_1493175387, 0, (c_1493175379[0].matches).length - 1)]["Field0"];
            var endIdxHEX60gensym566_1493175389 = c_1493175379[0].matches[chckIndx(kHEX60gensym566_1493175387, 0, (c_1493175379[0].matches).length - 1)]["Field1"];
            if (!((startIdxHEX60gensym566_1493175388 == (-1)))) {
            matches_1493175376[chckIndx(kHEX60gensym566_1493175387, 0, (matches_1493175376).length - 1)] = nimCopy(null, substr_33558079(s_1493175374, startIdxHEX60gensym566_1493175388, endIdxHEX60gensym566_1493175389), NTI33554449);
            }
            else {
              matches_1493175376[chckIndx(kHEX60gensym566_1493175387, 0, (matches_1493175376).length - 1)] = nimCopy(null, [], NTI33554449);
            }
            
            res_587203819 = addInt(res_587203819, 1);
          }
      };
    };
    }
    

  return result_1493175378;

}

function npegsmatchCapture(s_1493175415, pattern_1493175416, matches_1493175417, start_1493175418) {
  var result_1493175419 = false;

    result_1493175419 = !((npegsmatchLenCapture(s_1493175415, pattern_1493175416, matches_1493175417, start_1493175418) == (-1)));

  return result_1493175419;

}

function HEX2F_1862271062(head_1862271063, tail_1862271064) {
  var result_1862271065 = [];

    result_1862271065 = nimCopy(null, nosjoinPath(head_1862271063, tail_1862271064), NTI33554449);

  return result_1862271065;

}

function nossplitPath(path_1862271067) {
    var Temporary4;

  var result_1862271070 = {Field0: [], Field1: []};

    var sepPos_1862271072 = (-1);
    Label1: {
      var i_1862271078 = 0;
      var colontmp__587203822 = 0;
      colontmp__587203822 = subInt((path_1862271067).length, 1);
      var res_587203823 = colontmp__587203822;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_587203823)) break Label3;
            i_1862271078 = res_587203823;
            if ((ConstSet406[path_1862271067[chckIndx(i_1862271078, 0, (path_1862271067).length - 1)]] != undefined)) {
            sepPos_1862271072 = i_1862271078;
            break Label1;
            }
            
            res_587203823 = subInt(res_587203823, 1);
          }
      };
    };
    if ((0 <= sepPos_1862271072)) {
    if ((1 <= sepPos_1862271072)) {
    Temporary4 = subInt(sepPos_1862271072, 1);
    }
    else {
    Temporary4 = 0;
    }
    
    result_1862271070.Field0 = nimCopy(null, substr_33558079(path_1862271067, 0, Temporary4), NTI33554449);
    result_1862271070.Field1 = nimCopy(null, substr_33558091(path_1862271067, addInt(sepPos_1862271072, 1)), NTI33554449);
    }
    else {
      result_1862271070.Field0 = nimCopy(null, [], NTI33554449);
      result_1862271070.Field1 = nimCopy(null, path_1862271067, NTI33554449);
    }
    

  return result_1862271070;

}

function open_536871332(f_536871333, f_536871333_Idx, filename_536871334, mode_536871335, bufSize_536871336) {
    var Temporary1;

  var result_536871337 = false;

    var p_536871338 = (Temporary1 = fopen(toJSStr(filename_536871334), FormatOpen_536871331[chckIndx(mode_536871335, 0, (FormatOpen_536871331).length - 1)]), Temporary1)[0], p_536871338_Idx = Temporary1[1];
    if (!((p_536871338 == null && p_536871338_Idx == 0))) {
    var f2_536871339 = p_536871338;
    result_536871337 = true;
    f_536871333[f_536871333_Idx] = p_536871338;
    if (((0 < bufSize_536871336) && ((bufSize_536871336 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_536871333[f_536871333_Idx], null, 0, _IOFBF, Number(BigInt.asUintN(32, BigInt(bufSize_536871336))));
    }
    else {
    if ((bufSize_536871336 == 0)) {
    var _ = setvbuf(f_536871333[f_536871333_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_536871337;

}

function rawFileSize_536871297(file_536871298) {
  var result_536871299 = 0n;

    var oldPos_536871300 = ftello(file_536871298);
    var _ = fseeko(file_536871298, 0n, 2);
    result_536871299 = ftello(file_536871298);
    var _ = fseeko(file_536871298, oldPos_536871300, 0);

  return result_536871299;

}

function raiseEIO_536870999(msg_536871000) {
    raiseException({message: nimCopy(null, msg_536871000, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_536871080(f_536871081) {
    if (!((ferror(f_536871081) == 0))) {
    var msg_536871082 = ([101,114,114,110,111,58,32] || []).concat(HEX24_385875976(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_536871081);
    raiseEIO_536870999(msg_536871082);
    }
    

  
}

function readBuffer_536871083(f_536871084, buffer_536871085, buffer_536871085_Idx, len_536871086) {
  var result_536871087 = 0;

    result_536871087 = Number(BigInt.asIntN(32, BigInt(fread(buffer_536871085, buffer_536871085_Idx, 1, Number(BigInt.asUintN(32, BigInt(len_536871086))), f_536871084))));
    if (!((result_536871087 == len_536871086))) {
    checkErr_536871080(f_536871084);
    }
    

  return result_536871087;

}

function endOfFile_536871301(f_536871302) {
  var result_536871303 = false;

  BeforeRet: {
    var c_536871304 = fgetc(f_536871302);
    var _ = ungetc(c_536871304, f_536871302);
    result_536871303 = (c_536871304 < 0);
    break BeforeRet;
  };

  return result_536871303;

}

function readAllBuffer_536871292(file_536871293) {
  var result_536871294 = [];

    result_536871294 = nimCopy(null, [], NTI33554449);
    var buffer_536871295 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_536871296 = readBuffer_536871083(file_536871293, buffer_536871295, chckIndx(0, 0, (buffer_536871295).length - 1), 4000);
          if ((bytesRead_536871296 == 4000)) {
          result_536871294.push.apply(result_536871294, buffer_536871295);;
          }
          else {
            if (buffer_536871295.length < chckRange(bytesRead_536871296, 0, 2147483647)) { for (var i = buffer_536871295.length; i < chckRange(bytesRead_536871296, 0, 2147483647); ++i) buffer_536871295.push(0); }
         else {buffer_536871295.length = chckRange(bytesRead_536871296, 0, 2147483647); };
            result_536871294.push.apply(result_536871294, buffer_536871295);;
            break Label1;
          }
          
        }
    };

  return result_536871294;

}

function readAllFile_536871305(file_536871306, len_536871307) {
  var result_536871308 = [];

    result_536871308 = nimCopy(null, mnewString(chckRange(Number(len_536871307), 0, 2147483647)), NTI33554449);
    var bytes_536871309 = readBuffer_536871083(file_536871306, result_536871308, chckIndx(0, 0, (result_536871308).length - 1), chckRange(Number(len_536871307), 0, 2147483647));
    if (endOfFile_536871301(file_536871306)) {
    if ((BigInt(bytes_536871309) < len_536871307)) {
    if (result_536871308.length < chckRange(bytes_536871309, 0, 2147483647)) { for (var i = result_536871308.length; i < chckRange(bytes_536871309, 0, 2147483647); ++i) result_536871308.push(0); }
         else {result_536871308.length = chckRange(bytes_536871309, 0, 2147483647); };
    }
    
    }
    else {
    result_536871308.push.apply(result_536871308, readAllBuffer_536871292(file_536871306));;
    }
    

  return result_536871308;

}

function readAll_536871314(file_536871315) {
  var result_536871316 = [];

    var len_536871317 = rawFileSize_536871297(file_536871315);
    if ((0n < len_536871317)) {
    result_536871316 = nimCopy(null, readAllFile_536871305(file_536871315, len_536871317), NTI33554449);
    }
    else {
      result_536871316 = nimCopy(null, readAllBuffer_536871292(file_536871315), NTI33554449);
    }
    

  return result_536871316;

}

function close_536871173(f_536871174) {
    if (!((f_536871174 == null))) {
    var _ = fclose(f_536871174);
    }
    

  
}

function readFile_536871412(filename_536871413) {
  var result_536871414 = [];

    var f_536871415 = [null];
    if (open_536871332(f_536871415, 0, filename_536871413, 0, (-1))) {
    try {
    result_536871414 = nimCopy(null, readAll_536871314(f_536871415[0]), NTI33554449);
    } finally {
    close_536871173(f_536871415[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_536871413 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_536871414;

}

function some_1476405441(val_1476405443) {
  var result_1476405444 = ({val: 0, has: false});

    result_1476405444.has = true;
    result_1476405444.val = val_1476405443;

  return result_1476405444;

}

function mustRehash_2063598068(t_2063598070) {
  var result_2063598071 = false;

    if (!((t_2063598070.counter < (t_2063598070.data).length))) {
    failedAssertImpl_268435541([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2063598071 = ((mulInt((t_2063598070.data).length, 2) < mulInt(t_2063598070.counter, 3)) || (subInt((t_2063598070.data).length, t_2063598070.counter) < 4));

  return result_2063598071;

}

function rawInsert_2063598517(t_2063598521, data_2063598522, data_2063598522_Idx, key_2063598523, val_2063598524, hc_2063598525, h_2063598526) {
    data_2063598522[data_2063598522_Idx][chckIndx(h_2063598526, 0, (data_2063598522[data_2063598522_Idx]).length - 1)].Field1 = nimCopy(null, key_2063598523, NTI33554449);
    data_2063598522[data_2063598522_Idx][chckIndx(h_2063598526, 0, (data_2063598522[data_2063598522_Idx]).length - 1)].Field2 = nimCopy(null, val_2063598524, NTI33554449);
    data_2063598522[data_2063598522_Idx][chckIndx(h_2063598526, 0, (data_2063598522[data_2063598522_Idx]).length - 1)].Field0 = hc_2063598525;

  
}

function enlarge_2063598223(t_2063598226) {
    var n_2063598229 = [];
    n_2063598229 = new Array(chckRange(mulInt((t_2063598226.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2063598226.data).length, 2), 0, 2147483647) ; ++i) { n_2063598229[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2063598226.data; t_2063598226.data = n_2063598229; n_2063598229 = Temporary1;    Label2: {
      var i_2063598293 = 0;
      var colontmp__2063598964 = 0;
      colontmp__2063598964 = (n_2063598229).length - 1;
      var res_2063598966 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2063598966 <= colontmp__2063598964)) break Label4;
            i_2063598293 = res_2063598966;
            var eh_2063598347 = n_2063598229[chckIndx(i_2063598293, 0, (n_2063598229).length - 1)].Field0;
            if (isFilled_1627389983(eh_2063598347)) {
            var j_2063598351 = (eh_2063598347 & (t_2063598226.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1627389983(t_2063598226.data[chckIndx(j_2063598351, 0, (t_2063598226.data).length - 1)].Field0)) break Label6;
                  j_2063598351 = nextTry_1627389986(j_2063598351, (t_2063598226.data).length - 1);
                }
            };
            rawInsert_2063598517(t_2063598226, t_2063598226, "data", n_2063598229[chckIndx(i_2063598293, 0, (n_2063598229).length - 1)].Field1, n_2063598229[chckIndx(i_2063598293, 0, (n_2063598229).length - 1)].Field2, eh_2063598347, j_2063598351);
            }
            
            res_2063598966 = addInt(res_2063598966, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2063598686(t_2063598689, key_2063598690, hc_2063598691) {
  var result_2063598692 = 0;

  BeforeRet: {
    if (((t_2063598689.data).length == 0)) {
    result_2063598692 = (-1);
    break BeforeRet;
    }
    
    var h_2063598743 = (hc_2063598691 & (t_2063598689.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1627389983(t_2063598689.data[chckIndx(h_2063598743, 0, (t_2063598689.data).length - 1)].Field0)) break Label2;
          if (((t_2063598689.data[chckIndx(h_2063598743, 0, (t_2063598689.data).length - 1)].Field0 == hc_2063598691) && eqStrings(t_2063598689.data[chckIndx(h_2063598743, 0, (t_2063598689.data).length - 1)].Field1, key_2063598690))) {
          result_2063598692 = h_2063598743;
          break BeforeRet;
          }
          
          h_2063598743 = nextTry_1627389986(h_2063598743, (t_2063598689.data).length - 1);
        }
    };
    result_2063598692 = subInt((-1), h_2063598743);
  };

  return result_2063598692;

}

function HEX5BHEX5DHEX3D_2063597649(t_2063597652, key_2063597653, val_2063597654) {
    if (((t_2063597652.data).length == 0)) {
    var correctSizeHEX60gensym2_2063597704 = slotsNeeded_1627389994(32);
    t_2063597652.counter = 0;
    t_2063597652.data = new Array(chckRange(correctSizeHEX60gensym2_2063597704, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym2_2063597704, 0, 2147483647) ; ++i) { t_2063597652.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2063597709 = [0];
    var index_2063597961 = rawGet_2063597710(t_2063597652, key_2063597653, hc_2063597709, 0);
    if ((0 <= index_2063597961)) {
    t_2063597652.data[chckIndx(index_2063597961, 0, (t_2063597652.data).length - 1)].Field2 = nimCopy(null, val_2063597654, NTI33554449);
    }
    else {
      if (((t_2063597652.data).length == 0)) {
      var correctSizeHEX60gensym7_2063598063 = slotsNeeded_1627389994(32);
      t_2063597652.counter = 0;
      t_2063597652.data = new Array(chckRange(correctSizeHEX60gensym7_2063598063, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym7_2063598063, 0, 2147483647) ; ++i) { t_2063597652.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2063598068(t_2063597652)) {
      enlarge_2063598223(t_2063597652);
      index_2063597961 = rawGetKnownHC_2063598686(t_2063597652, key_2063597653, hc_2063597709[0]);
      }
      
      index_2063597961 = subInt((-1), index_2063597961);
      rawInsert_2063598517(t_2063597652, t_2063597652, "data", key_2063597653, val_2063597654, hc_2063597709[0], index_2063597961);
      t_2063597652.counter = addInt(t_2063597652.counter, 1);
    }
    

  
}

function renderStr_1660945072(doc_1660945073, view_1660945074) {
    var Temporary1;

  var result_1660945075 = [];

    var Temporary1 = expand_1660944495(doc_1660945073, view_1660945074, 1);
    if (ConstSet407[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1593835524)); }
    result_1660945075 = nimCopy(null, Temporary1.str, NTI33554449);

  return result_1660945075;

}

function toStringView_1560281134(body_1560281135, body_1560281135_Idx) {
  var result_1560281136 = ({body: [null, 0], slice: ({a: 0, b: 0})});

    result_1560281136 = nimCopy(result_1560281136, view_1560281095(body_1560281135, body_1560281135_Idx, HEX2EHEX2E_1056964656(0, (body_1560281135[body_1560281135_Idx]).length - 1)), NTI1560281091);

  return result_1560281136;

}

function acquire_1811939342(lock_1811939343) {
  
}

function addAtExit_1795162129(quitProc_1795162131) {
            window.onbeforeunload = quitProc_1795162131;
      

  
}

function release_1811939344(lock_1811939345) {
  
}

function callClosures_1795162132() {
              var Temporary5;
              var Temporary6;

    acquire_1811939342(gFunsLock_1795162127[0]);
    try {
    Label2: {
      var i_1795162142 = 0;
      var colontmp__587203843 = 0;
      colontmp__587203843 = subInt((gFuns_1795162128[0]).length, 1);
      var res_587203844 = colontmp__587203843;
      Label3: {
          Label4: while (true) {
          if (!(0 <= res_587203844)) break Label4;
            i_1795162142 = res_587203844;
            var fun_1795162143 = nimCopy(null, gFuns_1795162128[0][chckIndx(i_1795162142, 0, (gFuns_1795162128[0]).length - 1)], NTI1795162116);
            switch (fun_1795162143.kind) {
            case 0:
              var Temporary5 = fun_1795162143;
              if (ConstSet408[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fun1\' is not accessible for type \'Fun\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1795162115)); }
              Temporary5.fun1();
              break;
            case 1:
              var Temporary6 = fun_1795162143;
              if (ConstSet409[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fun2\' is not accessible for type \'Fun\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1795162115)); }
              Temporary6.fun2();
              break;
            }
            res_587203844 = subInt(res_587203844, 1);
          }
      };
    };
    if (gFuns_1795162128[0].length < 0) { for (var i = gFuns_1795162128[0].length ; i < 0 ; ++i) gFuns_1795162128[0].push(({kind: 0, fun1: null, fun2: null})); }
               else { gFuns_1795162128[0].length = 0; };
    } finally {
    release_1811939344(gFunsLock_1795162127[0]);
    }

  
}

function addExitProc_1795162175(cl_1795162177) {
    acquire_1811939342(gFunsLock_1795162127[0]);
    try {
    if (((gFuns_1795162128[0]).length == 0)) {
    addAtExit_1795162129(callClosures_1795162132);
    }
    
    gFuns_1795162128[0].push({kind: 0, fun1: cl_1795162177, fun2: null});;
    } finally {
    release_1811939344(gFunsLock_1795162127[0]);
    }

  
}

function initEnv_1778384962() {
    if (globalThis.alreadyExecutedHEX60gensym1_1778384964 === undefined) {
      globalThis.alreadyExecutedHEX60gensym1_1778384964 = [false];
    }
    if (!(alreadyExecutedHEX60gensym1_1778384964[0])) {
    alreadyExecutedHEX60gensym1_1778384964[0] = true;
    var _ = janet_init();
    addExitProc_1795162175(janet_deinit);
    }
    

  
}

function newSeq_1778385017(len_1778385019) {
  var result_1778385020 = [];

    result_1778385020 = new Array(len_1778385019); for (var i = 0 ; i < len_1778385019 ; ++i) { result_1778385020[i] = ({}); }
  return result_1778385020;

}

function janetCall_1778384981(function_1778384982, args_1778384983, path_1778384984) {
  var result_1778384985 = [];

    initEnv_1778384962();
    var env_1778384986 = janet_core_env(null);
    var functionValue_1778384987 = [({})];
    if (!((janet_dobytes(env_1778384986, toJSStr(function_1778384982), (((function_1778384982).length) | 0), toJSStr(path_1778384984), functionValue_1778384987[0]) == 0))) {
    raiseException({message: nsuFormatOpenArray([69,114,114,111,114,32,119,104,105,108,101,32,101,118,97,108,117,97,116,105,110,103,32,74,97,110,101,116,32,102,117,110,99,116,105,111,110,32,40,115,101,101,32,97,98,111,118,101,41,58,32,36,49], [nimCopy(null, function_1778384982, NTI33554449)]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if (!(janet_checktype(functionValue_1778384987[0], JANET_FUNCTION))) {
    raiseException({message: nsuFormatOpenArray([73,110,118,97,108,105,100,32,74,97,110,101,116,32,102,117,110,99,116,105,111,110,58,32,36,49], [nimCopy(null, function_1778384982, NTI33554449)]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var f_1778384988 = janet_unwrap_function(functionValue_1778384987[0]);
    Label1: {
      var iHEX60gensym5_1778385013 = 0;
      var resultHEX60gensym5_1778385057 = newSeq_1778385017(chckRange((args_1778384983).length, 0, 2147483647));
      Label2: {
        var it_1778385061 = [];
        var i_587203840 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_587203840 < (args_1778384983).length)) break Label4;
              it_1778385061 = args_1778384983[chckIndx(i_587203840, 0, (args_1778384983).length - 1)];
              resultHEX60gensym5_1778385057[chckIndx(iHEX60gensym5_1778385013, 0, (resultHEX60gensym5_1778385057).length - 1)] = nimCopy(resultHEX60gensym5_1778385057[chckIndx(iHEX60gensym5_1778385013, 0, (resultHEX60gensym5_1778385057).length - 1)], janet_cstringv(toJSStr(it_1778385061)), NTI1778384912);
              iHEX60gensym5_1778385013 = addInt(iHEX60gensym5_1778385013, 1);
              i_587203840 = addInt(i_587203840, 1);
            }
        };
      };
    };
    var wrappedArgs_1778385066 = nimCopy(null, resultHEX60gensym5_1778385057, NTI1778384983);
    var value_1778385067 = [({})];
    if ((janet_pcall(f_1778384988, (((args_1778384983).length) | 0), wrappedArgs_1778385066[chckIndx(0, 0, (wrappedArgs_1778385066).length - 1)], value_1778385067[0], null, 0) == JANET_SIGNAL_ERROR)) {
    raiseException({message: nsuFormatOpenArray([69,114,114,111,114,32,119,104,105,108,101,32,99,97,108,108,105,110,103,32,74,97,110,101,116,32,102,117,110,99,116,105,111,110,58,32,36,49,10,36,50], [nimCopy(null, function_1778384982, NTI33554449), cstrToNimstr(janet_unwrap_string(value_1778385067[0]))]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if (!(janet_checktype(value_1778385067[0], JANET_STRING))) {
    raiseException({message: nsuFormatOpenArray([82,101,116,117,114,110,101,100,32,118,97,108,117,101,32,102,114,111,109,32,74,97,110,101,116,32,102,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,97,32,115,116,114,105,110,103,58,32,36,49], [nimCopy(null, function_1778384982, NTI33554449)]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1778384985 = nimCopy(null, cstrToNimstr(janet_unwrap_string(value_1778385067[0])), NTI33554449);

  return result_1778384985;

}

function janetEval_1778385119(code_1778385120, values_1778385121, path_1778385122) {
    var Temporary4;

  var result_1778385123 = [];

    initEnv_1778384962();
    var env_1778385124 = janet_core_env(null);
    Label1: {
      var name_1778385128 = [];
      var val_1778385129 = [];
      var i_587203851 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203851 < (values_1778385121).length)) break Label3;
            name_1778385128 = values_1778385121[chckIndx(i_587203851, 0, (values_1778385121).length - 1)]["Field0"];
            val_1778385129 = values_1778385121[chckIndx(i_587203851, 0, (values_1778385121).length - 1)]["Field1"];
            janet_def_sm(env_1778385124, toJSStr(name_1778385128), janet_cstringv(toJSStr(val_1778385129)), "", toJSStr(path_1778385122), 0);
            i_587203851 = addInt(i_587203851, 1);
          }
      };
    };
    var value_1778385130 = [({})];
    if (!((janet_dobytes(env_1778385124, toJSStr(code_1778385120), (((code_1778385120).length) | 0), toJSStr(path_1778385122), value_1778385130[0]) == 0))) {
    raiseException({message: [69,114,114,111,114,32,119,104,105,108,101,32,101,118,97,108,117,97,116,105,110,103,32,74,97,110,101,116,32,99,111,100,101,32,40,115,101,101,32,97,98,111,118,101,41], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if (janet_checktype(value_1778385130[0], JANET_STRING)) {
    Temporary4 = cstrToNimstr(janet_unwrap_string(value_1778385130[0]));
    }
    else {
    if (janet_checktype(value_1778385130[0], JANET_NIL)) {
    Temporary4 = [];
    }
    else {
      raiseException({message: [82,101,116,117,114,110,101,100,32,118,97,108,117,101,32,102,114,111,109,32,74,97,110,101,116,32,99,111,100,101,32,105,115,32,110,111,116,32,97,32,115,116,114,105,110,103,32,111,114,32,110,105,108], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    }
    result_1778385123 = nimCopy(null, Temporary4, NTI33554449);

  return result_1778385123;

}

function jsCall_2063600924(code_2063600925, args_2063600926) {
  var result_2063600927 = [];

    raiseException({message: makeNimstrLit("JavaScript evaluation is currently not available when using JavaScript (how ironic)"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2063600927;

}

function jsEval_2063600928(code_2063600929, values_2063600930) {
  var result_2063600931 = [];

    raiseException({message: makeNimstrLit("JavaScript evaluation is currently not available when using JavaScript (how ironic)"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2063600931;

}

function HEX5BHEX5D_2248147085(s_2248147087, i_2248147088) {
  var result_2248147089 = [];

    result_2248147089 = nimCopy(null, s_2248147087[chckIndx(subInt((s_2248147087).length, i_2248147088), 0, (s_2248147087).length - 1)], NTI33554449);

  return result_2248147089;

}

function jsCommands_2248146952(doc_2248146953) {

function forCmd_2248146961(name_2248146962, container_2248146963, body_2248146964) {
  var result_2248146965 = [];

    Label1: {
      var fmtRes_2248146969 = [mnewString(0)];
      fmtRes_2248146969[0].push.apply(fmtRes_2248146969[0], [102,111,114,40,99,111,110,115,116,32]);;
      formatValue_1442840747(fmtRes_2248146969, 0, name_2248146962, []);
      fmtRes_2248146969[0].push.apply(fmtRes_2248146969[0], [32,111,102,32]);;
      formatValue_1442840747(fmtRes_2248146969, 0, container_2248146963, []);
      fmtRes_2248146969[0].push.apply(fmtRes_2248146969[0], [41,123]);;
      formatValue_1442840747(fmtRes_2248146969, 0, body_2248146964, []);
      fmtRes_2248146969[0].push.apply(fmtRes_2248146969[0], [125]);;
    };
    result_2248146965 = nimCopy(null, fmtRes_2248146969[0], NTI33554449);

  return result_2248146965;

}
    
function HEX3Aanonymous_2248146975(arg_2248146976) {
      var result_2248146977 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [102,111,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248146960 = expandArguments_2197815314(doc_2248146953, [102,111,114], arg_2248146976, [HEX21_1593835705(0), HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2248146977 = nimCopy(result_2248146977, {typ: 0, str: forCmd_2248146961(to_2181038173(vals_2248146960[chckIndx(0, 0, (vals_2248146960).length - 1)]), to_2181038173(vals_2248146960[chckIndx(1, 0, (vals_2248146960).length - 1)]), to_2181038173(vals_2248146960[chckIndx(2, 0, (vals_2248146960).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248146977;

    }

function ifCmd_2248147057(condition_2248147058, body_2248147059, elses_2248147060) {
  var result_2248147061 = [];

    Label1: {
      var fmtRes_2248147065 = [mnewString(0)];
      fmtRes_2248147065[0].push.apply(fmtRes_2248147065[0], [105,102,40]);;
      formatValue_1442840747(fmtRes_2248147065, 0, condition_2248147058, []);
      fmtRes_2248147065[0].push.apply(fmtRes_2248147065[0], [41,123]);;
      formatValue_1442840747(fmtRes_2248147065, 0, body_2248147059, []);
      fmtRes_2248147065[0].push.apply(fmtRes_2248147065[0], [125]);;
    };
    result_2248147061 = nimCopy(null, fmtRes_2248147065[0], NTI33554449);
    Label2: {
      var i_2248147073 = 0;
      var colontmp__587203870 = 0;
      colontmp__587203870 = divInt((elses_2248147060).length, 2);
      var i_587203871 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_587203871 < colontmp__587203870)) break Label4;
            i_2248147073 = i_587203871;
            Label5: {
              var fmtRes_2248147077 = [mnewString(0)];
              fmtRes_2248147077[0].push.apply(fmtRes_2248147077[0], [101,108,115,101,32,105,102,40]);;
              formatValue_1442840747(fmtRes_2248147077, 0, elses_2248147060[chckIndx(mulInt(2, i_2248147073), 0, (elses_2248147060).length - 1)], []);
              fmtRes_2248147077[0].push.apply(fmtRes_2248147077[0], [41,123]);;
              formatValue_1442840747(fmtRes_2248147077, 0, elses_2248147060[chckIndx(addInt(mulInt(2, i_2248147073), 1), 0, (elses_2248147060).length - 1)], []);
              fmtRes_2248147077[0].push.apply(fmtRes_2248147077[0], [125]);;
            };
            result_2248147061.push.apply(result_2248147061, fmtRes_2248147077[0]);;
            i_587203871 = addInt(i_587203871, 1);
          }
      };
    };
    if ((modInt((elses_2248147060).length, 2) == 1)) {
    Label6: {
      var fmtRes_2248147084 = [mnewString(0)];
      fmtRes_2248147084[0].push.apply(fmtRes_2248147084[0], [101,108,115,101,123]);;
      formatValue_1442840747(fmtRes_2248147084, 0, HEX5BHEX5D_2248147085(elses_2248147060, 1), []);
      fmtRes_2248147084[0].push.apply(fmtRes_2248147084[0], [125]);;
    };
    result_2248147061.push.apply(result_2248147061, fmtRes_2248147084[0]);;
    }
    

  return result_2248147061;

}
    
function HEX3Aanonymous_2248147098(arg_2248147099) {
      var result_2248147100 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,102]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147056 = expandArguments_2197815314(doc_2248146953, [105,102], arg_2248147099, [HEX21_1593835705(0), HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_2248147100 = nimCopy(result_2248147100, {typ: 0, str: ifCmd_2248147057(to_2181038173(vals_2248147056[chckIndx(0, 0, (vals_2248147056).length - 1)]), to_2181038173(vals_2248147056[chckIndx(1, 0, (vals_2248147056).length - 1)]), to_2248147113(vals_2248147056[chckIndx(2, 0, (vals_2248147056).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147100;

    }

function ifExprCmd_2248147224(condition_2248147225, expr_2248147226, elses_2248147227) {
  var result_2248147228 = [];

    Label1: {
      var fmtRes_2248147232 = [mnewString(0)];
      formatValue_1442840747(fmtRes_2248147232, 0, condition_2248147225, []);
      fmtRes_2248147232[0].push.apply(fmtRes_2248147232[0], [63]);;
      formatValue_1442840747(fmtRes_2248147232, 0, expr_2248147226, []);
    };
    result_2248147228 = nimCopy(null, fmtRes_2248147232[0], NTI33554449);
    if (!((modInt((elses_2248147227).length, 2) == 1))) {
    raiseException({message: [91,105,102,61,93,32,114,101,113,117,105,114,101,115,32,97,110,32,101,108,115,101,32,99,108,97,117,115,101], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    Label2: {
      var i_2248147243 = 0;
      var colontmp__587203877 = 0;
      colontmp__587203877 = divInt((elses_2248147227).length, 2);
      var i_587203878 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_587203878 < colontmp__587203877)) break Label4;
            i_2248147243 = i_587203878;
            Label5: {
              var fmtRes_2248147247 = [mnewString(0)];
              fmtRes_2248147247[0].push.apply(fmtRes_2248147247[0], [58]);;
              formatValue_1442840747(fmtRes_2248147247, 0, elses_2248147227[chckIndx(mulInt(2, i_2248147243), 0, (elses_2248147227).length - 1)], []);
              fmtRes_2248147247[0].push.apply(fmtRes_2248147247[0], [63]);;
              formatValue_1442840747(fmtRes_2248147247, 0, elses_2248147227[chckIndx(addInt(mulInt(2, i_2248147243), 1), 0, (elses_2248147227).length - 1)], []);
            };
            result_2248147228.push.apply(result_2248147228, fmtRes_2248147247[0]);;
            i_587203878 = addInt(i_587203878, 1);
          }
      };
    };
    Label6: {
      var fmtRes_2248147251 = [mnewString(0)];
      fmtRes_2248147251[0].push.apply(fmtRes_2248147251[0], [58]);;
      formatValue_1442840747(fmtRes_2248147251, 0, HEX5BHEX5D_2248147085(elses_2248147227, 1), []);
    };
    result_2248147228.push.apply(result_2248147228, fmtRes_2248147251[0]);;

  return result_2248147228;

}
    
function HEX3Aanonymous_2248147261(arg_2248147262) {
      var result_2248147263 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,102,61]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147223 = expandArguments_2197815314(doc_2248146953, [105,102,61], arg_2248147262, [HEX21_1593835705(0), HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_2248147263 = nimCopy(result_2248147263, {typ: 0, str: ifExprCmd_2248147224(to_2181038173(vals_2248147223[chckIndx(0, 0, (vals_2248147223).length - 1)]), to_2181038173(vals_2248147223[chckIndx(1, 0, (vals_2248147223).length - 1)]), to_2248147113(vals_2248147223[chckIndx(2, 0, (vals_2248147223).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147263;

    }

function iifCmd_2248147328(body_2248147329) {
  var result_2248147330 = [];

    Label1: {
      var fmtRes_2248147334 = [mnewString(0)];
      fmtRes_2248147334[0].push.apply(fmtRes_2248147334[0], [40,40,41,61,62,123]);;
      formatValue_1442840747(fmtRes_2248147334, 0, body_2248147329, []);
      fmtRes_2248147334[0].push.apply(fmtRes_2248147334[0], [125,41,40,41]);;
    };
    result_2248147330 = nimCopy(null, fmtRes_2248147334[0], NTI33554449);

  return result_2248147330;

}
    
function HEX3Aanonymous_2248147340(arg_2248147341) {
      var result_2248147342 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,105,102]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147327 = expandArguments_2197815314(doc_2248146953, [105,105,102], arg_2248147341, [HEX21_1593835705(0)]);
        result_2248147342 = nimCopy(result_2248147342, {typ: 0, str: iifCmd_2248147328(to_2181038173(vals_2248147327[chckIndx(0, 0, (vals_2248147327).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147342;

    }

function letCmd_2248147398(name_2248147399, value_2248147400) {
  var result_2248147401 = [];

    Label1: {
      var fmtRes_2248147405 = [mnewString(0)];
      fmtRes_2248147405[0].push.apply(fmtRes_2248147405[0], [99,111,110,115,116,32]);;
      formatValue_1442840747(fmtRes_2248147405, 0, name_2248147399, []);
      fmtRes_2248147405[0].push.apply(fmtRes_2248147405[0], [61]);;
      formatValue_1442840747(fmtRes_2248147405, 0, value_2248147400, []);
      fmtRes_2248147405[0].push.apply(fmtRes_2248147405[0], [59]);;
    };
    result_2248147401 = nimCopy(null, fmtRes_2248147405[0], NTI33554449);

  return result_2248147401;

}
    
function HEX3Aanonymous_2248147411(arg_2248147412) {
      var result_2248147413 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,101,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147397 = expandArguments_2197815314(doc_2248146953, [108,101,116], arg_2248147412, [HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2248147413 = nimCopy(result_2248147413, {typ: 0, str: letCmd_2248147398(to_2181038173(vals_2248147397[chckIndx(0, 0, (vals_2248147397).length - 1)]), to_2181038173(vals_2248147397[chckIndx(1, 0, (vals_2248147397).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147413;

    }

function rangeCmd_2248147473(name_2248147474, n_2248147475, m_2248147477, r_2248147479, body_2248147480) {
    var Temporary1;
    var Temporary2;

  var result_2248147481 = [];

    if (isSome_2214592897(m_2248147477)) {
    var m_2248147509 = nimCopy(null, unsafeGet_2248147493(m_2248147477), NTI33554449);
    if (isSome_2214592897(r_2248147479)) {
    var r_2248147524 = nimCopy(null, unsafeGet_2248147493(r_2248147479), NTI33554449);
    Label3: {
      var fmtRes_2248147528 = [mnewString(0)];
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [102,111,114,40,108,101,116,32]);;
      formatValue_1442840747(fmtRes_2248147528, 0, name_2248147474, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [61]);;
      formatValue_1442840747(fmtRes_2248147528, 0, n_2248147475, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [59]);;
      formatValue_1442840747(fmtRes_2248147528, 0, name_2248147474, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [60]);;
      formatValue_1442840747(fmtRes_2248147528, 0, m_2248147509, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [59]);;
      formatValue_1442840747(fmtRes_2248147528, 0, name_2248147474, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [43,61]);;
      formatValue_1442840747(fmtRes_2248147528, 0, r_2248147524, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [41,123]);;
      formatValue_1442840747(fmtRes_2248147528, 0, body_2248147480, []);
      fmtRes_2248147528[0].push.apply(fmtRes_2248147528[0], [125]);;
    };
    Temporary2 = fmtRes_2248147528[0];
    }
    else {
      Label4: {
        var fmtRes_2248147532 = [mnewString(0)];
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [102,111,114,40,108,101,116,32]);;
        formatValue_1442840747(fmtRes_2248147532, 0, name_2248147474, []);
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [61]);;
        formatValue_1442840747(fmtRes_2248147532, 0, n_2248147475, []);
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [59]);;
        formatValue_1442840747(fmtRes_2248147532, 0, name_2248147474, []);
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [60]);;
        formatValue_1442840747(fmtRes_2248147532, 0, m_2248147509, []);
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [59,43,43]);;
        formatValue_1442840747(fmtRes_2248147532, 0, name_2248147474, []);
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [41,123]);;
        formatValue_1442840747(fmtRes_2248147532, 0, body_2248147480, []);
        fmtRes_2248147532[0].push.apply(fmtRes_2248147532[0], [125]);;
      };
    Temporary2 = fmtRes_2248147532[0];
    }
    
    Temporary1 = Temporary2;
    }
    else {
      Label5: {
        var fmtRes_2248147536 = [mnewString(0)];
        fmtRes_2248147536[0].push.apply(fmtRes_2248147536[0], [102,111,114,40,108,101,116,32]);;
        formatValue_1442840747(fmtRes_2248147536, 0, name_2248147474, []);
        fmtRes_2248147536[0].push.apply(fmtRes_2248147536[0], [61,48,59]);;
        formatValue_1442840747(fmtRes_2248147536, 0, name_2248147474, []);
        fmtRes_2248147536[0].push.apply(fmtRes_2248147536[0], [60]);;
        formatValue_1442840747(fmtRes_2248147536, 0, n_2248147475, []);
        fmtRes_2248147536[0].push.apply(fmtRes_2248147536[0], [59,43,43]);;
        formatValue_1442840747(fmtRes_2248147536, 0, name_2248147474, []);
        fmtRes_2248147536[0].push.apply(fmtRes_2248147536[0], [41,123]);;
        formatValue_1442840747(fmtRes_2248147536, 0, body_2248147480, []);
        fmtRes_2248147536[0].push.apply(fmtRes_2248147536[0], [125]);;
      };
    Temporary1 = fmtRes_2248147536[0];
    }
    
    result_2248147481 = nimCopy(null, Temporary1, NTI33554449);

  return result_2248147481;

}
    
function HEX3Aanonymous_2248147542(arg_2248147543) {
      var result_2248147544 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [114,97,110,103,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147472 = expandArguments_2197815314(doc_2248146953, [114,97,110,103,101], arg_2248147543, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0), HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_2248147544 = nimCopy(result_2248147544, {typ: 0, str: rangeCmd_2248147473(to_2181038173(vals_2248147472[chckIndx(0, 0, (vals_2248147472).length - 1)]), to_2181038173(vals_2248147472[chckIndx(1, 0, (vals_2248147472).length - 1)]), to_2214592966(vals_2248147472[chckIndx(2, 0, (vals_2248147472).length - 1)]), to_2214592966(vals_2248147472[chckIndx(3, 0, (vals_2248147472).length - 1)]), to_2181038173(vals_2248147472[chckIndx(4, 0, (vals_2248147472).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147544;

    }

function switchCmd_2248147628(name_2248147629, cases_2248147630) {
            var Temporary5;

  var result_2248147631 = [];

    if (!((modInt((cases_2248147630).length, 2) == 0))) {
    raiseException({message: [69,120,116,114,97,32,97,114,103,117,109,101,110,116,115,32,116,111,32,91,115,119,105,116,99,104,93,32,109,117,115,116,32,99,111,109,101,32,105,110,32,112,97,105,114,115], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    Label1: {
      var fmtRes_2248147638 = [mnewString(0)];
      fmtRes_2248147638[0].push.apply(fmtRes_2248147638[0], [115,119,105,116,99,104,40]);;
      formatValue_1442840747(fmtRes_2248147638, 0, name_2248147629, []);
      fmtRes_2248147638[0].push.apply(fmtRes_2248147638[0], [41,123]);;
    };
    result_2248147631 = nimCopy(null, fmtRes_2248147638[0], NTI33554449);
    Label2: {
      var i_2248147646 = 0;
      var colontmp__587203889 = 0;
      colontmp__587203889 = divInt((cases_2248147630).length, 2);
      var i_587203890 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_587203890 < colontmp__587203889)) break Label4;
            i_2248147646 = i_587203890;
            if (eqStrings(cases_2248147630[chckIndx(mulInt(2, i_2248147646), 0, (cases_2248147630).length - 1)], [100,101,102,97,117,108,116])) {
            Temporary5 = [100,101,102,97,117,108,116];
            }
            else {
            Temporary5 = ([99,97,115,101,32] || []).concat(cases_2248147630[chckIndx(mulInt(2, i_2248147646), 0, (cases_2248147630).length - 1)] || []);
            }
            
            var label_2248147647 = nimCopy(null, Temporary5, NTI33554449);
            Label6: {
              var fmtRes_2248147651 = [mnewString(0)];
              formatValue_1442840747(fmtRes_2248147651, 0, label_2248147647, []);
              fmtRes_2248147651[0].push.apply(fmtRes_2248147651[0], [58,123]);;
              formatValue_1442840747(fmtRes_2248147651, 0, cases_2248147630[chckIndx(addInt(mulInt(2, i_2248147646), 1), 0, (cases_2248147630).length - 1)], []);
              fmtRes_2248147651[0].push.apply(fmtRes_2248147651[0], [125,98,114,101,97,107,59]);;
            };
            result_2248147631.push.apply(result_2248147631, fmtRes_2248147651[0]);;
            i_587203890 = addInt(i_587203890, 1);
          }
      };
    };
    result_2248147631.push.apply(result_2248147631, [125]);;

  return result_2248147631;

}
    
function HEX3Aanonymous_2248147657(arg_2248147658) {
      var result_2248147659 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [115,119,105,116,99,104]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147627 = expandArguments_2197815314(doc_2248146953, [115,119,105,116,99,104], arg_2248147658, [HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_2248147659 = nimCopy(result_2248147659, {typ: 0, str: switchCmd_2248147628(to_2181038173(vals_2248147627[chckIndx(0, 0, (vals_2248147627).length - 1)]), to_2248147113(vals_2248147627[chckIndx(1, 0, (vals_2248147627).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147659;

    }

function varCmd_2248147720(name_2248147721, value_2248147723) {
    var Temporary1;

  var result_2248147724 = [];

    if (isSome_2214592897(value_2248147723)) {
    var value_2248147739 = nimCopy(null, unsafeGet_2248147493(value_2248147723), NTI33554449);
    Label2: {
      var fmtRes_2248147743 = [mnewString(0)];
      fmtRes_2248147743[0].push.apply(fmtRes_2248147743[0], [108,101,116,32]);;
      formatValue_1442840747(fmtRes_2248147743, 0, name_2248147721, []);
      fmtRes_2248147743[0].push.apply(fmtRes_2248147743[0], [61]);;
      formatValue_1442840747(fmtRes_2248147743, 0, value_2248147739, []);
      fmtRes_2248147743[0].push.apply(fmtRes_2248147743[0], [59]);;
    };
    Temporary1 = fmtRes_2248147743[0];
    }
    else {
      Label3: {
        var fmtRes_2248147747 = [mnewString(0)];
        fmtRes_2248147747[0].push.apply(fmtRes_2248147747[0], [108,101,116,32]);;
        formatValue_1442840747(fmtRes_2248147747, 0, name_2248147721, []);
        fmtRes_2248147747[0].push.apply(fmtRes_2248147747[0], [59]);;
      };
    Temporary1 = fmtRes_2248147747[0];
    }
    
    result_2248147724 = nimCopy(null, Temporary1, NTI33554449);

  return result_2248147724;

}
    
function HEX3Aanonymous_2248147753(arg_2248147754) {
      var result_2248147755 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2248146953.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [118,97,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2248147719 = expandArguments_2197815314(doc_2248146953, [118,97,114], arg_2248147754, [HEX21_1593835705(0), HEX3F_1593835740(0)]);
        result_2248147755 = nimCopy(result_2248147755, {typ: 0, str: varCmd_2248147720(to_2181038173(vals_2248147719[chckIndx(0, 0, (vals_2248147719).length - 1)]), to_2214592966(vals_2248147719[chckIndx(1, 0, (vals_2248147719).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2248147755;

    }

  var result_2248146956 = ({data: [], counter: 0});

    var commands_2248146959 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [102,111,114], HEX3Aanonymous_2248146975);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [105,102], HEX3Aanonymous_2248147098);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [105,102,61], HEX3Aanonymous_2248147261);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [105,105,102], HEX3Aanonymous_2248147340);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [108,101,116], HEX3Aanonymous_2248147411);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [114,97,110,103,101], HEX3Aanonymous_2248147542);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [115,119,105,116,99,104], HEX3Aanonymous_2248147657);
    HEX5BHEX5DHEX3D_2181038249(commands_2248146959[0], [118,97,114], HEX3Aanonymous_2248147753);
    result_2248146956 = nimCopy(result_2248146956, commands_2248146959[0], NTI1593835562);

  return result_2248146956;

}

function nsuToLowerAsciiChar(c_754974805) {
  var result_754974806 = 0;

    if ((ConstSet411[c_754974805] != undefined)) {
    result_754974806 = (c_754974805 ^ 32);
    }
    else {
      result_754974806 = c_754974805;
    }
    

  return result_754974806;

}

function nsuToLowerAsciiStr(s_754974815) {
  var result_754974816 = [];

    result_754974816 = nimCopy(null, mnewString(chckRange((s_754974815).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_754974822 = 0;
      var colontmp__2415919386 = 0;
      colontmp__2415919386 = subInt((s_754974815).length, 1);
      var res_2415919387 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2415919387 <= colontmp__2415919386)) break Label3;
            iHEX60gensym7_754974822 = res_2415919387;
            result_754974816[chckIndx(iHEX60gensym7_754974822, 0, (result_754974816).length - 1)] = nsuToLowerAsciiChar(s_754974815[chckIndx(iHEX60gensym7_754974822, 0, (s_754974815).length - 1)]);
            res_2415919387 = addInt(res_2415919387, 1);
          }
      };
    };

  return result_754974816;

}

function stringToPattern_2667579452(str_2667579453) {
  var result_2667579454 = 0;

    switch (toJSStr(str_2667579453)) {
    case "d":
      result_2667579454 = 0;
      break;
    case "dd":
      result_2667579454 = 1;
      break;
    case "ddd":
      result_2667579454 = 2;
      break;
    case "dddd":
      result_2667579454 = 3;
      break;
    case "GG":
      result_2667579454 = 4;
      break;
    case "GGGG":
      result_2667579454 = 5;
      break;
    case "h":
      result_2667579454 = 6;
      break;
    case "hh":
      result_2667579454 = 7;
      break;
    case "H":
      result_2667579454 = 8;
      break;
    case "HH":
      result_2667579454 = 9;
      break;
    case "m":
      result_2667579454 = 10;
      break;
    case "mm":
      result_2667579454 = 11;
      break;
    case "M":
      result_2667579454 = 12;
      break;
    case "MM":
      result_2667579454 = 13;
      break;
    case "MMM":
      result_2667579454 = 14;
      break;
    case "MMMM":
      result_2667579454 = 15;
      break;
    case "s":
      result_2667579454 = 16;
      break;
    case "ss":
      result_2667579454 = 17;
      break;
    case "fff":
      result_2667579454 = 18;
      break;
    case "ffffff":
      result_2667579454 = 19;
      break;
    case "fffffffff":
      result_2667579454 = 20;
      break;
    case "t":
      result_2667579454 = 21;
      break;
    case "tt":
      result_2667579454 = 22;
      break;
    case "yy":
      result_2667579454 = 23;
      break;
    case "yyyy":
      result_2667579454 = 24;
      break;
    case "YYYY":
      result_2667579454 = 25;
      break;
    case "uuuu":
      result_2667579454 = 26;
      break;
    case "UUUU":
      result_2667579454 = 27;
      break;
    case "V":
      result_2667579454 = 28;
      break;
    case "VV":
      result_2667579454 = 29;
      break;
    case "z":
      result_2667579454 = 30;
      break;
    case "zz":
      result_2667579454 = 31;
      break;
    case "zzz":
      result_2667579454 = 32;
      break;
    case "zzzz":
      result_2667579454 = 33;
      break;
    case "ZZZ":
      result_2667579454 = 34;
      break;
    case "ZZZZ":
      result_2667579454 = 35;
      break;
    case "g":
      result_2667579454 = 36;
      break;
    default: 
      raiseException({message: ([39] || []).concat(str_2667579453 || [],[39,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,112,97,116,116,101,114,110] || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
      break;
    }

  return result_2667579454;

}

function inc_2667577378(a_2667577379, a_2667577379_Idx, b_2667577380) {
    a_2667577379[a_2667577379_Idx] += b_2667577380;

  
}

function initTimeFormat_2667579472(format_2667579473) {
  var result_2667579474 = ({patterns: [], formatStr: []});

    result_2667579474.formatStr = nimCopy(null, format_2667579473, NTI33554449);
    result_2667579474.patterns = nimCopy(null, [], NTI2667578562);
    Label1: {
      var kind_2667579479 = 0;
      var token_2667579480 = [];
      var i_2667581120 = [0];
      var currToken_2667581121 = [];
      Label2: {
          Label3: while (true) {
          if (!(i_2667581120[0] < (format_2667579473).length)) break Label3;
            switch (format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)]) {
            case 39:
              if (!(((currToken_2667581121).length == 0))) {
              kind_2667579479 = 0;
              token_2667579480 = currToken_2667581121;
              switch (kind_2667579479) {
              case 1:
                switch (toJSStr(token_2667579480)) {
                default: 
                  result_2667579474.patterns.push(37);;
                  if ((255 < (token_2667579480).length)) {
                  raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_2667579474.patterns.push((token_2667579480).length);;
                  Label4: {
                    var c_2667579490 = 0;
                    var i_2667581115 = 0;
                    var L_2667581116 = (token_2667579480).length;
                    Label5: {
                        Label6: while (true) {
                        if (!(i_2667581115 < L_2667581116)) break Label6;
                          c_2667579490 = token_2667579480[chckIndx(i_2667581115, 0, (token_2667579480).length - 1)];
                          result_2667579474.patterns.push(c_2667579490);;
                          i_2667581115 = addInt(i_2667581115, 1);
                          if (!(((token_2667579480).length == L_2667581116))) {
                          failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  break;
                }
                break;
              case 0:
                result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
                break;
              }
              currToken_2667581121 = nimCopy(null, [], NTI33554449);
              }
              
              if (((addInt(i_2667581120[0], 1) < (format_2667579473).length) && (format_2667579473[chckIndx(addInt(i_2667581120[0], 1), 0, (format_2667579473).length - 1)] == 39))) {
              kind_2667579479 = 1;
              token_2667579480 = [39];
              switch (kind_2667579479) {
              case 1:
                switch (toJSStr(token_2667579480)) {
                default: 
                  result_2667579474.patterns.push(37);;
                  if ((255 < (token_2667579480).length)) {
                  raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_2667579474.patterns.push((token_2667579480).length);;
                  Label7: {
                    var c_2667581123 = 0;
                    var i_2667581124 = 0;
                    var L_2667581125 = (token_2667579480).length;
                    Label8: {
                        Label9: while (true) {
                        if (!(i_2667581124 < L_2667581125)) break Label9;
                          c_2667581123 = token_2667579480[chckIndx(i_2667581124, 0, (token_2667579480).length - 1)];
                          result_2667579474.patterns.push(c_2667581123);;
                          i_2667581124 = addInt(i_2667581124, 1);
                          if (!(((token_2667579480).length == L_2667581125))) {
                          failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  break;
                }
                break;
              case 0:
                result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
                break;
              }
              inc_2667577378(i_2667581120, 0, 2);
              }
              else {
                var token_2667581126 = [];
                i_2667581120[0] = addInt(i_2667581120[0], 1);
                Label10: {
                    Label11: while (true) {
                    if (!((i_2667581120[0] < (format_2667579473).length) && !((format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)] == 39)))) break Label11;
                      addChar(token_2667581126, format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)]);;
                      i_2667581120[0] = addInt(i_2667581120[0], 1);
                    }
                };
                if (((format_2667579473).length - 1 < i_2667581120[0])) {
                raiseException({message: [85,110,99,108,111,115,101,100,32,39,32,105,110,32,116,105,109,101,32,102,111,114,109,97,116,32,115,116,114,105,110,103,46,32,70,111,114,32,97,32,108,105,116,101,114,97,108,32,39,44,32,117,115,101,32,39,39,46], parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                }
                
                i_2667581120[0] = addInt(i_2667581120[0], 1);
                kind_2667579479 = 1;
                token_2667579480 = token_2667581126;
                switch (kind_2667579479) {
                case 1:
                  switch (toJSStr(token_2667579480)) {
                  default: 
                    result_2667579474.patterns.push(37);;
                    if ((255 < (token_2667579480).length)) {
                    raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                    }
                    
                    result_2667579474.patterns.push((token_2667579480).length);;
                    Label12: {
                      var c_2667581128 = 0;
                      var i_2667581129 = 0;
                      var L_2667581130 = (token_2667579480).length;
                      Label13: {
                          Label14: while (true) {
                          if (!(i_2667581129 < L_2667581130)) break Label14;
                            c_2667581128 = token_2667579480[chckIndx(i_2667581129, 0, (token_2667579480).length - 1)];
                            result_2667579474.patterns.push(c_2667581128);;
                            i_2667581129 = addInt(i_2667581129, 1);
                            if (!(((token_2667579480).length == L_2667581130))) {
                            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    break;
                  }
                  break;
                case 0:
                  result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
                  break;
                }
              }
              
              break;
            case 32:
            case 40:
            case 41:
            case 44:
            case 45:
            case 47:
            case 58:
            case 91:
            case 93:
              if (!(((currToken_2667581121).length == 0))) {
              kind_2667579479 = 0;
              token_2667579480 = currToken_2667581121;
              switch (kind_2667579479) {
              case 1:
                switch (toJSStr(token_2667579480)) {
                default: 
                  result_2667579474.patterns.push(37);;
                  if ((255 < (token_2667579480).length)) {
                  raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_2667579474.patterns.push((token_2667579480).length);;
                  Label15: {
                    var c_2667581131 = 0;
                    var i_2667581132 = 0;
                    var L_2667581133 = (token_2667579480).length;
                    Label16: {
                        Label17: while (true) {
                        if (!(i_2667581132 < L_2667581133)) break Label17;
                          c_2667581131 = token_2667579480[chckIndx(i_2667581132, 0, (token_2667579480).length - 1)];
                          result_2667579474.patterns.push(c_2667581131);;
                          i_2667581132 = addInt(i_2667581132, 1);
                          if (!(((token_2667579480).length == L_2667581133))) {
                          failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  break;
                }
                break;
              case 0:
                result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
                break;
              }
              currToken_2667581121 = nimCopy(null, [], NTI33554449);
              }
              
              kind_2667579479 = 1;
              token_2667579480 = nimCharToStr(format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)]);
              switch (kind_2667579479) {
              case 1:
                switch (toJSStr(token_2667579480)) {
                default: 
                  result_2667579474.patterns.push(37);;
                  if ((255 < (token_2667579480).length)) {
                  raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_2667579474.patterns.push((token_2667579480).length);;
                  Label18: {
                    var c_2667581134 = 0;
                    var i_2667581135 = 0;
                    var L_2667581136 = (token_2667579480).length;
                    Label19: {
                        Label20: while (true) {
                        if (!(i_2667581135 < L_2667581136)) break Label20;
                          c_2667581134 = token_2667579480[chckIndx(i_2667581135, 0, (token_2667579480).length - 1)];
                          result_2667579474.patterns.push(c_2667581134);;
                          i_2667581135 = addInt(i_2667581135, 1);
                          if (!(((token_2667579480).length == L_2667581136))) {
                          failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  break;
                }
                break;
              case 0:
                result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
                break;
              }
              i_2667581120[0] = addInt(i_2667581120[0], 1);
              break;
            default: 
              if ((((currToken_2667581121).length == 0) || (currToken_2667581121[chckIndx(0, 0, (currToken_2667581121).length - 1)] == format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)]))) {
              addChar(currToken_2667581121, format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)]);;
              i_2667581120[0] = addInt(i_2667581120[0], 1);
              }
              else {
                kind_2667579479 = 0;
                token_2667579480 = currToken_2667581121;
                switch (kind_2667579479) {
                case 1:
                  switch (toJSStr(token_2667579480)) {
                  default: 
                    result_2667579474.patterns.push(37);;
                    if ((255 < (token_2667579480).length)) {
                    raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
                    }
                    
                    result_2667579474.patterns.push((token_2667579480).length);;
                    Label21: {
                      var c_2667581137 = 0;
                      var i_2667581138 = 0;
                      var L_2667581139 = (token_2667579480).length;
                      Label22: {
                          Label23: while (true) {
                          if (!(i_2667581138 < L_2667581139)) break Label23;
                            c_2667581137 = token_2667579480[chckIndx(i_2667581138, 0, (token_2667579480).length - 1)];
                            result_2667579474.patterns.push(c_2667581137);;
                            i_2667581138 = addInt(i_2667581138, 1);
                            if (!(((token_2667579480).length == L_2667581139))) {
                            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    break;
                  }
                  break;
                case 0:
                  result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
                  break;
                }
                currToken_2667581121 = nimCopy(null, nimCharToStr(format_2667579473[chckIndx(i_2667581120[0], 0, (format_2667579473).length - 1)]), NTI33554449);
                i_2667581120[0] = addInt(i_2667581120[0], 1);
              }
              
              break;
            }
          }
      };
      if (!(((currToken_2667581121).length == 0))) {
      kind_2667579479 = 0;
      token_2667579480 = currToken_2667581121;
      switch (kind_2667579479) {
      case 1:
        switch (toJSStr(token_2667579480)) {
        default: 
          result_2667579474.patterns.push(37);;
          if ((255 < (token_2667579480).length)) {
          raiseException({message: ([70,111,114,109,97,116,32,108,105,116,101,114,97,108,32,105,115,32,116,111,32,108,111,110,103,58] || []).concat(token_2667579480 || []), parent: null, m_type: NTI2667578364, name: null, trace: [], up: null}, "TimeFormatParseError");
          }
          
          result_2667579474.patterns.push((token_2667579480).length);;
          Label24: {
            var c_2667581140 = 0;
            var i_2667581141 = 0;
            var L_2667581142 = (token_2667579480).length;
            Label25: {
                Label26: while (true) {
                if (!(i_2667581141 < L_2667581142)) break Label26;
                  c_2667581140 = token_2667579480[chckIndx(i_2667581141, 0, (token_2667579480).length - 1)];
                  result_2667579474.patterns.push(c_2667581140);;
                  i_2667581141 = addInt(i_2667581141, 1);
                  if (!(((token_2667579480).length == L_2667581142))) {
                  failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                  }
                  
                }
            };
          };
          break;
        }
        break;
      case 0:
        result_2667579474.patterns.push(stringToPattern_2667579452(token_2667579480));;
        break;
      }
      currToken_2667581121 = nimCopy(null, [], NTI33554449);
      }
      
    };

  return result_2667579474;

}

function monthday_2667578699(dt_2667578700) {
  var result_2667578701 = 0;

    if (!(!((dt_2667578700.monthdayZero == 0)))) {
    failedAssertImpl_268435541(makeNimstrLit("times.nim(1078, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_2667578701 = dt_2667578700.monthdayZero;

  return result_2667578701;

}

function nsuIntToStr(x_754975568, minchars_754975569) {
  var result_754975570 = [];

    result_754975570 = nimCopy(null, HEX24_385875976(absInt(x_754975568)), NTI33554449);
    Label1: {
      var i_754975575 = 0;
      var colontmp__587203908 = 0;
      colontmp__587203908 = subInt(minchars_754975569, (result_754975570).length);
      var res_587203909 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_587203909 <= colontmp__587203908)) break Label3;
            i_754975575 = res_587203909;
            result_754975570 = nimCopy(null, [48].concat(result_754975570 || []), NTI33554449);
            res_587203909 = addInt(res_587203909, 1);
          }
      };
    };
    if ((x_754975568 < 0)) {
    result_754975570 = nimCopy(null, [45].concat(result_754975570 || []), NTI33554449);
    }
    

  return result_754975570;

}

function HEX2B_2667577366(a_2667577367, b_2667577368) {
  var result_2667577369 = 0;

    result_2667577369 = (a_2667577367 + b_2667577368);

  return result_2667577369;

}

function HEX2D_2667577374(a_2667577375, b_2667577376) {
  var result_2667577377 = 0;

    result_2667577377 = (a_2667577375 - b_2667577376);

  return result_2667577377;

}

function getWeeksInIsoYear_2667577708(y_2667577709) {
    var Temporary1;
    var Temporary2;

  var result_2667577710 = 0;

    var y_2667577711 = y_2667577709;
    if ((y_2667577711 < 0)) {
    Temporary1 = HEX2B_2667577366(400, modInt(y_2667577711, 400));
    }
    else {
    Temporary1 = y_2667577711;
    }
    
    y_2667577711 = Temporary1;
    var p_2667577712 = modInt(HEX2B_2667577366(HEX2D_2667577374(HEX2B_2667577366(y_2667577711, divInt(y_2667577711, 4)), divInt(y_2667577711, 100)), divInt(y_2667577711, 400)), 7);
    var y1_2667577713 = HEX2D_2667577374(y_2667577711, 1);
    var p1_2667577714 = modInt(HEX2B_2667577366(HEX2D_2667577374(HEX2B_2667577366(y1_2667577713, divInt(y1_2667577713, 4)), divInt(y1_2667577713, 100)), divInt(y1_2667577713, 400)), 7);
    if (((p_2667577712 == 4) || (p1_2667577714 == 3))) {
    Temporary2 = 53;
    }
    else {
    Temporary2 = 52;
    }
    
    result_2667577710 = Temporary2;

  return result_2667577710;

}

function getIsoWeekAndYear_2667577750(dt_2667577751) {
    var Temporary1;

  var result_2667577754 = {Field0: 0, Field1: 0};

    var w_2667577755 = divInt(HEX2B_2667577366(HEX2D_2667577374(dt_2667577751.yearday, ((dt_2667577751.weekday) | 0)), 10), 7);
    if ((w_2667577755 < 1)) {
    Temporary1 = {Field0: getWeeksInIsoYear_2667577708(HEX2D_2667577374(dt_2667577751.year, 1)), Field1: HEX2D_2667577374(dt_2667577751.year, 1)};
    }
    else {
    if ((getWeeksInIsoYear_2667577708(dt_2667577751.year) < w_2667577755)) {
    Temporary1 = {Field0: 1, Field1: HEX2B_2667577366(dt_2667577751.year, 1)};
    }
    else {
    Temporary1 = {Field0: nimCopy(null, chckRange(w_2667577755, 1, 53), NTI2667577374), Field1: dt_2667577751.year};
    }
    }
    result_2667577754 = nimCopy(result_2667577754, Temporary1, NTI2667577658);

  return result_2667577754;

}

function month_2667578707(dt_2667578708) {
  var result_2667578709 = 0;

    if (!(!((dt_2667578708.monthdayZero == 0)))) {
    failedAssertImpl_268435541(makeNimstrLit("times.nim(1085, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_2667578709 = dt_2667578708.monthZero;

  return result_2667578709;

}

function HEX2A_2667577354(a_2667577355, b_2667577356) {
  var result_2667577357 = 0n;

    result_2667577357 = (a_2667577355 * b_2667577356);

  return result_2667577357;

}

function convert_2667578152(unitFrom_2667578154, unitTo_2667578155, quantity_2667578156) {
    var Temporary1;

  var result_2667578157 = 0;

    if ((unitFrom_2667578154 < unitTo_2667578155)) {
    Temporary1 = chckRange(Number(divInt64(BigInt(quantity_2667578156), divInt64(unitWeights_2667577494[chckIndx(unitTo_2667578155, 0, (unitWeights_2667577494).length - 1)], unitWeights_2667577494[chckIndx(unitFrom_2667578154, 0, (unitWeights_2667577494).length - 1)]))), 0, 999999999);
    }
    else {
    Temporary1 = chckRange(Number(HEX2A_2667577354(divInt64(unitWeights_2667577494[chckIndx(unitFrom_2667578154, 0, (unitWeights_2667577494).length - 1)], unitWeights_2667577494[chckIndx(unitTo_2667578155, 0, (unitWeights_2667577494).length - 1)]), BigInt(quantity_2667578156))), 0, 999999999);
    }
    
    result_2667578157 = Temporary1;

  return result_2667578157;

}

function HEX3DHEX3D_2667578938(zone1_2667578939, zone2_2667578940) {
  var result_2667578941 = false;

  BeforeRet: {
    if ((zone1_2667578939 == zone2_2667578940)) {
    result_2667578941 = true;
    break BeforeRet;
    }
    
    if (((zone1_2667578939 == null) || (zone2_2667578940 == null))) {
    result_2667578941 = false;
    break BeforeRet;
    }
    
    result_2667578941 = eqStrings(zone1_2667578939.name, zone2_2667578940.name);
  };

  return result_2667578941;

}

function formatPattern_2667579531(dt_2667579532, pattern_2667579533, result_2667579534, result_2667579534_Idx, loc_2667579535) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
          var Temporary8;
          var Temporary9;
      var Temporary10;

    switch (pattern_2667579533) {
    case 0:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(monthday_2667578699(dt_2667579532)));;
      break;
    case 1:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(monthday_2667578699(dt_2667579532), 2));;
      break;
    case 2:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], loc_2667579535.ddd[chckIndx(dt_2667579532.weekday, 0, (loc_2667579535.ddd).length - 1)]);;
      break;
    case 3:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], loc_2667579535.dddd[chckIndx(dt_2667579532.weekday, 0, (loc_2667579535.dddd).length - 1)]);;
      break;
    case 4:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(modInt(getIsoWeekAndYear_2667577750(dt_2667579532).Field1, 100), 2));;
      break;
    case 5:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(getIsoWeekAndYear_2667577750(dt_2667579532).Field1));;
      break;
    case 6:
      if ((dt_2667579532.hour == 0)) {
      Temporary1 = [49,50];
      }
      else {
      if ((12 < dt_2667579532.hour)) {
      Temporary1 = HEX24_385875976(HEX2D_2667577374(dt_2667579532.hour, 12));
      }
      else {
      Temporary1 = HEX24_385875976(dt_2667579532.hour);
      }
      }
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], Temporary1);;
      break;
    case 7:
      if ((dt_2667579532.hour == 0)) {
      Temporary2 = [49,50];
      }
      else {
      if ((12 < dt_2667579532.hour)) {
      Temporary2 = nsuIntToStr(HEX2D_2667577374(dt_2667579532.hour, 12), 2);
      }
      else {
      Temporary2 = nsuIntToStr(dt_2667579532.hour, 2);
      }
      }
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], Temporary2);;
      break;
    case 8:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(dt_2667579532.hour));;
      break;
    case 9:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(dt_2667579532.hour, 2));;
      break;
    case 10:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(dt_2667579532.minute));;
      break;
    case 11:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(dt_2667579532.minute, 2));;
      break;
    case 12:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(month_2667578707(dt_2667579532)));;
      break;
    case 13:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(month_2667578707(dt_2667579532), 2));;
      break;
    case 14:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], loc_2667579535.MMM[chckIndx(month_2667578707(dt_2667579532), 1, (loc_2667579535.MMM).length + (1) - 1) - (1)]);;
      break;
    case 15:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], loc_2667579535.MMMM[chckIndx(month_2667578707(dt_2667579532), 1, (loc_2667579535.MMMM).length + (1) - 1) - (1)]);;
      break;
    case 16:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(dt_2667579532.second));;
      break;
    case 17:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(dt_2667579532.second, 2));;
      break;
    case 18:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(convert_2667578152(0, 2, dt_2667579532.nanosecond), 3));;
      break;
    case 19:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(convert_2667578152(0, 1, dt_2667579532.nanosecond), 6));;
      break;
    case 20:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(dt_2667579532.nanosecond, 9));;
      break;
    case 21:
      if ((12 <= dt_2667579532.hour)) {
      Temporary3 = [80];
      }
      else {
      Temporary3 = [65];
      }
      
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], Temporary3);;
      break;
    case 22:
      if ((12 <= dt_2667579532.hour)) {
      Temporary4 = [80,77];
      }
      else {
      Temporary4 = [65,77];
      }
      
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], Temporary4);;
      break;
    case 23:
      if ((dt_2667579532.year <= 0)) {
      Temporary5 = HEX2B_2667577366(absInt(dt_2667579532.year), 1);
      }
      else {
      Temporary5 = dt_2667579532.year;
      }
      
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(modInt(Temporary5, 100), 2));;
      break;
    case 24:
      if ((dt_2667579532.year <= 0)) {
      Temporary6 = HEX2B_2667577366(absInt(dt_2667579532.year), 1);
      }
      else {
      Temporary6 = dt_2667579532.year;
      }
      
      var year_2667579554 = Temporary6;
      if ((year_2667579554 < 10000)) {
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(year_2667579554, 4));;
      }
      else {
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], [43].concat(HEX24_385875976(year_2667579554) || []));;
      }
      
      break;
    case 25:
      if ((dt_2667579532.year < 1)) {
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(HEX2B_2667577366(absInt(dt_2667579532.year), 1)));;
      }
      else {
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(dt_2667579532.year));;
      }
      
      break;
    case 26:
      var year_2667579555 = dt_2667579532.year;
      if (((year_2667579555 < 10000) || (year_2667579555 < 0))) {
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(year_2667579555, 4));;
      }
      else {
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], [43].concat(HEX24_385875976(year_2667579555) || []));;
      }
      
      break;
    case 27:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(dt_2667579532.year));;
      break;
    case 28:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(getIsoWeekAndYear_2667577750(dt_2667579532).Field0));;
      break;
    case 29:
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(getIsoWeekAndYear_2667577750(dt_2667579532).Field0, 2));;
      break;
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      if ((!(HEX3DHEX3D_2667578938(dt_2667579532.timezone, null)) && eqStrings(dt_2667579532.timezone.name, [69,116,99,47,85,84,67]))) {
      addChar(result_2667579534[result_2667579534_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_2667579532.utcOffset))) {
        Temporary7 = 43;
        }
        else {
        Temporary7 = 45;
        }
        
        addChar(result_2667579534[result_2667579534_Idx], Temporary7);;
        var absOffset_2667579556 = absInt(dt_2667579532.utcOffset);
        switch (pattern_2667579533) {
        case 30:
          result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], HEX24_385875976(divInt(absOffset_2667579556, 3600)));;
          break;
        case 31:
          result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], nsuIntToStr(divInt(absOffset_2667579556, 3600), 2));;
          break;
        case 32:
        case 34:
          var h_2667579557 = nsuIntToStr(divInt(absOffset_2667579556, 3600), 2);
          var m_2667579558 = nsuIntToStr(modInt(divInt(absOffset_2667579556, 60), 60), 2);
          if ((pattern_2667579533 == 32)) {
          Temporary8 = [58];
          }
          else {
          Temporary8 = [];
          }
          
          var sep_2667579564 = nimCopy(null, Temporary8, NTI33554449);
          result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], (h_2667579557 || []).concat(sep_2667579564 || [],m_2667579558 || []));;
          break;
        case 33:
        case 35:
          var absOffset_2667579565 = absInt(dt_2667579532.utcOffset);
          var h_2667579566 = nsuIntToStr(divInt(absOffset_2667579565, 3600), 2);
          var m_2667579567 = nsuIntToStr(modInt(divInt(absOffset_2667579565, 60), 60), 2);
          var s_2667579568 = nsuIntToStr(modInt(absOffset_2667579565, 60), 2);
          if ((pattern_2667579533 == 33)) {
          Temporary9 = [58];
          }
          else {
          Temporary9 = [];
          }
          
          var sep_2667579573 = nimCopy(null, Temporary9, NTI33554449);
          result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], (h_2667579566 || []).concat(sep_2667579573 || [],m_2667579567 || [],sep_2667579573 || [],s_2667579568 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_268435541([116,105,109,101,115,46,110,105,109,40,49,56,57,51,44,32,49,51,41,32,96,102,97,108,115,101,96,32]);
          }
          
          break;
        }
      }
      
      break;
    case 36:
      if ((dt_2667579532.year < 1)) {
      Temporary10 = [66,67];
      }
      else {
      Temporary10 = [65,68];
      }
      
      result_2667579534[result_2667579534_Idx].push.apply(result_2667579534[result_2667579534_Idx], Temporary10);;
      break;
    case 37:
      if (true) {
      failedAssertImpl_268435541([116,105,109,101,115,46,110,105,109,40,49,56,57,54,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }

  
}

function format_2667580871(dt_2667580872, f_2667580873, loc_2667580874) {
  var result_2667580875 = [[]];

    if (!(!((dt_2667580872.monthdayZero == 0)))) {
    failedAssertImpl_268435541([116,105,109,101,115,46,110,105,109,40,50,49,56,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_2667580875[0] = nimCopy(null, [], NTI33554449);
    var idx_2667580881 = 0;
    Label1: {
        Label2: while (true) {
        if (!(idx_2667580881 <= (f_2667580873.patterns).length - 1)) break Label2;
          switch (chckRange(f_2667580873.patterns[chckIndx(idx_2667580881, 0, (f_2667580873.patterns).length - 1)], 0, 37)) {
          case 37:
            idx_2667580881 = addInt(idx_2667580881, 1);
            var len_2667580890 = f_2667580873.patterns[chckIndx(idx_2667580881, 0, (f_2667580873.patterns).length - 1)];
            Label3: {
              var i_2667580902 = 0;
              var res_587203905 = 1;
              Label4: {
                  Label5: while (true) {
                  if (!(res_587203905 <= ((len_2667580890) | 0))) break Label5;
                    i_2667580902 = res_587203905;
                    idx_2667580881 = addInt(idx_2667580881, 1);
                    addChar(result_2667580875[0], f_2667580873.patterns[chckIndx(idx_2667580881, 0, (f_2667580873.patterns).length - 1)]);;
                    res_587203905 = addInt(res_587203905, 1);
                  }
              };
            };
            idx_2667580881 = addInt(idx_2667580881, 1);
            break;
          default: 
            formatPattern_2667579531(dt_2667580872, chckRange(f_2667580873.patterns[chckIndx(idx_2667580881, 0, (f_2667580873.patterns).length - 1)], 0, 37), result_2667580875, 0, loc_2667580874);
            idx_2667580881 = addInt(idx_2667580881, 1);
            break;
          }
        }
    };

  return result_2667580875[0];

}

function format_2667580933(dt_2667580934, f_2667580935, loc_2667580936) {
  var result_2667580937 = [];

    var dtFormat_2667580938 = initTimeFormat_2667579472(f_2667580935);
    result_2667580937 = nimCopy(null, format_2667580871(dt_2667580934, dtFormat_2667580938, loc_2667580936), NTI33554449);

  return result_2667580937;

}

function HEX2B_2667577362(a_2667577363, b_2667577364) {
  var result_2667577365 = 0n;

    result_2667577365 = (a_2667577363 + b_2667577364);

  return result_2667577365;

}

function convert_2667577846(unitFrom_2667577848, unitTo_2667577849, quantity_2667577850) {
    var Temporary1;

  var result_2667577851 = 0n;

    if ((unitFrom_2667577848 < unitTo_2667577849)) {
    Temporary1 = divInt64(quantity_2667577850, divInt64(unitWeights_2667577494[chckIndx(unitTo_2667577849, 0, (unitWeights_2667577494).length - 1)], unitWeights_2667577494[chckIndx(unitFrom_2667577848, 0, (unitWeights_2667577494).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_2667577354(divInt64(unitWeights_2667577494[chckIndx(unitFrom_2667577848, 0, (unitWeights_2667577494).length - 1)], unitWeights_2667577494[chckIndx(unitTo_2667577849, 0, (unitWeights_2667577494).length - 1)]), quantity_2667577850);
    }
    
    result_2667577851 = Temporary1;

  return result_2667577851;

}

function convert_2667577913(unitFrom_2667577915, unitTo_2667577916, quantity_2667577917) {
    var Temporary1;

  var result_2667577918 = 0;

    if ((unitFrom_2667577915 < unitTo_2667577916)) {
    Temporary1 = chckRange(Number(divInt64(BigInt(quantity_2667577917), divInt64(unitWeights_2667577494[chckIndx(unitTo_2667577916, 0, (unitWeights_2667577494).length - 1)], unitWeights_2667577494[chckIndx(unitFrom_2667577915, 0, (unitWeights_2667577494).length - 1)]))), (-2147483648), 2147483647);
    }
    else {
    Temporary1 = chckRange(Number(HEX2A_2667577354(divInt64(unitWeights_2667577494[chckIndx(unitFrom_2667577915, 0, (unitWeights_2667577494).length - 1)], unitWeights_2667577494[chckIndx(unitTo_2667577916, 0, (unitWeights_2667577494).length - 1)]), BigInt(quantity_2667577917))), (-2147483648), 2147483647);
    }
    
    result_2667577918 = Temporary1;

  return result_2667577918;

}

function checkOverflowInt64(a_33557070) {
        if (a_33557070 > 9223372036854775807n || a_33557070 < -9223372036854775808n) raiseOverflow();
  

  
}

function normalize_2667578561(seconds_2667578563, nanoseconds_2667578564) {
  var result_2667578565 = ({seconds: 0n, nanosecond: 0});

    result_2667578565.seconds = HEX2B_2667577362(seconds_2667578563, convert_2667577846(0, 3, nanoseconds_2667578564));
    var nanosecond_2667578576 = modInt64(nanoseconds_2667578564, BigInt(convert_2667577913(3, 0, 1)));
    if ((nanosecond_2667578576 < 0n)) {
    nanosecond_2667578576 = addInt64(nanosecond_2667578576, BigInt(BigInt(convert_2667577913(3, 0, 1))));
    result_2667578565.seconds = subInt64(result_2667578565.seconds, BigInt(1));
    }
    
    result_2667578565.nanosecond = chckRange(chckRange(Number(nanosecond_2667578576), (-2147483648), 2147483647), 0, 999999999);

  return result_2667578565;

}

function HEX2D_2667577370(a_2667577371, b_2667577372) {
  var result_2667577373 = 0n;

    result_2667577373 = (a_2667577371 - b_2667577372);

  return result_2667577373;

}

function ntSubTime(a_2667578591, b_2667578592) {
  var result_2667578593 = ({seconds: 0n, nanosecond: 0});

    result_2667578593 = nimCopy(result_2667578593, normalize_2667578561(HEX2D_2667577370(a_2667578591.seconds, b_2667578592.seconds), BigInt(HEX2D_2667577374(a_2667578591.nanosecond, b_2667578592.nanosecond))), NTI2667577376);

  return result_2667578593;

}

function normalize_2667577903(seconds_2667577905, nanoseconds_2667577906) {
  var result_2667577907 = ({seconds: 0n, nanosecond: 0});

    result_2667577907.seconds = HEX2B_2667577362(seconds_2667577905, convert_2667577846(0, 3, nanoseconds_2667577906));
    var nanosecond_2667577923 = modInt64(nanoseconds_2667577906, BigInt(convert_2667577913(3, 0, 1)));
    if ((nanosecond_2667577923 < 0n)) {
    nanosecond_2667577923 = addInt64(nanosecond_2667577923, BigInt(BigInt(convert_2667577913(3, 0, 1))));
    result_2667577907.seconds = subInt64(result_2667577907.seconds, BigInt(1));
    }
    
    result_2667577907.nanosecond = chckRange(chckRange(Number(nanosecond_2667577923), (-2147483648), 2147483647), 0, 999999999);

  return result_2667577907;

}

function initDuration_2667577836(nanoseconds_2667577837, microseconds_2667577838, milliseconds_2667577839, seconds_2667577840, minutes_2667577841, hours_2667577842, days_2667577843, weeks_2667577844) {
  var result_2667577845 = ({seconds: 0n, nanosecond: 0});

    var seconds_2667577891 = HEX2B_2667577362(HEX2B_2667577362(HEX2B_2667577362(HEX2B_2667577362(HEX2B_2667577362(HEX2B_2667577362(HEX2B_2667577362(convert_2667577846(7, 3, weeks_2667577844), convert_2667577846(6, 3, days_2667577843)), convert_2667577846(4, 3, minutes_2667577841)), convert_2667577846(5, 3, hours_2667577842)), convert_2667577846(3, 3, seconds_2667577840)), convert_2667577846(2, 3, milliseconds_2667577839)), convert_2667577846(1, 3, microseconds_2667577838)), convert_2667577846(0, 3, nanoseconds_2667577837));
    var nanoseconds_2667577902 = chckRange(Number(HEX2B_2667577362(HEX2B_2667577362(convert_2667577846(2, 0, modInt64(milliseconds_2667577839, 1000n)), convert_2667577846(1, 0, modInt64(microseconds_2667577838, 1000000n))), modInt64(nanoseconds_2667577837, 1000000000n))), (-2147483648), 2147483647);
    result_2667577845 = nimCopy(result_2667577845, normalize_2667577903(seconds_2667577891, BigInt(nanoseconds_2667577902)), NTI2667577378);

  return result_2667577845;

}

function floorDiv_2667577667(x_2667577669, y_2667577670) {
  var result_2667577671 = 0n;

    result_2667577671 = x_2667577669 / y_2667577670;
    var r_2667577672 = x_2667577669 % y_2667577670;
    if ((((0n < r_2667577672) && (y_2667577670 < 0n)) || ((r_2667577672 < 0n) && (0n < y_2667577670)))) {
    result_2667577671 = BigInt.asIntN(64, result_2667577671 - BigInt(1));
    }
    

  return result_2667577671;

}

function inc_2667577386(a_2667577387, a_2667577387_Idx, b_2667577388) {
    a_2667577387[a_2667577387_Idx] = BigInt.asIntN(64, a_2667577387[a_2667577387_Idx] + BigInt(b_2667577388));

  
}

function fromEpochDay_2667577570(epochday_2667577571) {
    var Temporary1;
    var Temporary2;

  var result_2667577575 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_2667577576 = [epochday_2667577571];
    inc_2667577386(z_2667577576, 0, 719468);
    if ((0n <= z_2667577576[0])) {
    Temporary1 = z_2667577576[0];
    }
    else {
    Temporary1 = HEX2D_2667577370(z_2667577576[0], 146096n);
    }
    
    var era_2667577577 = divInt64(Temporary1, 146097n);
    var doe_2667577578 = HEX2D_2667577370(z_2667577576[0], HEX2A_2667577354(era_2667577577, 146097n));
    var yoe_2667577579 = divInt64(HEX2D_2667577370(HEX2B_2667577362(HEX2D_2667577370(doe_2667577578, divInt64(doe_2667577578, 1460n)), divInt64(doe_2667577578, 36524n)), divInt64(doe_2667577578, 146096n)), 365n);
    var y_2667577580 = HEX2B_2667577362(yoe_2667577579, HEX2A_2667577354(era_2667577577, 400n));
    var doy_2667577581 = HEX2D_2667577370(doe_2667577578, HEX2D_2667577370(HEX2B_2667577362(HEX2A_2667577354(365n, yoe_2667577579), divInt64(yoe_2667577579, 4n)), divInt64(yoe_2667577579, 100n)));
    var mp_2667577582 = divInt64(HEX2B_2667577362(HEX2A_2667577354(5n, doy_2667577581), 2n), 153n);
    var d_2667577583 = HEX2B_2667577362(HEX2D_2667577370(doy_2667577581, divInt64(HEX2B_2667577362(HEX2A_2667577354(153n, mp_2667577582), 2n), 5n)), 1n);
    if ((mp_2667577582 < 10n)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = (-9);
    }
    
    var m_2667577584 = HEX2B_2667577362(mp_2667577582, BigInt(Temporary2));
    var colontmp__587203911 = chckRange(Number(d_2667577583), 1, 31);
    var colontmp__587203912 = chckRange(Number(m_2667577584), 1, 12);
    var colontmp__587203913 = chckRange(Number(HEX2B_2667577362(y_2667577580, BigInt(((m_2667577584 <= 2n) ? 1 : 0)))), (-2147483648), 2147483647);
    result_2667577575 = nimCopy(result_2667577575, {Field0: nimCopy(null, colontmp__587203911, NTI2667577368), Field1: colontmp__587203912, Field2: colontmp__587203913}, NTI2667577537);
    break BeforeRet;
  };

  return result_2667577575;

}

function isLeapYear_2667577514(year_2667577515) {
  var result_2667577516 = false;

    result_2667577516 = ((modInt(year_2667577515, 4) == 0) && (!((modInt(year_2667577515, 100) == 0)) || (modInt(year_2667577515, 400) == 0)));

  return result_2667577516;

}

function getDaysInMonth_2667577517(month_2667577518, year_2667577519) {
      var Temporary1;

  var result_2667577520 = 0;

    switch (month_2667577518) {
    case 2:
      if (isLeapYear_2667577514(year_2667577519)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_2667577520 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_2667577520 = 30;
      break;
    default: 
      result_2667577520 = 31;
      break;
    }

  return result_2667577520;

}

function assertValidDate_2667577521(monthday_2667577522, month_2667577523, year_2667577524) {
    if (!((monthday_2667577522 <= getDaysInMonth_2667577517(month_2667577523, year_2667577524)))) {
    failedAssertImpl_268435541(([116,105,109,101,115,46,110,105,109,40,52,55,55,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_385875976(year_2667577524) || [],[45] || [],nsuIntToStr(month_2667577523, 2) || [],[45] || [],HEX24_385875976(monthday_2667577522) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_2667577358(a_2667577359, b_2667577360) {
  var result_2667577361 = 0;

    result_2667577361 = (a_2667577359 * b_2667577360);

  return result_2667577361;

}

function toEpochDay_2667577550(monthday_2667577551, month_2667577552, year_2667577553) {
    var Temporary1;
    var Temporary2;

  var result_2667577554 = 0n;

  BeforeRet: {
    assertValidDate_2667577521(monthday_2667577551, month_2667577552, year_2667577553);
    var y_2667577558 = year_2667577553;
    var m_2667577559 = month_2667577552;
    var d_2667577560 = monthday_2667577551;
    if ((m_2667577559 <= 2)) {
    y_2667577558 = subInt(y_2667577558, 1);
    }
    
    if ((0 <= y_2667577558)) {
    Temporary1 = y_2667577558;
    }
    else {
    Temporary1 = HEX2D_2667577374(y_2667577558, 399);
    }
    
    var era_2667577566 = divInt(Temporary1, 400);
    var yoe_2667577567 = HEX2D_2667577374(y_2667577558, HEX2A_2667577358(era_2667577566, 400));
    if ((2 < m_2667577559)) {
    Temporary2 = (-3);
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_2667577568 = HEX2D_2667577374(HEX2B_2667577366(divInt(HEX2B_2667577366(HEX2A_2667577358(153, HEX2B_2667577366(m_2667577559, Temporary2)), 2), 5), d_2667577560), 1);
    var doe_2667577569 = HEX2B_2667577366(HEX2D_2667577374(HEX2B_2667577366(HEX2A_2667577358(yoe_2667577567, 365), divInt(yoe_2667577567, 4)), divInt(yoe_2667577567, 100)), doy_2667577568);
    result_2667577554 = BigInt(HEX2D_2667577374(HEX2B_2667577366(HEX2A_2667577358(era_2667577566, 146097), doe_2667577569), 719468));
    break BeforeRet;
  };

  return result_2667577554;

}

function getDayOfWeek_2667577661(monthday_2667577662, month_2667577663, year_2667577664) {
    var Temporary1;

  var result_2667577665 = 0;

    assertValidDate_2667577521(monthday_2667577662, month_2667577663, year_2667577664);
    var days_2667577666 = HEX2D_2667577370(toEpochDay_2667577550(monthday_2667577662, month_2667577663, year_2667577664), 3n);
    var weeks_2667577678 = floorDiv_2667577667(days_2667577666, 7n);
    var wd_2667577679 = HEX2D_2667577370(days_2667577666, HEX2A_2667577354(weeks_2667577678, 7n));
    if ((wd_2667577679 == 0n)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(Number(HEX2D_2667577370(wd_2667577679, 1n)), 0, 6);
    }
    
    result_2667577665 = Temporary1;

  return result_2667577665;

}

function getDayOfYear_2667577622(monthday_2667577623, month_2667577624, year_2667577625) {
  var result_2667577626 = 0;

    assertValidDate_2667577521(monthday_2667577623, month_2667577624, year_2667577625);
    if (isLeapYear_2667577514(year_2667577625)) {
    result_2667577626 = chckRange(HEX2D_2667577374(HEX2B_2667577366(daysUntilMonthLeap_2667577628[chckIndx(month_2667577624, 1, (daysUntilMonthLeap_2667577628).length + (1) - 1) - (1)], monthday_2667577623), 1), 0, 365);
    }
    else {
      result_2667577626 = chckRange(HEX2D_2667577374(HEX2B_2667577366(daysUntilMonth_2667577627[chckIndx(month_2667577624, 1, (daysUntilMonth_2667577627).length + (1) - 1) - (1)], monthday_2667577623), 1), 0, 365);
    }
    

  return result_2667577626;

}

function initDateTime_2667578813(zt_2667578814, zone_2667578815) {
  var result_2667578816 = ({m_type: NTI2667577377, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_2667578817 = ntSubTime(zt_2667578814.time, initDuration_2667577836(0n, 0n, 0n, BigInt(zt_2667578814.utcOffset), 0n, 0n, 0n, 0n));
    var s_2667578818 = adjTime_2667578817.seconds;
    var epochday_2667578823 = floorDiv_2667577667(s_2667578818, 86400n);
    var rem_2667578824 = HEX2D_2667577370(s_2667578818, HEX2A_2667577354(epochday_2667578823, 86400n));
    var hour_2667578825 = divInt64(rem_2667578824, 3600n);
    rem_2667578824 = HEX2D_2667577370(rem_2667578824, HEX2A_2667577354(hour_2667578825, 3600n));
    var minute_2667578826 = divInt64(rem_2667578824, 60n);
    rem_2667578824 = HEX2D_2667577370(rem_2667578824, HEX2A_2667577354(minute_2667578826, 60n));
    var second_2667578827 = rem_2667578824;
    var tmpTuple_2667578828 = fromEpochDay_2667577570(epochday_2667578823);
    var d_2667578829 = tmpTuple_2667578828["Field0"];
    var m_2667578830 = tmpTuple_2667578828["Field1"];
    var y_2667578831 = tmpTuple_2667578828["Field2"];
    result_2667578816 = nimCopy(result_2667578816, {year: y_2667578831, monthZero: ((m_2667578830) | 0), monthdayZero: d_2667578829, hour: nimCopy(null, chckRange(Number(hour_2667578825), 0, 23), NTI2667577369), minute: nimCopy(null, chckRange(Number(minute_2667578826), 0, 59), NTI2667577370), second: nimCopy(null, chckRange(Number(second_2667578827), 0, 60), NTI2667577371), nanosecond: nimCopy(null, zt_2667578814.time.nanosecond, NTI2667577373), weekday: getDayOfWeek_2667577661(d_2667578829, m_2667578830, y_2667578831), yearday: getDayOfYear_2667577622(d_2667578829, m_2667578830, y_2667578831), isDst: zt_2667578814.isDst, timezone: zone_2667578815, utcOffset: zt_2667578814.utcOffset, m_type: NTI2667577377}, NTI2667577377);

  return result_2667578816;

}

function zonedTimeFromTime_2667578902(zone_2667578903, time_2667578904) {
  var result_2667578905 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_2667578905 = nimCopy(result_2667578905, zone_2667578903.zonedTimeFromTimeImpl(time_2667578904), NTI2667577383);

  return result_2667578905;

}

function inZone_2667578952(time_2667578953, zone_2667578954) {
  var result_2667578955 = ({m_type: NTI2667577377, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_2667578955 = nimCopy(result_2667578955, initDateTime_2667578813(zonedTimeFromTime_2667578902(zone_2667578954, time_2667578953), zone_2667578954), NTI2667577377);

  return result_2667578955;

}

function newTimezone_2667578859(name_2667578860, zonedTimeFromTimeImpl_2667578863, zonedTimeFromAdjTimeImpl_2667578866) {
  var result_2667578867 = null;

    result_2667578867 = {name: nimCopy(null, name_2667578860, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_2667578863, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_2667578866};

  return result_2667578867;

}

function localZonedTimeFromTime_2667578970(time_2667578971) {
  var result_2667578972 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_2667578973 = new Date(Number(HEX2A_2667577354(time_2667578971.seconds, 1000n)));
    var offset_2667578974 = HEX2A_2667577358(jsDate_2667578973.getTimezoneOffset(), 60);
    result_2667578972.time = nimCopy(result_2667578972.time, time_2667578971, NTI2667577376);
    result_2667578972.utcOffset = offset_2667578974;
    result_2667578972.isDst = false;

  return result_2667578972;

}

function contains_1140850918(s_1140850922, value_1140850923) {
  var result_1140850924 = false;

    result_1140850924 = ((s_1140850922.a <= value_1140850923) && (value_1140850923 <= s_1140850922.b));

  return result_1140850924;

}

function ntAddTime(a_2667578555, b_2667578556) {
  var result_2667578557 = ({seconds: 0n, nanosecond: 0});

    result_2667578557 = nimCopy(result_2667578557, normalize_2667578561(HEX2B_2667577362(a_2667578555.seconds, b_2667578556.seconds), BigInt(HEX2B_2667577366(a_2667578555.nanosecond, b_2667578556.nanosecond))), NTI2667577376);

  return result_2667578557;

}

function localZonedTimeFromAdjTime_2667578975(adjTime_2667578976) {
  var result_2667578977 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_2667578978 = new Date(Number(HEX2A_2667577354(adjTime_2667578976.seconds, 1000n)));
    var localDate_2667578979 = new Date(utcDate_2667578978.getUTCFullYear(),utcDate_2667578978.getUTCMonth(),utcDate_2667578978.getUTCDate(),utcDate_2667578978.getUTCHours(),utcDate_2667578978.getUTCMinutes(),utcDate_2667578978.getUTCSeconds(),0);
    if (contains_1140850918(HEX2EHEX2E_1056964656(0, 99), utcDate_2667578978.getUTCFullYear())) {
    localDate_2667578979.setFullYear(utcDate_2667578978.getUTCFullYear());
    }
    
    result_2667578977.utcOffset = HEX2A_2667577358(localDate_2667578979.getTimezoneOffset(), 60);
    result_2667578977.time = nimCopy(result_2667578977.time, ntAddTime(adjTime_2667578976, initDuration_2667577836(0n, 0n, 0n, BigInt(result_2667578977.utcOffset), 0n, 0n, 0n, 0n)), NTI2667577376);
    result_2667578977.isDst = false;

  return result_2667578977;

}

function local_2667579019() {
  var result_2667579020 = null;

    if ((localInstance_2667578997[0] == null)) {
    localInstance_2667578997[0] = newTimezone_2667578859([76,79,67,65,76], localZonedTimeFromTime_2667578970, localZonedTimeFromAdjTime_2667578975);
    }
    
    result_2667579020 = localInstance_2667578997[0];

  return result_2667579020;

}

function local_2667579033(t_2667579034) {
  var result_2667579035 = ({m_type: NTI2667577377, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_2667579035 = nimCopy(result_2667579035, inZone_2667578952(t_2667579034, local_2667579019()), NTI2667577377);

  return result_2667579035;

}

function initTime_2667578425(unix_2667578426, nanosecond_2667578427) {
  var result_2667578428 = ({seconds: 0n, nanosecond: 0});

    result_2667578428.seconds = unix_2667578426;
    result_2667578428.nanosecond = nanosecond_2667578427;

  return result_2667578428;

}

function getTime_2667578503() {
  var result_2667578504 = ({seconds: 0n, nanosecond: 0});

    var millis_2667578509 = new Date().getTime();
    var seconds_2667578515 = convert_2667577913(2, 3, millis_2667578509);
    var nanos_2667578526 = convert_2667577913(2, 0, modInt(millis_2667578509, convert_2667577913(3, 2, 1)));
    result_2667578504 = nimCopy(result_2667578504, initTime_2667578425(BigInt(seconds_2667578515), chckRange(nanos_2667578526, 0, 999999999)), NTI2667577376);

  return result_2667578504;

}

function now_2667579036() {
  var result_2667579037 = ({m_type: NTI2667577377, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_2667579037 = nimCopy(result_2667579037, local_2667579033(getTime_2667578503()), NTI2667577377);

  return result_2667579037;

}

function pikchr_2164260866(text_2164260867, darkMode_2164260868) {
  var result_2164260869 = [];

    raiseException({message: [80,105,107,99,104,114,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,119,104,101,110,32,117,115,105,110,103,32,74,97,118,97,83,99,114,105,112,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_2164260869;

}

function proofCommands_2264928819(doc_2264928820) {

function dotLeftCmd_2264928828(arg_2264928829) {
    var Temporary1;

  var result_2264928830 = [];

    switch (doc_2264928820.target) {
    case 0:
      Temporary1 = ([60,100,105,118,32,99,108,97,115,115,61,34,120,100,45,115,117,98,112,114,111,111,102,34,62] || []).concat(renderMath_2264927107(doc_2264928820, [40,92,76,101,102,116,97,114,114,111,119,41], false, true) || [],[32] || [],arg_2264928829 || [],[60,47,100,105,118,62] || []);
      break;
    case 1:
      Temporary1 = ([92,112,97,114,92,40,40,92,76,101,102,116,97,114,114,111,119,41,92,41,32] || []).concat(arg_2264928829 || []);
      break;
    default: 
      Temporary1 = [];
      break;
    }
    result_2264928830 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264928830;

}
    
function HEX3Aanonymous_2264928836(arg_2264928837) {
      var result_2264928838 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264928820.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [46,60]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264928827 = expandArguments_2197815314(doc_2264928820, [46,60], arg_2264928837, [HEX21_1593835705(1)]);
        result_2264928838 = nimCopy(result_2264928838, {typ: 1, str: dotLeftCmd_2264928828(to_2181038173(vals_2264928827[chckIndx(0, 0, (vals_2264928827).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264928838;

    }

function dotRightCmd_2264928894(arg_2264928895) {
    var Temporary1;

  var result_2264928896 = [];

    switch (doc_2264928820.target) {
    case 0:
      Temporary1 = ([60,100,105,118,32,99,108,97,115,115,61,34,120,100,45,115,117,98,112,114,111,111,102,34,62] || []).concat(renderMath_2264927107(doc_2264928820, [40,92,82,105,103,104,116,97,114,114,111,119,41], false, true) || [],[32] || [],arg_2264928895 || [],[60,47,100,105,118,62] || []);
      break;
    case 1:
      Temporary1 = ([92,112,97,114,92,40,40,92,82,105,103,104,116,97,114,114,111,119,41,92,41,32] || []).concat(arg_2264928895 || []);
      break;
    default: 
      Temporary1 = [];
      break;
    }
    result_2264928896 = nimCopy(null, Temporary1, NTI33554449);

  return result_2264928896;

}
    
function HEX3Aanonymous_2264928902(arg_2264928903) {
      var result_2264928904 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2264928820.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [46,62]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2264928893 = expandArguments_2197815314(doc_2264928820, [46,62], arg_2264928903, [HEX21_1593835705(1)]);
        result_2264928904 = nimCopy(result_2264928904, {typ: 1, str: dotRightCmd_2264928894(to_2181038173(vals_2264928893[chckIndx(0, 0, (vals_2264928893).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2264928904;

    }

  var result_2264928823 = ({data: [], counter: 0});

    var commands_2264928826 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_2264928826[0], [46,60], HEX3Aanonymous_2264928836);
    HEX5BHEX5DHEX3D_2181038249(commands_2264928826[0], [46,62], HEX3Aanonymous_2264928902);
    result_2264928823 = nimCopy(result_2264928823, commands_2264928826[0], NTI1593835562);

  return result_2264928823;

}

function xidocWarning_1543503885(msge_1543503886) {
  
}

function nsuStrip(s_754977242, leading_754977243, trailing_754977244, chars_754977245) {
  var result_754977246 = [];

    var first_754977247 = 0;
    var last_754977248 = subInt((s_754977242).length, 1);
    if (leading_754977243) {
    Label1: {
        Label2: while (true) {
        if (!((first_754977247 <= last_754977248) && (chars_754977245[s_754977242[chckIndx(first_754977247, 0, (s_754977242).length - 1)]] != undefined))) break Label2;
          first_754977247 = addInt(first_754977247, 1);
        }
    };
    }
    
    if (trailing_754977244) {
    Label3: {
        Label4: while (true) {
        if (!((first_754977247 <= last_754977248) && (chars_754977245[s_754977242[chckIndx(last_754977248, 0, (s_754977242).length - 1)]] != undefined))) break Label4;
          last_754977248 = subInt(last_754977248, 1);
        }
    };
    }
    
    result_754977246 = nimCopy(null, substr_33558079(s_754977242, first_754977247, last_754977248), NTI33554449);

  return result_754977246;

}

function nsuUnindent(s_754975965, count_754975970, padding_754975971) {
            var Temporary6;

  var result_754975972 = [];

    result_754975972 = nimCopy(null, [], NTI33554449);
    var i_754975973 = 0;
    Label1: {
      var line_754975974 = [];
      var first_587203929 = 0;
      var last_587203930 = 0;
      var eolpos_587203931 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_587203930 < (s_754975965).length) && !((ConstSet416[s_754975965[chckIndx(last_587203930, 0, (s_754975965).length - 1)]] != undefined)))) break Label5;
                  last_587203930 = addInt(last_587203930, 1);
                }
            };
            eolpos_587203931 = last_587203930;
            if ((last_587203930 < (s_754975965).length)) {
            if ((s_754975965[chckIndx(last_587203930, 0, (s_754975965).length - 1)] == 10)) {
            last_587203930 = addInt(last_587203930, 1);
            }
            else {
            if ((s_754975965[chckIndx(last_587203930, 0, (s_754975965).length - 1)] == 13)) {
            last_587203930 = addInt(last_587203930, 1);
            if (((last_587203930 < (s_754975965).length) && (s_754975965[chckIndx(last_587203930, 0, (s_754975965).length - 1)] == 10))) {
            last_587203930 = addInt(last_587203930, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_587203930, 1);
            }
            else {
            Temporary6 = subInt(eolpos_587203931, 1);
            }
            
            line_754975974 = substr_33558079(s_754975965, first_587203929, Temporary6);
            if (!((i_754975973 == 0))) {
            result_754975972.push.apply(result_754975972, [10]);;
            }
            
            var indentCount_754975975 = 0;
            Label7: {
              var j_754975980 = 0;
              var colontmp__587203926 = 0;
              colontmp__587203926 = count_754975970;
              var i_587203927 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_587203927 < colontmp__587203926)) break Label9;
                    j_754975980 = i_587203927;
                    indentCount_754975975 = addInt(indentCount_754975975, 1);
                    if ((((line_754975974).length <= subInt(addInt(j_754975980, (padding_754975971).length), 1)) || !(eqStrings(HEX5BHEX5D_754975999(line_754975974, HEX2EHEX2E_1056964656(j_754975980, subInt(addInt(j_754975980, (padding_754975971).length), 1))), padding_754975971)))) {
                    indentCount_754975975 = j_754975980;
                    break Label7;
                    }
                    
                    i_587203927 = addInt(i_587203927, 1);
                  }
              };
            };
            result_754975972.push.apply(result_754975972, HEX5BHEX5D_754976027(line_754975974, HEX2EHEX2E_973078632(mulInt(indentCount_754975975, (padding_754975971).length), 1)));;
            i_754975973 = addInt(i_754975973, 1);
            if ((eolpos_587203931 == last_587203930)) {
            break Label2;
            }
            
            first_587203929 = last_587203930;
          }
      };
    };

  return result_754975972;

}

function nsuDedent(s_754976070, count_754976071) {
  var result_754976072 = [];

    result_754976072 = nimCopy(null, nsuUnindent(s_754976070, count_754976071, [32]), NTI33554449);

  return result_754976072;

}

function indentation_754976051(s_754976052) {
            var Temporary6;

  var result_754976053 = 0;

    result_754976053 = 2147483647;
    Label1: {
      var line_754976058 = [];
      var first_587203940 = 0;
      var last_587203941 = 0;
      var eolpos_587203942 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_587203941 < (s_754976052).length) && !((ConstSet417[s_754976052[chckIndx(last_587203941, 0, (s_754976052).length - 1)]] != undefined)))) break Label5;
                  last_587203941 = addInt(last_587203941, 1);
                }
            };
            eolpos_587203942 = last_587203941;
            if ((last_587203941 < (s_754976052).length)) {
            if ((s_754976052[chckIndx(last_587203941, 0, (s_754976052).length - 1)] == 10)) {
            last_587203941 = addInt(last_587203941, 1);
            }
            else {
            if ((s_754976052[chckIndx(last_587203941, 0, (s_754976052).length - 1)] == 13)) {
            last_587203941 = addInt(last_587203941, 1);
            if (((last_587203941 < (s_754976052).length) && (s_754976052[chckIndx(last_587203941, 0, (s_754976052).length - 1)] == 10))) {
            last_587203941 = addInt(last_587203941, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_587203941, 1);
            }
            else {
            Temporary6 = subInt(eolpos_587203942, 1);
            }
            
            line_754976058 = substr_33558079(s_754976052, first_587203940, Temporary6);
            Label7: {
              var i_754976059 = 0;
              var c_754976060 = 0;
              var i_587203937 = 0;
              var L_587203938 = (line_754976058).length;
              Label8: {
                  Label9: while (true) {
                  if (!(i_587203937 < L_587203938)) break Label9;
                    i_754976059 = i_587203937;
                    c_754976060 = line_754976058[chckIndx(i_587203937, 0, (line_754976058).length - 1)];
                    if ((result_754976053 <= i_754976059)) {
                    break Label7;
                    }
                    else {
                    if (!((c_754976060 == 32))) {
                    result_754976053 = chckRange(i_754976059, 0, 2147483647);
                    break Label7;
                    }
                    }
                    i_587203937 = addInt(i_587203937, 1);
                    if (!(((line_754976058).length == L_587203938))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
                    }
                    
                  }
              };
            };
            if ((eolpos_587203942 == last_587203941)) {
            break Label2;
            }
            
            first_587203940 = last_587203941;
          }
      };
    };
    if ((result_754976053 == 2147483647)) {
    result_754976053 = 0;
    }
    

  return result_754976053;

}

function hasKey_1476409767(t_1476409770, key_1476409771) {
  var result_1476409772 = false;

    var hc_1476409773 = [0];
    result_1476409772 = (0 <= rawGet_1476398654(t_1476409770, key_1476409771, hc_1476409773, 0));

  return result_1476409772;

}

function contains_1476409761(t_1476409764, key_1476409765) {
  var result_1476409766 = false;

  BeforeRet: {
    result_1476409766 = hasKey_1476409767(t_1476409764, key_1476409765);
    break BeforeRet;
  };

  return result_1476409766;

}

function HEX5BHEX5D_1476409852(t_1476409855, key_1476409856) {
  var result_1476409857 = null;

    var hcHEX60gensym22_1476409858 = [0];
    var indexHEX60gensym22_1476409865 = rawGet_1476398654(t_1476409855, key_1476409856, hcHEX60gensym22_1476409858, 0);
    if ((0 <= indexHEX60gensym22_1476409865)) {
    result_1476409857 = t_1476409855.data[chckIndx(indexHEX60gensym22_1476409865, 0, (t_1476409855.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1660944714(key_1476409856);
    }
    

  return result_1476409857;

}

function nsuRemoveSuffixString(s_754976266, s_754976266_Idx, suffix_754976267) {
    var newLen_754976268 = (s_754976266[s_754976266_Idx]).length;
    if (nsuEndsWith(s_754976266[s_754976266_Idx], suffix_754976267)) {
    newLen_754976268 = subInt(newLen_754976268, (suffix_754976267).length);
    if (s_754976266[s_754976266_Idx].length < chckRange(newLen_754976268, 0, 2147483647)) { for (var i = s_754976266[s_754976266_Idx].length; i < chckRange(newLen_754976268, 0, 2147483647); ++i) s_754976266[s_754976266_Idx].push(0); }
         else {s_754976266[s_754976266_Idx].length = chckRange(newLen_754976268, 0, 2147483647); };
    }
    

  
}

function isSome_2197816537(self_2197816539) {
  var result_2197816540 = false;

    result_2197816540 = !((self_2197816539.val == null));

  return result_2197816540;

}

function isNone_2197816565(self_2197816567) {
  var result_2197816568 = false;

    result_2197816568 = (self_2197816567.val == null);

  return result_2197816568;

}

function get_2197816557(self_2197816559) {
  var result_2197816560 = null;

    if (isNone_2197816565(self_2197816559)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1358954516, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2197816560 = self_2197816559["val"];

  return result_2197816560;

}

function some_2197816642(val_2197816644) {
  var result_2197816645 = ({val: null});

    if (!(!((val_2197816644 == null)))) {
    failedAssertImpl_268435541([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2197816645.val = val_2197816644;

  return result_2197816645;

}

function addTableOfContentsEntry_2197816515(doc_2197816516, text_2197816517) {
    
function HEX3Aanonymous_2197816521() {
      var result_2197816522 = null;

      BeforeRet: {
        Label1: {
          var iHEX60gensym37_2197816531 = 0;
          var colontmp__587203946 = 0;
          colontmp__587203946 = subInt((doc_2197816516.stack).length, 1);
          var res_587203947 = colontmp__587203946;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203947)) break Label3;
                iHEX60gensym37_2197816531 = res_587203947;
                var frameHEX60gensym37_2197816532 = nimCopy(null, doc_2197816516.stack[chckIndx(iHEX60gensym37_2197816531, 0, (doc_2197816516.stack).length - 1)], NTI1593835535);
                if (isSome_2197816537(frameHEX60gensym37_2197816532.tableOfContentsEntry)) {
                result_2197816522 = get_2197816557(frameHEX60gensym37_2197816532.tableOfContentsEntry);
                break BeforeRet;
                }
                
                res_587203947 = subInt(res_587203947, 1);
              }
          };
        };
      };

      return result_2197816522;

    }

    var entry_2197816518 = {text: nimCopy(null, text_2197816517, NTI33554449), children: []};
    var parent_2197816606 = HEX3Aanonymous_2197816521();
    if ((parent_2197816606 == null)) {
    doc_2197816516.tableOfContents.push(entry_2197816518);;
    }
    else {
    parent_2197816606.children.push(entry_2197816518);;
    }
    
    HEX5BHEX5D_2197816618(doc_2197816516.stack, 1).tableOfContentsEntry = nimCopy(HEX5BHEX5D_2197816618(doc_2197816516.stack, 1).tableOfContentsEntry, some_2197816642(entry_2197816518), NTI1593835625);

  
}

function nsuNormalize(s_754974875) {
  var result_754974876 = [];

    result_754974876 = nimCopy(null, mnewString(chckRange((s_754974875).length, 0, 2147483647)), NTI33554449);
    var j_754974877 = 0;
    Label1: {
      var i_754974882 = 0;
      var colontmp__2181038149 = 0;
      colontmp__2181038149 = subInt((s_754974875).length, 1);
      var res_2181038150 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2181038150 <= colontmp__2181038149)) break Label3;
            i_754974882 = res_2181038150;
            if ((ConstSet418[s_754974875[chckIndx(i_754974882, 0, (s_754974875).length - 1)]] != undefined)) {
            result_754974876[chckIndx(j_754974877, 0, (result_754974876).length - 1)] = chckRange(addInt(s_754974875[chckIndx(i_754974882, 0, (s_754974875).length - 1)], 32), 0, 255);
            j_754974877 = addInt(j_754974877, 1);
            }
            else {
            if (!((s_754974875[chckIndx(i_754974882, 0, (s_754974875).length - 1)] == 95))) {
            result_754974876[chckIndx(j_754974877, 0, (result_754974876).length - 1)] = s_754974875[chckIndx(i_754974882, 0, (s_754974875).length - 1)];
            j_754974877 = addInt(j_754974877, 1);
            }
            }
            res_2181038150 = addInt(res_2181038150, 1);
          }
      };
    };
    if (!((j_754974877 == (s_754974875).length))) {
    if (result_754974876.length < chckRange(j_754974877, 0, 2147483647)) { for (var i = result_754974876.length; i < chckRange(j_754974877, 0, 2147483647); ++i) result_754974876.push(0); }
         else {result_754974876.length = chckRange(j_754974877, 0, 2147483647); };
    }
    

  return result_754974876;

}

function parseBool_754975827(s_754975828) {
  var result_754975829 = false;

    switch (toJSStr(nsuNormalize(s_754975828))) {
    case "y":
    case "yes":
    case "true":
    case "1":
    case "on":
      result_754975829 = true;
      break;
    case "n":
    case "no":
    case "false":
    case "0":
    case "off":
      result_754975829 = false;
      break;
    default: 
      raiseException({message: ([99,97,110,110,111,116,32,105,110,116,101,114,112,114,101,116,32,97,115,32,97,32,98,111,111,108,58,32] || []).concat(s_754975828 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_754975829;

}

function nuctoLowerStr(s_1040189725) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_1040189726 = [];

    result_1040189726 = nimCopy(null, mnewString(chckRange((s_1040189725).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_1040189733 = 0;
    var resultIndexHEX60gensym252_1040189734 = 0;
    var runeHEX60gensym252_1040189735 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_1040189733 < (s_1040189725).length)) break Label2;
          if ((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] <= 127)) {
          runeHEX60gensym252_1040189735 = chckRange(s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)], (-2147483648), 2147483647);
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 2))) {
          runeHEX60gensym252_1040189735 = chckRange(((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 2);
          }
          else {
            runeHEX60gensym252_1040189735 = 65533;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 3))) {
          runeHEX60gensym252_1040189735 = chckRange(((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 3);
          }
          else {
            runeHEX60gensym252_1040189735 = 65533;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 4))) {
          runeHEX60gensym252_1040189735 = chckRange(((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 4);
          }
          else {
            runeHEX60gensym252_1040189735 = 65533;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 5))) {
          runeHEX60gensym252_1040189735 = chckRange(((((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 4), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 5);
          }
          else {
            runeHEX60gensym252_1040189735 = 65533;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
          if (((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_1040189733 <= subInt((s_1040189725).length, 6))) {
          runeHEX60gensym252_1040189735 = chckRange(((((((((((((((s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 1), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 2), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 3), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 4), 0, (s_1040189725).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1040189725[chckIndx(addInt(iHEX60gensym252_1040189733, 5), 0, (s_1040189725).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 6);
          }
          else {
            runeHEX60gensym252_1040189735 = 65533;
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          
          }
          else {
            runeHEX60gensym252_1040189735 = chckRange(s_1040189725[chckIndx(iHEX60gensym252_1040189733, 0, (s_1040189725).length - 1)], (-2147483648), 2147483647);
            iHEX60gensym252_1040189733 = addInt(iHEX60gensym252_1040189733, 1);
          }
          }}}}}
          runeHEX60gensym252_1040189735 = nuctoLower(runeHEX60gensym252_1040189735);
          var iHEX60gensym274_1040189976 = runeHEX60gensym252_1040189735;
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 127)) {
          if (result_1040189726.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, 2147483647), Temporary3)) { for (var i = result_1040189726.length; i < Temporary3; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary3; };
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(iHEX60gensym274_1040189976, 0, 255);
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2047)) {
          if (result_1040189726.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, 2147483647), Temporary4)) { for (var i = result_1040189726.length; i < Temporary4; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary4; };
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 6) | 192), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 65535)) {
          if (result_1040189726.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, 2147483647), Temporary5)) { for (var i = result_1040189726.length; i < Temporary5; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary5; };
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 12) | 224), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2097151)) {
          if (result_1040189726.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, 2147483647), Temporary6)) { for (var i = result_1040189726.length; i < Temporary6; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary6; };
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 18) | 240), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 67108863)) {
          if (result_1040189726.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 5), 0, 2147483647), Temporary7)) { for (var i = result_1040189726.length; i < Temporary7; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary7; };
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 24) | 248), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 18) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_1040189976, 2147483647)) {
          if (result_1040189726.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_1040189734, 6), 0, 2147483647), Temporary8)) { for (var i = result_1040189726.length; i < Temporary8; ++i) result_1040189726.push(0); }
         else {result_1040189726.length = Temporary8; };
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 0), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 >> 30) | 252), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 1), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 24) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 2), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 18) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 3), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 12) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 4), 0, (result_1040189726).length - 1)] = chckRange((((iHEX60gensym274_1040189976 >> 6) & 63) | 128), 0, 255);
          result_1040189726[chckIndx(addInt(resultIndexHEX60gensym252_1040189734, 5), 0, (result_1040189726).length - 1)] = chckRange(((iHEX60gensym274_1040189976 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_1040189734 = addInt(resultIndexHEX60gensym252_1040189734, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_1040189726;

}

function toLower_1040194968(s_1040194969) {
  var result_1040194970 = [];

    result_1040194970 = nimCopy(null, nuctoLowerStr((s_1040194969.slice(0, (s_1040194969).length - 1 + 1))), NTI33554449);

  return result_1040194970;

}

function newSeq_1476411651(len_1476411653) {
  var result_1476411654 = [];

    result_1476411654 = new Array(len_1476411653); for (var i = 0 ; i < len_1476411653 ; ++i) { result_1476411654[i] = ({typ: 0, str: [], list: [], opt: ({val: null})}); }
  return result_1476411654;

}

function cssCommands_2214592519(doc_2214592520) {

function underCmd_2214592528(arg_2214592529) {
  var result_2214592530 = [];

    Label1: {
      var fmtRes_2214592534 = [mnewString(0)];
      fmtRes_2214592534[0].push.apply(fmtRes_2214592534[0], [91]);;
      formatValue_1442840747(fmtRes_2214592534, 0, arg_2214592529, []);
      fmtRes_2214592534[0].push.apply(fmtRes_2214592534[0], [93]);;
    };
    result_2214592530 = nimCopy(null, fmtRes_2214592534[0], NTI33554449);

  return result_2214592530;

}
    
function HEX3Aanonymous_2214592540(arg_2214592541) {
      var result_2214592542 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2214592520.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [95]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2214592527 = expandArguments_2197815314(doc_2214592520, [95], arg_2214592541, [HEX21_1593835705(0)]);
        result_2214592542 = nimCopy(result_2214592542, {typ: 0, str: underCmd_2214592528(to_2181038173(vals_2214592527[chckIndx(0, 0, (vals_2214592527).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2214592542;

    }

function declCmd_2214592598(prop_2214592599, val_2214592600) {
  var result_2214592601 = [];

    result_2214592601 = nimCopy(null, nsuFormatOpenArray([36,49,58,36,50,59], [nimCopy(null, prop_2214592599, NTI33554449), nimCopy(null, val_2214592600, NTI33554449)]), NTI33554449);

  return result_2214592601;

}
    
function HEX3Aanonymous_2214592607(arg_2214592608) {
      var result_2214592609 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2214592520.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [58]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2214592597 = expandArguments_2197815314(doc_2214592520, [58], arg_2214592608, [HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2214592609 = nimCopy(result_2214592609, {typ: 0, str: declCmd_2214592598(to_2181038173(vals_2214592597[chckIndx(0, 0, (vals_2214592597).length - 1)]), to_2181038173(vals_2214592597[chckIndx(1, 0, (vals_2214592597).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2214592609;

    }

function declImportantCmd_2214592685(prop_2214592686, val_2214592687) {
  var result_2214592688 = [];

    result_2214592688 = nimCopy(null, nsuFormatOpenArray([36,49,58,36,50,32,33,105,109,112,111,114,116,97,110,116,59], [nimCopy(null, prop_2214592686, NTI33554449), nimCopy(null, val_2214592687, NTI33554449)]), NTI33554449);

  return result_2214592688;

}
    
function HEX3Aanonymous_2214592694(arg_2214592695) {
      var result_2214592696 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2214592520.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [58,33]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2214592684 = expandArguments_2197815314(doc_2214592520, [58,33], arg_2214592695, [HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2214592696 = nimCopy(result_2214592696, {typ: 0, str: declImportantCmd_2214592685(to_2181038173(vals_2214592684[chckIndx(0, 0, (vals_2214592684).length - 1)]), to_2181038173(vals_2214592684[chckIndx(1, 0, (vals_2214592684).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2214592696;

    }

function hStarCmd_2214592756() {
  var result_2214592757 = [];

    result_2214592757 = nimCopy(null, [104,49,44,104,50,44,104,51,44,104,52,44,104,53,44,104,54], NTI33554449);

  return result_2214592757;

}
    
function HEX3Aanonymous_2214592763(arg_2214592764) {
      var result_2214592765 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2214592520.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [104,42]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2214592755 = expandArguments_2197815314(doc_2214592520, [104,42], arg_2214592764, []);
        result_2214592765 = nimCopy(result_2214592765, {typ: 0, str: hStarCmd_2214592756(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2214592765;

    }

function ruleCmd_2214592817(selector_2214592818, decls_2214592819) {
  var result_2214592820 = [];

    result_2214592820 = nimCopy(null, nsuFormatOpenArray([36,49,123,36,50,125], [nimCopy(null, selector_2214592818, NTI33554449), nimCopy(null, decls_2214592819, NTI33554449)]), NTI33554449);

  return result_2214592820;

}
    
function HEX3Aanonymous_2214592826(arg_2214592827) {
      var result_2214592828 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2214592520.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [114,117,108,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2214592816 = expandArguments_2197815314(doc_2214592520, [114,117,108,101], arg_2214592827, [HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_2214592828 = nimCopy(result_2214592828, {typ: 0, str: ruleCmd_2214592817(to_2181038173(vals_2214592816[chckIndx(0, 0, (vals_2214592816).length - 1)]), to_2181038173(vals_2214592816[chckIndx(1, 0, (vals_2214592816).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2214592828;

    }

function varCmd_2214592888(name_2214592889, val_2214592891) {
    var Temporary1;
    var Temporary2;

  var result_2214592892 = [];

    if (isSome_2214592897(val_2214592891)) {
    if (eqStrings(HEX24_1560281153(HEX5BHEX5D_2197816618(doc_2214592520.stack, 2).cmdName), [115,116,121,108,101])) {
    Temporary2 = nsuFormatOpenArray([58,114,111,111,116,123,45,45,36,49,58,36,50,59,125], [nimCopy(null, name_2214592889, NTI33554449), nimCopy(null, get_2214592918(val_2214592891), NTI33554449)]);
    }
    else {
    Temporary2 = nsuFormatOpenArray([45,45,36,49,58,36,50,59], [nimCopy(null, name_2214592889, NTI33554449), nimCopy(null, get_2214592918(val_2214592891), NTI33554449)]);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    Temporary1 = nsuFormatSingleElem([118,97,114,40,45,45,36,49,41], name_2214592889);
    }
    
    result_2214592892 = nimCopy(null, Temporary1, NTI33554449);

  return result_2214592892;

}
    
function HEX3Aanonymous_2214592950(arg_2214592951) {
      var result_2214592952 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_2214592520.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [118,97,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_2214592887 = expandArguments_2197815314(doc_2214592520, [118,97,114], arg_2214592951, [HEX21_1593835705(0), HEX3F_1593835740(0)]);
        result_2214592952 = nimCopy(result_2214592952, {typ: 0, str: varCmd_2214592888(to_2181038173(vals_2214592887[chckIndx(0, 0, (vals_2214592887).length - 1)]), to_2214592966(vals_2214592887[chckIndx(1, 0, (vals_2214592887).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_2214592952;

    }

  var result_2214592523 = ({data: [], counter: 0});

    var commands_2214592526 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_2214592526[0], [95], HEX3Aanonymous_2214592540);
    HEX5BHEX5DHEX3D_2181038249(commands_2214592526[0], [58], HEX3Aanonymous_2214592607);
    HEX5BHEX5DHEX3D_2181038249(commands_2214592526[0], [58,33], HEX3Aanonymous_2214592694);
    HEX5BHEX5DHEX3D_2181038249(commands_2214592526[0], [104,42], HEX3Aanonymous_2214592763);
    HEX5BHEX5DHEX3D_2181038249(commands_2214592526[0], [114,117,108,101], HEX3Aanonymous_2214592826);
    HEX5BHEX5DHEX3D_2181038249(commands_2214592526[0], [118,97,114], HEX3Aanonymous_2214592950);
    result_2214592523 = nimCopy(result_2214592523, commands_2214592526[0], NTI1593835562);

  return result_2214592523;

}

function HEX5BHEX5D_2130706855(t_2130706858, key_2130706859) {
  var result_2130706860 = null;
  var result_2130706860_Idx = 0;

    var hcHEX60gensym22_2130706861 = [0];
    var indexHEX60gensym22_2130706868 = rawGet_2063597710(t_2130706858, key_2130706859, hcHEX60gensym22_2130706861, 0);
    if ((0 <= indexHEX60gensym22_2130706868)) {
    result_2130706860 = t_2130706858.data[chckIndx(indexHEX60gensym22_2130706868, 0, (t_2130706858.data).length - 1)]; result_2130706860_Idx = "Field2";
    }
    else {
    raiseKeyError_1660944714(key_2130706859);
    }
    

  return [result_2130706860, result_2130706860_Idx];

}

function defaultCommands_1476395041(doc_1476395042) {

function commentCmd_1476395070(arg_1476395071) {
  var result_1476395072 = [];

  return result_1476395072;

}
    
function HEX3Aanonymous_1476395078(arg_1476395079) {
      var result_1476395080 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395069 = expandArguments_2197815314(doc_1476395042, [35], arg_1476395079, [{kind: 4, base: 0}]);
        result_1476395080 = nimCopy(result_1476395080, {typ: 0, str: commentCmd_1476395070(to_2181038173(vals_1476395069[chckIndx(0, 0, (vals_1476395069).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395080;

    }

function semiCmd_1476395136() {
  var result_1476395137 = [];

    result_1476395137 = nimCopy(null, [59], NTI33554449);

  return result_1476395137;

}
    
function HEX3Aanonymous_1476395143(arg_1476395144) {
      var result_1476395145 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395135 = expandArguments_2197815314(doc_1476395042, [59], arg_1476395144, []);
        result_1476395145 = nimCopy(result_1476395145, {typ: 0, str: semiCmd_1476395136(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395145;

    }

function bracketsCmd_1476395197(arg_1476395198) {
  var result_1476395199 = [];

    result_1476395199 = nimCopy(null, ([91] || []).concat(arg_1476395198 || [],[93] || []), NTI33554449);

  return result_1476395199;

}
    
function HEX3Aanonymous_1476395205(arg_1476395206) {
      var result_1476395207 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395196 = expandArguments_2197815314(doc_1476395042, [40,41], arg_1476395206, [HEX21_1593835705(1)]);
        result_1476395207 = nimCopy(result_1476395207, {typ: 1, str: bracketsCmd_1476395197(to_2181038173(vals_1476395196[chckIndx(0, 0, (vals_1476395196).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395207;

    }

function leftBracketCmd_1476395263() {
  var result_1476395264 = [];

    result_1476395264 = nimCopy(null, [91], NTI33554449);

  return result_1476395264;

}
    
function HEX3Aanonymous_1476395270(arg_1476395271) {
      var result_1476395272 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395262 = expandArguments_2197815314(doc_1476395042, [40], arg_1476395271, []);
        result_1476395272 = nimCopy(result_1476395272, {typ: 0, str: leftBracketCmd_1476395263(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395272;

    }

function rightBracketCmd_1476395324() {
  var result_1476395325 = [];

    result_1476395325 = nimCopy(null, [93], NTI33554449);

  return result_1476395325;

}
    
function HEX3Aanonymous_1476395331(arg_1476395332) {
      var result_1476395333 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395323 = expandArguments_2197815314(doc_1476395042, [41], arg_1476395332, []);
        result_1476395333 = nimCopy(result_1476395333, {typ: 0, str: rightBracketCmd_1476395324(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395333;

    }

function enDashCmd_1476395385() {
  var result_1476395386 = [];

    result_1476395386 = nimCopy(null, [226,128,147], NTI33554449);

  return result_1476395386;

}
    
function HEX3Aanonymous_1476395392(arg_1476395393) {
      var result_1476395394 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395384 = expandArguments_2197815314(doc_1476395042, [45,45], arg_1476395393, []);
        result_1476395394 = nimCopy(result_1476395394, {typ: 0, str: enDashCmd_1476395385(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395394;

    }

function emDashCmd_1476395446() {
  var result_1476395447 = [];

    result_1476395447 = nimCopy(null, [226,128,148], NTI33554449);

  return result_1476395447;

}
    
function HEX3Aanonymous_1476395453(arg_1476395454) {
      var result_1476395455 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395445 = expandArguments_2197815314(doc_1476395042, [45,45,45], arg_1476395454, []);
        result_1476395455 = nimCopy(result_1476395455, {typ: 0, str: emDashCmd_1476395446(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395455;

    }

function ellipsisCmd_1476395507() {
  var result_1476395508 = [];

    result_1476395508 = nimCopy(null, [226,128,166], NTI33554449);

  return result_1476395508;

}
    
function HEX3Aanonymous_1476395514(arg_1476395515) {
      var result_1476395516 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395506 = expandArguments_2197815314(doc_1476395042, [46,46,46], arg_1476395515, []);
        result_1476395516 = nimCopy(result_1476395516, {typ: 0, str: ellipsisCmd_1476395507(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395516;

    }

function quoteCmd_1476395568(arg_1476395569) {
    
function HEX3Aanonymous_1476395573() {
      var result_1476395574 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym13_1476395583 = 0;
          var colontmp__587203563 = 0;
          colontmp__587203563 = subInt((doc_1476395042.stack).length, 1);
          var res_587203564 = colontmp__587203563;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203564)) break Label3;
                iHEX60gensym13_1476395583 = res_587203564;
                var frameHEX60gensym13_1476395584 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym13_1476395583, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym13_1476395584.lang)) {
                result_1476395574 = get_1476395606(frameHEX60gensym13_1476395584.lang);
                break BeforeRet;
                }
                
                res_587203564 = subInt(res_587203564, 1);
              }
          };
        };
      };

      return result_1476395574;

    }

  var result_1476395570 = [];

    result_1476395570 = nimCopy(null, nsuFormatSingleElem(translate_1610612762(10, HEX3Aanonymous_1476395573()), arg_1476395569), NTI33554449);

  return result_1476395570;

}
    
function HEX3Aanonymous_1476395641(arg_1476395642) {
      var result_1476395643 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395567 = expandArguments_2197815314(doc_1476395042, [34], arg_1476395642, [HEX21_1593835705(1)]);
        result_1476395643 = nimCopy(result_1476395643, {typ: 1, str: quoteCmd_1476395568(to_2181038173(vals_1476395567[chckIndx(0, 0, (vals_1476395567).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395643;

    }

function inlineMathCmd_1476395699(math_1476395700) {
  var result_1476395701 = [];

    result_1476395701 = nimCopy(null, renderMath_2264927107(doc_1476395042, math_1476395700, false, true), NTI33554449);

  return result_1476395701;

}
    
function HEX3Aanonymous_1476395707(arg_1476395708) {
      var result_1476395709 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, mathCommands_2264924174(doc_1476395042), NTI1593835562);
        var vals_1476395698 = expandArguments_2197815314(doc_1476395042, [36], arg_1476395708, [HEX21_1593835705(0)]);
        result_1476395709 = nimCopy(result_1476395709, {typ: 1, str: inlineMathCmd_1476395699(to_2181038173(vals_1476395698[chckIndx(0, 0, (vals_1476395698).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395709;

    }

function blockMathCmd_1476395769(math_1476395770) {
  var result_1476395771 = [];

    result_1476395771 = nimCopy(null, renderMath_2264927107(doc_1476395042, math_1476395770, true, true), NTI33554449);

  return result_1476395771;

}
    
function HEX3Aanonymous_1476395777(arg_1476395778) {
      var result_1476395779 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, mathCommands_2264924174(doc_1476395042), NTI1593835562);
        var vals_1476395768 = expandArguments_2197815314(doc_1476395042, [36,36], arg_1476395778, [HEX21_1593835705(0)]);
        result_1476395779 = nimCopy(result_1476395779, {typ: 1, str: blockMathCmd_1476395769(to_2181038173(vals_1476395768[chckIndx(0, 0, (vals_1476395768).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395779;

    }

function alignedMathCmd_1476395839(math_1476395840) {
  var result_1476395841 = [];

    result_1476395841 = nimCopy(null, renderMath_2264927107(doc_1476395042, env_2197816511([97,108,105,103,110,42], math_1476395840), true, false), NTI33554449);

  return result_1476395841;

}
    
function HEX3Aanonymous_1476395847(arg_1476395848) {
      var result_1476395849 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, mathCommands_2264924174(doc_1476395042), NTI1593835562);
        var vals_1476395838 = expandArguments_2197815314(doc_1476395042, [36,36,38], arg_1476395848, [HEX21_1593835705(0)]);
        result_1476395849 = nimCopy(result_1476395849, {typ: 1, str: alignedMathCmd_1476395839(to_2181038173(vals_1476395838[chckIndx(0, 0, (vals_1476395838).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395849;

    }

function heineify_1476395908(math_1476395909) {
    var Temporary1;
    
function HEX3Aanonymous_1476395911(cmd_1476395914) {
      var result_1476395917 = [];

        result_1476395917 = nimCopy(null, expandStr_1660945068(doc_1476395042, cmd_1476395914), NTI33554449);

      return result_1476395917;

    }

  var result_1476395910 = [];

++excHandler;
    try {
    Temporary1 = heine_2399141891(math_1476395909, HEX3Aanonymous_1476395911);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI2466250794))) {
    Label3: {
      var fmtRes_1476395921 = [mnewString(0)];
      fmtRes_1476395921[0].push.apply(fmtRes_1476395921[0], [69,114,114,111,114,32,119,104,105,108,101,32,114,101,110,100,101,114,105,110,103,32,72,101,105,110,101,58,32]);;
      formatValue_1442840747(fmtRes_1476395921, 0, getCurrentExceptionMsg_33556463(), []);
    };
    raiseException({message: nimCopy(null, fmtRes_1476395921[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1476395910 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476395910;

}

function inlineHeineCmd_1476395923(math_1476395924) {
  var result_1476395925 = [];

    result_1476395925 = nimCopy(null, inlineMathCmd_1476395699(heineify_1476395908(math_1476395924)), NTI33554449);

  return result_1476395925;

}
    
function HEX3Aanonymous_1476395931(arg_1476395932) {
      var result_1476395933 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395922 = expandArguments_2197815314(doc_1476395042, [36,104], arg_1476395932, [HEX21_1593835705(0)]);
        result_1476395933 = nimCopy(result_1476395933, {typ: 1, str: inlineHeineCmd_1476395923(to_2181038173(vals_1476395922[chckIndx(0, 0, (vals_1476395922).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395933;

    }

function blockHeineCmd_1476395989(math_1476395990) {
  var result_1476395991 = [];

    result_1476395991 = nimCopy(null, blockMathCmd_1476395769(heineify_1476395908(math_1476395990)), NTI33554449);

  return result_1476395991;

}
    
function HEX3Aanonymous_1476395997(arg_1476395998) {
      var result_1476395999 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476395988 = expandArguments_2197815314(doc_1476395042, [36,36,104], arg_1476395998, [HEX21_1593835705(0)]);
        result_1476395999 = nimCopy(result_1476395999, {typ: 1, str: blockHeineCmd_1476395989(to_2181038173(vals_1476395988[chckIndx(0, 0, (vals_1476395988).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476395999;

    }

function alignedHeineCmd_1476396055(math_1476396056) {
  var result_1476396057 = [];

    result_1476396057 = nimCopy(null, alignedMathCmd_1476395839(heineify_1476395908(math_1476396056)), NTI33554449);

  return result_1476396057;

}
    
function HEX3Aanonymous_1476396063(arg_1476396064) {
      var result_1476396065 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476396054 = expandArguments_2197815314(doc_1476395042, [36,36,38,104], arg_1476396064, [HEX21_1593835705(0)]);
        result_1476396065 = nimCopy(result_1476396065, {typ: 1, str: alignedHeineCmd_1476396055(to_2181038173(vals_1476396054[chckIndx(0, 0, (vals_1476396054).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476396065;

    }

function inlineHeineRawCmd_1476396121(math_1476396122) {
  var result_1476396123 = [];

    result_1476396123 = nimCopy(null, inlineMathCmd_1476395699(heineify_1476395908(math_1476396122)), NTI33554449);

  return result_1476396123;

}
    
function HEX3Aanonymous_1476396129(arg_1476396130) {
      var result_1476396131 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476396120 = expandArguments_2197815314(doc_1476395042, [42], arg_1476396130, [{kind: 3, base: 0}]);
        result_1476396131 = nimCopy(result_1476396131, {typ: 1, str: inlineHeineRawCmd_1476396121(to_2181038173(vals_1476396120[chckIndx(0, 0, (vals_1476396120).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476396131;

    }

function blockHeineRawCmd_1476396187(math_1476396188) {
  var result_1476396189 = [];

    result_1476396189 = nimCopy(null, blockMathCmd_1476395769(heineify_1476395908(math_1476396188)), NTI33554449);

  return result_1476396189;

}
    
function HEX3Aanonymous_1476396195(arg_1476396196) {
      var result_1476396197 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476396186 = expandArguments_2197815314(doc_1476395042, [42,42], arg_1476396196, [{kind: 3, base: 0}]);
        result_1476396197 = nimCopy(result_1476396197, {typ: 1, str: blockHeineRawCmd_1476396187(to_2181038173(vals_1476396186[chckIndx(0, 0, (vals_1476396186).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476396197;

    }

function alignedHeineRawCmd_1476396253(math_1476396254) {
  var result_1476396255 = [];

    result_1476396255 = nimCopy(null, alignedMathCmd_1476395839(heineify_1476395908(math_1476396254)), NTI33554449);

  return result_1476396255;

}
    
function HEX3Aanonymous_1476396261(arg_1476396262) {
      var result_1476396263 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476396252 = expandArguments_2197815314(doc_1476395042, [42,42,38], arg_1476396262, [{kind: 3, base: 0}]);
        result_1476396263 = nimCopy(result_1476396263, {typ: 1, str: alignedHeineRawCmd_1476396253(to_2181038173(vals_1476396252[chckIndx(0, 0, (vals_1476396252).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476396263;

    }

function LaTeXCmd_1476396319() {
    var Temporary1;
      var Temporary2;

  var result_1476396320 = [];

    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet370[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-latex{text-transform:uppercase;font-size:1em;}.xd-latex>sub{vertical-align:-0.5ex;margin-left:-0.1667em;margin-right:-0.125em;}.xd-latex>sup{font-size:0.85em;vertical-align:0.15em;margin-left:-0.36em;margin-right:-0.15em;}"));
      Temporary1 = [60,115,112,97,110,32,99,108,97,115,115,61,34,120,100,45,108,97,116,101,120,34,62,76,60,115,117,112,62,97,60,47,115,117,112,62,84,60,115,117,98,62,101,60,47,115,117,98,62,88,60,47,115,112,97,110,62];
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([76,97,84,101,88], []);
      break;
    case 2:
      Temporary1 = [76,97,84,101,88];
      break;
    }
    result_1476396320 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476396320;

}
    
function HEX3Aanonymous_1476396349(arg_1476396350) {
      var result_1476396351 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476396318 = expandArguments_2197815314(doc_1476395042, [76,97,84,101,88], arg_1476396350, []);
        result_1476396351 = nimCopy(result_1476396351, {typ: 1, str: LaTeXCmd_1476396319(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476396351;

    }

function addToHeadCmd_1476396403(arg_1476396404) {
  var result_1476396405 = [];

    incl_2264927133(doc_1476395042.addToHead, arg_1476396404);

  return result_1476396405;

}
    
function HEX3Aanonymous_1476396434(arg_1476396435) {
      var result_1476396436 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [97,100,100,45,116,111,45,104,101,97,100]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476396402 = expandArguments_2197815314(doc_1476395042, [97,100,100,45,116,111,45,104,101,97,100], arg_1476396435, [HEX21_1593835705(1)]);
        result_1476396436 = nimCopy(result_1476396436, {typ: 0, str: addToHeadCmd_1476396403(to_2181038173(vals_1476396402[chckIndx(0, 0, (vals_1476396402).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476396436;

    }

function argRawCmd_1476396492(name_1476396493) {
    name_1476396493 = nimCopy(null, name_1476396493, NTI33554449);
    
function HEX3Aanonymous_1476396497() {
      var result_1476396498 = ({val: ({body: [null, 0], slice: ({a: 0, b: 0})}), has: false});

      BeforeRet: {
        Label1: {
          var iHEX60gensym49_1476396507 = 0;
          var colontmp__587203717 = 0;
          colontmp__587203717 = subInt((doc_1476395042.stack).length, 1);
          var res_587203718 = colontmp__587203717;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203718)) break Label3;
                iHEX60gensym49_1476396507 = res_587203718;
                var frameHEX60gensym49_1476396508 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym49_1476396507, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (hasKey_1476396549(frameHEX60gensym49_1476396508.args, name_1476396493)) {
                result_1476396498 = nimCopy(result_1476396498, some_1476396962(HEX5BHEX5D_1476396888(frameHEX60gensym49_1476396508.args, name_1476396493)), NTI1476396269);
                break BeforeRet;
                }
                
                res_587203718 = subInt(res_587203718, 1);
              }
          };
        };
        result_1476396498 = nimCopy(result_1476396498, none_1476397118(), NTI1476396269);
      };

      return result_1476396498;

    }
    var Temporary1;

  var result_1476396494 = [];

    var arg_1476397145 = nimCopy(null, HEX3Aanonymous_1476396497(), NTI1476396269);
    if (isSome_1476397150(arg_1476397145)) {
    var arg_1476397191 = nimCopy(null, unsafeGet_1476397159(arg_1476397145), NTI1560281091);
    Temporary1 = arg_1476397191;
    }
    else {
      Label2: {
        var fmtRes_1476397195 = [mnewString(0)];
        fmtRes_1476397195[0].push.apply(fmtRes_1476397195[0], [80,97,114,97,109,101,116,101,114,32,110,111,116,32,102,111,117,110,100,58,32]);;
        formatValue_1442840747(fmtRes_1476397195, 0, name_1476396493, []);
      };
      raiseException({message: nimCopy(null, fmtRes_1476397195[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1476396494 = nimCopy(null, HEX24_1560281153(Temporary1), NTI33554449);

  return result_1476396494;

}
    
function HEX3Aanonymous_1476397201(arg_1476397202) {
      var result_1476397203 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [97,114,103,45,114,97,119]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476396491 = expandArguments_2197815314(doc_1476395042, [97,114,103,45,114,97,119], arg_1476397202, [HEX21_1593835705(0)]);
        result_1476397203 = nimCopy(result_1476397203, {typ: 0, str: argRawCmd_1476396492(to_2181038173(vals_1476396491[chckIndx(0, 0, (vals_1476396491).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397203;

    }

function argCmd_1476397259(name_1476397260) {
  var result_1476397261 = [];

    result_1476397261 = nimCopy(null, renderStr_1660945076(doc_1476395042, argRawCmd_1476396492(name_1476397260)), NTI33554449);

  return result_1476397261;

}
    
function HEX3Aanonymous_1476397267(arg_1476397268) {
      var result_1476397269 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476397258 = expandArguments_2197815314(doc_1476395042, [97,114,103], arg_1476397268, [HEX21_1593835705(0)]);
        result_1476397269 = nimCopy(result_1476397269, {typ: 1, str: argCmd_1476397259(to_2181038173(vals_1476397258[chckIndx(0, 0, (vals_1476397258).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397269;

    }

function argExpandCmd_1476397325(name_1476397326) {
  var result_1476397327 = [];

    result_1476397327 = nimCopy(null, expandStr_1660945068(doc_1476395042, argRawCmd_1476396492(name_1476397326)), NTI33554449);

  return result_1476397327;

}
    
function HEX3Aanonymous_1476397333(arg_1476397334) {
      var result_1476397335 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [97,114,103,45,101,120,112,97,110,100]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476397324 = expandArguments_2197815314(doc_1476395042, [97,114,103,45,101,120,112,97,110,100], arg_1476397334, [HEX21_1593835705(0)]);
        result_1476397335 = nimCopy(result_1476397335, {typ: 0, str: argExpandCmd_1476397325(to_2181038173(vals_1476397324[chckIndx(0, 0, (vals_1476397324).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397335;

    }

function argRawEscapeCmd_1476397391(name_1476397392) {
  var result_1476397393 = [];

    result_1476397393 = nimCopy(null, escapeText_1660944395(argRawCmd_1476396492(name_1476397392), doc_1476395042.target), NTI33554449);

  return result_1476397393;

}
    
function HEX3Aanonymous_1476397399(arg_1476397400) {
      var result_1476397401 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [97,114,103,45,114,97,119,45,101,115,99,97,112,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476397390 = expandArguments_2197815314(doc_1476395042, [97,114,103,45,114,97,119,45,101,115,99,97,112,101], arg_1476397400, [HEX21_1593835705(0)]);
        result_1476397401 = nimCopy(result_1476397401, {typ: 1, str: argRawEscapeCmd_1476397391(to_2181038173(vals_1476397390[chckIndx(0, 0, (vals_1476397390).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397401;

    }

function bfCmd_1476397457(arg_1476397458) {
    var Temporary1;

  var result_1476397459 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,98,62] || []).concat(arg_1476397458 || [],[60,47,98,62] || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,98,102], arg_1476397458);
      break;
    case 2:
      Temporary1 = arg_1476397458;
      break;
    }
    result_1476397459 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476397459;

}
    
function HEX3Aanonymous_1476397465(arg_1476397466) {
      var result_1476397467 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476397456 = expandArguments_2197815314(doc_1476395042, [98,102], arg_1476397466, [HEX21_1593835705(1)]);
        result_1476397467 = nimCopy(result_1476397467, {typ: 1, str: bfCmd_1476397457(to_2181038173(vals_1476397456[chckIndx(0, 0, (vals_1476397456).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397467;

    }

function blockQuoteCmd_1476397523(quote_1476397524, author_1476397526) {
    var Temporary1;
      var Temporary2;

  var result_1476397527 = [];

    switch (doc_1476395042.target) {
    case 0:
      if (isSome_2214592897(author_1476397526)) {
      var author_1476397542 = nimCopy(null, unsafeGet_2248147493(author_1476397526), NTI33554449);
      Temporary2 = ([60,112,62] || []).concat(quote_1476397524 || [],[60,47,112,62,60,112,62,60,99,105,116,101,62] || [],author_1476397542 || [],[60,47,99,105,116,101,62,60,47,112,62] || []);
      }
      else {
      Temporary2 = quote_1476397524;
      }
      
      Temporary1 = ([60,98,108,111,99,107,113,117,111,116,101,62] || []).concat(Temporary2 || [],[60,47,98,108,111,99,107,113,117,111,116,101,62] || []);
      break;
    case 1:
      Temporary1 = env_2197816511([113,117,111,116,101], quote_1476397524);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([10,62,32,36,49,10], quote_1476397524);
      break;
    }
    result_1476397527 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476397527;

}
    
function HEX3Aanonymous_1476397548(arg_1476397549) {
      var result_1476397550 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476397522 = expandArguments_2197815314(doc_1476395042, [98,108,111,99,107,45,113,117,111,116,101], arg_1476397549, [HEX21_1593835705(1), HEX3F_1593835740(1)]);
        result_1476397550 = nimCopy(result_1476397550, {typ: 1, str: blockQuoteCmd_1476397523(to_2181038173(vals_1476397522[chckIndx(0, 0, (vals_1476397522).length - 1)]), to_2214592966(vals_1476397522[chckIndx(1, 0, (vals_1476397522).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397550;

    }

function checkboxesCmd_1476397616(arg_1476397617) {
    var Temporary1;
      var Temporary2;

  var result_1476397618 = [];

    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet372[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-checkbox-unchecked{list-style-type:\"\xE2\x98\x90 \"}.xd-checkbox-checked{list-style-type:\"\xE2\x98\x91 \"}.xd-checkbox-crossed{list-style-type:\"\xE2\x98\x92 \"}"));
      Temporary1 = ([60,117,108,32,99,108,97,115,115,61,34,120,100,45,99,104,101,99,107,98,111,120,101,115,34,62] || []).concat(arg_1476397617 || [],[60,47,117,108,62] || []);
      break;
    default: 
      raiseException({message: [67,104,101,99,107,98,111,120,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,101,32,76,97,84,101,88,32,116,97,114,103,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476397618 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476397618;

}
    
function HEX3Aanonymous_1476397647(arg_1476397648) {
      var result_1476397649 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, checkboxCommands_2181038086(doc_1476395042), NTI1593835562);
        var vals_1476397615 = expandArguments_2197815314(doc_1476395042, [99,104,101,99,107,98,111,120,101,115], arg_1476397648, [HEX21_1593835705(0)]);
        result_1476397649 = nimCopy(result_1476397649, {typ: 1, str: checkboxesCmd_1476397616(to_2181038173(vals_1476397615[chckIndx(0, 0, (vals_1476397615).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397649;

    }

function civetCmd_1476397766(src_1476397767) {
  var result_1476397768 = [];

    result_1476397768 = nimCopy(null, compileCivet_2063600878(src_1476397767), NTI33554449);

  return result_1476397768;

}
    
function HEX3Aanonymous_1476397774(arg_1476397775) {
      var result_1476397776 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [99,105,118,101,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476397765 = expandArguments_2197815314(doc_1476395042, [99,105,118,101,116], arg_1476397775, [HEX21_1593835705(0)]);
        result_1476397776 = nimCopy(result_1476397776, {typ: 0, str: civetCmd_1476397766(to_2181038173(vals_1476397765[chckIndx(0, 0, (vals_1476397765).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397776;

    }

function applySyntaxHighlightingTheme_1476397708() {
    var Temporary1;

    var theme_1476397709 = doc_1476395042.settings.syntaxHighlightingTheme;
    var Temporary1 = doc_1476395042;
    if (ConstSet373[Temporary1.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary1.target, NTI1593835523)); }
    incl_2264927133(Temporary1.addToStyle, prismCss_1476395040[chckIndx(theme_1476397709, 0, (prismCss_1476395040).length - 1)]);

  
}

function codeCmd_1476397832(lang_1476397834, code_1476397835) {
    var Temporary1;
      var Temporary2;

  var result_1476397836 = [];

    switch (doc_1476395042.target) {
    case 0:
      applySyntaxHighlightingTheme_1476397708();
      if (isSome_2214592897(lang_1476397834)) {
      var lang_1476397851 = nimCopy(null, unsafeGet_2248147493(lang_1476397834), NTI33554449);
      Label3: {
        var fmtRes_1476397855 = [mnewString(0)];
        fmtRes_1476397855[0].push.apply(fmtRes_1476397855[0], [108,97,110,103,117,97,103,101,45]);;
        formatValue_1442840747(fmtRes_1476397855, 0, lang_1476397851, []);
      };
      Temporary2 = ([60,99,111,100,101,32,99,108,97,115,115,61,34] || []).concat(fmtRes_1476397855[0] || [],[34,62] || [],highlightCode_2063600920(code_1476397835, lang_1476397851) || [],[60,47,99,111,100,101,62] || []);
      }
      else {
      Temporary2 = ([60,99,111,100,101,62] || []).concat(escapeText_1660944395(code_1476397835, doc_1476395042.target) || [],[60,47,99,111,100,101,62] || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,116,116], code_1476397835);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([10,96,96,96,10,123,36,49,125,10,96,96,96,10], code_1476397835);
      break;
    }
    result_1476397836 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476397836;

}
    
function HEX3Aanonymous_1476397861(arg_1476397862) {
      var result_1476397863 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476397831 = expandArguments_2197815314(doc_1476395042, [99,111,100,101], arg_1476397862, [HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_1476397863 = nimCopy(result_1476397863, {typ: 1, str: codeCmd_1476397832(to_2214592966(vals_1476397831[chckIndx(0, 0, (vals_1476397831).length - 1)]), to_2181038173(vals_1476397831[chckIndx(1, 0, (vals_1476397831).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476397863;

    }

function codeBlockCmd_1476397929(lang_1476397931, code_1476397932) {
    var Temporary1;
      var Temporary2;
      var Temporary5;

  var result_1476397933 = [];

    switch (doc_1476395042.target) {
    case 0:
      applySyntaxHighlightingTheme_1476397708();
      if (isSome_2214592897(lang_1476397931)) {
      var lang_1476397948 = nimCopy(null, unsafeGet_2248147493(lang_1476397931), NTI33554449);
      Label3: {
        var fmtRes_1476397952 = [mnewString(0)];
        fmtRes_1476397952[0].push.apply(fmtRes_1476397952[0], [108,97,110,103,117,97,103,101,45]);;
        formatValue_1442840747(fmtRes_1476397952, 0, lang_1476397948, []);
      };
      Label4: {
        var fmtRes_1476397956 = [mnewString(0)];
        fmtRes_1476397956[0].push.apply(fmtRes_1476397956[0], [108,97,110,103,117,97,103,101,45]);;
        formatValue_1442840747(fmtRes_1476397956, 0, lang_1476397948, []);
      };
      Temporary2 = ([60,112,114,101,32,99,108,97,115,115,61,34] || []).concat(fmtRes_1476397952[0] || [],[34,62,60,99,111,100,101,32,99,108,97,115,115,61,34] || [],fmtRes_1476397956[0] || [],[34,62] || [],highlightCode_2063600920(code_1476397932, lang_1476397948) || [],[60,47,99,111,100,101,62,60,47,112,114,101,62] || []);
      }
      else {
      Temporary2 = ([60,112,114,101,62,60,99,111,100,101,62] || []).concat(escapeText_1660944395(code_1476397932, doc_1476395042.target) || [],[60,47,99,111,100,101,62,60,47,112,114,101,62] || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, [92,117,115,101,112,97,99,107,97,103,101,123,109,105,110,116,101,100,125]);
      if (isSome_2214592897(lang_1476397931)) {
      var lang_1476397994 = nimCopy(null, unsafeGet_2248147493(lang_1476397931), NTI33554449);
      Temporary5 = nsuFormatSingleElem([123,36,49,125], lang_1476397994);
      }
      else {
      Temporary5 = [];
      }
      
      Temporary1 = (env_2197816511([109,105,110,116,101,100], (Temporary5 || []).concat([10] || [],code_1476397932 || [])) || []).concat([10] || []);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([10,96,96,96,10,123,36,49,125,10,96,96,96,10], code_1476397932);
      break;
    }
    result_1476397933 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476397933;

}
    
function HEX3Aanonymous_1476398000(arg_1476398001) {
      var result_1476398002 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476397928 = expandArguments_2197815314(doc_1476395042, [99,111,100,101,45,98,108,111,99,107], arg_1476398001, [HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_1476398002 = nimCopy(result_1476398002, {typ: 1, str: codeBlockCmd_1476397929(to_2214592966(vals_1476397928[chckIndx(0, 0, (vals_1476397928).length - 1)]), to_2181038173(vals_1476397928[chckIndx(1, 0, (vals_1476397928).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476398002;

    }

function collapseCmd_1476398068(title_1476398069, content_1476398070) {
    var Temporary1;

  var result_1476398071 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,100,101,116,97,105,108,115,62,60,115,117,109,109,97,114,121,62] || []).concat(title_1476398069 || [],[60,47,115,117,109,109,97,114,121,62] || [],content_1476398070 || [],[60,47,100,101,116,97,105,108,115,62] || []);
      break;
    case 1:
      Temporary1 = content_1476398070;
      break;
    case 2:
      Temporary1 = content_1476398070;
      break;
    }
    result_1476398071 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476398071;

}
    
function HEX3Aanonymous_1476398077(arg_1476398078) {
      var result_1476398079 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476398067 = expandArguments_2197815314(doc_1476395042, [99,111,108,108,97,112,115,101], arg_1476398078, [HEX21_1593835705(1), HEX21_1593835705(1)]);
        result_1476398079 = nimCopy(result_1476398079, {typ: 1, str: collapseCmd_1476398068(to_2181038173(vals_1476398067[chckIndx(0, 0, (vals_1476398067).length - 1)]), to_2181038173(vals_1476398067[chckIndx(1, 0, (vals_1476398067).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476398079;

    }

function collapsibleCmd_1476398139(title_1476398140, content_1476398141) {
    var Temporary1;

  var result_1476398142 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,100,101,116,97,105,108,115,32,111,112,101,110,61,34,34,62,60,115,117,109,109,97,114,121,62] || []).concat(title_1476398140 || [],[60,47,115,117,109,109,97,114,121,62] || [],content_1476398141 || [],[60,47,100,101,116,97,105,108,115,62] || []);
      break;
    case 1:
      Temporary1 = content_1476398141;
      break;
    case 2:
      Temporary1 = content_1476398141;
      break;
    }
    result_1476398142 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476398142;

}
    
function HEX3Aanonymous_1476398148(arg_1476398149) {
      var result_1476398150 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476398138 = expandArguments_2197815314(doc_1476395042, [99,111,108,108,97,112,115,105,98,108,101], arg_1476398149, [HEX21_1593835705(1), HEX21_1593835705(1)]);
        result_1476398150 = nimCopy(result_1476398150, {typ: 1, str: collapsibleCmd_1476398139(to_2181038173(vals_1476398138[chckIndx(0, 0, (vals_1476398138).length - 1)]), to_2181038173(vals_1476398138[chckIndx(1, 0, (vals_1476398138).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476398150;

    }

function colorCmd_1476398210(color_1476398211, text_1476398212) {
    var Temporary1;

  var result_1476398213 = [];

    switch (doc_1476395042.target) {
    case 0:
      Label2: {
        var fmtRes_1476398217 = [mnewString(0)];
        fmtRes_1476398217[0].push.apply(fmtRes_1476398217[0], [99,111,108,111,114,58]);;
        formatValue_1442840747(fmtRes_1476398217, 0, color_1476398211, []);
      };
      Temporary1 = ([60,115,112,97,110,32,115,116,121,108,101,61,34] || []).concat(fmtRes_1476398217[0] || [],[34,62] || [],text_1476398212 || [],[60,47,115,112,97,110,62] || []);
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507([117,115,101,112,97,99,107,97,103,101], [115,118,103,110,97,109,101,115]), [120,99,111,108,111,114]));
      Temporary1 = HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([116,101,120,116,99,111,108,111,114], color_1476398211), text_1476398212);
      break;
    case 2:
      Temporary1 = text_1476398212;
      break;
    }
    result_1476398213 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476398213;

}
    
function HEX3Aanonymous_1476398246(arg_1476398247) {
      var result_1476398248 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [99,111,108,111,114]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476398209 = expandArguments_2197815314(doc_1476395042, [99,111,108,111,114], arg_1476398247, [HEX21_1593835705(0), HEX21_1593835705(1)]);
        result_1476398248 = nimCopy(result_1476398248, {typ: 1, str: colorCmd_1476398210(to_2181038173(vals_1476398209[chckIndx(0, 0, (vals_1476398209).length - 1)]), to_2181038173(vals_1476398209[chckIndx(1, 0, (vals_1476398209).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476398248;

    }

function renderTableOfContentsHtml_1476398307(table_1476398308) {
  var result_1476398309 = [];

  BeforeRet: {
    if (((table_1476398308).length == 0)) {
    result_1476398309 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
    var collectResult_1476398318 = newSeq_536871460(0);
    Label1: {
      var entry_1476398352 = null;
      var i_587203727 = 0;
      var L_587203728 = (table_1476398308).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203727 < L_587203728)) break Label3;
            entry_1476398352 = table_1476398308[chckIndx(i_587203727, 0, (table_1476398308).length - 1)];
            collectResult_1476398318.push(([60,108,105,62] || []).concat(entry_1476398352.text || [],[60,47,108,105,62] || [],renderTableOfContentsHtml_1476398307(entry_1476398352.children) || []));;
            i_587203727 = addInt(i_587203727, 1);
            if (!(((table_1476398308).length == L_587203728))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1476398309 = nimCopy(null, ([60,111,108,32,99,108,97,115,115,61,34,120,100,45,99,111,110,116,101,110,116,115,34,62] || []).concat(nsuJoinSep(collectResult_1476398318, []) || [],[60,47,111,108,62] || []), NTI33554449);
  };

  return result_1476398309;

}

function contentsCmd_1476398374() {
    var Temporary1;
      var Temporary2;

  var result_1476398375 = [];

    switch (doc_1476395042.stage) {
    case 0:
      Temporary1 = [192,91,99,111,110,116,101,110,116,115,93,193];
      break;
    default: 
      switch (doc_1476395042.target) {
      case 0:
        Temporary2 = renderTableOfContentsHtml_1476398307(doc_1476395042.tableOfContents);
        break;
      default: 
        raiseException({message: [84,104,101,32,91,99,111,110,116,101,110,116,115,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,116,104,105,115,32,98,97,99,107,101,110,100,32,121,101,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        break;
      }
      Temporary1 = Temporary2;
      break;
    }
    result_1476398375 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476398375;

}
    
function HEX3Aanonymous_1476398381(arg_1476398382) {
      var result_1476398383 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476398373 = expandArguments_2197815314(doc_1476395042, [99,111,110,116,101,110,116,115], arg_1476398382, []);
        result_1476398383 = nimCopy(result_1476398383, {typ: 1, str: contentsCmd_1476398374(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476398383;

    }

function corollaryCmd_1476398448(thNameHEX60gensym115_1476398450, labelHEX60gensym115_1476398452, contentHEX60gensym115_1476398453) {
    
function HEX3Aanonymous_1476398459(n_1476398471) {
      var result_1476398474 = false;

        result_1476398474 = !(eqStrings(n_1476398471, []));

      return result_1476398474;

    }
    
function HEX3Aanonymous_1476398484() {
      var result_1476398485 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym124_1476398494 = 0;
          var colontmp__587203731 = 0;
          colontmp__587203731 = subInt((doc_1476395042.stack).length, 1);
          var res_587203732 = colontmp__587203731;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203732)) break Label3;
                iHEX60gensym124_1476398494 = res_587203732;
                var frameHEX60gensym124_1476398495 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym124_1476398494, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym124_1476398495.lang)) {
                result_1476398485 = get_1476395606(frameHEX60gensym124_1476398495.lang);
                break BeforeRet;
                }
                
                res_587203732 = subInt(res_587203732, 1);
              }
          };
        };
      };

      return result_1476398485;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476398454 = [];

    var thNameHEX60gensym115_1476398481 = filter_2231369786(thNameHEX60gensym115_1476398450, HEX3Aanonymous_1476398459);
    var wordHEX60gensym115_1476398518 = translate_1610612762(0, HEX3Aanonymous_1476398484());
    var numHEX60gensym115_1476398519 = [];
    if (isSome_2214592897(labelHEX60gensym115_1476398452)) {
    var labelHEX60gensym115_1476398534 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym115_1476398452), NTI33554449);
    numHEX60gensym115_1476398519 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym115_1476398534, {Field0: (wordHEX60gensym115_1476398518 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym115_1476398519, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet374[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym115_1476399993 = nimCopy(null, wordHEX60gensym115_1476398518, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym115_1476398452)) {
      fullNameHEX60gensym115_1476399993.push.apply(fullNameHEX60gensym115_1476399993, ([32] || []).concat(numHEX60gensym115_1476398519 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym115_1476398481)) {
      var thNameHEX60gensym115_1476400015 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym115_1476398481), NTI33554449);
      fullNameHEX60gensym115_1476399993.push.apply(fullNameHEX60gensym115_1476399993, ([32,40] || []).concat(thNameHEX60gensym115_1476400015 || [],[41] || []));;
      }
      
      fullNameHEX60gensym115_1476399993.push.apply(fullNameHEX60gensym115_1476399993, [46]);;
      if (isSome_2214592897(labelHEX60gensym115_1476398452)) {
      var labelHEX60gensym115_1476400030 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym115_1476398452), NTI33554449);
      Label4: {
        var fmtRes_1476400034 = mnewString(0);
        fmtRes_1476400034.push.apply(fmtRes_1476400034, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476400034, [99,111,114,111,108,108,97,114,121]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym115_1476400030 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym115_1476399993 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym115_1476398453) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476400038 = mnewString(0);
          fmtRes_1476400038.push.apply(fmtRes_1476400038, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476400038, [99,111,114,111,108,108,97,114,121]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym115_1476399993 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym115_1476398453) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,99,111,114,111,108,108,97,114,121]), wordHEX60gensym115_1476398518) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,99,111,114,111,108,108,97,114,121,42]), wordHEX60gensym115_1476398518) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,99,111,114,111,108,108,97,114,121,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,99,111,114,111,108,108,97,114,121]), [35,49]) || []).concat([92,88,68,99,111,114,111,108,108,97,114,121] || [])), [92,101,110,100,88,68,99,111,114,111,108,108,97,114,121]) || []));
      var envNameHEX60gensym115_1476400085 = [88,68,99,111,114,111,108,108,97,114,121];
      var envContentHEX60gensym115_1476400086 = [];
      if (isSome_2214592897(labelHEX60gensym115_1476398452)) {
      var labelHEX60gensym115_1476400101 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym115_1476398452), NTI33554449);
      envNameHEX60gensym115_1476400085.push.apply(envNameHEX60gensym115_1476400085, [77,97,110,117,97,108]);;
      envContentHEX60gensym115_1476400086.push.apply(envContentHEX60gensym115_1476400086, ([123] || []).concat(numHEX60gensym115_1476398519 || [],[125] || []));;
      envContentHEX60gensym115_1476400086.push.apply(envContentHEX60gensym115_1476400086, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym115_1476400101));;
      }
      else {
      envNameHEX60gensym115_1476400085.push.apply(envNameHEX60gensym115_1476400085, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym115_1476398481)) {
      var thNameHEX60gensym115_1476400116 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym115_1476398481), NTI33554449);
      envContentHEX60gensym115_1476400086.push.apply(envContentHEX60gensym115_1476400086, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym115_1476400116));;
      }
      
      envContentHEX60gensym115_1476400086.push.apply(envContentHEX60gensym115_1476400086, nsuFormatSingleElem([36,49], contentHEX60gensym115_1476398453));;
      Temporary1 = env_2197816511(envNameHEX60gensym115_1476400085, envContentHEX60gensym115_1476400086);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym115_1476398481)) {
      var thNameHEX60gensym115_1476400131 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym115_1476398481), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym115_1476398518, NTI33554449), nimCopy(null, thNameHEX60gensym115_1476400131, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym115_1476398518, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym115_1476398453, NTI33554449)]);
      break;
    }
    result_1476398454 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476398454;

}
    
function HEX3Aanonymous_1476400137(arg_1476400138) {
      var result_1476400139 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476398447 = expandArguments_2197815314(doc_1476395042, [99,111,114,111,108,108,97,114,121], arg_1476400138, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476400139 = nimCopy(result_1476400139, {typ: 1, str: corollaryCmd_1476398448(to_2214592966(vals_1476398447[chckIndx(0, 0, (vals_1476398447).length - 1)]), to_2214592966(vals_1476398447[chckIndx(1, 0, (vals_1476398447).length - 1)]), to_2181038173(vals_1476398447[chckIndx(2, 0, (vals_1476398447).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476400139;

    }

function defCmd_1476400218(name_1476400219, paramList_1476400221, body_1476400222) {
    var Temporary1;
    name_1476400219 = nimCopy(null, name_1476400219, NTI33554449);
    body_1476400222 = nimCopy(null, body_1476400222, NTI33554449);
    
function HEX3Aanonymous_1476400254(arg_1476400255) {
        var Temporary1;
          var Temporary3;

      var result_1476400256 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        if (eqStrings(HEX24_1560281153(arg_1476400255), [])) {
        Temporary1 = [];
        }
        else {
        Temporary1 = parseXidocArguments_1677721945(arg_1476400255);
        }
        
        var argsList_1476400261 = nimCopy(null, Temporary1, NTI1677721783);
        if (!(((argsList_1476400261).length == (params_1476400244).length))) {
        Label2: {
          var fmtRes_1476400271 = [mnewString(0)];
          fmtRes_1476400271[0].push.apply(fmtRes_1476400271[0], [67,111,109,109,97,110,100,32]);;
          formatValue_1442840747(fmtRes_1476400271, 0, name_1476400219, []);
          fmtRes_1476400271[0].push.apply(fmtRes_1476400271[0], [32,110,101,101,100,115,32,101,120,97,99,116,108,121,32]);;
          formatValue_1560281240(fmtRes_1476400271, 0, (params_1476400244).length, []);
          fmtRes_1476400271[0].push.apply(fmtRes_1476400271[0], [32,97,114,103,117,109,101,110,116]);;
          if (((params_1476400244).length == 1)) {
          Temporary3 = [];
          }
          else {
          Temporary3 = [115];
          }
          
          formatValue_1442840747(fmtRes_1476400271, 0, Temporary3, []);
          fmtRes_1476400271[0].push.apply(fmtRes_1476400271[0], [44,32]);;
          formatValue_1560281240(fmtRes_1476400271, 0, (argsList_1476400261).length, []);
          fmtRes_1476400271[0].push.apply(fmtRes_1476400271[0], [32,103,105,118,101,110]);;
        };
        raiseException({message: nimCopy(null, fmtRes_1476400271[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var argsTable_1476401606 = toTable_1476400349(zip_1476400292(params_1476400244, argsList_1476400261));
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).args = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).args, argsTable_1476401606, NTI1593835581);
        result_1476400256 = nimCopy(result_1476400256, {typ: 1, str: renderStr_1660945076(doc_1476395042, body_1476400222), list: [], opt: ({val: null})}, NTI1593835525);

      return result_1476400256;

    }

  var result_1476400223 = [];

    if (isSome_2214592897(paramList_1476400221)) {
    var paramList_1476400239 = nimCopy(null, unsafeGet_2248147493(paramList_1476400221), NTI33554449);
    Temporary1 = nsuSplitWhitespace(paramList_1476400239, (-1));
    }
    else {
    Temporary1 = [];
    }
    
    var params_1476400244 = nimCopy(null, Temporary1, NTI754975255);
    HEX5BHEX5DHEX3D_2181038249(HEX5BHEX5D_2197816618(doc_1476395042.stack, 2).commands, name_1476400219, HEX3Aanonymous_1476400254);

  return result_1476400223;

}
    
function HEX3Aanonymous_1476401677(arg_1476401678) {
      var result_1476401679 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476400217 = expandArguments_2197815314(doc_1476395042, [100,101,102], arg_1476401678, [HEX21_1593835705(0), HEX3F_1593835740(0), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476401679 = nimCopy(result_1476401679, {typ: 1, str: defCmd_1476400218(to_2181038173(vals_1476400217[chckIndx(0, 0, (vals_1476400217).length - 1)]), to_2214592966(vals_1476400217[chckIndx(1, 0, (vals_1476400217).length - 1)]), to_2181038173(vals_1476400217[chckIndx(2, 0, (vals_1476400217).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476401679;

    }

function defGlobalCmd_1476401749(name_1476401750, paramList_1476401752, body_1476401753) {
    var Temporary1;
    name_1476401750 = nimCopy(null, name_1476401750, NTI33554449);
    body_1476401753 = nimCopy(null, body_1476401753, NTI33554449);
    
function HEX3Aanonymous_1476401781(arg_1476401782) {
        var Temporary1;
          var Temporary3;

      var result_1476401783 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        if (eqStrings(HEX24_1560281153(arg_1476401782), [])) {
        Temporary1 = [];
        }
        else {
        Temporary1 = parseXidocArguments_1677721945(arg_1476401782);
        }
        
        var argsList_1476401788 = nimCopy(null, Temporary1, NTI1677721783);
        if (!(((argsList_1476401788).length == (params_1476401775).length))) {
        Label2: {
          var fmtRes_1476401798 = [mnewString(0)];
          fmtRes_1476401798[0].push.apply(fmtRes_1476401798[0], [67,111,109,109,97,110,100,32]);;
          formatValue_1442840747(fmtRes_1476401798, 0, name_1476401750, []);
          fmtRes_1476401798[0].push.apply(fmtRes_1476401798[0], [32,110,101,101,100,115,32,101,120,97,99,116,108,121,32]);;
          formatValue_1560281240(fmtRes_1476401798, 0, (params_1476401775).length, []);
          fmtRes_1476401798[0].push.apply(fmtRes_1476401798[0], [32,97,114,103,117,109,101,110,116]);;
          if (((params_1476401775).length == 1)) {
          Temporary3 = [];
          }
          else {
          Temporary3 = [115];
          }
          
          formatValue_1442840747(fmtRes_1476401798, 0, Temporary3, []);
          fmtRes_1476401798[0].push.apply(fmtRes_1476401798[0], [44,32]);;
          formatValue_1560281240(fmtRes_1476401798, 0, (argsList_1476401788).length, []);
          fmtRes_1476401798[0].push.apply(fmtRes_1476401798[0], [32,103,105,118,101,110]);;
        };
        raiseException({message: nimCopy(null, fmtRes_1476401798[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var argsTable_1476401827 = toTable_1476400349(zip_1476400292(params_1476401775, argsList_1476401788));
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).args = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).args, argsTable_1476401827, NTI1593835581);
        result_1476401783 = nimCopy(result_1476401783, {typ: 1, str: renderStr_1660945076(doc_1476395042, body_1476401753), list: [], opt: ({val: null})}, NTI1593835525);

      return result_1476401783;

    }

  var result_1476401754 = [];

    if (isSome_2214592897(paramList_1476401752)) {
    var paramList_1476401770 = nimCopy(null, unsafeGet_2248147493(paramList_1476401752), NTI33554449);
    Temporary1 = nsuSplitWhitespace(paramList_1476401770, (-1));
    }
    else {
    Temporary1 = [];
    }
    
    var params_1476401775 = nimCopy(null, Temporary1, NTI754975255);
    HEX5BHEX5DHEX3D_2181038249(doc_1476395042.stack[chckIndx(0, 0, (doc_1476395042.stack).length - 1)].commands, name_1476401750, HEX3Aanonymous_1476401781);

  return result_1476401754;

}
    
function HEX3Aanonymous_1476401883(arg_1476401884) {
      var result_1476401885 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,101,102,45,103,108,111,98,97,108]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476401748 = expandArguments_2197815314(doc_1476395042, [100,101,102,45,103,108,111,98,97,108], arg_1476401884, [HEX21_1593835705(0), HEX3F_1593835740(0), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476401885 = nimCopy(result_1476401885, {typ: 1, str: defGlobalCmd_1476401749(to_2181038173(vals_1476401748[chckIndx(0, 0, (vals_1476401748).length - 1)]), to_2214592966(vals_1476401748[chckIndx(1, 0, (vals_1476401748).length - 1)]), to_2181038173(vals_1476401748[chckIndx(2, 0, (vals_1476401748).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476401885;

    }

function descriptionListCmd_1476401955(args_1476401956) {
    var Temporary4;

  var result_1476401957 = [];

    if (!((modInt((args_1476401956).length, 2) == 0))) {
    raiseException({message: [65,114,103,117,109,101,110,116,115,32,116,111,32,100,101,115,99,114,105,112,116,105,111,110,45,108,105,115,116,32,109,117,115,116,32,99,111,109,101,32,105,110,32,112,97,105,114,115], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var defs_1476401961 = [];
    Label1: {
      var i_1476401969 = 0;
      var colontmp__587203297 = 0;
      colontmp__587203297 = divInt((args_1476401956).length, 2);
      var i_587203298 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203298 < colontmp__587203297)) break Label3;
            i_1476401969 = i_587203298;
            defs_1476401961.push([nimCopy(null, args_1476401956[chckIndx(mulInt(2, i_1476401969), 0, (args_1476401956).length - 1)], NTI33554449), nimCopy(null, args_1476401956[chckIndx(addInt(mulInt(2, i_1476401969), 1), 0, (args_1476401956).length - 1)], NTI33554449)]);;
            i_587203298 = addInt(i_587203298, 1);
          }
      };
    };
    switch (doc_1476395042.target) {
    case 0:
      Label5: {
        var iHEX60gensym191_1476402029 = 0;
        var resultHEX60gensym191_1476402036 = newSeq_536871460(chckRange((defs_1476401961).length, 0, 2147483647));
        Label6: {
          var it_1476402040 = [[], []];
          var i_587203308 = 0;
          var L_587203309 = (defs_1476401961).length;
          Label7: {
              Label8: while (true) {
              if (!(i_587203308 < L_587203309)) break Label8;
                it_1476402040 = defs_1476401961[chckIndx(i_587203308, 0, (defs_1476401961).length - 1)];
                resultHEX60gensym191_1476402036[chckIndx(iHEX60gensym191_1476402029, 0, (resultHEX60gensym191_1476402036).length - 1)] = nimCopy(null, ([60,100,116,62] || []).concat(it_1476402040[chckIndx(0, 0, (it_1476402040).length - 1)] || [],[60,47,100,116,62,60,100,100,62] || [],it_1476402040[chckIndx(1, 0, (it_1476402040).length - 1)] || [],[60,47,100,100,62] || []), NTI33554449);
                iHEX60gensym191_1476402029 = addInt(iHEX60gensym191_1476402029, 1);
                i_587203308 = addInt(i_587203308, 1);
                if (!(((defs_1476401961).length == L_587203309))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary4 = ([60,100,108,62] || []).concat(nsuJoinSep(resultHEX60gensym191_1476402036, []) || [],[60,47,100,108,62] || []);
      break;
    case 1:
      Label9: {
        var iHEX60gensym196_1476402065 = 0;
        var resultHEX60gensym196_1476402072 = newSeq_536871460(chckRange((defs_1476401961).length, 0, 2147483647));
        Label10: {
          var it_1476402076 = [[], []];
          var i_587203313 = 0;
          var L_587203314 = (defs_1476401961).length;
          Label11: {
              Label12: while (true) {
              if (!(i_587203313 < L_587203314)) break Label12;
                it_1476402076 = defs_1476401961[chckIndx(i_587203313, 0, (defs_1476401961).length - 1)];
                resultHEX60gensym196_1476402072[chckIndx(iHEX60gensym196_1476402065, 0, (resultHEX60gensym196_1476402072).length - 1)] = nimCopy(null, nsuFormatOpenArray([92,105,116,101,109,91,36,49,93,32,36,50], it_1476402076), NTI33554449);
                iHEX60gensym196_1476402065 = addInt(iHEX60gensym196_1476402065, 1);
                i_587203313 = addInt(i_587203313, 1);
                if (!(((defs_1476401961).length == L_587203314))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary4 = env_2197816511([100,101,115,99,114,105,112,116,105,111,110], nsuJoinSep(resultHEX60gensym196_1476402072, []));
      break;
    case 2:
      Label13: {
        var iHEX60gensym199_1476402101 = 0;
        var resultHEX60gensym199_1476402108 = newSeq_536871460(chckRange((defs_1476401961).length, 0, 2147483647));
        Label14: {
          var it_1476402112 = [[], []];
          var i_587203318 = 0;
          var L_587203319 = (defs_1476401961).length;
          Label15: {
              Label16: while (true) {
              if (!(i_587203318 < L_587203319)) break Label16;
                it_1476402112 = defs_1476401961[chckIndx(i_587203318, 0, (defs_1476401961).length - 1)];
                resultHEX60gensym199_1476402108[chckIndx(iHEX60gensym199_1476402101, 0, (resultHEX60gensym199_1476402108).length - 1)] = nimCopy(null, nsuFormatOpenArray([42,32,36,49,58,32,36,50], it_1476402112), NTI33554449);
                iHEX60gensym199_1476402101 = addInt(iHEX60gensym199_1476402101, 1);
                i_587203318 = addInt(i_587203318, 1);
                if (!(((defs_1476401961).length == L_587203319))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary4 = nsuFormatSingleElem([10,36,49,10], nsuJoinSep(resultHEX60gensym199_1476402108, [10]));
      break;
    }
    result_1476401957 = nimCopy(null, Temporary4, NTI33554449);

  return result_1476401957;

}
    
function HEX3Aanonymous_1476402154(arg_1476402155) {
      var result_1476402156 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476401954 = expandArguments_2197815314(doc_1476395042, [100,101,115,99,114,105,112,116,105,111,110,45,108,105,115,116], arg_1476402155, [HEX2A_1593835743(1)]);
        result_1476402156 = nimCopy(result_1476402156, {typ: 1, str: descriptionListCmd_1476401955(to_2248147113(vals_1476401954[chckIndx(0, 0, (vals_1476401954).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476402156;

    }

function dfnCmd_1476402226(thNameHEX60gensym202_1476402228, labelHEX60gensym202_1476402230, contentHEX60gensym202_1476402231) {
    
function HEX3Aanonymous_1476402237(n_1476402249) {
      var result_1476402252 = false;

        result_1476402252 = !(eqStrings(n_1476402249, []));

      return result_1476402252;

    }
    
function HEX3Aanonymous_1476402262() {
      var result_1476402263 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym211_1476402272 = 0;
          var colontmp__587203761 = 0;
          colontmp__587203761 = subInt((doc_1476395042.stack).length, 1);
          var res_587203762 = colontmp__587203761;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203762)) break Label3;
                iHEX60gensym211_1476402272 = res_587203762;
                var frameHEX60gensym211_1476402273 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym211_1476402272, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym211_1476402273.lang)) {
                result_1476402263 = get_1476395606(frameHEX60gensym211_1476402273.lang);
                break BeforeRet;
                }
                
                res_587203762 = subInt(res_587203762, 1);
              }
          };
        };
      };

      return result_1476402263;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476402232 = [];

    var thNameHEX60gensym202_1476402259 = filter_2231369786(thNameHEX60gensym202_1476402228, HEX3Aanonymous_1476402237);
    var wordHEX60gensym202_1476402296 = translate_1610612762(1, HEX3Aanonymous_1476402262());
    var numHEX60gensym202_1476402297 = [];
    if (isSome_2214592897(labelHEX60gensym202_1476402230)) {
    var labelHEX60gensym202_1476402312 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym202_1476402230), NTI33554449);
    numHEX60gensym202_1476402297 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym202_1476402312, {Field0: (wordHEX60gensym202_1476402296 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym202_1476402297, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet378[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym202_1476402389 = nimCopy(null, wordHEX60gensym202_1476402296, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym202_1476402230)) {
      fullNameHEX60gensym202_1476402389.push.apply(fullNameHEX60gensym202_1476402389, ([32] || []).concat(numHEX60gensym202_1476402297 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym202_1476402259)) {
      var thNameHEX60gensym202_1476402411 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym202_1476402259), NTI33554449);
      fullNameHEX60gensym202_1476402389.push.apply(fullNameHEX60gensym202_1476402389, ([32,40] || []).concat(thNameHEX60gensym202_1476402411 || [],[41] || []));;
      }
      
      fullNameHEX60gensym202_1476402389.push.apply(fullNameHEX60gensym202_1476402389, [46]);;
      if (isSome_2214592897(labelHEX60gensym202_1476402230)) {
      var labelHEX60gensym202_1476402426 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym202_1476402230), NTI33554449);
      Label4: {
        var fmtRes_1476402430 = mnewString(0);
        fmtRes_1476402430.push.apply(fmtRes_1476402430, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476402430, [100,102,110]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym202_1476402426 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym202_1476402389 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym202_1476402231) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476402434 = mnewString(0);
          fmtRes_1476402434.push.apply(fmtRes_1476402434, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476402434, [100,102,110]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym202_1476402389 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym202_1476402231) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,100,102,110]), wordHEX60gensym202_1476402296) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,100,102,110,42]), wordHEX60gensym202_1476402296) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,100,102,110,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,100,102,110]), [35,49]) || []).concat([92,88,68,100,102,110] || [])), [92,101,110,100,88,68,100,102,110]) || []));
      var envNameHEX60gensym202_1476402481 = [88,68,100,102,110];
      var envContentHEX60gensym202_1476402482 = [];
      if (isSome_2214592897(labelHEX60gensym202_1476402230)) {
      var labelHEX60gensym202_1476402497 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym202_1476402230), NTI33554449);
      envNameHEX60gensym202_1476402481.push.apply(envNameHEX60gensym202_1476402481, [77,97,110,117,97,108]);;
      envContentHEX60gensym202_1476402482.push.apply(envContentHEX60gensym202_1476402482, ([123] || []).concat(numHEX60gensym202_1476402297 || [],[125] || []));;
      envContentHEX60gensym202_1476402482.push.apply(envContentHEX60gensym202_1476402482, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym202_1476402497));;
      }
      else {
      envNameHEX60gensym202_1476402481.push.apply(envNameHEX60gensym202_1476402481, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym202_1476402259)) {
      var thNameHEX60gensym202_1476402512 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym202_1476402259), NTI33554449);
      envContentHEX60gensym202_1476402482.push.apply(envContentHEX60gensym202_1476402482, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym202_1476402512));;
      }
      
      envContentHEX60gensym202_1476402482.push.apply(envContentHEX60gensym202_1476402482, nsuFormatSingleElem([36,49], contentHEX60gensym202_1476402231));;
      Temporary1 = env_2197816511(envNameHEX60gensym202_1476402481, envContentHEX60gensym202_1476402482);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym202_1476402259)) {
      var thNameHEX60gensym202_1476402527 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym202_1476402259), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym202_1476402296, NTI33554449), nimCopy(null, thNameHEX60gensym202_1476402527, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym202_1476402296, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym202_1476402231, NTI33554449)]);
      break;
    }
    result_1476402232 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476402232;

}
    
function HEX3Aanonymous_1476402533(arg_1476402534) {
      var result_1476402535 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476402225 = expandArguments_2197815314(doc_1476395042, [100,102,110], arg_1476402534, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476402535 = nimCopy(result_1476402535, {typ: 1, str: dfnCmd_1476402226(to_2214592966(vals_1476402225[chckIndx(0, 0, (vals_1476402225).length - 1)]), to_2214592966(vals_1476402225[chckIndx(1, 0, (vals_1476402225).length - 1)]), to_2181038173(vals_1476402225[chckIndx(2, 0, (vals_1476402225).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476402535;

    }

function drawCmd_1476402611(width_1476402613, height_1476402615, desc_1476402616) {
    var Temporary1;

  var result_1476402617 = [];

    switch (doc_1476395042.target) {
    case 0:
      Label2: {
        var fmtRes_1476402621 = [mnewString(0)];
        fmtRes_1476402621[0].push.apply(fmtRes_1476402621[0], [60,115,118,103,32,119,105,100,116,104,61,34]);;
        formatValue_1442840747(fmtRes_1476402621, 0, get_2231369976(width_1476402613, [51,54,48]), []);
        fmtRes_1476402621[0].push.apply(fmtRes_1476402621[0], [34,32,104,101,105,103,104,116,61,34]);;
        formatValue_1442840747(fmtRes_1476402621, 0, get_2231369976(height_1476402615, [51,54,48]), []);
        fmtRes_1476402621[0].push.apply(fmtRes_1476402621[0], makeNimstrLit("\" viewBox=\"0 0 360 360\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">"));;
        formatValue_1442840747(fmtRes_1476402621, 0, desc_1476402616, []);
        fmtRes_1476402621[0].push.apply(fmtRes_1476402621[0], [60,47,115,118,103,62]);;
      };
      Temporary1 = fmtRes_1476402621[0];
      break;
    case 1:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [68,114,97,119,105,110,103,32,105,115,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476402617 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476402617;

}
    
function HEX3Aanonymous_1476402659(arg_1476402660) {
      var result_1476402661 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [100,114,97,119]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, drawCommands_2231369736(doc_1476395042), NTI1593835562);
        var vals_1476402610 = expandArguments_2197815314(doc_1476395042, [100,114,97,119], arg_1476402660, [HEX3F_1593835740(0), HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_1476402661 = nimCopy(result_1476402661, {typ: 1, str: drawCmd_1476402611(to_2214592966(vals_1476402610[chckIndx(0, 0, (vals_1476402610).length - 1)]), to_2214592966(vals_1476402610[chckIndx(1, 0, (vals_1476402610).length - 1)]), to_2181038173(vals_1476402610[chckIndx(2, 0, (vals_1476402610).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476402661;

    }

function emphCmd_1476402741(arg_1476402742) {
    var Temporary1;

  var result_1476402743 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,101,109,62] || []).concat(arg_1476402742 || [],[60,47,101,109,62] || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,105,116], arg_1476402742);
      break;
    case 2:
      Temporary1 = arg_1476402742;
      break;
    }
    result_1476402743 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476402743;

}
    
function HEX3Aanonymous_1476402749(arg_1476402750) {
      var result_1476402751 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476402740 = expandArguments_2197815314(doc_1476395042, [101,109,112,104], arg_1476402750, [HEX21_1593835705(1)]);
        result_1476402751 = nimCopy(result_1476402751, {typ: 1, str: emphCmd_1476402741(to_2181038173(vals_1476402740[chckIndx(0, 0, (vals_1476402740).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476402751;

    }

function emptyFaviconCmd_1476402807() {
  var result_1476402808 = [];

    if ((doc_1476395042.target == 0)) {
    incl_2264927133(doc_1476395042.addToHead, [60,108,105,110,107,32,114,101,108,61,34,105,99,111,110,34,32,104,114,101,102,61,34,100,97,116,97,58,44,34,32,47,62]);
    }
    

  return result_1476402808;

}
    
function HEX3Aanonymous_1476402841(arg_1476402842) {
      var result_1476402843 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476402806 = expandArguments_2197815314(doc_1476395042, [101,109,112,116,121,45,102,97,118,105,99,111,110], arg_1476402842, []);
        result_1476402843 = nimCopy(result_1476402843, {typ: 0, str: emptyFaviconCmd_1476402807(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476402843;

    }

function exampleCmd_1476402908(thNameHEX60gensym236_1476402910, labelHEX60gensym236_1476402912, contentHEX60gensym236_1476402913) {
    
function HEX3Aanonymous_1476402919(n_1476402931) {
      var result_1476402934 = false;

        result_1476402934 = !(eqStrings(n_1476402931, []));

      return result_1476402934;

    }
    
function HEX3Aanonymous_1476402944() {
      var result_1476402945 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym245_1476402954 = 0;
          var colontmp__587203802 = 0;
          colontmp__587203802 = subInt((doc_1476395042.stack).length, 1);
          var res_587203803 = colontmp__587203802;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203803)) break Label3;
                iHEX60gensym245_1476402954 = res_587203803;
                var frameHEX60gensym245_1476402955 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym245_1476402954, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym245_1476402955.lang)) {
                result_1476402945 = get_1476395606(frameHEX60gensym245_1476402955.lang);
                break BeforeRet;
                }
                
                res_587203803 = subInt(res_587203803, 1);
              }
          };
        };
      };

      return result_1476402945;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476402914 = [];

    var thNameHEX60gensym236_1476402941 = filter_2231369786(thNameHEX60gensym236_1476402910, HEX3Aanonymous_1476402919);
    var wordHEX60gensym236_1476402978 = translate_1610612762(2, HEX3Aanonymous_1476402944());
    var numHEX60gensym236_1476402979 = [];
    if (isSome_2214592897(labelHEX60gensym236_1476402912)) {
    var labelHEX60gensym236_1476402994 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym236_1476402912), NTI33554449);
    numHEX60gensym236_1476402979 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym236_1476402994, {Field0: (wordHEX60gensym236_1476402978 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym236_1476402979, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet389[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym236_1476403071 = nimCopy(null, wordHEX60gensym236_1476402978, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym236_1476402912)) {
      fullNameHEX60gensym236_1476403071.push.apply(fullNameHEX60gensym236_1476403071, ([32] || []).concat(numHEX60gensym236_1476402979 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym236_1476402941)) {
      var thNameHEX60gensym236_1476403093 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym236_1476402941), NTI33554449);
      fullNameHEX60gensym236_1476403071.push.apply(fullNameHEX60gensym236_1476403071, ([32,40] || []).concat(thNameHEX60gensym236_1476403093 || [],[41] || []));;
      }
      
      fullNameHEX60gensym236_1476403071.push.apply(fullNameHEX60gensym236_1476403071, [46]);;
      if (isSome_2214592897(labelHEX60gensym236_1476402912)) {
      var labelHEX60gensym236_1476403108 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym236_1476402912), NTI33554449);
      Label4: {
        var fmtRes_1476403112 = mnewString(0);
        fmtRes_1476403112.push.apply(fmtRes_1476403112, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476403112, [101,120,97,109,112,108,101]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym236_1476403108 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym236_1476403071 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym236_1476402913) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476403116 = mnewString(0);
          fmtRes_1476403116.push.apply(fmtRes_1476403116, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476403116, [101,120,97,109,112,108,101]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym236_1476403071 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym236_1476402913) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,101,120,97,109,112,108,101]), wordHEX60gensym236_1476402978) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,101,120,97,109,112,108,101,42]), wordHEX60gensym236_1476402978) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,101,120,97,109,112,108,101,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,101,120,97,109,112,108,101]), [35,49]) || []).concat([92,88,68,101,120,97,109,112,108,101] || [])), [92,101,110,100,88,68,101,120,97,109,112,108,101]) || []));
      var envNameHEX60gensym236_1476403163 = [88,68,101,120,97,109,112,108,101];
      var envContentHEX60gensym236_1476403164 = [];
      if (isSome_2214592897(labelHEX60gensym236_1476402912)) {
      var labelHEX60gensym236_1476403179 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym236_1476402912), NTI33554449);
      envNameHEX60gensym236_1476403163.push.apply(envNameHEX60gensym236_1476403163, [77,97,110,117,97,108]);;
      envContentHEX60gensym236_1476403164.push.apply(envContentHEX60gensym236_1476403164, ([123] || []).concat(numHEX60gensym236_1476402979 || [],[125] || []));;
      envContentHEX60gensym236_1476403164.push.apply(envContentHEX60gensym236_1476403164, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym236_1476403179));;
      }
      else {
      envNameHEX60gensym236_1476403163.push.apply(envNameHEX60gensym236_1476403163, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym236_1476402941)) {
      var thNameHEX60gensym236_1476403194 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym236_1476402941), NTI33554449);
      envContentHEX60gensym236_1476403164.push.apply(envContentHEX60gensym236_1476403164, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym236_1476403194));;
      }
      
      envContentHEX60gensym236_1476403164.push.apply(envContentHEX60gensym236_1476403164, nsuFormatSingleElem([36,49], contentHEX60gensym236_1476402913));;
      Temporary1 = env_2197816511(envNameHEX60gensym236_1476403163, envContentHEX60gensym236_1476403164);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym236_1476402941)) {
      var thNameHEX60gensym236_1476403209 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym236_1476402941), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym236_1476402978, NTI33554449), nimCopy(null, thNameHEX60gensym236_1476403209, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym236_1476402978, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym236_1476402913, NTI33554449)]);
      break;
    }
    result_1476402914 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476402914;

}
    
function HEX3Aanonymous_1476403215(arg_1476403216) {
      var result_1476403217 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476402907 = expandArguments_2197815314(doc_1476395042, [101,120,97,109,112,108,101], arg_1476403216, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476403217 = nimCopy(result_1476403217, {typ: 1, str: exampleCmd_1476402908(to_2214592966(vals_1476402907[chckIndx(0, 0, (vals_1476402907).length - 1)]), to_2214592966(vals_1476402907[chckIndx(1, 0, (vals_1476402907).length - 1)]), to_2181038173(vals_1476402907[chckIndx(2, 0, (vals_1476402907).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476403217;

    }

function exerciseCmd_1476403306(thNameHEX60gensym254_1476403308, labelHEX60gensym254_1476403310, contentHEX60gensym254_1476403311) {
    
function HEX3Aanonymous_1476403317(n_1476403329) {
      var result_1476403332 = false;

        result_1476403332 = !(eqStrings(n_1476403329, []));

      return result_1476403332;

    }
    
function HEX3Aanonymous_1476403342() {
      var result_1476403343 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym263_1476403352 = 0;
          var colontmp__587203806 = 0;
          colontmp__587203806 = subInt((doc_1476395042.stack).length, 1);
          var res_587203807 = colontmp__587203806;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203807)) break Label3;
                iHEX60gensym263_1476403352 = res_587203807;
                var frameHEX60gensym263_1476403353 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym263_1476403352, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym263_1476403353.lang)) {
                result_1476403343 = get_1476395606(frameHEX60gensym263_1476403353.lang);
                break BeforeRet;
                }
                
                res_587203807 = subInt(res_587203807, 1);
              }
          };
        };
      };

      return result_1476403343;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476403312 = [];

    var thNameHEX60gensym254_1476403339 = filter_2231369786(thNameHEX60gensym254_1476403308, HEX3Aanonymous_1476403317);
    var wordHEX60gensym254_1476403376 = translate_1610612762(3, HEX3Aanonymous_1476403342());
    var numHEX60gensym254_1476403377 = [];
    if (isSome_2214592897(labelHEX60gensym254_1476403310)) {
    var labelHEX60gensym254_1476403392 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym254_1476403310), NTI33554449);
    numHEX60gensym254_1476403377 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym254_1476403392, {Field0: (wordHEX60gensym254_1476403376 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym254_1476403377, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet390[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym254_1476403469 = nimCopy(null, wordHEX60gensym254_1476403376, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym254_1476403310)) {
      fullNameHEX60gensym254_1476403469.push.apply(fullNameHEX60gensym254_1476403469, ([32] || []).concat(numHEX60gensym254_1476403377 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym254_1476403339)) {
      var thNameHEX60gensym254_1476403491 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym254_1476403339), NTI33554449);
      fullNameHEX60gensym254_1476403469.push.apply(fullNameHEX60gensym254_1476403469, ([32,40] || []).concat(thNameHEX60gensym254_1476403491 || [],[41] || []));;
      }
      
      fullNameHEX60gensym254_1476403469.push.apply(fullNameHEX60gensym254_1476403469, [46]);;
      if (isSome_2214592897(labelHEX60gensym254_1476403310)) {
      var labelHEX60gensym254_1476403506 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym254_1476403310), NTI33554449);
      Label4: {
        var fmtRes_1476403510 = mnewString(0);
        fmtRes_1476403510.push.apply(fmtRes_1476403510, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476403510, [101,120,101,114,99,105,115,101]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym254_1476403506 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym254_1476403469 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym254_1476403311) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476403514 = mnewString(0);
          fmtRes_1476403514.push.apply(fmtRes_1476403514, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476403514, [101,120,101,114,99,105,115,101]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym254_1476403469 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym254_1476403311) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,101,120,101,114,99,105,115,101]), wordHEX60gensym254_1476403376) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,101,120,101,114,99,105,115,101,42]), wordHEX60gensym254_1476403376) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,101,120,101,114,99,105,115,101,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,101,120,101,114,99,105,115,101]), [35,49]) || []).concat([92,88,68,101,120,101,114,99,105,115,101] || [])), [92,101,110,100,88,68,101,120,101,114,99,105,115,101]) || []));
      var envNameHEX60gensym254_1476403561 = [88,68,101,120,101,114,99,105,115,101];
      var envContentHEX60gensym254_1476403562 = [];
      if (isSome_2214592897(labelHEX60gensym254_1476403310)) {
      var labelHEX60gensym254_1476403577 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym254_1476403310), NTI33554449);
      envNameHEX60gensym254_1476403561.push.apply(envNameHEX60gensym254_1476403561, [77,97,110,117,97,108]);;
      envContentHEX60gensym254_1476403562.push.apply(envContentHEX60gensym254_1476403562, ([123] || []).concat(numHEX60gensym254_1476403377 || [],[125] || []));;
      envContentHEX60gensym254_1476403562.push.apply(envContentHEX60gensym254_1476403562, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym254_1476403577));;
      }
      else {
      envNameHEX60gensym254_1476403561.push.apply(envNameHEX60gensym254_1476403561, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym254_1476403339)) {
      var thNameHEX60gensym254_1476403592 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym254_1476403339), NTI33554449);
      envContentHEX60gensym254_1476403562.push.apply(envContentHEX60gensym254_1476403562, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym254_1476403592));;
      }
      
      envContentHEX60gensym254_1476403562.push.apply(envContentHEX60gensym254_1476403562, nsuFormatSingleElem([36,49], contentHEX60gensym254_1476403311));;
      Temporary1 = env_2197816511(envNameHEX60gensym254_1476403561, envContentHEX60gensym254_1476403562);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym254_1476403339)) {
      var thNameHEX60gensym254_1476403607 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym254_1476403339), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym254_1476403376, NTI33554449), nimCopy(null, thNameHEX60gensym254_1476403607, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym254_1476403376, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym254_1476403311, NTI33554449)]);
      break;
    }
    result_1476403312 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476403312;

}
    
function HEX3Aanonymous_1476403613(arg_1476403614) {
      var result_1476403615 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476403305 = expandArguments_2197815314(doc_1476395042, [101,120,101,114,99,105,115,101], arg_1476403614, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476403615 = nimCopy(result_1476403615, {typ: 1, str: exerciseCmd_1476403306(to_2214592966(vals_1476403305[chckIndx(0, 0, (vals_1476403305).length - 1)]), to_2214592966(vals_1476403305[chckIndx(1, 0, (vals_1476403305).length - 1)]), to_2181038173(vals_1476403305[chckIndx(2, 0, (vals_1476403305).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476403615;

    }

function expandCmd_1476403691(arg_1476403692) {
  var result_1476403693 = [];

    result_1476403693 = nimCopy(null, expandStr_1660945068(doc_1476395042, arg_1476403692), NTI33554449);

  return result_1476403693;

}
    
function HEX3Aanonymous_1476403699(arg_1476403700) {
      var result_1476403701 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [101,120,112,97,110,100]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476403690 = expandArguments_2197815314(doc_1476395042, [101,120,112,97,110,100], arg_1476403700, [HEX21_1593835705(0)]);
        result_1476403701 = nimCopy(result_1476403701, {typ: 0, str: expandCmd_1476403691(to_2181038173(vals_1476403690[chckIndx(0, 0, (vals_1476403690).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476403701;

    }

function figureCmd_1476403757(content_1476403758, caption_1476403760) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1476403761 = [];

    switch (doc_1476395042.target) {
    case 0:
      if (isSome_2214592897(caption_1476403760)) {
      var caption_1476403776 = nimCopy(null, unsafeGet_2248147493(caption_1476403760), NTI33554449);
      Temporary2 = ([60,102,105,103,117,114,101,62] || []).concat(content_1476403758 || [],[60,102,105,103,99,97,112,116,105,111,110,62] || [],caption_1476403776 || [],[60,47,102,105,103,99,97,112,116,105,111,110,62,60,47,102,105,103,117,114,101,62] || []);
      }
      else {
      Temporary2 = ([60,102,105,103,117,114,101,62] || []).concat(content_1476403758 || [],[60,47,102,105,103,117,114,101,62] || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      if (isSome_2214592897(caption_1476403760)) {
      var caption_1476403791 = nimCopy(null, unsafeGet_2248147493(caption_1476403760), NTI33554449);
      Temporary3 = HEX7BHEX7D_2197816503([99,97,112,116,105,111,110], caption_1476403791);
      }
      else {
      Temporary3 = [];
      }
      
      Temporary1 = env_2197816511([102,105,103,117,114,101], ([91,104,93,92,99,101,110,116,101,114,105,110,103] || []).concat(content_1476403758 || [],Temporary3 || []));
      break;
    case 2:
      if (isSome_2214592897(caption_1476403760)) {
      var caption_1476403806 = nimCopy(null, unsafeGet_2248147493(caption_1476403760), NTI33554449);
      Temporary4 = ([10] || []).concat(caption_1476403806 || []);
      }
      else {
      Temporary4 = [];
      }
      
      Temporary1 = ([10] || []).concat(content_1476403758 || [],Temporary4 || []);
      break;
    }
    result_1476403761 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476403761;

}
    
function HEX3Aanonymous_1476403812(arg_1476403813) {
      var result_1476403814 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476403756 = expandArguments_2197815314(doc_1476395042, [102,105,103,117,114,101], arg_1476403813, [HEX21_1593835705(1), HEX3F_1593835740(1)]);
        result_1476403814 = nimCopy(result_1476403814, {typ: 1, str: figureCmd_1476403757(to_2181038173(vals_1476403756[chckIndx(0, 0, (vals_1476403756).length - 1)]), to_2214592966(vals_1476403756[chckIndx(1, 0, (vals_1476403756).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476403814;

    }

function forEachCmd_1476403880(name_1476403881, list_1476403882, tmpl_1476403883) {
            
function HEX3Aanonymous_1476403918(__1476403930) {
              var result_1476403933 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                result_1476403933 = nimCopy(result_1476403933, itemCopy_1476403908, NTI1593835525);

              return result_1476403933;

            }

  var result_1476403884 = [];

    var results_1476403885 = [];
    Label1: {
      var item_1476403907 = ({typ: 0, str: [], list: [], opt: ({val: null})});
      var i_587203336 = 0;
      var L_587203337 = (list_1476403882).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203336 < L_587203337)) break Label3;
            item_1476403907 = list_1476403882[chckIndx(i_587203336, 0, (list_1476403882).length - 1)];
            var itemCopy_1476403908 = nimCopy(null, item_1476403907, NTI1593835525);
            HEX5BHEX5DHEX3D_2181038249(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, name_1476403881, HEX3Aanonymous_1476403918);
            results_1476403885.push(expand_1660945059(doc_1476395042, tmpl_1476403883, item_1476403907.typ));;
            i_587203336 = addInt(i_587203336, 1);
            if (!(((list_1476403882).length == L_587203337))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1476403884 = nimCopy(null, results_1476403885, NTI1476401005);

  return result_1476403884;

}
    
function HEX3Aanonymous_1476404000(arg_1476404001) {
      var result_1476404002 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476403879 = expandArguments_2197815314(doc_1476395042, [102,111,114,45,101,97,99,104], arg_1476404001, [HEX21_1593835705(0), HEX21_1593835705(2), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476404002 = nimCopy(result_1476404002, {typ: 2, list: forEachCmd_1476403880(to_2181038173(vals_1476403879[chckIndx(0, 0, (vals_1476403879).length - 1)]), to_1476404011(vals_1476403879[chckIndx(1, 0, (vals_1476403879).length - 1)]), to_2181038173(vals_1476403879[chckIndx(2, 0, (vals_1476403879).length - 1)])), str: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404002;

    }

function getDocPathAbsoluteCmd_1476404127() {
    var Temporary1;

  var result_1476404128 = [];

    var path_1476404129 = nimCopy(null, doc_1476395042.stack[chckIndx(0, 0, (doc_1476395042.stack).length - 1)].path, NTI1593835612);
    if (isSome_2214592897(path_1476404129)) {
    var path_1476404144 = nimCopy(null, unsafeGet_2248147493(path_1476404129), NTI33554449);
    Temporary1 = absolutePath_1862271311(path_1476404144, nosgetCurrentDir());
    }
    else {
    Temporary1 = [];
    }
    
    result_1476404128 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476404128;

}
    
function HEX3Aanonymous_1476404150(arg_1476404151) {
      var result_1476404152 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [103,101,116,45,100,111,99,45,112,97,116,104,45,97,98,115,111,108,117,116,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476404126 = expandArguments_2197815314(doc_1476395042, [103,101,116,45,100,111,99,45,112,97,116,104,45,97,98,115,111,108,117,116,101], arg_1476404151, []);
        result_1476404152 = nimCopy(result_1476404152, {typ: 0, str: getDocPathAbsoluteCmd_1476404127(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404152;

    }

function getDocPathRelativeToContainingCmd_1476404204(arg_1476404205) {
  var result_1476404206 = [];

    result_1476404206 = nimCopy(null, [], NTI33554449);

  return result_1476404206;

}
    
function HEX3Aanonymous_1476404212(arg_1476404213) {
      var result_1476404214 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [103,101,116,45,100,111,99,45,112,97,116,104,45,114,101,108,97,116,105,118,101,45,116,111,45,99,111,110,116,97,105,110,105,110,103]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476404203 = expandArguments_2197815314(doc_1476395042, [103,101,116,45,100,111,99,45,112,97,116,104,45,114,101,108,97,116,105,118,101,45,116,111,45,99,111,110,116,97,105,110,105,110,103], arg_1476404213, [HEX21_1593835705(0)]);
        result_1476404214 = nimCopy(result_1476404214, {typ: 0, str: getDocPathRelativeToContainingCmd_1476404204(to_2181038173(vals_1476404203[chckIndx(0, 0, (vals_1476404203).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404214;

    }

function headerRowCmd_1476404270(entries_1476404271) {
    var Temporary4;

  var result_1476404272 = [];

      var resultHEX60gensym303_1476404274 = false;
      Label1: {
        var it_1476404278 = ({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});
        var i_587203341 = 0;
        var L_587203342 = (doc_1476395042.stack).length;
        Label2: {
            Label3: while (true) {
            if (!(i_587203341 < L_587203342)) break Label3;
              it_1476404278 = doc_1476395042.stack[chckIndx(i_587203341, 0, (doc_1476395042.stack).length - 1)];
              if (eqStrings(HEX24_1560281153(it_1476404278.cmdName), [116,97,98,108,101])) {
              resultHEX60gensym303_1476404274 = true;
              break Label1;
              }
              
              i_587203341 = addInt(i_587203341, 1);
              if (!(((doc_1476395042.stack).length == L_587203342))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    if (!(resultHEX60gensym303_1476404274)) {
    raiseException({message: [84,104,101,32,104,101,97,100,101,114,45,114,111,119,32,99,111,109,109,97,110,100,32,104,97,115,32,116,111,32,98,101,32,105,110,115,105,100,101,32,97,32,116,97,98,108,101,32,99,111,109,109,97,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    switch (doc_1476395042.target) {
    case 0:
      Label5: {
        var iHEX60gensym305_1476404299 = 0;
        var resultHEX60gensym305_1476404306 = newSeq_536871460(chckRange((entries_1476404271).length, 0, 2147483647));
        Label6: {
          var it_1476404310 = [];
          var i_587203351 = 0;
          var L_587203352 = (entries_1476404271).length;
          Label7: {
              Label8: while (true) {
              if (!(i_587203351 < L_587203352)) break Label8;
                it_1476404310 = entries_1476404271[chckIndx(i_587203351, 0, (entries_1476404271).length - 1)];
                resultHEX60gensym305_1476404306[chckIndx(iHEX60gensym305_1476404299, 0, (resultHEX60gensym305_1476404306).length - 1)] = nimCopy(null, ([60,116,104,62] || []).concat(it_1476404310 || [],[60,47,116,104,62] || []), NTI33554449);
                iHEX60gensym305_1476404299 = addInt(iHEX60gensym305_1476404299, 1);
                i_587203351 = addInt(i_587203351, 1);
                if (!(((entries_1476404271).length == L_587203352))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary4 = ([60,116,114,62] || []).concat(nsuJoinSep(resultHEX60gensym305_1476404306, []) || [],[60,47,116,114,62] || []);
      break;
    case 1:
      Temporary4 = nsuFormatSingleElem([36,49,92,92,92,109,105,100,114,117,108,101,32], nsuJoinSep(entries_1476404271, [38]));
      break;
    case 2:
      raiseException({message: [84,97,98,108,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476404272 = nimCopy(null, Temporary4, NTI33554449);

  return result_1476404272;

}
    
function HEX3Aanonymous_1476404320(arg_1476404321) {
      var result_1476404322 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476404269 = expandArguments_2197815314(doc_1476395042, [104,101,97,100,101,114,45,114,111,119], arg_1476404321, [HEX2A_1593835743(1)]);
        result_1476404322 = nimCopy(result_1476404322, {typ: 1, str: headerRowCmd_1476404270(to_2248147113(vals_1476404269[chckIndx(0, 0, (vals_1476404269).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404322;

    }

function hideCmd_1476404379(arg_1476404380) {
  var result_1476404381 = [];

  return result_1476404381;

}
    
function HEX3Aanonymous_1476404387(arg_1476404388) {
      var result_1476404389 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476404378 = expandArguments_2197815314(doc_1476395042, [104,105,100,101], arg_1476404388, [HEX21_1593835705(0)]);
        result_1476404389 = nimCopy(result_1476404389, {typ: 0, str: hideCmd_1476404379(to_2181038173(vals_1476404378[chckIndx(0, 0, (vals_1476404378).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404389;

    }

function hintCmd_1476404458(thNameHEX60gensym311_1476404460, labelHEX60gensym311_1476404462, contentHEX60gensym311_1476404463) {
    
function HEX3Aanonymous_1476404469(n_1476404481) {
      var result_1476404484 = false;

        result_1476404484 = !(eqStrings(n_1476404481, []));

      return result_1476404484;

    }
    
function HEX3Aanonymous_1476404494() {
      var result_1476404495 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym320_1476404504 = 0;
          var colontmp__587203814 = 0;
          colontmp__587203814 = subInt((doc_1476395042.stack).length, 1);
          var res_587203815 = colontmp__587203814;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203815)) break Label3;
                iHEX60gensym320_1476404504 = res_587203815;
                var frameHEX60gensym320_1476404505 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym320_1476404504, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym320_1476404505.lang)) {
                result_1476404495 = get_1476395606(frameHEX60gensym320_1476404505.lang);
                break BeforeRet;
                }
                
                res_587203815 = subInt(res_587203815, 1);
              }
          };
        };
      };

      return result_1476404495;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476404464 = [];

    var thNameHEX60gensym311_1476404491 = filter_2231369786(thNameHEX60gensym311_1476404460, HEX3Aanonymous_1476404469);
    var wordHEX60gensym311_1476404528 = translate_1610612762(4, HEX3Aanonymous_1476404494());
    var numHEX60gensym311_1476404529 = [];
    if (isSome_2214592897(labelHEX60gensym311_1476404462)) {
    var labelHEX60gensym311_1476404544 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym311_1476404462), NTI33554449);
    numHEX60gensym311_1476404529 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym311_1476404544, {Field0: (wordHEX60gensym311_1476404528 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym311_1476404529, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet405[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym311_1476404621 = nimCopy(null, wordHEX60gensym311_1476404528, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym311_1476404462)) {
      fullNameHEX60gensym311_1476404621.push.apply(fullNameHEX60gensym311_1476404621, ([32] || []).concat(numHEX60gensym311_1476404529 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym311_1476404491)) {
      var thNameHEX60gensym311_1476404643 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym311_1476404491), NTI33554449);
      fullNameHEX60gensym311_1476404621.push.apply(fullNameHEX60gensym311_1476404621, ([32,40] || []).concat(thNameHEX60gensym311_1476404643 || [],[41] || []));;
      }
      
      fullNameHEX60gensym311_1476404621.push.apply(fullNameHEX60gensym311_1476404621, [46]);;
      if (isSome_2214592897(labelHEX60gensym311_1476404462)) {
      var labelHEX60gensym311_1476404658 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym311_1476404462), NTI33554449);
      Label4: {
        var fmtRes_1476404662 = mnewString(0);
        fmtRes_1476404662.push.apply(fmtRes_1476404662, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476404662, [104,105,110,116]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym311_1476404658 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym311_1476404621 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym311_1476404463) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476404666 = mnewString(0);
          fmtRes_1476404666.push.apply(fmtRes_1476404666, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476404666, [104,105,110,116]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym311_1476404621 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym311_1476404463) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,104,105,110,116]), wordHEX60gensym311_1476404528) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,104,105,110,116,42]), wordHEX60gensym311_1476404528) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,104,105,110,116,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,104,105,110,116]), [35,49]) || []).concat([92,88,68,104,105,110,116] || [])), [92,101,110,100,88,68,104,105,110,116]) || []));
      var envNameHEX60gensym311_1476404713 = [88,68,104,105,110,116];
      var envContentHEX60gensym311_1476404714 = [];
      if (isSome_2214592897(labelHEX60gensym311_1476404462)) {
      var labelHEX60gensym311_1476404729 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym311_1476404462), NTI33554449);
      envNameHEX60gensym311_1476404713.push.apply(envNameHEX60gensym311_1476404713, [77,97,110,117,97,108]);;
      envContentHEX60gensym311_1476404714.push.apply(envContentHEX60gensym311_1476404714, ([123] || []).concat(numHEX60gensym311_1476404529 || [],[125] || []));;
      envContentHEX60gensym311_1476404714.push.apply(envContentHEX60gensym311_1476404714, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym311_1476404729));;
      }
      else {
      envNameHEX60gensym311_1476404713.push.apply(envNameHEX60gensym311_1476404713, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym311_1476404491)) {
      var thNameHEX60gensym311_1476404744 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym311_1476404491), NTI33554449);
      envContentHEX60gensym311_1476404714.push.apply(envContentHEX60gensym311_1476404714, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym311_1476404744));;
      }
      
      envContentHEX60gensym311_1476404714.push.apply(envContentHEX60gensym311_1476404714, nsuFormatSingleElem([36,49], contentHEX60gensym311_1476404463));;
      Temporary1 = env_2197816511(envNameHEX60gensym311_1476404713, envContentHEX60gensym311_1476404714);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym311_1476404491)) {
      var thNameHEX60gensym311_1476404759 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym311_1476404491), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym311_1476404528, NTI33554449), nimCopy(null, thNameHEX60gensym311_1476404759, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym311_1476404528, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym311_1476404463, NTI33554449)]);
      break;
    }
    result_1476404464 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476404464;

}
    
function HEX3Aanonymous_1476404765(arg_1476404766) {
      var result_1476404767 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476404457 = expandArguments_2197815314(doc_1476395042, [104,105,110,116], arg_1476404766, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476404767 = nimCopy(result_1476404767, {typ: 1, str: hintCmd_1476404458(to_2214592966(vals_1476404457[chckIndx(0, 0, (vals_1476404457).length - 1)]), to_2214592966(vals_1476404457[chckIndx(1, 0, (vals_1476404457).length - 1)]), to_2181038173(vals_1476404457[chckIndx(2, 0, (vals_1476404457).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404767;

    }

function htmlAddAttrsCmd_1476404843(args_1476404844, tag_1476404845) {
    var Temporary1;

  var result_1476404846 = [];

    switch (doc_1476395042.target) {
    case 0:
      var matches_1476404847 = [[], []];
      if (!(npegsmatchCapture(tag_1476404845, peg_1493176580([123,39,60,39,32,91,97,45,122,65,45,90,45,93,43,125,32,123,46,42,125]), matches_1476404847, 0))) {
      raiseException({message: [67,97,110,39,116,32,97,100,100,32,72,84,77,76,32,97,116,116,114,105,98,117,116,101,32,116,111,32,115,111,109,101,116,104,105,110,103,32,116,104,97,116,32,105,115,110,39,116,32,97,110,32,72,84,77,76,32,116,97,103], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
      var attrs_1476404855 = newSeq_536871460(0);
      var classes_1476404863 = newSeq_536871460(0);
      Label2: {
        var arg_1476404867 = [];
        var i_587203359 = 0;
        var L_587203360 = (args_1476404844).length;
        Label3: {
            Label4: while (true) {
            if (!(i_587203359 < L_587203360)) break Label4;
              arg_1476404867 = args_1476404844[chckIndx(i_587203359, 0, (args_1476404844).length - 1)];
              if (nsuStartsWith(arg_1476404867, [35])) {
              attrs_1476404855.push(nsuFormatSingleElem([105,100,61,34,36,49,34], HEX5BHEX5D_754976027(arg_1476404867, HEX2EHEX2E_973078632(1, 1))));;
              }
              else {
              if (nsuStartsWith(arg_1476404867, [46])) {
              classes_1476404863.push(HEX5BHEX5D_754976027(arg_1476404867, HEX2EHEX2E_973078632(1, 1)));;
              }
              else {
                var Temporary5 = nimCopy(null, arg_1476404867, NTI33554449);
              attrs_1476404855.push(Temporary5);;
              }
              }
              i_587203359 = addInt(i_587203359, 1);
              if (!(((args_1476404844).length == L_587203360))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (!(((classes_1476404863).length == 0))) {
      attrs_1476404855.push(nsuFormatSingleElem([99,108,97,115,115,61,34,36,49,34], nsuJoinSep(classes_1476404863, [32])));;
      }
      
      Temporary1 = nsuJoinSep(matches_1476404847, ([32] || []).concat(nsuJoinSep(attrs_1476404855, [32]) || []));
      break;
    default: 
      Temporary1 = tag_1476404845;
      break;
    }
    result_1476404846 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476404846;

}
    
function HEX3Aanonymous_1476404928(arg_1476404929) {
      var result_1476404930 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [104,116,109,108,45,97,100,100,45,97,116,116,114,115]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476404842 = expandArguments_2197815314(doc_1476395042, [104,116,109,108,45,97,100,100,45,97,116,116,114,115], arg_1476404929, [HEX2A_1593835743(0), HEX21_1593835705(1)]);
        result_1476404930 = nimCopy(result_1476404930, {typ: 1, str: htmlAddAttrsCmd_1476404843(to_2248147113(vals_1476404842[chckIndx(0, 0, (vals_1476404842).length - 1)]), to_2181038173(vals_1476404842[chckIndx(1, 0, (vals_1476404842).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476404930;

    }

function ifFlagCmd_1476404991(flag_1476404992, body_1476404993) {
    var Temporary1;

  var result_1476404994 = [];

    if (contains_973078577(doc_1476395042.flags, flag_1476404992)) {
    Temporary1 = renderStr_1660945076(doc_1476395042, body_1476404993);
    }
    else {
    Temporary1 = [];
    }
    
    result_1476404994 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476404994;

}
    
function HEX3Aanonymous_1476405004(arg_1476405005) {
      var result_1476405006 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476404990 = expandArguments_2197815314(doc_1476395042, [105,102,45,102,108,97,103], arg_1476405005, [HEX21_1593835705(0), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476405006 = nimCopy(result_1476405006, {typ: 1, str: ifFlagCmd_1476404991(to_2181038173(vals_1476404990[chckIndx(0, 0, (vals_1476404990).length - 1)]), to_2181038173(vals_1476404990[chckIndx(1, 0, (vals_1476404990).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405006;

    }

function ifHtmlCmd_1476405066(arg_1476405067) {
    var Temporary1;

  var result_1476405068 = [];

    if ((doc_1476395042.target == 0)) {
    Temporary1 = renderStr_1660945076(doc_1476395042, arg_1476405067);
    }
    else {
    Temporary1 = [];
    }
    
    result_1476405068 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405068;

}
    
function HEX3Aanonymous_1476405078(arg_1476405079) {
      var result_1476405080 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476405065 = expandArguments_2197815314(doc_1476395042, [105,102,45,104,116,109,108], arg_1476405079, [{kind: 3, base: 0}]);
        result_1476405080 = nimCopy(result_1476405080, {typ: 1, str: ifHtmlCmd_1476405066(to_2181038173(vals_1476405065[chckIndx(0, 0, (vals_1476405065).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405080;

    }

function ifNotFlagCmd_1476405136(flag_1476405137, body_1476405138) {
    var Temporary1;

  var result_1476405139 = [];

    if (!(contains_973078577(doc_1476395042.flags, flag_1476405137))) {
    Temporary1 = renderStr_1660945076(doc_1476395042, body_1476405138);
    }
    else {
    Temporary1 = [];
    }
    
    result_1476405139 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405139;

}
    
function HEX3Aanonymous_1476405149(arg_1476405150) {
      var result_1476405151 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476405135 = expandArguments_2197815314(doc_1476395042, [105,102,45,110,111,116,45,102,108,97,103], arg_1476405150, [HEX21_1593835705(0), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476405151 = nimCopy(result_1476405151, {typ: 1, str: ifNotFlagCmd_1476405136(to_2181038173(vals_1476405135[chckIndx(0, 0, (vals_1476405135).length - 1)]), to_2181038173(vals_1476405135[chckIndx(1, 0, (vals_1476405135).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405151;

    }

function ifLatexCmd_1476405211(arg_1476405212) {
    var Temporary1;

  var result_1476405213 = [];

    if ((doc_1476395042.target == 1)) {
    Temporary1 = renderStr_1660945076(doc_1476395042, arg_1476405212);
    }
    else {
    Temporary1 = [];
    }
    
    result_1476405213 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405213;

}
    
function HEX3Aanonymous_1476405223(arg_1476405224) {
      var result_1476405225 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476405210 = expandArguments_2197815314(doc_1476395042, [105,102,45,108,97,116,101,120], arg_1476405224, [{kind: 3, base: 0}]);
        result_1476405225 = nimCopy(result_1476405225, {typ: 1, str: ifLatexCmd_1476405211(to_2181038173(vals_1476405210[chckIndx(0, 0, (vals_1476405210).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405225;

    }

function ifGemtextCmd_1476405281(arg_1476405282) {
    var Temporary1;

  var result_1476405283 = [];

    if ((doc_1476395042.target == 2)) {
    Temporary1 = renderStr_1660945076(doc_1476395042, arg_1476405282);
    }
    else {
    Temporary1 = [];
    }
    
    result_1476405283 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405283;

}
    
function HEX3Aanonymous_1476405293(arg_1476405294) {
      var result_1476405295 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476405280 = expandArguments_2197815314(doc_1476395042, [105,102,45,103,101,109,116,101,120,116], arg_1476405294, [{kind: 3, base: 0}]);
        result_1476405295 = nimCopy(result_1476405295, {typ: 1, str: ifGemtextCmd_1476405281(to_2181038173(vals_1476405280[chckIndx(0, 0, (vals_1476405280).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405295;

    }

function includeCmd_1476405351(filename_1476405352, args_1476405353) {
    
function HEX3Aanonymous_1476405360() {
      var result_1476405361 = [];

      BeforeRet: {
        Label1: {
          var iHEX60gensym362_1476405370 = 0;
          var colontmp__587203826 = 0;
          colontmp__587203826 = subInt((doc_1476395042.stack).length, 1);
          var res_587203827 = colontmp__587203826;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203827)) break Label3;
                iHEX60gensym362_1476405370 = res_587203827;
                var frameHEX60gensym362_1476405371 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym362_1476405370, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_2214592897(frameHEX60gensym362_1476405371.path)) {
                result_1476405361 = nimCopy(null, get_2214592918(frameHEX60gensym362_1476405371.path), NTI33554449);
                break BeforeRet;
                }
                
                res_587203827 = subInt(res_587203827, 1);
              }
          };
        };
      };

      return result_1476405361;

    }
    var Temporary1;
    var Temporary3;
    
function HEX3Aanonymous_1476405407() {
      var result_1476405408 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym363_1476405417 = 0;
          var colontmp__587203831 = 0;
          colontmp__587203831 = subInt((doc_1476395042.stack).length, 1);
          var res_587203832 = colontmp__587203831;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203832)) break Label3;
                iHEX60gensym363_1476405417 = res_587203832;
                var frameHEX60gensym363_1476405418 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym363_1476405417, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym363_1476405418.lang)) {
                result_1476405408 = get_1476395606(frameHEX60gensym363_1476405418.lang);
                break BeforeRet;
                }
                
                res_587203832 = subInt(res_587203832, 1);
              }
          };
        };
      };

      return result_1476405408;

    }

  var result_1476405354 = [];

    if (!((modInt((args_1476405353).length, 2) == 0))) {
    raiseException({message: [65,100,100,105,116,105,111,110,97,108,32,97,114,103,117,109,101,110,116,115,32,116,111,32,105,110,99,108,117,100,101,32,109,117,115,116,32,99,111,109,101,32,105,110,32,112,97,105,114,115], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var path_1476405394 = HEX2F_1862271062(nossplitPath(HEX3Aanonymous_1476405360()).Field0, filename_1476405352);
++excHandler;
    try {
    var body_1476405404 = (Temporary3 = new_1476405395(), Temporary3)[0], body_1476405404_Idx = Temporary3[1];
    body_1476405404[body_1476405404_Idx] = nimCopy(null, readFile_536871412(path_1476405394), NTI33554449);
    var subdoc_1476405453 = {body: [body_1476405404, body_1476405404_Idx], target: doc_1476395042.target, snippet: true, stack: [{cmdName: toStringView_1560281142([91,116,111,112,93]), lang: some_1476405441(HEX3Aanonymous_1476405407()), path: some_2214593019(path_1476405394), args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), tableOfContentsEntry: ({val: null})}], theoremLikeCounter: 1, addToHead: ({data: [], counter: 0, first: 0, last: 0}), flags: [], labelNums: ({data: [], counter: 0}), safeMode: false, settings: ({darkMode: false, documentClass: [], katexStylesheetPath: [], mathRenderer: 0, syntaxHighlightingTheme: 0, temmlStylesheetPath: [], theoremLikeNumberPrefix: []}), stage: 0, tableOfContents: [], templateArgs: ({data: [], counter: 0}), verbose: false, addToStyle: ({data: [], counter: 0, first: 0, last: 0})};
    subdoc_1476405453.stack[chckIndx(0, 0, (subdoc_1476405453.stack).length - 1)].commands = nimCopy(subdoc_1476405453.stack[chckIndx(0, 0, (subdoc_1476405453.stack).length - 1)].commands, defaultCommands_1476395041(subdoc_1476405453), NTI1593835562);
    Label4: {
      var i_1476405461 = 0;
      var colontmp__587203363 = 0;
      colontmp__587203363 = divInt((args_1476405353).length, 2);
      var i_587203364 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_587203364 < colontmp__587203363)) break Label6;
            i_1476405461 = i_587203364;
            HEX5BHEX5DHEX3D_2063597649(subdoc_1476405453.templateArgs, args_1476405353[chckIndx(mulInt(2, i_1476405461), 0, (args_1476405353).length - 1)], args_1476405353[chckIndx(addInt(mulInt(2, i_1476405461), 1), 0, (args_1476405353).length - 1)]);
            i_587203364 = addInt(i_587203364, 1);
          }
      };
    };
    Temporary1 = renderStr_1660945072(subdoc_1476405453, toStringView_1560281134(subdoc_1476405453.body[0], subdoc_1476405453.body[1]));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217736))) {
    Label7: {
      var fmtRes_1476405511 = [mnewString(0)];
      fmtRes_1476405511[0].push.apply(fmtRes_1476405511[0], [67,97,110,110,111,116,32,111,112,101,110,32,102,105,108,101,32]);;
      formatValue_1442840747(fmtRes_1476405511, 0, filename_1476405352, []);
      fmtRes_1476405511[0].push.apply(fmtRes_1476405511[0], [10,40,114,101,115,111,108,118,101,100,32,97,115,32]);;
      formatValue_1442840747(fmtRes_1476405511, 0, path_1476405394, []);
      fmtRes_1476405511[0].push.apply(fmtRes_1476405511[0], [41]);;
    };
    raiseException({message: nimCopy(null, fmtRes_1476405511[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1476405354 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405354;

}
    
function HEX3Aanonymous_1476405634(arg_1476405635) {
      var result_1476405636 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,110,99,108,117,100,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476405350 = expandArguments_2197815314(doc_1476395042, [105,110,99,108,117,100,101], arg_1476405635, [HEX21_1593835705(0), HEX2A_1593835743(1)]);
        result_1476405636 = nimCopy(result_1476405636, {typ: 1, str: includeCmd_1476405351(to_2181038173(vals_1476405350[chckIndx(0, 0, (vals_1476405350).length - 1)]), to_2248147113(vals_1476405350[chckIndx(1, 0, (vals_1476405350).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405636;

    }

function injectCmd_1476405697(filename_1476405698) {
    
function HEX3Aanonymous_1476405702() {
      var result_1476405703 = [];

      BeforeRet: {
        Label1: {
          var iHEX60gensym370_1476405712 = 0;
          var colontmp__587203835 = 0;
          colontmp__587203835 = subInt((doc_1476395042.stack).length, 1);
          var res_587203836 = colontmp__587203835;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203836)) break Label3;
                iHEX60gensym370_1476405712 = res_587203836;
                var frameHEX60gensym370_1476405713 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym370_1476405712, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_2214592897(frameHEX60gensym370_1476405713.path)) {
                result_1476405703 = nimCopy(null, get_2214592918(frameHEX60gensym370_1476405713.path), NTI33554449);
                break BeforeRet;
                }
                
                res_587203836 = subInt(res_587203836, 1);
              }
          };
        };
      };

      return result_1476405703;

    }
    var Temporary1;

  var result_1476405699 = [];

    var path_1476405736 = HEX2F_1862271062(nossplitPath(HEX3Aanonymous_1476405702()).Field0, filename_1476405698);
    HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).path = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).path, some_2214593019(path_1476405736), NTI1593835612);
++excHandler;
    try {
    Temporary1 = renderStr_1660945076(doc_1476395042, readFile_536871412(path_1476405736));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217736))) {
    Label3: {
      var fmtRes_1476405747 = [mnewString(0)];
      fmtRes_1476405747[0].push.apply(fmtRes_1476405747[0], [67,97,110,110,111,116,32,111,112,101,110,32,102,105,108,101,32]);;
      formatValue_1442840747(fmtRes_1476405747, 0, filename_1476405698, []);
      fmtRes_1476405747[0].push.apply(fmtRes_1476405747[0], [10,40,114,101,115,111,108,118,101,100,32,97,115,32]);;
      formatValue_1442840747(fmtRes_1476405747, 0, path_1476405736, []);
      fmtRes_1476405747[0].push.apply(fmtRes_1476405747[0], [41]);;
    };
    raiseException({message: nimCopy(null, fmtRes_1476405747[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1476405699 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405699;

}
    
function HEX3Aanonymous_1476405753(arg_1476405754) {
      var result_1476405755 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [105,110,106,101,99,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476405696 = expandArguments_2197815314(doc_1476395042, [105,110,106,101,99,116], arg_1476405754, [HEX21_1593835705(0)]);
        result_1476405755 = nimCopy(result_1476405755, {typ: 1, str: injectCmd_1476405697(to_2181038173(vals_1476405696[chckIndx(0, 0, (vals_1476405696).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405755;

    }

function itCmd_1476405811(arg_1476405812) {
    var Temporary1;

  var result_1476405813 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,105,62] || []).concat(arg_1476405812 || [],[60,47,105,62] || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,105,116], arg_1476405812);
      break;
    case 2:
      Temporary1 = arg_1476405812;
      break;
    }
    result_1476405813 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476405813;

}
    
function HEX3Aanonymous_1476405819(arg_1476405820) {
      var result_1476405821 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476405810 = expandArguments_2197815314(doc_1476395042, [105,116], arg_1476405820, [HEX21_1593835705(1)]);
        result_1476405821 = nimCopy(result_1476405821, {typ: 1, str: itCmd_1476405811(to_2181038173(vals_1476405810[chckIndx(0, 0, (vals_1476405810).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405821;

    }

function janetCallCmd_1476405877(function_1476405878, args_1476405879) {
    
function HEX3Aanonymous_1476405883() {
      var result_1476405884 = [];

      BeforeRet: {
        Label1: {
          var iHEX60gensym382_1476405893 = 0;
          var colontmp__587203847 = 0;
          colontmp__587203847 = subInt((doc_1476395042.stack).length, 1);
          var res_587203848 = colontmp__587203847;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203848)) break Label3;
                iHEX60gensym382_1476405893 = res_587203848;
                var frameHEX60gensym382_1476405894 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym382_1476405893, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_2214592897(frameHEX60gensym382_1476405894.path)) {
                result_1476405884 = nimCopy(null, get_2214592918(frameHEX60gensym382_1476405894.path), NTI33554449);
                break BeforeRet;
                }
                
                res_587203848 = subInt(res_587203848, 1);
              }
          };
        };
      };

      return result_1476405884;

    }

  var result_1476405880 = [];

    result_1476405880 = nimCopy(null, janetCall_1778384981(function_1476405878, args_1476405879, HEX3Aanonymous_1476405883()), NTI33554449);

  return result_1476405880;

}
    
function HEX3Aanonymous_1476405922(arg_1476405923) {
      var result_1476405924 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [106,97,110,101,116,45,99,97,108,108]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476405876 = expandArguments_2197815314(doc_1476395042, [106,97,110,101,116,45,99,97,108,108], arg_1476405923, [HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_1476405924 = nimCopy(result_1476405924, {typ: 0, str: janetCallCmd_1476405877(to_2181038173(vals_1476405876[chckIndx(0, 0, (vals_1476405876).length - 1)]), to_2248147113(vals_1476405876[chckIndx(1, 0, (vals_1476405876).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476405924;

    }

function janetEvalCmd_1476405985(code_1476405986, args_1476405987) {
    
function HEX3Aanonymous_1476406014() {
      var result_1476406015 = [];

      BeforeRet: {
        Label1: {
          var iHEX60gensym391_1476406024 = 0;
          var colontmp__587203854 = 0;
          colontmp__587203854 = subInt((doc_1476395042.stack).length, 1);
          var res_587203855 = colontmp__587203854;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203855)) break Label3;
                iHEX60gensym391_1476406024 = res_587203855;
                var frameHEX60gensym391_1476406025 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym391_1476406024, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_2214592897(frameHEX60gensym391_1476406025.path)) {
                result_1476406015 = nimCopy(null, get_2214592918(frameHEX60gensym391_1476406025.path), NTI33554449);
                break BeforeRet;
                }
                
                res_587203855 = subInt(res_587203855, 1);
              }
          };
        };
      };

      return result_1476406015;

    }

  var result_1476405988 = [];

    if (!((modInt((args_1476405987).length, 2) == 0))) {
    raiseException({message: [65,114,103,117,109,101,110,116,115,32,116,111,32,106,97,110,101,116,45,101,118,97,108,32,109,117,115,116,32,99,111,109,101,32,105,110,32,112,97,105,114,115,32,111,102,32,110,97,109,101,59,32,118,97,108,117,101], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var values_1476405999 = [];
    Label1: {
      var i_1476406007 = 0;
      var colontmp__587203369 = 0;
      colontmp__587203369 = divInt((args_1476405987).length, 2);
      var i_587203370 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203370 < colontmp__587203369)) break Label3;
            i_1476406007 = i_587203370;
            values_1476405999.push({Field0: nimCopy(null, args_1476405987[chckIndx(mulInt(2, i_1476406007), 0, (args_1476405987).length - 1)], NTI33554449), Field1: nimCopy(null, args_1476405987[chckIndx(addInt(mulInt(2, i_1476406007), 1), 0, (args_1476405987).length - 1)], NTI33554449)});;
            i_587203370 = addInt(i_587203370, 1);
          }
      };
    };
    result_1476405988 = nimCopy(null, janetEval_1778385119(code_1476405986, values_1476405999, HEX3Aanonymous_1476406014()), NTI33554449);

  return result_1476405988;

}
    
function HEX3Aanonymous_1476406053(arg_1476406054) {
      var result_1476406055 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [106,97,110,101,116,45,101,118,97,108]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476405984 = expandArguments_2197815314(doc_1476395042, [106,97,110,101,116,45,101,118,97,108], arg_1476406054, [HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_1476406055 = nimCopy(result_1476406055, {typ: 0, str: janetEvalCmd_1476405985(to_2181038173(vals_1476405984[chckIndx(0, 0, (vals_1476405984).length - 1)]), to_2248147113(vals_1476405984[chckIndx(1, 0, (vals_1476405984).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406055;

    }

function joinCmd_1476406116(sep_1476406117, list_1476406118) {
              var Temporary5;

  var result_1476406119 = [];

    Label1: {
      var iHEX60gensym397_1476406140 = 0;
      var resultHEX60gensym397_1476406147 = newSeq_536871460(chckRange((list_1476406118).length, 0, 2147483647));
      Label2: {
        var it_1476406151 = ({typ: 0, str: [], list: [], opt: ({val: null})});
        var i_587203859 = 0;
        var L_587203860 = (list_1476406118).length;
        Label3: {
            Label4: while (true) {
            if (!(i_587203859 < L_587203860)) break Label4;
              it_1476406151 = list_1476406118[chckIndx(i_587203859, 0, (list_1476406118).length - 1)];
              var Temporary5 = it_1476406151;
              if (ConstSet410[Temporary5.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary5.typ, NTI1593835524)); }
              resultHEX60gensym397_1476406147[chckIndx(iHEX60gensym397_1476406140, 0, (resultHEX60gensym397_1476406147).length - 1)] = nimCopy(null, Temporary5.str, NTI33554449);
              iHEX60gensym397_1476406140 = addInt(iHEX60gensym397_1476406140, 1);
              i_587203859 = addInt(i_587203859, 1);
              if (!(((list_1476406118).length == L_587203860))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    result_1476406119 = nimCopy(null, nsuJoinSep(resultHEX60gensym397_1476406147, sep_1476406117), NTI33554449);

  return result_1476406119;

}
    
function HEX3Aanonymous_1476406161(arg_1476406162) {
      var result_1476406163 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476406115 = expandArguments_2197815314(doc_1476395042, [106,111,105,110], arg_1476406162, [HEX21_1593835705(1), HEX21_1593835705(2)]);
        result_1476406163 = nimCopy(result_1476406163, {typ: 1, str: joinCmd_1476406116(to_2181038173(vals_1476406115[chckIndx(0, 0, (vals_1476406115).length - 1)]), to_1476404011(vals_1476406115[chckIndx(1, 0, (vals_1476406115).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406163;

    }

function jsCallCmd_1476406224(function_1476406225, args_1476406226) {
  var result_1476406227 = [];

    result_1476406227 = nimCopy(null, jsCall_2063600924(function_1476406225, args_1476406226), NTI33554449);

  return result_1476406227;

}
    
function HEX3Aanonymous_1476406233(arg_1476406234) {
      var result_1476406235 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [106,115,45,99,97,108,108]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476406223 = expandArguments_2197815314(doc_1476395042, [106,115,45,99,97,108,108], arg_1476406234, [HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_1476406235 = nimCopy(result_1476406235, {typ: 0, str: jsCallCmd_1476406224(to_2181038173(vals_1476406223[chckIndx(0, 0, (vals_1476406223).length - 1)]), to_2248147113(vals_1476406223[chckIndx(1, 0, (vals_1476406223).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406235;

    }

function jsEvalCmd_1476406296(code_1476406297, args_1476406298) {
  var result_1476406299 = [];

    if (!((modInt((args_1476406298).length, 2) == 0))) {
    raiseException({message: [65,114,103,117,109,101,110,116,115,32,116,111,32,106,115,45,101,118,97,108,32,109,117,115,116,32,99,111,109,101,32,105,110,32,112,97,105,114,115,32,111,102,32,110,97,109,101,59,32,118,97,108,117,101], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var values_1476406309 = [];
    Label1: {
      var i_1476406317 = 0;
      var colontmp__587203863 = 0;
      colontmp__587203863 = divInt((args_1476406298).length, 2);
      var i_587203864 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203864 < colontmp__587203863)) break Label3;
            i_1476406317 = i_587203864;
            values_1476406309.push({Field0: nimCopy(null, args_1476406298[chckIndx(mulInt(2, i_1476406317), 0, (args_1476406298).length - 1)], NTI33554449), Field1: nimCopy(null, args_1476406298[chckIndx(addInt(mulInt(2, i_1476406317), 1), 0, (args_1476406298).length - 1)], NTI33554449)});;
            i_587203864 = addInt(i_587203864, 1);
          }
      };
    };
    result_1476406299 = nimCopy(null, jsEval_2063600928(code_1476406297, values_1476406309), NTI33554449);

  return result_1476406299;

}
    
function HEX3Aanonymous_1476406327(arg_1476406328) {
      var result_1476406329 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [106,115,45,101,118,97,108]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476406295 = expandArguments_2197815314(doc_1476395042, [106,115,45,101,118,97,108], arg_1476406328, [HEX21_1593835705(0), HEX2A_1593835743(0)]);
        result_1476406329 = nimCopy(result_1476406329, {typ: 0, str: jsEvalCmd_1476406296(to_2181038173(vals_1476406295[chckIndx(0, 0, (vals_1476406295).length - 1)]), to_2248147113(vals_1476406295[chckIndx(1, 0, (vals_1476406295).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406329;

    }

function jsModuleCmd_1476406390(js_1476406391) {
  var result_1476406392 = [];

    switch (doc_1476395042.target) {
    case 0:
      HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, jsCommands_2248146952(doc_1476395042), NTI1593835562);
      incl_2264927133(doc_1476395042.addToHead, ([60,115,99,114,105,112,116,32,116,121,112,101,61,34,109,111,100,117,108,101,34,62] || []).concat(expandStr_1660945068(doc_1476395042, js_1476406391) || [],[60,47,115,99,114,105,112,116,62] || []));
      break;
    default: 
      break;
    }

  return result_1476406392;

}
    
function HEX3Aanonymous_1476406425(arg_1476406426) {
      var result_1476406427 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [106,115,45,109,111,100,117,108,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476406389 = expandArguments_2197815314(doc_1476395042, [106,115,45,109,111,100,117,108,101], arg_1476406426, [{kind: 3, base: 0}]);
        result_1476406427 = nimCopy(result_1476406427, {typ: 0, str: jsModuleCmd_1476406390(to_2181038173(vals_1476406389[chckIndx(0, 0, (vals_1476406389).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406427;

    }

function jsModuleRawCmd_1476406483(js_1476406484) {
  var result_1476406485 = [];

    if ((doc_1476395042.target == 0)) {
    incl_2264927133(doc_1476395042.addToHead, ([60,115,99,114,105,112,116,32,116,121,112,101,61,34,109,111,100,117,108,101,34,62] || []).concat(js_1476406484 || [],[60,47,115,99,114,105,112,116,62] || []));
    }
    

  return result_1476406485;

}
    
function HEX3Aanonymous_1476406518(arg_1476406519) {
      var result_1476406520 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [106,115,45,109,111,100,117,108,101,45,114,97,119]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476406482 = expandArguments_2197815314(doc_1476395042, [106,115,45,109,111,100,117,108,101,45,114,97,119], arg_1476406519, [{kind: 3, base: 0}]);
        result_1476406520 = nimCopy(result_1476406520, {typ: 0, str: jsModuleRawCmd_1476406483(to_2181038173(vals_1476406482[chckIndx(0, 0, (vals_1476406482).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406520;

    }

function langCmd_1476406576(langStr_1476406577, body_1476406578) {
    var Temporary1;

  var result_1476406579 = [];

    switch (toJSStr(nsuToLowerAsciiStr(langStr_1476406577))) {
    case "en":
    case "english":
      Temporary1 = 0;
      break;
    case "cs":
    case "cz":
    case "czech":
      Temporary1 = 1;
      break;
    case "de":
    case "german":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: nsuFormatSingleElem([85,110,107,110,111,119,110,32,108,97,110,103,117,97,103,101,58,32,36,49], langStr_1476406577), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    var lang_1476406580 = Temporary1;
    HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).lang = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).lang, some_1476405441(lang_1476406580), NTI1593835599);
    result_1476406579 = nimCopy(null, renderStr_1660945076(doc_1476395042, body_1476406578), NTI33554449);

  return result_1476406579;

}
    
function HEX3Aanonymous_1476406593(arg_1476406594) {
      var result_1476406595 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476406575 = expandArguments_2197815314(doc_1476395042, [108,97,110,103], arg_1476406594, [HEX21_1593835705(0), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476406595 = nimCopy(result_1476406595, {typ: 1, str: langCmd_1476406576(to_2181038173(vals_1476406575[chckIndx(0, 0, (vals_1476406575).length - 1)]), to_2181038173(vals_1476406575[chckIndx(1, 0, (vals_1476406575).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406595;

    }

function lemmaCmd_1476406668(thNameHEX60gensym428_1476406670, labelHEX60gensym428_1476406672, contentHEX60gensym428_1476406673) {
    
function HEX3Aanonymous_1476406679(n_1476406691) {
      var result_1476406694 = false;

        result_1476406694 = !(eqStrings(n_1476406691, []));

      return result_1476406694;

    }
    
function HEX3Aanonymous_1476406704() {
      var result_1476406705 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym437_1476406714 = 0;
          var colontmp__587203895 = 0;
          colontmp__587203895 = subInt((doc_1476395042.stack).length, 1);
          var res_587203896 = colontmp__587203895;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203896)) break Label3;
                iHEX60gensym437_1476406714 = res_587203896;
                var frameHEX60gensym437_1476406715 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym437_1476406714, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym437_1476406715.lang)) {
                result_1476406705 = get_1476395606(frameHEX60gensym437_1476406715.lang);
                break BeforeRet;
                }
                
                res_587203896 = subInt(res_587203896, 1);
              }
          };
        };
      };

      return result_1476406705;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476406674 = [];

    var thNameHEX60gensym428_1476406701 = filter_2231369786(thNameHEX60gensym428_1476406670, HEX3Aanonymous_1476406679);
    var wordHEX60gensym428_1476406738 = translate_1610612762(7, HEX3Aanonymous_1476406704());
    var numHEX60gensym428_1476406739 = [];
    if (isSome_2214592897(labelHEX60gensym428_1476406672)) {
    var labelHEX60gensym428_1476406754 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym428_1476406672), NTI33554449);
    numHEX60gensym428_1476406739 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym428_1476406754, {Field0: (wordHEX60gensym428_1476406738 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym428_1476406739, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet412[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym428_1476406831 = nimCopy(null, wordHEX60gensym428_1476406738, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym428_1476406672)) {
      fullNameHEX60gensym428_1476406831.push.apply(fullNameHEX60gensym428_1476406831, ([32] || []).concat(numHEX60gensym428_1476406739 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym428_1476406701)) {
      var thNameHEX60gensym428_1476406853 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym428_1476406701), NTI33554449);
      fullNameHEX60gensym428_1476406831.push.apply(fullNameHEX60gensym428_1476406831, ([32,40] || []).concat(thNameHEX60gensym428_1476406853 || [],[41] || []));;
      }
      
      fullNameHEX60gensym428_1476406831.push.apply(fullNameHEX60gensym428_1476406831, [46]);;
      if (isSome_2214592897(labelHEX60gensym428_1476406672)) {
      var labelHEX60gensym428_1476406868 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym428_1476406672), NTI33554449);
      Label4: {
        var fmtRes_1476406872 = mnewString(0);
        fmtRes_1476406872.push.apply(fmtRes_1476406872, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476406872, [108,101,109,109,97]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym428_1476406868 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym428_1476406831 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym428_1476406673) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476406876 = mnewString(0);
          fmtRes_1476406876.push.apply(fmtRes_1476406876, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476406876, [108,101,109,109,97]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym428_1476406831 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym428_1476406673) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,108,101,109,109,97]), wordHEX60gensym428_1476406738) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,108,101,109,109,97,42]), wordHEX60gensym428_1476406738) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,108,101,109,109,97,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,108,101,109,109,97]), [35,49]) || []).concat([92,88,68,108,101,109,109,97] || [])), [92,101,110,100,88,68,108,101,109,109,97]) || []));
      var envNameHEX60gensym428_1476406923 = [88,68,108,101,109,109,97];
      var envContentHEX60gensym428_1476406924 = [];
      if (isSome_2214592897(labelHEX60gensym428_1476406672)) {
      var labelHEX60gensym428_1476406939 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym428_1476406672), NTI33554449);
      envNameHEX60gensym428_1476406923.push.apply(envNameHEX60gensym428_1476406923, [77,97,110,117,97,108]);;
      envContentHEX60gensym428_1476406924.push.apply(envContentHEX60gensym428_1476406924, ([123] || []).concat(numHEX60gensym428_1476406739 || [],[125] || []));;
      envContentHEX60gensym428_1476406924.push.apply(envContentHEX60gensym428_1476406924, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym428_1476406939));;
      }
      else {
      envNameHEX60gensym428_1476406923.push.apply(envNameHEX60gensym428_1476406923, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym428_1476406701)) {
      var thNameHEX60gensym428_1476406954 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym428_1476406701), NTI33554449);
      envContentHEX60gensym428_1476406924.push.apply(envContentHEX60gensym428_1476406924, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym428_1476406954));;
      }
      
      envContentHEX60gensym428_1476406924.push.apply(envContentHEX60gensym428_1476406924, nsuFormatSingleElem([36,49], contentHEX60gensym428_1476406673));;
      Temporary1 = env_2197816511(envNameHEX60gensym428_1476406923, envContentHEX60gensym428_1476406924);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym428_1476406701)) {
      var thNameHEX60gensym428_1476406969 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym428_1476406701), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym428_1476406738, NTI33554449), nimCopy(null, thNameHEX60gensym428_1476406969, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym428_1476406738, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym428_1476406673, NTI33554449)]);
      break;
    }
    result_1476406674 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476406674;

}
    
function HEX3Aanonymous_1476406975(arg_1476406976) {
      var result_1476406977 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476406667 = expandArguments_2197815314(doc_1476395042, [108,101,109,109,97], arg_1476406976, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476406977 = nimCopy(result_1476406977, {typ: 1, str: lemmaCmd_1476406668(to_2214592966(vals_1476406667[chckIndx(0, 0, (vals_1476406667).length - 1)]), to_2214592966(vals_1476406667[chckIndx(1, 0, (vals_1476406667).length - 1)]), to_2181038173(vals_1476406667[chckIndx(2, 0, (vals_1476406667).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476406977;

    }

function linesCmd_1476407053(lns_1476407054) {
  var result_1476407055 = [];

    result_1476407055 = nimCopy(null, nsuJoinSep(lns_1476407054, seps_1476407056[chckIndx(doc_1476395042.target, 0, (seps_1476407056).length - 1)]), NTI33554449);

  return result_1476407055;

}
    
function HEX3Aanonymous_1476407094(arg_1476407095) {
      var result_1476407096 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476407052 = expandArguments_2197815314(doc_1476395042, [108,105,110,101,115], arg_1476407095, [HEX2A_1593835743(1)]);
        result_1476407096 = nimCopy(result_1476407096, {typ: 1, str: linesCmd_1476407053(to_2248147113(vals_1476407052[chckIndx(0, 0, (vals_1476407052).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407096;

    }

function linkCmd_1476407153(name_1476407155, url_1476407156) {
    var Temporary1;
      var Temporary2;

  var result_1476407157 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,97,32,104,114,101,102,61,34] || []).concat(url_1476407156 || [],[34,62] || [],get_2231369976(name_1476407155, url_1476407156) || [],[60,47,97,62] || []);
      break;
    case 1:
      Temporary1 = get_2231369976(name_1476407155, []);
      break;
    case 2:
      if (isSome_2214592897(name_1476407155)) {
      var name_1476407204 = nimCopy(null, unsafeGet_2248147493(name_1476407155), NTI33554449);
      Temporary2 = nsuFormatOpenArray([10,61,62,32,36,49,32,36,50], [nimCopy(null, url_1476407156, NTI33554449), nimCopy(null, name_1476407204, NTI33554449)]);
      }
      else {
      Temporary2 = nsuFormatOpenArray([10,61,62,32,36,49], [nimCopy(null, url_1476407156, NTI33554449)]);
      }
      
      Temporary1 = Temporary2;
      break;
    }
    result_1476407157 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476407157;

}
    
function HEX3Aanonymous_1476407210(arg_1476407211) {
      var result_1476407212 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476407152 = expandArguments_2197815314(doc_1476395042, [108,105,110,107], arg_1476407211, [HEX3F_1593835740(1), HEX21_1593835705(0)]);
        result_1476407212 = nimCopy(result_1476407212, {typ: 1, str: linkCmd_1476407153(to_2214592966(vals_1476407152[chckIndx(0, 0, (vals_1476407152).length - 1)]), to_2181038173(vals_1476407152[chckIndx(1, 0, (vals_1476407152).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407212;

    }

function linkImageCmd_1476407278(alt_1476407279, url_1476407280, link_1476407282) {
    var Temporary1;
      var Temporary2;

  var result_1476407283 = [];

    switch (doc_1476395042.target) {
    case 0:
      if (isSome_2214592897(link_1476407282)) {
      var link_1476407298 = nimCopy(null, unsafeGet_2248147493(link_1476407282), NTI33554449);
      Temporary2 = ([60,97,32,104,114,101,102,61,34] || []).concat(link_1476407298 || [],[34,62,60,105,109,103,32,115,114,99,61,34] || [],url_1476407280 || [],[34,32,97,108,116,61,34] || [],alt_1476407279 || [],[34,32,47,62,60,47,97,62] || []);
      }
      else {
      Temporary2 = ([60,105,109,103,32,115,114,99,61,34] || []).concat(url_1476407280 || [],[34,32,97,108,116,61,34] || [],alt_1476407279 || [],[34,32,47,62] || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      raiseException({message: [76,105,110,107,105,110,103,32,105,109,97,103,101,115,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      if (isSome_2214592897(link_1476407282)) {
      raiseException({message: makeNimstrLit("Linking images with an additional link is not supported in the Gemtext backend"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
      Temporary1 = nsuFormatOpenArray([10,61,62,32,36,49,32,240,158,150,188,32,36,50], [nimCopy(null, url_1476407280, NTI33554449), nimCopy(null, alt_1476407279, NTI33554449)]);
      break;
    }
    result_1476407283 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476407283;

}
    
function HEX3Aanonymous_1476407311(arg_1476407312) {
      var result_1476407313 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,110,107,45,105,109,97,103,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476407277 = expandArguments_2197815314(doc_1476395042, [108,105,110,107,45,105,109,97,103,101], arg_1476407312, [HEX21_1593835705(0), HEX21_1593835705(0), HEX3F_1593835740(0)]);
        result_1476407313 = nimCopy(result_1476407313, {typ: 1, str: linkImageCmd_1476407278(to_2181038173(vals_1476407277[chckIndx(0, 0, (vals_1476407277).length - 1)]), to_2181038173(vals_1476407277[chckIndx(1, 0, (vals_1476407277).length - 1)]), to_2214592966(vals_1476407277[chckIndx(2, 0, (vals_1476407277).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407313;

    }

function linkStylesheetCmd_1476407383(url_1476407384) {
  var result_1476407385 = [];

    if ((doc_1476395042.target == 0)) {
    incl_2264927133(doc_1476395042.addToHead, ([60,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34] || []).concat(url_1476407384 || [],[34,32,47,62] || []));
    }
    

  return result_1476407385;

}
    
function HEX3Aanonymous_1476407418(arg_1476407419) {
      var result_1476407420 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,110,107,45,115,116,121,108,101,115,104,101,101,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476407382 = expandArguments_2197815314(doc_1476395042, [108,105,110,107,45,115,116,121,108,101,115,104,101,101,116], arg_1476407419, [HEX21_1593835705(0)]);
        result_1476407420 = nimCopy(result_1476407420, {typ: 0, str: linkStylesheetCmd_1476407383(to_2181038173(vals_1476407382[chckIndx(0, 0, (vals_1476407382).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407420;

    }

function listCmd_1476407476(items_1476407477) {
    var Temporary1;

  var result_1476407478 = [];

    switch (doc_1476395042.target) {
    case 0:
      Label2: {
        var iHEX60gensym471_1476407499 = 0;
        var resultHEX60gensym471_1476407506 = newSeq_536871460(chckRange((items_1476407477).length, 0, 2147483647));
        Label3: {
          var it_1476407510 = [];
          var i_587203383 = 0;
          var L_587203384 = (items_1476407477).length;
          Label4: {
              Label5: while (true) {
              if (!(i_587203383 < L_587203384)) break Label5;
                it_1476407510 = items_1476407477[chckIndx(i_587203383, 0, (items_1476407477).length - 1)];
                resultHEX60gensym471_1476407506[chckIndx(iHEX60gensym471_1476407499, 0, (resultHEX60gensym471_1476407506).length - 1)] = nimCopy(null, ([60,108,105,62] || []).concat(it_1476407510 || [],[60,47,108,105,62] || []), NTI33554449);
                iHEX60gensym471_1476407499 = addInt(iHEX60gensym471_1476407499, 1);
                i_587203383 = addInt(i_587203383, 1);
                if (!(((items_1476407477).length == L_587203384))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary1 = ([60,117,108,62] || []).concat(nsuJoinSep(resultHEX60gensym471_1476407506, []) || [],[60,47,117,108,62] || []);
      break;
    case 1:
      Label6: {
        var iHEX60gensym474_1476407535 = 0;
        var resultHEX60gensym474_1476407542 = newSeq_536871460(chckRange((items_1476407477).length, 0, 2147483647));
        Label7: {
          var it_1476407546 = [];
          var i_587203388 = 0;
          var L_587203389 = (items_1476407477).length;
          Label8: {
              Label9: while (true) {
              if (!(i_587203388 < L_587203389)) break Label9;
                it_1476407546 = items_1476407477[chckIndx(i_587203388, 0, (items_1476407477).length - 1)];
                resultHEX60gensym474_1476407542[chckIndx(iHEX60gensym474_1476407535, 0, (resultHEX60gensym474_1476407542).length - 1)] = nimCopy(null, nsuFormatSingleElem([92,105,116,101,109,32,36,49], it_1476407546), NTI33554449);
                iHEX60gensym474_1476407535 = addInt(iHEX60gensym474_1476407535, 1);
                i_587203388 = addInt(i_587203388, 1);
                if (!(((items_1476407477).length == L_587203389))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary1 = env_2197816511([105,116,101,109,105,122,101], nsuJoinSep(resultHEX60gensym474_1476407542, []));
      break;
    case 2:
      Label10: {
        var iHEX60gensym477_1476407571 = 0;
        var resultHEX60gensym477_1476407578 = newSeq_536871460(chckRange((items_1476407477).length, 0, 2147483647));
        Label11: {
          var it_1476407582 = [];
          var i_587203393 = 0;
          var L_587203394 = (items_1476407477).length;
          Label12: {
              Label13: while (true) {
              if (!(i_587203393 < L_587203394)) break Label13;
                it_1476407582 = items_1476407477[chckIndx(i_587203393, 0, (items_1476407477).length - 1)];
                resultHEX60gensym477_1476407578[chckIndx(iHEX60gensym477_1476407571, 0, (resultHEX60gensym477_1476407578).length - 1)] = nimCopy(null, nsuFormatSingleElem([42,32,36,49], it_1476407582), NTI33554449);
                iHEX60gensym477_1476407571 = addInt(iHEX60gensym477_1476407571, 1);
                i_587203393 = addInt(i_587203393, 1);
                if (!(((items_1476407477).length == L_587203394))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary1 = nsuFormatSingleElem([10,36,49,10], nsuJoinSep(resultHEX60gensym477_1476407578, [10]));
      break;
    }
    result_1476407478 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476407478;

}
    
function HEX3Aanonymous_1476407592(arg_1476407593) {
      var result_1476407594 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476407475 = expandArguments_2197815314(doc_1476395042, [108,105,115,116], arg_1476407593, [HEX2A_1593835743(1)]);
        result_1476407594 = nimCopy(result_1476407594, {typ: 1, str: listCmd_1476407476(to_2248147113(vals_1476407475[chckIndx(0, 0, (vals_1476407475).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407594;

    }

function listDirsCmd_1476407651(arg_1476407652) {
  var result_1476407653 = [];

    raiseException({message: [84,104,101,32,108,105,115,116,45,100,105,114,115,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,119,104,101,110,32,117,115,105,110,103,32,74,97,118,97,83,99,114,105,112,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_1476407653;

}
    
function HEX3Aanonymous_1476407659(arg_1476407660) {
      var result_1476407661 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,115,116,45,100,105,114,115]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476407650 = expandArguments_2197815314(doc_1476395042, [108,105,115,116,45,100,105,114,115], arg_1476407660, [HEX21_1593835705(0)]);
        result_1476407661 = nimCopy(result_1476407661, {typ: 2, list: listDirsCmd_1476407651(to_2181038173(vals_1476407650[chckIndx(0, 0, (vals_1476407650).length - 1)])), str: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407661;

    }

function listFilesCmd_1476407717(arg_1476407718) {
  var result_1476407719 = [];

    raiseException({message: [84,104,101,32,108,105,115,116,45,102,105,108,101,115,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,119,104,101,110,32,117,115,105,110,103,32,74,97,118,97,83,99,114,105,112,116], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_1476407719;

}
    
function HEX3Aanonymous_1476407725(arg_1476407726) {
      var result_1476407727 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [108,105,115,116,45,102,105,108,101,115]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476407716 = expandArguments_2197815314(doc_1476395042, [108,105,115,116,45,102,105,108,101,115], arg_1476407726, [HEX21_1593835705(0)]);
        result_1476407727 = nimCopy(result_1476407727, {typ: 2, list: listFilesCmd_1476407717(to_2181038173(vals_1476407716[chckIndx(0, 0, (vals_1476407716).length - 1)])), str: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407727;

    }

function matextCmd_1476407783(arg_1476407784) {
    var Temporary1;
    var Temporary3;

  var result_1476407785 = [];

++excHandler;
    try {
    Temporary1 = matext_2281701379(arg_1476407784, false);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    raiseException({message: nsuFormatSingleElem([69,114,114,111,114,32,119,104,101,110,32,112,97,114,115,105,110,103,32,109,97,116,104,58,32,36,49], arg_1476407784), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    var math_1476407786 = nimCopy(null, Temporary1, NTI33554449);
    switch (doc_1476395042.target) {
    case 0:
      Temporary3 = ([60,112,114,101,32,99,108,97,115,115,61,34,120,100,45,109,97,116,101,120,116,34,62] || []).concat(math_1476407786 || [],[60,47,112,114,101,62] || []);
      break;
    case 1:
      Temporary3 = (env_2197816511([118,101,114,98,97,116,105,109], math_1476407786) || []).concat([10] || []);
      break;
    case 2:
      Temporary3 = nsuFormatSingleElem([10,96,96,96,10,123,36,49,125,10,96,96,96,10], math_1476407786);
      break;
    }
    result_1476407785 = nimCopy(null, Temporary3, NTI33554449);

  return result_1476407785;

}
    
function HEX3Aanonymous_1476407792(arg_1476407793) {
      var result_1476407794 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [109,97,116,101,120,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476407782 = expandArguments_2197815314(doc_1476395042, [109,97,116,101,120,116], arg_1476407793, [HEX21_1593835705(0)]);
        result_1476407794 = nimCopy(result_1476407794, {typ: 1, str: matextCmd_1476407783(to_2181038173(vals_1476407782[chckIndx(0, 0, (vals_1476407782).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407794;

    }

function msCmd_1476407850(arg_1476407851) {
    var Temporary1;

  var result_1476407852 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,99,111,100,101,62] || []).concat(arg_1476407851 || [],[60,47,99,111,100,101,62] || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,116,116], arg_1476407851);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([10,96,96,96,10,123,36,49,125,10,96,96,96,10], arg_1476407851);
      break;
    }
    result_1476407852 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476407852;

}
    
function HEX3Aanonymous_1476407858(arg_1476407859) {
      var result_1476407860 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476407849 = expandArguments_2197815314(doc_1476395042, [109,115], arg_1476407859, [HEX21_1593835705(1)]);
        result_1476407860 = nimCopy(result_1476407860, {typ: 1, str: msCmd_1476407850(to_2181038173(vals_1476407849[chckIndx(0, 0, (vals_1476407849).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476407860;

    }

function noteCmd_1476407929(thNameHEX60gensym499_1476407931, labelHEX60gensym499_1476407933, contentHEX60gensym499_1476407934) {
    
function HEX3Aanonymous_1476407940(n_1476407952) {
      var result_1476407955 = false;

        result_1476407955 = !(eqStrings(n_1476407952, []));

      return result_1476407955;

    }
    
function HEX3Aanonymous_1476407965() {
      var result_1476407966 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym508_1476407975 = 0;
          var colontmp__587203899 = 0;
          colontmp__587203899 = subInt((doc_1476395042.stack).length, 1);
          var res_587203900 = colontmp__587203899;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203900)) break Label3;
                iHEX60gensym508_1476407975 = res_587203900;
                var frameHEX60gensym508_1476407976 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym508_1476407975, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym508_1476407976.lang)) {
                result_1476407966 = get_1476395606(frameHEX60gensym508_1476407976.lang);
                break BeforeRet;
                }
                
                res_587203900 = subInt(res_587203900, 1);
              }
          };
        };
      };

      return result_1476407966;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476407935 = [];

    var thNameHEX60gensym499_1476407962 = filter_2231369786(thNameHEX60gensym499_1476407931, HEX3Aanonymous_1476407940);
    var wordHEX60gensym499_1476407999 = translate_1610612762(8, HEX3Aanonymous_1476407965());
    var numHEX60gensym499_1476408000 = [];
    if (isSome_2214592897(labelHEX60gensym499_1476407933)) {
    var labelHEX60gensym499_1476408015 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym499_1476407933), NTI33554449);
    numHEX60gensym499_1476408000 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym499_1476408015, {Field0: (wordHEX60gensym499_1476407999 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym499_1476408000, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet413[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym499_1476408092 = nimCopy(null, wordHEX60gensym499_1476407999, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym499_1476407933)) {
      fullNameHEX60gensym499_1476408092.push.apply(fullNameHEX60gensym499_1476408092, ([32] || []).concat(numHEX60gensym499_1476408000 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym499_1476407962)) {
      var thNameHEX60gensym499_1476408114 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym499_1476407962), NTI33554449);
      fullNameHEX60gensym499_1476408092.push.apply(fullNameHEX60gensym499_1476408092, ([32,40] || []).concat(thNameHEX60gensym499_1476408114 || [],[41] || []));;
      }
      
      fullNameHEX60gensym499_1476408092.push.apply(fullNameHEX60gensym499_1476408092, [46]);;
      if (isSome_2214592897(labelHEX60gensym499_1476407933)) {
      var labelHEX60gensym499_1476408129 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym499_1476407933), NTI33554449);
      Label4: {
        var fmtRes_1476408133 = mnewString(0);
        fmtRes_1476408133.push.apply(fmtRes_1476408133, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476408133, [110,111,116,101]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym499_1476408129 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym499_1476408092 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym499_1476407934) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476408137 = mnewString(0);
          fmtRes_1476408137.push.apply(fmtRes_1476408137, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476408137, [110,111,116,101]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym499_1476408092 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym499_1476407934) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,110,111,116,101]), wordHEX60gensym499_1476407999) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,110,111,116,101,42]), wordHEX60gensym499_1476407999) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,110,111,116,101,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,110,111,116,101]), [35,49]) || []).concat([92,88,68,110,111,116,101] || [])), [92,101,110,100,88,68,110,111,116,101]) || []));
      var envNameHEX60gensym499_1476408184 = [88,68,110,111,116,101];
      var envContentHEX60gensym499_1476408185 = [];
      if (isSome_2214592897(labelHEX60gensym499_1476407933)) {
      var labelHEX60gensym499_1476408200 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym499_1476407933), NTI33554449);
      envNameHEX60gensym499_1476408184.push.apply(envNameHEX60gensym499_1476408184, [77,97,110,117,97,108]);;
      envContentHEX60gensym499_1476408185.push.apply(envContentHEX60gensym499_1476408185, ([123] || []).concat(numHEX60gensym499_1476408000 || [],[125] || []));;
      envContentHEX60gensym499_1476408185.push.apply(envContentHEX60gensym499_1476408185, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym499_1476408200));;
      }
      else {
      envNameHEX60gensym499_1476408184.push.apply(envNameHEX60gensym499_1476408184, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym499_1476407962)) {
      var thNameHEX60gensym499_1476408215 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym499_1476407962), NTI33554449);
      envContentHEX60gensym499_1476408185.push.apply(envContentHEX60gensym499_1476408185, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym499_1476408215));;
      }
      
      envContentHEX60gensym499_1476408185.push.apply(envContentHEX60gensym499_1476408185, nsuFormatSingleElem([36,49], contentHEX60gensym499_1476407934));;
      Temporary1 = env_2197816511(envNameHEX60gensym499_1476408184, envContentHEX60gensym499_1476408185);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym499_1476407962)) {
      var thNameHEX60gensym499_1476408230 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym499_1476407962), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym499_1476407999, NTI33554449), nimCopy(null, thNameHEX60gensym499_1476408230, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym499_1476407999, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym499_1476407934, NTI33554449)]);
      break;
    }
    result_1476407935 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476407935;

}
    
function HEX3Aanonymous_1476408236(arg_1476408237) {
      var result_1476408238 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476407928 = expandArguments_2197815314(doc_1476395042, [110,111,116,101], arg_1476408237, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476408238 = nimCopy(result_1476408238, {typ: 1, str: noteCmd_1476407929(to_2214592966(vals_1476407928[chckIndx(0, 0, (vals_1476407928).length - 1)]), to_2214592966(vals_1476407928[chckIndx(1, 0, (vals_1476407928).length - 1)]), to_2181038173(vals_1476407928[chckIndx(2, 0, (vals_1476407928).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408238;

    }

function nowCmd_1476408314(formatSpec_1476408316) {
  var result_1476408317 = [];

    result_1476408317 = nimCopy(null, format_2667580933(now_2667579036(), get_2231369976(formatSpec_1476408316, [121,121,121,121,45,77,77,45,100,100]), DefaultLocale_2667579236), NTI33554449);

  return result_1476408317;

}
    
function HEX3Aanonymous_1476408339(arg_1476408340) {
      var result_1476408341 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [110,111,119]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476408313 = expandArguments_2197815314(doc_1476395042, [110,111,119], arg_1476408340, [HEX3F_1593835740(0)]);
        result_1476408341 = nimCopy(result_1476408341, {typ: 0, str: nowCmd_1476408314(to_2214592966(vals_1476408313[chckIndx(0, 0, (vals_1476408313).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408341;

    }

function orderedListCmd_1476408403(items_1476408404) {
    var Temporary1;

  var result_1476408405 = [];

    switch (doc_1476395042.target) {
    case 0:
      Label2: {
        var iHEX60gensym525_1476408426 = 0;
        var resultHEX60gensym525_1476408433 = newSeq_536871460(chckRange((items_1476408404).length, 0, 2147483647));
        Label3: {
          var it_1476408437 = [];
          var i_587203407 = 0;
          var L_587203408 = (items_1476408404).length;
          Label4: {
              Label5: while (true) {
              if (!(i_587203407 < L_587203408)) break Label5;
                it_1476408437 = items_1476408404[chckIndx(i_587203407, 0, (items_1476408404).length - 1)];
                resultHEX60gensym525_1476408433[chckIndx(iHEX60gensym525_1476408426, 0, (resultHEX60gensym525_1476408433).length - 1)] = nimCopy(null, ([60,108,105,62] || []).concat(it_1476408437 || [],[60,47,108,105,62] || []), NTI33554449);
                iHEX60gensym525_1476408426 = addInt(iHEX60gensym525_1476408426, 1);
                i_587203407 = addInt(i_587203407, 1);
                if (!(((items_1476408404).length == L_587203408))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary1 = ([60,111,108,62] || []).concat(nsuJoinSep(resultHEX60gensym525_1476408433, []) || [],[60,47,111,108,62] || []);
      break;
    case 1:
      Label6: {
        var iHEX60gensym528_1476408462 = 0;
        var resultHEX60gensym528_1476408469 = newSeq_536871460(chckRange((items_1476408404).length, 0, 2147483647));
        Label7: {
          var it_1476408473 = [];
          var i_587203412 = 0;
          var L_587203413 = (items_1476408404).length;
          Label8: {
              Label9: while (true) {
              if (!(i_587203412 < L_587203413)) break Label9;
                it_1476408473 = items_1476408404[chckIndx(i_587203412, 0, (items_1476408404).length - 1)];
                resultHEX60gensym528_1476408469[chckIndx(iHEX60gensym528_1476408462, 0, (resultHEX60gensym528_1476408469).length - 1)] = nimCopy(null, nsuFormatSingleElem([92,105,116,101,109,32,36,49], it_1476408473), NTI33554449);
                iHEX60gensym528_1476408462 = addInt(iHEX60gensym528_1476408462, 1);
                i_587203412 = addInt(i_587203412, 1);
                if (!(((items_1476408404).length == L_587203413))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary1 = env_2197816511([101,110,117,109,101,114,97,116,101], nsuJoinSep(resultHEX60gensym528_1476408469, []));
      break;
    case 2:
      Label10: {
        var iHEX60gensym531_1476408498 = 0;
        var resultHEX60gensym531_1476408505 = newSeq_536871460(chckRange((items_1476408404).length, 0, 2147483647));
        Label11: {
          var it_1476408509 = [];
          var i_587203417 = 0;
          var L_587203418 = (items_1476408404).length;
          Label12: {
              Label13: while (true) {
              if (!(i_587203417 < L_587203418)) break Label13;
                it_1476408509 = items_1476408404[chckIndx(i_587203417, 0, (items_1476408404).length - 1)];
                resultHEX60gensym531_1476408505[chckIndx(iHEX60gensym531_1476408498, 0, (resultHEX60gensym531_1476408505).length - 1)] = nimCopy(null, nsuFormatSingleElem([42,32,36,49], it_1476408509), NTI33554449);
                iHEX60gensym531_1476408498 = addInt(iHEX60gensym531_1476408498, 1);
                i_587203417 = addInt(i_587203417, 1);
                if (!(((items_1476408404).length == L_587203418))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary1 = nsuFormatSingleElem([10,36,49,10], nsuJoinSep(resultHEX60gensym531_1476408505, [10]));
      break;
    }
    result_1476408405 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476408405;

}
    
function HEX3Aanonymous_1476408519(arg_1476408520) {
      var result_1476408521 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476408402 = expandArguments_2197815314(doc_1476395042, [111,114,100,101,114,101,100,45,108,105,115,116], arg_1476408520, [HEX2A_1593835743(1)]);
        result_1476408521 = nimCopy(result_1476408521, {typ: 1, str: orderedListCmd_1476408403(to_2248147113(vals_1476408402[chckIndx(0, 0, (vals_1476408402).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408521;

    }

function pCmd_1476408578(arg_1476408579) {
    var Temporary1;

  var result_1476408580 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,112,62] || []).concat(arg_1476408579 || [],[60,47,112,62] || []);
      break;
    case 1:
      Temporary1 = ([92,112,97,114,32] || []).concat(arg_1476408579 || []);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([10,10,36,49], arg_1476408579);
      break;
    }
    result_1476408580 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476408580;

}
    
function HEX3Aanonymous_1476408586(arg_1476408587) {
      var result_1476408588 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476408577 = expandArguments_2197815314(doc_1476395042, [112], arg_1476408587, [HEX21_1593835705(1)]);
        result_1476408588 = nimCopy(result_1476408588, {typ: 1, str: pCmd_1476408578(to_2181038173(vals_1476408577[chckIndx(0, 0, (vals_1476408577).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408588;

    }

function passCmd_1476408644(arg_1476408645) {
  var result_1476408646 = [];

    result_1476408646 = nimCopy(null, arg_1476408645, NTI33554449);

  return result_1476408646;

}
    
function HEX3Aanonymous_1476408652(arg_1476408653) {
      var result_1476408654 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [112,97,115,115]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476408643 = expandArguments_2197815314(doc_1476395042, [112,97,115,115], arg_1476408653, [HEX21_1593835705(0)]);
        result_1476408654 = nimCopy(result_1476408654, {typ: 1, str: passCmd_1476408644(to_2181038173(vals_1476408643[chckIndx(0, 0, (vals_1476408643).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408654;

    }

function passInjectCmd_1476408710(filename_1476408711) {
    
function HEX3Aanonymous_1476408715() {
      var result_1476408716 = [];

      BeforeRet: {
        Label1: {
          var iHEX60gensym543_1476408725 = 0;
          var colontmp__587203915 = 0;
          colontmp__587203915 = subInt((doc_1476395042.stack).length, 1);
          var res_587203916 = colontmp__587203915;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203916)) break Label3;
                iHEX60gensym543_1476408725 = res_587203916;
                var frameHEX60gensym543_1476408726 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym543_1476408725, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_2214592897(frameHEX60gensym543_1476408726.path)) {
                result_1476408716 = nimCopy(null, get_2214592918(frameHEX60gensym543_1476408726.path), NTI33554449);
                break BeforeRet;
                }
                
                res_587203916 = subInt(res_587203916, 1);
              }
          };
        };
      };

      return result_1476408716;

    }
    var Temporary1;

  var result_1476408712 = [];

    var path_1476408749 = HEX2F_1862271062(nossplitPath(HEX3Aanonymous_1476408715()).Field0, filename_1476408711);
    HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).path = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).path, some_2214593019(path_1476408749), NTI1593835612);
++excHandler;
    try {
    Temporary1 = readFile_536871412(path_1476408749);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217736))) {
    Label3: {
      var fmtRes_1476408760 = [mnewString(0)];
      fmtRes_1476408760[0].push.apply(fmtRes_1476408760[0], [67,97,110,110,111,116,32,111,112,101,110,32,102,105,108,101,32]);;
      formatValue_1442840747(fmtRes_1476408760, 0, filename_1476408711, []);
      fmtRes_1476408760[0].push.apply(fmtRes_1476408760[0], [10,40,114,101,115,111,108,118,101,100,32,97,115,32]);;
      formatValue_1442840747(fmtRes_1476408760, 0, path_1476408749, []);
      fmtRes_1476408760[0].push.apply(fmtRes_1476408760[0], [41]);;
    };
    raiseException({message: nimCopy(null, fmtRes_1476408760[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1476408712 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476408712;

}
    
function HEX3Aanonymous_1476408766(arg_1476408767) {
      var result_1476408768 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [112,97,115,115,45,105,110,106,101,99,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476408709 = expandArguments_2197815314(doc_1476395042, [112,97,115,115,45,105,110,106,101,99,116], arg_1476408767, [HEX21_1593835705(0)]);
        result_1476408768 = nimCopy(result_1476408768, {typ: 1, str: passInjectCmd_1476408710(to_2181038173(vals_1476408709[chckIndx(0, 0, (vals_1476408709).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408768;

    }

function passRawCmd_1476408824(arg_1476408825) {
  var result_1476408826 = [];

    result_1476408826 = nimCopy(null, arg_1476408825, NTI33554449);

  return result_1476408826;

}
    
function HEX3Aanonymous_1476408832(arg_1476408833) {
      var result_1476408834 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [112,97,115,115,45,114,97,119]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476408823 = expandArguments_2197815314(doc_1476395042, [112,97,115,115,45,114,97,119], arg_1476408833, [{kind: 3, base: 0}]);
        result_1476408834 = nimCopy(result_1476408834, {typ: 1, str: passRawCmd_1476408824(to_2181038173(vals_1476408823[chckIndx(0, 0, (vals_1476408823).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408834;

    }

function pikchrCmd_1476408890(width_1476408892, height_1476408894, text_1476408895) {
  var result_1476408896 = [];

    if (!((doc_1476395042.target == 0))) {
    raiseException({message: [80,105,107,99,104,114,32,99,117,114,114,101,110,116,108,121,32,111,110,108,121,32,119,111,114,107,115,32,119,105,116,104,32,116,104,101,32,72,84,77,76,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var svg_1476408901 = pikchr_2164260866(text_1476408895, doc_1476395042.settings.darkMode);
    if (isSome_2214592897(width_1476408892)) {
    var width_1476408916 = nimCopy(null, unsafeGet_2248147493(width_1476408892), NTI33554449);
    if (isSome_2214592897(height_1476408894)) {
    var height_1476408931 = nimCopy(null, unsafeGet_2248147493(height_1476408894), NTI33554449);
    Label1: {
      var fmtRes_1476408935 = [mnewString(0)];
      fmtRes_1476408935[0].push.apply(fmtRes_1476408935[0], [115,116,121,108,101,61,34,119,105,100,116,104,58]);;
      formatValue_1442840747(fmtRes_1476408935, 0, width_1476408916, []);
      fmtRes_1476408935[0].push.apply(fmtRes_1476408935[0], [59,104,101,105,103,104,116,58]);;
      formatValue_1442840747(fmtRes_1476408935, 0, height_1476408931, []);
      fmtRes_1476408935[0].push.apply(fmtRes_1476408935[0], [34]);;
    };
    svg_1476408901 = nimCopy(null, htmlAddAttrsCmd_1476404843([nimCopy(null, fmtRes_1476408935[0], NTI33554449)], svg_1476408901), NTI33554449);
    }
    else {
      Label2: {
        var fmtRes_1476408943 = [mnewString(0)];
        fmtRes_1476408943[0].push.apply(fmtRes_1476408943[0], [115,116,121,108,101,61,34,119,105,100,116,104,58]);;
        formatValue_1442840747(fmtRes_1476408943, 0, width_1476408916, []);
        fmtRes_1476408943[0].push.apply(fmtRes_1476408943[0], [34]);;
      };
      svg_1476408901 = nimCopy(null, htmlAddAttrsCmd_1476404843([nimCopy(null, fmtRes_1476408943[0], NTI33554449)], svg_1476408901), NTI33554449);
    }
    
    }
    else {
    }
    
    result_1476408896 = nimCopy(null, svg_1476408901, NTI33554449);

  return result_1476408896;

}
    
function HEX3Aanonymous_1476408953(arg_1476408954) {
      var result_1476408955 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476408889 = expandArguments_2197815314(doc_1476395042, [112,105,107,99,104,114], arg_1476408954, [HEX3F_1593835740(1), HEX3F_1593835740(1), HEX21_1593835705(0)]);
        result_1476408955 = nimCopy(result_1476408955, {typ: 1, str: pikchrCmd_1476408890(to_2214592966(vals_1476408889[chckIndx(0, 0, (vals_1476408889).length - 1)]), to_2214592966(vals_1476408889[chckIndx(1, 0, (vals_1476408889).length - 1)]), to_2181038173(vals_1476408889[chckIndx(2, 0, (vals_1476408889).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476408955;

    }

function pikchrRawCmd_1476409031(text_1476409032) {
  var result_1476409033 = [];

    if (!((doc_1476395042.target == 0))) {
    raiseException({message: [80,105,107,99,104,114,32,99,117,114,114,101,110,116,108,121,32,111,110,108,121,32,119,111,114,107,115,32,119,105,116,104,32,116,104,101,32,72,84,77,76,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1476409033 = nimCopy(null, pikchr_2164260866(text_1476409032, doc_1476395042.settings.darkMode), NTI33554449);

  return result_1476409033;

}
    
function HEX3Aanonymous_1476409043(arg_1476409044) {
      var result_1476409045 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476409030 = expandArguments_2197815314(doc_1476395042, [112,105,107,99,104,114,45,114,97,119], arg_1476409044, [{kind: 3, base: 0}]);
        result_1476409045 = nimCopy(result_1476409045, {typ: 1, str: pikchrRawCmd_1476409031(to_2181038173(vals_1476409030[chckIndx(0, 0, (vals_1476409030).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476409045;

    }

function proofCmd_1476409114(thNameHEX60gensym568_1476409116, labelHEX60gensym568_1476409118, contentHEX60gensym568_1476409119) {
    
function HEX3Aanonymous_1476409125(n_1476409137) {
      var result_1476409140 = false;

        result_1476409140 = !(eqStrings(n_1476409137, []));

      return result_1476409140;

    }
    
function HEX3Aanonymous_1476409150() {
      var result_1476409151 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym578_1476409160 = 0;
          var colontmp__587203919 = 0;
          colontmp__587203919 = subInt((doc_1476395042.stack).length, 1);
          var res_587203920 = colontmp__587203919;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203920)) break Label3;
                iHEX60gensym578_1476409160 = res_587203920;
                var frameHEX60gensym578_1476409161 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym578_1476409160, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym578_1476409161.lang)) {
                result_1476409151 = get_1476395606(frameHEX60gensym578_1476409161.lang);
                break BeforeRet;
                }
                
                res_587203920 = subInt(res_587203920, 1);
              }
          };
        };
      };

      return result_1476409151;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476409120 = [];

    var thNameHEX60gensym568_1476409147 = filter_2231369786(thNameHEX60gensym568_1476409116, HEX3Aanonymous_1476409125);
    var wordHEX60gensym568_1476409184 = translate_1610612762(9, HEX3Aanonymous_1476409150());
    var numHEX60gensym568_1476409185 = [];
    if (isSome_2214592897(labelHEX60gensym568_1476409118)) {
    var labelHEX60gensym568_1476409200 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym568_1476409118), NTI33554449);
    numHEX60gensym568_1476409185 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym568_1476409200, {Field0: (wordHEX60gensym568_1476409184 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym568_1476409185, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet414[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym568_1476409277 = nimCopy(null, wordHEX60gensym568_1476409184, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym568_1476409118)) {
      fullNameHEX60gensym568_1476409277.push.apply(fullNameHEX60gensym568_1476409277, ([32] || []).concat(numHEX60gensym568_1476409185 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym568_1476409147)) {
      var thNameHEX60gensym568_1476409299 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym568_1476409147), NTI33554449);
      fullNameHEX60gensym568_1476409277.push.apply(fullNameHEX60gensym568_1476409277, ([32,40] || []).concat(thNameHEX60gensym568_1476409299 || [],[41] || []));;
      }
      
      fullNameHEX60gensym568_1476409277.push.apply(fullNameHEX60gensym568_1476409277, [46]);;
      if (isSome_2214592897(labelHEX60gensym568_1476409118)) {
      var labelHEX60gensym568_1476409314 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym568_1476409118), NTI33554449);
      Label4: {
        var fmtRes_1476409318 = mnewString(0);
        fmtRes_1476409318.push.apply(fmtRes_1476409318, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476409318, [112,114,111,111,102]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym568_1476409314 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym568_1476409277 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym568_1476409119) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476409322 = mnewString(0);
          fmtRes_1476409322.push.apply(fmtRes_1476409322, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476409322, [112,114,111,111,102]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym568_1476409277 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym568_1476409119) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,112,114,111,111,102]), wordHEX60gensym568_1476409184) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,112,114,111,111,102,42]), wordHEX60gensym568_1476409184) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,112,114,111,111,102,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,112,114,111,111,102]), [35,49]) || []).concat([92,88,68,112,114,111,111,102] || [])), [92,101,110,100,88,68,112,114,111,111,102]) || []));
      var envNameHEX60gensym568_1476409369 = [88,68,112,114,111,111,102];
      var envContentHEX60gensym568_1476409370 = [];
      if (isSome_2214592897(labelHEX60gensym568_1476409118)) {
      var labelHEX60gensym568_1476409385 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym568_1476409118), NTI33554449);
      envNameHEX60gensym568_1476409369.push.apply(envNameHEX60gensym568_1476409369, [77,97,110,117,97,108]);;
      envContentHEX60gensym568_1476409370.push.apply(envContentHEX60gensym568_1476409370, ([123] || []).concat(numHEX60gensym568_1476409185 || [],[125] || []));;
      envContentHEX60gensym568_1476409370.push.apply(envContentHEX60gensym568_1476409370, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym568_1476409385));;
      }
      else {
      envNameHEX60gensym568_1476409369.push.apply(envNameHEX60gensym568_1476409369, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym568_1476409147)) {
      var thNameHEX60gensym568_1476409400 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym568_1476409147), NTI33554449);
      envContentHEX60gensym568_1476409370.push.apply(envContentHEX60gensym568_1476409370, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym568_1476409400));;
      }
      
      envContentHEX60gensym568_1476409370.push.apply(envContentHEX60gensym568_1476409370, nsuFormatSingleElem([36,49], contentHEX60gensym568_1476409119));;
      Temporary1 = env_2197816511(envNameHEX60gensym568_1476409369, envContentHEX60gensym568_1476409370);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym568_1476409147)) {
      var thNameHEX60gensym568_1476409415 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym568_1476409147), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym568_1476409184, NTI33554449), nimCopy(null, thNameHEX60gensym568_1476409415, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym568_1476409184, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym568_1476409119, NTI33554449)]);
      break;
    }
    result_1476409120 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476409120;

}
    
function HEX3Aanonymous_1476409421(arg_1476409422) {
      var result_1476409423 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, proofCommands_2264928819(doc_1476395042), NTI1593835562);
        var vals_1476409113 = expandArguments_2197815314(doc_1476395042, [112,114,111,111,102], arg_1476409422, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476409423 = nimCopy(result_1476409423, {typ: 1, str: proofCmd_1476409114(to_2214592966(vals_1476409113[chckIndx(0, 0, (vals_1476409113).length - 1)]), to_2214592966(vals_1476409113[chckIndx(1, 0, (vals_1476409113).length - 1)]), to_2181038173(vals_1476409113[chckIndx(2, 0, (vals_1476409113).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476409423;

    }

function propsCmd_1476409503(items_1476409504) {
  var result_1476409505 = [];

    xidocWarning_1543503885([84,104,101,32,91,112,114,111,112,115,93,32,99,111,109,109,97,110,100,32,105,115,32,100,101,112,114,101,99,97,116,101,100,46,32,85,115,101,32,91,108,105,115,116,93,32,105,110,115,116,101,97,100,46]);
    result_1476409505 = nimCopy(null, listCmd_1476407476(items_1476409504), NTI33554449);

  return result_1476409505;

}
    
function HEX3Aanonymous_1476409511(arg_1476409512) {
      var result_1476409513 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476409502 = expandArguments_2197815314(doc_1476395042, [112,114,111,112,115], arg_1476409512, [HEX2A_1593835743(1)]);
        result_1476409513 = nimCopy(result_1476409513, {typ: 1, str: propsCmd_1476409503(to_2248147113(vals_1476409502[chckIndx(0, 0, (vals_1476409502).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476409513;

    }

function rawCmd_1476409570(arg_1476409571) {
  var result_1476409572 = [];

    result_1476409572 = nimCopy(null, arg_1476409571, NTI33554449);

  return result_1476409572;

}
    
function HEX3Aanonymous_1476409578(arg_1476409579) {
      var result_1476409580 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476409569 = expandArguments_2197815314(doc_1476395042, [114,97,119], arg_1476409579, [{kind: 3, base: 0}]);
        result_1476409580 = nimCopy(result_1476409580, {typ: 0, str: rawCmd_1476409570(to_2181038173(vals_1476409569[chckIndx(0, 0, (vals_1476409569).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476409580;

    }

function rawDedentCmd_1476409636(arg_1476409637) {
  var result_1476409638 = [];

    var HEX3Atmp_1476409639 = nsuStrip(arg_1476409637, true, true, ConstSet415);
    result_1476409638 = nimCopy(null, nsuDedent(HEX3Atmp_1476409639, indentation_754976051(HEX3Atmp_1476409639)), NTI33554449);

  return result_1476409638;

}
    
function HEX3Aanonymous_1476409645(arg_1476409646) {
      var result_1476409647 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476409635 = expandArguments_2197815314(doc_1476395042, [114,97,119,60], arg_1476409646, [{kind: 4, base: 0}]);
        result_1476409647 = nimCopy(result_1476409647, {typ: 0, str: rawDedentCmd_1476409636(to_2181038173(vals_1476409635[chckIndx(0, 0, (vals_1476409635).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476409647;

    }

function refCmd_1476409703(prefix_1476409705, label_1476409706) {
    var Temporary1;
      var Temporary3;
      var Temporary4;
    var Temporary5;

  var result_1476409707 = [];

    if (contains_1476409761(doc_1476395042.labelNums, label_1476409706)) {
    Label2: {
      if (isSome_2214592897(prefix_1476409705)) {
      var prefix_1476409794 = nimCopy(null, unsafeGet_2248147493(prefix_1476409705), NTI33554449);
      if (eqStrings(prefix_1476409794, [])) {
      Temporary4 = [];
      }
      else {
      Temporary4 = (prefix_1476409794 || []).concat([32] || []);
      }
      
      Temporary3 = Temporary4;
      }
      else {
      Temporary3 = HEX5BHEX5D_1476409852(doc_1476395042.labelNums, label_1476409706).Field0;
      }
      
    };
    var prefix_1476409942 = nimCopy(null, Temporary3, NTI33554449);
    Temporary1 = (prefix_1476409942 || []).concat(HEX5BHEX5D_1476409852(doc_1476395042.labelNums, label_1476409706).Field1 || []);
    }
    else {
      raiseException({message: nsuFormatSingleElem([76,97,98,101,108,32,110,111,116,32,102,111,117,110,100,58,32,36,49], label_1476409706), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var text_1476410005 = nimCopy(null, Temporary1, NTI33554449);
    switch (doc_1476395042.target) {
    case 0:
      Temporary5 = ([60,97,32,104,114,101,102,61,34,35] || []).concat(label_1476409706 || [],[34,62] || [],text_1476410005 || [],[60,47,97,62] || []);
      break;
    case 1:
    case 2:
      Temporary5 = text_1476410005;
      break;
    }
    result_1476409707 = nimCopy(null, Temporary5, NTI33554449);

  return result_1476409707;

}
    
function HEX3Aanonymous_1476410011(arg_1476410012) {
      var result_1476410013 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476409702 = expandArguments_2197815314(doc_1476395042, [114,101,102], arg_1476410012, [HEX3F_1593835740(0), HEX21_1593835705(0)]);
        result_1476410013 = nimCopy(result_1476410013, {typ: 1, str: refCmd_1476409703(to_2214592966(vals_1476409702[chckIndx(0, 0, (vals_1476409702).length - 1)]), to_2181038173(vals_1476409702[chckIndx(1, 0, (vals_1476409702).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410013;

    }

function renderCmd_1476410079(arg_1476410080) {
  var result_1476410081 = [];

    result_1476410081 = nimCopy(null, renderStr_1660945076(doc_1476395042, arg_1476410080), NTI33554449);

  return result_1476410081;

}
    
function HEX3Aanonymous_1476410087(arg_1476410088) {
      var result_1476410089 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410078 = expandArguments_2197815314(doc_1476395042, [114,101,110,100,101,114], arg_1476410088, [HEX21_1593835705(0)]);
        result_1476410089 = nimCopy(result_1476410089, {typ: 1, str: renderCmd_1476410079(to_2181038173(vals_1476410078[chckIndx(0, 0, (vals_1476410078).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410089;

    }

function replaceSuffixCmd_1476410145(sub_1476410146, by_1476410147, str_1476410148) {
  var result_1476410149 = [];

    var str_1476410150 = [nimCopy(null, str_1476410148, NTI33554449)];
    if (nsuEndsWith(str_1476410150[0], sub_1476410146)) {
    nsuRemoveSuffixString(str_1476410150, 0, sub_1476410146);
    str_1476410150[0].push.apply(str_1476410150[0], by_1476410147);;
    }
    
    result_1476410149 = nimCopy(null, str_1476410150[0], NTI33554449);

  return result_1476410149;

}
    
function HEX3Aanonymous_1476410156(arg_1476410157) {
      var result_1476410158 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410144 = expandArguments_2197815314(doc_1476395042, [114,101,112,108,97,99,101,45,115,117,102,102,105,120], arg_1476410157, [HEX21_1593835705(0), HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_1476410158 = nimCopy(result_1476410158, {typ: 0, str: replaceSuffixCmd_1476410145(to_2181038173(vals_1476410144[chckIndx(0, 0, (vals_1476410144).length - 1)]), to_2181038173(vals_1476410144[chckIndx(1, 0, (vals_1476410144).length - 1)]), to_2181038173(vals_1476410144[chckIndx(2, 0, (vals_1476410144).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410158;

    }

function resetCmd_1476410222(key_1476410223) {
  var result_1476410224 = [];

    switch (toJSStr(key_1476410223)) {
    case "dark-mode":
      doc_1476395042.settings.darkMode = false;
      break;
    case "document-class":
      doc_1476395042.settings.katexStylesheetPath = nimCopy(null, [], NTI33554449);
      break;
    case "katex-stylesheet-path":
      doc_1476395042.settings.katexStylesheetPath = nimCopy(null, [], NTI33554449);
      break;
    case "math-renderer":
      doc_1476395042.settings.mathRenderer = 0;
      break;
    case "mathml-only":
      xidocWarning_1543503885(makeNimstrLit("The \"mathml-only\" setting is deprecated. Please use the \"math-renderer\" setting instead."));
      doc_1476395042.settings.mathRenderer = 0;
      break;
    case "syntax-highlighting-theme":
      doc_1476395042.settings.syntaxHighlightingTheme = 0;
      break;
    case "temml":
      xidocWarning_1543503885(makeNimstrLit("The \"temml\" setting is deprecated. Please use the \"math-renderer\" setting instead."));
      doc_1476395042.settings.mathRenderer = 0;
      break;
    case "temml-stylesheet-path":
      doc_1476395042.settings.temmlStylesheetPath = nimCopy(null, [], NTI33554449);
      break;
    default: 
      Label1: {
        var fmtRes_1476410228 = [mnewString(0)];
        fmtRes_1476410228[0].push.apply(fmtRes_1476410228[0], [73,110,118,97,108,105,100,32,115,101,116,116,105,110,103,58,32]);;
        formatValue_1442840747(fmtRes_1476410228, 0, key_1476410223, []);
      };
      raiseException({message: nimCopy(null, fmtRes_1476410228[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }

  return result_1476410224;

}
    
function HEX3Aanonymous_1476410250(arg_1476410251) {
      var result_1476410252 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [114,101,115,101,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476410221 = expandArguments_2197815314(doc_1476395042, [114,101,115,101,116], arg_1476410251, [HEX21_1593835705(0)]);
        result_1476410252 = nimCopy(result_1476410252, {typ: 0, str: resetCmd_1476410222(to_2181038173(vals_1476410221[chckIndx(0, 0, (vals_1476410221).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410252;

    }

function resetTheoremLikeCounterCmd_1476410308(prefix_1476410310) {
  var result_1476410311 = [];

    doc_1476395042.theoremLikeCounter = 1;
    if (isSome_2214592897(prefix_1476410310)) {
    var prefix_1476410326 = nimCopy(null, unsafeGet_2248147493(prefix_1476410310), NTI33554449);
    doc_1476395042.settings.theoremLikeNumberPrefix = nimCopy(null, prefix_1476410326, NTI33554449);
    }
    

  return result_1476410311;

}
    
function HEX3Aanonymous_1476410332(arg_1476410333) {
      var result_1476410334 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410307 = expandArguments_2197815314(doc_1476395042, [114,101,115,101,116,45,116,104,101,111,114,101,109,45,108,105,107,101,45,99,111,117,110,116,101,114], arg_1476410333, [HEX3F_1593835740(0)]);
        result_1476410334 = nimCopy(result_1476410334, {typ: 0, str: resetTheoremLikeCounterCmd_1476410308(to_2214592966(vals_1476410307[chckIndx(0, 0, (vals_1476410307).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410334;

    }

function rowCmd_1476410396(entries_1476410397) {
    var Temporary4;

  var result_1476410398 = [];

      var resultHEX60gensym621_1476410400 = false;
      Label1: {
        var it_1476410404 = ({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});
        var i_587203430 = 0;
        var L_587203431 = (doc_1476395042.stack).length;
        Label2: {
            Label3: while (true) {
            if (!(i_587203430 < L_587203431)) break Label3;
              it_1476410404 = doc_1476395042.stack[chckIndx(i_587203430, 0, (doc_1476395042.stack).length - 1)];
              if (eqStrings(HEX24_1560281153(it_1476410404.cmdName), [116,97,98,108,101])) {
              resultHEX60gensym621_1476410400 = true;
              break Label1;
              }
              
              i_587203430 = addInt(i_587203430, 1);
              if (!(((doc_1476395042.stack).length == L_587203431))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    if (!(resultHEX60gensym621_1476410400)) {
    raiseException({message: [84,104,101,32,114,111,119,32,99,111,109,109,97,110,100,32,104,97,115,32,116,111,32,98,101,32,105,110,115,105,100,101,32,97,32,116,97,98,108,101,32,99,111,109,109,97,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    switch (doc_1476395042.target) {
    case 0:
      Label5: {
        var iHEX60gensym623_1476410425 = 0;
        var resultHEX60gensym623_1476410432 = newSeq_536871460(chckRange((entries_1476410397).length, 0, 2147483647));
        Label6: {
          var it_1476410436 = [];
          var i_587203440 = 0;
          var L_587203441 = (entries_1476410397).length;
          Label7: {
              Label8: while (true) {
              if (!(i_587203440 < L_587203441)) break Label8;
                it_1476410436 = entries_1476410397[chckIndx(i_587203440, 0, (entries_1476410397).length - 1)];
                resultHEX60gensym623_1476410432[chckIndx(iHEX60gensym623_1476410425, 0, (resultHEX60gensym623_1476410432).length - 1)] = nimCopy(null, ([60,116,100,62] || []).concat(it_1476410436 || [],[60,47,116,100,62] || []), NTI33554449);
                iHEX60gensym623_1476410425 = addInt(iHEX60gensym623_1476410425, 1);
                i_587203440 = addInt(i_587203440, 1);
                if (!(((entries_1476410397).length == L_587203441))) {
                failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary4 = ([60,116,114,62] || []).concat(nsuJoinSep(resultHEX60gensym623_1476410432, []) || [],[60,47,116,114,62] || []);
      break;
    case 1:
      Temporary4 = nsuFormatSingleElem([36,49,92,92], nsuJoinSep(entries_1476410397, [38]));
      break;
    case 2:
      raiseException({message: [84,97,98,108,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476410398 = nimCopy(null, Temporary4, NTI33554449);

  return result_1476410398;

}
    
function HEX3Aanonymous_1476410446(arg_1476410447) {
      var result_1476410448 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410395 = expandArguments_2197815314(doc_1476395042, [114,111,119], arg_1476410447, [HEX2A_1593835743(1)]);
        result_1476410448 = nimCopy(result_1476410448, {typ: 1, str: rowCmd_1476410396(to_2248147113(vals_1476410395[chckIndx(0, 0, (vals_1476410395).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410448;

    }

function sectionCmd_1476410505(name_1476410507, id_1476410509, content_1476410510) {
    var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;

  var result_1476410511 = [];

    var resultHEX60gensym633_1476410513 = 0;
    Label1: {
      var it_1476410517 = ({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});
      var i_587203444 = 0;
      var L_587203445 = (doc_1476395042.stack).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203444 < L_587203445)) break Label3;
            it_1476410517 = doc_1476395042.stack[chckIndx(i_587203444, 0, (doc_1476395042.stack).length - 1)];
            if (eqStrings(HEX24_1560281153(it_1476410517.cmdName), [115,101,99,116,105,111,110])) {
            resultHEX60gensym633_1476410513 = addInt(resultHEX60gensym633_1476410513, 1);
            }
            
            i_587203444 = addInt(i_587203444, 1);
            if (!(((doc_1476395042.stack).length == L_587203445))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var depth_1476410522 = resultHEX60gensym633_1476410513;
    switch (doc_1476395042.target) {
    case 0:
      if (isSome_2214592897(name_1476410507)) {
      var name_1476410537 = nimCopy(null, unsafeGet_2248147493(name_1476410507), NTI33554449);
      if (      depth_1476410522 == 1      ){        Temporary6 = [104,50];
        }
      else if (      depth_1476410522 == 2      ){        Temporary6 = [104,51];
        }
      else if (      depth_1476410522 == 3      ){        Temporary6 = [104,52];
        }
      else if (      depth_1476410522 == 4      ){        Temporary6 = [104,53];
        }
      else{
        Temporary6 = [104,54];
        }
      var headingTag_1476410538 = nimCopy(null, Temporary6, NTI33554449);
      if (isSome_2214592897(id_1476410509)) {
      var id_1476410553 = nimCopy(null, unsafeGet_2248147493(id_1476410509), NTI33554449);
      addTableOfContentsEntry_2197816515(doc_1476395042, ([60,97,32,104,114,101,102,61,34,35] || []).concat(id_1476410553 || [],[34,62] || [],name_1476410537 || [],[60,47,97,62] || []));
      Temporary7 = ([60,115,101,99,116,105,111,110,32,105,100,61,34] || []).concat(id_1476410553 || [],[34,62] || [],nsuFormatOpenArray([60,36,49,32,99,108,97,115,115,61,34,120,100,45,115,101,99,116,105,111,110,45,104,101,97,100,105,110,103,34,62,36,50,60,47,36,49,62,36,51], [nimCopy(null, headingTag_1476410538, NTI33554449), nimCopy(null, name_1476410537, NTI33554449), renderStr_1660945076(doc_1476395042, content_1476410510)]) || [],[60,47,115,101,99,116,105,111,110,62] || []);
      }
      else {
      Temporary7 = ([60,115,101,99,116,105,111,110,62] || []).concat(nsuFormatOpenArray([60,36,49,32,99,108,97,115,115,61,34,120,100,45,115,101,99,116,105,111,110,45,104,101,97,100,105,110,103,34,62,36,50,60,47,36,49,62,36,51], [nimCopy(null, headingTag_1476410538, NTI33554449), nimCopy(null, name_1476410537, NTI33554449), renderStr_1660945076(doc_1476395042, content_1476410510)]) || [],[60,47,115,101,99,116,105,111,110,62] || []);
      }
      
      Temporary5 = Temporary7;
      }
      else {
      Temporary5 = ([60,115,101,99,116,105,111,110,62] || []).concat(renderStr_1660945076(doc_1476395042, content_1476410510) || [],[60,47,115,101,99,116,105,111,110,62] || []);
      }
      
      Temporary4 = Temporary5;
      break;
    case 1:
      if (      depth_1476410522 == 1      ){        Temporary8 = [115,101,99,116,105,111,110];
        }
      else if (      depth_1476410522 == 2      ){        Temporary8 = [115,117,98,115,101,99,116,105,111,110];
        }
      else if (      depth_1476410522 == 3      ){        Temporary8 = [115,117,98,115,117,98,115,101,99,116,105,111,110];
        }
      else{
        raiseException({message: [83,101,99,116,105,111,110,115,32,99,97,110,32,111,110,108,121,32,98,101,32,110,101,115,116,101,100,32,51,32,108,101,118,101,108,115,32,100,101,101,112,32,105,110,32,76,97,84,101,88], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
      var cmd_1476410554 = nimCopy(null, Temporary8, NTI33554449);
      if (isNone_1543503922(id_1476410509)) {
      cmd_1476410554.push.apply(cmd_1476410554, [42]);;
      }
      
      if (isSome_2214592897(name_1476410507)) {
      var name_1476410576 = nimCopy(null, unsafeGet_2248147493(name_1476410507), NTI33554449);
      Temporary9 = nsuFormatOpenArray([92,36,49,123,36,50,125,36,51], [nimCopy(null, cmd_1476410554, NTI33554449), nimCopy(null, name_1476410576, NTI33554449), renderStr_1660945076(doc_1476395042, content_1476410510)]);
      }
      else {
      Temporary9 = nsuFormatOpenArray([92,36,49,123,125,36,50], [nimCopy(null, cmd_1476410554, NTI33554449), renderStr_1660945076(doc_1476395042, content_1476410510)]);
      }
      
      Temporary4 = Temporary9;
      break;
    case 2:
      if (isSome_2214592897(name_1476410507)) {
      var name_1476410591 = nimCopy(null, unsafeGet_2248147493(name_1476410507), NTI33554449);
      if (      depth_1476410522 == 1      ){        Temporary11 = [35,35,32];
        }
      else if (      depth_1476410522 == 2      ){        Temporary11 = [35,35,35,32];
        }
      else{
        Temporary11 = [];
        }
      var prefix_1476410592 = nimCopy(null, Temporary11, NTI33554449);
      Temporary10 = nsuFormatOpenArray([10,10,36,49,36,50,10,10,36,51], [nimCopy(null, prefix_1476410592, NTI33554449), nimCopy(null, name_1476410591, NTI33554449), renderStr_1660945076(doc_1476395042, content_1476410510)]);
      }
      else {
      Temporary10 = nsuFormatOpenArray([10,10,36,49], [renderStr_1660945076(doc_1476395042, content_1476410510)]);
      }
      
      Temporary4 = Temporary10;
      break;
    }
    result_1476410511 = nimCopy(null, Temporary4, NTI33554449);

  return result_1476410511;

}
    
function HEX3Aanonymous_1476410598(arg_1476410599) {
      var result_1476410600 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410504 = expandArguments_2197815314(doc_1476395042, [115,101,99,116,105,111,110], arg_1476410599, [HEX3F_1593835740(1), HEX3F_1593835740(0), nimCopy(null, Raw_1593835746, NTI1593835527)]);
        result_1476410600 = nimCopy(result_1476410600, {typ: 1, str: sectionCmd_1476410505(to_2214592966(vals_1476410504[chckIndx(0, 0, (vals_1476410504).length - 1)]), to_2214592966(vals_1476410504[chckIndx(1, 0, (vals_1476410504).length - 1)]), to_2181038173(vals_1476410504[chckIndx(2, 0, (vals_1476410504).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410600;

    }

function setCmd_1476410676(key_1476410677, val_1476410678) {
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_1476410679 = [];

++excHandler;
    try {
    switch (toJSStr(key_1476410677)) {
    case "dark-mode":
      doc_1476395042.settings.darkMode = parseBool_754975827(val_1476410678);
      break;
    case "document-class":
      doc_1476395042.settings.katexStylesheetPath = nimCopy(null, val_1476410678, NTI33554449);
      break;
    case "katex-stylesheet-path":
      doc_1476395042.settings.katexStylesheetPath = nimCopy(null, val_1476410678, NTI33554449);
      break;
    case "math-renderer":
      switch (toJSStr(toLower_1040194968(val_1476410678))) {
      case "katex":
      case "katex-html":
        Temporary2 = 0;
        break;
      case "katex-mathml":
        Temporary2 = 1;
        break;
      case "temml":
        Temporary2 = 2;
        break;
      default: 
        raiseException({message: [], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
        break;
      }
      doc_1476395042.settings.mathRenderer = Temporary2;
      break;
    case "mathml-only":
      xidocWarning_1543503885(makeNimstrLit("The \"mathml-only\" setting is deprecated. Please use the \"math-renderer\" setting instead."));
      if (parseBool_754975827(val_1476410678)) {
      Temporary3 = 1;
      }
      else {
      Temporary3 = 0;
      }
      
      doc_1476395042.settings.mathRenderer = Temporary3;
      break;
    case "syntax-highlighting-theme":
      switch (toJSStr(toLower_1040194968(val_1476410678))) {
      case "default":
        Temporary4 = 0;
        break;
      case "dark":
        Temporary4 = 1;
        break;
      case "funky":
        Temporary4 = 2;
        break;
      case "funky-x":
        Temporary4 = 3;
        break;
      case "okaidia":
        Temporary4 = 4;
        break;
      case "twilight":
        Temporary4 = 5;
        break;
      case "coy":
        Temporary4 = 6;
        break;
      case "solarized-light":
        Temporary4 = 7;
        break;
      case "tomorrow-night":
        Temporary4 = 8;
        break;
      default: 
        raiseException({message: [], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
        break;
      }
      doc_1476395042.settings.syntaxHighlightingTheme = Temporary4;
      break;
    case "temml":
      xidocWarning_1543503885(makeNimstrLit("The \"temml\" setting is deprecated. Please use the \"math-renderer\" setting instead."));
      if (parseBool_754975827(val_1476410678)) {
      Temporary5 = 2;
      }
      else {
      Temporary5 = 0;
      }
      
      doc_1476395042.settings.mathRenderer = Temporary5;
      break;
    case "temml-stylesheet-path":
      doc_1476395042.settings.temmlStylesheetPath = nimCopy(null, val_1476410678, NTI33554449);
      break;
    default: 
      Label6: {
        var fmtRes_1476410685 = [mnewString(0)];
        fmtRes_1476410685[0].push.apply(fmtRes_1476410685[0], [73,110,118,97,108,105,100,32,115,101,116,116,105,110,103,58,32]);;
        formatValue_1442840747(fmtRes_1476410685, 0, key_1476410677, []);
      };
      raiseException({message: nimCopy(null, fmtRes_1476410685[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    Label7: {
      var fmtRes_1476410689 = [mnewString(0)];
      fmtRes_1476410689[0].push.apply(fmtRes_1476410689[0], [73,110,118,97,108,105,100,32,118,97,108,117,101,32,102,111,114,32,115,101,116,116,105,110,103,32,34]);;
      formatValue_1442840747(fmtRes_1476410689, 0, key_1476410677, []);
      fmtRes_1476410689[0].push.apply(fmtRes_1476410689[0], [34,58,32]);;
      formatValue_1442840747(fmtRes_1476410689, 0, val_1476410678, []);
    };
    raiseException({message: nimCopy(null, fmtRes_1476410689[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1476410679;

}
    
function HEX3Aanonymous_1476410695(arg_1476410696) {
      var result_1476410697 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [115,101,116]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476410675 = expandArguments_2197815314(doc_1476395042, [115,101,116], arg_1476410696, [HEX21_1593835705(0), HEX21_1593835705(0)]);
        result_1476410697 = nimCopy(result_1476410697, {typ: 0, str: setCmd_1476410676(to_2181038173(vals_1476410675[chckIndx(0, 0, (vals_1476410675).length - 1)]), to_2181038173(vals_1476410675[chckIndx(1, 0, (vals_1476410675).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410697;

    }

function setDocLangCmd_1476410757(arg_1476410758) {
    var Temporary1;

  var result_1476410759 = [];

    switch (toJSStr(nsuToLowerAsciiStr(arg_1476410758))) {
    case "en":
    case "english":
      Temporary1 = 0;
      break;
    case "cs":
    case "cz":
    case "czech":
      Temporary1 = 1;
      break;
    case "de":
    case "german":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: nsuFormatSingleElem([85,110,107,110,111,119,110,32,108,97,110,103,117,97,103,101,58,32,36,49], arg_1476410758), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    doc_1476395042.stack[chckIndx(0, 0, (doc_1476395042.stack).length - 1)].lang = nimCopy(doc_1476395042.stack[chckIndx(0, 0, (doc_1476395042.stack).length - 1)].lang, some_1476405441(Temporary1), NTI1593835599);

  return result_1476410759;

}
    
function HEX3Aanonymous_1476410768(arg_1476410769) {
      var result_1476410770 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410756 = expandArguments_2197815314(doc_1476395042, [115,101,116,45,100,111,99,45,108,97,110,103], arg_1476410769, [HEX21_1593835705(0)]);
        result_1476410770 = nimCopy(result_1476410770, {typ: 0, str: setDocLangCmd_1476410757(to_2181038173(vals_1476410756[chckIndx(0, 0, (vals_1476410756).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410770;

    }

function setFaviconCmd_1476410826(url_1476410827) {
  var result_1476410828 = [];

    if ((doc_1476395042.target == 0)) {
    incl_2264927133(doc_1476395042.addToHead, ([60,108,105,110,107,32,114,101,108,61,34,105,99,111,110,34,32,104,114,101,102,61,34] || []).concat(url_1476410827 || [],[34,32,47,62] || []));
    }
    

  return result_1476410828;

}
    
function HEX3Aanonymous_1476410861(arg_1476410862) {
      var result_1476410863 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [115,101,116,45,102,97,118,105,99,111,110]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1476410825 = expandArguments_2197815314(doc_1476395042, [115,101,116,45,102,97,118,105,99,111,110], arg_1476410862, [HEX21_1593835705(0)]);
        result_1476410863 = nimCopy(result_1476410863, {typ: 0, str: setFaviconCmd_1476410826(to_2181038173(vals_1476410825[chckIndx(0, 0, (vals_1476410825).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410863;

    }

function setSyntaxHighlightingThemeCmd_1476410919(theme_1476410920) {
  var result_1476410921 = [];

    xidocWarning_1543503885(makeNimstrLit("[set-syntax-highlighting-theme] is deprecated. Use [set syntax-highlighting-theme] instead."));
    result_1476410921 = nimCopy(null, setCmd_1476410676([115,121,110,116,97,120,45,104,105,103,104,108,105,103,104,116,105,110,103,45,116,104,101,109,101], theme_1476410920), NTI33554449);

  return result_1476410921;

}
    
function HEX3Aanonymous_1476410927(arg_1476410928) {
      var result_1476410929 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410918 = expandArguments_2197815314(doc_1476395042, [115,101,116,45,115,121,110,116,97,120,45,104,105,103,104,108,105,103,104,116,105,110,103,45,116,104,101,109,101], arg_1476410928, [HEX21_1593835705(0)]);
        result_1476410929 = nimCopy(result_1476410929, {typ: 1, str: setSyntaxHighlightingThemeCmd_1476410919(to_2181038173(vals_1476410918[chckIndx(0, 0, (vals_1476410918).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476410929;

    }

function setTitleCmd_1476410985(arg_1476410986) {
  var result_1476410987 = [];

    switch (doc_1476395042.target) {
    case 0:
      incl_2264927133(doc_1476395042.addToHead, ([60,116,105,116,108,101,62] || []).concat(arg_1476410986 || [],[60,47,116,105,116,108,101,62] || []));
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([116,105,116,108,101], arg_1476410986));
      break;
    default: 
      break;
    }

  return result_1476410987;

}
    
function HEX3Aanonymous_1476411039(arg_1476411040) {
      var result_1476411041 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476410984 = expandArguments_2197815314(doc_1476395042, [115,101,116,45,116,105,116,108,101], arg_1476411040, [HEX21_1593835705(0)]);
        result_1476411041 = nimCopy(result_1476411041, {typ: 0, str: setTitleCmd_1476410985(to_2181038173(vals_1476410984[chckIndx(0, 0, (vals_1476410984).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411041;

    }

function showTitleCmd_1476411097(arg_1476411098) {
    var Temporary1;

  var result_1476411099 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,104,49,62] || []).concat(arg_1476411098 || [],[60,47,104,49,62] || []);
      break;
    case 1:
      Temporary1 = [92,109,97,107,101,116,105,116,108,101];
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([10,35,32,36,49,10,10], arg_1476411098);
      break;
    }
    result_1476411099 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476411099;

}
    
function HEX3Aanonymous_1476411105(arg_1476411106) {
      var result_1476411107 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411096 = expandArguments_2197815314(doc_1476395042, [115,104,111,119,45,116,105,116,108,101], arg_1476411106, [HEX21_1593835705(0)]);
        result_1476411107 = nimCopy(result_1476411107, {typ: 1, str: showTitleCmd_1476411097(to_2181038173(vals_1476411096[chckIndx(0, 0, (vals_1476411096).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411107;

    }

function solutionCmd_1476411176(thNameHEX60gensym663_1476411178, labelHEX60gensym663_1476411180, contentHEX60gensym663_1476411181) {
    
function HEX3Aanonymous_1476411187(n_1476411199) {
      var result_1476411202 = false;

        result_1476411202 = !(eqStrings(n_1476411199, []));

      return result_1476411202;

    }
    
function HEX3Aanonymous_1476411212() {
      var result_1476411213 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym672_1476411222 = 0;
          var colontmp__587203951 = 0;
          colontmp__587203951 = subInt((doc_1476395042.stack).length, 1);
          var res_587203952 = colontmp__587203951;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203952)) break Label3;
                iHEX60gensym672_1476411222 = res_587203952;
                var frameHEX60gensym672_1476411223 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym672_1476411222, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym672_1476411223.lang)) {
                result_1476411213 = get_1476395606(frameHEX60gensym672_1476411223.lang);
                break BeforeRet;
                }
                
                res_587203952 = subInt(res_587203952, 1);
              }
          };
        };
      };

      return result_1476411213;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476411182 = [];

    var thNameHEX60gensym663_1476411209 = filter_2231369786(thNameHEX60gensym663_1476411178, HEX3Aanonymous_1476411187);
    var wordHEX60gensym663_1476411246 = translate_1610612762(11, HEX3Aanonymous_1476411212());
    var numHEX60gensym663_1476411247 = [];
    if (isSome_2214592897(labelHEX60gensym663_1476411180)) {
    var labelHEX60gensym663_1476411262 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym663_1476411180), NTI33554449);
    numHEX60gensym663_1476411247 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym663_1476411262, {Field0: (wordHEX60gensym663_1476411246 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym663_1476411247, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet419[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym663_1476411339 = nimCopy(null, wordHEX60gensym663_1476411246, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym663_1476411180)) {
      fullNameHEX60gensym663_1476411339.push.apply(fullNameHEX60gensym663_1476411339, ([32] || []).concat(numHEX60gensym663_1476411247 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym663_1476411209)) {
      var thNameHEX60gensym663_1476411361 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym663_1476411209), NTI33554449);
      fullNameHEX60gensym663_1476411339.push.apply(fullNameHEX60gensym663_1476411339, ([32,40] || []).concat(thNameHEX60gensym663_1476411361 || [],[41] || []));;
      }
      
      fullNameHEX60gensym663_1476411339.push.apply(fullNameHEX60gensym663_1476411339, [46]);;
      if (isSome_2214592897(labelHEX60gensym663_1476411180)) {
      var labelHEX60gensym663_1476411376 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym663_1476411180), NTI33554449);
      Label4: {
        var fmtRes_1476411380 = mnewString(0);
        fmtRes_1476411380.push.apply(fmtRes_1476411380, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476411380, [115,111,108,117,116,105,111,110]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym663_1476411376 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym663_1476411339 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym663_1476411181) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476411384 = mnewString(0);
          fmtRes_1476411384.push.apply(fmtRes_1476411384, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476411384, [115,111,108,117,116,105,111,110]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym663_1476411339 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym663_1476411181) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,115,111,108,117,116,105,111,110]), wordHEX60gensym663_1476411246) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,115,111,108,117,116,105,111,110,42]), wordHEX60gensym663_1476411246) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,115,111,108,117,116,105,111,110,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,115,111,108,117,116,105,111,110]), [35,49]) || []).concat([92,88,68,115,111,108,117,116,105,111,110] || [])), [92,101,110,100,88,68,115,111,108,117,116,105,111,110]) || []));
      var envNameHEX60gensym663_1476411431 = [88,68,115,111,108,117,116,105,111,110];
      var envContentHEX60gensym663_1476411432 = [];
      if (isSome_2214592897(labelHEX60gensym663_1476411180)) {
      var labelHEX60gensym663_1476411447 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym663_1476411180), NTI33554449);
      envNameHEX60gensym663_1476411431.push.apply(envNameHEX60gensym663_1476411431, [77,97,110,117,97,108]);;
      envContentHEX60gensym663_1476411432.push.apply(envContentHEX60gensym663_1476411432, ([123] || []).concat(numHEX60gensym663_1476411247 || [],[125] || []));;
      envContentHEX60gensym663_1476411432.push.apply(envContentHEX60gensym663_1476411432, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym663_1476411447));;
      }
      else {
      envNameHEX60gensym663_1476411431.push.apply(envNameHEX60gensym663_1476411431, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym663_1476411209)) {
      var thNameHEX60gensym663_1476411462 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym663_1476411209), NTI33554449);
      envContentHEX60gensym663_1476411432.push.apply(envContentHEX60gensym663_1476411432, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym663_1476411462));;
      }
      
      envContentHEX60gensym663_1476411432.push.apply(envContentHEX60gensym663_1476411432, nsuFormatSingleElem([36,49], contentHEX60gensym663_1476411181));;
      Temporary1 = env_2197816511(envNameHEX60gensym663_1476411431, envContentHEX60gensym663_1476411432);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym663_1476411209)) {
      var thNameHEX60gensym663_1476411477 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym663_1476411209), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym663_1476411246, NTI33554449), nimCopy(null, thNameHEX60gensym663_1476411477, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym663_1476411246, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym663_1476411181, NTI33554449)]);
      break;
    }
    result_1476411182 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476411182;

}
    
function HEX3Aanonymous_1476411483(arg_1476411484) {
      var result_1476411485 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411175 = expandArguments_2197815314(doc_1476395042, [115,111,108,117,116,105,111,110], arg_1476411484, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476411485 = nimCopy(result_1476411485, {typ: 1, str: solutionCmd_1476411176(to_2214592966(vals_1476411175[chckIndx(0, 0, (vals_1476411175).length - 1)]), to_2214592966(vals_1476411175[chckIndx(1, 0, (vals_1476411175).length - 1)]), to_2181038173(vals_1476411175[chckIndx(2, 0, (vals_1476411175).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411485;

    }

function spaceCmd_1476411561() {
  var result_1476411562 = [];

    result_1476411562 = nimCopy(null, [32], NTI33554449);

  return result_1476411562;

}
    
function HEX3Aanonymous_1476411568(arg_1476411569) {
      var result_1476411570 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411560 = expandArguments_2197815314(doc_1476395042, [115,112,97,99,101], arg_1476411569, []);
        result_1476411570 = nimCopy(result_1476411570, {typ: 0, str: spaceCmd_1476411561(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411570;

    }

function splitCmd_1476411622(sep_1476411623, str_1476411624) {
  var result_1476411625 = [];

    Label1: {
      var HEX3Atmp_1476411644 = nsuSplitString(str_1476411624, sep_1476411623, (-1));
      var iHEX60gensym686_1476411647 = 0;
      var resultHEX60gensym686_1476411659 = newSeq_1476411651(chckRange((HEX3Atmp_1476411644).length, 0, 2147483647));
      Label2: {
        var it_1476411663 = [];
        var i_587203956 = 0;
        var L_587203957 = (HEX3Atmp_1476411644).length;
        Label3: {
            Label4: while (true) {
            if (!(i_587203956 < L_587203957)) break Label4;
              it_1476411663 = HEX3Atmp_1476411644[chckIndx(i_587203956, 0, (HEX3Atmp_1476411644).length - 1)];
              resultHEX60gensym686_1476411659[chckIndx(iHEX60gensym686_1476411647, 0, (resultHEX60gensym686_1476411659).length - 1)] = nimCopy(resultHEX60gensym686_1476411659[chckIndx(iHEX60gensym686_1476411647, 0, (resultHEX60gensym686_1476411659).length - 1)], {typ: 0, str: nimCopy(null, it_1476411663, NTI33554449), list: [], opt: ({val: null})}, NTI1593835525);
              iHEX60gensym686_1476411647 = addInt(iHEX60gensym686_1476411647, 1);
              i_587203956 = addInt(i_587203956, 1);
              if (!(((HEX3Atmp_1476411644).length == L_587203957))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    result_1476411625 = nimCopy(null, resultHEX60gensym686_1476411659, NTI1476406854);

  return result_1476411625;

}
    
function HEX3Aanonymous_1476411673(arg_1476411674) {
      var result_1476411675 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411621 = expandArguments_2197815314(doc_1476395042, [115,112,108,105,116], arg_1476411674, [HEX21_1593835705(1), HEX21_1593835705(0)]);
        result_1476411675 = nimCopy(result_1476411675, {typ: 2, list: splitCmd_1476411622(to_2181038173(vals_1476411621[chckIndx(0, 0, (vals_1476411621).length - 1)]), to_2181038173(vals_1476411621[chckIndx(1, 0, (vals_1476411621).length - 1)])), str: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411675;

    }

function spoilerCmd_1476411735(title_1476411736, content_1476411737) {
    var Temporary1;

  var result_1476411738 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,100,101,116,97,105,108,115,32,99,108,97,115,115,61,34,120,100,45,115,112,111,105,108,101,114,34,62,60,115,117,109,109,97,114,121,62] || []).concat(title_1476411736 || [],[60,47,115,117,109,109,97,114,121,62] || [],content_1476411737 || [],[60,47,100,101,116,97,105,108,115,62] || []);
      break;
    case 1:
      raiseException({message: [84,104,101,32,115,112,111,105,108,101,114,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,76,97,84,101,88,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: [84,104,101,32,115,112,111,105,108,101,114,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476411738 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476411738;

}
    
function HEX3Aanonymous_1476411744(arg_1476411745) {
      var result_1476411746 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411734 = expandArguments_2197815314(doc_1476395042, [115,112,111,105,108,101,114], arg_1476411745, [HEX21_1593835705(1), HEX21_1593835705(1)]);
        result_1476411746 = nimCopy(result_1476411746, {typ: 1, str: spoilerCmd_1476411735(to_2181038173(vals_1476411734[chckIndx(0, 0, (vals_1476411734).length - 1)]), to_2181038173(vals_1476411734[chckIndx(1, 0, (vals_1476411734).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411746;

    }

function spoilerHintCmd_1476411806(name_1476411808, content_1476411809) {
    
function HEX3Aanonymous_1476411813() {
      var result_1476411814 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym698_1476411823 = 0;
          var colontmp__587203960 = 0;
          colontmp__587203960 = subInt((doc_1476395042.stack).length, 1);
          var res_587203961 = colontmp__587203960;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203961)) break Label3;
                iHEX60gensym698_1476411823 = res_587203961;
                var frameHEX60gensym698_1476411824 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym698_1476411823, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym698_1476411824.lang)) {
                result_1476411814 = get_1476395606(frameHEX60gensym698_1476411824.lang);
                break BeforeRet;
                }
                
                res_587203961 = subInt(res_587203961, 1);
              }
          };
        };
      };

      return result_1476411814;

    }
    var Temporary1;
      var Temporary2;

  var result_1476411810 = [];

    var word_1476411847 = translate_1610612762(4, HEX3Aanonymous_1476411813());
    switch (doc_1476395042.target) {
    case 0:
      if (isSome_2214592897(name_1476411808)) {
      var name_1476411862 = nimCopy(null, unsafeGet_2248147493(name_1476411808), NTI33554449);
      Temporary2 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, word_1476411847, NTI33554449), nimCopy(null, name_1476411862, NTI33554449)]);
      }
      else {
      Temporary2 = nsuFormatOpenArray([36,49], [nimCopy(null, word_1476411847, NTI33554449)]);
      }
      
      Temporary1 = (makeNimstrLit("<details class=\"xd-spoiler xd-theorem-like xd-hint\"><summary><strong>") || []).concat(Temporary2 || [],[60,47,115,116,114,111,110,103,62,60,47,115,117,109,109,97,114,121,62] || [],content_1476411809 || [],[60,47,100,101,116,97,105,108,115,62] || []);
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,115,112,111,105,108,101,114,104,105,110,116]), word_1476411847));
      Temporary1 = env_2197816511([88,68,115,112,111,105,108,101,114,104,105,110,116], content_1476411809);
      break;
    case 2:
      raiseException({message: [84,104,101,32,115,112,111,105,108,101,114,45,104,105,110,116,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476411810 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476411810;

}
    
function HEX3Aanonymous_1476411914(arg_1476411915) {
      var result_1476411916 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411805 = expandArguments_2197815314(doc_1476395042, [115,112,111,105,108,101,114,45,104,105,110,116], arg_1476411915, [HEX3F_1593835740(1), HEX21_1593835705(1)]);
        result_1476411916 = nimCopy(result_1476411916, {typ: 1, str: spoilerHintCmd_1476411806(to_2214592966(vals_1476411805[chckIndx(0, 0, (vals_1476411805).length - 1)]), to_2181038173(vals_1476411805[chckIndx(1, 0, (vals_1476411805).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476411916;

    }

function spoilerSolutionCmd_1476411982(name_1476411984, content_1476411985) {
    
function HEX3Aanonymous_1476411989() {
      var result_1476411990 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym705_1476411999 = 0;
          var colontmp__587203964 = 0;
          colontmp__587203964 = subInt((doc_1476395042.stack).length, 1);
          var res_587203965 = colontmp__587203964;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203965)) break Label3;
                iHEX60gensym705_1476411999 = res_587203965;
                var frameHEX60gensym705_1476412000 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym705_1476411999, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym705_1476412000.lang)) {
                result_1476411990 = get_1476395606(frameHEX60gensym705_1476412000.lang);
                break BeforeRet;
                }
                
                res_587203965 = subInt(res_587203965, 1);
              }
          };
        };
      };

      return result_1476411990;

    }
    var Temporary1;
      var Temporary2;

  var result_1476411986 = [];

    var word_1476412023 = translate_1610612762(11, HEX3Aanonymous_1476411989());
    switch (doc_1476395042.target) {
    case 0:
      if (isSome_2214592897(name_1476411984)) {
      var name_1476412038 = nimCopy(null, unsafeGet_2248147493(name_1476411984), NTI33554449);
      Temporary2 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, word_1476412023, NTI33554449), nimCopy(null, name_1476412038, NTI33554449)]);
      }
      else {
      Temporary2 = nsuFormatOpenArray([36,49], [nimCopy(null, word_1476412023, NTI33554449)]);
      }
      
      Temporary1 = (makeNimstrLit("<details class=\"xd-spoiler xd-theorem-like xd-solution\"><summary><strong>") || []).concat(Temporary2 || [],[60,47,115,116,114,111,110,103,62,60,47,115,117,109,109,97,114,121,62] || [],content_1476411985 || [],[60,47,100,101,116,97,105,108,115,62] || []);
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,115,112,111,105,108,101,114,115,111,108,117,116,105,111,110]), word_1476412023));
      Temporary1 = env_2197816511([88,68,115,112,111,105,108,101,114,115,111,108,117,116,105,111,110], content_1476411985);
      break;
    case 2:
      raiseException({message: makeNimstrLit("The spoiler-solution command is not supported in the Gemtext backend"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476411986 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476411986;

}
    
function HEX3Aanonymous_1476412090(arg_1476412091) {
      var result_1476412092 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476411981 = expandArguments_2197815314(doc_1476395042, [115,112,111,105,108,101,114,45,115,111,108,117,116,105,111,110], arg_1476412091, [HEX3F_1593835740(1), HEX21_1593835705(1)]);
        result_1476412092 = nimCopy(result_1476412092, {typ: 1, str: spoilerSolutionCmd_1476411982(to_2214592966(vals_1476411981[chckIndx(0, 0, (vals_1476411981).length - 1)]), to_2181038173(vals_1476411981[chckIndx(1, 0, (vals_1476411981).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412092;

    }

function strongCmd_1476412158(arg_1476412159) {
    var Temporary1;

  var result_1476412160 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,115,116,114,111,110,103,62] || []).concat(arg_1476412159 || [],[60,47,115,116,114,111,110,103,62] || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,98,102], arg_1476412159);
      break;
    case 2:
      Temporary1 = arg_1476412159;
      break;
    }
    result_1476412160 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476412160;

}
    
function HEX3Aanonymous_1476412166(arg_1476412167) {
      var result_1476412168 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476412157 = expandArguments_2197815314(doc_1476395042, [115,116,114,111,110,103], arg_1476412167, [HEX21_1593835705(1)]);
        result_1476412168 = nimCopy(result_1476412168, {typ: 1, str: strongCmd_1476412158(to_2181038173(vals_1476412157[chckIndx(0, 0, (vals_1476412157).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412168;

    }

function styleCmd_1476412224(arg_1476412225) {
      var Temporary1;

  var result_1476412226 = [];

    switch (doc_1476395042.target) {
    case 0:
      var Temporary1 = doc_1476395042;
      if (ConstSet420[Temporary1.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary1.target, NTI1593835523)); }
      incl_2264927133(Temporary1.addToStyle, arg_1476412225);
      break;
    default: 
      break;
    }

  return result_1476412226;

}
    
function HEX3Aanonymous_1476412255(arg_1476412256) {
      var result_1476412257 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        if (doc_1476395042.safeMode) {
        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [115,116,121,108,101]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands = nimCopy(HEX5BHEX5D_2197816618(doc_1476395042.stack, 1).commands, cssCommands_2214592519(doc_1476395042), NTI1593835562);
        var vals_1476412223 = expandArguments_2197815314(doc_1476395042, [115,116,121,108,101], arg_1476412256, [HEX21_1593835705(0)]);
        result_1476412257 = nimCopy(result_1476412257, {typ: 0, str: styleCmd_1476412224(to_2181038173(vals_1476412223[chckIndx(0, 0, (vals_1476412223).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412257;

    }

function tableCmd_1476412317(spec_1476412319, content_1476412320) {
    var Temporary1;
      var Temporary2;

  var result_1476412321 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,116,97,98,108,101,62] || []).concat(content_1476412320 || [],[60,47,116,97,98,108,101,62] || []);
      break;
    case 1:
      if (isSome_2214592897(spec_1476412319)) {
      var spec_1476412336 = nimCopy(null, unsafeGet_2248147493(spec_1476412319), NTI33554449);
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [98,111,111,107,116,97,98,115]));
      Temporary2 = env_2197816511([116,97,98,117,108,97,114], ([123] || []).concat(spec_1476412336 || [],[125,92,116,111,112,114,117,108,101,32] || [],content_1476412320 || [],[92,98,111,116,116,111,109,114,117,108,101] || []));
      }
      else {
        raiseException({message: [84,97,98,108,101,115,32,105,110,32,76,97,84,101,88,32,99,117,114,114,101,110,116,108,121,32,114,101,113,117,105,114,101,32,97,32,115,112,101,99], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
      Temporary1 = Temporary2;
      break;
    case 2:
      raiseException({message: [84,97,98,108,101,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,71,101,109,116,101,120,116,32,98,97,99,107,101,110,100], m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1476412321 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476412321;

}
    
function HEX3Aanonymous_1476412365(arg_1476412366) {
      var result_1476412367 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476412316 = expandArguments_2197815314(doc_1476395042, [116,97,98,108,101], arg_1476412366, [HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476412367 = nimCopy(result_1476412367, {typ: 1, str: tableCmd_1476412317(to_2214592966(vals_1476412316[chckIndx(0, 0, (vals_1476412316).length - 1)]), to_2181038173(vals_1476412316[chckIndx(1, 0, (vals_1476412316).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412367;

    }

function templateArgCmd_1476412433(arg_1476412434) {
    var Temporary1;
    var Temporary3;

  var result_1476412435 = [];

++excHandler;
    try {
    Temporary1 = (Temporary3 = HEX5BHEX5D_2130706855(doc_1476395042.templateArgs, arg_1476412434), Temporary3)[0][Temporary3[1]];
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217747))) {
    Label4: {
      var fmtRes_1476412501 = [mnewString(0)];
      fmtRes_1476412501[0].push.apply(fmtRes_1476412501[0], [84,101,109,112,108,97,116,101,32,97,114,103,117,109,101,110,116,32,110,111,116,32,102,111,117,110,100,58,32]);;
      formatValue_1442840747(fmtRes_1476412501, 0, arg_1476412434, []);
    };
    raiseException({message: nimCopy(null, fmtRes_1476412501[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1476412435 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476412435;

}
    
function HEX3Aanonymous_1476412507(arg_1476412508) {
      var result_1476412509 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476412432 = expandArguments_2197815314(doc_1476395042, [116,101,109,112,108,97,116,101,45,97,114,103], arg_1476412508, [HEX21_1593835705(1)]);
        result_1476412509 = nimCopy(result_1476412509, {typ: 1, str: templateArgCmd_1476412433(to_2181038173(vals_1476412432[chckIndx(0, 0, (vals_1476412432).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412509;

    }

function termCmd_1476412565(arg_1476412566) {
    var Temporary1;

  var result_1476412567 = [];

    switch (doc_1476395042.target) {
    case 0:
      Temporary1 = ([60,100,102,110,62] || []).concat(arg_1476412566 || [],[60,47,100,102,110,62] || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_2197816503([116,101,120,116,105,116], arg_1476412566);
      break;
    case 2:
      Temporary1 = arg_1476412566;
      break;
    }
    result_1476412567 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476412567;

}
    
function HEX3Aanonymous_1476412573(arg_1476412574) {
      var result_1476412575 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476412564 = expandArguments_2197815314(doc_1476395042, [116,101,114,109], arg_1476412574, [HEX21_1593835705(1)]);
        result_1476412575 = nimCopy(result_1476412575, {typ: 1, str: termCmd_1476412565(to_2181038173(vals_1476412564[chckIndx(0, 0, (vals_1476412564).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412575;

    }

function theoremCmd_1476412644(thNameHEX60gensym729_1476412646, labelHEX60gensym729_1476412648, contentHEX60gensym729_1476412649) {
    
function HEX3Aanonymous_1476412655(n_1476412667) {
      var result_1476412670 = false;

        result_1476412670 = !(eqStrings(n_1476412667, []));

      return result_1476412670;

    }
    
function HEX3Aanonymous_1476412680() {
      var result_1476412681 = 0;

      BeforeRet: {
        Label1: {
          var iHEX60gensym738_1476412690 = 0;
          var colontmp__587203969 = 0;
          colontmp__587203969 = subInt((doc_1476395042.stack).length, 1);
          var res_587203970 = colontmp__587203969;
          Label2: {
              Label3: while (true) {
              if (!(0 <= res_587203970)) break Label3;
                iHEX60gensym738_1476412690 = res_587203970;
                var frameHEX60gensym738_1476412691 = nimCopy(null, doc_1476395042.stack[chckIndx(iHEX60gensym738_1476412690, 0, (doc_1476395042.stack).length - 1)], NTI1593835535);
                if (isSome_1476395589(frameHEX60gensym738_1476412691.lang)) {
                result_1476412681 = get_1476395606(frameHEX60gensym738_1476412691.lang);
                break BeforeRet;
                }
                
                res_587203970 = subInt(res_587203970, 1);
              }
          };
        };
      };

      return result_1476412681;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary6;

  var result_1476412650 = [];

    var thNameHEX60gensym729_1476412677 = filter_2231369786(thNameHEX60gensym729_1476412646, HEX3Aanonymous_1476412655);
    var wordHEX60gensym729_1476412714 = translate_1610612762(12, HEX3Aanonymous_1476412680());
    var numHEX60gensym729_1476412715 = [];
    if (isSome_2214592897(labelHEX60gensym729_1476412648)) {
    var labelHEX60gensym729_1476412730 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym729_1476412648), NTI33554449);
    numHEX60gensym729_1476412715 = nimCopy(null, (doc_1476395042.settings.theoremLikeNumberPrefix || []).concat(HEX24_385875976(doc_1476395042.theoremLikeCounter) || []), NTI33554449);
    doc_1476395042.theoremLikeCounter = addInt(doc_1476395042.theoremLikeCounter, 1);
    HEX5BHEX5DHEX3D_1476398582(doc_1476395042.labelNums, labelHEX60gensym729_1476412730, {Field0: (wordHEX60gensym729_1476412714 || []).concat([32] || []), Field1: nimCopy(null, numHEX60gensym729_1476412715, NTI33554449)});
    }
    
    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet421[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fullNameHEX60gensym729_1476412807 = nimCopy(null, wordHEX60gensym729_1476412714, NTI33554449);
      if (isSome_2214592897(labelHEX60gensym729_1476412648)) {
      fullNameHEX60gensym729_1476412807.push.apply(fullNameHEX60gensym729_1476412807, ([32] || []).concat(numHEX60gensym729_1476412715 || []));;
      }
      
      if (isSome_2214592897(thNameHEX60gensym729_1476412677)) {
      var thNameHEX60gensym729_1476412829 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym729_1476412677), NTI33554449);
      fullNameHEX60gensym729_1476412807.push.apply(fullNameHEX60gensym729_1476412807, ([32,40] || []).concat(thNameHEX60gensym729_1476412829 || [],[41] || []));;
      }
      
      fullNameHEX60gensym729_1476412807.push.apply(fullNameHEX60gensym729_1476412807, [46]);;
      if (isSome_2214592897(labelHEX60gensym729_1476412648)) {
      var labelHEX60gensym729_1476412844 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym729_1476412648), NTI33554449);
      Label4: {
        var fmtRes_1476412848 = mnewString(0);
        fmtRes_1476412848.push.apply(fmtRes_1476412848, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
      };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476412848, [116,104,101,111,114,101,109]) || [],[34,32,105,100,61,34] || [],labelHEX60gensym729_1476412844 || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym729_1476412807 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym729_1476412649) || [],[60,47,100,105,118,62] || []);
      }
      else {
        Label5: {
          var fmtRes_1476412852 = mnewString(0);
          fmtRes_1476412852.push.apply(fmtRes_1476412852, [120,100,45,116,104,101,111,114,101,109,45,108,105,107,101,32,120,100,45,36,49]);;
        };
      Temporary3 = ([60,100,105,118,32,99,108,97,115,115,61,34] || []).concat(nsuFormatSingleElem(fmtRes_1476412852, [116,104,101,111,114,101,109]) || [],[34,62,60,115,116,114,111,110,103,62] || [],fullNameHEX60gensym729_1476412807 || [],[60,47,115,116,114,111,110,103,62,32] || [],nsuFormatSingleElem([36,49], contentHEX60gensym729_1476412649) || [],[60,47,100,105,118,62] || []);
      }
      
      Temporary1 = Temporary3;
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [97,109,115,116,104,109]));
      incl_2264927133(doc_1476395042.addToHead, (HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || []).concat(HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109], [88,68,116,104,101,111,114,101,109]), wordHEX60gensym729_1476412714) || [],HEX7BHEX7D_2197816503([116,104,101,111,114,101,109,115,116,121,108,101], [100,101,102,105,110,105,116,105,111,110]) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([110,101,119,116,104,101,111,114,101,109,42], [88,68,116,104,101,111,114,101,109,42]), wordHEX60gensym729_1476412714) || [],HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507(HEX7BHEX7D_2197816503([110,101,119,101,110,118,105,114,111,110,109,101,110,116], [88,68,116,104,101,111,114,101,109,77,97,110,117,97,108]), [49]), (HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([114,101,110,101,119,99,111,109,109,97,110,100], [92,116,104,101,88,68,116,104,101,111,114,101,109]), [35,49]) || []).concat([92,88,68,116,104,101,111,114,101,109] || [])), [92,101,110,100,88,68,116,104,101,111,114,101,109]) || []));
      var envNameHEX60gensym729_1476412899 = [88,68,116,104,101,111,114,101,109];
      var envContentHEX60gensym729_1476412900 = [];
      if (isSome_2214592897(labelHEX60gensym729_1476412648)) {
      var labelHEX60gensym729_1476412915 = nimCopy(null, unsafeGet_2248147493(labelHEX60gensym729_1476412648), NTI33554449);
      envNameHEX60gensym729_1476412899.push.apply(envNameHEX60gensym729_1476412899, [77,97,110,117,97,108]);;
      envContentHEX60gensym729_1476412900.push.apply(envContentHEX60gensym729_1476412900, ([123] || []).concat(numHEX60gensym729_1476412715 || [],[125] || []));;
      envContentHEX60gensym729_1476412900.push.apply(envContentHEX60gensym729_1476412900, HEX7BHEX7D_2197816503([108,97,98,101,108], labelHEX60gensym729_1476412915));;
      }
      else {
      envNameHEX60gensym729_1476412899.push.apply(envNameHEX60gensym729_1476412899, [42]);;
      }
      
      if (isSome_2214592897(thNameHEX60gensym729_1476412677)) {
      var thNameHEX60gensym729_1476412930 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym729_1476412677), NTI33554449);
      envContentHEX60gensym729_1476412900.push.apply(envContentHEX60gensym729_1476412900, nsuFormatSingleElem([91,36,49,93], thNameHEX60gensym729_1476412930));;
      }
      
      envContentHEX60gensym729_1476412900.push.apply(envContentHEX60gensym729_1476412900, nsuFormatSingleElem([36,49], contentHEX60gensym729_1476412649));;
      Temporary1 = env_2197816511(envNameHEX60gensym729_1476412899, envContentHEX60gensym729_1476412900);
      break;
    case 2:
      if (isSome_2214592897(thNameHEX60gensym729_1476412677)) {
      var thNameHEX60gensym729_1476412945 = nimCopy(null, unsafeGet_2248147493(thNameHEX60gensym729_1476412677), NTI33554449);
      Temporary6 = nsuFormatOpenArray([36,49,32,40,36,50,41], [nimCopy(null, wordHEX60gensym729_1476412714, NTI33554449), nimCopy(null, thNameHEX60gensym729_1476412945, NTI33554449)]);
      }
      else {
      Temporary6 = nsuFormatOpenArray([36,49], [nimCopy(null, wordHEX60gensym729_1476412714, NTI33554449)]);
      }
      
      Temporary1 = nsuFormatOpenArray([10,10,36,49,46,32,36,50], [nimCopy(null, Temporary6, NTI33554449), nimCopy(null, contentHEX60gensym729_1476412649, NTI33554449)]);
      break;
    }
    result_1476412650 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476412650;

}
    
function HEX3Aanonymous_1476412951(arg_1476412952) {
      var result_1476412953 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476412643 = expandArguments_2197815314(doc_1476395042, [116,104,101,111,114,101,109], arg_1476412952, [HEX3F_1593835740(1), HEX3F_1593835740(0), HEX21_1593835705(1)]);
        result_1476412953 = nimCopy(result_1476412953, {typ: 1, str: theoremCmd_1476412644(to_2214592966(vals_1476412643[chckIndx(0, 0, (vals_1476412643).length - 1)]), to_2214592966(vals_1476412643[chckIndx(1, 0, (vals_1476412643).length - 1)]), to_2181038173(vals_1476412643[chckIndx(2, 0, (vals_1476412643).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476412953;

    }

function titleCmd_1476413029(title_1476413030, author_1476413032) {
    var Temporary1;
      var Temporary2;

  var result_1476413033 = [];

    switch (doc_1476395042.target) {
    case 0:
      incl_2264927133(doc_1476395042.addToHead, ([60,116,105,116,108,101,62] || []).concat(title_1476413030 || [],[60,47,116,105,116,108,101,62] || []));
      if (isSome_2214592897(author_1476413032)) {
      var author_1476413071 = nimCopy(null, unsafeGet_2248147493(author_1476413032), NTI33554449);
      Temporary2 = ([60,97,100,100,114,101,115,115,62] || []).concat(author_1476413071 || [],[60,47,97,100,100,114,101,115,115,62] || []);
      }
      else {
      Temporary2 = [];
      }
      
      Temporary1 = ([60,104,49,62] || []).concat(title_1476413030 || [],[60,47,104,49,62] || [],Temporary2 || []);
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([116,105,116,108,101], title_1476413030));
      if (isSome_2214592897(author_1476413032)) {
      var author_1476413109 = nimCopy(null, unsafeGet_2248147493(author_1476413032), NTI33554449);
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503([97,117,116,104,111,114], author_1476413109));
      }
      else {
      }
      
      Temporary1 = [92,109,97,107,101,116,105,116,108,101];
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem([35,32,36,49,10,10], title_1476413030);
      break;
    }
    result_1476413033 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476413033;

}
    
function HEX3Aanonymous_1476413138(arg_1476413139) {
      var result_1476413140 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476413028 = expandArguments_2197815314(doc_1476395042, [116,105,116,108,101], arg_1476413139, [HEX21_1593835705(1), HEX3F_1593835740(1)]);
        result_1476413140 = nimCopy(result_1476413140, {typ: 1, str: titleCmd_1476413029(to_2181038173(vals_1476413028[chckIndx(0, 0, (vals_1476413028).length - 1)]), to_2214592966(vals_1476413028[chckIndx(1, 0, (vals_1476413028).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476413140;

    }

function unitCmd_1476413206(number_1476413208, unit_1476413209) {
    var Temporary1;

  var result_1476413210 = [];

    if (isSome_2214592897(number_1476413208)) {
    var number_1476413225 = nimCopy(null, unsafeGet_2248147493(number_1476413208), NTI33554449);
    Temporary1 = (number_1476413225 || []).concat([226,128,137] || [],unit_1476413209 || []);
    }
    else {
    Temporary1 = unit_1476413209;
    }
    
    result_1476413210 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476413210;

}
    
function HEX3Aanonymous_1476413231(arg_1476413232) {
      var result_1476413233 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476413205 = expandArguments_2197815314(doc_1476395042, [117,110,105,116], arg_1476413232, [HEX3F_1593835740(1), HEX21_1593835705(1)]);
        result_1476413233 = nimCopy(result_1476413233, {typ: 1, str: unitCmd_1476413206(to_2214592966(vals_1476413205[chckIndx(0, 0, (vals_1476413205).length - 1)]), to_2181038173(vals_1476413205[chckIndx(1, 0, (vals_1476413205).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476413233;

    }

function xidocCmd_1476413299() {
    var Temporary1;
      var Temporary2;

  var result_1476413300 = [];

    switch (doc_1476395042.target) {
    case 0:
      var Temporary2 = doc_1476395042;
      if (ConstSet422[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1593835523)); }
      incl_2264927133(Temporary2.addToStyle, [46,120,100,45,108,111,103,111,123,99,111,108,111,114,58,35,100,48,99,59,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,125]);
      Temporary1 = [60,115,112,97,110,32,99,108,97,115,115,61,34,120,100,45,108,111,103,111,34,62,206,190,60,47,115,112,97,110,62];
      break;
    case 1:
      incl_2264927133(doc_1476395042.addToHead, HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507([117,115,101,112,97,99,107,97,103,101], [115,118,103,110,97,109,101,115]), [120,99,111,108,111,114]));
      Temporary1 = HEX7BHEX7D_2197816503(HEX7BHEX7D_2197816503([116,101,120,116,99,111,108,111,114], [35,100,48,99]), [92,40,92,120,105,92,41]);
      break;
    case 2:
      Temporary1 = [91,206,190,93];
      break;
    }
    result_1476413300 = nimCopy(null, Temporary1, NTI33554449);

  return result_1476413300;

}
    
function HEX3Aanonymous_1476413352(arg_1476413353) {
      var result_1476413354 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: {
        var vals_1476413298 = expandArguments_2197815314(doc_1476395042, [120,105,100,111,99], arg_1476413353, []);
        result_1476413354 = nimCopy(result_1476413354, {typ: 1, str: xidocCmd_1476413299(), list: [], opt: ({val: null})}, NTI1593835525);
        break BeforeRet;
      };

      return result_1476413354;

    }

function generateHtmlTag_1476413405(tag_1476413406, args_1476413407, body_1476413408, paired_1476413409) {
    var Temporary5;

  var result_1476413410 = [];

    var attrs_1476413418 = newSeq_536871460(0);
    var classes_1476413426 = newSeq_536871460(0);
    Label1: {
      var arg_1476413430 = [];
      var i_587203973 = 0;
      var L_587203974 = (args_1476413407).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587203973 < L_587203974)) break Label3;
            arg_1476413430 = args_1476413407[chckIndx(i_587203973, 0, (args_1476413407).length - 1)];
            if (nsuStartsWith(arg_1476413430, [35])) {
            attrs_1476413418.push(nsuFormatSingleElem([105,100,61,34,36,49,34], HEX5BHEX5D_754976027(arg_1476413430, HEX2EHEX2E_973078632(1, 1))));;
            }
            else {
            if (nsuStartsWith(arg_1476413430, [46])) {
            classes_1476413426.push(HEX5BHEX5D_754976027(arg_1476413430, HEX2EHEX2E_973078632(1, 1)));;
            }
            else {
              var Temporary4 = nimCopy(null, arg_1476413430, NTI33554449);
            attrs_1476413418.push(Temporary4);;
            }
            }
            i_587203973 = addInt(i_587203973, 1);
            if (!(((args_1476413407).length == L_587203974))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(((classes_1476413426).length == 0))) {
    attrs_1476413418.push(nsuFormatSingleElem([99,108,97,115,115,61,34,36,49,34], nsuJoinSep(classes_1476413426, [32])));;
    }
    
    if (paired_1476413409) {
    Temporary5 = nsuFormatOpenArray([60,36,49,62,36,50,60,47,36,51,62], [nsuJoinSep(HEX26_2332033126([nimCopy(null, tag_1476413406, NTI33554449)], attrs_1476413418), [32]), nimCopy(null, body_1476413408, NTI33554449), nimCopy(null, tag_1476413406, NTI33554449)]);
    }
    else {
    Temporary5 = nsuFormatOpenArray([60,36,49,32,47,62], [nsuJoinSep(HEX26_2332033126([nimCopy(null, tag_1476413406, NTI33554449)], attrs_1476413418), [32])]);
    }
    
    result_1476413410 = nimCopy(null, Temporary5, NTI33554449);

  return result_1476413410;

}

function tagCmd_1476413503(tag_1476413504, args_1476413505, body_1476413506) {
  var result_1476413507 = [];

    result_1476413507 = nimCopy(null, generateHtmlTag_1476413405(tag_1476413504, args_1476413505, body_1476413506, true), NTI33554449);

  return result_1476413507;

}
      
function HEX3Aanonymous_1476413513(arg_1476413514) {
        var result_1476413515 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        BeforeRet: {
          if (doc_1476395042.safeMode) {
          raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [60,62]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
          var vals_1476413502 = expandArguments_2197815314(doc_1476395042, [60,62], arg_1476413514, [HEX21_1593835705(0), HEX2A_1593835743(0), HEX21_1593835705(1)]);
          result_1476413515 = nimCopy(result_1476413515, {typ: 1, str: tagCmd_1476413503(to_2181038173(vals_1476413502[chckIndx(0, 0, (vals_1476413502).length - 1)]), to_2248147113(vals_1476413502[chckIndx(1, 0, (vals_1476413502).length - 1)]), to_2181038173(vals_1476413502[chckIndx(2, 0, (vals_1476413502).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
          break BeforeRet;
        };

        return result_1476413515;

      }
              
function HEX3Aanonymous_1476413583(tag_1476413584) {
                  tag_1476413584 = nimCopy(null, tag_1476413584, NTI33554449);

function theTagCmd_1476413594(args_1476413595) {
  var result_1476413596 = [];

    result_1476413596 = nimCopy(null, generateHtmlTag_1476413405(tag_1476413584, args_1476413595, [], false), NTI33554449);

  return result_1476413596;

}
                  
function HEX3Aanonymous_1476413602(arg_1476413603) {
                    var result_1476413604 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                    BeforeRet: {
                      if (doc_1476395042.safeMode) {
                      Label1: {
                        var fmtRes_1476413592 = [mnewString(0)];
                        fmtRes_1476413592[0].push.apply(fmtRes_1476413592[0], [60]);;
                        formatValue_1442840747(fmtRes_1476413592, 0, tag_1476413584, []);
                        fmtRes_1476413592[0].push.apply(fmtRes_1476413592[0], [62]);;
                      };
                      raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], fmtRes_1476413592[0]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                      }
                      
                      Label2: {
                        var fmtRes_1476413592 = [mnewString(0)];
                        fmtRes_1476413592[0].push.apply(fmtRes_1476413592[0], [60]);;
                        formatValue_1442840747(fmtRes_1476413592, 0, tag_1476413584, []);
                        fmtRes_1476413592[0].push.apply(fmtRes_1476413592[0], [62]);;
                      };
                      var vals_1476413593 = expandArguments_2197815314(doc_1476395042, fmtRes_1476413592[0], arg_1476413603, [HEX2A_1593835743(0)]);
                      result_1476413604 = nimCopy(result_1476413604, {typ: 1, str: theTagCmd_1476413594(to_2248147113(vals_1476413593[chckIndx(0, 0, (vals_1476413593).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
                      break BeforeRet;
                    };

                    return result_1476413604;

                  }

function theTagCmd_1476413665(args_1476413666, body_1476413667) {
  var result_1476413668 = [];

    result_1476413668 = nimCopy(null, generateHtmlTag_1476413405(tag_1476413584, args_1476413666, body_1476413667, true), NTI33554449);

  return result_1476413668;

}
                    
function HEX3Aanonymous_1476413674(arg_1476413675) {
                      var result_1476413676 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                      BeforeRet: {
                        if (doc_1476395042.safeMode) {
                        Label1: {
                          var fmtRes_1476413663 = [mnewString(0)];
                          fmtRes_1476413663[0].push.apply(fmtRes_1476413663[0], [60]);;
                          formatValue_1442840747(fmtRes_1476413663, 0, tag_1476413584, []);
                          fmtRes_1476413663[0].push.apply(fmtRes_1476413663[0], [62]);;
                        };
                        raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], fmtRes_1476413663[0]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                        }
                        
                        Label2: {
                          var fmtRes_1476413663 = [mnewString(0)];
                          fmtRes_1476413663[0].push.apply(fmtRes_1476413663[0], [60]);;
                          formatValue_1442840747(fmtRes_1476413663, 0, tag_1476413584, []);
                          fmtRes_1476413663[0].push.apply(fmtRes_1476413663[0], [62]);;
                        };
                        var vals_1476413664 = expandArguments_2197815314(doc_1476395042, fmtRes_1476413663[0], arg_1476413675, [HEX2A_1593835743(0), HEX21_1593835705(1)]);
                        result_1476413676 = nimCopy(result_1476413676, {typ: 1, str: theTagCmd_1476413665(to_2248147113(vals_1476413664[chckIndx(0, 0, (vals_1476413664).length - 1)]), to_2181038173(vals_1476413664[chckIndx(1, 0, (vals_1476413664).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
                        break BeforeRet;
                      };

                      return result_1476413676;

                    }

                  if (contains_973078577(htmlSelfClosingTags_1476395039, tag_1476413584)) {
                  Label1: {
                    var fmtRes_1476413592 = [mnewString(0)];
                    fmtRes_1476413592[0].push.apply(fmtRes_1476413592[0], [60]);;
                    formatValue_1442840747(fmtRes_1476413592, 0, tag_1476413584, []);
                    fmtRes_1476413592[0].push.apply(fmtRes_1476413592[0], [62]);;
                  };
                  HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], fmtRes_1476413592[0], HEX3Aanonymous_1476413602);
                  }
                  else {
                    Label2: {
                      var fmtRes_1476413663 = [mnewString(0)];
                      fmtRes_1476413663[0].push.apply(fmtRes_1476413663[0], [60]);;
                      formatValue_1442840747(fmtRes_1476413663, 0, tag_1476413584, []);
                      fmtRes_1476413663[0].push.apply(fmtRes_1476413663[0], [62]);;
                    };
                    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], fmtRes_1476413663[0], HEX3Aanonymous_1476413674);
                  }
                  

                
              }

function backslashCmd_1476413737(command_1476413738, args_1476413739) {
  var result_1476413740 = [];

    Label1: {
      var iHEX60gensym790_1476413761 = 0;
      var resultHEX60gensym790_1476413768 = newSeq_536871460(chckRange((args_1476413739).length, 0, 2147483647));
      Label2: {
        var it_1476413772 = [];
        var i_587203978 = 0;
        var L_587203979 = (args_1476413739).length;
        Label3: {
            Label4: while (true) {
            if (!(i_587203978 < L_587203979)) break Label4;
              it_1476413772 = args_1476413739[chckIndx(i_587203978, 0, (args_1476413739).length - 1)];
              resultHEX60gensym790_1476413768[chckIndx(iHEX60gensym790_1476413761, 0, (resultHEX60gensym790_1476413768).length - 1)] = nimCopy(null, nsuFormatSingleElem([123,36,49,125], it_1476413772), NTI33554449);
              iHEX60gensym790_1476413761 = addInt(iHEX60gensym790_1476413761, 1);
              i_587203978 = addInt(i_587203978, 1);
              if (!(((args_1476413739).length == L_587203979))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    result_1476413740 = nimCopy(null, ([92] || []).concat(command_1476413738 || [],nsuJoinSep(resultHEX60gensym790_1476413768, []) || []), NTI33554449);

  return result_1476413740;

}
      
function HEX3Aanonymous_1476413782(arg_1476413783) {
        var result_1476413784 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        BeforeRet: {
          if (doc_1476395042.safeMode) {
          raiseException({message: nsuFormatSingleElem([84,104,101,32,91,36,49,93,32,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,97,102,101,32,109,111,100,101], [92]), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
          var vals_1476413736 = expandArguments_2197815314(doc_1476395042, [92], arg_1476413783, [HEX21_1593835705(0), HEX2A_1593835743(1)]);
          result_1476413784 = nimCopy(result_1476413784, {typ: 1, str: backslashCmd_1476413737(to_2181038173(vals_1476413736[chckIndx(0, 0, (vals_1476413736).length - 1)]), to_2248147113(vals_1476413736[chckIndx(1, 0, (vals_1476413736).length - 1)])), list: [], opt: ({val: null})}, NTI1593835525);
          break BeforeRet;
        };

        return result_1476413784;

      }

  var result_1476395045 = ({data: [], counter: 0});

    var commands_1476395048 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [35], HEX3Aanonymous_1476395078);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [59], HEX3Aanonymous_1476395143);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [40,41], HEX3Aanonymous_1476395205);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [40], HEX3Aanonymous_1476395270);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [41], HEX3Aanonymous_1476395331);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [45,45], HEX3Aanonymous_1476395392);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [45,45,45], HEX3Aanonymous_1476395453);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [46,46,46], HEX3Aanonymous_1476395514);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [34], HEX3Aanonymous_1476395641);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [36], HEX3Aanonymous_1476395707);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [36,36], HEX3Aanonymous_1476395777);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [36,36,38], HEX3Aanonymous_1476395847);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [36,104], HEX3Aanonymous_1476395931);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [36,36,104], HEX3Aanonymous_1476395997);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [36,36,38,104], HEX3Aanonymous_1476396063);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [42], HEX3Aanonymous_1476396129);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [42,42], HEX3Aanonymous_1476396195);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [42,42,38], HEX3Aanonymous_1476396261);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [76,97,84,101,88], HEX3Aanonymous_1476396349);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [97,100,100,45,116,111,45,104,101,97,100], HEX3Aanonymous_1476396434);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [97,114,103,45,114,97,119], HEX3Aanonymous_1476397201);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [97,114,103], HEX3Aanonymous_1476397267);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [97,114,103,45,101,120,112,97,110,100], HEX3Aanonymous_1476397333);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [97,114,103,45,114,97,119,45,101,115,99,97,112,101], HEX3Aanonymous_1476397399);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [98,102], HEX3Aanonymous_1476397465);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [98,108,111,99,107,45,113,117,111,116,101], HEX3Aanonymous_1476397548);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,104,101,99,107,98,111,120,101,115], HEX3Aanonymous_1476397647);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,105,118,101,116], HEX3Aanonymous_1476397774);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,100,101], HEX3Aanonymous_1476397861);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,100,101,45,98,108,111,99,107], HEX3Aanonymous_1476398000);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,108,108,97,112,115,101], HEX3Aanonymous_1476398077);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,108,108,97,112,115,105,98,108,101], HEX3Aanonymous_1476398148);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,108,111,114], HEX3Aanonymous_1476398246);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,110,116,101,110,116,115], HEX3Aanonymous_1476398381);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [99,111,114,111,108,108,97,114,121], HEX3Aanonymous_1476400137);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [100,101,102], HEX3Aanonymous_1476401677);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [100,101,102,45,103,108,111,98,97,108], HEX3Aanonymous_1476401883);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [100,101,115,99,114,105,112,116,105,111,110,45,108,105,115,116], HEX3Aanonymous_1476402154);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [100,102,110], HEX3Aanonymous_1476402533);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [100,114,97,119], HEX3Aanonymous_1476402659);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [101,109,112,104], HEX3Aanonymous_1476402749);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [101,109,112,116,121,45,102,97,118,105,99,111,110], HEX3Aanonymous_1476402841);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [101,120,97,109,112,108,101], HEX3Aanonymous_1476403215);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [101,120,101,114,99,105,115,101], HEX3Aanonymous_1476403613);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [101,120,112,97,110,100], HEX3Aanonymous_1476403699);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [102,105,103,117,114,101], HEX3Aanonymous_1476403812);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [102,111,114,45,101,97,99,104], HEX3Aanonymous_1476404000);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [103,101,116,45,100,111,99,45,112,97,116,104,45,97,98,115,111,108,117,116,101], HEX3Aanonymous_1476404150);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [103,101,116,45,100,111,99,45,112,97,116,104,45,114,101,108,97,116,105,118,101,45,116,111,45,99,111,110,116,97,105,110,105,110,103], HEX3Aanonymous_1476404212);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [104,101,97,100,101,114,45,114,111,119], HEX3Aanonymous_1476404320);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [104,105,100,101], HEX3Aanonymous_1476404387);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [104,105,110,116], HEX3Aanonymous_1476404765);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [104,116,109,108,45,97,100,100,45,97,116,116,114,115], HEX3Aanonymous_1476404928);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,102,45,102,108,97,103], HEX3Aanonymous_1476405004);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,102,45,104,116,109,108], HEX3Aanonymous_1476405078);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,102,45,110,111,116,45,102,108,97,103], HEX3Aanonymous_1476405149);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,102,45,108,97,116,101,120], HEX3Aanonymous_1476405223);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,102,45,103,101,109,116,101,120,116], HEX3Aanonymous_1476405293);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,110,99,108,117,100,101], HEX3Aanonymous_1476405634);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,110,106,101,99,116], HEX3Aanonymous_1476405753);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [105,116], HEX3Aanonymous_1476405819);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,97,110,101,116,45,99,97,108,108], HEX3Aanonymous_1476405922);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,97,110,101,116,45,101,118,97,108], HEX3Aanonymous_1476406053);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,111,105,110], HEX3Aanonymous_1476406161);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,115,45,99,97,108,108], HEX3Aanonymous_1476406233);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,115,45,101,118,97,108], HEX3Aanonymous_1476406327);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,115,45,109,111,100,117,108,101], HEX3Aanonymous_1476406425);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [106,115,45,109,111,100,117,108,101,45,114,97,119], HEX3Aanonymous_1476406518);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,97,110,103], HEX3Aanonymous_1476406593);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,101,109,109,97], HEX3Aanonymous_1476406975);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,110,101,115], HEX3Aanonymous_1476407094);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,110,107], HEX3Aanonymous_1476407210);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,110,107,45,105,109,97,103,101], HEX3Aanonymous_1476407311);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,110,107,45,115,116,121,108,101,115,104,101,101,116], HEX3Aanonymous_1476407418);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,115,116], HEX3Aanonymous_1476407592);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,115,116,45,100,105,114,115], HEX3Aanonymous_1476407659);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [108,105,115,116,45,102,105,108,101,115], HEX3Aanonymous_1476407725);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [109,97,116,101,120,116], HEX3Aanonymous_1476407792);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [109,115], HEX3Aanonymous_1476407858);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [110,111,116,101], HEX3Aanonymous_1476408236);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [110,111,119], HEX3Aanonymous_1476408339);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [111,114,100,101,114,101,100,45,108,105,115,116], HEX3Aanonymous_1476408519);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112], HEX3Aanonymous_1476408586);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,97,115,115], HEX3Aanonymous_1476408652);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,97,115,115,45,105,110,106,101,99,116], HEX3Aanonymous_1476408766);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,97,115,115,45,114,97,119], HEX3Aanonymous_1476408832);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,105,107,99,104,114], HEX3Aanonymous_1476408953);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,105,107,99,104,114,45,114,97,119], HEX3Aanonymous_1476409043);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,114,111,111,102], HEX3Aanonymous_1476409421);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [112,114,111,112,115], HEX3Aanonymous_1476409511);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,97,119], HEX3Aanonymous_1476409578);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,97,119,60], HEX3Aanonymous_1476409645);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,101,102], HEX3Aanonymous_1476410011);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,101,110,100,101,114], HEX3Aanonymous_1476410087);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,101,112,108,97,99,101,45,115,117,102,102,105,120], HEX3Aanonymous_1476410156);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,101,115,101,116], HEX3Aanonymous_1476410250);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,101,115,101,116,45,116,104,101,111,114,101,109,45,108,105,107,101,45,99,111,117,110,116,101,114], HEX3Aanonymous_1476410332);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [114,111,119], HEX3Aanonymous_1476410446);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,101,99,116,105,111,110], HEX3Aanonymous_1476410598);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,101,116], HEX3Aanonymous_1476410695);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,101,116,45,100,111,99,45,108,97,110,103], HEX3Aanonymous_1476410768);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,101,116,45,102,97,118,105,99,111,110], HEX3Aanonymous_1476410861);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,101,116,45,115,121,110,116,97,120,45,104,105,103,104,108,105,103,104,116,105,110,103,45,116,104,101,109,101], HEX3Aanonymous_1476410927);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,101,116,45,116,105,116,108,101], HEX3Aanonymous_1476411039);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,104,111,119,45,116,105,116,108,101], HEX3Aanonymous_1476411105);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,111,108,117,116,105,111,110], HEX3Aanonymous_1476411483);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,112,97,99,101], HEX3Aanonymous_1476411568);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,112,108,105,116], HEX3Aanonymous_1476411673);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,112,111,105,108,101,114], HEX3Aanonymous_1476411744);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,112,111,105,108,101,114,45,104,105,110,116], HEX3Aanonymous_1476411914);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,112,111,105,108,101,114,45,115,111,108,117,116,105,111,110], HEX3Aanonymous_1476412090);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,116,114,111,110,103], HEX3Aanonymous_1476412166);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [115,116,121,108,101], HEX3Aanonymous_1476412255);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [116,97,98,108,101], HEX3Aanonymous_1476412365);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [116,101,109,112,108,97,116,101,45,97,114,103], HEX3Aanonymous_1476412507);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [116,101,114,109], HEX3Aanonymous_1476412573);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [116,104,101,111,114,101,109], HEX3Aanonymous_1476412951);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [116,105,116,108,101], HEX3Aanonymous_1476413138);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [117,110,105,116], HEX3Aanonymous_1476413231);
    HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [120,105,100,111,99], HEX3Aanonymous_1476413352);
    switch (doc_1476395042.target) {
    case 0:
      HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [60,62], HEX3Aanonymous_1476413513);
      Label1: {
        var tag_1476413582 = [];
        var i_587203465 = 0;
        var L_587203466 = 130;
        Label2: {
            Label3: while (true) {
            if (!(i_587203465 < L_587203466)) break Label3;
              tag_1476413582 = htmlTags_1476395038[chckIndx(i_587203465, 0, (htmlTags_1476395038).length - 1)];
              HEX3Aanonymous_1476413583(tag_1476413582);
              i_587203465 = addInt(i_587203465, 1);
              if (!((130 == L_587203466))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 1:
      HEX5BHEX5DHEX3D_2181038249(commands_1476395048[0], [92], HEX3Aanonymous_1476413782);
      break;
    default: 
      break;
    }
    result_1476395045 = nimCopy(result_1476395045, commands_1476395048[0], NTI1593835562);

  return result_1476395045;

}

function npegsreplacecb(s_1493175647, sub_1493175648, cb_1493175653) {
  var result_1493175654 = [];

    result_1493175654 = nimCopy(null, [], NTI33554449);
    var i_1493175655 = 0;
    var caps_1493175656 = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];
    var c_1493175657 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    var m_1493175658 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1493175655 < (s_1493175647).length)) break Label2;
          c_1493175657[0].ml = 0;
          var x_1493175659 = npegsrawMatch(s_1493175647, sub_1493175648, i_1493175655, c_1493175657[0]);
          if ((x_1493175659 <= 0)) {
          addChar(result_1493175654, s_1493175647[chckIndx(i_1493175655, 0, (s_1493175647).length - 1)]);;
          i_1493175655 = addInt(i_1493175655, 1);
          }
          else {
            Label3: {
              var kHEX60gensym585_1493175672 = 0;
              var colontmp__587203984 = 0;
              colontmp__587203984 = subInt(c_1493175657[0].ml, 1);
              var res_587203985 = 0;
              Label4: {
                  Label5: while (true) {
                  if (!(res_587203985 <= colontmp__587203984)) break Label5;
                    kHEX60gensym585_1493175672 = res_587203985;
                    var startIdxHEX60gensym585_1493175673 = c_1493175657[0].matches[chckIndx(kHEX60gensym585_1493175672, 0, (c_1493175657[0].matches).length - 1)]["Field0"];
                    var endIdxHEX60gensym585_1493175674 = c_1493175657[0].matches[chckIndx(kHEX60gensym585_1493175672, 0, (c_1493175657[0].matches).length - 1)]["Field1"];
                    if (!((startIdxHEX60gensym585_1493175673 == (-1)))) {
                    caps_1493175656[chckIndx(kHEX60gensym585_1493175672, 0, (caps_1493175656).length - 1)] = nimCopy(null, substr_33558079(s_1493175647, startIdxHEX60gensym585_1493175673, endIdxHEX60gensym585_1493175674), NTI33554449);
                    }
                    else {
                      caps_1493175656[chckIndx(kHEX60gensym585_1493175672, 0, (caps_1493175656).length - 1)] = nimCopy(null, [], NTI33554449);
                    }
                    
                    res_587203985 = addInt(res_587203985, 1);
                  }
              };
            };
            result_1493175654.push.apply(result_1493175654, cb_1493175653(m_1493175658, c_1493175657[0].ml, caps_1493175656));;
            i_1493175655 = addInt(i_1493175655, x_1493175659);
            m_1493175658 = addInt(m_1493175658, 1);
          }
          
        }
    };
    result_1493175654.push.apply(result_1493175654, substr_33558091(s_1493175647, i_1493175655));;

  return result_1493175654;

}

function renderBody_1660945080(doc_1660945081) {
          
function HEX3Aanonymous_1660945110(match_1660945111, cnt_1660945112, caps_1660945113) {
            var result_1660945114 = [];

              result_1660945114 = nimCopy(null, renderStr_1660945076(doc_1660945081, caps_1660945113[chckIndx(0, 0, (caps_1660945113).length - 1)]), NTI33554449);

            return result_1660945114;

          }

  var result_1660945082 = [];

    result_1660945082 = nimCopy(null, renderStr_1660945072(doc_1660945081, toStringView_1560281134(doc_1660945081.body[0], doc_1660945081.body[1])), NTI33554449);
    Label1: {
        Label2: while (true) {
        if (!contains_1660944443(result_1660945082, 192)) break Label2;
          doc_1660945081.stage = addInt(doc_1660945081.stage, 1);
          result_1660945082 = nimCopy(null, npegsreplacecb(result_1660945082, peg_1493176580([39,192,39,32,64,64,32,39,193,39]), HEX3Aanonymous_1660945110), NTI33554449);
          if ((256 <= doc_1660945081.stage)) {
          raiseException({message: makeNimstrLit("Number of post-processing iterations exceeded; this might be an internal error"), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
        }
    };

  return result_1660945082;

}

function get_1543503914(self_1543503916) {
  var result_1543503917 = null;
  var result_1543503917_Idx = 0;

  BeforeRet: {
    if (isNone_1543503922(self_1543503916)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1358954516, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1543503917 = self_1543503916; result_1543503917_Idx = "val";
    break BeforeRet;
  };

  return [result_1543503917, result_1543503917_Idx];

}

function HEX5BHEX5D_1543503973(s_1543503977, x_1543503978) {
  var result_1543503979 = [];

    var a_1543503981 = x_1543503978.a;
    var L_1543503987 = addInt(subInt(subInt((s_1543503977).length, x_1543503978.b), a_1543503981), 1);
    result_1543503979 = new Array(chckRange(L_1543503987, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1543503987, 0, 2147483647) ; ++i) { result_1543503979[i] = ({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})}); }    Label1: {
      var i_1543503996 = 0;
      var i_587203996 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587203996 < L_1543503987)) break Label3;
            i_1543503996 = i_587203996;
            result_1543503979[chckIndx(i_1543503996, 0, (result_1543503979).length - 1)] = nimCopy(result_1543503979[chckIndx(i_1543503996, 0, (result_1543503979).length - 1)], s_1543503977[chckIndx(addInt(i_1543503996, a_1543503981), 0, (s_1543503977).length - 1)], NTI1593835535);
            i_587203996 = addInt(i_587203996, 1);
          }
      };
    };

  return result_1543503979;

}

function lineContext_1560281172(view_1560281173) {
  var result_1560281178 = {Field0: 0, Field1: 0, Field2: 0, Field3: 0};

    var lns_1560281179 = nsuSplitLines(view_1560281173.body[0][view_1560281173.body[1]], false);
    var lnIndex_1560281180 = 0;
    var lenSum_1560281181 = 0;
    var a_1560281182 = view_1560281173.slice.a;
    Label1: {
        Label2: while (true) {
        if (!(addInt(lenSum_1560281181, (lns_1560281179[chckIndx(lnIndex_1560281180, 0, (lns_1560281179).length - 1)]).length) <= a_1560281182)) break Label2;
          lenSum_1560281181 = addInt(lenSum_1560281181, addInt((lns_1560281179[chckIndx(lnIndex_1560281180, 0, (lns_1560281179).length - 1)]).length, 1));
          lnIndex_1560281180 = addInt(lnIndex_1560281180, 1);
        }
    };
    result_1560281178.Field0 = addInt(lnIndex_1560281180, 1);
    result_1560281178.Field1 = addInt(subInt(a_1560281182, lenSum_1560281181), 1);
    var b_1560281192 = view_1560281173.slice.b;
    Label3: {
        Label4: while (true) {
        if (!(addInt(lenSum_1560281181, (lns_1560281179[chckIndx(lnIndex_1560281180, 0, (lns_1560281179).length - 1)]).length) <= b_1560281192)) break Label4;
          lenSum_1560281181 = addInt(lenSum_1560281181, addInt((lns_1560281179[chckIndx(lnIndex_1560281180, 0, (lns_1560281179).length - 1)]).length, 1));
          lnIndex_1560281180 = addInt(lnIndex_1560281180, 1);
        }
    };
    result_1560281178.Field2 = addInt(lnIndex_1560281180, 1);
    result_1560281178.Field3 = addInt(subInt(b_1560281192, lenSum_1560281181), 1);

  return result_1560281178;

}

function npegsreplace(s_1493175590, sub_1493175591, by_1493175592) {
  var result_1493175593 = [];

    result_1493175593 = nimCopy(null, [], NTI33554449);
    var i_1493175594 = 0;
    var c_1493175595 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    Label1: {
        Label2: while (true) {
        if (!(i_1493175594 < (s_1493175590).length)) break Label2;
          var x_1493175596 = npegsrawMatch(s_1493175590, sub_1493175591, i_1493175594, c_1493175595[0]);
          if ((x_1493175596 <= 0)) {
          addChar(result_1493175593, s_1493175590[chckIndx(i_1493175594, 0, (s_1493175590).length - 1)]);;
          i_1493175594 = addInt(i_1493175594, 1);
          }
          else {
            result_1493175593.push.apply(result_1493175593, by_1493175592);;
            i_1493175594 = addInt(i_1493175594, x_1493175596);
          }
          
        }
    };
    result_1493175593.push.apply(result_1493175593, substr_33558091(s_1493175590, i_1493175594));;

  return result_1493175593;

}

function nsuCountChar(s_754976502, sub_754976503) {
  var result_754976504 = 0;

    result_754976504 = 0;
    Label1: {
      var c_754976505 = 0;
      var i_1560281232 = 0;
      var L_1560281233 = (s_754976502).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1560281232 < L_1560281233)) break Label3;
            c_754976505 = s_754976502[chckIndx(i_1560281232, 0, (s_754976502).length - 1)];
            if ((c_754976505 == sub_754976503)) {
            result_754976504 = addInt(result_754976504, 1);
            }
            
            i_1560281232 = addInt(i_1560281232, 1);
            if (!(((s_754976502).length == L_1560281233))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_754976504;

}

function format_1543503887(err_1543503888, doc_1543503889, termColors_1543503890) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
      var Temporary7;

  var result_1543503891 = null;

  BeforeRet: {
    if (termColors_1543503890) {
    Temporary1 = [27,91,57,49,109];
    }
    else {
    Temporary1 = [];
    }
    
    var red_1543503892 = nimCopy(null, Temporary1, NTI33554449);
    if (termColors_1543503890) {
    Temporary2 = [27,91,57,51,109];
    }
    else {
    Temporary2 = [];
    }
    
    var yellow_1543503893 = nimCopy(null, Temporary2, NTI33554449);
    if (termColors_1543503890) {
    Temporary3 = [27,91,57,54,109];
    }
    else {
    Temporary3 = [];
    }
    
    var cyan_1543503894 = nimCopy(null, Temporary3, NTI33554449);
    if (termColors_1543503890) {
    Temporary4 = [27,91,57,48,109];
    }
    else {
    Temporary4 = [];
    }
    
    var gray_1543503895 = nimCopy(null, Temporary4, NTI33554449);
    if (termColors_1543503890) {
    Temporary5 = [27,91,48,109];
    }
    else {
    Temporary5 = [];
    }
    
    var reset_1543503896 = nimCopy(null, Temporary5, NTI33554449);
    var msg_1543503897 = [];
    Label6: {
      var fmtRes_1543503901 = [mnewString(0)];
      formatValue_1442840747(fmtRes_1543503901, 0, red_1543503892, []);
      fmtRes_1543503901[0].push.apply(fmtRes_1543503901[0], [69,114,114,111,114,32,119,104,105,108,101,32,114,101,110,100,101,114,105,110,103,32,102,105,108,101,32]);;
      formatValue_1442840747(fmtRes_1543503901, 0, (Temporary7 = get_1543503914(doc_1543503889.stack[chckIndx(0, 0, (doc_1543503889.stack).length - 1)].path), Temporary7)[0][Temporary7[1]], []);
      fmtRes_1543503901[0].push.apply(fmtRes_1543503901[0], [10]);;
    };
    msg_1543503897.push.apply(msg_1543503897, fmtRes_1543503901[0]);;
    Label8: {
      var frame_1543504068 = ({args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdName: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false}), tableOfContentsEntry: ({val: null})});
      var colontmp__587203991 = [];
      colontmp__587203991 = HEX5BHEX5D_1543503973(doc_1543503889.stack, HEX2EHEX2E_973078632(1, 1));
      var i_587203992 = 0;
      var L_587203993 = (colontmp__587203991).length;
      Label9: {
          Label10: while (true) {
          if (!(i_587203992 < L_587203993)) break Label10;
            frame_1543504068 = colontmp__587203991[chckIndx(i_587203992, 0, (colontmp__587203991).length - 1)];
            msg_1543503897.push.apply(msg_1543503897, yellow_1543503893);;
            if ((frame_1543504068.cmd.body[0] == doc_1543503889.body[0] && frame_1543504068.cmd.body[1] == doc_1543503889.body[1])) {
            var ctx_1543504073 = lineContext_1560281172(frame_1543504068.cmd);
            Label11: {
              var fmtRes_1543504077 = [mnewString(0)];
              fmtRes_1543504077[0].push.apply(fmtRes_1543504077[0], [97,116,32]);;
              formatValue_1560281240(fmtRes_1543504077, 0, ctx_1543504073.Field0, []);
              fmtRes_1543504077[0].push.apply(fmtRes_1543504077[0], [58]);;
              formatValue_1560281240(fmtRes_1543504077, 0, ctx_1543504073.Field1, []);
              fmtRes_1543504077[0].push.apply(fmtRes_1543504077[0], [45]);;
              formatValue_1560281240(fmtRes_1543504077, 0, ctx_1543504073.Field2, []);
              fmtRes_1543504077[0].push.apply(fmtRes_1543504077[0], [58]);;
              formatValue_1560281240(fmtRes_1543504077, 0, ctx_1543504073.Field3, []);
              fmtRes_1543504077[0].push.apply(fmtRes_1543504077[0], [32]);;
            };
            msg_1543503897.push.apply(msg_1543503897, fmtRes_1543504077[0]);;
            }
            
            var truncatedArg_1543504099 = npegsreplace(HEX24_1560281153(frame_1543504068.cmdArg), peg_1493176580([92,115,43]), [32]);
            if ((48 < (truncatedArg_1543504099).length)) {
            truncatedArg_1543504099 = nimCopy(null, HEX5BHEX5D_754975999(truncatedArg_1543504099, HEX2EHEX2E_1056964656(0, 47)), NTI33554449);
            truncatedArg_1543504099.push.apply(truncatedArg_1543504099, [226,128,166]);;
            var numOpeningBrackets_1543504124 = nsuCountChar(truncatedArg_1543504099, 91);
            var numClosingBrackets_1543504125 = nsuCountChar(truncatedArg_1543504099, 93);
            truncatedArg_1543504099.push.apply(truncatedArg_1543504099, nsuRepeatStr([93,226,128,166], chckRange(subInt(numOpeningBrackets_1543504124, numClosingBrackets_1543504125), 0, 2147483647)));;
            }
            
            Label12: {
              var fmtRes_1543504129 = [mnewString(0)];
              fmtRes_1543504129[0].push.apply(fmtRes_1543504129[0], [105,110,32]);;
              formatValue_1442840747(fmtRes_1543504129, 0, gray_1543503895, []);
              fmtRes_1543504129[0].push.apply(fmtRes_1543504129[0], [91]);;
              formatValue_1442840747(fmtRes_1543504129, 0, cyan_1543503894, []);
              formatValue_1543504130(fmtRes_1543504129, 0, frame_1543504068.cmdName, []);
              formatValue_1442840747(fmtRes_1543504129, 0, reset_1543503896, []);
              formatValue_1442840747(fmtRes_1543504129, 0, truncatedArg_1543504099, []);
              formatValue_1442840747(fmtRes_1543504129, 0, gray_1543503895, []);
              fmtRes_1543504129[0].push.apply(fmtRes_1543504129[0], [93,10]);;
            };
            msg_1543503897.push.apply(msg_1543503897, fmtRes_1543504129[0]);;
            i_587203992 = addInt(i_587203992, 1);
            if (!(((colontmp__587203991).length == L_587203993))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    msg_1543503897.push.apply(msg_1543503897, (reset_1543503896 || []).concat(err_1543503888.message || []));;
    result_1543503891 = {message: nimCopy(null, msg_1543503897, NTI33554449), m_type: NTI1543503878, parent: null, name: null, trace: [], up: null};
    break BeforeRet;
  };

  return result_1543503891;

}

function len_587202634(s_587202636) {
  var result_587202637 = 0;

    result_587202637 = s_587202636.counter;

  return result_587202637;

}

function len_1191182970(n_1191182971) {
    var Temporary1;

  var result_1191182972 = 0;

    if ((n_1191182971.k == 2)) {
    var Temporary1 = n_1191182971;
    if (ConstSet425[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    result_1191182972 = (Temporary1.s).length;
    }
    

  return result_1191182972;

}

function HEX5BHEX5D_1191182983(n_1191182984, i_1191182985) {
    var Temporary1;
    var Temporary2;

  var result_1191182986 = null;

    if (!((n_1191182984.k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,53,51,54,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191182984.k, NTI1191182340) || []));
    }
    
    var Temporary1 = n_1191182984;
    if (ConstSet426[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    result_1191182986 = (Temporary2 = Temporary1.s, Temporary2)[chckIndx(i_1191182985, 0, (Temporary2).length - 1)];

  return result_1191182986;

}

function tag_1191182542(n_1191182543) {
    var Temporary1;

  var result_1191182544 = [];

    if (!((n_1191182543.k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,50,51,50,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191182543.k, NTI1191182340) || []));
    }
    
    var Temporary1 = n_1191182543;
    if (ConstSet427[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fTag\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    result_1191182544 = Temporary1["fTag"];

  return result_1191182544;

}

function nsuCmpIgnoreCase(a_754974907, b_754974908) {
  var result_754974909 = 0;

  BeforeRet: {
    var aLenHEX60gensym20_754974916 = (a_754974907).length;
    var bLenHEX60gensym20_754974917 = (b_754974908).length;
    var iHEX60gensym20_754974918 = 0;
    var mHEX60gensym20_754974919 = nimMin(aLenHEX60gensym20_754974916, bLenHEX60gensym20_754974917);
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym20_754974918 < mHEX60gensym20_754974919)) break Label2;
          result_754974909 = subInt(toLowerAscii_1107296257(a_754974907[chckIndx(iHEX60gensym20_754974918, 0, (a_754974907).length - 1)]), toLowerAscii_1107296257(b_754974908[chckIndx(iHEX60gensym20_754974918, 0, (b_754974908).length - 1)]));
          if (!((result_754974909 == 0))) {
          break BeforeRet;
          }
          
          iHEX60gensym20_754974918 = addInt(iHEX60gensym20_754974918, 1);
        }
    };
    result_754974909 = subInt(aLenHEX60gensym20_754974916, bLenHEX60gensym20_754974917);
  };

  return result_754974909;

}

function findAll_1191183257(n_1191183258, tag_1191183259, result_1191183260, result_1191183260_Idx, caseInsensitive_1191183261) {
    if (!((n_1191183258.k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,56,56,49,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191183258.k, NTI1191182340) || []));
    }
    
    Label1: {
      var child_1191183274 = null;
      if (!((n_1191183258.k == 2))) {
      failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,53,57,51,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191183258.k, NTI1191182340) || []));
      }
      
      Label2: {
        var i_587204016 = 0;
        var colontmp__587204017 = 0;
        colontmp__587204017 = subInt(len_1191182970(n_1191183258), 1);
        var res_587204018 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_587204018 <= colontmp__587204017)) break Label4;
              i_587204016 = res_587204018;
              child_1191183274 = HEX5BHEX5D_1191182983(n_1191183258, i_587204016);
              Label5: {
                if (!((child_1191183274.k == 2))) {
                break Label5;
                }
                
                if ((eqStrings(tag_1191182542(child_1191183274), tag_1191183259) || (caseInsensitive_1191183261 && (nsuCmpIgnoreCase(tag_1191182542(child_1191183274), tag_1191183259) == 0)))) {
                result_1191183260[result_1191183260_Idx].push(child_1191183274);;
                }
                
                findAll_1191183257(child_1191183274, tag_1191183259, result_1191183260, result_1191183260_Idx, false);
              };
              res_587204018 = addInt(res_587204018, 1);
            }
        };
      };
    };

  
}

function findAll_1191183283(n_1191183284, tag_1191183285, caseInsensitive_1191183286) {
  var result_1191183287 = [[]];

    result_1191183287[0] = new Array(0); for (var i = 0 ; i < 0 ; ++i) { result_1191183287[0][i] = null; }    findAll_1191183257(n_1191183284, tag_1191183285, result_1191183287, 0, caseInsensitive_1191183286);

  return result_1191183287[0];

}

function readData_1157627982(s_1157627983, buffer_1157627984, buffer_1157627984_Idx, bufLen_1157627985) {
  var result_1157627986 = 0;

    result_1157627986 = s_1157627983.readDataImpl(s_1157627983, buffer_1157627984, buffer_1157627984_Idx, bufLen_1157627985);

  return result_1157627986;

}

function readDataStr_1157627988(s_1157627989, buffer_1157627990, buffer_1157627990_Idx, slice_1157627992) {
  var result_1157627993 = 0;

    if (!((s_1157627989.readDataStrImpl == null))) {
    result_1157627993 = s_1157627989.readDataStrImpl(s_1157627989, buffer_1157627990, buffer_1157627990_Idx, slice_1157627992);
    }
    else {
      result_1157627993 = readData_1157627982(s_1157627989, buffer_1157627990[buffer_1157627990_Idx], chckIndx(slice_1157627992.a, 0, (buffer_1157627990[buffer_1157627990_Idx]).length - 1), subInt(addInt(slice_1157627992.b, 1), slice_1157627992.a));
    }
    

  return result_1157627993;

}

function fillBuffer_1224736784(L_1224736785) {
              var Temporary8;

    var charsRead_1224736786 = 0;
    var toCopy_1224736787 = 0;
    var s_1224736788 = 0;
    var oldBufLen_1224736789 = 0;
    if (!((addInt(L_1224736785.sentinel, 1) <= (L_1224736785.buf).length))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1224736787 = subInt((L_1224736785.buf).length, addInt(L_1224736785.sentinel, 1));
    if (!((0 <= toCopy_1224736787))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1224736787)) {
    Label1: {
      var i_1224736804 = 0;
      var i_587204023 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587204023 < toCopy_1224736787)) break Label3;
            i_1224736804 = i_587204023;
            L_1224736785.buf[chckIndx(i_1224736804, 0, (L_1224736785.buf).length - 1)] = L_1224736785.buf[chckIndx(addInt(addInt(L_1224736785.sentinel, 1), i_1224736804), 0, (L_1224736785.buf).length - 1)];
            i_587204023 = addInt(i_587204023, 1);
          }
      };
    };
    }
    
    charsRead_1224736786 = readDataStr_1157627988(L_1224736785.input, L_1224736785, "buf", HEX2EHEX2E_1056964656(toCopy_1224736787, subInt(addInt(addInt(toCopy_1224736787, L_1224736785.sentinel), 1), 1)));
    s_1224736788 = addInt(toCopy_1224736787, charsRead_1224736786);
    if ((charsRead_1224736786 < addInt(L_1224736785.sentinel, 1))) {
    L_1224736785.buf[chckIndx(s_1224736788, 0, (L_1224736785.buf).length - 1)] = 0;
    L_1224736785.sentinel = s_1224736788;
    }
    else {
      s_1224736788 = subInt(s_1224736788, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1224736788 < (L_1224736785.buf).length))) {
            failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1224736788) && !((L_1224736785.refillChars[L_1224736785.buf[chckIndx(s_1224736788, 0, (L_1224736785.buf).length - 1)]] != undefined)))) break Label7;
                  s_1224736788 = subInt(s_1224736788, 1);
                }
            };
            if ((0 <= s_1224736788)) {
            L_1224736785.sentinel = s_1224736788;
            break Label4;
            }
            else {
              oldBufLen_1224736789 = (L_1224736785.buf).length;
              if (L_1224736785.buf.length < (Temporary8 = chckRange(mulInt((L_1224736785.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1224736785.buf.length; i < Temporary8; ++i) L_1224736785.buf.push(0); }
         else {L_1224736785.buf.length = Temporary8; };
              charsRead_1224736786 = readDataStr_1157627988(L_1224736785.input, L_1224736785, "buf", HEX2EHEX2E_1056964656(oldBufLen_1224736789, subInt((L_1224736785.buf).length, 1)));
              if ((charsRead_1224736786 < oldBufLen_1224736789)) {
              L_1224736785.buf[chckIndx(addInt(oldBufLen_1224736789, charsRead_1224736786), 0, (L_1224736785.buf).length - 1)] = 0;
              L_1224736785.sentinel = addInt(oldBufLen_1224736789, charsRead_1224736786);
              break Label4;
              }
              
              s_1224736788 = subInt((L_1224736785.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1224736900(L_1224736901) {
    if ((((L_1224736901.buf[chckIndx(0, 0, (L_1224736901.buf).length - 1)] == 239) && (L_1224736901.buf[chckIndx(1, 0, (L_1224736901.buf).length - 1)] == 187)) && (L_1224736901.buf[chckIndx(2, 0, (L_1224736901.buf).length - 1)] == 191))) {
    L_1224736901.bufpos = addInt(L_1224736901.bufpos, 3);
    L_1224736901.lineStart = addInt(L_1224736901.lineStart, 3);
    }
    

  
}

function open_1224736912(L_1224736913, input_1224736914, bufLen_1224736915, refillChars_1224736916) {
    if (!((0 < bufLen_1224736915))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1224736914 == null)))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1224736913.input = input_1224736914;
    L_1224736913.bufpos = 0;
    L_1224736913.offsetBase = 0;
    L_1224736913.refillChars = nimCopy(L_1224736913.refillChars, refillChars_1224736916, NTI1224736773);
    L_1224736913.buf = nimCopy(null, mnewString(chckRange(bufLen_1224736915, 0, 2147483647)), NTI33554449);
    L_1224736913.sentinel = subInt(bufLen_1224736915, 1);
    L_1224736913.lineStart = 0;
    L_1224736913.lineNumber = 1;
    fillBuffer_1224736784(L_1224736913);
    skipUtf8Bom_1224736900(L_1224736913);

  
}

function open_1174405185(my_1174405186, input_1174405187, filename_1174405188, options_1174405189) {
    open_1224736912(my_1174405186, input_1174405187, 8192, ConstSet428);
    my_1174405186.filename = nimCopy(null, filename_1174405188, NTI33554449);
    my_1174405186.state = 0;
    my_1174405186.kind = 0;
    my_1174405186.a = nimCopy(null, [], NTI33554449);
    my_1174405186.b = nimCopy(null, [], NTI33554449);
    my_1174405186.c = nimCopy(null, [], NTI33554449);
    my_1174405186.cIsEmpty = true;
    my_1174405186.options = nimCopy(my_1174405186.options, options_1174405189, NTI1174405132);

  
}

function fillBaseLexer_1224736846(L_1224736847, pos_1224736848) {
  var result_1224736849 = 0;

    if (!((pos_1224736848 <= L_1224736847.sentinel))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1224736848 < L_1224736847.sentinel)) {
    result_1224736849 = addInt(pos_1224736848, 1);
    }
    else {
      fillBuffer_1224736784(L_1224736847);
      L_1224736847.offsetBase = addInt(L_1224736847.offsetBase, pos_1224736848);
      L_1224736847.bufpos = 0;
      result_1224736849 = 0;
    }
    

  return result_1224736849;

}

function handleRefillChar_1224736887(L_1224736888, pos_1224736889) {
  var result_1224736890 = 0;

    if (!((L_1224736888.refillChars[L_1224736888.buf[chckIndx(pos_1224736889, 0, (L_1224736888.buf).length - 1)]] != undefined))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,50,57,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,105,110,32,76,46,114,101,102,105,108,108,67,104,97,114,115,96,32]);
    }
    
    result_1224736890 = fillBaseLexer_1224736846(L_1224736888, pos_1224736889);

  return result_1224736890;

}

function markError_1174405364(my_1174405365, kind_1174405366) {
    my_1174405365.err = kind_1174405366;
    my_1174405365.state = 4;

  
}

function parseName_1174405451(my_1174405452, dest_1174405453, dest_1174405453_Idx) {
    var pos_1174405454 = my_1174405452.bufpos;
    if ((ConstSet430[my_1174405452.buf[chckIndx(pos_1174405454, 0, (my_1174405452.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          addChar(dest_1174405453[dest_1174405453_Idx], my_1174405452.buf[chckIndx(pos_1174405454, 0, (my_1174405452.buf).length - 1)]);;
          pos_1174405454 = addInt(pos_1174405454, 1);
          if (!((ConstSet431[my_1174405452.buf[chckIndx(pos_1174405454, 0, (my_1174405452.buf).length - 1)]] != undefined))) {
          break Label1;
          }
          
        }
    };
    my_1174405452.bufpos = pos_1174405454;
    }
    else {
    markError_1174405364(my_1174405452, 2);
    }
    

  
}

function handleCR_1224736859(L_1224736860, pos_1224736861) {
  var result_1224736862 = 0;

    if (!((L_1224736860.buf[chckIndx(pos_1224736861, 0, (L_1224736860.buf).length - 1)] == 13))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1224736860.lineNumber = addInt(L_1224736860.lineNumber, 1);
    result_1224736862 = fillBaseLexer_1224736846(L_1224736860, pos_1224736861);
    if ((L_1224736860.buf[chckIndx(result_1224736862, 0, (L_1224736860.buf).length - 1)] == 10)) {
    result_1224736862 = fillBaseLexer_1224736846(L_1224736860, result_1224736862);
    }
    
    L_1224736860.lineStart = result_1224736862;

  return result_1224736862;

}

function handleLF_1224736873(L_1224736874, pos_1224736875) {
  var result_1224736876 = 0;

    if (!((L_1224736874.buf[chckIndx(pos_1224736875, 0, (L_1224736874.buf).length - 1)] == 10))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1224736874.lineNumber = addInt(L_1224736874.lineNumber, 1);
    result_1224736876 = fillBaseLexer_1224736846(L_1224736874, pos_1224736875);
    L_1224736874.lineStart = result_1224736876;

  return result_1224736876;

}

function parseWhitespace_1174405440(my_1174405441, skip_1174405442) {
    var pos_1174405443 = my_1174405441.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405441.buf[chckIndx(pos_1174405443, 0, (my_1174405441.buf).length - 1)]) {
          case 32:
          case 9:
            if (!(skip_1174405442)) {
            addChar(my_1174405441.a, my_1174405441.buf[chckIndx(pos_1174405443, 0, (my_1174405441.buf).length - 1)]);;
            }
            
            pos_1174405443 = addInt(pos_1174405443, 1);
            break;
          case 13:
            pos_1174405443 = handleCR_1224736859(my_1174405441, pos_1174405443);
            if (!(skip_1174405442)) {
            addChar(my_1174405441.a, 10);;
            }
            
            break;
          case 10:
            pos_1174405443 = handleLF_1224736873(my_1174405441, pos_1174405443);
            if (!(skip_1174405442)) {
            addChar(my_1174405441.a, 10);;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1174405441.bufpos = pos_1174405443;

  
}

function parseEndTag_1174405648(my_1174405649) {
    my_1174405649.bufpos = handleRefillChar_1224736887(my_1174405649, addInt(my_1174405649.bufpos, 1));
    parseName_1174405451(my_1174405649, my_1174405649, "a");
    parseWhitespace_1174405440(my_1174405649, true);
    if ((my_1174405649.buf[chckIndx(my_1174405649.bufpos, 0, (my_1174405649.buf).length - 1)] == 62)) {
    my_1174405649.bufpos = addInt(my_1174405649.bufpos, 1);
    }
    else {
    markError_1174405364(my_1174405649, 5);
    }
    
    my_1174405649.kind = 7;

  
}

function parseCDATA_1174405383(my_1174405384) {
    var pos_1174405385 = addInt(my_1174405384.bufpos, 9);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405384.buf[chckIndx(pos_1174405385, 0, (my_1174405384.buf).length - 1)]) {
          case 93:
            if (((my_1174405384.buf[chckIndx(addInt(pos_1174405385, 1), 0, (my_1174405384.buf).length - 1)] == 93) && (my_1174405384.buf[chckIndx(addInt(pos_1174405385, 2), 0, (my_1174405384.buf).length - 1)] == 62))) {
            pos_1174405385 = addInt(pos_1174405385, 3);
            break Label1;
            }
            
            addChar(my_1174405384.a, 93);;
            pos_1174405385 = addInt(pos_1174405385, 1);
            break;
          case 0:
            markError_1174405364(my_1174405384, 1);
            break Label1;
            break;
          case 13:
            pos_1174405385 = handleCR_1224736859(my_1174405384, pos_1174405385);
            addChar(my_1174405384.a, 10);;
            break;
          case 10:
            pos_1174405385 = handleLF_1224736873(my_1174405384, pos_1174405385);
            addChar(my_1174405384.a, 10);;
            break;
          case 47:
            pos_1174405385 = handleRefillChar_1224736887(my_1174405384, pos_1174405385);
            addChar(my_1174405384.a, 47);;
            break;
          default: 
            addChar(my_1174405384.a, my_1174405384.buf[chckIndx(pos_1174405385, 0, (my_1174405384.buf).length - 1)]);;
            pos_1174405385 = addInt(pos_1174405385, 1);
            break;
          }
        }
    };
    my_1174405384.bufpos = pos_1174405385;
    my_1174405384.kind = 11;

  
}

function parseComment_1174405401(my_1174405402) {
    var pos_1174405403 = addInt(my_1174405402.bufpos, 4);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405402.buf[chckIndx(pos_1174405403, 0, (my_1174405402.buf).length - 1)]) {
          case 45:
            if (((my_1174405402.buf[chckIndx(addInt(pos_1174405403, 1), 0, (my_1174405402.buf).length - 1)] == 45) && (my_1174405402.buf[chckIndx(addInt(pos_1174405403, 2), 0, (my_1174405402.buf).length - 1)] == 62))) {
            pos_1174405403 = addInt(pos_1174405403, 3);
            break Label1;
            }
            
            if ((my_1174405402.options[1] != undefined)) {
            addChar(my_1174405402.a, 45);;
            }
            
            pos_1174405403 = addInt(pos_1174405403, 1);
            break;
          case 0:
            markError_1174405364(my_1174405402, 8);
            break Label1;
            break;
          case 13:
            pos_1174405403 = handleCR_1224736859(my_1174405402, pos_1174405403);
            if ((my_1174405402.options[1] != undefined)) {
            addChar(my_1174405402.a, 10);;
            }
            
            break;
          case 10:
            pos_1174405403 = handleLF_1224736873(my_1174405402, pos_1174405403);
            if ((my_1174405402.options[1] != undefined)) {
            addChar(my_1174405402.a, 10);;
            }
            
            break;
          case 47:
            pos_1174405403 = handleRefillChar_1224736887(my_1174405402, pos_1174405403);
            if ((my_1174405402.options[1] != undefined)) {
            addChar(my_1174405402.a, 47);;
            }
            
            break;
          default: 
            if ((my_1174405402.options[1] != undefined)) {
            addChar(my_1174405402.a, my_1174405402.buf[chckIndx(pos_1174405403, 0, (my_1174405402.buf).length - 1)]);;
            }
            
            pos_1174405403 = addInt(pos_1174405403, 1);
            break;
          }
        }
    };
    my_1174405402.bufpos = pos_1174405403;
    my_1174405402.kind = 4;

  
}

function parseSpecial_1174405592(my_1174405593) {
    var pos_1174405594 = addInt(my_1174405593.bufpos, 2);
    var opentags_1174405595 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405593.buf[chckIndx(pos_1174405594, 0, (my_1174405593.buf).length - 1)]) {
          case 0:
            markError_1174405364(my_1174405593, 5);
            break Label1;
            break;
          case 60:
            opentags_1174405595 = addInt(opentags_1174405595, 1);
            pos_1174405594 = addInt(pos_1174405594, 1);
            addChar(my_1174405593.a, 60);;
            break;
          case 62:
            if ((opentags_1174405595 <= 0)) {
            pos_1174405594 = addInt(pos_1174405594, 1);
            break Label1;
            }
            
            opentags_1174405595 = subInt(opentags_1174405595, 1);
            pos_1174405594 = addInt(pos_1174405594, 1);
            addChar(my_1174405593.a, 62);;
            break;
          case 13:
            pos_1174405594 = handleCR_1224736859(my_1174405593, pos_1174405594);
            addChar(my_1174405593.a, 10);;
            break;
          case 10:
            pos_1174405594 = handleLF_1224736873(my_1174405593, pos_1174405594);
            addChar(my_1174405593.a, 10);;
            break;
          case 47:
            pos_1174405594 = handleRefillChar_1224736887(my_1174405593, pos_1174405594);
            addChar(my_1174405593.b, 47);;
            break;
          default: 
            addChar(my_1174405593.a, my_1174405593.buf[chckIndx(pos_1174405594, 0, (my_1174405593.buf).length - 1)]);;
            pos_1174405594 = addInt(pos_1174405594, 1);
            break;
          }
        }
    };
    my_1174405593.bufpos = pos_1174405594;
    my_1174405593.kind = 13;

  
}

function parsePI_1174405569(my_1174405570) {
    my_1174405570.bufpos = addInt(my_1174405570.bufpos, 2);
    parseName_1174405451(my_1174405570, my_1174405570, "a");
    var pos_1174405576 = my_1174405570.bufpos;
    if (my_1174405570.b.length < 0) { for (var i = my_1174405570.b.length; i < 0; ++i) my_1174405570.b.push(0); }
         else {my_1174405570.b.length = 0; };
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405570.buf[chckIndx(pos_1174405576, 0, (my_1174405570.buf).length - 1)]) {
          case 0:
            markError_1174405364(my_1174405570, 4);
            break Label1;
            break;
          case 63:
            if ((my_1174405570.buf[chckIndx(addInt(pos_1174405576, 1), 0, (my_1174405570.buf).length - 1)] == 62)) {
            pos_1174405576 = addInt(pos_1174405576, 2);
            break Label1;
            }
            
            addChar(my_1174405570.b, 63);;
            pos_1174405576 = addInt(pos_1174405576, 1);
            break;
          case 13:
            pos_1174405576 = handleCR_1224736859(my_1174405570, pos_1174405576);
            addChar(my_1174405570.b, 10);;
            break;
          case 10:
            pos_1174405576 = handleLF_1224736873(my_1174405570, pos_1174405576);
            addChar(my_1174405570.b, 10);;
            break;
          case 47:
            pos_1174405576 = handleRefillChar_1224736887(my_1174405570, pos_1174405576);
            addChar(my_1174405570.b, 47);;
            break;
          default: 
            addChar(my_1174405570.b, my_1174405570.buf[chckIndx(pos_1174405576, 0, (my_1174405570.buf).length - 1)]);;
            pos_1174405576 = addInt(pos_1174405576, 1);
            break;
          }
        }
    };
    my_1174405570.bufpos = pos_1174405576;
    my_1174405570.kind = 5;

  
}

function parseTag_1174405626(my_1174405627) {
  BeforeRet: {
    my_1174405627.bufpos = addInt(my_1174405627.bufpos, 1);
    parseName_1174405451(my_1174405627, my_1174405627, "a");
    if (((my_1174405627.a).length == 0)) {
    my_1174405627.kind = 2;
    addChar(my_1174405627.a, 60);;
    break BeforeRet;
    }
    
    parseWhitespace_1174405440(my_1174405627, true);
    if ((ConstSet432[my_1174405627.buf[chckIndx(my_1174405627.bufpos, 0, (my_1174405627.buf).length - 1)]] != undefined)) {
    my_1174405627.kind = 8;
    my_1174405627.state = 2;
    my_1174405627.c = nimCopy(null, my_1174405627.a, NTI33554449);
    my_1174405627.cIsEmpty = false;
    }
    else {
      my_1174405627.kind = 6;
      var slash_1174405637 = (my_1174405627.buf[chckIndx(my_1174405627.bufpos, 0, (my_1174405627.buf).length - 1)] == 47);
      if (slash_1174405637) {
      my_1174405627.bufpos = handleRefillChar_1224736887(my_1174405627, my_1174405627.bufpos);
      }
      
      if ((slash_1174405637 && (my_1174405627.buf[chckIndx(my_1174405627.bufpos, 0, (my_1174405627.buf).length - 1)] == 62))) {
      my_1174405627.bufpos = addInt(my_1174405627.bufpos, 1);
      my_1174405627.state = 3;
      my_1174405627.c = nimCopy(null, [], NTI33554449);
      my_1174405627.cIsEmpty = true;
      }
      else {
      if ((my_1174405627.buf[chckIndx(my_1174405627.bufpos, 0, (my_1174405627.buf).length - 1)] == 62)) {
      my_1174405627.bufpos = addInt(my_1174405627.bufpos, 1);
      }
      else {
      markError_1174405364(my_1174405627, 5);
      }
      }
    }
    
  };

  
}

function parseEntity_1174405468(my_1174405469, dest_1174405470, dest_1174405470_Idx) {
    var pos_1174405471 = addInt(my_1174405469.bufpos, 1);
    my_1174405469.kind = 2;
    if ((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 35)) {
    var r_1174405472 = 0;
    pos_1174405471 = addInt(pos_1174405471, 1);
    if ((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 120)) {
    pos_1174405471 = addInt(pos_1174405471, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)]) {
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            r_1174405472 = (((r_1174405472 << 4) << 0 >> 0) | subInt(my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)], 48));
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            r_1174405472 = (((r_1174405472 << 4) << 0 >> 0) | addInt(subInt(my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)], 97), 10));
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            r_1174405472 = (((r_1174405472 << 4) << 0 >> 0) | addInt(subInt(my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)], 65), 10));
            break;
          default: 
            break Label1;
            break;
          }
          pos_1174405471 = addInt(pos_1174405471, 1);
        }
    };
    }
    else {
      Label3: {
          Label4: while (true) {
          if (!(ConstSet433[my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)]] != undefined)) break Label4;
            r_1174405472 = addInt(mulInt(r_1174405472, 10), subInt(my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)], 48));
            pos_1174405471 = addInt(pos_1174405471, 1);
          }
      };
    }
    
    dest_1174405470[dest_1174405470_Idx].push.apply(dest_1174405470[dest_1174405470_Idx], nuctoUTF8(((r_1174405472) | 0)));;
    }
    else {
    if ((((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 108) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 1), 0, (my_1174405469.buf).length - 1)] == 116)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 2), 0, (my_1174405469.buf).length - 1)] == 59))) {
    addChar(dest_1174405470[dest_1174405470_Idx], 60);;
    pos_1174405471 = addInt(pos_1174405471, 2);
    }
    else {
    if ((((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 103) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 1), 0, (my_1174405469.buf).length - 1)] == 116)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 2), 0, (my_1174405469.buf).length - 1)] == 59))) {
    addChar(dest_1174405470[dest_1174405470_Idx], 62);;
    pos_1174405471 = addInt(pos_1174405471, 2);
    }
    else {
    if (((((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 97) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 1), 0, (my_1174405469.buf).length - 1)] == 109)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 2), 0, (my_1174405469.buf).length - 1)] == 112)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 3), 0, (my_1174405469.buf).length - 1)] == 59))) {
    addChar(dest_1174405470[dest_1174405470_Idx], 38);;
    pos_1174405471 = addInt(pos_1174405471, 3);
    }
    else {
    if ((((((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 97) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 1), 0, (my_1174405469.buf).length - 1)] == 112)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 2), 0, (my_1174405469.buf).length - 1)] == 111)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 3), 0, (my_1174405469.buf).length - 1)] == 115)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 4), 0, (my_1174405469.buf).length - 1)] == 59))) {
    addChar(dest_1174405470[dest_1174405470_Idx], 39);;
    pos_1174405471 = addInt(pos_1174405471, 4);
    }
    else {
    if ((((((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 113) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 1), 0, (my_1174405469.buf).length - 1)] == 117)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 2), 0, (my_1174405469.buf).length - 1)] == 111)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 3), 0, (my_1174405469.buf).length - 1)] == 116)) && (my_1174405469.buf[chckIndx(addInt(pos_1174405471, 4), 0, (my_1174405469.buf).length - 1)] == 59))) {
    addChar(dest_1174405470[dest_1174405470_Idx], 34);;
    pos_1174405471 = addInt(pos_1174405471, 4);
    }
    else {
      my_1174405469.bufpos = pos_1174405471;
      var name_1174405558 = [[]];
      parseName_1174405451(my_1174405469, name_1174405558, 0);
      pos_1174405471 = my_1174405469.bufpos;
      if ((!((my_1174405469.err == 2)) && (my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 59))) {
      my_1174405469.kind = 12;
      }
      else {
      addChar(dest_1174405470[dest_1174405470_Idx], 38);;
      }
      
      dest_1174405470[dest_1174405470_Idx].push.apply(dest_1174405470[dest_1174405470_Idx], name_1174405558[0]);;
    }
    }}}}}
    if ((my_1174405469.buf[chckIndx(pos_1174405471, 0, (my_1174405469.buf).length - 1)] == 59)) {
    pos_1174405471 = addInt(pos_1174405471, 1);
    }
    else {
      my_1174405469.err = 3;
    }
    
    my_1174405469.bufpos = pos_1174405471;

  
}

function parseCharData_1174405715(my_1174405716) {
    var pos_1174405717 = my_1174405716.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405716.buf[chckIndx(pos_1174405717, 0, (my_1174405716.buf).length - 1)]) {
          case 0:
          case 60:
          case 38:
            break Label1;
            break;
          case 13:
            pos_1174405717 = handleCR_1224736859(my_1174405716, pos_1174405717);
            addChar(my_1174405716.a, 10);;
            break;
          case 10:
            pos_1174405717 = handleLF_1224736873(my_1174405716, pos_1174405717);
            addChar(my_1174405716.a, 10);;
            break;
          case 47:
            pos_1174405717 = handleRefillChar_1224736887(my_1174405716, pos_1174405717);
            addChar(my_1174405716.a, 47);;
            break;
          default: 
            addChar(my_1174405716.a, my_1174405716.buf[chckIndx(pos_1174405717, 0, (my_1174405716.buf).length - 1)]);;
            pos_1174405717 = addInt(pos_1174405717, 1);
            break;
          }
        }
    };
    my_1174405716.bufpos = pos_1174405717;
    my_1174405716.kind = 2;

  
}

function rawGetTok_1174405723(my_1174405724) {
    my_1174405724.kind = 0;
    if (my_1174405724.a.length < 0) { for (var i = my_1174405724.a.length; i < 0; ++i) my_1174405724.a.push(0); }
         else {my_1174405724.a.length = 0; };
    var pos_1174405725 = my_1174405724.bufpos;
    switch (my_1174405724.buf[chckIndx(pos_1174405725, 0, (my_1174405724.buf).length - 1)]) {
    case 60:
      switch (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 1), 0, (my_1174405724.buf).length - 1)]) {
      case 47:
        parseEndTag_1174405648(my_1174405724);
        break;
      case 33:
        if ((((((((my_1174405724.buf[chckIndx(addInt(pos_1174405725, 2), 0, (my_1174405724.buf).length - 1)] == 91) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 3), 0, (my_1174405724.buf).length - 1)] == 67)) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 4), 0, (my_1174405724.buf).length - 1)] == 68)) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 5), 0, (my_1174405724.buf).length - 1)] == 65)) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 6), 0, (my_1174405724.buf).length - 1)] == 84)) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 7), 0, (my_1174405724.buf).length - 1)] == 65)) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 8), 0, (my_1174405724.buf).length - 1)] == 91))) {
        parseCDATA_1174405383(my_1174405724);
        }
        else {
        if (((my_1174405724.buf[chckIndx(addInt(pos_1174405725, 2), 0, (my_1174405724.buf).length - 1)] == 45) && (my_1174405724.buf[chckIndx(addInt(pos_1174405725, 3), 0, (my_1174405724.buf).length - 1)] == 45))) {
        parseComment_1174405401(my_1174405724);
        }
        else {
        parseSpecial_1174405592(my_1174405724);
        }
        }
        break;
      case 63:
        parsePI_1174405569(my_1174405724);
        break;
      default: 
        parseTag_1174405626(my_1174405724);
        break;
      }
      break;
    case 32:
    case 9:
    case 13:
    case 10:
      parseWhitespace_1174405440(my_1174405724, false);
      my_1174405724.kind = 3;
      break;
    case 0:
      my_1174405724.kind = 1;
      break;
    case 38:
      parseEntity_1174405468(my_1174405724, my_1174405724, "a");
      break;
    default: 
      parseCharData_1174405715(my_1174405724);
      break;
    }
    if (!(!((my_1174405724.kind == 0)))) {
    failedAssertImpl_268435541([112,97,114,115,101,120,109,108,46,110,105,109,40,55,52,50,44,32,51,41,32,96,109,121,46,107,105,110,100,32,33,61,32,120,109,108,69,114,114,111,114,96,32]);
    }
    

  
}

function getTok_1174405735(my_1174405736) {
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var lastKind_1174405737 = my_1174405736.kind;
          rawGetTok_1174405723(my_1174405736);
          switch (my_1174405736.kind) {
          case 4:
            if ((my_1174405736.options[1] != undefined)) {
            break Label1;
            }
            
            break;
          case 3:
            if (((my_1174405736.options[0] != undefined) || (ConstSet434[lastKind_1174405737] != undefined))) {
            break Label1;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    };

  
}

function parseAttribute_1174405655(my_1174405656) {
  BeforeRet: {
    my_1174405656.kind = 9;
    if (my_1174405656.a.length < 0) { for (var i = my_1174405656.a.length; i < 0; ++i) my_1174405656.a.push(0); }
         else {my_1174405656.a.length = 0; };
    if (my_1174405656.b.length < 0) { for (var i = my_1174405656.b.length; i < 0; ++i) my_1174405656.b.push(0); }
         else {my_1174405656.b.length = 0; };
    parseName_1174405451(my_1174405656, my_1174405656, "a");
    if (((my_1174405656.a).length == 0)) {
    markError_1174405364(my_1174405656, 5);
    break BeforeRet;
    }
    
    var startPos_1174405657 = my_1174405656.bufpos;
    parseWhitespace_1174405440(my_1174405656, true);
    if (!((my_1174405656.buf[chckIndx(my_1174405656.bufpos, 0, (my_1174405656.buf).length - 1)] == 61))) {
    if ((!((my_1174405656.options[3] != undefined)) || (!((my_1174405656.buf[chckIndx(my_1174405656.bufpos, 0, (my_1174405656.buf).length - 1)] == 62)) && (my_1174405656.bufpos == startPos_1174405657)))) {
    markError_1174405364(my_1174405656, 6);
    }
    
    break BeforeRet;
    }
    
    my_1174405656.bufpos = addInt(my_1174405656.bufpos, 1);
    parseWhitespace_1174405440(my_1174405656, true);
    var pos_1174405667 = my_1174405656.bufpos;
    if ((ConstSet435[my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)]] != undefined)) {
    var quote_1174405672 = my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)];
    var pendingSpace_1174405673 = false;
    pos_1174405667 = addInt(pos_1174405667, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)]) {
          case 0:
            markError_1174405364(my_1174405656, 7);
            break Label1;
            break;
          case 38:
            if (pendingSpace_1174405673) {
            addChar(my_1174405656.b, 32);;
            pendingSpace_1174405673 = false;
            }
            
            my_1174405656.bufpos = pos_1174405667;
            parseEntity_1174405468(my_1174405656, my_1174405656, "b");
            my_1174405656.kind = 9;
            pos_1174405667 = my_1174405656.bufpos;
            break;
          case 32:
          case 9:
            pendingSpace_1174405673 = true;
            pos_1174405667 = addInt(pos_1174405667, 1);
            break;
          case 13:
            pos_1174405667 = handleCR_1224736859(my_1174405656, pos_1174405667);
            pendingSpace_1174405673 = true;
            break;
          case 10:
            pos_1174405667 = handleLF_1224736873(my_1174405656, pos_1174405667);
            pendingSpace_1174405673 = true;
            break;
          case 47:
            pos_1174405667 = handleRefillChar_1224736887(my_1174405656, pos_1174405667);
            addChar(my_1174405656.b, 47);;
            break;
          default: 
            if ((my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)] == quote_1174405672)) {
            pos_1174405667 = addInt(pos_1174405667, 1);
            break Label1;
            }
            else {
              if (pendingSpace_1174405673) {
              addChar(my_1174405656.b, 32);;
              pendingSpace_1174405673 = false;
              }
              
              addChar(my_1174405656.b, my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)]);;
              pos_1174405667 = addInt(pos_1174405667, 1);
            }
            
            break;
          }
        }
    };
    }
    else {
    if ((my_1174405656.options[2] != undefined)) {
    var startPos_1174405699 = pos_1174405667;
    Label3: {
        Label4: while (true) {
          var c_1174405700 = my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)];
        if (!!((ConstSet436[c_1174405700] != undefined))) break Label4;
          if ((c_1174405700 == 38)) {
          my_1174405656.bufpos = pos_1174405667;
          parseEntity_1174405468(my_1174405656, my_1174405656, "b");
          my_1174405656.kind = 9;
          pos_1174405667 = my_1174405656.bufpos;
          }
          else {
          if ((c_1174405700 == 47)) {
          pos_1174405667 = handleRefillChar_1224736887(my_1174405656, pos_1174405667);
          addChar(my_1174405656.b, 47);;
          }
          else {
            addChar(my_1174405656.b, c_1174405700);;
            pos_1174405667 = addInt(pos_1174405667, 1);
          }
          }
        }
    };
    if ((pos_1174405667 == startPos_1174405699)) {
    markError_1174405364(my_1174405656, 9);
    }
    
    }
    else {
      markError_1174405364(my_1174405656, 7);
      Label5: {
          Label6: while (true) {
          if (!(!((my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)] == 62)) && (32 < my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)]))) break Label6;
            addChar(my_1174405656.b, my_1174405656.buf[chckIndx(pos_1174405667, 0, (my_1174405656.buf).length - 1)]);;
            pos_1174405667 = addInt(pos_1174405667, 1);
          }
      };
    }
    }
    my_1174405656.bufpos = pos_1174405667;
    parseWhitespace_1174405440(my_1174405656, true);
  };

  
}

function next_1174405751(my_1174405752) {
    switch (my_1174405752.state) {
    case 1:
      getTok_1174405735(my_1174405752);
      break;
    case 0:
      my_1174405752.state = 1;
      getTok_1174405735(my_1174405752);
      if (((my_1174405752.kind == 5) && eqStrings(my_1174405752.a, [120,109,108]))) {
      getTok_1174405735(my_1174405752);
      }
      
      break;
    case 2:
      if ((my_1174405752.buf[chckIndx(my_1174405752.bufpos, 0, (my_1174405752.buf).length - 1)] == 62)) {
      my_1174405752.kind = 10;
      my_1174405752.bufpos = addInt(my_1174405752.bufpos, 1);
      my_1174405752.state = 1;
      }
      else {
      if ((my_1174405752.buf[chckIndx(my_1174405752.bufpos, 0, (my_1174405752.buf).length - 1)] == 47)) {
      my_1174405752.bufpos = handleRefillChar_1224736887(my_1174405752, my_1174405752.bufpos);
      if ((my_1174405752.buf[chckIndx(my_1174405752.bufpos, 0, (my_1174405752.buf).length - 1)] == 62)) {
      my_1174405752.kind = 10;
      my_1174405752.bufpos = addInt(my_1174405752.bufpos, 1);
      my_1174405752.state = 3;
      }
      else {
      markError_1174405364(my_1174405752, 5);
      }
      
      }
      else {
      parseAttribute_1174405655(my_1174405752);
      }
      }
      break;
    case 3:
      my_1174405752.state = 1;
      my_1174405752.kind = 7;
      if (!(my_1174405752.cIsEmpty)) {
      my_1174405752.a = nimCopy(null, my_1174405752.c, NTI33554449);
      }
      
      break;
    case 4:
      my_1174405752.kind = 0;
      my_1174405752.state = 1;
      break;
    }

  
}

function kind_1174405295(my_1174405296) {
  var result_1174405297 = 0;

  BeforeRet: {
    result_1174405297 = my_1174405296.kind;
    break BeforeRet;
  };

  return result_1174405297;

}

function newXmlNode_1191182368(kind_1191182369) {
  var result_1191182370 = null;

    result_1191182370 = {k: kind_1191182369, fText: [], fTag: [], s: [], fAttr: null, fClientData: 0};

  return result_1191182370;

}

function newElement_1191182432(tag_1191182433) {
    var Temporary1;
    var Temporary2;

  var result_1191182434 = null;

    result_1191182434 = newXmlNode_1191182368(2);
    var Temporary1 = result_1191182434;
    if (ConstSet437[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fTag\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    Temporary1.fTag = nimCopy(null, tag_1191182433, NTI33554449);
    var Temporary2 = result_1191182434;
    if (ConstSet438[Temporary2.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary2.k, NTI1191182340)); }
    Temporary2.s = nimCopy(null, [], NTI1191182393);

  return result_1191182434;

}

function add_1191182624(father_1191182625, son_1191182626) {
    var Temporary1;

    if (!((father_1191182625.k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,51,50,54,44,32,57,41,32,96,102,97,116,104,101,114,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(father_1191182625.k, NTI1191182340) || []));
    }
    
    var Temporary1 = father_1191182625;
    if (ConstSet439[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    Temporary1.s.push(son_1191182626);;

  
}

function addNode_1140850932(father_1140850933, son_1140850934) {
    if (!((son_1140850934 == null))) {
    add_1191182624(father_1140850933, son_1140850934);
    }
    

  
}

function newComment_1191182481(comment_1191182482) {
    var Temporary1;

  var result_1191182483 = null;

    result_1191182483 = newXmlNode_1191182368(5);
    var Temporary1 = result_1191182483;
    if (ConstSet440[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    Temporary1.fText = nimCopy(null, comment_1191182482, NTI33554449);

  return result_1191182483;

}

function rawData_1174405312(my_1174405313) {
  var result_1174405314 = [];

    result_1174405314 = my_1174405313["a"];

  return result_1174405314;

}

function newText_1191182471(text_1191182472) {
    var Temporary1;

  var result_1191182473 = null;

    result_1191182473 = newXmlNode_1191182368(0);
    var Temporary1 = result_1191182473;
    if (ConstSet441[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    Temporary1.fText = nimCopy(null, text_1191182472, NTI33554449);

  return result_1191182473;

}

function getLine_1174405321(my_1174405322) {
  var result_1174405323 = 0;

    result_1174405323 = my_1174405322.lineNumber;

  return result_1174405323;

}

function getColNumber_1224736931(L_1224736932, pos_1224736933) {
  var result_1224736934 = 0;

    result_1224736934 = absInt(subInt(pos_1224736933, L_1224736932.lineStart));

  return result_1224736934;

}

function getColumn_1174405318(my_1174405319) {
  var result_1174405320 = 0;

    result_1174405320 = getColNumber_1224736931(my_1174405319, my_1174405319.bufpos);

  return result_1174405320;

}

function errorMsg_1174405327(my_1174405328) {
  var result_1174405329 = [];

    if (!((my_1174405328.kind == 0))) {
    failedAssertImpl_268435541([112,97,114,115,101,120,109,108,46,110,105,109,40,51,50,57,44,32,57,41,32,96,109,121,46,107,105,110,100,32,61,61,32,120,109,108,69,114,114,111,114,96,32]);
    }
    
    result_1174405329 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1174405328.filename, NTI33554449), HEX24_385875976(getLine_1174405321(my_1174405328)), HEX24_385875976(getColumn_1174405318(my_1174405328)), nimCopy(null, errorMessages_1174405184[chckIndx(my_1174405328.err, 0, (errorMessages_1174405184).length - 1)], NTI33554449)]), NTI33554449);

  return result_1174405329;

}

function clientData_1191183157(n_1191183158) {
  var result_1191183159 = 0;

    result_1191183159 = n_1191183158.fClientData;

  return result_1191183159;

}

function clientDataHEX3D_1191183160(n_1191183161, data_1191183162) {
    n_1191183161.fClientData = data_1191183162;

  
}

function toHtmlTag_1140850831(s_1140850832) {
    var Temporary1;

  var result_1140850833 = 0;

    switch (toJSStr(s_1140850832)) {
    case "a":
      Temporary1 = 1;
      break;
    case "abbr":
      Temporary1 = 2;
      break;
    case "acronym":
      Temporary1 = 3;
      break;
    case "address":
      Temporary1 = 4;
      break;
    case "applet":
      Temporary1 = 5;
      break;
    case "area":
      Temporary1 = 6;
      break;
    case "article":
      Temporary1 = 7;
      break;
    case "aside":
      Temporary1 = 8;
      break;
    case "audio":
      Temporary1 = 9;
      break;
    case "b":
      Temporary1 = 10;
      break;
    case "base":
      Temporary1 = 11;
      break;
    case "basefont":
      Temporary1 = 14;
      break;
    case "bdi":
      Temporary1 = 12;
      break;
    case "bdo":
      Temporary1 = 13;
      break;
    case "big":
      Temporary1 = 15;
      break;
    case "blockquote":
      Temporary1 = 16;
      break;
    case "body":
      Temporary1 = 17;
      break;
    case "br":
      Temporary1 = 18;
      break;
    case "button":
      Temporary1 = 19;
      break;
    case "canvas":
      Temporary1 = 20;
      break;
    case "caption":
      Temporary1 = 21;
      break;
    case "center":
      Temporary1 = 22;
      break;
    case "cite":
      Temporary1 = 23;
      break;
    case "code":
      Temporary1 = 24;
      break;
    case "col":
      Temporary1 = 25;
      break;
    case "colgroup":
      Temporary1 = 26;
      break;
    case "command":
      Temporary1 = 27;
      break;
    case "datalist":
      Temporary1 = 28;
      break;
    case "dd":
      Temporary1 = 29;
      break;
    case "del":
      Temporary1 = 30;
      break;
    case "details":
      Temporary1 = 31;
      break;
    case "dfn":
      Temporary1 = 32;
      break;
    case "dialog":
      Temporary1 = 33;
      break;
    case "div":
      Temporary1 = 34;
      break;
    case "dir":
      Temporary1 = 35;
      break;
    case "dl":
      Temporary1 = 36;
      break;
    case "dt":
      Temporary1 = 37;
      break;
    case "em":
      Temporary1 = 38;
      break;
    case "embed":
      Temporary1 = 39;
      break;
    case "fieldset":
      Temporary1 = 40;
      break;
    case "figcaption":
      Temporary1 = 41;
      break;
    case "figure":
      Temporary1 = 42;
      break;
    case "font":
      Temporary1 = 43;
      break;
    case "footer":
      Temporary1 = 44;
      break;
    case "form":
      Temporary1 = 45;
      break;
    case "frame":
      Temporary1 = 46;
      break;
    case "frameset":
      Temporary1 = 47;
      break;
    case "h1":
      Temporary1 = 48;
      break;
    case "h2":
      Temporary1 = 49;
      break;
    case "h3":
      Temporary1 = 50;
      break;
    case "h4":
      Temporary1 = 51;
      break;
    case "h5":
      Temporary1 = 52;
      break;
    case "h6":
      Temporary1 = 53;
      break;
    case "head":
      Temporary1 = 54;
      break;
    case "header":
      Temporary1 = 55;
      break;
    case "hgroup":
      Temporary1 = 56;
      break;
    case "html":
      Temporary1 = 57;
      break;
    case "hr":
      Temporary1 = 58;
      break;
    case "i":
      Temporary1 = 59;
      break;
    case "iframe":
      Temporary1 = 60;
      break;
    case "img":
      Temporary1 = 61;
      break;
    case "input":
      Temporary1 = 62;
      break;
    case "ins":
      Temporary1 = 63;
      break;
    case "isindex":
      Temporary1 = 64;
      break;
    case "kbd":
      Temporary1 = 65;
      break;
    case "keygen":
      Temporary1 = 66;
      break;
    case "label":
      Temporary1 = 67;
      break;
    case "legend":
      Temporary1 = 68;
      break;
    case "li":
      Temporary1 = 69;
      break;
    case "link":
      Temporary1 = 70;
      break;
    case "map":
      Temporary1 = 71;
      break;
    case "mark":
      Temporary1 = 72;
      break;
    case "menu":
      Temporary1 = 73;
      break;
    case "meta":
      Temporary1 = 74;
      break;
    case "meter":
      Temporary1 = 75;
      break;
    case "nav":
      Temporary1 = 76;
      break;
    case "nobr":
      Temporary1 = 77;
      break;
    case "noframes":
      Temporary1 = 78;
      break;
    case "noscript":
      Temporary1 = 79;
      break;
    case "object":
      Temporary1 = 80;
      break;
    case "ol":
      Temporary1 = 81;
      break;
    case "optgroup":
      Temporary1 = 82;
      break;
    case "option":
      Temporary1 = 83;
      break;
    case "output":
      Temporary1 = 84;
      break;
    case "p":
      Temporary1 = 85;
      break;
    case "param":
      Temporary1 = 86;
      break;
    case "pre":
      Temporary1 = 87;
      break;
    case "progress":
      Temporary1 = 88;
      break;
    case "q":
      Temporary1 = 89;
      break;
    case "rp":
      Temporary1 = 90;
      break;
    case "rt":
      Temporary1 = 91;
      break;
    case "ruby":
      Temporary1 = 92;
      break;
    case "s":
      Temporary1 = 93;
      break;
    case "samp":
      Temporary1 = 94;
      break;
    case "script":
      Temporary1 = 95;
      break;
    case "section":
      Temporary1 = 96;
      break;
    case "select":
      Temporary1 = 97;
      break;
    case "small":
      Temporary1 = 98;
      break;
    case "source":
      Temporary1 = 99;
      break;
    case "span":
      Temporary1 = 100;
      break;
    case "strike":
      Temporary1 = 101;
      break;
    case "strong":
      Temporary1 = 102;
      break;
    case "style":
      Temporary1 = 103;
      break;
    case "sub":
      Temporary1 = 104;
      break;
    case "summary":
      Temporary1 = 105;
      break;
    case "sup":
      Temporary1 = 106;
      break;
    case "table":
      Temporary1 = 107;
      break;
    case "tbody":
      Temporary1 = 108;
      break;
    case "td":
      Temporary1 = 109;
      break;
    case "textarea":
      Temporary1 = 110;
      break;
    case "tfoot":
      Temporary1 = 111;
      break;
    case "th":
      Temporary1 = 112;
      break;
    case "thead":
      Temporary1 = 113;
      break;
    case "time":
      Temporary1 = 114;
      break;
    case "title":
      Temporary1 = 115;
      break;
    case "tr":
      Temporary1 = 116;
      break;
    case "track":
      Temporary1 = 117;
      break;
    case "tt":
      Temporary1 = 118;
      break;
    case "u":
      Temporary1 = 119;
      break;
    case "ul":
      Temporary1 = 120;
      break;
    case "var":
      Temporary1 = 121;
      break;
    case "video":
      Temporary1 = 122;
      break;
    case "wbr":
      Temporary1 = 123;
      break;
    default: 
      Temporary1 = 0;
      break;
    }
    result_1140850833 = Temporary1;

  return result_1140850833;

}

function htmlTag_1140850850(n_1140850851) {
  var result_1140850852 = 0;

    if ((clientData_1191183157(n_1140850851) == 0)) {
    clientDataHEX3D_1191183160(n_1140850851, toHtmlTag_1140850831(tag_1191182542(n_1140850851)));
    }
    
    result_1140850852 = chckRange(clientData_1191183157(n_1140850851), 0, 123);

  return result_1140850852;

}

function allLower_1140850827(s_1140850828) {
  var result_1140850829 = false;

  BeforeRet: {
    Label1: {
      var c_1140850830 = 0;
      var i_587204044 = 0;
      var L_587204045 = (s_1140850828).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587204044 < L_587204045)) break Label3;
            c_1140850830 = s_1140850828[chckIndx(i_587204044, 0, (s_1140850828).length - 1)];
            if (((c_1140850830 < 97) || (122 < c_1140850830))) {
            result_1140850829 = false;
            break BeforeRet;
            }
            
            i_587204044 = addInt(i_587204044, 1);
            if (!(((s_1140850828).length == L_587204045))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1140850829 = true;
    break BeforeRet;
  };

  return result_1140850829;

}

function htmlTag_1140850857(s_1140850858) {
    var Temporary1;

  var result_1140850859 = 0;

    if (allLower_1140850827(s_1140850858)) {
    Temporary1 = s_1140850858;
    }
    else {
    Temporary1 = nsuToLowerAsciiStr(s_1140850858);
    }
    
    var s_1140850860 = nimCopy(null, Temporary1, NTI33554449);
    result_1140850859 = toHtmlTag_1140850831(s_1140850860);

  return result_1140850859;

}

function errorMsg_1174405360(my_1174405361, msg_1174405362) {
  var result_1174405363 = [];

    result_1174405363 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1174405361.filename, NTI33554449), HEX24_385875976(getLine_1174405321(my_1174405361)), HEX24_385875976(getColumn_1174405318(my_1174405361)), nimCopy(null, msg_1174405362, NTI33554449)]), NTI33554449);

  return result_1174405363;

}

function expected_1140850942(x_1140850943, n_1140850944) {
  var result_1140850945 = [];

    result_1140850945 = nimCopy(null, errorMsg_1174405360(x_1140850943, ([60,47] || []).concat(tag_1191182542(n_1140850944) || [],[62,32,101,120,112,101,99,116,101,100] || [])), NTI33554449);

  return result_1140850945;

}

function untilElementEnd_1140850950(x_1140850951, result_1140850952, errors_1140850953, errors_1140850953_Idx) {
  BeforeRet: {
    if ((ConstSet442[htmlTag_1140850850(result_1140850952)] != undefined)) {
    if ((!((kind_1174405295(x_1140850951) == 7)) || !((nsuCmpIgnoreCase(rawData_1174405312(x_1140850951), tag_1191182542(result_1140850952)) == 0)))) {
    break BeforeRet;
    }
    
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (kind_1174405295(x_1140850951)) {
          case 6:
          case 8:
            switch (htmlTag_1140850850(result_1140850952)) {
            case 85:
            case 62:
            case 83:
              if ((ConstSet443[htmlTag_1140850857(rawData_1174405312(x_1140850951))] != undefined)) {
              errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
              break Label1;
              }
              
              break;
            case 29:
            case 37:
            case 69:
              if ((ConstSet444[htmlTag_1140850857(rawData_1174405312(x_1140850951))] != undefined)) {
              errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
              break Label1;
              }
              
              break;
            case 109:
            case 112:
              if ((ConstSet445[htmlTag_1140850857(rawData_1174405312(x_1140850951))] != undefined)) {
              errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
              break Label1;
              }
              
              break;
            case 116:
              if ((htmlTag_1140850857(rawData_1174405312(x_1140850951)) == 116)) {
              errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
              break Label1;
              }
              
              break;
            case 82:
              if ((ConstSet446[htmlTag_1140850857(rawData_1174405312(x_1140850951))] != undefined)) {
              errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
              break Label1;
              }
              
              break;
            default: 
              break;
            }
            addNode_1140850932(result_1140850952, parse_1140850939(x_1140850951, errors_1140850953, errors_1140850953_Idx));
            break;
          case 7:
            if (!((nsuCmpIgnoreCase(rawData_1174405312(x_1140850951), tag_1191182542(result_1140850952)) == 0))) {
            errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
            Label3: {
                Label4: while (true) {
                if (!(ConstSet447[kind_1174405295(x_1140850951)] != undefined)) break Label4;
                  if (((kind_1174405295(x_1140850951) == 7) && (nsuCmpIgnoreCase(rawData_1174405312(x_1140850951), tag_1191182542(result_1140850952)) == 0))) {
                  break Label3;
                  }
                  
                  next_1174405751(x_1140850951);
                }
            };
            }
            
            next_1174405751(x_1140850951);
            break Label1;
            break;
          case 1:
            errors_1140850953[errors_1140850953_Idx].push(expected_1140850942(x_1140850951, result_1140850952));;
            break Label1;
            break;
          default: 
            addNode_1140850932(result_1140850952, parse_1140850939(x_1140850951, errors_1140850953, errors_1140850953_Idx));
            break;
          }
        }
    };
  };

  
}

function attrsHEX3D_1191183104(n_1191183105, attr_1191183106) {
    var Temporary1;

    if (!((n_1191183105.k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,54,52,55,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191183105.k, NTI1191182340) || []));
    }
    
    var Temporary1 = n_1191183105;
    if (ConstSet448[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fAttr\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    Temporary1.fAttr = attr_1191183106;

  
}

function newSeq_1207959886(len_1207959888) {
  var result_1207959889 = [];

    result_1207959889 = new Array(len_1207959888); for (var i = 0 ; i < len_1207959888 ; ++i) { result_1207959889[i] = {Field0: [], Field1: [], Field2: false}; }
  return result_1207959889;

}

function nstnewStringTable(mode_1207959880) {
  var result_1207959881 = null;

    result_1207959881 = {mode: mode_1207959880, counter: 0, data: newSeq_1207959886(64), m_type: NTI1207959558};

  return result_1207959881;

}

function HEX21HEX26_1275068419(h_1275068420, val_1275068421) {
  var result_1275068422 = 0;

    var h_1275068423 = Number(BigInt.asUintN(32, BigInt(h_1275068420)));
    var val_1275068424 = Number(BigInt.asUintN(32, BigInt(val_1275068421)));
    var res_1275068425 = ((h_1275068423 + val_1275068424) >>> 0);
    res_1275068425 = ((res_1275068425 + ((res_1275068425 << 10) >>> 0)) >>> 0);
    res_1275068425 = ((res_1275068425 ^ (res_1275068425 >>> 6)) >>> 0);
    result_1275068422 = Number(BigInt.asIntN(32, BigInt(res_1275068425)));

  return result_1275068422;

}

function HEX21HEX24_1275068434(h_1275068435) {
  var result_1275068436 = 0;

    var h_1275068437 = Number(BigInt.asUintN(32, BigInt(h_1275068435)));
    var res_1275068442 = ((h_1275068437 + ((h_1275068437 << 3) >>> 0)) >>> 0);
    res_1275068442 = ((res_1275068442 ^ (res_1275068442 >>> 11)) >>> 0);
    res_1275068442 = ((res_1275068442 + ((res_1275068442 << 15) >>> 0)) >>> 0);
    result_1275068436 = Number(BigInt.asIntN(32, BigInt(res_1275068442)));

  return result_1275068436;

}

function hashIgnoreCase_1275068942(x_1275068943) {
  var result_1275068944 = 0;

    var h_1275068945 = 0;
    Label1: {
      var i_1275068950 = 0;
      var colontmp__587204053 = 0;
      colontmp__587204053 = subInt((x_1275068943).length, 1);
      var res_587204054 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_587204054 <= colontmp__587204053)) break Label3;
            i_1275068950 = res_587204054;
            var c_1275068951 = x_1275068943[chckIndx(i_1275068950, 0, (x_1275068943).length - 1)];
            if ((ConstSet449[c_1275068951] != undefined)) {
            c_1275068951 = chckRange(addInt(c_1275068951, 32), 0, 255);
            }
            
            h_1275068945 = HEX21HEX26_1275068419(h_1275068945, c_1275068951);
            res_587204054 = addInt(res_587204054, 1);
          }
      };
    };
    result_1275068944 = HEX21HEX24_1275068434(h_1275068945);

  return result_1275068944;

}

function hashIgnoreStyle_1275068875(x_1275068876) {
  var result_1275068877 = 0;

    var h_1275068878 = 0;
    var i_1275068879 = 0;
    var xLen_1275068880 = (x_1275068876).length;
    Label1: {
        Label2: while (true) {
        if (!(i_1275068879 < xLen_1275068880)) break Label2;
          var c_1275068881 = x_1275068876[chckIndx(i_1275068879, 0, (x_1275068876).length - 1)];
          if ((c_1275068881 == 95)) {
          i_1275068879 = addInt(i_1275068879, 1);
          }
          else {
            if ((ConstSet450[c_1275068881] != undefined)) {
            c_1275068881 = chckRange(addInt(c_1275068881, 32), 0, 255);
            }
            
            h_1275068878 = HEX21HEX26_1275068419(h_1275068878, c_1275068881);
            i_1275068879 = addInt(i_1275068879, 1);
          }
          
        }
    };
    result_1275068877 = HEX21HEX24_1275068434(h_1275068878);

  return result_1275068877;

}

function myhash_1207959689(t_1207959690, key_1207959691) {
  var result_1207959692 = 0;

    switch (t_1207959690.mode) {
    case 0:
      result_1207959692 = hash_1275068863(key_1207959691);
      break;
    case 1:
      result_1207959692 = hashIgnoreCase_1275068942(key_1207959691);
      break;
    case 2:
      result_1207959692 = hashIgnoreStyle_1275068875(key_1207959691);
      break;
    }

  return result_1207959692;

}

function cmpStrings(a_33557033, b_33557034) {
        if (a_33557033 == b_33557034) return 0;
    if (!a_33557033) return -1;
    if (!b_33557034) return 1;
    for (var i = 0; i < a_33557033.length && i < b_33557034.length; i++) {
      var result = a_33557033[i] - b_33557034[i];
      if (result != 0) return result;
    }
    return a_33557033.length - b_33557034.length;
  

  
}

function cmp_33555881(x_33555882, y_33555883) {
  var result_33557039 = 0;

    result_33557039 = cmpStrings(x_33555882, y_33555883);

  return result_33557039;

}

function myCmp_1207959693(t_1207959694, a_1207959695, b_1207959696) {
  var result_1207959697 = false;

    switch (t_1207959694.mode) {
    case 0:
      result_1207959697 = (cmp_33555881(a_1207959695, b_1207959696) == 0);
      break;
    case 1:
      result_1207959697 = (nsuCmpIgnoreCase(a_1207959695, b_1207959696) == 0);
      break;
    case 2:
      result_1207959697 = (nsuCmpIgnoreStyle(a_1207959695, b_1207959696) == 0);
      break;
    }

  return result_1207959697;

}

function nextTry_1207959707(h_1207959708, maxHash_1207959709) {
  var result_1207959710 = 0;

    result_1207959710 = (addInt(h_1207959708, 1) & maxHash_1207959709);

  return result_1207959710;

}

function rawGet_1207959711(t_1207959712, key_1207959713) {
  var result_1207959714 = 0;

  BeforeRet: {
    var h_1207959718 = (myhash_1207959689(t_1207959712, key_1207959713) & (t_1207959712.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!t_1207959712.data[chckIndx(h_1207959718, 0, (t_1207959712.data).length - 1)].Field2) break Label2;
          if (myCmp_1207959693(t_1207959712, t_1207959712.data[chckIndx(h_1207959718, 0, (t_1207959712.data).length - 1)].Field0, key_1207959713)) {
          result_1207959714 = h_1207959718;
          break BeforeRet;
          }
          
          h_1207959718 = nextTry_1207959707(h_1207959718, (t_1207959712.data).length - 1);
        }
    };
    result_1207959714 = (-1);
  };

  return result_1207959714;

}

function mustRehash_1207959698(length_1207959699, counter_1207959700) {
  var result_1207959701 = false;

    if (!((counter_1207959700 < length_1207959699))) {
    failedAssertImpl_268435541([115,116,114,116,97,98,115,46,110,105,109,40,49,51,48,44,32,57,41,32,96,108,101,110,103,116,104,32,62,32,99,111,117,110,116,101,114,96,32]);
    }
    
    result_1207959701 = ((mulInt(length_1207959699, 2) < mulInt(counter_1207959700, 3)) || (subInt(length_1207959699, counter_1207959700) < 4));

  return result_1207959701;

}

function rawInsert_1207959802(t_1207959803, data_1207959804, data_1207959804_Idx, key_1207959805, val_1207959806) {
    var h_1207959810 = (myhash_1207959689(t_1207959803, key_1207959805) & (data_1207959804[data_1207959804_Idx]).length - 1);
    Label1: {
        Label2: while (true) {
        if (!data_1207959804[data_1207959804_Idx][chckIndx(h_1207959810, 0, (data_1207959804[data_1207959804_Idx]).length - 1)].Field2) break Label2;
          h_1207959810 = nextTry_1207959707(h_1207959810, (data_1207959804[data_1207959804_Idx]).length - 1);
        }
    };
    data_1207959804[data_1207959804_Idx][chckIndx(h_1207959810, 0, (data_1207959804[data_1207959804_Idx]).length - 1)].Field0 = nimCopy(null, key_1207959805, NTI33554449);
    data_1207959804[data_1207959804_Idx][chckIndx(h_1207959810, 0, (data_1207959804[data_1207959804_Idx]).length - 1)].Field1 = nimCopy(null, val_1207959806, NTI33554449);
    data_1207959804[data_1207959804_Idx][chckIndx(h_1207959810, 0, (data_1207959804[data_1207959804_Idx]).length - 1)].Field2 = true;

  
}

function enlarge_1207959814(t_1207959815) {
            var Temporary4;
            var Temporary5;

    var n_1207959816 = [[]];
    n_1207959816[0] = new Array(chckRange(mulInt((t_1207959815.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1207959815.data).length, 2), 0, 2147483647) ; ++i) { n_1207959816[0][i] = {Field0: [], Field1: [], Field2: false}; }    Label1: {
      var i_1207959833 = 0;
      var colontmp__587204058 = 0;
      colontmp__587204058 = (t_1207959815.data).length - 1;
      var res_587204059 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_587204059 <= colontmp__587204058)) break Label3;
            i_1207959833 = res_587204059;
            if (t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field2) {
            Temporary4 = t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field0;
            t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field0 = genericReset(t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field0, NTI33554449);
            Temporary5 = t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field1;
            t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field1 = genericReset(t_1207959815.data[chckIndx(i_1207959833, 0, (t_1207959815.data).length - 1)].Field1, NTI33554449);
            rawInsert_1207959802(t_1207959815, n_1207959816, 0, Temporary4, Temporary5);
            }
            
            res_587204059 = addInt(res_587204059, 1);
          }
      };
    };
    var Temporary6 = t_1207959815.data; t_1207959815.data = n_1207959816[0]; n_1207959816[0] = Temporary6;
  
}

function nstPut(t_1207959867, key_1207959868, val_1207959869) {
    var index_1207959870 = rawGet_1207959711(t_1207959867, key_1207959868);
    if ((0 <= index_1207959870)) {
    t_1207959867.data[chckIndx(index_1207959870, 0, (t_1207959867.data).length - 1)].Field1 = nimCopy(null, val_1207959869, NTI33554449);
    }
    else {
      if (mustRehash_1207959698((t_1207959867.data).length, t_1207959867.counter)) {
      enlarge_1207959814(t_1207959867);
      }
      
      rawInsert_1207959802(t_1207959867, t_1207959867, "data", key_1207959868, val_1207959869);
      t_1207959867.counter = addInt(t_1207959867.counter, 1);
    }
    

  
}

function nstnewStringTableWithTableConstr(keyValuePairs_1207959944, mode_1207959945) {
  var result_1207959946 = null;

    result_1207959946 = nstnewStringTable(mode_1207959945);
    Label1: {
      var key_1207959960 = [];
      var val_1207959961 = [];
      var i_587204049 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587204049 < (keyValuePairs_1207959944).length)) break Label3;
            key_1207959960 = keyValuePairs_1207959944[chckIndx(i_587204049, 0, (keyValuePairs_1207959944).length - 1)]["Field0"];
            val_1207959961 = keyValuePairs_1207959944[chckIndx(i_587204049, 0, (keyValuePairs_1207959944).length - 1)]["Field1"];
            nstPut(result_1207959946, key_1207959960, val_1207959961);
            i_587204049 = addInt(i_587204049, 1);
          }
      };
    };

  return result_1207959946;

}

function attrs_1191183089(n_1191183090) {
    var Temporary1;

  var result_1191183091 = null;

    if (!((n_1191183090.k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,54,51,48,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191183090.k, NTI1191182340) || []));
    }
    
    var Temporary1 = n_1191183090;
    if (ConstSet451[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fAttr\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    result_1191183091 = Temporary1.fAttr;

  return result_1191183091;

}

function rawData2_1174405315(my_1174405316) {
  var result_1174405317 = [];

    result_1174405317 = my_1174405316["b"];

  return result_1174405317;

}

function newCData_1191182484(cdata_1191182485) {
    var Temporary1;

  var result_1191182486 = null;

    result_1191182486 = newXmlNode_1191182368(3);
    var Temporary1 = result_1191182486;
    if (ConstSet452[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    Temporary1.fText = nimCopy(null, cdata_1191182485, NTI33554449);

  return result_1191182486;

}

function integerOutOfRangeError_788529477() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_788529479(s_788529480, b_788529481, b_788529481_Idx) {
      var Temporary1;
          var Temporary4;

  var result_788529482 = 0;

    var sign_788529483 = (-1n);
    var i_788529484 = 0;
    if ((i_788529484 < (s_788529480).length)) {
    if ((s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] == 43)) {
    i_788529484 += 1;
    }
    else {
    if ((s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] == 45)) {
    i_788529484 += 1;
    sign_788529483 = 1n;
    }
    }
    }
    
      if (!(i_788529484 < (s_788529480).length)) Temporary1 = false; else {        Temporary1 = (ConstSet453[s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)]] != undefined);      }    if (Temporary1) {
    b_788529481[b_788529481_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_788529484 < (s_788529480).length)) Temporary4 = false; else {            Temporary4 = (ConstSet454[s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_788529518 = (s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_788529518)) / 10n <= b_788529481[b_788529481_Idx])) {
          b_788529481[b_788529481_Idx] = ((b_788529481[b_788529481_Idx] * 10n) - BigInt(c_788529518));
          }
          else {
          integerOutOfRangeError_788529477();
          }
          
          i_788529484 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_788529484 < (s_788529480).length) && (s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] == 95))) break Label6;
                i_788529484 += 1;
              }
          };
        }
    };
    if (((sign_788529483 == (-1n)) && (b_788529481[b_788529481_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_788529477();
    }
    else {
      b_788529481[b_788529481_Idx] = (b_788529481[b_788529481_Idx] * sign_788529483);
      result_788529482 = i_788529484;
    }
    
    }
    

  return result_788529482;

}

function npuParseBiggestInt(s_788529541, number_788529542, number_788529542_Idx) {
  var result_788529543 = 0;

    var res_788529544 = [0n];
    result_788529543 = rawParseInt_788529479(s_788529541, res_788529544, 0);
    if (!((result_788529543 == 0))) {
    number_788529542[number_788529542_Idx] = res_788529544[0];
    }
    

  return result_788529543;

}

function npuParseInt(s_788529546, number_788529547, number_788529547_Idx) {
  var result_788529548 = 0;

    var res_788529549 = [0n];
    result_788529548 = npuParseBiggestInt(s_788529546, res_788529549, 0);
    if (((res_788529549[0] < (-2147483648n)) || (2147483647n < res_788529549[0]))) {
    integerOutOfRangeError_788529477();
    }
    
    if (!((result_788529548 == 0))) {
    number_788529547[number_788529547_Idx] = chckRange(Number(res_788529549[0]), (-2147483648), 2147483647);
    }
    

  return result_788529548;

}

function parseInt_788530059(s_788530060, number_788530061, number_788530061_Idx, start_788530062) {
  var result_788530063 = 0;

    result_788530063 = npuParseInt((s_788530060.slice(start_788530062, (s_788530060).length - 1 + 1)), number_788530061, number_788530061_Idx);

  return result_788530063;

}

function nsuParseInt(s_754975577) {
  var result_754975578 = [0];

    result_754975578[0] = 0;
    var L_754975579 = parseInt_788530059(s_754975577, result_754975578, 0, 0);
    if ((!((L_754975579 == (s_754975577).length)) || (L_754975579 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_754975577 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_754975578[0];

}

function parseHex_754975715(s_754975717, number_754975718, number_754975718_Idx, maxLen_754975719) {
    var Temporary1;

  var result_754975720 = 0;

    var i_754975721 = 0;
    var output_754975722 = 0;
    var foundDigit_754975723 = false;
    if ((maxLen_754975719 == 0)) {
    Temporary1 = (s_754975717).length;
    }
    else {
    Temporary1 = addInt(i_754975721, maxLen_754975719);
    }
    
    var last_754975730 = nimMin((s_754975717).length, Temporary1);
    if ((((addInt(i_754975721, 1) < last_754975730) && (s_754975717[chckIndx(i_754975721, 0, (s_754975717).length - 1)] == 48)) && (ConstSet455[s_754975717[chckIndx(addInt(i_754975721, 1), 0, (s_754975717).length - 1)]] != undefined))) {
    i_754975721 = addInt(i_754975721, 2);
    }
    else {
    if (((i_754975721 < last_754975730) && (s_754975717[chckIndx(i_754975721, 0, (s_754975717).length - 1)] == 35))) {
    i_754975721 = addInt(i_754975721, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_754975721 < last_754975730)) break Label3;
          switch (s_754975717[chckIndx(i_754975721, 0, (s_754975717).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_754975722 = (((output_754975722 << 4) << 0 >> 0) | subInt(s_754975717[chckIndx(i_754975721, 0, (s_754975717).length - 1)], 48));
            foundDigit_754975723 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_754975722 = (((output_754975722 << 4) << 0 >> 0) | addInt(subInt(s_754975717[chckIndx(i_754975721, 0, (s_754975717).length - 1)], 97), 10));
            foundDigit_754975723 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_754975722 = (((output_754975722 << 4) << 0 >> 0) | addInt(subInt(s_754975717[chckIndx(i_754975721, 0, (s_754975717).length - 1)], 65), 10));
            foundDigit_754975723 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_754975721 = addInt(i_754975721, 1);
        }
    };
    if (foundDigit_754975723) {
    number_754975718[number_754975718_Idx] = output_754975722;
    result_754975720 = i_754975721;
    }
    

  return result_754975720;

}

function parseHex_754975708(s_754975710, number_754975711, number_754975711_Idx, start_754975712, maxLen_754975713) {
  var result_754975714 = 0;

    result_754975714 = parseHex_754975715((s_754975710.slice(start_754975712, (s_754975710).length - 1 + 1)), number_754975711, number_754975711_Idx, maxLen_754975713);

  return result_754975714;

}

function nsuParseHexInt(s_754975706) {
  var result_754975707 = [0];

    result_754975707[0] = 0;
    var L_754975780 = parseHex_754975708(s_754975706, result_754975707, 0, 0, 0);
    if ((!((L_754975780 == (s_754975706).length)) || (L_754975780 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_754975706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_754975707[0];

}

function entityToRune_1140850871(entity_1140850872) {
    var Temporary3;

  var result_1140850873 = 0;

  BeforeRet: {
    if (((entity_1140850872).length < 2)) {
    break BeforeRet;
    }
    
    if ((entity_1140850872[chckIndx(0, 0, (entity_1140850872).length - 1)] == 35)) {
    var runeValue_1140850874 = 0;
    switch (entity_1140850872[chckIndx(1, 0, (entity_1140850872).length - 1)]) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
++excHandler;
      try {
      runeValue_1140850874 = nsuParseInt(HEX5BHEX5D_754976027(entity_1140850872, HEX2EHEX2E_973078632(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 120:
    case 88:
++excHandler;
      try {
      runeValue_1140850874 = nsuParseHexInt(HEX5BHEX5D_754976027(entity_1140850872, HEX2EHEX2E_973078632(2, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    default: 
      break;
    }
    if (!(contains_1140850918(HEX2EHEX2E_1056964656(0, 1114111), runeValue_1140850874))) {
    runeValue_1140850874 = 0;
    }
    
    result_1140850873 = ((runeValue_1140850874) | 0);
    break BeforeRet;
    }
    
    switch (toJSStr(entity_1140850872)) {
    case "Tab":
      Temporary3 = 9;
      break;
    case "NewLine":
      Temporary3 = 10;
      break;
    case "excl":
      Temporary3 = 33;
      break;
    case "quot":
    case "QUOT":
      Temporary3 = 34;
      break;
    case "num":
      Temporary3 = 35;
      break;
    case "dollar":
      Temporary3 = 36;
      break;
    case "percnt":
      Temporary3 = 37;
      break;
    case "amp":
    case "AMP":
      Temporary3 = 38;
      break;
    case "apos":
      Temporary3 = 39;
      break;
    case "lpar":
      Temporary3 = 40;
      break;
    case "rpar":
      Temporary3 = 41;
      break;
    case "ast":
    case "midast":
      Temporary3 = 42;
      break;
    case "plus":
      Temporary3 = 43;
      break;
    case "comma":
      Temporary3 = 44;
      break;
    case "period":
      Temporary3 = 46;
      break;
    case "sol":
      Temporary3 = 47;
      break;
    case "colon":
      Temporary3 = 58;
      break;
    case "semi":
      Temporary3 = 59;
      break;
    case "lt":
    case "LT":
      Temporary3 = 60;
      break;
    case "equals":
      Temporary3 = 61;
      break;
    case "gt":
    case "GT":
      Temporary3 = 62;
      break;
    case "quest":
      Temporary3 = 63;
      break;
    case "commat":
      Temporary3 = 64;
      break;
    case "lsqb":
    case "lbrack":
      Temporary3 = 91;
      break;
    case "bsol":
      Temporary3 = 92;
      break;
    case "rsqb":
    case "rbrack":
      Temporary3 = 93;
      break;
    case "Hat":
      Temporary3 = 94;
      break;
    case "lowbar":
      Temporary3 = 95;
      break;
    case "grave":
    case "DiacriticalGrave":
      Temporary3 = 96;
      break;
    case "lcub":
    case "lbrace":
      Temporary3 = 123;
      break;
    case "verbar":
    case "vert":
    case "VerticalLine":
      Temporary3 = 124;
      break;
    case "rcub":
    case "rbrace":
      Temporary3 = 125;
      break;
    case "nbsp":
    case "NonBreakingSpace":
      Temporary3 = 160;
      break;
    case "iexcl":
      Temporary3 = 161;
      break;
    case "cent":
      Temporary3 = 162;
      break;
    case "pound":
      Temporary3 = 163;
      break;
    case "curren":
      Temporary3 = 164;
      break;
    case "yen":
      Temporary3 = 165;
      break;
    case "brvbar":
      Temporary3 = 166;
      break;
    case "sect":
      Temporary3 = 167;
      break;
    case "Dot":
    case "die":
    case "DoubleDot":
    case "uml":
      Temporary3 = 168;
      break;
    case "copy":
    case "COPY":
      Temporary3 = 169;
      break;
    case "ordf":
      Temporary3 = 170;
      break;
    case "laquo":
      Temporary3 = 171;
      break;
    case "not":
      Temporary3 = 172;
      break;
    case "shy":
      Temporary3 = 173;
      break;
    case "reg":
    case "circledR":
    case "REG":
      Temporary3 = 174;
      break;
    case "macr":
    case "OverBar":
    case "strns":
      Temporary3 = 175;
      break;
    case "deg":
      Temporary3 = 176;
      break;
    case "plusmn":
    case "pm":
    case "PlusMinus":
      Temporary3 = 177;
      break;
    case "sup2":
      Temporary3 = 178;
      break;
    case "sup3":
      Temporary3 = 179;
      break;
    case "acute":
    case "DiacriticalAcute":
      Temporary3 = 180;
      break;
    case "micro":
      Temporary3 = 181;
      break;
    case "para":
      Temporary3 = 182;
      break;
    case "middot":
    case "centerdot":
    case "CenterDot":
      Temporary3 = 183;
      break;
    case "cedil":
    case "Cedilla":
      Temporary3 = 184;
      break;
    case "sup1":
      Temporary3 = 185;
      break;
    case "ordm":
      Temporary3 = 186;
      break;
    case "raquo":
      Temporary3 = 187;
      break;
    case "frac14":
      Temporary3 = 188;
      break;
    case "frac12":
    case "half":
      Temporary3 = 189;
      break;
    case "frac34":
      Temporary3 = 190;
      break;
    case "iquest":
      Temporary3 = 191;
      break;
    case "Agrave":
      Temporary3 = 192;
      break;
    case "Aacute":
      Temporary3 = 193;
      break;
    case "Acirc":
      Temporary3 = 194;
      break;
    case "Atilde":
      Temporary3 = 195;
      break;
    case "Auml":
      Temporary3 = 196;
      break;
    case "Aring":
      Temporary3 = 197;
      break;
    case "AElig":
      Temporary3 = 198;
      break;
    case "Ccedil":
      Temporary3 = 199;
      break;
    case "Egrave":
      Temporary3 = 200;
      break;
    case "Eacute":
      Temporary3 = 201;
      break;
    case "Ecirc":
      Temporary3 = 202;
      break;
    case "Euml":
      Temporary3 = 203;
      break;
    case "Igrave":
      Temporary3 = 204;
      break;
    case "Iacute":
      Temporary3 = 205;
      break;
    case "Icirc":
      Temporary3 = 206;
      break;
    case "Iuml":
      Temporary3 = 207;
      break;
    case "ETH":
      Temporary3 = 208;
      break;
    case "Ntilde":
      Temporary3 = 209;
      break;
    case "Ograve":
      Temporary3 = 210;
      break;
    case "Oacute":
      Temporary3 = 211;
      break;
    case "Ocirc":
      Temporary3 = 212;
      break;
    case "Otilde":
      Temporary3 = 213;
      break;
    case "Ouml":
      Temporary3 = 214;
      break;
    case "times":
      Temporary3 = 215;
      break;
    case "Oslash":
      Temporary3 = 216;
      break;
    case "Ugrave":
      Temporary3 = 217;
      break;
    case "Uacute":
      Temporary3 = 218;
      break;
    case "Ucirc":
      Temporary3 = 219;
      break;
    case "Uuml":
      Temporary3 = 220;
      break;
    case "Yacute":
      Temporary3 = 221;
      break;
    case "THORN":
      Temporary3 = 222;
      break;
    case "szlig":
      Temporary3 = 223;
      break;
    case "agrave":
      Temporary3 = 224;
      break;
    case "aacute":
      Temporary3 = 225;
      break;
    case "acirc":
      Temporary3 = 226;
      break;
    case "atilde":
      Temporary3 = 227;
      break;
    case "auml":
      Temporary3 = 228;
      break;
    case "aring":
      Temporary3 = 229;
      break;
    case "aelig":
      Temporary3 = 230;
      break;
    case "ccedil":
      Temporary3 = 231;
      break;
    case "egrave":
      Temporary3 = 232;
      break;
    case "eacute":
      Temporary3 = 233;
      break;
    case "ecirc":
      Temporary3 = 234;
      break;
    case "euml":
      Temporary3 = 235;
      break;
    case "igrave":
      Temporary3 = 236;
      break;
    case "iacute":
      Temporary3 = 237;
      break;
    case "icirc":
      Temporary3 = 238;
      break;
    case "iuml":
      Temporary3 = 239;
      break;
    case "eth":
      Temporary3 = 240;
      break;
    case "ntilde":
      Temporary3 = 241;
      break;
    case "ograve":
      Temporary3 = 242;
      break;
    case "oacute":
      Temporary3 = 243;
      break;
    case "ocirc":
      Temporary3 = 244;
      break;
    case "otilde":
      Temporary3 = 245;
      break;
    case "ouml":
      Temporary3 = 246;
      break;
    case "divide":
    case "div":
      Temporary3 = 247;
      break;
    case "oslash":
      Temporary3 = 248;
      break;
    case "ugrave":
      Temporary3 = 249;
      break;
    case "uacute":
      Temporary3 = 250;
      break;
    case "ucirc":
      Temporary3 = 251;
      break;
    case "uuml":
      Temporary3 = 252;
      break;
    case "yacute":
      Temporary3 = 253;
      break;
    case "thorn":
      Temporary3 = 254;
      break;
    case "yuml":
      Temporary3 = 255;
      break;
    case "Amacr":
      Temporary3 = 256;
      break;
    case "amacr":
      Temporary3 = 257;
      break;
    case "Abreve":
      Temporary3 = 258;
      break;
    case "abreve":
      Temporary3 = 259;
      break;
    case "Aogon":
      Temporary3 = 260;
      break;
    case "aogon":
      Temporary3 = 261;
      break;
    case "Cacute":
      Temporary3 = 262;
      break;
    case "cacute":
      Temporary3 = 263;
      break;
    case "Ccirc":
      Temporary3 = 264;
      break;
    case "ccirc":
      Temporary3 = 265;
      break;
    case "Cdot":
      Temporary3 = 266;
      break;
    case "cdot":
      Temporary3 = 267;
      break;
    case "Ccaron":
      Temporary3 = 268;
      break;
    case "ccaron":
      Temporary3 = 269;
      break;
    case "Dcaron":
      Temporary3 = 270;
      break;
    case "dcaron":
      Temporary3 = 271;
      break;
    case "Dstrok":
      Temporary3 = 272;
      break;
    case "dstrok":
      Temporary3 = 273;
      break;
    case "Emacr":
      Temporary3 = 274;
      break;
    case "emacr":
      Temporary3 = 275;
      break;
    case "Edot":
      Temporary3 = 278;
      break;
    case "edot":
      Temporary3 = 279;
      break;
    case "Eogon":
      Temporary3 = 280;
      break;
    case "eogon":
      Temporary3 = 281;
      break;
    case "Ecaron":
      Temporary3 = 282;
      break;
    case "ecaron":
      Temporary3 = 283;
      break;
    case "Gcirc":
      Temporary3 = 284;
      break;
    case "gcirc":
      Temporary3 = 285;
      break;
    case "Gbreve":
      Temporary3 = 286;
      break;
    case "gbreve":
      Temporary3 = 287;
      break;
    case "Gdot":
      Temporary3 = 288;
      break;
    case "gdot":
      Temporary3 = 289;
      break;
    case "Gcedil":
      Temporary3 = 290;
      break;
    case "Hcirc":
      Temporary3 = 292;
      break;
    case "hcirc":
      Temporary3 = 293;
      break;
    case "Hstrok":
      Temporary3 = 294;
      break;
    case "hstrok":
      Temporary3 = 295;
      break;
    case "Itilde":
      Temporary3 = 296;
      break;
    case "itilde":
      Temporary3 = 297;
      break;
    case "Imacr":
      Temporary3 = 298;
      break;
    case "imacr":
      Temporary3 = 299;
      break;
    case "Iogon":
      Temporary3 = 302;
      break;
    case "iogon":
      Temporary3 = 303;
      break;
    case "Idot":
      Temporary3 = 304;
      break;
    case "imath":
    case "inodot":
      Temporary3 = 305;
      break;
    case "IJlig":
      Temporary3 = 306;
      break;
    case "ijlig":
      Temporary3 = 307;
      break;
    case "Jcirc":
      Temporary3 = 308;
      break;
    case "jcirc":
      Temporary3 = 309;
      break;
    case "Kcedil":
      Temporary3 = 310;
      break;
    case "kcedil":
      Temporary3 = 311;
      break;
    case "kgreen":
      Temporary3 = 312;
      break;
    case "Lacute":
      Temporary3 = 313;
      break;
    case "lacute":
      Temporary3 = 314;
      break;
    case "Lcedil":
      Temporary3 = 315;
      break;
    case "lcedil":
      Temporary3 = 316;
      break;
    case "Lcaron":
      Temporary3 = 317;
      break;
    case "lcaron":
      Temporary3 = 318;
      break;
    case "Lmidot":
      Temporary3 = 319;
      break;
    case "lmidot":
      Temporary3 = 320;
      break;
    case "Lstrok":
      Temporary3 = 321;
      break;
    case "lstrok":
      Temporary3 = 322;
      break;
    case "Nacute":
      Temporary3 = 323;
      break;
    case "nacute":
      Temporary3 = 324;
      break;
    case "Ncedil":
      Temporary3 = 325;
      break;
    case "ncedil":
      Temporary3 = 326;
      break;
    case "Ncaron":
      Temporary3 = 327;
      break;
    case "ncaron":
      Temporary3 = 328;
      break;
    case "napos":
      Temporary3 = 329;
      break;
    case "ENG":
      Temporary3 = 330;
      break;
    case "eng":
      Temporary3 = 331;
      break;
    case "Omacr":
      Temporary3 = 332;
      break;
    case "omacr":
      Temporary3 = 333;
      break;
    case "Odblac":
      Temporary3 = 336;
      break;
    case "odblac":
      Temporary3 = 337;
      break;
    case "OElig":
      Temporary3 = 338;
      break;
    case "oelig":
      Temporary3 = 339;
      break;
    case "Racute":
      Temporary3 = 340;
      break;
    case "racute":
      Temporary3 = 341;
      break;
    case "Rcedil":
      Temporary3 = 342;
      break;
    case "rcedil":
      Temporary3 = 343;
      break;
    case "Rcaron":
      Temporary3 = 344;
      break;
    case "rcaron":
      Temporary3 = 345;
      break;
    case "Sacute":
      Temporary3 = 346;
      break;
    case "sacute":
      Temporary3 = 347;
      break;
    case "Scirc":
      Temporary3 = 348;
      break;
    case "scirc":
      Temporary3 = 349;
      break;
    case "Scedil":
      Temporary3 = 350;
      break;
    case "scedil":
      Temporary3 = 351;
      break;
    case "Scaron":
      Temporary3 = 352;
      break;
    case "scaron":
      Temporary3 = 353;
      break;
    case "Tcedil":
      Temporary3 = 354;
      break;
    case "tcedil":
      Temporary3 = 355;
      break;
    case "Tcaron":
      Temporary3 = 356;
      break;
    case "tcaron":
      Temporary3 = 357;
      break;
    case "Tstrok":
      Temporary3 = 358;
      break;
    case "tstrok":
      Temporary3 = 359;
      break;
    case "Utilde":
      Temporary3 = 360;
      break;
    case "utilde":
      Temporary3 = 361;
      break;
    case "Umacr":
      Temporary3 = 362;
      break;
    case "umacr":
      Temporary3 = 363;
      break;
    case "Ubreve":
      Temporary3 = 364;
      break;
    case "ubreve":
      Temporary3 = 365;
      break;
    case "Uring":
      Temporary3 = 366;
      break;
    case "uring":
      Temporary3 = 367;
      break;
    case "Udblac":
      Temporary3 = 368;
      break;
    case "udblac":
      Temporary3 = 369;
      break;
    case "Uogon":
      Temporary3 = 370;
      break;
    case "uogon":
      Temporary3 = 371;
      break;
    case "Wcirc":
      Temporary3 = 372;
      break;
    case "wcirc":
      Temporary3 = 373;
      break;
    case "Ycirc":
      Temporary3 = 374;
      break;
    case "ycirc":
      Temporary3 = 375;
      break;
    case "Yuml":
      Temporary3 = 376;
      break;
    case "Zacute":
      Temporary3 = 377;
      break;
    case "zacute":
      Temporary3 = 378;
      break;
    case "Zdot":
      Temporary3 = 379;
      break;
    case "zdot":
      Temporary3 = 380;
      break;
    case "Zcaron":
      Temporary3 = 381;
      break;
    case "zcaron":
      Temporary3 = 382;
      break;
    case "fnof":
      Temporary3 = 402;
      break;
    case "imped":
      Temporary3 = 437;
      break;
    case "gacute":
      Temporary3 = 501;
      break;
    case "jmath":
      Temporary3 = 567;
      break;
    case "circ":
      Temporary3 = 710;
      break;
    case "caron":
    case "Hacek":
      Temporary3 = 711;
      break;
    case "breve":
    case "Breve":
      Temporary3 = 728;
      break;
    case "dot":
    case "DiacriticalDot":
      Temporary3 = 729;
      break;
    case "ring":
      Temporary3 = 730;
      break;
    case "ogon":
      Temporary3 = 731;
      break;
    case "tilde":
    case "DiacriticalTilde":
      Temporary3 = 732;
      break;
    case "dblac":
    case "DiacriticalDoubleAcute":
      Temporary3 = 733;
      break;
    case "DownBreve":
      Temporary3 = 785;
      break;
    case "UnderBar":
      Temporary3 = 818;
      break;
    case "Alpha":
      Temporary3 = 913;
      break;
    case "Beta":
      Temporary3 = 914;
      break;
    case "Gamma":
      Temporary3 = 915;
      break;
    case "Delta":
      Temporary3 = 916;
      break;
    case "Epsilon":
      Temporary3 = 917;
      break;
    case "Zeta":
      Temporary3 = 918;
      break;
    case "Eta":
      Temporary3 = 919;
      break;
    case "Theta":
      Temporary3 = 920;
      break;
    case "Iota":
      Temporary3 = 921;
      break;
    case "Kappa":
      Temporary3 = 922;
      break;
    case "Lambda":
      Temporary3 = 923;
      break;
    case "Mu":
      Temporary3 = 924;
      break;
    case "Nu":
      Temporary3 = 925;
      break;
    case "Xi":
      Temporary3 = 926;
      break;
    case "Omicron":
      Temporary3 = 927;
      break;
    case "Pi":
      Temporary3 = 928;
      break;
    case "Rho":
      Temporary3 = 929;
      break;
    case "Sigma":
      Temporary3 = 931;
      break;
    case "Tau":
      Temporary3 = 932;
      break;
    case "Upsilon":
      Temporary3 = 933;
      break;
    case "Phi":
      Temporary3 = 934;
      break;
    case "Chi":
      Temporary3 = 935;
      break;
    case "Psi":
      Temporary3 = 936;
      break;
    case "Omega":
      Temporary3 = 937;
      break;
    case "alpha":
      Temporary3 = 945;
      break;
    case "beta":
      Temporary3 = 946;
      break;
    case "gamma":
      Temporary3 = 947;
      break;
    case "delta":
      Temporary3 = 948;
      break;
    case "epsiv":
    case "varepsilon":
    case "epsilon":
      Temporary3 = 949;
      break;
    case "zeta":
      Temporary3 = 950;
      break;
    case "eta":
      Temporary3 = 951;
      break;
    case "theta":
      Temporary3 = 952;
      break;
    case "iota":
      Temporary3 = 953;
      break;
    case "kappa":
      Temporary3 = 954;
      break;
    case "lambda":
      Temporary3 = 955;
      break;
    case "mu":
      Temporary3 = 956;
      break;
    case "nu":
      Temporary3 = 957;
      break;
    case "xi":
      Temporary3 = 958;
      break;
    case "omicron":
      Temporary3 = 959;
      break;
    case "pi":
      Temporary3 = 960;
      break;
    case "rho":
      Temporary3 = 961;
      break;
    case "sigmav":
    case "varsigma":
    case "sigmaf":
      Temporary3 = 962;
      break;
    case "sigma":
      Temporary3 = 963;
      break;
    case "tau":
      Temporary3 = 964;
      break;
    case "upsi":
    case "upsilon":
      Temporary3 = 965;
      break;
    case "phi":
    case "phiv":
    case "varphi":
      Temporary3 = 966;
      break;
    case "chi":
      Temporary3 = 967;
      break;
    case "psi":
      Temporary3 = 968;
      break;
    case "omega":
      Temporary3 = 969;
      break;
    case "thetav":
    case "vartheta":
    case "thetasym":
      Temporary3 = 977;
      break;
    case "Upsi":
    case "upsih":
      Temporary3 = 978;
      break;
    case "straightphi":
      Temporary3 = 981;
      break;
    case "piv":
    case "varpi":
      Temporary3 = 982;
      break;
    case "Gammad":
      Temporary3 = 988;
      break;
    case "gammad":
    case "digamma":
      Temporary3 = 989;
      break;
    case "kappav":
    case "varkappa":
      Temporary3 = 1008;
      break;
    case "rhov":
    case "varrho":
      Temporary3 = 1009;
      break;
    case "epsi":
    case "straightepsilon":
      Temporary3 = 1013;
      break;
    case "bepsi":
    case "backepsilon":
      Temporary3 = 1014;
      break;
    case "IOcy":
      Temporary3 = 1025;
      break;
    case "DJcy":
      Temporary3 = 1026;
      break;
    case "GJcy":
      Temporary3 = 1027;
      break;
    case "Jukcy":
      Temporary3 = 1028;
      break;
    case "DScy":
      Temporary3 = 1029;
      break;
    case "Iukcy":
      Temporary3 = 1030;
      break;
    case "YIcy":
      Temporary3 = 1031;
      break;
    case "Jsercy":
      Temporary3 = 1032;
      break;
    case "LJcy":
      Temporary3 = 1033;
      break;
    case "NJcy":
      Temporary3 = 1034;
      break;
    case "TSHcy":
      Temporary3 = 1035;
      break;
    case "KJcy":
      Temporary3 = 1036;
      break;
    case "Ubrcy":
      Temporary3 = 1038;
      break;
    case "DZcy":
      Temporary3 = 1039;
      break;
    case "Acy":
      Temporary3 = 1040;
      break;
    case "Bcy":
      Temporary3 = 1041;
      break;
    case "Vcy":
      Temporary3 = 1042;
      break;
    case "Gcy":
      Temporary3 = 1043;
      break;
    case "Dcy":
      Temporary3 = 1044;
      break;
    case "IEcy":
      Temporary3 = 1045;
      break;
    case "ZHcy":
      Temporary3 = 1046;
      break;
    case "Zcy":
      Temporary3 = 1047;
      break;
    case "Icy":
      Temporary3 = 1048;
      break;
    case "Jcy":
      Temporary3 = 1049;
      break;
    case "Kcy":
      Temporary3 = 1050;
      break;
    case "Lcy":
      Temporary3 = 1051;
      break;
    case "Mcy":
      Temporary3 = 1052;
      break;
    case "Ncy":
      Temporary3 = 1053;
      break;
    case "Ocy":
      Temporary3 = 1054;
      break;
    case "Pcy":
      Temporary3 = 1055;
      break;
    case "Rcy":
      Temporary3 = 1056;
      break;
    case "Scy":
      Temporary3 = 1057;
      break;
    case "Tcy":
      Temporary3 = 1058;
      break;
    case "Ucy":
      Temporary3 = 1059;
      break;
    case "Fcy":
      Temporary3 = 1060;
      break;
    case "KHcy":
      Temporary3 = 1061;
      break;
    case "TScy":
      Temporary3 = 1062;
      break;
    case "CHcy":
      Temporary3 = 1063;
      break;
    case "SHcy":
      Temporary3 = 1064;
      break;
    case "SHCHcy":
      Temporary3 = 1065;
      break;
    case "HARDcy":
      Temporary3 = 1066;
      break;
    case "Ycy":
      Temporary3 = 1067;
      break;
    case "SOFTcy":
      Temporary3 = 1068;
      break;
    case "Ecy":
      Temporary3 = 1069;
      break;
    case "YUcy":
      Temporary3 = 1070;
      break;
    case "YAcy":
      Temporary3 = 1071;
      break;
    case "acy":
      Temporary3 = 1072;
      break;
    case "bcy":
      Temporary3 = 1073;
      break;
    case "vcy":
      Temporary3 = 1074;
      break;
    case "gcy":
      Temporary3 = 1075;
      break;
    case "dcy":
      Temporary3 = 1076;
      break;
    case "iecy":
      Temporary3 = 1077;
      break;
    case "zhcy":
      Temporary3 = 1078;
      break;
    case "zcy":
      Temporary3 = 1079;
      break;
    case "icy":
      Temporary3 = 1080;
      break;
    case "jcy":
      Temporary3 = 1081;
      break;
    case "kcy":
      Temporary3 = 1082;
      break;
    case "lcy":
      Temporary3 = 1083;
      break;
    case "mcy":
      Temporary3 = 1084;
      break;
    case "ncy":
      Temporary3 = 1085;
      break;
    case "ocy":
      Temporary3 = 1086;
      break;
    case "pcy":
      Temporary3 = 1087;
      break;
    case "rcy":
      Temporary3 = 1088;
      break;
    case "scy":
      Temporary3 = 1089;
      break;
    case "tcy":
      Temporary3 = 1090;
      break;
    case "ucy":
      Temporary3 = 1091;
      break;
    case "fcy":
      Temporary3 = 1092;
      break;
    case "khcy":
      Temporary3 = 1093;
      break;
    case "tscy":
      Temporary3 = 1094;
      break;
    case "chcy":
      Temporary3 = 1095;
      break;
    case "shcy":
      Temporary3 = 1096;
      break;
    case "shchcy":
      Temporary3 = 1097;
      break;
    case "hardcy":
      Temporary3 = 1098;
      break;
    case "ycy":
      Temporary3 = 1099;
      break;
    case "softcy":
      Temporary3 = 1100;
      break;
    case "ecy":
      Temporary3 = 1101;
      break;
    case "yucy":
      Temporary3 = 1102;
      break;
    case "yacy":
      Temporary3 = 1103;
      break;
    case "iocy":
      Temporary3 = 1105;
      break;
    case "djcy":
      Temporary3 = 1106;
      break;
    case "gjcy":
      Temporary3 = 1107;
      break;
    case "jukcy":
      Temporary3 = 1108;
      break;
    case "dscy":
      Temporary3 = 1109;
      break;
    case "iukcy":
      Temporary3 = 1110;
      break;
    case "yicy":
      Temporary3 = 1111;
      break;
    case "jsercy":
      Temporary3 = 1112;
      break;
    case "ljcy":
      Temporary3 = 1113;
      break;
    case "njcy":
      Temporary3 = 1114;
      break;
    case "tshcy":
      Temporary3 = 1115;
      break;
    case "kjcy":
      Temporary3 = 1116;
      break;
    case "ubrcy":
      Temporary3 = 1118;
      break;
    case "dzcy":
      Temporary3 = 1119;
      break;
    case "ensp":
      Temporary3 = 8194;
      break;
    case "emsp":
      Temporary3 = 8195;
      break;
    case "emsp13":
      Temporary3 = 8196;
      break;
    case "emsp14":
      Temporary3 = 8197;
      break;
    case "numsp":
      Temporary3 = 8199;
      break;
    case "puncsp":
      Temporary3 = 8200;
      break;
    case "thinsp":
    case "ThinSpace":
      Temporary3 = 8201;
      break;
    case "hairsp":
    case "VeryThinSpace":
      Temporary3 = 8202;
      break;
    case "ZeroWidthSpace":
    case "NegativeVeryThinSpace":
    case "NegativeThinSpace":
    case "NegativeMediumSpace":
    case "NegativeThickSpace":
      Temporary3 = 8203;
      break;
    case "zwnj":
      Temporary3 = 8204;
      break;
    case "zwj":
      Temporary3 = 8205;
      break;
    case "lrm":
      Temporary3 = 8206;
      break;
    case "rlm":
      Temporary3 = 8207;
      break;
    case "hyphen":
    case "dash":
      Temporary3 = 8208;
      break;
    case "ndash":
      Temporary3 = 8211;
      break;
    case "mdash":
      Temporary3 = 8212;
      break;
    case "horbar":
      Temporary3 = 8213;
      break;
    case "Verbar":
    case "Vert":
      Temporary3 = 8214;
      break;
    case "lsquo":
    case "OpenCurlyQuote":
      Temporary3 = 8216;
      break;
    case "rsquo":
    case "rsquor":
    case "CloseCurlyQuote":
      Temporary3 = 8217;
      break;
    case "lsquor":
    case "sbquo":
      Temporary3 = 8218;
      break;
    case "ldquo":
    case "OpenCurlyDoubleQuote":
      Temporary3 = 8220;
      break;
    case "rdquo":
    case "rdquor":
    case "CloseCurlyDoubleQuote":
      Temporary3 = 8221;
      break;
    case "ldquor":
    case "bdquo":
      Temporary3 = 8222;
      break;
    case "dagger":
      Temporary3 = 8224;
      break;
    case "Dagger":
    case "ddagger":
      Temporary3 = 8225;
      break;
    case "bull":
    case "bullet":
      Temporary3 = 8226;
      break;
    case "nldr":
      Temporary3 = 8229;
      break;
    case "hellip":
    case "mldr":
      Temporary3 = 8230;
      break;
    case "permil":
      Temporary3 = 8240;
      break;
    case "pertenk":
      Temporary3 = 8241;
      break;
    case "prime":
      Temporary3 = 8242;
      break;
    case "Prime":
      Temporary3 = 8243;
      break;
    case "tprime":
      Temporary3 = 8244;
      break;
    case "bprime":
    case "backprime":
      Temporary3 = 8245;
      break;
    case "lsaquo":
      Temporary3 = 8249;
      break;
    case "rsaquo":
      Temporary3 = 8250;
      break;
    case "oline":
      Temporary3 = 8254;
      break;
    case "caret":
      Temporary3 = 8257;
      break;
    case "hybull":
      Temporary3 = 8259;
      break;
    case "frasl":
      Temporary3 = 8260;
      break;
    case "bsemi":
      Temporary3 = 8271;
      break;
    case "qprime":
      Temporary3 = 8279;
      break;
    case "MediumSpace":
      Temporary3 = 8287;
      break;
    case "NoBreak":
      Temporary3 = 8288;
      break;
    case "ApplyFunction":
    case "af":
      Temporary3 = 8289;
      break;
    case "InvisibleTimes":
    case "it":
      Temporary3 = 8290;
      break;
    case "InvisibleComma":
    case "ic":
      Temporary3 = 8291;
      break;
    case "euro":
      Temporary3 = 8364;
      break;
    case "tdot":
    case "TripleDot":
      Temporary3 = 8411;
      break;
    case "DotDot":
      Temporary3 = 8412;
      break;
    case "Copf":
    case "complexes":
      Temporary3 = 8450;
      break;
    case "incare":
      Temporary3 = 8453;
      break;
    case "gscr":
      Temporary3 = 8458;
      break;
    case "hamilt":
    case "HilbertSpace":
    case "Hscr":
      Temporary3 = 8459;
      break;
    case "Hfr":
    case "Poincareplane":
      Temporary3 = 8460;
      break;
    case "quaternions":
    case "Hopf":
      Temporary3 = 8461;
      break;
    case "planckh":
      Temporary3 = 8462;
      break;
    case "planck":
    case "hbar":
    case "plankv":
    case "hslash":
      Temporary3 = 8463;
      break;
    case "Iscr":
    case "imagline":
      Temporary3 = 8464;
      break;
    case "image":
    case "Im":
    case "imagpart":
    case "Ifr":
      Temporary3 = 8465;
      break;
    case "Lscr":
    case "lagran":
    case "Laplacetrf":
      Temporary3 = 8466;
      break;
    case "ell":
      Temporary3 = 8467;
      break;
    case "Nopf":
    case "naturals":
      Temporary3 = 8469;
      break;
    case "numero":
      Temporary3 = 8470;
      break;
    case "copysr":
      Temporary3 = 8471;
      break;
    case "weierp":
    case "wp":
      Temporary3 = 8472;
      break;
    case "Popf":
    case "primes":
      Temporary3 = 8473;
      break;
    case "rationals":
    case "Qopf":
      Temporary3 = 8474;
      break;
    case "Rscr":
    case "realine":
      Temporary3 = 8475;
      break;
    case "real":
    case "Re":
    case "realpart":
    case "Rfr":
      Temporary3 = 8476;
      break;
    case "reals":
    case "Ropf":
      Temporary3 = 8477;
      break;
    case "rx":
      Temporary3 = 8478;
      break;
    case "trade":
    case "TRADE":
      Temporary3 = 8482;
      break;
    case "integers":
    case "Zopf":
      Temporary3 = 8484;
      break;
    case "ohm":
      Temporary3 = 8486;
      break;
    case "mho":
      Temporary3 = 8487;
      break;
    case "Zfr":
    case "zeetrf":
      Temporary3 = 8488;
      break;
    case "iiota":
      Temporary3 = 8489;
      break;
    case "angst":
      Temporary3 = 8491;
      break;
    case "bernou":
    case "Bernoullis":
    case "Bscr":
      Temporary3 = 8492;
      break;
    case "Cfr":
    case "Cayleys":
      Temporary3 = 8493;
      break;
    case "escr":
      Temporary3 = 8495;
      break;
    case "Escr":
    case "expectation":
      Temporary3 = 8496;
      break;
    case "Fscr":
    case "Fouriertrf":
      Temporary3 = 8497;
      break;
    case "phmmat":
    case "Mellintrf":
    case "Mscr":
      Temporary3 = 8499;
      break;
    case "order":
    case "orderof":
    case "oscr":
      Temporary3 = 8500;
      break;
    case "alefsym":
    case "aleph":
      Temporary3 = 8501;
      break;
    case "beth":
      Temporary3 = 8502;
      break;
    case "gimel":
      Temporary3 = 8503;
      break;
    case "daleth":
      Temporary3 = 8504;
      break;
    case "CapitalDifferentialD":
    case "DD":
      Temporary3 = 8517;
      break;
    case "DifferentialD":
    case "dd":
      Temporary3 = 8518;
      break;
    case "ExponentialE":
    case "exponentiale":
    case "ee":
      Temporary3 = 8519;
      break;
    case "ImaginaryI":
    case "ii":
      Temporary3 = 8520;
      break;
    case "frac13":
      Temporary3 = 8531;
      break;
    case "frac23":
      Temporary3 = 8532;
      break;
    case "frac15":
      Temporary3 = 8533;
      break;
    case "frac25":
      Temporary3 = 8534;
      break;
    case "frac35":
      Temporary3 = 8535;
      break;
    case "frac45":
      Temporary3 = 8536;
      break;
    case "frac16":
      Temporary3 = 8537;
      break;
    case "frac56":
      Temporary3 = 8538;
      break;
    case "frac18":
      Temporary3 = 8539;
      break;
    case "frac38":
      Temporary3 = 8540;
      break;
    case "frac58":
      Temporary3 = 8541;
      break;
    case "frac78":
      Temporary3 = 8542;
      break;
    case "larr":
    case "leftarrow":
    case "LeftArrow":
    case "slarr":
    case "ShortLeftArrow":
      Temporary3 = 8592;
      break;
    case "uarr":
    case "uparrow":
    case "UpArrow":
    case "ShortUpArrow":
      Temporary3 = 8593;
      break;
    case "rarr":
    case "rightarrow":
    case "RightArrow":
    case "srarr":
    case "ShortRightArrow":
      Temporary3 = 8594;
      break;
    case "darr":
    case "downarrow":
    case "DownArrow":
    case "ShortDownArrow":
      Temporary3 = 8595;
      break;
    case "harr":
    case "leftrightarrow":
    case "LeftRightArrow":
      Temporary3 = 8596;
      break;
    case "varr":
    case "updownarrow":
    case "UpDownArrow":
      Temporary3 = 8597;
      break;
    case "nwarr":
    case "UpperLeftArrow":
    case "nwarrow":
      Temporary3 = 8598;
      break;
    case "nearr":
    case "UpperRightArrow":
    case "nearrow":
      Temporary3 = 8599;
      break;
    case "searr":
    case "searrow":
    case "LowerRightArrow":
      Temporary3 = 8600;
      break;
    case "swarr":
    case "swarrow":
    case "LowerLeftArrow":
      Temporary3 = 8601;
      break;
    case "nlarr":
    case "nleftarrow":
      Temporary3 = 8602;
      break;
    case "nrarr":
    case "nrightarrow":
      Temporary3 = 8603;
      break;
    case "rarrw":
    case "rightsquigarrow":
      Temporary3 = 8605;
      break;
    case "Larr":
    case "twoheadleftarrow":
      Temporary3 = 8606;
      break;
    case "Uarr":
      Temporary3 = 8607;
      break;
    case "Rarr":
    case "twoheadrightarrow":
      Temporary3 = 8608;
      break;
    case "Darr":
      Temporary3 = 8609;
      break;
    case "larrtl":
    case "leftarrowtail":
      Temporary3 = 8610;
      break;
    case "rarrtl":
    case "rightarrowtail":
      Temporary3 = 8611;
      break;
    case "LeftTeeArrow":
    case "mapstoleft":
      Temporary3 = 8612;
      break;
    case "UpTeeArrow":
    case "mapstoup":
      Temporary3 = 8613;
      break;
    case "map":
    case "RightTeeArrow":
    case "mapsto":
      Temporary3 = 8614;
      break;
    case "DownTeeArrow":
    case "mapstodown":
      Temporary3 = 8615;
      break;
    case "larrhk":
    case "hookleftarrow":
      Temporary3 = 8617;
      break;
    case "rarrhk":
    case "hookrightarrow":
      Temporary3 = 8618;
      break;
    case "larrlp":
    case "looparrowleft":
      Temporary3 = 8619;
      break;
    case "rarrlp":
    case "looparrowright":
      Temporary3 = 8620;
      break;
    case "harrw":
    case "leftrightsquigarrow":
      Temporary3 = 8621;
      break;
    case "nharr":
    case "nleftrightarrow":
      Temporary3 = 8622;
      break;
    case "lsh":
    case "Lsh":
      Temporary3 = 8624;
      break;
    case "rsh":
    case "Rsh":
      Temporary3 = 8625;
      break;
    case "ldsh":
      Temporary3 = 8626;
      break;
    case "rdsh":
      Temporary3 = 8627;
      break;
    case "crarr":
      Temporary3 = 8629;
      break;
    case "cularr":
    case "curvearrowleft":
      Temporary3 = 8630;
      break;
    case "curarr":
    case "curvearrowright":
      Temporary3 = 8631;
      break;
    case "olarr":
    case "circlearrowleft":
      Temporary3 = 8634;
      break;
    case "orarr":
    case "circlearrowright":
      Temporary3 = 8635;
      break;
    case "lharu":
    case "LeftVector":
    case "leftharpoonup":
      Temporary3 = 8636;
      break;
    case "lhard":
    case "leftharpoondown":
    case "DownLeftVector":
      Temporary3 = 8637;
      break;
    case "uharr":
    case "upharpoonright":
    case "RightUpVector":
      Temporary3 = 8638;
      break;
    case "uharl":
    case "upharpoonleft":
    case "LeftUpVector":
      Temporary3 = 8639;
      break;
    case "rharu":
    case "RightVector":
    case "rightharpoonup":
      Temporary3 = 8640;
      break;
    case "rhard":
    case "rightharpoondown":
    case "DownRightVector":
      Temporary3 = 8641;
      break;
    case "dharr":
    case "RightDownVector":
    case "downharpoonright":
      Temporary3 = 8642;
      break;
    case "dharl":
    case "LeftDownVector":
    case "downharpoonleft":
      Temporary3 = 8643;
      break;
    case "rlarr":
    case "rightleftarrows":
    case "RightArrowLeftArrow":
      Temporary3 = 8644;
      break;
    case "udarr":
    case "UpArrowDownArrow":
      Temporary3 = 8645;
      break;
    case "lrarr":
    case "leftrightarrows":
    case "LeftArrowRightArrow":
      Temporary3 = 8646;
      break;
    case "llarr":
    case "leftleftarrows":
      Temporary3 = 8647;
      break;
    case "uuarr":
    case "upuparrows":
      Temporary3 = 8648;
      break;
    case "rrarr":
    case "rightrightarrows":
      Temporary3 = 8649;
      break;
    case "ddarr":
    case "downdownarrows":
      Temporary3 = 8650;
      break;
    case "lrhar":
    case "ReverseEquilibrium":
    case "leftrightharpoons":
      Temporary3 = 8651;
      break;
    case "rlhar":
    case "rightleftharpoons":
    case "Equilibrium":
      Temporary3 = 8652;
      break;
    case "nlArr":
    case "nLeftarrow":
      Temporary3 = 8653;
      break;
    case "nhArr":
    case "nLeftrightarrow":
      Temporary3 = 8654;
      break;
    case "nrArr":
    case "nRightarrow":
      Temporary3 = 8655;
      break;
    case "lArr":
    case "Leftarrow":
    case "DoubleLeftArrow":
      Temporary3 = 8656;
      break;
    case "uArr":
    case "Uparrow":
    case "DoubleUpArrow":
      Temporary3 = 8657;
      break;
    case "rArr":
    case "Rightarrow":
    case "Implies":
    case "DoubleRightArrow":
      Temporary3 = 8658;
      break;
    case "dArr":
    case "Downarrow":
    case "DoubleDownArrow":
      Temporary3 = 8659;
      break;
    case "hArr":
    case "Leftrightarrow":
    case "DoubleLeftRightArrow":
    case "iff":
      Temporary3 = 8660;
      break;
    case "vArr":
    case "Updownarrow":
    case "DoubleUpDownArrow":
      Temporary3 = 8661;
      break;
    case "nwArr":
      Temporary3 = 8662;
      break;
    case "neArr":
      Temporary3 = 8663;
      break;
    case "seArr":
      Temporary3 = 8664;
      break;
    case "swArr":
      Temporary3 = 8665;
      break;
    case "lAarr":
    case "Lleftarrow":
      Temporary3 = 8666;
      break;
    case "rAarr":
    case "Rrightarrow":
      Temporary3 = 8667;
      break;
    case "zigrarr":
      Temporary3 = 8669;
      break;
    case "larrb":
    case "LeftArrowBar":
      Temporary3 = 8676;
      break;
    case "rarrb":
    case "RightArrowBar":
      Temporary3 = 8677;
      break;
    case "duarr":
    case "DownArrowUpArrow":
      Temporary3 = 8693;
      break;
    case "loarr":
      Temporary3 = 8701;
      break;
    case "roarr":
      Temporary3 = 8702;
      break;
    case "hoarr":
      Temporary3 = 8703;
      break;
    case "forall":
    case "ForAll":
      Temporary3 = 8704;
      break;
    case "comp":
    case "complement":
      Temporary3 = 8705;
      break;
    case "part":
    case "PartialD":
      Temporary3 = 8706;
      break;
    case "exist":
    case "Exists":
      Temporary3 = 8707;
      break;
    case "nexist":
    case "NotExists":
    case "nexists":
      Temporary3 = 8708;
      break;
    case "empty":
    case "emptyset":
    case "emptyv":
    case "varnothing":
      Temporary3 = 8709;
      break;
    case "nabla":
    case "Del":
      Temporary3 = 8711;
      break;
    case "isin":
    case "isinv":
    case "Element":
    case "in":
      Temporary3 = 8712;
      break;
    case "notin":
    case "NotElement":
    case "notinva":
      Temporary3 = 8713;
      break;
    case "niv":
    case "ReverseElement":
    case "ni":
    case "SuchThat":
      Temporary3 = 8715;
      break;
    case "notni":
    case "notniva":
    case "NotReverseElement":
      Temporary3 = 8716;
      break;
    case "prod":
    case "Product":
      Temporary3 = 8719;
      break;
    case "coprod":
    case "Coproduct":
      Temporary3 = 8720;
      break;
    case "sum":
    case "Sum":
      Temporary3 = 8721;
      break;
    case "minus":
      Temporary3 = 8722;
      break;
    case "mnplus":
    case "mp":
    case "MinusPlus":
      Temporary3 = 8723;
      break;
    case "plusdo":
    case "dotplus":
      Temporary3 = 8724;
      break;
    case "setmn":
    case "setminus":
    case "Backslash":
    case "ssetmn":
    case "smallsetminus":
      Temporary3 = 8726;
      break;
    case "lowast":
      Temporary3 = 8727;
      break;
    case "compfn":
    case "SmallCircle":
      Temporary3 = 8728;
      break;
    case "radic":
    case "Sqrt":
      Temporary3 = 8730;
      break;
    case "prop":
    case "propto":
    case "Proportional":
    case "vprop":
    case "varpropto":
      Temporary3 = 8733;
      break;
    case "infin":
      Temporary3 = 8734;
      break;
    case "angrt":
      Temporary3 = 8735;
      break;
    case "ang":
    case "angle":
      Temporary3 = 8736;
      break;
    case "angmsd":
    case "measuredangle":
      Temporary3 = 8737;
      break;
    case "angsph":
      Temporary3 = 8738;
      break;
    case "mid":
    case "VerticalBar":
    case "smid":
    case "shortmid":
      Temporary3 = 8739;
      break;
    case "nmid":
    case "NotVerticalBar":
    case "nsmid":
    case "nshortmid":
      Temporary3 = 8740;
      break;
    case "par":
    case "parallel":
    case "DoubleVerticalBar":
    case "spar":
    case "shortparallel":
      Temporary3 = 8741;
      break;
    case "npar":
    case "nparallel":
    case "NotDoubleVerticalBar":
    case "nspar":
    case "nshortparallel":
      Temporary3 = 8742;
      break;
    case "and":
    case "wedge":
      Temporary3 = 8743;
      break;
    case "or":
    case "vee":
      Temporary3 = 8744;
      break;
    case "cap":
      Temporary3 = 8745;
      break;
    case "cup":
      Temporary3 = 8746;
      break;
    case "int":
    case "Integral":
      Temporary3 = 8747;
      break;
    case "Int":
      Temporary3 = 8748;
      break;
    case "tint":
    case "iiint":
      Temporary3 = 8749;
      break;
    case "conint":
    case "oint":
    case "ContourIntegral":
      Temporary3 = 8750;
      break;
    case "Conint":
    case "DoubleContourIntegral":
      Temporary3 = 8751;
      break;
    case "Cconint":
      Temporary3 = 8752;
      break;
    case "cwint":
      Temporary3 = 8753;
      break;
    case "cwconint":
    case "ClockwiseContourIntegral":
      Temporary3 = 8754;
      break;
    case "awconint":
    case "CounterClockwiseContourIntegral":
      Temporary3 = 8755;
      break;
    case "there4":
    case "therefore":
    case "Therefore":
      Temporary3 = 8756;
      break;
    case "becaus":
    case "because":
    case "Because":
      Temporary3 = 8757;
      break;
    case "ratio":
      Temporary3 = 8758;
      break;
    case "Colon":
    case "Proportion":
      Temporary3 = 8759;
      break;
    case "minusd":
    case "dotminus":
      Temporary3 = 8760;
      break;
    case "mDDot":
      Temporary3 = 8762;
      break;
    case "homtht":
      Temporary3 = 8763;
      break;
    case "sim":
    case "Tilde":
    case "thksim":
    case "thicksim":
      Temporary3 = 8764;
      break;
    case "bsim":
    case "backsim":
      Temporary3 = 8765;
      break;
    case "ac":
    case "mstpos":
      Temporary3 = 8766;
      break;
    case "acd":
      Temporary3 = 8767;
      break;
    case "wreath":
    case "VerticalTilde":
    case "wr":
      Temporary3 = 8768;
      break;
    case "nsim":
    case "NotTilde":
      Temporary3 = 8769;
      break;
    case "esim":
    case "EqualTilde":
    case "eqsim":
      Temporary3 = 8770;
      break;
    case "sime":
    case "TildeEqual":
    case "simeq":
      Temporary3 = 8771;
      break;
    case "nsime":
    case "nsimeq":
    case "NotTildeEqual":
      Temporary3 = 8772;
      break;
    case "cong":
    case "TildeFullEqual":
      Temporary3 = 8773;
      break;
    case "simne":
      Temporary3 = 8774;
      break;
    case "ncong":
    case "NotTildeFullEqual":
      Temporary3 = 8775;
      break;
    case "asymp":
    case "ap":
    case "TildeTilde":
    case "approx":
    case "thkap":
    case "thickapprox":
      Temporary3 = 8776;
      break;
    case "nap":
    case "NotTildeTilde":
    case "napprox":
      Temporary3 = 8777;
      break;
    case "ape":
    case "approxeq":
      Temporary3 = 8778;
      break;
    case "apid":
      Temporary3 = 8779;
      break;
    case "bcong":
    case "backcong":
      Temporary3 = 8780;
      break;
    case "asympeq":
    case "CupCap":
      Temporary3 = 8781;
      break;
    case "bump":
    case "HumpDownHump":
    case "Bumpeq":
      Temporary3 = 8782;
      break;
    case "bumpe":
    case "HumpEqual":
    case "bumpeq":
      Temporary3 = 8783;
      break;
    case "esdot":
    case "DotEqual":
    case "doteq":
      Temporary3 = 8784;
      break;
    case "eDot":
    case "doteqdot":
      Temporary3 = 8785;
      break;
    case "efDot":
    case "fallingdotseq":
      Temporary3 = 8786;
      break;
    case "erDot":
    case "risingdotseq":
      Temporary3 = 8787;
      break;
    case "colone":
    case "coloneq":
    case "Assign":
      Temporary3 = 8788;
      break;
    case "ecolon":
    case "eqcolon":
      Temporary3 = 8789;
      break;
    case "ecir":
    case "eqcirc":
      Temporary3 = 8790;
      break;
    case "cire":
    case "circeq":
      Temporary3 = 8791;
      break;
    case "wedgeq":
      Temporary3 = 8793;
      break;
    case "veeeq":
      Temporary3 = 8794;
      break;
    case "trie":
    case "triangleq":
      Temporary3 = 8796;
      break;
    case "equest":
    case "questeq":
      Temporary3 = 8799;
      break;
    case "ne":
    case "NotEqual":
      Temporary3 = 8800;
      break;
    case "equiv":
    case "Congruent":
      Temporary3 = 8801;
      break;
    case "nequiv":
    case "NotCongruent":
      Temporary3 = 8802;
      break;
    case "le":
    case "leq":
      Temporary3 = 8804;
      break;
    case "ge":
    case "GreaterEqual":
    case "geq":
      Temporary3 = 8805;
      break;
    case "lE":
    case "LessFullEqual":
    case "leqq":
      Temporary3 = 8806;
      break;
    case "gE":
    case "GreaterFullEqual":
    case "geqq":
      Temporary3 = 8807;
      break;
    case "lnE":
    case "lneqq":
      Temporary3 = 8808;
      break;
    case "gnE":
    case "gneqq":
      Temporary3 = 8809;
      break;
    case "Lt":
    case "NestedLessLess":
    case "ll":
      Temporary3 = 8810;
      break;
    case "Gt":
    case "NestedGreaterGreater":
    case "gg":
      Temporary3 = 8811;
      break;
    case "twixt":
    case "between":
      Temporary3 = 8812;
      break;
    case "NotCupCap":
      Temporary3 = 8813;
      break;
    case "nlt":
    case "NotLess":
    case "nless":
      Temporary3 = 8814;
      break;
    case "ngt":
    case "NotGreater":
    case "ngtr":
      Temporary3 = 8815;
      break;
    case "nle":
    case "NotLessEqual":
    case "nleq":
      Temporary3 = 8816;
      break;
    case "nge":
    case "NotGreaterEqual":
    case "ngeq":
      Temporary3 = 8817;
      break;
    case "lsim":
    case "LessTilde":
    case "lesssim":
      Temporary3 = 8818;
      break;
    case "gsim":
    case "gtrsim":
    case "GreaterTilde":
      Temporary3 = 8819;
      break;
    case "nlsim":
    case "NotLessTilde":
      Temporary3 = 8820;
      break;
    case "ngsim":
    case "NotGreaterTilde":
      Temporary3 = 8821;
      break;
    case "lg":
    case "lessgtr":
    case "LessGreater":
      Temporary3 = 8822;
      break;
    case "gl":
    case "gtrless":
    case "GreaterLess":
      Temporary3 = 8823;
      break;
    case "ntlg":
    case "NotLessGreater":
      Temporary3 = 8824;
      break;
    case "ntgl":
    case "NotGreaterLess":
      Temporary3 = 8825;
      break;
    case "pr":
    case "Precedes":
    case "prec":
      Temporary3 = 8826;
      break;
    case "sc":
    case "Succeeds":
    case "succ":
      Temporary3 = 8827;
      break;
    case "prcue":
    case "PrecedesSlantEqual":
    case "preccurlyeq":
      Temporary3 = 8828;
      break;
    case "sccue":
    case "SucceedsSlantEqual":
    case "succcurlyeq":
      Temporary3 = 8829;
      break;
    case "prsim":
    case "precsim":
    case "PrecedesTilde":
      Temporary3 = 8830;
      break;
    case "scsim":
    case "succsim":
    case "SucceedsTilde":
      Temporary3 = 8831;
      break;
    case "npr":
    case "nprec":
    case "NotPrecedes":
      Temporary3 = 8832;
      break;
    case "nsc":
    case "nsucc":
    case "NotSucceeds":
      Temporary3 = 8833;
      break;
    case "sub":
    case "subset":
      Temporary3 = 8834;
      break;
    case "sup":
    case "supset":
    case "Superset":
      Temporary3 = 8835;
      break;
    case "nsub":
      Temporary3 = 8836;
      break;
    case "nsup":
      Temporary3 = 8837;
      break;
    case "sube":
    case "SubsetEqual":
    case "subseteq":
      Temporary3 = 8838;
      break;
    case "supe":
    case "supseteq":
    case "SupersetEqual":
      Temporary3 = 8839;
      break;
    case "nsube":
    case "nsubseteq":
    case "NotSubsetEqual":
      Temporary3 = 8840;
      break;
    case "nsupe":
    case "nsupseteq":
    case "NotSupersetEqual":
      Temporary3 = 8841;
      break;
    case "subne":
    case "subsetneq":
      Temporary3 = 8842;
      break;
    case "supne":
    case "supsetneq":
      Temporary3 = 8843;
      break;
    case "cupdot":
      Temporary3 = 8845;
      break;
    case "uplus":
    case "UnionPlus":
      Temporary3 = 8846;
      break;
    case "sqsub":
    case "SquareSubset":
    case "sqsubset":
      Temporary3 = 8847;
      break;
    case "sqsup":
    case "SquareSuperset":
    case "sqsupset":
      Temporary3 = 8848;
      break;
    case "sqsube":
    case "SquareSubsetEqual":
    case "sqsubseteq":
      Temporary3 = 8849;
      break;
    case "sqsupe":
    case "SquareSupersetEqual":
    case "sqsupseteq":
      Temporary3 = 8850;
      break;
    case "sqcap":
    case "SquareIntersection":
      Temporary3 = 8851;
      break;
    case "sqcup":
    case "SquareUnion":
      Temporary3 = 8852;
      break;
    case "oplus":
    case "CirclePlus":
      Temporary3 = 8853;
      break;
    case "ominus":
    case "CircleMinus":
      Temporary3 = 8854;
      break;
    case "otimes":
    case "CircleTimes":
      Temporary3 = 8855;
      break;
    case "osol":
      Temporary3 = 8856;
      break;
    case "odot":
    case "CircleDot":
      Temporary3 = 8857;
      break;
    case "ocir":
    case "circledcirc":
      Temporary3 = 8858;
      break;
    case "oast":
    case "circledast":
      Temporary3 = 8859;
      break;
    case "odash":
    case "circleddash":
      Temporary3 = 8861;
      break;
    case "plusb":
    case "boxplus":
      Temporary3 = 8862;
      break;
    case "minusb":
    case "boxminus":
      Temporary3 = 8863;
      break;
    case "timesb":
    case "boxtimes":
      Temporary3 = 8864;
      break;
    case "sdotb":
    case "dotsquare":
      Temporary3 = 8865;
      break;
    case "vdash":
    case "RightTee":
      Temporary3 = 8866;
      break;
    case "dashv":
    case "LeftTee":
      Temporary3 = 8867;
      break;
    case "top":
    case "DownTee":
      Temporary3 = 8868;
      break;
    case "bottom":
    case "bot":
    case "perp":
    case "UpTee":
      Temporary3 = 8869;
      break;
    case "models":
      Temporary3 = 8871;
      break;
    case "vDash":
    case "DoubleRightTee":
      Temporary3 = 8872;
      break;
    case "Vdash":
      Temporary3 = 8873;
      break;
    case "Vvdash":
      Temporary3 = 8874;
      break;
    case "VDash":
      Temporary3 = 8875;
      break;
    case "nvdash":
      Temporary3 = 8876;
      break;
    case "nvDash":
      Temporary3 = 8877;
      break;
    case "nVdash":
      Temporary3 = 8878;
      break;
    case "nVDash":
      Temporary3 = 8879;
      break;
    case "prurel":
      Temporary3 = 8880;
      break;
    case "vltri":
    case "vartriangleleft":
    case "LeftTriangle":
      Temporary3 = 8882;
      break;
    case "vrtri":
    case "vartriangleright":
    case "RightTriangle":
      Temporary3 = 8883;
      break;
    case "ltrie":
    case "trianglelefteq":
    case "LeftTriangleEqual":
      Temporary3 = 8884;
      break;
    case "rtrie":
    case "trianglerighteq":
    case "RightTriangleEqual":
      Temporary3 = 8885;
      break;
    case "origof":
      Temporary3 = 8886;
      break;
    case "imof":
      Temporary3 = 8887;
      break;
    case "mumap":
    case "multimap":
      Temporary3 = 8888;
      break;
    case "hercon":
      Temporary3 = 8889;
      break;
    case "intcal":
    case "intercal":
      Temporary3 = 8890;
      break;
    case "veebar":
      Temporary3 = 8891;
      break;
    case "barvee":
      Temporary3 = 8893;
      break;
    case "angrtvb":
      Temporary3 = 8894;
      break;
    case "lrtri":
      Temporary3 = 8895;
      break;
    case "xwedge":
    case "Wedge":
    case "bigwedge":
      Temporary3 = 8896;
      break;
    case "xvee":
    case "Vee":
    case "bigvee":
      Temporary3 = 8897;
      break;
    case "xcap":
    case "Intersection":
    case "bigcap":
      Temporary3 = 8898;
      break;
    case "xcup":
    case "Union":
    case "bigcup":
      Temporary3 = 8899;
      break;
    case "diam":
    case "diamond":
    case "Diamond":
      Temporary3 = 8900;
      break;
    case "sdot":
      Temporary3 = 8901;
      break;
    case "sstarf":
    case "Star":
      Temporary3 = 8902;
      break;
    case "divonx":
    case "divideontimes":
      Temporary3 = 8903;
      break;
    case "bowtie":
      Temporary3 = 8904;
      break;
    case "ltimes":
      Temporary3 = 8905;
      break;
    case "rtimes":
      Temporary3 = 8906;
      break;
    case "lthree":
    case "leftthreetimes":
      Temporary3 = 8907;
      break;
    case "rthree":
    case "rightthreetimes":
      Temporary3 = 8908;
      break;
    case "bsime":
    case "backsimeq":
      Temporary3 = 8909;
      break;
    case "cuvee":
    case "curlyvee":
      Temporary3 = 8910;
      break;
    case "cuwed":
    case "curlywedge":
      Temporary3 = 8911;
      break;
    case "Sub":
    case "Subset":
      Temporary3 = 8912;
      break;
    case "Sup":
    case "Supset":
      Temporary3 = 8913;
      break;
    case "Cap":
      Temporary3 = 8914;
      break;
    case "Cup":
      Temporary3 = 8915;
      break;
    case "fork":
    case "pitchfork":
      Temporary3 = 8916;
      break;
    case "epar":
      Temporary3 = 8917;
      break;
    case "ltdot":
    case "lessdot":
      Temporary3 = 8918;
      break;
    case "gtdot":
    case "gtrdot":
      Temporary3 = 8919;
      break;
    case "Ll":
      Temporary3 = 8920;
      break;
    case "Gg":
    case "ggg":
      Temporary3 = 8921;
      break;
    case "leg":
    case "LessEqualGreater":
    case "lesseqgtr":
      Temporary3 = 8922;
      break;
    case "gel":
    case "gtreqless":
    case "GreaterEqualLess":
      Temporary3 = 8923;
      break;
    case "cuepr":
    case "curlyeqprec":
      Temporary3 = 8926;
      break;
    case "cuesc":
    case "curlyeqsucc":
      Temporary3 = 8927;
      break;
    case "nprcue":
    case "NotPrecedesSlantEqual":
      Temporary3 = 8928;
      break;
    case "nsccue":
    case "NotSucceedsSlantEqual":
      Temporary3 = 8929;
      break;
    case "nsqsube":
    case "NotSquareSubsetEqual":
      Temporary3 = 8930;
      break;
    case "nsqsupe":
    case "NotSquareSupersetEqual":
      Temporary3 = 8931;
      break;
    case "lnsim":
      Temporary3 = 8934;
      break;
    case "gnsim":
      Temporary3 = 8935;
      break;
    case "prnsim":
    case "precnsim":
      Temporary3 = 8936;
      break;
    case "scnsim":
    case "succnsim":
      Temporary3 = 8937;
      break;
    case "nltri":
    case "ntriangleleft":
    case "NotLeftTriangle":
      Temporary3 = 8938;
      break;
    case "nrtri":
    case "ntriangleright":
    case "NotRightTriangle":
      Temporary3 = 8939;
      break;
    case "nltrie":
    case "ntrianglelefteq":
    case "NotLeftTriangleEqual":
      Temporary3 = 8940;
      break;
    case "nrtrie":
    case "ntrianglerighteq":
    case "NotRightTriangleEqual":
      Temporary3 = 8941;
      break;
    case "vellip":
      Temporary3 = 8942;
      break;
    case "ctdot":
      Temporary3 = 8943;
      break;
    case "utdot":
      Temporary3 = 8944;
      break;
    case "dtdot":
      Temporary3 = 8945;
      break;
    case "disin":
      Temporary3 = 8946;
      break;
    case "isinsv":
      Temporary3 = 8947;
      break;
    case "isins":
      Temporary3 = 8948;
      break;
    case "isindot":
      Temporary3 = 8949;
      break;
    case "notinvc":
      Temporary3 = 8950;
      break;
    case "notinvb":
      Temporary3 = 8951;
      break;
    case "isinE":
      Temporary3 = 8953;
      break;
    case "nisd":
      Temporary3 = 8954;
      break;
    case "xnis":
      Temporary3 = 8955;
      break;
    case "nis":
      Temporary3 = 8956;
      break;
    case "notnivc":
      Temporary3 = 8957;
      break;
    case "notnivb":
      Temporary3 = 8958;
      break;
    case "barwed":
    case "barwedge":
      Temporary3 = 8965;
      break;
    case "Barwed":
    case "doublebarwedge":
      Temporary3 = 8966;
      break;
    case "lceil":
    case "LeftCeiling":
      Temporary3 = 8968;
      break;
    case "rceil":
    case "RightCeiling":
      Temporary3 = 8969;
      break;
    case "lfloor":
    case "LeftFloor":
      Temporary3 = 8970;
      break;
    case "rfloor":
    case "RightFloor":
      Temporary3 = 8971;
      break;
    case "drcrop":
      Temporary3 = 8972;
      break;
    case "dlcrop":
      Temporary3 = 8973;
      break;
    case "urcrop":
      Temporary3 = 8974;
      break;
    case "ulcrop":
      Temporary3 = 8975;
      break;
    case "bnot":
      Temporary3 = 8976;
      break;
    case "profline":
      Temporary3 = 8978;
      break;
    case "profsurf":
      Temporary3 = 8979;
      break;
    case "telrec":
      Temporary3 = 8981;
      break;
    case "target":
      Temporary3 = 8982;
      break;
    case "ulcorn":
    case "ulcorner":
      Temporary3 = 8988;
      break;
    case "urcorn":
    case "urcorner":
      Temporary3 = 8989;
      break;
    case "dlcorn":
    case "llcorner":
      Temporary3 = 8990;
      break;
    case "drcorn":
    case "lrcorner":
      Temporary3 = 8991;
      break;
    case "frown":
    case "sfrown":
      Temporary3 = 8994;
      break;
    case "smile":
    case "ssmile":
      Temporary3 = 8995;
      break;
    case "cylcty":
      Temporary3 = 9005;
      break;
    case "profalar":
      Temporary3 = 9006;
      break;
    case "topbot":
      Temporary3 = 9014;
      break;
    case "ovbar":
      Temporary3 = 9021;
      break;
    case "solbar":
      Temporary3 = 9023;
      break;
    case "angzarr":
      Temporary3 = 9084;
      break;
    case "lmoust":
    case "lmoustache":
      Temporary3 = 9136;
      break;
    case "rmoust":
    case "rmoustache":
      Temporary3 = 9137;
      break;
    case "tbrk":
    case "OverBracket":
      Temporary3 = 9140;
      break;
    case "bbrk":
    case "UnderBracket":
      Temporary3 = 9141;
      break;
    case "bbrktbrk":
      Temporary3 = 9142;
      break;
    case "OverParenthesis":
      Temporary3 = 9180;
      break;
    case "UnderParenthesis":
      Temporary3 = 9181;
      break;
    case "OverBrace":
      Temporary3 = 9182;
      break;
    case "UnderBrace":
      Temporary3 = 9183;
      break;
    case "trpezium":
      Temporary3 = 9186;
      break;
    case "elinters":
      Temporary3 = 9191;
      break;
    case "blank":
      Temporary3 = 9251;
      break;
    case "oS":
    case "circledS":
      Temporary3 = 9416;
      break;
    case "boxh":
    case "HorizontalLine":
      Temporary3 = 9472;
      break;
    case "boxv":
      Temporary3 = 9474;
      break;
    case "boxdr":
      Temporary3 = 9484;
      break;
    case "boxdl":
      Temporary3 = 9488;
      break;
    case "boxur":
      Temporary3 = 9492;
      break;
    case "boxul":
      Temporary3 = 9496;
      break;
    case "boxvr":
      Temporary3 = 9500;
      break;
    case "boxvl":
      Temporary3 = 9508;
      break;
    case "boxhd":
      Temporary3 = 9516;
      break;
    case "boxhu":
      Temporary3 = 9524;
      break;
    case "boxvh":
      Temporary3 = 9532;
      break;
    case "boxH":
      Temporary3 = 9552;
      break;
    case "boxV":
      Temporary3 = 9553;
      break;
    case "boxdR":
      Temporary3 = 9554;
      break;
    case "boxDr":
      Temporary3 = 9555;
      break;
    case "boxDR":
      Temporary3 = 9556;
      break;
    case "boxdL":
      Temporary3 = 9557;
      break;
    case "boxDl":
      Temporary3 = 9558;
      break;
    case "boxDL":
      Temporary3 = 9559;
      break;
    case "boxuR":
      Temporary3 = 9560;
      break;
    case "boxUr":
      Temporary3 = 9561;
      break;
    case "boxUR":
      Temporary3 = 9562;
      break;
    case "boxuL":
      Temporary3 = 9563;
      break;
    case "boxUl":
      Temporary3 = 9564;
      break;
    case "boxUL":
      Temporary3 = 9565;
      break;
    case "boxvR":
      Temporary3 = 9566;
      break;
    case "boxVr":
      Temporary3 = 9567;
      break;
    case "boxVR":
      Temporary3 = 9568;
      break;
    case "boxvL":
      Temporary3 = 9569;
      break;
    case "boxVl":
      Temporary3 = 9570;
      break;
    case "boxVL":
      Temporary3 = 9571;
      break;
    case "boxHd":
      Temporary3 = 9572;
      break;
    case "boxhD":
      Temporary3 = 9573;
      break;
    case "boxHD":
      Temporary3 = 9574;
      break;
    case "boxHu":
      Temporary3 = 9575;
      break;
    case "boxhU":
      Temporary3 = 9576;
      break;
    case "boxHU":
      Temporary3 = 9577;
      break;
    case "boxvH":
      Temporary3 = 9578;
      break;
    case "boxVh":
      Temporary3 = 9579;
      break;
    case "boxVH":
      Temporary3 = 9580;
      break;
    case "uhblk":
      Temporary3 = 9600;
      break;
    case "lhblk":
      Temporary3 = 9604;
      break;
    case "block":
      Temporary3 = 9608;
      break;
    case "blk14":
      Temporary3 = 9617;
      break;
    case "blk12":
      Temporary3 = 9618;
      break;
    case "blk34":
      Temporary3 = 9619;
      break;
    case "squ":
    case "square":
    case "Square":
      Temporary3 = 9633;
      break;
    case "squf":
    case "squarf":
    case "blacksquare":
    case "FilledVerySmallSquare":
      Temporary3 = 9642;
      break;
    case "EmptyVerySmallSquare":
      Temporary3 = 9643;
      break;
    case "rect":
      Temporary3 = 9645;
      break;
    case "marker":
      Temporary3 = 9646;
      break;
    case "fltns":
      Temporary3 = 9649;
      break;
    case "xutri":
    case "bigtriangleup":
      Temporary3 = 9651;
      break;
    case "utrif":
    case "blacktriangle":
      Temporary3 = 9652;
      break;
    case "utri":
    case "triangle":
      Temporary3 = 9653;
      break;
    case "rtrif":
    case "blacktriangleright":
      Temporary3 = 9656;
      break;
    case "rtri":
    case "triangleright":
      Temporary3 = 9657;
      break;
    case "xdtri":
    case "bigtriangledown":
      Temporary3 = 9661;
      break;
    case "dtrif":
    case "blacktriangledown":
      Temporary3 = 9662;
      break;
    case "dtri":
    case "triangledown":
      Temporary3 = 9663;
      break;
    case "ltrif":
    case "blacktriangleleft":
      Temporary3 = 9666;
      break;
    case "ltri":
    case "triangleleft":
      Temporary3 = 9667;
      break;
    case "loz":
    case "lozenge":
      Temporary3 = 9674;
      break;
    case "cir":
      Temporary3 = 9675;
      break;
    case "tridot":
      Temporary3 = 9708;
      break;
    case "xcirc":
    case "bigcirc":
      Temporary3 = 9711;
      break;
    case "ultri":
      Temporary3 = 9720;
      break;
    case "urtri":
      Temporary3 = 9721;
      break;
    case "lltri":
      Temporary3 = 9722;
      break;
    case "EmptySmallSquare":
      Temporary3 = 9723;
      break;
    case "FilledSmallSquare":
      Temporary3 = 9724;
      break;
    case "starf":
    case "bigstar":
      Temporary3 = 9733;
      break;
    case "star":
      Temporary3 = 9734;
      break;
    case "phone":
      Temporary3 = 9742;
      break;
    case "female":
      Temporary3 = 9792;
      break;
    case "male":
      Temporary3 = 9794;
      break;
    case "spades":
    case "spadesuit":
      Temporary3 = 9824;
      break;
    case "clubs":
    case "clubsuit":
      Temporary3 = 9827;
      break;
    case "hearts":
    case "heartsuit":
      Temporary3 = 9829;
      break;
    case "diams":
    case "diamondsuit":
      Temporary3 = 9830;
      break;
    case "sung":
      Temporary3 = 9834;
      break;
    case "flat":
      Temporary3 = 9837;
      break;
    case "natur":
    case "natural":
      Temporary3 = 9838;
      break;
    case "sharp":
      Temporary3 = 9839;
      break;
    case "check":
    case "checkmark":
      Temporary3 = 10003;
      break;
    case "cross":
      Temporary3 = 10007;
      break;
    case "malt":
    case "maltese":
      Temporary3 = 10016;
      break;
    case "sext":
      Temporary3 = 10038;
      break;
    case "VerticalSeparator":
      Temporary3 = 10072;
      break;
    case "lbbrk":
      Temporary3 = 10098;
      break;
    case "rbbrk":
      Temporary3 = 10099;
      break;
    case "lobrk":
    case "LeftDoubleBracket":
      Temporary3 = 10214;
      break;
    case "robrk":
    case "RightDoubleBracket":
      Temporary3 = 10215;
      break;
    case "lang":
    case "LeftAngleBracket":
    case "langle":
      Temporary3 = 10216;
      break;
    case "rang":
    case "RightAngleBracket":
    case "rangle":
      Temporary3 = 10217;
      break;
    case "Lang":
      Temporary3 = 10218;
      break;
    case "Rang":
      Temporary3 = 10219;
      break;
    case "loang":
      Temporary3 = 10220;
      break;
    case "roang":
      Temporary3 = 10221;
      break;
    case "xlarr":
    case "longleftarrow":
    case "LongLeftArrow":
      Temporary3 = 10229;
      break;
    case "xrarr":
    case "longrightarrow":
    case "LongRightArrow":
      Temporary3 = 10230;
      break;
    case "xharr":
    case "longleftrightarrow":
    case "LongLeftRightArrow":
      Temporary3 = 10231;
      break;
    case "xlArr":
    case "Longleftarrow":
    case "DoubleLongLeftArrow":
      Temporary3 = 10232;
      break;
    case "xrArr":
    case "Longrightarrow":
    case "DoubleLongRightArrow":
      Temporary3 = 10233;
      break;
    case "xhArr":
    case "Longleftrightarrow":
    case "DoubleLongLeftRightArrow":
      Temporary3 = 10234;
      break;
    case "xmap":
    case "longmapsto":
      Temporary3 = 10236;
      break;
    case "dzigrarr":
      Temporary3 = 10239;
      break;
    case "nvlArr":
      Temporary3 = 10498;
      break;
    case "nvrArr":
      Temporary3 = 10499;
      break;
    case "nvHarr":
      Temporary3 = 10500;
      break;
    case "Map":
      Temporary3 = 10501;
      break;
    case "lbarr":
      Temporary3 = 10508;
      break;
    case "rbarr":
    case "bkarow":
      Temporary3 = 10509;
      break;
    case "lBarr":
      Temporary3 = 10510;
      break;
    case "rBarr":
    case "dbkarow":
      Temporary3 = 10511;
      break;
    case "RBarr":
    case "drbkarow":
      Temporary3 = 10512;
      break;
    case "DDotrahd":
      Temporary3 = 10513;
      break;
    case "UpArrowBar":
      Temporary3 = 10514;
      break;
    case "DownArrowBar":
      Temporary3 = 10515;
      break;
    case "Rarrtl":
      Temporary3 = 10518;
      break;
    case "latail":
      Temporary3 = 10521;
      break;
    case "ratail":
      Temporary3 = 10522;
      break;
    case "lAtail":
      Temporary3 = 10523;
      break;
    case "rAtail":
      Temporary3 = 10524;
      break;
    case "larrfs":
      Temporary3 = 10525;
      break;
    case "rarrfs":
      Temporary3 = 10526;
      break;
    case "larrbfs":
      Temporary3 = 10527;
      break;
    case "rarrbfs":
      Temporary3 = 10528;
      break;
    case "nwarhk":
      Temporary3 = 10531;
      break;
    case "nearhk":
      Temporary3 = 10532;
      break;
    case "searhk":
    case "hksearow":
      Temporary3 = 10533;
      break;
    case "swarhk":
    case "hkswarow":
      Temporary3 = 10534;
      break;
    case "nwnear":
      Temporary3 = 10535;
      break;
    case "nesear":
    case "toea":
      Temporary3 = 10536;
      break;
    case "seswar":
    case "tosa":
      Temporary3 = 10537;
      break;
    case "swnwar":
      Temporary3 = 10538;
      break;
    case "rarrc":
      Temporary3 = 10547;
      break;
    case "cudarrr":
      Temporary3 = 10549;
      break;
    case "ldca":
      Temporary3 = 10550;
      break;
    case "rdca":
      Temporary3 = 10551;
      break;
    case "cudarrl":
      Temporary3 = 10552;
      break;
    case "larrpl":
      Temporary3 = 10553;
      break;
    case "curarrm":
      Temporary3 = 10556;
      break;
    case "cularrp":
      Temporary3 = 10557;
      break;
    case "rarrpl":
      Temporary3 = 10565;
      break;
    case "harrcir":
      Temporary3 = 10568;
      break;
    case "Uarrocir":
      Temporary3 = 10569;
      break;
    case "lurdshar":
      Temporary3 = 10570;
      break;
    case "ldrushar":
      Temporary3 = 10571;
      break;
    case "LeftRightVector":
      Temporary3 = 10574;
      break;
    case "RightUpDownVector":
      Temporary3 = 10575;
      break;
    case "DownLeftRightVector":
      Temporary3 = 10576;
      break;
    case "LeftUpDownVector":
      Temporary3 = 10577;
      break;
    case "LeftVectorBar":
      Temporary3 = 10578;
      break;
    case "RightVectorBar":
      Temporary3 = 10579;
      break;
    case "RightUpVectorBar":
      Temporary3 = 10580;
      break;
    case "RightDownVectorBar":
      Temporary3 = 10581;
      break;
    case "DownLeftVectorBar":
      Temporary3 = 10582;
      break;
    case "DownRightVectorBar":
      Temporary3 = 10583;
      break;
    case "LeftUpVectorBar":
      Temporary3 = 10584;
      break;
    case "LeftDownVectorBar":
      Temporary3 = 10585;
      break;
    case "LeftTeeVector":
      Temporary3 = 10586;
      break;
    case "RightTeeVector":
      Temporary3 = 10587;
      break;
    case "RightUpTeeVector":
      Temporary3 = 10588;
      break;
    case "RightDownTeeVector":
      Temporary3 = 10589;
      break;
    case "DownLeftTeeVector":
      Temporary3 = 10590;
      break;
    case "DownRightTeeVector":
      Temporary3 = 10591;
      break;
    case "LeftUpTeeVector":
      Temporary3 = 10592;
      break;
    case "LeftDownTeeVector":
      Temporary3 = 10593;
      break;
    case "lHar":
      Temporary3 = 10594;
      break;
    case "uHar":
      Temporary3 = 10595;
      break;
    case "rHar":
      Temporary3 = 10596;
      break;
    case "dHar":
      Temporary3 = 10597;
      break;
    case "luruhar":
      Temporary3 = 10598;
      break;
    case "ldrdhar":
      Temporary3 = 10599;
      break;
    case "ruluhar":
      Temporary3 = 10600;
      break;
    case "rdldhar":
      Temporary3 = 10601;
      break;
    case "lharul":
      Temporary3 = 10602;
      break;
    case "llhard":
      Temporary3 = 10603;
      break;
    case "rharul":
      Temporary3 = 10604;
      break;
    case "lrhard":
      Temporary3 = 10605;
      break;
    case "udhar":
    case "UpEquilibrium":
      Temporary3 = 10606;
      break;
    case "duhar":
    case "ReverseUpEquilibrium":
      Temporary3 = 10607;
      break;
    case "RoundImplies":
      Temporary3 = 10608;
      break;
    case "erarr":
      Temporary3 = 10609;
      break;
    case "simrarr":
      Temporary3 = 10610;
      break;
    case "larrsim":
      Temporary3 = 10611;
      break;
    case "rarrsim":
      Temporary3 = 10612;
      break;
    case "rarrap":
      Temporary3 = 10613;
      break;
    case "ltlarr":
      Temporary3 = 10614;
      break;
    case "gtrarr":
      Temporary3 = 10616;
      break;
    case "subrarr":
      Temporary3 = 10617;
      break;
    case "suplarr":
      Temporary3 = 10619;
      break;
    case "lfisht":
      Temporary3 = 10620;
      break;
    case "rfisht":
      Temporary3 = 10621;
      break;
    case "ufisht":
      Temporary3 = 10622;
      break;
    case "dfisht":
      Temporary3 = 10623;
      break;
    case "lopar":
      Temporary3 = 10629;
      break;
    case "ropar":
      Temporary3 = 10630;
      break;
    case "lbrke":
      Temporary3 = 10635;
      break;
    case "rbrke":
      Temporary3 = 10636;
      break;
    case "lbrkslu":
      Temporary3 = 10637;
      break;
    case "rbrksld":
      Temporary3 = 10638;
      break;
    case "lbrksld":
      Temporary3 = 10639;
      break;
    case "rbrkslu":
      Temporary3 = 10640;
      break;
    case "langd":
      Temporary3 = 10641;
      break;
    case "rangd":
      Temporary3 = 10642;
      break;
    case "lparlt":
      Temporary3 = 10643;
      break;
    case "rpargt":
      Temporary3 = 10644;
      break;
    case "gtlPar":
      Temporary3 = 10645;
      break;
    case "ltrPar":
      Temporary3 = 10646;
      break;
    case "vzigzag":
      Temporary3 = 10650;
      break;
    case "vangrt":
      Temporary3 = 10652;
      break;
    case "angrtvbd":
      Temporary3 = 10653;
      break;
    case "ange":
      Temporary3 = 10660;
      break;
    case "range":
      Temporary3 = 10661;
      break;
    case "dwangle":
      Temporary3 = 10662;
      break;
    case "uwangle":
      Temporary3 = 10663;
      break;
    case "angmsdaa":
      Temporary3 = 10664;
      break;
    case "angmsdab":
      Temporary3 = 10665;
      break;
    case "angmsdac":
      Temporary3 = 10666;
      break;
    case "angmsdad":
      Temporary3 = 10667;
      break;
    case "angmsdae":
      Temporary3 = 10668;
      break;
    case "angmsdaf":
      Temporary3 = 10669;
      break;
    case "angmsdag":
      Temporary3 = 10670;
      break;
    case "angmsdah":
      Temporary3 = 10671;
      break;
    case "bemptyv":
      Temporary3 = 10672;
      break;
    case "demptyv":
      Temporary3 = 10673;
      break;
    case "cemptyv":
      Temporary3 = 10674;
      break;
    case "raemptyv":
      Temporary3 = 10675;
      break;
    case "laemptyv":
      Temporary3 = 10676;
      break;
    case "ohbar":
      Temporary3 = 10677;
      break;
    case "omid":
      Temporary3 = 10678;
      break;
    case "opar":
      Temporary3 = 10679;
      break;
    case "operp":
      Temporary3 = 10681;
      break;
    case "olcross":
      Temporary3 = 10683;
      break;
    case "odsold":
      Temporary3 = 10684;
      break;
    case "olcir":
      Temporary3 = 10686;
      break;
    case "ofcir":
      Temporary3 = 10687;
      break;
    case "olt":
      Temporary3 = 10688;
      break;
    case "ogt":
      Temporary3 = 10689;
      break;
    case "cirscir":
      Temporary3 = 10690;
      break;
    case "cirE":
      Temporary3 = 10691;
      break;
    case "solb":
      Temporary3 = 10692;
      break;
    case "bsolb":
      Temporary3 = 10693;
      break;
    case "boxbox":
      Temporary3 = 10697;
      break;
    case "trisb":
      Temporary3 = 10701;
      break;
    case "rtriltri":
      Temporary3 = 10702;
      break;
    case "LeftTriangleBar":
      Temporary3 = 10703;
      break;
    case "RightTriangleBar":
      Temporary3 = 10704;
      break;
    case "race":
      Temporary3 = 10714;
      break;
    case "iinfin":
      Temporary3 = 10716;
      break;
    case "infintie":
      Temporary3 = 10717;
      break;
    case "nvinfin":
      Temporary3 = 10718;
      break;
    case "eparsl":
      Temporary3 = 10723;
      break;
    case "smeparsl":
      Temporary3 = 10724;
      break;
    case "eqvparsl":
      Temporary3 = 10725;
      break;
    case "lozf":
    case "blacklozenge":
      Temporary3 = 10731;
      break;
    case "RuleDelayed":
      Temporary3 = 10740;
      break;
    case "dsol":
      Temporary3 = 10742;
      break;
    case "xodot":
    case "bigodot":
      Temporary3 = 10752;
      break;
    case "xoplus":
    case "bigoplus":
      Temporary3 = 10753;
      break;
    case "xotime":
    case "bigotimes":
      Temporary3 = 10754;
      break;
    case "xuplus":
    case "biguplus":
      Temporary3 = 10756;
      break;
    case "xsqcup":
    case "bigsqcup":
      Temporary3 = 10758;
      break;
    case "qint":
    case "iiiint":
      Temporary3 = 10764;
      break;
    case "fpartint":
      Temporary3 = 10765;
      break;
    case "cirfnint":
      Temporary3 = 10768;
      break;
    case "awint":
      Temporary3 = 10769;
      break;
    case "rppolint":
      Temporary3 = 10770;
      break;
    case "scpolint":
      Temporary3 = 10771;
      break;
    case "npolint":
      Temporary3 = 10772;
      break;
    case "pointint":
      Temporary3 = 10773;
      break;
    case "quatint":
      Temporary3 = 10774;
      break;
    case "intlarhk":
      Temporary3 = 10775;
      break;
    case "pluscir":
      Temporary3 = 10786;
      break;
    case "plusacir":
      Temporary3 = 10787;
      break;
    case "simplus":
      Temporary3 = 10788;
      break;
    case "plusdu":
      Temporary3 = 10789;
      break;
    case "plussim":
      Temporary3 = 10790;
      break;
    case "plustwo":
      Temporary3 = 10791;
      break;
    case "mcomma":
      Temporary3 = 10793;
      break;
    case "minusdu":
      Temporary3 = 10794;
      break;
    case "loplus":
      Temporary3 = 10797;
      break;
    case "roplus":
      Temporary3 = 10798;
      break;
    case "Cross":
      Temporary3 = 10799;
      break;
    case "timesd":
      Temporary3 = 10800;
      break;
    case "timesbar":
      Temporary3 = 10801;
      break;
    case "smashp":
      Temporary3 = 10803;
      break;
    case "lotimes":
      Temporary3 = 10804;
      break;
    case "rotimes":
      Temporary3 = 10805;
      break;
    case "otimesas":
      Temporary3 = 10806;
      break;
    case "Otimes":
      Temporary3 = 10807;
      break;
    case "odiv":
      Temporary3 = 10808;
      break;
    case "triplus":
      Temporary3 = 10809;
      break;
    case "triminus":
      Temporary3 = 10810;
      break;
    case "tritime":
      Temporary3 = 10811;
      break;
    case "iprod":
    case "intprod":
      Temporary3 = 10812;
      break;
    case "amalg":
      Temporary3 = 10815;
      break;
    case "capdot":
      Temporary3 = 10816;
      break;
    case "ncup":
      Temporary3 = 10818;
      break;
    case "ncap":
      Temporary3 = 10819;
      break;
    case "capand":
      Temporary3 = 10820;
      break;
    case "cupor":
      Temporary3 = 10821;
      break;
    case "cupcap":
      Temporary3 = 10822;
      break;
    case "capcup":
      Temporary3 = 10823;
      break;
    case "cupbrcap":
      Temporary3 = 10824;
      break;
    case "capbrcup":
      Temporary3 = 10825;
      break;
    case "cupcup":
      Temporary3 = 10826;
      break;
    case "capcap":
      Temporary3 = 10827;
      break;
    case "ccups":
      Temporary3 = 10828;
      break;
    case "ccaps":
      Temporary3 = 10829;
      break;
    case "ccupssm":
      Temporary3 = 10832;
      break;
    case "And":
      Temporary3 = 10835;
      break;
    case "Or":
      Temporary3 = 10836;
      break;
    case "andand":
      Temporary3 = 10837;
      break;
    case "oror":
      Temporary3 = 10838;
      break;
    case "orslope":
      Temporary3 = 10839;
      break;
    case "andslope":
      Temporary3 = 10840;
      break;
    case "andv":
      Temporary3 = 10842;
      break;
    case "orv":
      Temporary3 = 10843;
      break;
    case "andd":
      Temporary3 = 10844;
      break;
    case "ord":
      Temporary3 = 10845;
      break;
    case "wedbar":
      Temporary3 = 10847;
      break;
    case "sdote":
      Temporary3 = 10854;
      break;
    case "simdot":
      Temporary3 = 10858;
      break;
    case "congdot":
      Temporary3 = 10861;
      break;
    case "easter":
      Temporary3 = 10862;
      break;
    case "apacir":
      Temporary3 = 10863;
      break;
    case "apE":
      Temporary3 = 10864;
      break;
    case "eplus":
      Temporary3 = 10865;
      break;
    case "pluse":
      Temporary3 = 10866;
      break;
    case "Esim":
      Temporary3 = 10867;
      break;
    case "Colone":
      Temporary3 = 10868;
      break;
    case "Equal":
      Temporary3 = 10869;
      break;
    case "eDDot":
    case "ddotseq":
      Temporary3 = 10871;
      break;
    case "equivDD":
      Temporary3 = 10872;
      break;
    case "ltcir":
      Temporary3 = 10873;
      break;
    case "gtcir":
      Temporary3 = 10874;
      break;
    case "ltquest":
      Temporary3 = 10875;
      break;
    case "gtquest":
      Temporary3 = 10876;
      break;
    case "les":
    case "LessSlantEqual":
    case "leqslant":
      Temporary3 = 10877;
      break;
    case "ges":
    case "GreaterSlantEqual":
    case "geqslant":
      Temporary3 = 10878;
      break;
    case "lesdot":
      Temporary3 = 10879;
      break;
    case "gesdot":
      Temporary3 = 10880;
      break;
    case "lesdoto":
      Temporary3 = 10881;
      break;
    case "gesdoto":
      Temporary3 = 10882;
      break;
    case "lesdotor":
      Temporary3 = 10883;
      break;
    case "gesdotol":
      Temporary3 = 10884;
      break;
    case "lap":
    case "lessapprox":
      Temporary3 = 10885;
      break;
    case "gap":
    case "gtrapprox":
      Temporary3 = 10886;
      break;
    case "lne":
    case "lneq":
      Temporary3 = 10887;
      break;
    case "gne":
    case "gneq":
      Temporary3 = 10888;
      break;
    case "lnap":
    case "lnapprox":
      Temporary3 = 10889;
      break;
    case "gnap":
    case "gnapprox":
      Temporary3 = 10890;
      break;
    case "lEg":
    case "lesseqqgtr":
      Temporary3 = 10891;
      break;
    case "gEl":
    case "gtreqqless":
      Temporary3 = 10892;
      break;
    case "lsime":
      Temporary3 = 10893;
      break;
    case "gsime":
      Temporary3 = 10894;
      break;
    case "lsimg":
      Temporary3 = 10895;
      break;
    case "gsiml":
      Temporary3 = 10896;
      break;
    case "lgE":
      Temporary3 = 10897;
      break;
    case "glE":
      Temporary3 = 10898;
      break;
    case "lesges":
      Temporary3 = 10899;
      break;
    case "gesles":
      Temporary3 = 10900;
      break;
    case "els":
    case "eqslantless":
      Temporary3 = 10901;
      break;
    case "egs":
    case "eqslantgtr":
      Temporary3 = 10902;
      break;
    case "elsdot":
      Temporary3 = 10903;
      break;
    case "egsdot":
      Temporary3 = 10904;
      break;
    case "el":
      Temporary3 = 10905;
      break;
    case "eg":
      Temporary3 = 10906;
      break;
    case "siml":
      Temporary3 = 10909;
      break;
    case "simg":
      Temporary3 = 10910;
      break;
    case "simlE":
      Temporary3 = 10911;
      break;
    case "simgE":
      Temporary3 = 10912;
      break;
    case "LessLess":
      Temporary3 = 10913;
      break;
    case "GreaterGreater":
      Temporary3 = 10914;
      break;
    case "glj":
      Temporary3 = 10916;
      break;
    case "gla":
      Temporary3 = 10917;
      break;
    case "ltcc":
      Temporary3 = 10918;
      break;
    case "gtcc":
      Temporary3 = 10919;
      break;
    case "lescc":
      Temporary3 = 10920;
      break;
    case "gescc":
      Temporary3 = 10921;
      break;
    case "smt":
      Temporary3 = 10922;
      break;
    case "lat":
      Temporary3 = 10923;
      break;
    case "smte":
      Temporary3 = 10924;
      break;
    case "late":
      Temporary3 = 10925;
      break;
    case "bumpE":
      Temporary3 = 10926;
      break;
    case "pre":
    case "preceq":
    case "PrecedesEqual":
      Temporary3 = 10927;
      break;
    case "sce":
    case "succeq":
    case "SucceedsEqual":
      Temporary3 = 10928;
      break;
    case "prE":
      Temporary3 = 10931;
      break;
    case "scE":
      Temporary3 = 10932;
      break;
    case "prnE":
    case "precneqq":
      Temporary3 = 10933;
      break;
    case "scnE":
    case "succneqq":
      Temporary3 = 10934;
      break;
    case "prap":
    case "precapprox":
      Temporary3 = 10935;
      break;
    case "scap":
    case "succapprox":
      Temporary3 = 10936;
      break;
    case "prnap":
    case "precnapprox":
      Temporary3 = 10937;
      break;
    case "scnap":
    case "succnapprox":
      Temporary3 = 10938;
      break;
    case "Pr":
      Temporary3 = 10939;
      break;
    case "Sc":
      Temporary3 = 10940;
      break;
    case "subdot":
      Temporary3 = 10941;
      break;
    case "supdot":
      Temporary3 = 10942;
      break;
    case "subplus":
      Temporary3 = 10943;
      break;
    case "supplus":
      Temporary3 = 10944;
      break;
    case "submult":
      Temporary3 = 10945;
      break;
    case "supmult":
      Temporary3 = 10946;
      break;
    case "subedot":
      Temporary3 = 10947;
      break;
    case "supedot":
      Temporary3 = 10948;
      break;
    case "subE":
    case "subseteqq":
      Temporary3 = 10949;
      break;
    case "supE":
    case "supseteqq":
      Temporary3 = 10950;
      break;
    case "subsim":
      Temporary3 = 10951;
      break;
    case "supsim":
      Temporary3 = 10952;
      break;
    case "subnE":
    case "subsetneqq":
      Temporary3 = 10955;
      break;
    case "supnE":
    case "supsetneqq":
      Temporary3 = 10956;
      break;
    case "csub":
      Temporary3 = 10959;
      break;
    case "csup":
      Temporary3 = 10960;
      break;
    case "csube":
      Temporary3 = 10961;
      break;
    case "csupe":
      Temporary3 = 10962;
      break;
    case "subsup":
      Temporary3 = 10963;
      break;
    case "supsub":
      Temporary3 = 10964;
      break;
    case "subsub":
      Temporary3 = 10965;
      break;
    case "supsup":
      Temporary3 = 10966;
      break;
    case "suphsub":
      Temporary3 = 10967;
      break;
    case "supdsub":
      Temporary3 = 10968;
      break;
    case "forkv":
      Temporary3 = 10969;
      break;
    case "topfork":
      Temporary3 = 10970;
      break;
    case "mlcp":
      Temporary3 = 10971;
      break;
    case "Dashv":
    case "DoubleLeftTee":
      Temporary3 = 10980;
      break;
    case "Vdashl":
      Temporary3 = 10982;
      break;
    case "Barv":
      Temporary3 = 10983;
      break;
    case "vBar":
      Temporary3 = 10984;
      break;
    case "vBarv":
      Temporary3 = 10985;
      break;
    case "Vbar":
      Temporary3 = 10987;
      break;
    case "Not":
      Temporary3 = 10988;
      break;
    case "bNot":
      Temporary3 = 10989;
      break;
    case "rnmid":
      Temporary3 = 10990;
      break;
    case "cirmid":
      Temporary3 = 10991;
      break;
    case "midcir":
      Temporary3 = 10992;
      break;
    case "topcir":
      Temporary3 = 10993;
      break;
    case "nhpar":
      Temporary3 = 10994;
      break;
    case "parsim":
      Temporary3 = 10995;
      break;
    case "parsl":
      Temporary3 = 11005;
      break;
    case "fflig":
      Temporary3 = 64256;
      break;
    case "filig":
      Temporary3 = 64257;
      break;
    case "fllig":
      Temporary3 = 64258;
      break;
    case "ffilig":
      Temporary3 = 64259;
      break;
    case "ffllig":
      Temporary3 = 64260;
      break;
    case "Ascr":
      Temporary3 = 119964;
      break;
    case "Cscr":
      Temporary3 = 119966;
      break;
    case "Dscr":
      Temporary3 = 119967;
      break;
    case "Gscr":
      Temporary3 = 119970;
      break;
    case "Jscr":
      Temporary3 = 119973;
      break;
    case "Kscr":
      Temporary3 = 119974;
      break;
    case "Nscr":
      Temporary3 = 119977;
      break;
    case "Oscr":
      Temporary3 = 119978;
      break;
    case "Pscr":
      Temporary3 = 119979;
      break;
    case "Qscr":
      Temporary3 = 119980;
      break;
    case "Sscr":
      Temporary3 = 119982;
      break;
    case "Tscr":
      Temporary3 = 119983;
      break;
    case "Uscr":
      Temporary3 = 119984;
      break;
    case "Vscr":
      Temporary3 = 119985;
      break;
    case "Wscr":
      Temporary3 = 119986;
      break;
    case "Xscr":
      Temporary3 = 119987;
      break;
    case "Yscr":
      Temporary3 = 119988;
      break;
    case "Zscr":
      Temporary3 = 119989;
      break;
    case "ascr":
      Temporary3 = 119990;
      break;
    case "bscr":
      Temporary3 = 119991;
      break;
    case "cscr":
      Temporary3 = 119992;
      break;
    case "dscr":
      Temporary3 = 119993;
      break;
    case "fscr":
      Temporary3 = 119995;
      break;
    case "hscr":
      Temporary3 = 119997;
      break;
    case "iscr":
      Temporary3 = 119998;
      break;
    case "jscr":
      Temporary3 = 119999;
      break;
    case "kscr":
      Temporary3 = 120000;
      break;
    case "lscr":
      Temporary3 = 120001;
      break;
    case "mscr":
      Temporary3 = 120002;
      break;
    case "nscr":
      Temporary3 = 120003;
      break;
    case "pscr":
      Temporary3 = 120005;
      break;
    case "qscr":
      Temporary3 = 120006;
      break;
    case "rscr":
      Temporary3 = 120007;
      break;
    case "sscr":
      Temporary3 = 120008;
      break;
    case "tscr":
      Temporary3 = 120009;
      break;
    case "uscr":
      Temporary3 = 120010;
      break;
    case "vscr":
      Temporary3 = 120011;
      break;
    case "wscr":
      Temporary3 = 120012;
      break;
    case "xscr":
      Temporary3 = 120013;
      break;
    case "yscr":
      Temporary3 = 120014;
      break;
    case "zscr":
      Temporary3 = 120015;
      break;
    case "Afr":
      Temporary3 = 120068;
      break;
    case "Bfr":
      Temporary3 = 120069;
      break;
    case "Dfr":
      Temporary3 = 120071;
      break;
    case "Efr":
      Temporary3 = 120072;
      break;
    case "Ffr":
      Temporary3 = 120073;
      break;
    case "Gfr":
      Temporary3 = 120074;
      break;
    case "Jfr":
      Temporary3 = 120077;
      break;
    case "Kfr":
      Temporary3 = 120078;
      break;
    case "Lfr":
      Temporary3 = 120079;
      break;
    case "Mfr":
      Temporary3 = 120080;
      break;
    case "Nfr":
      Temporary3 = 120081;
      break;
    case "Ofr":
      Temporary3 = 120082;
      break;
    case "Pfr":
      Temporary3 = 120083;
      break;
    case "Qfr":
      Temporary3 = 120084;
      break;
    case "Sfr":
      Temporary3 = 120086;
      break;
    case "Tfr":
      Temporary3 = 120087;
      break;
    case "Ufr":
      Temporary3 = 120088;
      break;
    case "Vfr":
      Temporary3 = 120089;
      break;
    case "Wfr":
      Temporary3 = 120090;
      break;
    case "Xfr":
      Temporary3 = 120091;
      break;
    case "Yfr":
      Temporary3 = 120092;
      break;
    case "afr":
      Temporary3 = 120094;
      break;
    case "bfr":
      Temporary3 = 120095;
      break;
    case "cfr":
      Temporary3 = 120096;
      break;
    case "dfr":
      Temporary3 = 120097;
      break;
    case "efr":
      Temporary3 = 120098;
      break;
    case "ffr":
      Temporary3 = 120099;
      break;
    case "gfr":
      Temporary3 = 120100;
      break;
    case "hfr":
      Temporary3 = 120101;
      break;
    case "ifr":
      Temporary3 = 120102;
      break;
    case "jfr":
      Temporary3 = 120103;
      break;
    case "kfr":
      Temporary3 = 120104;
      break;
    case "lfr":
      Temporary3 = 120105;
      break;
    case "mfr":
      Temporary3 = 120106;
      break;
    case "nfr":
      Temporary3 = 120107;
      break;
    case "ofr":
      Temporary3 = 120108;
      break;
    case "pfr":
      Temporary3 = 120109;
      break;
    case "qfr":
      Temporary3 = 120110;
      break;
    case "rfr":
      Temporary3 = 120111;
      break;
    case "sfr":
      Temporary3 = 120112;
      break;
    case "tfr":
      Temporary3 = 120113;
      break;
    case "ufr":
      Temporary3 = 120114;
      break;
    case "vfr":
      Temporary3 = 120115;
      break;
    case "wfr":
      Temporary3 = 120116;
      break;
    case "xfr":
      Temporary3 = 120117;
      break;
    case "yfr":
      Temporary3 = 120118;
      break;
    case "zfr":
      Temporary3 = 120119;
      break;
    case "Aopf":
      Temporary3 = 120120;
      break;
    case "Bopf":
      Temporary3 = 120121;
      break;
    case "Dopf":
      Temporary3 = 120123;
      break;
    case "Eopf":
      Temporary3 = 120124;
      break;
    case "Fopf":
      Temporary3 = 120125;
      break;
    case "Gopf":
      Temporary3 = 120126;
      break;
    case "Iopf":
      Temporary3 = 120128;
      break;
    case "Jopf":
      Temporary3 = 120129;
      break;
    case "Kopf":
      Temporary3 = 120130;
      break;
    case "Lopf":
      Temporary3 = 120131;
      break;
    case "Mopf":
      Temporary3 = 120132;
      break;
    case "Oopf":
      Temporary3 = 120134;
      break;
    case "Sopf":
      Temporary3 = 120138;
      break;
    case "Topf":
      Temporary3 = 120139;
      break;
    case "Uopf":
      Temporary3 = 120140;
      break;
    case "Vopf":
      Temporary3 = 120141;
      break;
    case "Wopf":
      Temporary3 = 120142;
      break;
    case "Xopf":
      Temporary3 = 120143;
      break;
    case "Yopf":
      Temporary3 = 120144;
      break;
    case "aopf":
      Temporary3 = 120146;
      break;
    case "bopf":
      Temporary3 = 120147;
      break;
    case "copf":
      Temporary3 = 120148;
      break;
    case "dopf":
      Temporary3 = 120149;
      break;
    case "eopf":
      Temporary3 = 120150;
      break;
    case "fopf":
      Temporary3 = 120151;
      break;
    case "gopf":
      Temporary3 = 120152;
      break;
    case "hopf":
      Temporary3 = 120153;
      break;
    case "iopf":
      Temporary3 = 120154;
      break;
    case "jopf":
      Temporary3 = 120155;
      break;
    case "kopf":
      Temporary3 = 120156;
      break;
    case "lopf":
      Temporary3 = 120157;
      break;
    case "mopf":
      Temporary3 = 120158;
      break;
    case "nopf":
      Temporary3 = 120159;
      break;
    case "oopf":
      Temporary3 = 120160;
      break;
    case "popf":
      Temporary3 = 120161;
      break;
    case "qopf":
      Temporary3 = 120162;
      break;
    case "ropf":
      Temporary3 = 120163;
      break;
    case "sopf":
      Temporary3 = 120164;
      break;
    case "topf":
      Temporary3 = 120165;
      break;
    case "uopf":
      Temporary3 = 120166;
      break;
    case "vopf":
      Temporary3 = 120167;
      break;
    case "wopf":
      Temporary3 = 120168;
      break;
    case "xopf":
      Temporary3 = 120169;
      break;
    case "yopf":
      Temporary3 = 120170;
      break;
    case "zopf":
      Temporary3 = 120171;
      break;
    default: 
      Temporary3 = 0;
      break;
    }
    result_1140850873 = Temporary3;
  };

  return result_1140850873;

}

function entityToUtf8_1140850925(entity_1140850926) {
  var result_1140850927 = [];

    var rune_1140850928 = entityToRune_1140850871(entity_1140850926);
    if ((rune_1140850928 <= 0)) {
    result_1140850927 = nimCopy(null, [], NTI33554449);
    }
    else {
      result_1140850927 = nimCopy(null, nuctoUTF8(rune_1140850928), NTI33554449);
    }
    

  return result_1140850927;

}

function parse_1140850939(x_1140850940, errors_1140850941, errors_1140850941_Idx) {
  var result_1140851023 = null;

    switch (kind_1174405295(x_1140850940)) {
    case 4:
      result_1140851023 = newComment_1191182481(rawData_1174405312(x_1140850940));
      next_1174405751(x_1140850940);
      break;
    case 2:
    case 3:
      result_1140851023 = newText_1191182471(rawData_1174405312(x_1140850940));
      next_1174405751(x_1140850940);
      break;
    case 5:
    case 13:
      next_1174405751(x_1140850940);
      break;
    case 0:
      errors_1140850941[errors_1140850941_Idx].push(errorMsg_1174405327(x_1140850940));;
      next_1174405751(x_1140850940);
      break;
    case 6:
      result_1140851023 = newElement_1191182432(nsuToLowerAsciiStr(rawData_1174405312(x_1140850940)));
      next_1174405751(x_1140850940);
      untilElementEnd_1140850950(x_1140850940, result_1140851023, errors_1140850941, errors_1140850941_Idx);
      break;
    case 7:
      errors_1140850941[errors_1140850941_Idx].push(errorMsg_1174405360(x_1140850940, ([117,110,101,120,112,101,99,116,101,100,32,101,110,100,105,110,103,32,116,97,103,58,32] || []).concat(rawData_1174405312(x_1140850940) || [])));;
      break;
    case 8:
      result_1140851023 = newElement_1191182432(nsuToLowerAsciiStr(rawData_1174405312(x_1140850940)));
      next_1174405751(x_1140850940);
      attrsHEX3D_1191183104(result_1140851023, nstnewStringTableWithTableConstr([], 0));
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            switch (kind_1174405295(x_1140850940)) {
            case 9:
              nstPut(attrs_1191183089(result_1140851023), rawData_1174405312(x_1140850940), rawData2_1174405315(x_1140850940));
              next_1174405751(x_1140850940);
              break;
            case 10:
              next_1174405751(x_1140850940);
              break Label1;
              break;
            case 0:
              errors_1140850941[errors_1140850941_Idx].push(errorMsg_1174405327(x_1140850940));;
              next_1174405751(x_1140850940);
              break Label1;
              break;
            default: 
              errors_1140850941[errors_1140850941_Idx].push(errorMsg_1174405360(x_1140850940, [39,62,39,32,101,120,112,101,99,116,101,100]));;
              next_1174405751(x_1140850940);
              break Label1;
              break;
            }
          }
      };
      untilElementEnd_1140850950(x_1140850940, result_1140851023, errors_1140850941, errors_1140850941_Idx);
      break;
    case 9:
    case 10:
      errors_1140850941[errors_1140850941_Idx].push(errorMsg_1174405360(x_1140850940, [60,115,111,109,101,95,116,97,103,62,32,101,120,112,101,99,116,101,100]));;
      next_1174405751(x_1140850940);
      break;
    case 11:
      result_1140851023 = newCData_1191182484(rawData_1174405312(x_1140850940));
      next_1174405751(x_1140850940);
      break;
    case 12:
      var u_1140851044 = entityToUtf8_1140850925(rawData_1174405312(x_1140850940));
      if (!(((u_1140851044).length == 0))) {
      result_1140851023 = newText_1191182471(u_1140851044);
      }
      
      next_1174405751(x_1140850940);
      break;
    case 1:
      break;
    }

  return result_1140851023;

}

function close_1157627961(s_1157627962) {
    if ((!((s_1157627962 == null)) && !((s_1157627962.closeImpl == null)))) {
    s_1157627962.closeImpl(s_1157627962);
    }
    

  
}

function close_1224736782(L_1224736783) {
    close_1157627961(L_1224736783.input);

  
}

function close_1174405293(my_1174405294) {
    close_1224736782(my_1174405294);

  
}

function HEX5BHEX5D_1191182999(n_1191183000, n_1191183000_Idx, i_1191183001) {
    var Temporary1;
    var Temporary2;

  var result_1191183002 = null;
  var result_1191183002_Idx = 0;

    if (!((n_1191183000[n_1191183000_Idx].k == 2))) {
    failedAssertImpl_268435541(([120,109,108,116,114,101,101,46,110,105,109,40,53,52,49,44,32,52,41,32,96,110,46,107,32,61,61,32,120,110,69,108,101,109,101,110,116,96,32,71,111,116,32] || []).concat(reprEnum(n_1191183000[n_1191183000_Idx].k, NTI1191182340) || []));
    }
    
    var Temporary1 = n_1191183000[n_1191183000_Idx];
    if (ConstSet456[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1191182340)); }
    result_1191183002 = (Temporary2 = Temporary1.s, Temporary2); result_1191183002_Idx = chckIndx(i_1191183001, 0, (Temporary2).length - 1);

  return [result_1191183002, result_1191183002_Idx];

}

function parseHtml_1140851060(s_1140851061, filename_1140851062, errors_1140851063, errors_1140851063_Idx) {
    var Temporary3;

  var result_1140851064 = [null];

    var x_1140851065 = [({m_type: NTI1174405127, a: [], b: [], c: [], kind: 0, err: 0, state: 0, cIsEmpty: false, filename: [], options: {}, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
    open_1174405185(x_1140851065[0], s_1140851061, filename_1140851062, ConstSet429);
    next_1174405751(x_1140851065[0]);
    if ((kind_1174405295(x_1140851065[0]) == 13)) {
    next_1174405751(x_1140851065[0]);
    }
    
    result_1140851064[0] = newElement_1191182432([100,111,99,117,109,101,110,116]);
    addNode_1140850932(result_1140851064[0], parse_1140850939(x_1140851065[0], errors_1140851063, errors_1140851063_Idx));
    Label1: {
        Label2: while (true) {
        if (!!((kind_1174405295(x_1140851065[0]) == 1))) break Label2;
          var oldPos_1140851074 = x_1140851065[0].bufpos;
          addNode_1140850932(result_1140851064[0], parse_1140850939(x_1140851065[0], errors_1140851063, errors_1140851063_Idx));
          if ((x_1140851065[0].bufpos == oldPos_1140851074)) {
          next_1174405751(x_1140851065[0]);
          }
          
        }
    };
    close_1174405293(x_1140851065[0]);
    if ((len_1191182970(result_1140851064[0]) == 1)) {
    result_1140851064[0] = (Temporary3 = HEX5BHEX5D_1191182999(result_1140851064, 0, 0), Temporary3)[0][Temporary3[1]];
    }
    

  return result_1140851064[0];

}

function parseHtml_1140851075(s_1140851076) {
  var result_1140851077 = null;

    var errors_1140851082 = [[]];
    result_1140851077 = parseHtml_1140851060(s_1140851076, [117,110,107,110,111,119,110,95,104,116,109,108,95,100,111,99], errors_1140851082, 0);

  return result_1140851077;

}

function ssClose_1157629029(s_1157629030) {
    var s_1157629031 = s_1157629030;
    s_1157629031.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1157628676(s_1157628677) {
  var result_1157628678 = false;

  BeforeRet: {
    var s_1157628679 = s_1157628677;
    result_1157628678 = ((s_1157628679.data).length <= s_1157628679.pos);
    break BeforeRet;
  };

  return result_1157628678;

}

function clamp_1157628716(x_1157628718, a_1157628719, b_1157628720) {
  var result_1157628721 = 0;

  BeforeRet: {
    if ((x_1157628718 < a_1157628719)) {
    result_1157628721 = a_1157628719;
    break BeforeRet;
    }
    
    if ((b_1157628720 < x_1157628718)) {
    result_1157628721 = b_1157628720;
    break BeforeRet;
    }
    
    result_1157628721 = x_1157628718;
    break BeforeRet;
  };

  return result_1157628721;

}

function ssSetPosition_1157628712(s_1157628713, pos_1157628714) {
    var s_1157628715 = s_1157628713;
    s_1157628715.pos = clamp_1157628716(pos_1157628714, 0, (s_1157628715.data).length);

  
}

function ssGetPosition_1157628722(s_1157628723) {
  var result_1157628724 = 0;

  BeforeRet: {
    var s_1157628725 = s_1157628723;
    result_1157628724 = s_1157628725.pos;
    break BeforeRet;
  };

  return result_1157628724;

}

function HEX5BHEX5DHEX3D_754975891(s_754975894, s_754975894_Idx, x_754975895, b_754975896) {
    var a_754975898 = x_754975895.a;
    var L_754975900 = addInt(subInt(x_754975895.b, a_754975898), 1);
    if ((L_754975900 == (b_754975896).length)) {
    Label1: {
      var i_754975905 = 0;
      var i_587204068 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_587204068 < L_754975900)) break Label3;
            i_754975905 = i_587204068;
            s_754975894[s_754975894_Idx][chckIndx(addInt(i_754975905, a_754975898), 0, (s_754975894[s_754975894_Idx]).length - 1)] = b_754975896[chckIndx(i_754975905, 0, (b_754975896).length - 1)];
            i_587204068 = addInt(i_587204068, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_754975911 = subInt((b_754975896).length, nimMax(0, L_754975900));
      var newLenHEX60gensym109_754975912 = addInt((s_754975894[s_754975894_Idx]).length, shiftHEX60gensym109_754975911);
      if ((0 < shiftHEX60gensym109_754975911)) {
      if (s_754975894[s_754975894_Idx].length < chckRange(newLenHEX60gensym109_754975912, 0, 2147483647)) { for (var i = s_754975894[s_754975894_Idx].length; i < chckRange(newLenHEX60gensym109_754975912, 0, 2147483647); ++i) s_754975894[s_754975894_Idx].push(0); }
         else {s_754975894[s_754975894_Idx].length = chckRange(newLenHEX60gensym109_754975912, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_754975918 = 0;
        var colontmp__587204071 = 0;
        var colontmp__587204072 = 0;
        colontmp__587204071 = subInt(newLenHEX60gensym109_754975912, 1);
        colontmp__587204072 = addInt(a_754975898, (b_754975896).length);
        var res_587204073 = colontmp__587204071;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__587204072 <= res_587204073)) break Label6;
              iHEX60gensym109_754975918 = res_587204073;
              s_754975894[s_754975894_Idx][chckIndx(iHEX60gensym109_754975918, 0, (s_754975894[s_754975894_Idx]).length - 1)] = s_754975894[s_754975894_Idx][chckIndx(subInt(iHEX60gensym109_754975918, shiftHEX60gensym109_754975911), 0, (s_754975894[s_754975894_Idx]).length - 1)];
              res_587204073 = subInt(res_587204073, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_754975924 = 0;
          var colontmp__587204076 = 0;
          var colontmp__587204077 = 0;
          colontmp__587204076 = addInt(a_754975898, (b_754975896).length);
          colontmp__587204077 = subInt(newLenHEX60gensym109_754975912, 1);
          var res_587204078 = colontmp__587204076;
          Label8: {
              Label9: while (true) {
              if (!(res_587204078 <= colontmp__587204077)) break Label9;
                iHEX60gensym109_754975924 = res_587204078;
                s_754975894[s_754975894_Idx][chckIndx(iHEX60gensym109_754975924, 0, (s_754975894[s_754975894_Idx]).length - 1)] = s_754975894[s_754975894_Idx][chckIndx(subInt(iHEX60gensym109_754975924, shiftHEX60gensym109_754975911), 0, (s_754975894[s_754975894_Idx]).length - 1)];
                res_587204078 = addInt(res_587204078, 1);
              }
          };
        };
        if (s_754975894[s_754975894_Idx].length < chckRange(newLenHEX60gensym109_754975912, 0, 2147483647)) { for (var i = s_754975894[s_754975894_Idx].length; i < chckRange(newLenHEX60gensym109_754975912, 0, 2147483647); ++i) s_754975894[s_754975894_Idx].push(0); }
         else {s_754975894[s_754975894_Idx].length = chckRange(newLenHEX60gensym109_754975912, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_754975929 = 0;
        var colontmp__587204081 = 0;
        colontmp__587204081 = (b_754975896).length;
        var i_587204082 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_587204082 < colontmp__587204081)) break Label12;
              iHEX60gensym109_754975929 = i_587204082;
              s_754975894[s_754975894_Idx][chckIndx(addInt(a_754975898, iHEX60gensym109_754975929), 0, (s_754975894[s_754975894_Idx]).length - 1)] = b_754975896[chckIndx(iHEX60gensym109_754975929, 0, (b_754975896).length - 1)];
              i_587204082 = addInt(i_587204082, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1157628726(s_1157628727, buffer_1157628728, buffer_1157628728_Idx, slice_1157628730) {
  var result_1157628731 = 0;

    var s_1157628732 = s_1157628727;
    result_1157628731 = nimMin(subInt(addInt(slice_1157628730.b, 1), slice_1157628730.a), subInt((s_1157628732.data).length, s_1157628732.pos));
    if ((0 < result_1157628731)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_754975891(buffer_1157628728, buffer_1157628728_Idx, HEX2EHEX2E_1056964656(slice_1157628730.a, subInt(addInt(slice_1157628730.a, result_1157628731), 1)), HEX5BHEX5D_754975999(s_1157628732.data, HEX2EHEX2E_1056964656(s_1157628732.pos, subInt(addInt(s_1157628732.pos, result_1157628731), 1))));
    s_1157628732.pos = addInt(s_1157628732.pos, result_1157628731);
    }
    else {
      result_1157628731 = 0;
    }
    

  return result_1157628731;

}

function ssReadData_1157628828(s_1157628829, buffer_1157628830, buffer_1157628830_Idx, bufLen_1157628831) {
  var result_1157628832 = 0;

    var s_1157628833 = s_1157628829;
    result_1157628832 = nimMin(bufLen_1157628831, subInt((s_1157628833.data).length, s_1157628833.pos));
    if ((0 < result_1157628832)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_754975891(buffer_1157628830, buffer_1157628830_Idx, HEX2EHEX2E_1056964656(0, subInt(result_1157628832, 1)), HEX5BHEX5D_754975999(s_1157628833.data, HEX2EHEX2E_1056964656(s_1157628833.pos, subInt(addInt(s_1157628833.pos, result_1157628832), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555178, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1157628833.pos = addInt(s_1157628833.pos, result_1157628832);
    }
    else {
      result_1157628832 = 0;
    }
    

  return result_1157628832;

}

function ssPeekData_1157628921(s_1157628922, buffer_1157628923, buffer_1157628923_Idx, bufLen_1157628924) {
  var result_1157628925 = 0;

    var s_1157628926 = s_1157628922;
    result_1157628925 = nimMin(bufLen_1157628924, subInt((s_1157628926.data).length, s_1157628926.pos));
    if ((0 < result_1157628925)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_754975891(buffer_1157628923, buffer_1157628923_Idx, HEX2EHEX2E_1056964656(0, subInt(result_1157628925, 1)), HEX5BHEX5D_754975999(s_1157628926.data, HEX2EHEX2E_1056964656(s_1157628926.pos, subInt(addInt(s_1157628926.pos, result_1157628925), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555178, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1157628925 = 0;
    }
    

  return result_1157628925;

}

function ssWriteData_1157628973(s_1157628974, buffer_1157628975, buffer_1157628975_Idx, bufLen_1157628976) {
    var Temporary1;

  BeforeRet: {
    var s_1157628977 = s_1157628974;
    if ((bufLen_1157628976 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1157628977.data).length < addInt(s_1157628977.pos, bufLen_1157628976))) {
    if (s_1157628977.data.length < (Temporary1 = chckRange(addInt(s_1157628977.pos, bufLen_1157628976), 0, 2147483647), Temporary1)) { for (var i = s_1157628977.data.length; i < Temporary1; ++i) s_1157628977.data.push(0); }
         else {s_1157628977.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_754975891(s_1157628977, "data", HEX2EHEX2E_1056964656(s_1157628977.pos, subInt(addInt(s_1157628977.pos, bufLen_1157628976), 1)), HEX5BHEX5D_754975999(buffer_1157628975[buffer_1157628975_Idx], HEX2EHEX2E_1056964656(0, subInt(bufLen_1157628976, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555178, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1157628977.pos = addInt(s_1157628977.pos, bufLen_1157628976);
  };

  
}

function newStringStream_1157629032(s_1157629033) {
  var result_1157629034 = null;

    result_1157629034 = ({m_type: NTI1157628409, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1157629034.data = nimCopy(null, s_1157629033, NTI33554449);
    result_1157629034.pos = 0;
    result_1157629034.closeImpl = ssClose_1157629029;
    result_1157629034.atEndImpl = ssAtEnd_1157628676;
    result_1157629034.setPositionImpl = ssSetPosition_1157628712;
    result_1157629034.getPositionImpl = ssGetPosition_1157628722;
    result_1157629034.readDataStrImpl = ssReadDataStr_1157628726;
    result_1157629034.readDataImpl = ssReadData_1157628828;
    result_1157629034.peekDataImpl = ssPeekData_1157628921;
    result_1157629034.writeDataImpl = ssWriteData_1157628973;

  return result_1157629034;

}

function parseHtml_1140851083(html_1140851084) {
  var result_1140851085 = null;

    result_1140851085 = parseHtml_1140851075(newStringStream_1157629032(html_1140851084));

  return result_1140851085;

}

function addIndent_1191183170(result_1191183171, result_1191183171_Idx, indent_1191183172, addNewLines_1191183173) {
    if (addNewLines_1191183173) {
    result_1191183171[result_1191183171_Idx].push.apply(result_1191183171[result_1191183171_Idx], [10]);;
    }
    
    Label1: {
      var i_1191183178 = 0;
      var res_587204100 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_587204100 <= indent_1191183172)) break Label3;
            i_1191183178 = res_587204100;
            addChar(result_1191183171[result_1191183171_Idx], 32);;
            res_587204100 = addInt(res_587204100, 1);
          }
      };
    };

  
}

function kind_1191182980(n_1191182981) {
  var result_1191182982 = 0;

    result_1191182982 = n_1191182981.k;

  return result_1191182982;

}

function addEscaped_1191183163(result_1191183164, result_1191183164_Idx, s_1191183165) {
    Label1: {
      var c_1191183166 = 0;
      var i_587204111 = 0;
      var L_587204112 = (s_1191183165).length;
      Label2: {
          Label3: while (true) {
          if (!(i_587204111 < L_587204112)) break Label3;
            c_1191183166 = s_1191183165[chckIndx(i_587204111, 0, (s_1191183165).length - 1)];
            switch (c_1191183166) {
            case 60:
              result_1191183164[result_1191183164_Idx].push.apply(result_1191183164[result_1191183164_Idx], [38,108,116,59]);;
              break;
            case 62:
              result_1191183164[result_1191183164_Idx].push.apply(result_1191183164[result_1191183164_Idx], [38,103,116,59]);;
              break;
            case 38:
              result_1191183164[result_1191183164_Idx].push.apply(result_1191183164[result_1191183164_Idx], [38,97,109,112,59]);;
              break;
            case 34:
              result_1191183164[result_1191183164_Idx].push.apply(result_1191183164[result_1191183164_Idx], [38,113,117,111,116,59]);;
              break;
            case 39:
              result_1191183164[result_1191183164_Idx].push.apply(result_1191183164[result_1191183164_Idx], [38,97,112,111,115,59]);;
              break;
            default: 
              addChar(result_1191183164[result_1191183164_Idx], c_1191183166);;
              break;
            }
            i_587204111 = addInt(i_587204111, 1);
            if (!(((s_1191183165).length == L_587204112))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function addImpl_1191183179(result_1191183180, result_1191183180_Idx, n_1191183181, indent_1191183182, indWidth_1191183183, addNewLines_1191183184, lastNodeIsText_1191183185) {
      var Temporary1;
        
function noWhitespace_1191183186(n_1191183187) {
          var result_1191183188 = false;

          BeforeRet: {
            Label1: {
              var i_1191183193 = 0;
              var colontmp__587204103 = 0;
              colontmp__587204103 = len_1191182970(n_1191183187);
              var i_587204104 = 0;
              Label2: {
                  Label3: while (true) {
                  if (!(i_587204104 < colontmp__587204103)) break Label3;
                    i_1191183193 = i_587204104;
                    if ((ConstSet457[kind_1191182980(HEX5BHEX5D_1191182983(n_1191183187, i_1191183193))] != undefined)) {
                    result_1191183188 = true;
                    break BeforeRet;
                    }
                    
                    i_587204104 = addInt(i_587204104, 1);
                  }
              };
            };
          };

          return result_1191183188;

        }
      var Temporary2;
        var Temporary3;
        var Temporary5;
                
function addEscapedAttr_1191183198(result_1191183199, result_1191183199_Idx, s_1191183200) {
                    Label1: {
                      var c_1191183201 = 0;
                      var i_587204107 = 0;
                      var L_587204108 = (s_1191183200).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_587204107 < L_587204108)) break Label3;
                            c_1191183201 = s_1191183200[chckIndx(i_587204107, 0, (s_1191183200).length - 1)];
                            switch (c_1191183201) {
                            case 60:
                              result_1191183199[result_1191183199_Idx].push.apply(result_1191183199[result_1191183199_Idx], [38,108,116,59]);;
                              break;
                            case 62:
                              result_1191183199[result_1191183199_Idx].push.apply(result_1191183199[result_1191183199_Idx], [38,103,116,59]);;
                              break;
                            case 38:
                              result_1191183199[result_1191183199_Idx].push.apply(result_1191183199[result_1191183199_Idx], [38,97,109,112,59]);;
                              break;
                            case 34:
                              result_1191183199[result_1191183199_Idx].push.apply(result_1191183199[result_1191183199_Idx], [38,113,117,111,116,59]);;
                              break;
                            default: 
                              addChar(result_1191183199[result_1191183199_Idx], c_1191183201);;
                              break;
                            }
                            i_587204107 = addInt(i_587204107, 1);
                            if (!(((s_1191183200).length == L_587204108))) {
                            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                            }
                            
                          }
                      };
                    };

                  
                }
      var Temporary9;
      var Temporary13;
      var Temporary14;
      var Temporary15;
      var Temporary16;
      var Temporary17;
      var Temporary18;

  BeforeRet: {
    if ((n_1191183181 == null)) {
    break BeforeRet;
    }
    
    switch (n_1191183181.k) {
    case 2:
      if (((0 < indent_1191183182) && !(lastNodeIsText_1191183185))) {
      addIndent_1191183170(result_1191183180, result_1191183180_Idx, indent_1191183182, addNewLines_1191183184);
      }
      
      if (noWhitespace_1191183186(n_1191183181)) {
      Temporary1 = false;
      }
      else {
      Temporary1 = addNewLines_1191183184;
      }
      
      var addNewLines_1191183206 = Temporary1;
      addChar(result_1191183180[result_1191183180_Idx], 60);;
      var Temporary2 = n_1191183181;
      if (ConstSet458[Temporary2.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fTag\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary2.k, NTI1191182340)); }
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], Temporary2.fTag);;
        var Temporary3 = n_1191183181;
        if (ConstSet459[Temporary3.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fAttr\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary3.k, NTI1191182340)); }
      if (!((Temporary3.fAttr == null))) {
      Label4: {
        var key_1191183210 = [];
        var val_1191183211 = [];
        var colontmp__587204085 = null;
        var Temporary5 = n_1191183181;
        if (ConstSet460[Temporary5.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fAttr\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary5.k, NTI1191182340)); }
        colontmp__587204085 = Temporary5.fAttr;
        Label6: {
          var h_587204091 = 0;
          var colontmp__587204092 = 0;
          colontmp__587204092 = (colontmp__587204085.data).length - 1;
          var res_587204093 = 0;
          Label7: {
              Label8: while (true) {
              if (!(res_587204093 <= colontmp__587204092)) break Label8;
                h_587204091 = res_587204093;
                if (colontmp__587204085.data[chckIndx(h_587204091, 0, (colontmp__587204085.data).length - 1)].Field2) {
                key_1191183210 = colontmp__587204085.data[chckIndx(h_587204091, 0, (colontmp__587204085.data).length - 1)].Field0;
                val_1191183211 = colontmp__587204085.data[chckIndx(h_587204091, 0, (colontmp__587204085.data).length - 1)].Field1;
                addChar(result_1191183180[result_1191183180_Idx], 32);;
                result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], key_1191183210);;
                result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [61,34]);;
                addEscapedAttr_1191183198(result_1191183180, result_1191183180_Idx, val_1191183211);
                addChar(result_1191183180[result_1191183180_Idx], 34);;
                }
                
                res_587204093 = addInt(res_587204093, 1);
              }
          };
        };
      };
      }
      
      if ((len_1191182970(n_1191183181) == 0)) {
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [32,47,62]);;
      break BeforeRet;
      }
      
      if (noWhitespace_1191183186(n_1191183181)) {
      Temporary9 = indent_1191183182;
      }
      else {
      Temporary9 = addInt(indent_1191183182, indWidth_1191183183);
      }
      
      var indentNext_1191183212 = Temporary9;
      addChar(result_1191183180[result_1191183180_Idx], 62);;
      var lastNodeIsText_1191183213 = false;
      Label10: {
        var i_1191183218 = 0;
        var colontmp__587204096 = 0;
        colontmp__587204096 = len_1191182970(n_1191183181);
        var i_587204097 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_587204097 < colontmp__587204096)) break Label12;
              i_1191183218 = i_587204097;
              addImpl_1191183179(result_1191183180, result_1191183180_Idx, HEX5BHEX5D_1191182983(n_1191183181, i_1191183218), indentNext_1191183212, indWidth_1191183183, addNewLines_1191183206, lastNodeIsText_1191183213);
              lastNodeIsText_1191183213 = ((kind_1191182980(HEX5BHEX5D_1191182983(n_1191183181, i_1191183218)) == 0) || (kind_1191182980(HEX5BHEX5D_1191182983(n_1191183181, i_1191183218)) == 1));
              i_587204097 = addInt(i_587204097, 1);
            }
        };
      };
      if (!(noWhitespace_1191183186(n_1191183181))) {
      addIndent_1191183170(result_1191183180, result_1191183180_Idx, indent_1191183182, addNewLines_1191183206);
      }
      
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [60,47]);;
      var Temporary13 = n_1191183181;
      if (ConstSet461[Temporary13.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fTag\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary13.k, NTI1191182340)); }
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], Temporary13.fTag);;
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [62]);;
      break;
    case 0:
      var Temporary14 = n_1191183181;
      if (ConstSet462[Temporary14.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary14.k, NTI1191182340)); }
      addEscaped_1191183163(result_1191183180, result_1191183180_Idx, Temporary14.fText);
      break;
    case 1:
      var Temporary15 = n_1191183181;
      if (ConstSet463[Temporary15.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary15.k, NTI1191182340)); }
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], Temporary15.fText);;
      break;
    case 5:
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [60,33,45,45,32]);;
      var Temporary16 = n_1191183181;
      if (ConstSet464[Temporary16.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary16.k, NTI1191182340)); }
      addEscaped_1191183163(result_1191183180, result_1191183180_Idx, Temporary16.fText);
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [32,45,45,62]);;
      break;
    case 3:
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [60,33,91,67,68,65,84,65,91]);;
      var Temporary17 = n_1191183181;
      if (ConstSet465[Temporary17.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary17.k, NTI1191182340)); }
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], Temporary17.fText);;
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], [93,93,62]);;
      break;
    case 4:
      addChar(result_1191183180[result_1191183180_Idx], 38);;
      var Temporary18 = n_1191183181;
      if (ConstSet466[Temporary18.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary18.k, NTI1191182340)); }
      result_1191183180[result_1191183180_Idx].push.apply(result_1191183180[result_1191183180_Idx], Temporary18.fText);;
      addChar(result_1191183180[result_1191183180_Idx], 59);;
      break;
    }
  };

  
}

function add_1191183227(result_1191183228, result_1191183228_Idx, n_1191183229, indent_1191183230, indWidth_1191183231, addNewLines_1191183232) {
    addImpl_1191183179(result_1191183228, result_1191183228_Idx, n_1191183229, indent_1191183230, indWidth_1191183231, addNewLines_1191183232, false);

  
}

function HEX24_1191183233(n_1191183234) {
  var result_1191183235 = [[]];

    result_1191183235[0] = nimCopy(null, [], NTI33554449);
    add_1191183227(result_1191183235, 0, n_1191183234, 0, 2, true);

  return result_1191183235[0];

}

function renderXidoc_587202586(body_587202587, path_587202588, target_587202589, snippet_587202590, safeMode_587202591, verbose_587202592, colorfulError_587202593, flags_587202601) {
    var Temporary1;
    var Temporary2;
    var Temporary4;
        var Temporary8;
          var Temporary9;
        var Temporary11;
      var Temporary19;
        
function HEX3Aanonymous_587203054() {
          var result_587203055 = 0;

          BeforeRet: {
            Label1: {
              var iHEX60gensym17_587203064 = 0;
              var colontmp__587204002 = 0;
              colontmp__587204002 = subInt((doc_587202614.stack).length, 1);
              var res_587204003 = colontmp__587204002;
              Label2: {
                  Label3: while (true) {
                  if (!(0 <= res_587204003)) break Label3;
                    iHEX60gensym17_587203064 = res_587204003;
                    var frameHEX60gensym17_587203065 = nimCopy(null, doc_587202614.stack[chckIndx(iHEX60gensym17_587203064, 0, (doc_587202614.stack).length - 1)], NTI1593835535);
                    if (isSome_1476395589(frameHEX60gensym17_587203065.lang)) {
                    result_587203055 = get_1476395606(frameHEX60gensym17_587203065.lang);
                    break BeforeRet;
                    }
                    
                    res_587204003 = subInt(res_587204003, 1);
                  }
              };
            };
          };

          return result_587203055;

        }
        
function HEX3Aanonymous_587203095() {
          var result_587203096 = 0;

          BeforeRet: {
            Label1: {
              var iHEX60gensym19_587203105 = 0;
              var colontmp__587204006 = 0;
              colontmp__587204006 = subInt((doc_587202614.stack).length, 1);
              var res_587204007 = colontmp__587204006;
              Label2: {
                  Label3: while (true) {
                  if (!(0 <= res_587204007)) break Label3;
                    iHEX60gensym19_587203105 = res_587204007;
                    var frameHEX60gensym19_587203106 = nimCopy(null, doc_587202614.stack[chckIndx(iHEX60gensym19_587203105, 0, (doc_587202614.stack).length - 1)], NTI1593835535);
                    if (isSome_1476395589(frameHEX60gensym19_587203106.lang)) {
                    result_587203096 = get_1476395606(frameHEX60gensym19_587203106.lang);
                    break BeforeRet;
                    }
                    
                    res_587204007 = subInt(res_587204007, 1);
                  }
              };
            };
          };

          return result_587203096;

        }
        var Temporary21;

  var result_587202602 = [];

  BeforeRet: {
    var bodyRef_587202606 = (Temporary1 = new_1476405395(), Temporary1)[0], bodyRef_587202606_Idx = Temporary1[1];
    bodyRef_587202606[bodyRef_587202606_Idx] = nimCopy(null, body_587202587, NTI33554449);
    var doc_587202614 = {body: [bodyRef_587202606, bodyRef_587202606_Idx], target: targetMapping_587202585[chckIndx(target_587202589, 0, (targetMapping_587202585).length - 1)], snippet: snippet_587202590, safeMode: safeMode_587202591, verbose: verbose_587202592, flags: nimCopy(null, flags_587202601, NTI536871232), stack: [{cmdName: toStringView_1560281142([91,116,111,112,93]), path: some_2214593019(path_587202588), args: ({data: [], counter: 0}), cmd: ({body: [null, 0], slice: ({a: 0, b: 0})}), cmdArg: ({body: [null, 0], slice: ({a: 0, b: 0})}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), tableOfContentsEntry: ({val: null})}], theoremLikeCounter: 1, addToHead: ({data: [], counter: 0, first: 0, last: 0}), labelNums: ({data: [], counter: 0}), settings: ({darkMode: false, documentClass: [], katexStylesheetPath: [], mathRenderer: 0, syntaxHighlightingTheme: 0, temmlStylesheetPath: [], theoremLikeNumberPrefix: []}), stage: 0, tableOfContents: [], templateArgs: ({data: [], counter: 0}), addToStyle: ({data: [], counter: 0, first: 0, last: 0})};
    doc_587202614.stack[chckIndx(0, 0, (doc_587202614.stack).length - 1)].commands = nimCopy(doc_587202614.stack[chckIndx(0, 0, (doc_587202614.stack).length - 1)].commands, defaultCommands_1476395041(doc_587202614), NTI1593835562);
++excHandler;
    try {
    Temporary2 = renderBody_1660945080(doc_587202614);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1543503877))) {
    raiseException(format_1543503887(getCurrentException(), doc_587202614, colorfulError_587202593), "FormattedXidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    var rendered_587202615 = nimCopy(null, Temporary2, NTI33554449);
    if (snippet_587202590) {
    Label5: {
      var ln_587202700 = [];
      var length_587203252 = len_587202634(doc_587202614.addToHead);
      if ((0 < (doc_587202614.addToHead.data).length)) {
      var h_587203253 = doc_587202614.addToHead.first;
      var idx_587203254 = 0;
      Label6: {
          Label7: while (true) {
          if (!(0 <= h_587203253)) break Label7;
            var nxt_587203256 = doc_587202614.addToHead.data[chckIndx(h_587203253, 0, (doc_587202614.addToHead.data).length - 1)].Field1;
            if (isFilled_1375731751(doc_587202614.addToHead.data[chckIndx(h_587203253, 0, (doc_587202614.addToHead.data).length - 1)].Field0)) {
            ln_587202700 = doc_587202614.addToHead.data[chckIndx(h_587203253, 0, (doc_587202614.addToHead.data).length - 1)].Field2;
            if (!((len_587202634(doc_587202614.addToHead) == length_587203252))) {
            failedAssertImpl_268435541(makeNimstrLit("sets.nim(908, 11) `len(s) == length` the length of the OrderedSet changed while iterating over it"));
            }
            
            idx_587203254 = addInt(idx_587203254, 1);
            }
            
            h_587203253 = nxt_587203256;
          }
      };
      }
      
    };
    result_587202602 = nimCopy(null, rendered_587202615, NTI33554449);
    break BeforeRet;
    }
    else {
        if (!(target_587202589 == 0)) Temporary8 = false; else {          var Temporary9 = doc_587202614;
          if (ConstSet423[Temporary9.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary9.target, NTI1593835523)); }
          Temporary8 = !((len_587202634(Temporary9.addToStyle) == 0));        }      if (Temporary8) {
      Label10: {
        var Temporary11 = doc_587202614;
        if (ConstSet424[Temporary11.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary11.target, NTI1593835523)); }
        var HEX3Atmp_587202859 = nimCopy(null, Temporary11.addToStyle, NTI1593835639);
        var iHEX60gensym7_587202862 = 0;
        var resultHEX60gensym7_587202884 = newSeq_536871460(chckRange(len_587202634(HEX3Atmp_587202859), 0, 2147483647));
        Label12: {
          var itHEX60gensym7_587202888 = [];
          var length_587203266 = len_587202634(HEX3Atmp_587202859);
          if ((0 < (HEX3Atmp_587202859.data).length)) {
          var h_587203267 = HEX3Atmp_587202859.first;
          var idx_587203268 = 0;
          Label13: {
              Label14: while (true) {
              if (!(0 <= h_587203267)) break Label14;
                var nxt_587203270 = HEX3Atmp_587202859.data[chckIndx(h_587203267, 0, (HEX3Atmp_587202859.data).length - 1)].Field1;
                if (isFilled_1375731751(HEX3Atmp_587202859.data[chckIndx(h_587203267, 0, (HEX3Atmp_587202859.data).length - 1)].Field0)) {
                itHEX60gensym7_587202888 = HEX3Atmp_587202859.data[chckIndx(h_587203267, 0, (HEX3Atmp_587202859.data).length - 1)].Field2;
                resultHEX60gensym7_587202884[chckIndx(iHEX60gensym7_587202862, 0, (resultHEX60gensym7_587202884).length - 1)] = nimCopy(null, itHEX60gensym7_587202888, NTI33554449);
                iHEX60gensym7_587202862 = addInt(iHEX60gensym7_587202862, 1);
                if (!((len_587202634(HEX3Atmp_587202859) == length_587203266))) {
                failedAssertImpl_268435541(makeNimstrLit("sets.nim(908, 11) `len(s) == length` the length of the OrderedSet changed while iterating over it"));
                }
                
                idx_587203268 = addInt(idx_587203268, 1);
                }
                
                h_587203267 = nxt_587203270;
              }
          };
          }
          
        };
      };
      incl_2264927133(doc_587202614.addToHead, ([60,115,116,121,108,101,62] || []).concat(nsuJoinSep(resultHEX60gensym7_587202884, []) || [],[60,47,115,116,121,108,101,62] || []));
      }
      
      Label15: {
        var HEX3Atmp_587203017 = nimCopy(null, doc_587202614.addToHead, NTI1593835639);
        var iHEX60gensym14_587203020 = 0;
        var resultHEX60gensym14_587203042 = newSeq_536871460(chckRange(len_587202634(HEX3Atmp_587203017), 0, 2147483647));
        Label16: {
          var itHEX60gensym14_587203046 = [];
          var length_587203273 = len_587202634(HEX3Atmp_587203017);
          if ((0 < (HEX3Atmp_587203017.data).length)) {
          var h_587203274 = HEX3Atmp_587203017.first;
          var idx_587203275 = 0;
          Label17: {
              Label18: while (true) {
              if (!(0 <= h_587203274)) break Label18;
                var nxt_587203277 = HEX3Atmp_587203017.data[chckIndx(h_587203274, 0, (HEX3Atmp_587203017.data).length - 1)].Field1;
                if (isFilled_1375731751(HEX3Atmp_587203017.data[chckIndx(h_587203274, 0, (HEX3Atmp_587203017.data).length - 1)].Field0)) {
                itHEX60gensym14_587203046 = HEX3Atmp_587203017.data[chckIndx(h_587203274, 0, (HEX3Atmp_587203017.data).length - 1)].Field2;
                resultHEX60gensym14_587203042[chckIndx(iHEX60gensym14_587203020, 0, (resultHEX60gensym14_587203042).length - 1)] = nimCopy(null, itHEX60gensym14_587203046, NTI33554449);
                iHEX60gensym14_587203020 = addInt(iHEX60gensym14_587203020, 1);
                if (!((len_587202634(HEX3Atmp_587203017) == length_587203273))) {
                failedAssertImpl_268435541(makeNimstrLit("sets.nim(908, 11) `len(s) == length` the length of the OrderedSet changed while iterating over it"));
                }
                
                idx_587203275 = addInt(idx_587203275, 1);
                }
                
                h_587203274 = nxt_587203277;
              }
          };
          }
          
        };
      };
      var head_587203051 = nsuJoinSep(resultHEX60gensym14_587203042, []);
      switch (target_587202589) {
      case 0:
        var lang_587203088 = translate_1610612762(5, HEX3Aanonymous_587203054());
        Label20: {
          var fmtRes_587203092 = [mnewString(0)];
          fmtRes_587203092[0].push.apply(fmtRes_587203092[0], [60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,60,104,116,109,108,32,108,97,110,103,61,34]);;
          formatValue_1442840747(fmtRes_587203092, 0, lang_587203088, []);
          fmtRes_587203092[0].push.apply(fmtRes_587203092[0], makeNimstrLit("\"><head><meta charset=\"utf-8\"><meta name=\"generator\" content=\"xidoc\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">"));;
          formatValue_1442840747(fmtRes_587203092, 0, head_587203051, []);
          fmtRes_587203092[0].push.apply(fmtRes_587203092[0], [60,47,104,101,97,100,62,60,98,111,100,121,62]);;
          formatValue_1442840747(fmtRes_587203092, 0, rendered_587202615, []);
          fmtRes_587203092[0].push.apply(fmtRes_587203092[0], [60,47,98,111,100,121,62,60,47,104,116,109,108,62]);;
        };
        Temporary19 = fmtRes_587203092[0];
        break;
      case 1:
        var lang_587203129 = translate_1610612762(6, HEX3Aanonymous_587203095());
        if (eqStrings(doc_587202614.settings.documentClass, [])) {
        Temporary21 = [97,114,116,105,99,108,101];
        }
        else {
        Temporary21 = doc_587202614.settings.documentClass;
        }
        
        var documentClass_587203130 = nimCopy(null, Temporary21, NTI33554449);
        Temporary19 = (HEX7BHEX7D_2197816503([100,111,99,117,109,101,110,116,99,108,97,115,115], documentClass_587203130) || []).concat(HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507([117,115,101,112,97,99,107,97,103,101], [117,116,102,56]), [105,110,112,117,116,101,110,99]) || [],HEX7BHEX7D_2197816503(HEX5BHEX5D_2197816507([117,115,101,112,97,99,107,97,103,101], lang_587203129), [98,97,98,101,108]) || [],HEX7BHEX7D_2197816503([117,115,101,112,97,99,107,97,103,101], [103,101,111,109,101,116,114,121]) || [],head_587203051 || [],HEX7BHEX7D_2197816503([98,101,103,105,110], [100,111,99,117,109,101,110,116]) || [],rendered_587202615 || [],HEX7BHEX7D_2197816503([101,110,100], [100,111,99,117,109,101,110,116]) || []);
        break;
      case 2:
        Label22: {
          var fmtRes_587203134 = [mnewString(0)];
          formatValue_1442840747(fmtRes_587203134, 0, head_587203051, []);
          formatValue_1442840747(fmtRes_587203134, 0, rendered_587202615, []);
        };
        Temporary19 = fmtRes_587203134[0];
        break;
      case 3:
        var svgs_587203135 = findAll_1191183283(parseHtml_1140851083(([60,100,105,118,62] || []).concat(rendered_587202615 || [],[60,47,100,105,118,62] || [])), [115,118,103], false);
        if (!(((svgs_587203135).length == 1))) {
        Label23: {
          var fmtRes_587203142 = [mnewString(0)];
          fmtRes_587203142[0].push.apply(fmtRes_587203142[0], makeNimstrLit("When compiling to SVG, exactly one <svg> element must be produced, found "));;
          formatValue_1560281240(fmtRes_587203142, 0, (svgs_587203135).length, []);
        };
        raiseException(format_1543503887({message: nimCopy(null, fmtRes_587203142[0], NTI33554449), m_type: NTI1543503877, parent: null, name: null, trace: [], up: null}, doc_587202614, colorfulError_587202593), "FormattedXidocError:ObjectType");
        }
        
        Temporary19 = HEX24_1191183233(svgs_587203135[chckIndx(0, 0, (svgs_587203135).length - 1)]);
        break;
      }
    Temporary4 = Temporary19;
    }
    
    result_587202602 = nimCopy(null, Temporary4, NTI33554449);
  };

  return result_587202602;

}

function renderXidoc(body_587203185, config_587203186) {
    var Temporary2;

  var result_587203187 = null;

  BeforeRet: {
++excHandler;
    try {
    if ((config_587203186 == undefined)) {
    Temporary2 = {};
    }
    else {
    Temporary2 = config_587203186;
    }
    
    var config_587203192 = Temporary2;
    var rendered_587203217 = renderXidoc_587202586(cstrToNimstr(body_587203185), [], 0, (config_587203192.snippet), (config_587203192.safeMode), (config_587203192.verbose), false, newSeq_536871460(0));
    result_587203187 = toJSStr(rendered_587203217);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1543503878))) {
    throw toJSStr(getCurrentExceptionMsg_33556463())
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_587203187;

}
export {renderXidoc};
