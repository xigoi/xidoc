/* Generated by the Nim Compiler v1.6.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1275068513 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068510 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1258291206 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191190062 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1392509013 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1392508945 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1409286151 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1409286150 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1409286147 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1409286148 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1493172231 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191185730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191185608 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1744830547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311762 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1761607842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191184245 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400262 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI654311910 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI654311921 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068419 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207965176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207965362 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207964930 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207965178 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207964933 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1207964927 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207964928 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207964929 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207965177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207959574 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207959572 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959567 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959558 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207959564 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1207959559 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959561 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959565 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1207959566 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959560 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207960085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959557 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1711276375 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1308623088 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068480 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068529 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068473 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068470 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068467 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964611 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1275068458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068455 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068452 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068425 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654312627 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1006632980 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1258291205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1711276065 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068422 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068423 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068436 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068429 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068420 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068421 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1711276051 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1862271029 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811948616 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI939524099 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1811947329 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811948542 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811947997 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811947911 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811947279 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811947091 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811947152 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811946997 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945736 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1828717061 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1828717060 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643079 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1811946424 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI654311786 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI654311798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI385876137 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1811946369 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811945766 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945760 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945897 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945289 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945355 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945458 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1828717454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1828717453 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1828716560 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811944743 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944146 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944408 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944402 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944242 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944209 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943756 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943928 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943800 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943767 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944362 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944311 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944608 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944602 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944196 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944202 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811944822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944720 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811944869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811944968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811945049 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943491 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811943622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1828716555 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1862271234 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1862271142 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942677 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942799 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942865 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942926 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1828717100 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1828716547 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1828717282 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1828716548 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1828717280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811943427 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942573 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942300 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941706 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941962 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941802 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941769 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941319 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941477 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941357 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941330 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941922 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941871 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942168 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811942162 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941756 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811942379 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1845493951 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941276 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811942452 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1845493763 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555088 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555081 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1845493767 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1845493764 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1845493817 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940581 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940843 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940837 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940677 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940644 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940213 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940417 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940411 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476395617 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940251 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940224 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940797 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940746 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941043 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811941037 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940631 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940637 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811941227 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940164 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1811940170 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI452985127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1828718412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1862271372 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1862272094 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1862270982 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1862271429 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI872415304 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI872415311 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1862272032 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1862271206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1862271998 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1862271011 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1862270997 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1862271108 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI1862270997 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1862270997, name: "success", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1862270997, name: "failure", len: 0, sons: null}}};
NTI1862270997.node = NNI1862270997;
NTI1862271011.base = NTI33554439;
var NNI1862271108 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI33554439, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1862271108.node = NNI1862271108;
NTI1862271998.base = NTI33554439;
var NNI1862271206 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI33554438, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1862271206.node = NNI1862271206;
NTI1862272032.base = NTI33554439;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI872415311 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI872415304, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI872415311.node = NNI872415311;
NTI1862271429.base = NTI33554439;
var NNI1862270982 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1862270982.node = NNI1862270982;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI721420349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI721420349.node = NNI721420349;
NTI1862272094.base = NTI33554439;
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
NTI33555129.base = NTI33555113;
NTI1862271372.base = NTI33554439;
var NNI1828718412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554438, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554438, name: "b", sons: null}]};
NTI1828718412.node = NNI1828718412;
NTI452985127.base = NTI33554439;
NTI1811940164.base = NTI33554439;
var NNI1811940170 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1811940164, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811940170.node = NNI1811940170;
NTI1811941227.base = NTI33554439;
NTI1811940631.base = NTI1811940164;
var NNI1811940637 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1811940631, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811940637.node = NNI1811940637;
NTI1811941037.base = NTI1811940164;
NTI1811941043.base = NTI33554439;
NTI1811940746.base = NTI1811940164;
NTI1811940797.base = NTI33554439;
NTI1811940224.base = NTI33554439;
NTI1811940251.base = NTI33554439;
NTI1476395617.base = NTI33554439;
NTI1811940359.base = NTI33554439;
NTI1811940411.base = NTI33554439;
NTI1811940417.base = NTI33554439;
NTI1811940213.base = NTI33554439;
NTI1811940644.base = NTI1811940164;
NTI1811940677.base = NTI33554439;
NTI1811940837.base = NTI1811940164;
NTI1811940843.base = NTI33554439;
NTI1811940581.base = NTI33554439;
NTI1845493817.base = NTI33554439;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
NTI1845493767.base = NTI33554439;
NTI33555081.base = NTI33555088;
var NNI1845493763 = {kind: 2, offset: 0, typ: null, name: null, len: 9, sons: {"0": {kind: 1, offset: 0, typ: NTI1845493763, name: "trfNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1845493763, name: "trfAlnum", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1845493763, name: "trfOperator", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1845493763, name: "trfBigOperator", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1845493763, name: "trfWord", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1845493763, name: "trfFraction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1845493763, name: "trfSub", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1845493763, name: "trfSup", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1845493763, name: "trfPunctuation", len: 0, sons: null}}};
NTI1845493763.node = NNI1845493763;
var NNI1845493764 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "rows", len: 0, typ: NTI1845493767, name: "rows", sons: null}, 
{kind: 1, offset: "baseline", len: 0, typ: NTI33554456, name: "baseline", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33555081, name: "width", sons: null}, 
{kind: 1, offset: "flag", len: 0, typ: NTI1845493763, name: "flag", sons: null}]};
NTI1845493764.node = NNI1845493764;
var NNI1811941261 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1845493764, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811941261.node = NNI1811941261;
NTI1811942452.base = NTI33554439;
NTI1811941270.base = NTI1845493764;
var NNI1811941276 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1811941270, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811941276.node = NNI1811941276;
NTI1845493951.base = NTI1845493764;
NTI1811942379.base = NTI33554439;
NTI1811941756.base = NTI1811941270;
var NNI1811941762 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1811941756, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811941762.node = NNI1811941762;
NTI1811942162.base = NTI1811941270;
NTI1811942168.base = NTI33554439;
NTI1811941871.base = NTI1811941270;
NTI1811941922.base = NTI33554439;
NTI1811941330.base = NTI1845493764;
NTI1811941357.base = NTI33554439;
NTI1811941426.base = NTI1845493764;
NTI1811941477.base = NTI33554439;
NTI1811941536.base = NTI1845493764;
NTI1811941542.base = NTI33554439;
NTI1811941319.base = NTI1845493764;
NTI1811941769.base = NTI1811941270;
NTI1811941802.base = NTI33554439;
NTI1811941962.base = NTI1811941270;
NTI1811941968.base = NTI33554439;
NTI1811941706.base = NTI33554439;
NTI1811942300.base = NTI1845493764;
NTI1811942573.base = NTI33554439;
NTI1811943427.base = NTI33554439;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI1828716548 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1828716548, name: "ltLatin", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1828716548, name: "ltGreek", len: 0, sons: null}}};
NTI1828716548.node = NNI1828716548;
var NNI1828717280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1828716548, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1828717282, name: "Field1", sons: null}]};
NTI1828717280.node = NNI1828717280;
var NNI1828716547 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI1828716547, name: "fNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1828716547, name: "fItalic", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1828716547, name: "fBold", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1828716547, name: "fScript", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1828716547, name: "fFraktur", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1828716547, name: "fDoubleStruck", len: 0, sons: null}}};
NTI1828716547.node = NNI1828716547;
var NNI1828717100 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1828716547, name: "Field1", sons: null}]};
NTI1828717100.node = NNI1828717100;
NTI1811942926.base = NTI33554439;
NTI1811942865.base = NTI33554439;
NTI1811942738.base = NTI33554439;
NTI1811942799.base = NTI33554439;
NTI1811942677.base = NTI33554439;
NTI1862271142.base = NTI33554439;
NTI1862271234.base = NTI33554439;
var NNI1828716555 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1845493764, name: "Field1", sons: null}]};
NTI1828716555.node = NNI1828716555;
NTI1811943622.base = NTI33554439;
NTI1811943536.base = NTI33554439;
NTI1811943491.base = NTI33554439;
NTI1811945049.base = NTI33554439;
NTI1811944968.base = NTI33554439;
NTI1811943718.base = NTI33554438;
var NNI1811943724 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1811943718, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811943724.node = NNI1811943724;
NTI1811944869.base = NTI33554439;
NTI1811944720.base = NTI33554438;
NTI1811944822.base = NTI33554439;
NTI1811944196.base = NTI1811943718;
var NNI1811944202 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "kind", len: 2, typ: NTI1862270997, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "value", len: 0, typ: NTI1811944196, name: "value", sons: null}], 
[setConstr(1), {kind: 1, offset: "expected", len: 0, typ: NTI1862271011, name: "expected", sons: null}]]}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554439, name: "tail", sons: null}, 
{kind: 1, offset: "fromInput", len: 0, typ: NTI33554439, name: "fromInput", sons: null}]};
NTI1811944202.node = NNI1811944202;
NTI1811944602.base = NTI1811943718;
NTI1811944608.base = NTI33554439;
NTI1811944311.base = NTI1811943718;
NTI1811944362.base = NTI33554439;
NTI1811943767.base = NTI33554438;
NTI1811943800.base = NTI33554439;
NTI1811943869.base = NTI33554438;
NTI1811943928.base = NTI33554439;
NTI1811943968.base = NTI33554438;
NTI1811943974.base = NTI33554439;
NTI1811943756.base = NTI33554438;
NTI1811944209.base = NTI1811943718;
NTI1811944242.base = NTI33554439;
NTI1811944402.base = NTI1811943718;
NTI1811944408.base = NTI33554439;
NTI1811944146.base = NTI33554439;
NTI1811944743.base = NTI33554438;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
NTI33555126.base = NTI33555125;
var NNI1828716560 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1845493764, name: "Field1", sons: null}]};
NTI1828716560.node = NNI1828716560;
var NNI1828717454 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}]};
NTI1828717454.node = NNI1828717454;
var NNI1828717453 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1828717454, name: "Field1", sons: null}]};
NTI1828717453.node = NNI1828717453;
NTI1811945458.base = NTI33554439;
NTI1811945355.base = NTI33554439;
NTI1811945289.base = NTI33554439;
NTI1811945897.base = NTI33554439;
NTI1811945544.base = NTI33554439;
NTI1811945760.base = NTI1845493764;
NTI1811945766.base = NTI33554439;
var NNI1811939335 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}]};
NTI1811939335.node = NNI1811939335;
NTI1811946369.base = NTI385876137;
NTI654311798.base = NTI33554439;
NTI654311786.base = NTI33554439;
NTI1811946424.base = NTI704643079;
var NNI1828717061 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554439, name: "Field3", sons: null}]};
NTI1828717061.node = NNI1828717061;
var NNI1828717060 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1828717061, name: "Field1", sons: null}]};
NTI1828717060.node = NNI1828717060;
NTI1811945736.base = NTI1845493764;
NTI1811946997.base = NTI33554439;
NTI1811947152.base = NTI33554439;
NTI1811947091.base = NTI33554439;
NTI1811947279.base = NTI33554439;
NTI1811947911.base = NTI33554439;
NTI1811947997.base = NTI33554439;
var NNI1811948542 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1845493764, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1845493764, name: "Field1", sons: null}]};
NTI1811948542.node = NNI1811948542;
NTI1811947329.base = NTI939524099;
var NNI1275068493 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554439, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1275068493.node = NNI1275068493;
NTI1811948616.base = NTI33554439;
NTI654311904.base = NTI33554439;
var NNI1862271029 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1862271029.node = NNI1862271029;
var NNI1275068420 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1275068420, name: "String", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275068420, name: "Markup", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068420, name: "List", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068420, name: "Optional", len: 0, sons: null}}};
NTI1275068420.node = NNI1275068420;
NTI1275068429.base = NTI1275068421;
NTI1275068431.base = NTI1275068421;
var NNI1275068436 = {kind: 1, offset: "val", len: 0, typ: NTI1275068431, name: "val", sons: null};
NTI1275068436.node = NNI1275068436;
var NNI1275068421 = {kind: 3, offset: "typ", len: 4, typ: NTI1275068420, name: "typ", sons: [[setConstr(0, 1), {kind: 1, offset: "str", len: 0, typ: NTI33554439, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "list", len: 0, typ: NTI1275068429, name: "list", sons: null}], 
[setConstr(3), {kind: 1, offset: "opt", len: 0, typ: NTI1275068436, name: "opt", sons: null}]]};
NTI1275068421.node = NNI1275068421;
NTI1711276051.base = NTI1275068421;
var NNI1275068422 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1275068422, name: "ptkOne", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275068422, name: "ptkOptional", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068422, name: "ptkMultiple", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068422, name: "ptkRaw", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068422, name: "ptkLiteral", len: 0, sons: null}}};
NTI1275068422.node = NNI1275068422;
var NNI1275068423 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1275068422, name: "kind", sons: null}, 
{kind: 1, offset: "base", len: 0, typ: NTI1275068420, name: "base", sons: null}]};
NTI1275068423.node = NNI1275068423;
var NNI1711276065 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554456, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1711276065.node = NNI1711276065;
var NNI1258291205 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1258291205.node = NNI1258291205;
NTI1258291205.base = NTI33555114;
var NNI1006632980 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1006632980.node = NNI1006632980;
NTI1006632980.base = NTI33555113;
var NNI1325400067 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400067, name: "xnkString", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400067, name: "xnkWhitespace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400067, name: "xnkCommand", len: 0, sons: null}}};
NTI1325400067.node = NNI1325400067;
var NNI1325400068 = {kind: 3, offset: "kind", len: 3, typ: NTI1325400067, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "str", len: 0, typ: NTI33554439, name: "str", sons: null}], 
[setConstr(1), {kind: 1, offset: "newline", len: 0, typ: NTI33554466, name: "newline", sons: null}], 
[setConstr(2), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "arg", len: 0, typ: NTI33554439, name: "arg", sons: null}]}]]};
NTI1325400068.node = NNI1325400068;
NTI654312627.base = NTI33554438;
var NNI1275068458 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1056964611, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}]};
NTI1275068458.node = NNI1275068458;
NTI1275068455.base = NTI1275068458;
var NNI1275068452 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1275068455, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1275068452.node = NNI1275068452;
var NNI1275068473 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1056964611, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1275068529, name: "Field2", sons: null}]};
NTI1275068473.node = NNI1275068473;
NTI1275068470.base = NTI1275068473;
var NNI1275068467 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1275068470, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1275068467.node = NNI1275068467;
var NNI1291845635 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845635, name: "lEnglish", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845635, name: "lCzech", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845635, name: "lGerman", len: 0, sons: null}}};
NTI1291845635.node = NNI1291845635;
var NNI1275068480 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI1291845635, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1275068480.node = NNI1275068480;
var NNI1275068425 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "args", len: 0, typ: NTI1275068452, name: "args", sons: null}, 
{kind: 1, offset: "cmdArg", len: 0, typ: NTI33554439, name: "cmdArg", sons: null}, 
{kind: 1, offset: "cmdName", len: 0, typ: NTI33554439, name: "cmdName", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1275068467, name: "commands", sons: null}, 
{kind: 1, offset: "lang", len: 0, typ: NTI1275068480, name: "lang", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI1275068493, name: "path", sons: null}]};
NTI1275068425.node = NNI1275068425;
var NNI1308623088 = {kind: 1, offset: "val", len: 0, typ: NTI1275068529, name: "val", sons: null};
NTI1308623088.node = NNI1308623088;
NTI1711276375.base = NTI1275068421;
var NNI1207959557 = {kind: 2, offset: 0, typ: null, name: null, len: 33, sons: {"0": {kind: 1, offset: 0, typ: NTI1207959557, name: "pkEmpty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1207959557, name: "pkAny", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1207959557, name: "pkAnyRune", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1207959557, name: "pkNewLine", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1207959557, name: "pkLetter", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1207959557, name: "pkLower", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1207959557, name: "pkUpper", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1207959557, name: "pkTitle", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1207959557, name: "pkWhitespace", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1207959557, name: "pkTerminal", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1207959557, name: "pkTerminalIgnoreCase", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1207959557, name: "pkTerminalIgnoreStyle", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1207959557, name: "pkChar", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1207959557, name: "pkCharChoice", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1207959557, name: "pkNonTerminal", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1207959557, name: "pkSequence", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1207959557, name: "pkOrderedChoice", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1207959557, name: "pkGreedyRep", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1207959557, name: "pkGreedyRepChar", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1207959557, name: "pkGreedyRepSet", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1207959557, name: "pkGreedyAny", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1207959557, name: "pkOption", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1207959557, name: "pkAndPredicate", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1207959557, name: "pkNotPredicate", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1207959557, name: "pkCapture", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1207959557, name: "pkBackRef", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1207959557, name: "pkBackRefIgnoreCase", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1207959557, name: "pkBackRefIgnoreStyle", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1207959557, name: "pkSearch", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1207959557, name: "pkCapturedSearch", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1207959557, name: "pkRule", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1207959557, name: "pkList", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1207959557, name: "pkStartAnchor", len: 0, sons: null}}};
NTI1207959557.node = NNI1207959557;
var NNI1207960085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1207960085.node = NNI1207960085;
NTI1207959565.base = NTI33554438;
NTI1207959566.base = NTI1207959565;
var NNI1207959558 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1207959558, name: "ntDeclared", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1207959558, name: "ntUsed", len: 0, sons: null}}};
NTI1207959558.node = NNI1207959558;
NTI1207959564.base = NTI1207959558;
var NNI1207959559 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554456, name: "line", sons: null}, 
{kind: 1, offset: "col", len: 0, typ: NTI33554456, name: "col", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI1207959564, name: "flags", sons: null}, 
{kind: 1, offset: "rule", len: 0, typ: NTI1207959560, name: "rule", sons: null}]};
NTI1207959559.node = NNI1207959559;
NTI1207959561.base = NTI1207959559;
NTI1207959567.base = NTI1207959572;
NTI1207959574.base = NTI1207959560;
var NNI1207959560 = {kind: 3, offset: "kind", len: 33, typ: NTI1207959557, name: "kind", sons: [[setConstr([0, 8]), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(9, 10, 11), {kind: 1, offset: "term", len: 0, typ: NTI33554439, name: "term", sons: null}], 
[setConstr(12, 18), {kind: 1, offset: "ch", len: 0, typ: NTI33554438, name: "ch", sons: null}], 
[setConstr(13, 19), {kind: 1, offset: "charChoice", len: 0, typ: NTI1207959566, name: "charChoice", sons: null}], 
[setConstr(14), {kind: 1, offset: "nt", len: 0, typ: NTI1207959561, name: "nt", sons: null}], 
[setConstr([25, 27]), {kind: 1, offset: "index", len: 0, typ: NTI1207959567, name: "index", sons: null}], 
[setConstr(33), {kind: 1, offset: "sons", len: 0, typ: NTI1207959574, name: "sons", sons: null}]]};
NTI1207959560.node = NNI1207959560;
var NNI1207964928 = {kind: 2, offset: 0, typ: null, name: null, len: 26, sons: {"0": {kind: 1, offset: 0, typ: NTI1207964928, name: "tkInvalid", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1207964928, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1207964928, name: "tkAny", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1207964928, name: "tkAnyRune", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1207964928, name: "tkIdentifier", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1207964928, name: "tkStringLit", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1207964928, name: "tkCharSet", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1207964928, name: "tkParLe", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1207964928, name: "tkParRi", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1207964928, name: "tkCurlyLe", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1207964928, name: "tkCurlyRi", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1207964928, name: "tkCurlyAt", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1207964928, name: "tkEmptyCurl", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1207964928, name: "tkArrow", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1207964928, name: "tkBar", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1207964928, name: "tkStar", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1207964928, name: "tkPlus", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1207964928, name: "tkAmp", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1207964928, name: "tkNot", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1207964928, name: "tkOption", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1207964928, name: "tkAt", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1207964928, name: "tkBuiltin", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1207964928, name: "tkEscaped", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1207964928, name: "tkBackref", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1207964928, name: "tkDollar", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1207964928, name: "tkHat", len: 0, sons: null}}};
NTI1207964928.node = NNI1207964928;
var NNI1207964927 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1207964927, name: "modNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1207964927, name: "modVerbatim", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1207964927, name: "modIgnoreCase", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1207964927, name: "modIgnoreStyle", len: 0, sons: null}}};
NTI1207964927.node = NNI1207964927;
NTI1207964933.base = NTI33554438;
var NNI1207964929 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1207964928, name: "kind", sons: null}, 
{kind: 1, offset: "modifier", len: 0, typ: NTI1207964927, name: "modifier", sons: null}, 
{kind: 1, offset: "literal", len: 0, typ: NTI33554439, name: "literal", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI1207964933, name: "charset", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554456, name: "index", sons: null}]};
NTI1207964929.node = NNI1207964929;
NTI1207965178.base = NTI1207959561;
var NNI1207965177 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tok", len: 0, typ: NTI1207964929, name: "tok", sons: null}, 
{kind: 1, offset: "nonterms", len: 0, typ: NTI1207965178, name: "nonterms", sons: null}, 
{kind: 1, offset: "modifier", len: 0, typ: NTI1207964927, name: "modifier", sons: null}, 
{kind: 1, offset: "captures", len: 0, typ: NTI33554456, name: "captures", sons: null}, 
{kind: 1, offset: "identIsVerbatim", len: 0, typ: NTI33554466, name: "identIsVerbatim", sons: null}, 
{kind: 1, offset: "skip", len: 0, typ: NTI1207959560, name: "skip", sons: null}]};
NTI1207965177.node = NNI1207965177;
var NNI1207964930 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554456, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554439, name: "buf", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554456, name: "lineNumber", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554456, name: "lineStart", sons: null}, 
{kind: 1, offset: "colOffset", len: 0, typ: NTI33554456, name: "colOffset", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554439, name: "filename", sons: null}]};
NTI1207964930.node = NNI1207964930;
NTI1207965177.base = NTI1207964930;
NTI1207965362.base = NTI1207959561;
var NNI1207965176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1207965176.node = NNI1207965176;
NTI1207965176.base = NTI33555125;
var NNI1275068419 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1275068419, name: "html", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1275068419, name: "latex", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068419, name: "gemtext", len: 0, sons: null}}};
NTI1275068419.node = NNI1275068419;
var NNI33555132 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555132.node = NNI33555132;
NTI33555132.base = NTI33555113;
NTI654311921.base = NTI33554439;
NTI654311910.base = NTI33554439;
NTI1325400262.base = NTI33554439;
var NNI1191184245 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}]};
NTI1191184245.node = NNI1191184245;
NTI1761607842.base = NTI33554439;
NTI654311762.base = NTI33554439;
var NNI1744830547 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554466, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1744830547.node = NNI1744830547;
NTI1191185608.base = NTI1275068421;
NTI1191185730.base = NTI1275068421;
var NNI1493172231 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1493172231.node = NNI1493172231;
var NNI33555115 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555115.node = NNI33555115;
NTI33555115.base = NTI33555114;
var NNI1409286147 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1409286147, name: "kClosure", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1409286147, name: "kNoconv", len: 0, sons: null}}};
NTI1409286147.node = NNI1409286147;
var NNI1409286148 = {kind: 3, offset: "kind", len: 2, typ: NTI1409286147, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "fun1", len: 0, typ: NTI1409286150, name: "fun1", sons: null}], 
[setConstr(1), {kind: 1, offset: "fun2", len: 0, typ: NTI1409286151, name: "fun2", sons: null}]]};
NTI1409286148.node = NNI1409286148;
var NNI1392508945 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1392508945.node = NNI1392508945;
NTI1392509013.base = NTI1392508945;
NTI1191190062.base = NTI1275068421;
var NNI1258291206 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1258291206.node = NNI1258291206;
NTI1258291206.base = NTI33555114;
var NNI1275068513 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1056964611, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}]};
NTI1275068513.node = NNI1275068513;
NTI1275068510.base = NTI1275068513;
var NNI1275068507 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1275068510, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI1275068507.node = NNI1275068507;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557141, src_33557142, ti_33557143) {
  var result_33557152 = null;

    switch (ti_33557143.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557132(ti_33557143))) {
      result_33557152 = src_33557142;
      }
      else {
        result_33557152 = [src_33557142[0], src_33557142[1]];
      }
      
      break;
    case 19:
            if (dest_33557141 === null || dest_33557141 === undefined) {
        dest_33557141 = {};
      }
      else {
        for (var key in dest_33557141) { delete dest_33557141[key]; }
      }
      for (var key in src_33557142) { dest_33557141[key] = src_33557142[key]; }
      result_33557152 = dest_33557141;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557143.base == null))) {
      result_33557152 = nimCopy(dest_33557141, src_33557142, ti_33557143.base);
      }
      else {
      if ((ti_33557143.kind == 17)) {
      result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {m_type: ti_33557143} : dest_33557141;
      }
      else {
        result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {} : dest_33557141;
      }
      }
      nimCopyAux(result_33557152, src_33557142, ti_33557143.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557142 === null) {
        result_33557152 = null;
      }
      else {
        if (dest_33557141 === null || dest_33557141 === undefined || dest_33557141.length != src_33557142.length) {
          dest_33557141 = new Array(src_33557142.length);
        }
        result_33557152 = dest_33557141;
        for (var i = 0; i < src_33557142.length; ++i) {
          result_33557152[i] = nimCopy(result_33557152[i], src_33557142[i], ti_33557143.base);
        }
      }
    
      break;
    case 28:
            if (src_33557142 !== null) {
        result_33557152 = src_33557142.slice(0);
      }
    
      break;
    default: 
      result_33557152 = src_33557142;
      break;
    }

  return result_33557152;

}

function makeNimstrLit(c_33556802) {
      var result = [];
  for (var i = 0; i < c_33556802.length; ++i) {
    result[i] = c_33556802.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556894) {
        return new Array(len_33556894);
  

  
}

function toJSStr(s_33556808) {
                    var Temporary5;
            var Temporary7;

  var result_33556809 = null;

    var res_33556843 = newSeq_33556826((s_33556808).length);
    var i_33556844 = 0;
    var j_33556845 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556844 < (s_33556808).length)) break Label2;
          var c_33556846 = s_33556808[i_33556844];
          if ((c_33556846 < 128)) {
          res_33556843[j_33556845] = String.fromCharCode(c_33556846);
          i_33556844 += 1;
          }
          else {
            var helper_33556858 = newSeq_33556826(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556859 = c_33556846.toString(16);
                  if ((((code_33556859) == null ? 0 : (code_33556859).length) == 1)) {
                  helper_33556858.push("%0");;
                  }
                  else {
                  helper_33556858.push("%");;
                  }
                  
                  helper_33556858.push(code_33556859);;
                  i_33556844 += 1;
                    if (((s_33556808).length <= i_33556844)) Temporary5 = true; else {                      Temporary5 = (s_33556808[i_33556844] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556846 = s_33556808[i_33556844];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556843[j_33556845] = decodeURIComponent(helper_33556858.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556843[j_33556845] = helper_33556858.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556845 += 1;
        }
    } while (false);
    if (res_33556843.length < j_33556845) { for (var i = res_33556843.length ; i < j_33556845 ; ++i) res_33556843.push(null); }
               else { res_33556843.length = j_33556845; };
    result_33556809 = res_33556843.join("");

  return result_33556809;

}

function raiseException(e_33556668, ename_33556669) {
    e_33556668.name = ename_33556669;
    if ((excHandler == 0)) {
    unhandledException(e_33556668);
    }
    
    throw e_33556668;

  
}

function addInt(a_33556941, b_33556942) {
        var result = a_33556941 + b_33556942;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557190, a_33557191, b_33557192) {
      var Temporary1;

  var result_33557193 = 0;

  BeforeRet: do {
      if (!(a_33557191 <= i_33557190)) Temporary1 = false; else {        Temporary1 = (i_33557190 <= b_33557192);      }    if (Temporary1) {
    result_33557193 = i_33557190;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557193;

}

function chckIndx(i_33557185, a_33557186, b_33557187) {
      var Temporary1;

  var result_33557188 = 0;

  BeforeRet: do {
      if (!(a_33557186 <= i_33557185)) Temporary1 = false; else {        Temporary1 = (i_33557185 <= b_33557187);      }    if (Temporary1) {
    result_33557188 = i_33557185;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557185, a_33557186, b_33557187);
    }
    
  } while (false);

  return result_33557188;

}

function subInt(a_33556945, b_33556946) {
        var result = a_33556945 - b_33556946;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556805) {
      var ln = c_33556805.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556805.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556805.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function addChar(x_33557256, c_33557257) {
    x_33557256.push(c_33557257);

  
}
var ConstSet2 = setConstr([48, 57]);

function mulInt(a_33556949, b_33556950) {
        var result = a_33556949 * b_33556950;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet3 = setConstr(0, 125);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([65, 90]);

function nimMax(a_33556999, b_33557000) {
    var Temporary1;

  var result_33557001 = 0;

  BeforeRet: do {
    if ((b_33557000 <= a_33556999)) {
    Temporary1 = a_33556999;
    }
    else {
    Temporary1 = b_33557000;
    }
    
    result_33557001 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557001;

}

function nimMin(a_33556995, b_33556996) {
    var Temporary1;

  var result_33556997 = 0;

  BeforeRet: do {
    if ((a_33556995 <= b_33556996)) {
    Temporary1 = a_33556995;
    }
    else {
    Temporary1 = b_33556996;
    }
    
    result_33556997 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556997;

}
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet7 = setConstr(1);

function raiseFieldError2(f_33556779, discVal_33556780) {
    raiseException({message: (f_33556779 || []).concat(discVal_33556780 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556515) {
  var result_33556516 = [];

    if (x_33556515) {
    result_33556516 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556516 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556516;

}

function reprDiscriminant(e_33557425, typ_33557426) {
    var Temporary1;

  var result_33557427 = [];

    switch (typ_33557426.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557425, typ_33557426);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557425 == 0)));
      break;
    default: 
      Temporary1 = HEX24_335544323(e_33557425);
      break;
    }
    result_33557427 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557427;

}
var ConstSet8 = setConstr(1);

function nimCharToStr(x_33556518) {
  var result_33556519 = [];

    result_33556519 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556519[0] = x_33556518;

  return result_33556519;

}
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(0);
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(0);
var ConstSet14 = setConstr(0);
var ConstSet15 = setConstr(1);
var ConstSet16 = setConstr(0);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(0);
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr(0);
var ConstSet21 = setConstr(1);

function eqStrings(a_33556932, b_33556933) {
        if (a_33556932 == b_33556933) return true;
    if (a_33556932 === null && b_33556933.length == 0) return true;
    if (b_33556933 === null && a_33556932.length == 0) return true;
    if ((!a_33556932) || (!b_33556933)) return false;
    var alen = a_33556932.length;
    if (alen != b_33556933.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556932[i] != b_33556933[i]) return false;
    return true;
  

  
}
var ConstSet22 = setConstr(0);
var ConstSet23 = setConstr(1);
var ConstSet24 = setConstr(0);
var ConstSet25 = setConstr(1);
var ConstSet26 = setConstr(0);
var ConstSet27 = setConstr(1);
var ConstSet28 = setConstr(1);
var ConstSet29 = setConstr(1);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(1);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(0);
var ConstSet36 = setConstr(0);
var ConstSet37 = setConstr(1);
var ConstSet38 = setConstr(0);
var ConstSet39 = setConstr(1);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(1);
var ConstSet42 = setConstr(0);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(0);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(0);
var ConstSet47 = setConstr(1);
var ConstSet48 = setConstr(0);
var ConstSet49 = setConstr(1);
var ConstSet50 = setConstr(1);
var ConstSet51 = setConstr(2, 3, 8);
var ConstSet52 = setConstr(1, 4);
var ConstSet53 = setConstr(1);
var ConstSet54 = setConstr(1);
var ConstSet55 = setConstr(0);
var ConstSet56 = setConstr(1);
var ConstSet57 = setConstr(1);
      var fontExceptions_1828716691 = [[{Field0: 104, Field1: makeNimstrLit("\xE2\x84\x8E")}], [], [{Field0: 66, Field1: makeNimstrLit("\xE2\x84\xAC")}, {Field0: 69, Field1: makeNimstrLit("\xE2\x84\xB0")}, {Field0: 70, Field1: makeNimstrLit("\xE2\x84\xB1")}, {Field0: 72, Field1: makeNimstrLit("\xE2\x84\x8B")}, {Field0: 73, Field1: makeNimstrLit("\xE2\x84\x90")}, {Field0: 76, Field1: makeNimstrLit("\xE2\x84\x92")}, {Field0: 77, Field1: makeNimstrLit("\xE2\x84\xB3")}, {Field0: 82, Field1: makeNimstrLit("\xE2\x84\x9B")}, {Field0: 101, Field1: makeNimstrLit("\xE2\x84\xAF")}, {Field0: 103, Field1: makeNimstrLit("\xE2\x84\x8A")}, {Field0: 111, Field1: makeNimstrLit("\xE2\x84\xB4")}], [{Field0: 67, Field1: makeNimstrLit("\xE2\x84\xAD")}, {Field0: 72, Field1: makeNimstrLit("\xE2\x84\x8C")}, {Field0: 73, Field1: makeNimstrLit("\xE2\x84\x91")}, {Field0: 82, Field1: makeNimstrLit("\xE2\x84\x9C")}, {Field0: 90, Field1: makeNimstrLit("\xE2\x84\xA8")}], [{Field0: 67, Field1: makeNimstrLit("\xE2\x84\x82")}, {Field0: 72, Field1: makeNimstrLit("\xE2\x84\x8D")}, {Field0: 78, Field1: makeNimstrLit("\xE2\x84\x95")}, {Field0: 80, Field1: makeNimstrLit("\xE2\x84\x99")}, {Field0: 81, Field1: makeNimstrLit("\xE2\x84\x9A")}, {Field0: 82, Field1: makeNimstrLit("\xE2\x84\x9D")}, {Field0: 90, Field1: makeNimstrLit("\xE2\x84\xA4")}]];
var ConstSet58 = setConstr(60, 62, 94);
var ConstSet59 = setConstr(60, 62, 94);
var ConstSet60 = setConstr(45, 43, 32);
var ConstSet61 = setConstr([48, 57]);
var ConstSet62 = setConstr([48, 57]);
var ConstSet63 = setConstr([48, 57]);

function divInt(a_33556953, b_33556954) {
        if (b_33556954 == 0) raiseDivByZero();
    if (b_33556954 == -1 && a_33556953 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556953 / b_33556954);
  

  
}
var ConstSet64 = setConstr([65, 90], [97, 122]);
    var fontStarts_1828716670 = [new Int32Array([119860, 119808, 119964, 120068, 120120]), new Int32Array([120546, 120488, 0, 0, 0])];
    var fontsByName_1828716669 = [{Field0: makeNimstrLit("\\mathrm"), Field1: 0}, {Field0: makeNimstrLit("\\mathit"), Field1: 1}, {Field0: makeNimstrLit("\\mathbf"), Field1: 2}, {Field0: makeNimstrLit("\\mathcal"), Field1: 3}, {Field0: makeNimstrLit("\\mathfrak"), Field1: 4}, {Field0: makeNimstrLit("\\mathbb"), Field1: 5}];
var ConstSet65 = setConstr(1);
var ConstSet66 = setConstr(1);
var ConstSet67 = setConstr(0);
var ConstSet68 = setConstr(1);
var ConstSet69 = setConstr(1);
var ConstSet70 = setConstr(0);
var ConstSet71 = setConstr(1);
var ConstSet72 = setConstr(1);
var ConstSet73 = setConstr(0);
var ConstSet74 = setConstr(1);
var ConstSet75 = setConstr(1);
var ConstSet76 = setConstr(0);
var ConstSet77 = setConstr(1);
var ConstSet78 = setConstr(1);
var ConstSet79 = setConstr(0);
    var delimiters_1828716667 = [{Field0: makeNimstrLit("("), Field1: {rows: [makeNimstrLit("(")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\lparen"), Field1: {rows: [makeNimstrLit("(")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit(")"), Field1: {rows: [makeNimstrLit(")")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rparen"), Field1: {rows: [makeNimstrLit(")")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("["), Field1: {rows: [makeNimstrLit("[")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\lbrack"), Field1: {rows: [makeNimstrLit("[")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("]"), Field1: {rows: [makeNimstrLit("]")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rbrack"), Field1: {rows: [makeNimstrLit("]")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\{"), Field1: {rows: [makeNimstrLit("{")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\lbrace"), Field1: {rows: [makeNimstrLit("{")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\}"), Field1: {rows: [makeNimstrLit("}")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rbrace"), Field1: {rows: [makeNimstrLit("}")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA8"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA8")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\langle"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA8")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\lang"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA8")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA9"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rangle"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rang"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("|"), Field1: {rows: [makeNimstrLit("\xE2\x88\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\vert"), Field1: {rows: [makeNimstrLit("\xE2\x88\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\|"), Field1: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\Vert"), Field1: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x88"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x88")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\lceil"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x88")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x89"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x89")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rceil"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x89")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x8A"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x8A")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\lfloor"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x8A")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x8B"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x8B")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rfloor"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x8B")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA6"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\llbracket"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA7"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA7")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\rrbracket"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA7")], baseline: 0, width: 1, flag: 0}}];
var ConstSet80 = setConstr(1);
var ConstSet81 = setConstr(0);
var ConstSet82 = setConstr(1);
var ConstSet83 = setConstr(1);
var ConstSet84 = setConstr(0);
var ConstSet85 = setConstr(0);
var ConstSet86 = setConstr(1);
var ConstSet87 = setConstr(0);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(0);
var ConstSet91 = setConstr(1);
var ConstSet92 = setConstr(0);
var ConstSet93 = setConstr(1);
var ConstSet94 = setConstr(1);
var ConstSet95 = setConstr(0);
var ConstSet96 = setConstr(0);
var ConstSet97 = setConstr(1);
var ConstSet98 = setConstr(0);
var ConstSet99 = setConstr(1);
var ConstSet100 = setConstr(0);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(0);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(0);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(0);
var ConstSet107 = setConstr(1);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(1);
var ConstSet110 = setConstr(1);

function modInt(a_33556957, b_33556958) {
        if (b_33556958 == 0) raiseDivByZero();
    if (b_33556958 == -1 && a_33556957 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556957 % b_33556958);
  

  
}
        var commands_1828719785 = {data: [{Field0: 773313536, Field1: makeNimstrLit("between"), Field2: {rows: [makeNimstrLit("\xE2\x89\xAC")], baseline: 0, width: 1, flag: 2}}, {Field0: -1275910144, Field1: makeNimstrLit("varsupsetneq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: -1044255742, Field1: makeNimstrLit("boxdot"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA1")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1805090809, Field1: makeNimstrLit("Complex"), Field2: {rows: [makeNimstrLit("C")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1296414729, Field1: makeNimstrLit("ddag"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: -2143612919, Field1: makeNimstrLit("Box"), Field2: {rows: [makeNimstrLit("\xE2\x96\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 690548749, Field1: makeNimstrLit("tau"), Field2: {rows: [makeNimstrLit("\xCF\x84")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -949300208, Field1: makeNimstrLit("rho"), Field2: {rows: [makeNimstrLit("\xCF\x81")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 374125587, Field1: makeNimstrLit("nearrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1939687445, Field1: makeNimstrLit("hookrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\xAA")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -262745065, Field1: makeNimstrLit("bigstar"), Field2: {rows: [makeNimstrLit("\xE2\x98\x85")], baseline: 0, width: 1, flag: 0}}, {Field0: 638361624, Field1: makeNimstrLit("smallint"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAB")], baseline: 0, width: 1, flag: 3}}, {Field0: 1181947928, Field1: makeNimstrLit("searrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x98")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1376556004, Field1: makeNimstrLit("LaTeX"), Field2: {rows: [makeNimstrLit("L T X"), makeNimstrLit(" A E ")], baseline: 0, width: 5, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1177595934, Field1: makeNimstrLit("oint"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAE")], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -522425310, Field1: makeNimstrLit("geq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA5")], baseline: 0, width: 1, flag: 2}}, {Field0: 482634787, Field1: makeNimstrLit("neg"), Field2: {rows: [makeNimstrLit("\xC2\xAC")], baseline: 0, width: 1, flag: 2}}, {Field0: 699467812, Field1: makeNimstrLit("nvdash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xAC")], baseline: 0, width: 1, flag: 2}}, {Field0: 385061925, Field1: makeNimstrLit("nabla"), Field2: {rows: [makeNimstrLit("\xE2\x88\x87")], baseline: 0, width: 1, flag: 0}}, {Field0: 1299890214, Field1: makeNimstrLit("subset"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x82")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1847849000, Field1: makeNimstrLit("varUpsilon"), Field2: {rows: [makeNimstrLit("\xCE\xA5")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -2128973781, Field1: makeNimstrLit("i"), Field2: {rows: [makeNimstrLit("\xC4\xB1")], baseline: 0, width: 1, flag: 1}}, {Field0: 1474680876, Field1: makeNimstrLit("uarr"), Field2: {rows: [makeNimstrLit("\xE2\x86\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: -1454298068, Field1: makeNimstrLit("nprec"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x80")], baseline: 0, width: 1, flag: 2}}, {Field0: 598008878, Field1: makeNimstrLit("eqsim"), Field2: {rows: [makeNimstrLit("\xE2\x89\x82")], baseline: 0, width: 1, flag: 2}}, {Field0: 1714570287, Field1: makeNimstrLit("emptyset"), Field2: {rows: [makeNimstrLit("\xE2\x88\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: 1088214061, Field1: makeNimstrLit("nu"), Field2: {rows: [makeNimstrLit("\xCE\xBD")], baseline: 0, width: 1, flag: 1}}, {Field0: 181399601, Field1: makeNimstrLit("circledcirc"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x9A")], baseline: 0, width: 1, flag: 2}}, {Field0: 444384306, Field1: makeNimstrLit("rightsquigarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x9D")], baseline: 0, width: 1, flag: 2}}, {Field0: 174735408, Field1: makeNimstrLit("textdaggerdbl"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -612250570, Field1: makeNimstrLit("Gamma"), Field2: {rows: [makeNimstrLit("\xCE\x93")], baseline: 0, width: 1, flag: 1}}, {Field0: 340107318, Field1: makeNimstrLit("argmin"), Field2: {rows: [makeNimstrLit("arg\xE2\x80\x89min")], baseline: 0, width: 7, flag: 4}}, {Field0: -1880859592, Field1: makeNimstrLit("Phi"), Field2: {rows: [makeNimstrLit("\xCE\xA6")], baseline: 0, width: 1, flag: 1}}, {Field0: -601339847, Field1: makeNimstrLit("prec"), Field2: {rows: [makeNimstrLit("\xE2\x89\xBA")], baseline: 0, width: 1, flag: 2}}, {Field0: 644534329, Field1: makeNimstrLit("omega"), Field2: {rows: [makeNimstrLit("\xCF\x89")], baseline: 0, width: 1, flag: 1}}, {Field0: 299158587, Field1: makeNimstrLit("looparrowright"), Field2: {rows: [makeNimstrLit("\xE2\x86\xAC")], baseline: 0, width: 1, flag: 2}}, {Field0: 1695671356, Field1: makeNimstrLit("mid"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA3")], baseline: 0, width: 1, flag: 2}}, {Field0: -1661594566, Field1: makeNimstrLit("lozenge"), Field2: {rows: [makeNimstrLit("\xE2\x97\x8A")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -965019585, Field1: makeNimstrLit("dotsb"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAF")], baseline: 0, width: 1, flag: 0}}, {Field0: -353695681, Field1: makeNimstrLit("cos"), Field2: {rows: [makeNimstrLit("cos")], baseline: 0, width: 3, flag: 4}}, {Field0: -337936319, Field1: makeNimstrLit("xi"), Field2: {rows: [makeNimstrLit("\xCE\xBE")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -482070460, Field1: makeNimstrLit("triangleq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x9C")], baseline: 0, width: 1, flag: 2}}, {Field0: 1865025605, Field1: makeNimstrLit("upharpoonright"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBE")], baseline: 0, width: 1, flag: 2}}, {Field0: -99402684, Field1: makeNimstrLit("llbracket"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -595749816, Field1: makeNimstrLit("Rrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x9B")], baseline: 0, width: 1, flag: 2}}, {Field0: 444818505, Field1: makeNimstrLit("twoheadleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x9E")], baseline: 0, width: 1, flag: 2}}, {Field0: 949833801, Field1: makeNimstrLit("dashv"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA3")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 731926604, Field1: makeNimstrLit("Rho"), Field2: {rows: [makeNimstrLit("P")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -152946609, Field1: makeNimstrLit("Lrarr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 999038032, Field1: makeNimstrLit("models"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: 856149071, Field1: makeNimstrLit("liminf"), Field2: {rows: [makeNimstrLit("lim inf")], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 260524116, Field1: makeNimstrLit("div"), Field2: {rows: [makeNimstrLit("\xC3\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1743740842, Field1: makeNimstrLit("varsigma"), Field2: {rows: [makeNimstrLit("\xCF\x82")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 152217691, Field1: makeNimstrLit("to"), Field2: {rows: [makeNimstrLit("\xE2\x86\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -232435621, Field1: makeNimstrLit("leftrightarrows"), Field2: {rows: [makeNimstrLit("\xE2\x87\x86")], baseline: 0, width: 1, flag: 2}}, {Field0: -1894549413, Field1: makeNimstrLit("gimel"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB7")], baseline: 0, width: 1, flag: 1}}, {Field0: -977484706, Field1: makeNimstrLit("textunderscore"), Field2: {rows: [makeNimstrLit("_")], baseline: 0, width: 1, flag: 0}}, {Field0: -653542309, Field1: makeNimstrLit("hom"), Field2: {rows: [makeNimstrLit("hom")], baseline: 0, width: 3, flag: 4}}, {Field0: -836744096, Field1: makeNimstrLit("leftleftarrows"), Field2: {rows: [makeNimstrLit("\xE2\x87\x87")], baseline: 0, width: 1, flag: 2}}, {Field0: 778788961, Field1: makeNimstrLit("bigvee"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x81")], baseline: 0, width: 1, flag: 3}}, {Field0: 213332064, Field1: makeNimstrLit("precsim"), Field2: {rows: [makeNimstrLit("\xE2\x89\xBE")], baseline: 0, width: 1, flag: 2}}, {Field0: 727641187, Field1: makeNimstrLit("minuscoloncolon"), Field2: {rows: [makeNimstrLit("::: :, \xE2\x88\x92\xE2\x88\xB7")], baseline: 0, width: 9, flag: 2}}, {Field0: -561121181, Field1: makeNimstrLit("backsim"), Field2: {rows: [makeNimstrLit("\xE2\x88\xBD")], baseline: 0, width: 1, flag: 2}}, {Field0: 282381413, Field1: makeNimstrLit("gneq"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: 460405857, Field1: makeNimstrLit("Vert"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: 1072275553, Field1: makeNimstrLit("AA"), Field2: {rows: [makeNimstrLit("\xC3\x85")], baseline: 0, width: 1, flag: 1}}, {Field0: 259182696, Field1: makeNimstrLit("gt"), Field2: {rows: [makeNimstrLit(">")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1338973290, Field1: makeNimstrLit("vdots"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAE")], baseline: 0, width: 1, flag: 0}}, {Field0: 749951083, Field1: makeNimstrLit("eta"), Field2: {rows: [makeNimstrLit("\xCE\xB7")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1938319251, Field1: makeNimstrLit("oiiint"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB0")], baseline: 0, width: 1, flag: 3}}, {Field0: 1672714350, Field1: makeNimstrLit("unrhd"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB5")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -587095952, Field1: makeNimstrLit("ntrianglelefteq"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAC")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1364552818, Field1: makeNimstrLit("notin"), Field2: {rows: [makeNimstrLit("\xE2\x88\x89")], baseline: 0, width: 1, flag: 2}}, {Field0: -718976910, Field1: makeNimstrLit("Sigma"), Field2: {rows: [makeNimstrLit("\xCE\xA3")], baseline: 0, width: 1, flag: 1}}, {Field0: -331592588, Field1: makeNimstrLit("lbrace"), Field2: {rows: [makeNimstrLit("{")], baseline: 0, width: 1, flag: 0}}, {Field0: -2046516107, Field1: makeNimstrLit("rArr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -1988400011, Field1: makeNimstrLit("gnapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x8A")], baseline: 0, width: 1, flag: 2}}, {Field0: 1748272243, Field1: makeNimstrLit("o"), Field2: {rows: [makeNimstrLit("\xC3\xB8")], baseline: 0, width: 1, flag: 1}}, {Field0: 312313973, Field1: makeNimstrLit("dotsi"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAF")], baseline: 0, width: 1, flag: 0}}, {Field0: 19161209, Field1: makeNimstrLit("ddagger"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: -1893200774, Field1: makeNimstrLit("ln"), Field2: {rows: [makeNimstrLit("ln")], baseline: 0, width: 2, flag: 4}}, {Field0: -100797317, Field1: makeNimstrLit("downdownarrows"), Field2: {rows: [makeNimstrLit("\xE2\x87\x8A")], baseline: 0, width: 1, flag: 2}}, {Field0: -1755413380, Field1: makeNimstrLit("subsetneqq"), Field2: {rows: [makeNimstrLit("\xE2\xAB\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -2084440962, Field1: makeNimstrLit("parallel"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 2}}, {Field0: 977130622, Field1: makeNimstrLit("gamma"), Field2: {rows: [makeNimstrLit("\xCE\xB3")], baseline: 0, width: 1, flag: 1}}, {Field0: 1135297664, Field1: makeNimstrLit("uArr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: -296721281, Field1: makeNimstrLit("ddots"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xB1")], baseline: 0, width: 1, flag: 0}}, {Field0: -222212994, Field1: makeNimstrLit("clubs"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: -1164247933, Field1: makeNimstrLit("boxplus"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x9E")], baseline: 0, width: 1, flag: 2}}, {Field0: 1514094724, Field1: makeNimstrLit("dagger"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: 1311469697, Field1: makeNimstrLit("cotg"), Field2: {rows: [makeNimstrLit("cotg")], baseline: 0, width: 4, flag: 4}}, {Field0: 490725510, Field1: makeNimstrLit("because"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB5")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 966588552, Field1: makeNimstrLit("leftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -999892852, Field1: makeNimstrLit("ne"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA0")], baseline: 0, width: 1, flag: 2}}, {Field0: -1858303860, Field1: makeNimstrLit("iota"), Field2: {rows: [makeNimstrLit("\xCE\xB9")], baseline: 0, width: 1, flag: 1}}, {Field0: 1746366604, Field1: makeNimstrLit("rq"), Field2: {rows: [makeNimstrLit("\xE2\x80\xB2")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 732241043, Field1: makeNimstrLit("doteq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: 58222740, Field1: makeNimstrLit("sh"), Field2: {rows: [makeNimstrLit("sh")], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -797167466, Field1: makeNimstrLit("gtreqqless"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x8C")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1089103717, Field1: makeNimstrLit("blacktriangleleft"), Field2: {rows: [makeNimstrLit("\xE2\x97\x80")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1035649181, Field1: makeNimstrLit("Z"), Field2: {rows: [makeNimstrLit("Z")], baseline: 0, width: 1, flag: 1}}, {Field0: -2091908962, Field1: makeNimstrLit("gtreqless"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x9B")], baseline: 0, width: 1, flag: 2}}, {Field0: 965928095, Field1: makeNimstrLit("Delta"), Field2: {rows: [makeNimstrLit("\xCE\x94")], baseline: 0, width: 1, flag: 1}}, {Field0: -420720480, Field1: makeNimstrLit("textasciitilde"), Field2: {rows: [makeNimstrLit("~")], baseline: 0, width: 1, flag: 0}}, {Field0: -778712927, Field1: makeNimstrLit("Join"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -1789499230, Field1: makeNimstrLit("Leftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: 1590319267, Field1: makeNimstrLit("ominus"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 1997743268, Field1: makeNimstrLit("lt"), Field2: {rows: [makeNimstrLit("<")], baseline: 0, width: 1, flag: 2}}, {Field0: -1355677533, Field1: makeNimstrLit("reals"), Field2: {rows: [makeNimstrLit("R")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -523187031, Field1: makeNimstrLit("iint"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAC")], baseline: 0, width: 1, flag: 3}}, {Field0: -1036495703, Field1: makeNimstrLit("bigsqcup"), Field2: {rows: [makeNimstrLit("\xE2\xA8\x86")], baseline: 0, width: 1, flag: 3}}, {Field0: 128442538, Field1: makeNimstrLit("cosh"), Field2: {rows: [makeNimstrLit("cosh")], baseline: 0, width: 4, flag: 4}}, {Field0: -2114553684, Field1: makeNimstrLit("textellipsis"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1448098991, Field1: makeNimstrLit("lessapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: -1900930897, Field1: makeNimstrLit("precnapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xB9")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1279032140, Field1: makeNimstrLit("mapsto"), Field2: {rows: [makeNimstrLit("\xE2\x86\xA6")], baseline: 0, width: 1, flag: 2}}, {Field0: 659410101, Field1: makeNimstrLit("biguplus"), Field2: {rows: [makeNimstrLit("\xE2\xA8\x84")], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 561724599, Field1: makeNimstrLit("lesseqqgtr"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1809787065, Field1: makeNimstrLit("amalg"), Field2: {rows: [makeNimstrLit("\xE2\xA8\xBF")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -37402437, Field1: makeNimstrLit("sum"), Field2: {rows: [makeNimstrLit("\xE2\x88\x91")], baseline: 0, width: 1, flag: 3}}, {Field0: 1885254844, Field1: makeNimstrLit("lor"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: -1271205699, Field1: makeNimstrLit("harr"), Field2: {rows: [makeNimstrLit("\xE2\x86\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: -9535301, Field1: makeNimstrLit("rrbracket"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xA7")], baseline: 0, width: 1, flag: 0}}, {Field0: 784871615, Field1: makeNimstrLit("nleftrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\xAE")], baseline: 0, width: 1, flag: 2}}, {Field0: 1326387387, Field1: makeNimstrLit("csc"), Field2: {rows: [makeNimstrLit("csc")], baseline: 0, width: 3, flag: 4}}, {Field0: -1490766655, Field1: makeNimstrLit("textquoteleft"), Field2: {rows: [makeNimstrLit("\xE2\x80\x98")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -422736700, Field1: makeNimstrLit("oslash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x98")], baseline: 0, width: 1, flag: 2}}, {Field0: 1286160581, Field1: makeNimstrLit("bigcirc"), Field2: {rows: [makeNimstrLit("\xE2\x97\xAF")], baseline: 0, width: 1, flag: 2}}, {Field0: 239622342, Field1: makeNimstrLit("twoheadrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\xA0")], baseline: 0, width: 1, flag: 2}}, {Field0: -142582585, Field1: makeNimstrLit("land"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA7")], baseline: 0, width: 1, flag: 2}}, {Field0: -108495675, Field1: makeNimstrLit("upuparrows"), Field2: {rows: [makeNimstrLit("\xE2\x87\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: 1882464453, Field1: makeNimstrLit("pitchfork"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 695680199, Field1: makeNimstrLit("nsucc"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x81")], baseline: 0, width: 1, flag: 2}}, {Field0: 1379611846, Field1: makeNimstrLit("nsupseteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x89")], baseline: 0, width: 1, flag: 2}}, {Field0: 1519946951, Field1: makeNimstrLit("dotso"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 1121218765, Field1: makeNimstrLit("rightthreetimes"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x8C")], baseline: 0, width: 1, flag: 2}}, {Field0: -1661306674, Field1: makeNimstrLit("Bumpeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x8E")], baseline: 0, width: 1, flag: 2}}, {Field0: -1584718641, Field1: makeNimstrLit("Doteq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: 2014841039, Field1: makeNimstrLit("succneqq"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xB6")], baseline: 0, width: 1, flag: 2}}, {Field0: -159647535, Field1: makeNimstrLit("upsilon"), Field2: {rows: [makeNimstrLit("\xCF\x85")], baseline: 0, width: 1, flag: 1}}, {Field0: 1363198162, Field1: makeNimstrLit("curlyeqsucc"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x9F")], baseline: 0, width: 1, flag: 2}}, {Field0: -884689710, Field1: makeNimstrLit("vartheta"), Field2: {rows: [makeNimstrLit("\xCF\x91")], baseline: 0, width: 1, flag: 1}}, {Field0: -1843728178, Field1: makeNimstrLit("colon"), Field2: {rows: [makeNimstrLit(":")], baseline: 0, width: 1, flag: 0}}, {Field0: -1445616431, Field1: makeNimstrLit("surd"), Field2: {rows: [makeNimstrLit("\xE2\x88\x9A")], baseline: 0, width: 1, flag: 0}}, {Field0: 457960649, Field1: makeNimstrLit("textbackslash"), Field2: {rows: [makeNimstrLit("\\")], baseline: 0, width: 1, flag: 0}}, {Field0: -435545897, Field1: makeNimstrLit("longrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB6")], baseline: 0, width: 1, flag: 2}}, {Field0: -1222909744, Field1: makeNimstrLit("sect"), Field2: {rows: [makeNimstrLit("\xC2\xA7")], baseline: 0, width: 1, flag: 0}}, {Field0: -2121057065, Field1: makeNimstrLit("sin"), Field2: {rows: [makeNimstrLit("sin")], baseline: 0, width: 3, flag: 4}}, {Field0: -1726815019, Field1: makeNimstrLit("cth"), Field2: {rows: [makeNimstrLit("cth")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 979290334, Field1: makeNimstrLit("dots"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1312209120, Field1: makeNimstrLit("ldotp"), Field2: {rows: [makeNimstrLit(".")], baseline: 0, width: 1, flag: 2}}, {Field0: 861523169, Field1: makeNimstrLit("approxcolon"), Field2: {rows: [makeNimstrLit("\xE2\x89\x88:")], baseline: 0, width: 2, flag: 2}}, {Field0: 2048828642, Field1: makeNimstrLit("upharpoonleft"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBF")], baseline: 0, width: 1, flag: 2}}, {Field0: -1199991581, Field1: makeNimstrLit("tg"), Field2: {rows: [makeNimstrLit("tg")], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1893927147, Field1: makeNimstrLit("gtrdot"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: -1959936789, Field1: makeNimstrLit("succeq"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xB0")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2132660463, Field1: makeNimstrLit("lrarr"), Field2: {rows: [makeNimstrLit("\xE2\x86\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 488165615, Field1: makeNimstrLit("top"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA4")], baseline: 0, width: 1, flag: 0}}, {Field0: -606145295, Field1: makeNimstrLit("ll"), Field2: {rows: [makeNimstrLit("\xE2\x89\xAA")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1807494389, Field1: makeNimstrLit("diamonds"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA2")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 192740599, Field1: makeNimstrLit("succapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xB8")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -560628486, Field1: makeNimstrLit("min"), Field2: {rows: [makeNimstrLit("min")], baseline: 0, width: 3, flag: 4}}, {Field0: 1285704955, Field1: makeNimstrLit("longleftrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: 1234765051, Field1: makeNimstrLit("inf"), Field2: {rows: [makeNimstrLit("inf")], baseline: 0, width: 3, flag: 4}}, {Field0: -978306819, Field1: makeNimstrLit("projlim"), Field2: {rows: [makeNimstrLit("proj lim")], baseline: 0, width: 8, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1846918907, Field1: makeNimstrLit("impliedby"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB8")], baseline: 0, width: 1, flag: 2}}, {Field0: -1475488507, Field1: makeNimstrLit("Lleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x9A")], baseline: 0, width: 1, flag: 2}}, {Field0: 1549492486, Field1: makeNimstrLit("equalscolon"), Field2: {rows: [makeNimstrLit("\xE2\x89\x95")], baseline: 0, width: 1, flag: 2}}, {Field0: -1609219833, Field1: makeNimstrLit("blacksquare"), Field2: {rows: [makeNimstrLit("\xE2\x96\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: 1089001737, Field1: makeNimstrLit("Supset"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: -989102838, Field1: makeNimstrLit("preceq"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xAF")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1645364493, Field1: makeNimstrLit("rightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -1458530034, Field1: makeNimstrLit("vartriangleright"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB3")], baseline: 0, width: 1, flag: 2}}, {Field0: 1612016911, Field1: makeNimstrLit("bigoplus"), Field2: {rows: [makeNimstrLit("\xE2\xA8\x81")], baseline: 0, width: 1, flag: 3}}, {Field0: 491266320, Field1: makeNimstrLit("lessdot"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 131900689, Field1: makeNimstrLit("in"), Field2: {rows: [makeNimstrLit("\xE2\x88\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -359701233, Field1: makeNimstrLit("dag"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: -187569904, Field1: makeNimstrLit("cot"), Field2: {rows: [makeNimstrLit("cot")], baseline: 0, width: 3, flag: 4}}, {Field0: -1545899756, Field1: makeNimstrLit("Game"), Field2: {rows: [makeNimstrLit("\xE2\x85\x81")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1835041046, Field1: makeNimstrLit("ntrianglerighteq"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAD")], baseline: 0, width: 1, flag: 2}}, {Field0: 1895304471, Field1: makeNimstrLit("gg"), Field2: {rows: [makeNimstrLit("\xE2\x89\xAB")], baseline: 0, width: 1, flag: 2}}, {Field0: -1002856168, Field1: makeNimstrLit("exists"), Field2: {rows: [makeNimstrLit("\xE2\x88\x83")], baseline: 0, width: 1, flag: 2}}, {Field0: 1855977753, Field1: makeNimstrLit("barwedge"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xBC")], baseline: 0, width: 1, flag: 2}}, {Field0: -13362922, Field1: makeNimstrLit("varPhi"), Field2: {rows: [makeNimstrLit("\xCE\xA6")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1924908771, Field1: makeNimstrLit("Colonsim"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB7\xE2\x88\xBC")], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1350079776, Field1: makeNimstrLit("ctg"), Field2: {rows: [makeNimstrLit("ctg")], baseline: 0, width: 3, flag: 4}}, {Field0: -419504863, Field1: makeNimstrLit("rightarrowtail"), Field2: {rows: [makeNimstrLit("\xE2\x86\xA3")], baseline: 0, width: 1, flag: 2}}, {Field0: -1088790238, Field1: makeNimstrLit("pm"), Field2: {rows: [makeNimstrLit("\xC2\xB1")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1071612201, Field1: makeNimstrLit("oiint"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAF")], baseline: 0, width: 1, flag: 3}}, {Field0: -1023749846, Field1: makeNimstrLit("leq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA4")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -2009879247, Field1: makeNimstrLit("unlhd"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB4")], baseline: 0, width: 1, flag: 2}}, {Field0: 627659057, Field1: makeNimstrLit("Lambda"), Field2: {rows: [makeNimstrLit("\xCE\x9B")], baseline: 0, width: 1, flag: 1}}, {Field0: -1787755213, Field1: makeNimstrLit("oplus"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x95")], baseline: 0, width: 1, flag: 2}}, {Field0: -184680143, Field1: makeNimstrLit("triangleright"), Field2: {rows: [makeNimstrLit("\xE2\x96\xB9")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1440444105, Field1: makeNimstrLit("bigwedge"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x80")], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -760926919, Field1: makeNimstrLit("diagdown"), Field2: {rows: [makeNimstrLit("\xE2\x95\xB2")], baseline: 0, width: 1, flag: 0}}, {Field0: 535853370, Field1: makeNimstrLit("iiint"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAD")], baseline: 0, width: 1, flag: 3}}, {Field0: 1989892411, Field1: makeNimstrLit("cap"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA9")], baseline: 0, width: 1, flag: 2}}, {Field0: -1078095557, Field1: makeNimstrLit("ngeqslant"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB1")], baseline: 0, width: 1, flag: 2}}, {Field0: -407561924, Field1: makeNimstrLit("arcsin"), Field2: {rows: [makeNimstrLit("arcsin")], baseline: 0, width: 6, flag: 4}}, {Field0: -490111682, Field1: makeNimstrLit("curlywedge"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x8F")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1772874048, Field1: makeNimstrLit("mod"), Field2: {rows: [makeNimstrLit("bmod")], baseline: 0, width: 4, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1858042554, Field1: makeNimstrLit("square"), Field2: {rows: [makeNimstrLit("\xE2\x96\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: -1357095609, Field1: makeNimstrLit("uparrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: -52651705, Field1: makeNimstrLit("Diamond"), Field2: {rows: [makeNimstrLit("\xE2\x97\x8A")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -817700533, Field1: makeNimstrLit("sqsupseteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -1135570613, Field1: makeNimstrLit("multimap"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB8")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -30619314, Field1: makeNimstrLit("therefore"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB4")], baseline: 0, width: 1, flag: 2}}, {Field0: 55854415, Field1: makeNimstrLit("smallsmile"), Field2: {rows: [makeNimstrLit("\xE2\x8C\xA3")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 468669778, Field1: makeNimstrLit("isin"), Field2: {rows: [makeNimstrLit("\xE2\x88\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -1293458094, Field1: makeNimstrLit("restriction"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBE")], baseline: 0, width: 1, flag: 2}}, {Field0: 179645778, Field1: makeNimstrLit("Longleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB8")], baseline: 0, width: 1, flag: 2}}, {Field0: -970868397, Field1: makeNimstrLit("sube"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x86")], baseline: 0, width: 1, flag: 2}}, {Field0: 125073749, Field1: makeNimstrLit("nsupseteqq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x89")], baseline: 0, width: 1, flag: 2}}, {Field0: 353154387, Field1: makeNimstrLit("ntriangleleft"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAA")], baseline: 0, width: 1, flag: 2}}, {Field0: -1536889512, Field1: makeNimstrLit("succsim"), Field2: {rows: [makeNimstrLit("\xE2\x89\xBF")], baseline: 0, width: 1, flag: 2}}, {Field0: -1381979816, Field1: makeNimstrLit("neq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA0")], baseline: 0, width: 1, flag: 2}}, {Field0: 9375058, Field1: makeNimstrLit("Re"), Field2: {rows: [makeNimstrLit("\xE2\x84\x9C")], baseline: 0, width: 1, flag: 1}}, {Field0: -1778153125, Field1: makeNimstrLit("And"), Field2: {rows: [makeNimstrLit("&")], baseline: 0, width: 1, flag: 2}}, {Field0: 2108854619, Field1: makeNimstrLit("aleph"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB5")], baseline: 0, width: 1, flag: 1}}, {Field0: -727795363, Field1: makeNimstrLit("boxtimes"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA0")], baseline: 0, width: 1, flag: 2}}, {Field0: 1245973854, Field1: makeNimstrLit("Larr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: -1574408866, Field1: makeNimstrLit("lArr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: -722184869, Field1: makeNimstrLit("AE"), Field2: {rows: [makeNimstrLit("\xC3\x86")], baseline: 0, width: 1, flag: 1}}, {Field0: -996418216, Field1: makeNimstrLit("infin"), Field2: {rows: [makeNimstrLit("\xE2\x88\x9E")], baseline: 0, width: 1, flag: 0}}, {Field0: 940000598, Field1: makeNimstrLit("Dagger"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: 432784739, Field1: makeNimstrLit("varDelta"), Field2: {rows: [makeNimstrLit("\xCE\x94")], baseline: 0, width: 1, flag: 1}}, {Field0: 1717310812, Field1: makeNimstrLit("yen"), Field2: {rows: [makeNimstrLit("\xC2\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: 1287358821, Field1: makeNimstrLit("varTheta"), Field2: {rows: [makeNimstrLit("\xCE\x98")], baseline: 0, width: 1, flag: 1}}, {Field0: -140368539, Field1: makeNimstrLit("blacktriangle"), Field2: {rows: [makeNimstrLit("\xE2\x96\xB2")], baseline: 0, width: 1, flag: 0}}, {Field0: 1128273242, Field1: makeNimstrLit("degree"), Field2: {rows: [makeNimstrLit("\xC2\xB0")], baseline: 0, width: 1, flag: 0}}, {Field0: 1182784865, Field1: makeNimstrLit("sup"), Field2: {rows: [makeNimstrLit("sup")], baseline: 0, width: 3, flag: 4}}, {Field0: 118212969, Field1: makeNimstrLit("eth"), Field2: {rows: [makeNimstrLit("\xC3\xB0")], baseline: 0, width: 1, flag: 1}}, {Field0: -970887830, Field1: makeNimstrLit("nsucceq"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xA1")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -69842580, Field1: makeNimstrLit("flat"), Field2: {rows: [makeNimstrLit("\xE2\x99\xAD")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1415733615, Field1: makeNimstrLit("colonsim"), Field2: {rows: [makeNimstrLit(":\xE2\x88\xBC")], baseline: 0, width: 2, flag: 2}}, {Field0: 1135244656, Field1: makeNimstrLit("nsim"), Field2: {rows: [makeNimstrLit("\xE2\x89\x81")], baseline: 0, width: 1, flag: 2}}, {Field0: -857002639, Field1: makeNimstrLit("Lsh"), Field2: {rows: [makeNimstrLit("\xE2\x86\xB0")], baseline: 0, width: 1, flag: 2}}, {Field0: 1069478258, Field1: makeNimstrLit("vert"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: 1989233008, Field1: makeNimstrLit("thetasym"), Field2: {rows: [makeNimstrLit("\xCF\x91")], baseline: 0, width: 1, flag: 1}}, {Field0: 1164383599, Field1: makeNimstrLit("ldots"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 222810489, Field1: makeNimstrLit("sim"), Field2: {rows: [makeNimstrLit("\xE2\x88\xBC")], baseline: 0, width: 1, flag: 2}}, {Field0: 1532834170, Field1: makeNimstrLit("nparallel"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA6")], baseline: 0, width: 1, flag: 2}}, {Field0: 597902715, Field1: makeNimstrLit("ge"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA5")], baseline: 0, width: 1, flag: 2}}, {Field0: -1771227780, Field1: makeNimstrLit("centerdot"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: 742864253, Field1: makeNimstrLit("sqsupset"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: -1658382981, Field1: makeNimstrLit("Epsilon"), Field2: {rows: [makeNimstrLit("E")], baseline: 0, width: 1, flag: 1}}, {Field0: -650839681, Field1: makeNimstrLit("thickapprox"), Field2: {rows: [makeNimstrLit("\xE2\x89\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -1698018951, Field1: makeNimstrLit("Chi"), Field2: {rows: [makeNimstrLit("X")], baseline: 0, width: 1, flag: 1}}, {Field0: 428323201, Field1: makeNimstrLit("longmapsto"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xBC")], baseline: 0, width: 1, flag: 2}}, {Field0: 1829878146, Field1: makeNimstrLit("textregistered"), Field2: {rows: [makeNimstrLit("\xC2\xAE")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -967296636, Field1: makeNimstrLit("lbrack"), Field2: {rows: [makeNimstrLit("[")], baseline: 0, width: 1, flag: 0}}, {Field0: -862051963, Field1: makeNimstrLit("nleq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB0")], baseline: 0, width: 1, flag: 2}}, {Field0: 1726809478, Field1: makeNimstrLit("colonminus"), Field2: {rows: [makeNimstrLit(":\xE2\x88\x92")], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1240069752, Field1: makeNimstrLit("divideontimes"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x87")], baseline: 0, width: 1, flag: 2}}, {Field0: -1122236023, Field1: makeNimstrLit("perp"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA5")], baseline: 0, width: 1, flag: 2}}, {Field0: 448181641, Field1: makeNimstrLit("prime"), Field2: {rows: [makeNimstrLit("\xE2\x80\xB2")], baseline: 0, width: 1, flag: 0}}, {Field0: -1049345653, Field1: makeNimstrLit("supsetneq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -186772081, Field1: makeNimstrLit("lnot"), Field2: {rows: [makeNimstrLit("\xC2\xAC")], baseline: 0, width: 1, flag: 2}}, {Field0: 1143282064, Field1: makeNimstrLit("doublecup"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: -1355421295, Field1: makeNimstrLit("forall"), Field2: {rows: [makeNimstrLit("\xE2\x88\x80")], baseline: 0, width: 1, flag: 2}}, {Field0: 780416399, Field1: makeNimstrLit("leftharpoondown"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBD")], baseline: 0, width: 1, flag: 2}}, {Field0: 851116435, Field1: makeNimstrLit("coloneqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: -2076267116, Field1: makeNimstrLit("leadsto"), Field2: {rows: [makeNimstrLit("\xE2\x87\x9D")], baseline: 0, width: 1, flag: 2}}, {Field0: -1095375470, Field1: makeNimstrLit("ncong"), Field2: {rows: [makeNimstrLit("\xE2\x89\x86")], baseline: 0, width: 1, flag: 2}}, {Field0: 1902103956, Field1: makeNimstrLit("varPi"), Field2: {rows: [makeNimstrLit("\xCE\xA0")], baseline: 0, width: 1, flag: 1}}, {Field0: -1114860145, Field1: makeNimstrLit("chi"), Field2: {rows: [makeNimstrLit("\xCF\x87")], baseline: 0, width: 1, flag: 1}}, {Field0: -137865835, Field1: makeNimstrLit("maltese"), Field2: {rows: [makeNimstrLit("\xE2\x9C\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: 1222922649, Field1: makeNimstrLit("dblcolon"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: 142935450, Field1: makeNimstrLit("succ"), Field2: {rows: [makeNimstrLit("\xE2\x89\xBB")], baseline: 0, width: 1, flag: 2}}, {Field0: -235331173, Field1: makeNimstrLit("smallsetminus"), Field2: {rows: [makeNimstrLit("\xE2\x88\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 153636250, Field1: makeNimstrLit("det"), Field2: {rows: [makeNimstrLit("det")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -534911583, Field1: makeNimstrLit("dashleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\xA0")], baseline: 0, width: 1, flag: 2}}, {Field0: 331403682, Field1: makeNimstrLit("leqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA6")], baseline: 0, width: 1, flag: 2}}, {Field0: 309436835, Field1: makeNimstrLit("textquoteright"), Field2: {rows: [makeNimstrLit("\xE2\x80\x99")], baseline: 0, width: 1, flag: 0}}, {Field0: 183010724, Field1: makeNimstrLit("doteqdot"), Field2: {rows: [makeNimstrLit("\xE2\x89\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: -140396123, Field1: makeNimstrLit("geqslant"), Field2: {rows: [makeNimstrLit("\xE2\xA9\xBE")], baseline: 0, width: 1, flag: 2}}, {Field0: -822921819, Field1: makeNimstrLit("textquotedblleft"), Field2: {rows: [makeNimstrLit("\xE2\x80\x9C")], baseline: 0, width: 1, flag: 0}}, {Field0: 1216695713, Field1: makeNimstrLit("diagup"), Field2: {rows: [makeNimstrLit("\xE2\x95\xB1")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2022730153, Field1: makeNimstrLit("beta"), Field2: {rows: [makeNimstrLit("\xCE\xB2")], baseline: 0, width: 1, flag: 1}}, {Field0: 923832745, Field1: makeNimstrLit("aa"), Field2: {rows: [makeNimstrLit("\xC3\xA5")], baseline: 0, width: 1, flag: 1}}, {Field0: 483458475, Field1: makeNimstrLit("rbrack"), Field2: {rows: [makeNimstrLit("]")], baseline: 0, width: 1, flag: 0}}, {Field0: -701556308, Field1: makeNimstrLit("curvearrowleft"), Field2: {rows: [makeNimstrLit("\xE2\x86\xB6")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -495585874, Field1: makeNimstrLit("sigma"), Field2: {rows: [makeNimstrLit("\xCF\x83")], baseline: 0, width: 1, flag: 1}}, {Field0: 937655727, Field1: makeNimstrLit("geqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA7")], baseline: 0, width: 1, flag: 2}}, {Field0: -1858229842, Field1: makeNimstrLit("arctan"), Field2: {rows: [makeNimstrLit("arctan")], baseline: 0, width: 6, flag: 4}}, {Field0: -212827727, Field1: makeNimstrLit("larr"), Field2: {rows: [makeNimstrLit("\xE2\x86\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1177094581, Field1: makeNimstrLit("bigcup"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x83")], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 744779191, Field1: makeNimstrLit("le"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA4")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -189880903, Field1: makeNimstrLit("lll"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x98")], baseline: 0, width: 1, flag: 2}}, {Field0: -665286215, Field1: makeNimstrLit("varepsilon"), Field2: {rows: [makeNimstrLit("\xCE\xB5")], baseline: 0, width: 1, flag: 1}}, {Field0: 1679721915, Field1: makeNimstrLit("ratio"), Field2: {rows: [makeNimstrLit(":")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 438242753, Field1: makeNimstrLit("lfloor"), Field2: {rows: [makeNimstrLit("\xE2\x8C\x8A")], baseline: 0, width: 1, flag: 0}}, {Field0: -991056446, Field1: makeNimstrLit("smallfrown"), Field2: {rows: [makeNimstrLit("\xE2\x8C\xA2")], baseline: 0, width: 1, flag: 2}}, {Field0: -1690050109, Field1: makeNimstrLit("bullet"), Field2: {rows: [makeNimstrLit("\xE2\x88\x99")], baseline: 0, width: 1, flag: 2}}, {Field0: -1543983676, Field1: makeNimstrLit("doublecap"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -1111792189, Field1: makeNimstrLit("varsupsetneqq"), Field2: {rows: [makeNimstrLit("\xE2\xAB\x8C")], baseline: 0, width: 1, flag: 2}}, {Field0: 1936615876, Field1: makeNimstrLit("Alpha"), Field2: {rows: [makeNimstrLit("A")], baseline: 0, width: 1, flag: 1}}, {Field0: -204029499, Field1: makeNimstrLit("epsilon"), Field2: {rows: [makeNimstrLit("\xCF\xB5")], baseline: 0, width: 1, flag: 1}}, {Field0: 2041800129, Field1: makeNimstrLit("R"), Field2: {rows: [makeNimstrLit("R")], baseline: 0, width: 1, flag: 1}}, {Field0: -1642090039, Field1: makeNimstrLit("wp"), Field2: {rows: [makeNimstrLit("\xE2\x84\x98")], baseline: 0, width: 1, flag: 1}}, {Field0: 1401058759, Field1: makeNimstrLit("arcctg"), Field2: {rows: [makeNimstrLit("arcctg")], baseline: 0, width: 6, flag: 4}}, {Field0: 1577711051, Field1: makeNimstrLit("textbraceright"), Field2: {rows: [makeNimstrLit("}")], baseline: 0, width: 1, flag: 0}}, {Field0: -769423932, Field1: makeNimstrLit("arg"), Field2: {rows: [makeNimstrLit("arg")], baseline: 0, width: 3, flag: 4}}, {Field0: 1246567885, Field1: makeNimstrLit("pounds"), Field2: {rows: [makeNimstrLit("\xC2\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: -1440281138, Field1: makeNimstrLit("otimes"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: 311781838, Field1: makeNimstrLit("copyright"), Field2: {rows: [makeNimstrLit("\xC2\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: -61369904, Field1: makeNimstrLit("intop"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAB")], baseline: 0, width: 1, flag: 3}}, {Field0: 492728785, Field1: makeNimstrLit("supset"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x83")], baseline: 0, width: 1, flag: 2}}, {Field0: -610245166, Field1: makeNimstrLit("Coloneqq"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB7=")], baseline: 0, width: 2, flag: 2}}, {Field0: -337772077, Field1: makeNimstrLit("nmid"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA4")], baseline: 0, width: 1, flag: 2}}, {Field0: 1533272532, Field1: makeNimstrLit("varsubsetneqq"), Field2: {rows: [makeNimstrLit("\xE2\xAB\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: -481215022, Field1: makeNimstrLit("lceil"), Field2: {rows: [makeNimstrLit("\xE2\x8C\x88")], baseline: 0, width: 1, flag: 0}}, {Field0: 2059920854, Field1: makeNimstrLit("downarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: -332135977, Field1: makeNimstrLit("exist"), Field2: {rows: [makeNimstrLit("\xE2\x88\x83")], baseline: 0, width: 1, flag: 2}}, {Field0: -883057194, Field1: makeNimstrLit("imageof"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: 1847278041, Field1: makeNimstrLit("origof"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB6")], baseline: 0, width: 1, flag: 2}}, {Field0: -2116573739, Field1: makeNimstrLit("textdegree"), Field2: {rows: [makeNimstrLit("\xC2\xB0")], baseline: 0, width: 1, flag: 0}}, {Field0: -799040039, Field1: makeNimstrLit("spadesuit"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: -221915691, Field1: makeNimstrLit("exp"), Field2: {rows: [makeNimstrLit("exp")], baseline: 0, width: 3, flag: 4}}, {Field0: 665108957, Field1: makeNimstrLit("coprod"), Field2: {rows: [makeNimstrLit("\xE2\x88\x90")], baseline: 0, width: 1, flag: 3}}, {Field0: 1630840286, Field1: makeNimstrLit("mho"), Field2: {rows: [makeNimstrLit("\xE2\x84\xA7")], baseline: 0, width: 1, flag: 0}}, {Field0: -830267937, Field1: makeNimstrLit("int"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAB")], baseline: 0, width: 1, flag: 3}}, {Field0: -2139331129, Field1: makeNimstrLit("limsup"), Field2: {rows: [makeNimstrLit("lim sup")], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1610263010, Field1: makeNimstrLit("leftthreetimes"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: 1114208738, Field1: makeNimstrLit("varnothing"), Field2: {rows: [makeNimstrLit("\xE2\x88\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: 1077534179, Field1: makeNimstrLit("owns"), Field2: {rows: [makeNimstrLit("\xE2\x88\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: 212498914, Field1: makeNimstrLit("Vdash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA9")], baseline: 0, width: 1, flag: 2}}, {Field0: -927282717, Field1: makeNimstrLit("gneqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA9")], baseline: 0, width: 1, flag: 2}}, {Field0: 1208823271, Field1: makeNimstrLit("swarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x99")], baseline: 0, width: 1, flag: 2}}, {Field0: 1831684584, Field1: makeNimstrLit("lparen"), Field2: {rows: [makeNimstrLit("(")], baseline: 0, width: 1, flag: 0}}, {Field0: -1218212375, Field1: makeNimstrLit("curlyeqprec"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x9E")], baseline: 0, width: 1, flag: 2}}, {Field0: 1897493989, Field1: makeNimstrLit("Nu"), Field2: {rows: [makeNimstrLit("N")], baseline: 0, width: 1, flag: 1}}, {Field0: -695635477, Field1: makeNimstrLit("dashrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\xA2")], baseline: 0, width: 1, flag: 2}}, {Field0: -1443886612, Field1: makeNimstrLit("succnapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xBA")], baseline: 0, width: 1, flag: 2}}, {Field0: 1807167981, Field1: makeNimstrLit("rang"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: 1580248552, Field1: makeNimstrLit("lambda"), Field2: {rows: [makeNimstrLit("\xCE\xBB")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -133512720, Field1: makeNimstrLit("iff"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xBA")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 371297779, Field1: makeNimstrLit("circleddash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x9D")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1649025525, Field1: makeNimstrLit("backepsilon"), Field2: {rows: [makeNimstrLit("\xE2\x88\x8D")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -102348297, Field1: makeNimstrLit("circ"), Field2: {rows: [makeNimstrLit("\xE2\x88\x98")], baseline: 0, width: 1, flag: 2}}, {Field0: 738677240, Field1: makeNimstrLit("Leftrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: -991826440, Field1: makeNimstrLit("nwarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1333410309, Field1: makeNimstrLit("hookleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\xA9")], baseline: 0, width: 1, flag: 2}}, {Field0: -879801861, Field1: makeNimstrLit("risingdotseq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 383633919, Field1: makeNimstrLit("preccurlyeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xBC")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 317083140, Field1: makeNimstrLit("bigodot"), Field2: {rows: [makeNimstrLit("\xE2\xA8\x80")], baseline: 0, width: 1, flag: 3}}, {Field0: 1446722052, Field1: makeNimstrLit("sqcap"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: -1995516410, Field1: makeNimstrLit("gets"), Field2: {rows: [makeNimstrLit("\xE2\x86\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: -1374693881, Field1: makeNimstrLit("P"), Field2: {rows: [makeNimstrLit("\xC2\xB6")], baseline: 0, width: 1, flag: 0}}, {Field0: -943235580, Field1: makeNimstrLit("ker"), Field2: {rows: [makeNimstrLit("ker")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1626003955, Field1: makeNimstrLit("prod"), Field2: {rows: [makeNimstrLit("\xE2\x88\x8F")], baseline: 0, width: 1, flag: 3}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1262346769, Field1: makeNimstrLit("leftarrowtail"), Field2: {rows: [makeNimstrLit("\xE2\x86\xA2")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1225410029, Field1: makeNimstrLit("checkmark"), Field2: {rows: [makeNimstrLit("\xE2\x9C\x93")], baseline: 0, width: 1, flag: 0}}, {Field0: -926707180, Field1: makeNimstrLit("image"), Field2: {rows: [makeNimstrLit("\xE2\x84\x91")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -925142501, Field1: makeNimstrLit("curvearrowright"), Field2: {rows: [makeNimstrLit("\xE2\x86\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: -110310885, Field1: makeNimstrLit("equiv"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA1")], baseline: 0, width: 1, flag: 2}}, {Field0: 286669341, Field1: makeNimstrLit("Eqcolon"), Field2: {rows: [makeNimstrLit("::: :, \xE2\x88\x92\xE2\x88\xB7")], baseline: 0, width: 9, flag: 2}}, {Field0: -1745527269, Field1: makeNimstrLit("bot"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: 1511302685, Field1: makeNimstrLit("mathsterling"), Field2: {rows: [makeNimstrLit("\xC2\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1146067423, Field1: makeNimstrLit("hbar"), Field2: {rows: [makeNimstrLit("\xE2\x84\x8F")], baseline: 0, width: 1, flag: 1}}, {Field0: -2105364958, Field1: makeNimstrLit("subseteqq"), Field2: {rows: [makeNimstrLit("\xE2\xAB\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: 891442723, Field1: makeNimstrLit("Theta"), Field2: {rows: [makeNimstrLit("\xCE\x98")], baseline: 0, width: 1, flag: 1}}, {Field0: -77740508, Field1: makeNimstrLit("backsimeq"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x8D")], baseline: 0, width: 1, flag: 2}}, {Field0: 1783373347, Field1: makeNimstrLit("backprime"), Field2: {rows: [makeNimstrLit("\xE2\x80\xB5")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1891844648, Field1: makeNimstrLit("Zeta"), Field2: {rows: [makeNimstrLit("Z")], baseline: 0, width: 1, flag: 1}}, {Field0: 656361001, Field1: makeNimstrLit("darr"), Field2: {rows: [makeNimstrLit("\xE2\x86\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: -1435107798, Field1: makeNimstrLit("succnsim"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xA9")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 26894892, Field1: makeNimstrLit("Iota"), Field2: {rows: [makeNimstrLit("I")], baseline: 0, width: 1, flag: 1}}, {Field0: 1836716588, Field1: makeNimstrLit("zeta"), Field2: {rows: [makeNimstrLit("\xCE\xB6")], baseline: 0, width: 1, flag: 1}}, {Field0: -1691615698, Field1: makeNimstrLit("Longleftrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xBA")], baseline: 0, width: 1, flag: 2}}, {Field0: 891450927, Field1: makeNimstrLit("rightleftharpoons"), Field2: {rows: [makeNimstrLit("\xE2\x87\x8C")], baseline: 0, width: 1, flag: 2}}, {Field0: -1635509713, Field1: makeNimstrLit("Kappa"), Field2: {rows: [makeNimstrLit("K")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1001673268, Field1: makeNimstrLit("blacktriangleright"), Field2: {rows: [makeNimstrLit("\xE2\x96\xB6")], baseline: 0, width: 1, flag: 0}}, {Field0: 1501875765, Field1: makeNimstrLit("Tau"), Field2: {rows: [makeNimstrLit("T")], baseline: 0, width: 1, flag: 1}}, {Field0: 1552782902, Field1: makeNimstrLit("frown"), Field2: {rows: [makeNimstrLit("\xE2\x8C\xA2")], baseline: 0, width: 1, flag: 2}}, {Field0: -1521156553, Field1: makeNimstrLit("nleqslant"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB0")], baseline: 0, width: 1, flag: 2}}, {Field0: -326324681, Field1: makeNimstrLit("varXi"), Field2: {rows: [makeNimstrLit("\xCE\x9E")], baseline: 0, width: 1, flag: 1}}, {Field0: -898344391, Field1: makeNimstrLit("j"), Field2: {rows: [makeNimstrLit("\xC8\xB7")], baseline: 0, width: 1, flag: 1}}, {Field0: -503503303, Field1: makeNimstrLit("sdot"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x85")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1284465212, Field1: makeNimstrLit("infty"), Field2: {rows: [makeNimstrLit("\xE2\x88\x9E")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1178661438, Field1: makeNimstrLit("alef"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB5")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1269727808, Field1: makeNimstrLit("textbardbl"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -2085733821, Field1: makeNimstrLit("times"), Field2: {rows: [makeNimstrLit("\xC3\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 561956424, Field1: makeNimstrLit("eqslantgtr"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 919873098, Field1: makeNimstrLit("leftharpoonup"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBC")], baseline: 0, width: 1, flag: 2}}, {Field0: 468909643, Field1: makeNimstrLit("supe"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x87")], baseline: 0, width: 1, flag: 2}}, {Field0: -1482317238, Field1: makeNimstrLit("nsubseteqq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: 1515227725, Field1: makeNimstrLit("Cap"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -1300055474, Field1: makeNimstrLit("circlearrowright"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBB")], baseline: 0, width: 1, flag: 2}}, {Field0: -2128052658, Field1: makeNimstrLit("Harr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 1337989708, Field1: makeNimstrLit("nshortmid"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA4")], baseline: 0, width: 1, flag: 2}}, {Field0: -1105456559, Field1: makeNimstrLit("sqsubseteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: -2146981297, Field1: makeNimstrLit("ngeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB1")], baseline: 0, width: 1, flag: 2}}, {Field0: -1793030581, Field1: makeNimstrLit("KaTeX"), Field2: {rows: [makeNimstrLit("K T X"), makeNimstrLit(" A E ")], baseline: 0, width: 5, flag: 0}}, {Field0: 1056518736, Field1: makeNimstrLit("measuredangle"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: -507666860, Field1: makeNimstrLit("textsterling"), Field2: {rows: [makeNimstrLit("\xC2\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: 1070808661, Field1: makeNimstrLit("lg"), Field2: {rows: [makeNimstrLit("lg")], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1870681688, Field1: makeNimstrLit("heartsuit"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: 19948121, Field1: makeNimstrLit("sqsubset"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x8F")], baseline: 0, width: 1, flag: 2}}, {Field0: 193524313, Field1: makeNimstrLit("gvertneqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA9")], baseline: 0, width: 1, flag: 2}}, {Field0: 2123680347, Field1: makeNimstrLit("ast"), Field2: {rows: [makeNimstrLit("\xE2\x88\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: -1287315876, Field1: makeNimstrLit("Omega"), Field2: {rows: [makeNimstrLit("\xCE\xA9")], baseline: 0, width: 1, flag: 1}}, {Field0: 1827362397, Field1: makeNimstrLit("veebar"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xBB")], baseline: 0, width: 1, flag: 2}}, {Field0: 699052638, Field1: makeNimstrLit("jmath"), Field2: {rows: [makeNimstrLit("\xC8\xB7")], baseline: 0, width: 1, flag: 1}}, {Field0: -1798255009, Field1: makeNimstrLit("ngtr"), Field2: {rows: [makeNimstrLit("\xE2\x89\xAF")], baseline: 0, width: 1, flag: 2}}, {Field0: -1932101027, Field1: makeNimstrLit("textbraceleft"), Field2: {rows: [makeNimstrLit("{")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1924743581, Field1: makeNimstrLit("Im"), Field2: {rows: [makeNimstrLit("\xE2\x84\x91")], baseline: 0, width: 1, flag: 1}}, {Field0: 1990097508, Field1: makeNimstrLit("vartriangleleft"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB2")], baseline: 0, width: 1, flag: 2}}, {Field0: -414576028, Field1: makeNimstrLit("lim"), Field2: {rows: [makeNimstrLit("lim")], baseline: 0, width: 3, flag: 4}}, {Field0: -1006869914, Field1: makeNimstrLit("sec"), Field2: {rows: [makeNimstrLit("sec")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1552102808, Field1: makeNimstrLit("hearts"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA1")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1000346218, Field1: makeNimstrLit("wedge"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA7")], baseline: 0, width: 1, flag: 2}}, {Field0: 587550314, Field1: makeNimstrLit("rfloor"), Field2: {rows: [makeNimstrLit("\xE2\x8C\x8B")], baseline: 0, width: 1, flag: 0}}, {Field0: 729784939, Field1: makeNimstrLit("Reals"), Field2: {rows: [makeNimstrLit("R")], baseline: 0, width: 1, flag: 1}}, {Field0: 152785517, Field1: makeNimstrLit("vDash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 793982576, Field1: makeNimstrLit("gcd"), Field2: {rows: [makeNimstrLit("gcd")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 458373746, Field1: makeNimstrLit("Rightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -468514189, Field1: makeNimstrLit("nLeftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x8D")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1771689589, Field1: makeNimstrLit("textasciicircum"), Field2: {rows: [makeNimstrLit("^")], baseline: 0, width: 1, flag: 0}}, {Field0: 1260526198, Field1: makeNimstrLit("trianglerighteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB5")], baseline: 0, width: 1, flag: 2}}, {Field0: 208938615, Field1: makeNimstrLit("theta"), Field2: {rows: [makeNimstrLit("\xCE\xB8")], baseline: 0, width: 1, flag: 1}}, {Field0: 910490232, Field1: makeNimstrLit("coloneq"), Field2: {rows: [makeNimstrLit(":\xE2\x88\x92")], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1997622910, Field1: makeNimstrLit("leqslant"), Field2: {rows: [makeNimstrLit("\xE2\xA9\xBD")], baseline: 0, width: 1, flag: 2}}, {Field0: -918172033, Field1: makeNimstrLit("looparrowleft"), Field2: {rows: [makeNimstrLit("\xE2\x86\xAB")], baseline: 0, width: 1, flag: 2}}, {Field0: 1684372096, Field1: makeNimstrLit("precneqq"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xB5")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -425875838, Field1: makeNimstrLit("nsubseteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -1122263421, Field1: makeNimstrLit("imath"), Field2: {rows: [makeNimstrLit("\xEE\x84\xB1")], baseline: 0, width: 1, flag: 1}}, {Field0: 1607821956, Field1: makeNimstrLit("Vvdash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xAA")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1635205767, Field1: makeNimstrLit("bigotimes"), Field2: {rows: [makeNimstrLit("\xE2\xA8\x82")], baseline: 0, width: 1, flag: 3}}, {Field0: 2111140487, Field1: makeNimstrLit("eqcirc"), Field2: {rows: [makeNimstrLit("\xE2\x89\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 860426889, Field1: makeNimstrLit("shortparallel"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 2}}, {Field0: 1892319880, Field1: makeNimstrLit("omicron"), Field2: {rows: [makeNimstrLit("\xCE\xBF")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1703044749, Field1: makeNimstrLit("nshortparallel"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA6")], baseline: 0, width: 1, flag: 2}}, {Field0: 845622926, Field1: makeNimstrLit("beth"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB6")], baseline: 0, width: 1, flag: 1}}, {Field0: 1257085583, Field1: makeNimstrLit("gtrsim"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB3")], baseline: 0, width: 1, flag: 2}}, {Field0: -1417107824, Field1: makeNimstrLit("lesssim"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB2")], baseline: 0, width: 1, flag: 2}}, {Field0: 1990401680, Field1: makeNimstrLit("varSigma"), Field2: {rows: [makeNimstrLit("\xCE\xA3")], baseline: 0, width: 1, flag: 1}}, {Field0: 382401167, Field1: makeNimstrLit("textdagger"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -143540585, Field1: makeNimstrLit("eqslantless"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x95")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -315963751, Field1: makeNimstrLit("Psi"), Field2: {rows: [makeNimstrLit("\xCE\xA8")], baseline: 0, width: 1, flag: 1}}, {Field0: -49342823, Field1: makeNimstrLit("spades"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1618291044, Field1: makeNimstrLit("natnums"), Field2: {rows: [makeNimstrLit("N")], baseline: 0, width: 1, flag: 1}}, {Field0: -188891491, Field1: makeNimstrLit("varpropto"), Field2: {rows: [makeNimstrLit("\xE2\x88\x9D")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1256799583, Field1: makeNimstrLit("Coloneq"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB7\xE2\x88\x92")], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1476694365, Field1: makeNimstrLit("rightleftarrows"), Field2: {rows: [makeNimstrLit("\xE2\x87\x84")], baseline: 0, width: 1, flag: 2}}, {Field0: 90499748, Field1: makeNimstrLit("gtrapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x86")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1630717273, Field1: makeNimstrLit("textless"), Field2: {rows: [makeNimstrLit("<")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 626711210, Field1: makeNimstrLit("dotsm"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAF")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -282832210, Field1: makeNimstrLit("mathellipsis"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1055529648, Field1: makeNimstrLit("colonapprox"), Field2: {rows: [makeNimstrLit(":\xE2\x89\x88")], baseline: 0, width: 2, flag: 2}}, {Field0: 1306761904, Field1: makeNimstrLit("lq"), Field2: {rows: [makeNimstrLit("\xE2\x80\x98")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 198273717, Field1: makeNimstrLit("textendash"), Field2: {rows: [makeNimstrLit("\xE2\x80\x93")], baseline: 0, width: 1, flag: 0}}, {Field0: -436731210, Field1: makeNimstrLit("lhd"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB2")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 867351226, Field1: makeNimstrLit("vdash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xA2")], baseline: 0, width: 1, flag: 2}}, {Field0: 77870779, Field1: makeNimstrLit("Finv"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB2")], baseline: 0, width: 1, flag: 1}}, {Field0: -1633238340, Field1: makeNimstrLit("sqcup"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1012737726, Field1: makeNimstrLit("setminus"), Field2: {rows: [makeNimstrLit("\xE2\x88\x96")], baseline: 0, width: 1, flag: 2}}, {Field0: 1166910142, Field1: makeNimstrLit("O"), Field2: {rows: [makeNimstrLit("\xC3\x98")], baseline: 0, width: 1, flag: 1}}, {Field0: -788264256, Field1: makeNimstrLit("lrArr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 1404075712, Field1: makeNimstrLit("succcurlyeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xBD")], baseline: 0, width: 1, flag: 2}}, {Field0: -708164930, Field1: makeNimstrLit("real"), Field2: {rows: [makeNimstrLit("\xE2\x84\x9C")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1582218556, Field1: makeNimstrLit("rbrace"), Field2: {rows: [makeNimstrLit("}")], baseline: 0, width: 1, flag: 0}}, {Field0: -1623751995, Field1: makeNimstrLit("rhd"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB3")], baseline: 0, width: 1, flag: 2}}, {Field0: 2118272708, Field1: makeNimstrLit("rangle"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2128061129, Field1: makeNimstrLit("implies"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB9")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -128053556, Field1: makeNimstrLit("rarr"), Field2: {rows: [makeNimstrLit("\xE2\x86\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: 1485563597, Field1: makeNimstrLit("intercal"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xBA")], baseline: 0, width: 1, flag: 2}}, {Field0: -1783832884, Field1: makeNimstrLit("tan"), Field2: {rows: [makeNimstrLit("tan")], baseline: 0, width: 3, flag: 4}}, {Field0: -508692785, Field1: makeNimstrLit("natural"), Field2: {rows: [makeNimstrLit("\xE2\x99\xAE")], baseline: 0, width: 1, flag: 0}}, {Field0: -1571214640, Field1: makeNimstrLit("simeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x83")], baseline: 0, width: 1, flag: 2}}, {Field0: 1649711825, Field1: makeNimstrLit("sphericalangle"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA2")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 968579795, Field1: makeNimstrLit("arctg"), Field2: {rows: [makeNimstrLit("arctg")], baseline: 0, width: 5, flag: 4}}, {Field0: -2087052588, Field1: makeNimstrLit("S"), Field2: {rows: [makeNimstrLit("\xC2\xA7")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1940638425, Field1: makeNimstrLit("triangledown"), Field2: {rows: [makeNimstrLit("\xE2\x96\xBD")], baseline: 0, width: 1, flag: 0}}, {Field0: 444881626, Field1: makeNimstrLit("nRightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x8F")], baseline: 0, width: 1, flag: 2}}, {Field0: 151659227, Field1: makeNimstrLit("complement"), Field2: {rows: [makeNimstrLit("\xE2\x88\x81")], baseline: 0, width: 1, flag: 2}}, {Field0: -1693292837, Field1: makeNimstrLit("downharpoonleft"), Field2: {rows: [makeNimstrLit("\xE2\x87\x83")], baseline: 0, width: 1, flag: 2}}, {Field0: -4439333, Field1: makeNimstrLit("nLeftrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x8E")], baseline: 0, width: 1, flag: 2}}, {Field0: -1212450082, Field1: makeNimstrLit("ch"), Field2: {rows: [makeNimstrLit("ch")], baseline: 0, width: 2, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1868119328, Field1: makeNimstrLit("nrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x9B")], baseline: 0, width: 1, flag: 2}}, {Field0: -318407968, Field1: makeNimstrLit("thicksim"), Field2: {rows: [makeNimstrLit("\xE2\x88\xBC")], baseline: 0, width: 1, flag: 2}}, {Field0: 345991905, Field1: makeNimstrLit("Pi"), Field2: {rows: [makeNimstrLit("\xCE\xA0")], baseline: 0, width: 1, flag: 1}}, {Field0: 631217891, Field1: makeNimstrLit("eqcolon"), Field2: {rows: [makeNimstrLit(">>> >, \xE2\x88\xB9")], baseline: 0, width: 8, flag: 2}}, {Field0: 1697382115, Field1: makeNimstrLit("varkappa"), Field2: {rows: [makeNimstrLit("\xCF\xB0")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 497549031, Field1: makeNimstrLit("ell"), Field2: {rows: [makeNimstrLit("\xE2\x84\x93")], baseline: 0, width: 1, flag: 1}}, {Field0: -1187357976, Field1: makeNimstrLit("mu"), Field2: {rows: [makeNimstrLit("\xCE\xBC")], baseline: 0, width: 1, flag: 1}}, {Field0: -1972195609, Field1: makeNimstrLit("dim"), Field2: {rows: [makeNimstrLit("dim")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1516935444, Field1: makeNimstrLit("lnapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x89")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1945859345, Field1: makeNimstrLit("OE"), Field2: {rows: [makeNimstrLit("\xC5\x92")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1631707890, Field1: makeNimstrLit("textbar"), Field2: {rows: [makeNimstrLit("|")], baseline: 0, width: 1, flag: 0}}, {Field0: 156381939, Field1: makeNimstrLit("TeX"), Field2: {rows: [makeNimstrLit("T X"), makeNimstrLit(" E ")], baseline: 0, width: 3, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -737534219, Field1: makeNimstrLit("ltimes"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x89")], baseline: 0, width: 1, flag: 2}}, {Field0: -567946507, Field1: makeNimstrLit("Rarr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: -189001994, Field1: makeNimstrLit("vartriangle"), Field2: {rows: [makeNimstrLit("\xE2\x96\xB3")], baseline: 0, width: 1, flag: 2}}, {Field0: 1167593205, Field1: makeNimstrLit("varPsi"), Field2: {rows: [makeNimstrLit("\xCE\xA8")], baseline: 0, width: 1, flag: 1}}, {Field0: 820849399, Field1: makeNimstrLit("psi"), Field2: {rows: [makeNimstrLit("\xCF\x88")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -728388867, Field1: makeNimstrLit("npreceq"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xA0")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1786403073, Field1: makeNimstrLit("lneqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: -44866816, Field1: makeNimstrLit("Eta"), Field2: {rows: [makeNimstrLit("H")], baseline: 0, width: 1, flag: 1}}, {Field0: -1857517823, Field1: makeNimstrLit("gtrless"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 233755396, Field1: makeNimstrLit("Bbbk"), Field2: {rows: [makeNimstrLit("k")], baseline: 0, width: 1, flag: 1}}, {Field0: -1970031867, Field1: makeNimstrLit("vee"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 839637767, Field1: makeNimstrLit("lang"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xA8")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1432461559, Field1: makeNimstrLit("vcentcolon"), Field2: {rows: [makeNimstrLit(":")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -944697589, Field1: makeNimstrLit("varrho"), Field2: {rows: [makeNimstrLit("\xCF\xB1")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1484265230, Field1: makeNimstrLit("varpi"), Field2: {rows: [makeNimstrLit("\xCF\x96")], baseline: 0, width: 1, flag: 1}}, {Field0: 93506319, Field1: makeNimstrLit("hslash"), Field2: {rows: [makeNimstrLit("\xE2\x84\x8F")], baseline: 0, width: 1, flag: 1}}, {Field0: 723635984, Field1: makeNimstrLit("sinh"), Field2: {rows: [makeNimstrLit("sinh")], baseline: 0, width: 4, flag: 4}}, {Field0: -808573167, Field1: makeNimstrLit("mp"), Field2: {rows: [makeNimstrLit("\xE2\x88\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: -831156463, Field1: makeNimstrLit("nVdash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xAE")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1011195116, Field1: makeNimstrLit("leftrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -316506345, Field1: makeNimstrLit("rceil"), Field2: {rows: [makeNimstrLit("\xE2\x8C\x89")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1905710309, Field1: makeNimstrLit("Rsh"), Field2: {rows: [makeNimstrLit("\xE2\x86\xB1")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1628249312, Field1: makeNimstrLit("Colonapprox"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB7\xE2\x89\x88")], baseline: 0, width: 2, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -2032217310, Field1: makeNimstrLit("shortmid"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA3")], baseline: 0, width: 1, flag: 2}}, {Field0: -1282881757, Field1: makeNimstrLit("wr"), Field2: {rows: [makeNimstrLit("\xE2\x89\x80")], baseline: 0, width: 1, flag: 2}}, {Field0: 201751332, Field1: makeNimstrLit("circledR"), Field2: {rows: [makeNimstrLit("\xC2\xAE")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1853396185, Field1: makeNimstrLit("ni"), Field2: {rows: [makeNimstrLit("\xE2\x88\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: -1194945752, Field1: makeNimstrLit("Updownarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x95")], baseline: 0, width: 1, flag: 2}}, {Field0: -2121473240, Field1: makeNimstrLit("cosec"), Field2: {rows: [makeNimstrLit("cosec")], baseline: 0, width: 5, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -418823380, Field1: makeNimstrLit("delta"), Field2: {rows: [makeNimstrLit("\xCE\xB4")], baseline: 0, width: 1, flag: 1}}, {Field0: 64160556, Field1: makeNimstrLit("diamondsuit"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA2")], baseline: 0, width: 1, flag: 0}}, {Field0: 1405992750, Field1: makeNimstrLit("eqqcolon"), Field2: {rows: [makeNimstrLit("\xE2\x89\x95")], baseline: 0, width: 1, flag: 2}}, {Field0: 1068375855, Field1: makeNimstrLit("Uarr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: 1201711918, Field1: makeNimstrLit("lvertneqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: 129810225, Field1: makeNimstrLit("sub"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x82")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -616156365, Field1: makeNimstrLit("Upsilon"), Field2: {rows: [makeNimstrLit("\xCE\xA5")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 965596985, Field1: makeNimstrLit("Cup"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: 377626426, Field1: makeNimstrLit("dotplus"), Field2: {rows: [makeNimstrLit("\xE2\x88\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1447029955, Field1: makeNimstrLit("alpha"), Field2: {rows: [makeNimstrLit("\xCE\xB1")], baseline: 0, width: 1, flag: 1}}, {Field0: 1388739390, Field1: makeNimstrLit("cdot"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: -1317677249, Field1: makeNimstrLit("weierp"), Field2: {rows: [makeNimstrLit("\xE2\x84\x98")], baseline: 0, width: 1, flag: 1}}, {Field0: 126402368, Field1: makeNimstrLit("boxminus"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x9F")], baseline: 0, width: 1, flag: 2}}, {Field0: 927969088, Field1: makeNimstrLit("supseteqq"), Field2: {rows: [makeNimstrLit("\xE2\xAB\x86")], baseline: 0, width: 1, flag: 2}}, {Field0: -978777278, Field1: makeNimstrLit("propto"), Field2: {rows: [makeNimstrLit("\xE2\x88\x9D")], baseline: 0, width: 1, flag: 2}}, {Field0: 2044716865, Field1: makeNimstrLit("ss"), Field2: {rows: [makeNimstrLit("\xC3\x9F")], baseline: 0, width: 1, flag: 1}}, {Field0: -838084796, Field1: makeNimstrLit("lessgtr"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB6")], baseline: 0, width: 1, flag: 2}}, {Field0: -829358270, Field1: makeNimstrLit("textquotedblright"), Field2: {rows: [makeNimstrLit("\xE2\x80\x9D")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -389900469, Field1: makeNimstrLit("textdollar"), Field2: {rows: [makeNimstrLit("$")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 598895437, Field1: makeNimstrLit("minuscolon"), Field2: {rows: [makeNimstrLit("\xE2\x88\xB9")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1181199183, Field1: makeNimstrLit("triangleleft"), Field2: {rows: [makeNimstrLit("\xE2\x97\x83")], baseline: 0, width: 1, flag: 0}}, {Field0: -582685872, Field1: makeNimstrLit("Darr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: -1009115312, Field1: makeNimstrLit("minuso"), Field2: {rows: [makeNimstrLit("\xE2\xA6\xB5")], baseline: 0, width: 1, flag: 0}}, {Field0: 499530577, Field1: makeNimstrLit("plim"), Field2: {rows: [makeNimstrLit("plim")], baseline: 0, width: 4, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -114982060, Field1: makeNimstrLit("nleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x9A")], baseline: 0, width: 1, flag: 2}}, {Field0: -1058309292, Field1: makeNimstrLit("smile"), Field2: {rows: [makeNimstrLit("\xE2\x8C\xA3")], baseline: 0, width: 1, flag: 2}}, {Field0: 437992278, Field1: makeNimstrLit("precapprox"), Field2: {rows: [makeNimstrLit("\xE2\xAA\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: 1034010455, Field1: makeNimstrLit("hArr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: 1814794072, Field1: makeNimstrLit("nexists"), Field2: {rows: [makeNimstrLit("\xE2\x88\x84")], baseline: 0, width: 1, flag: 2}}, {Field0: -848168103, Field1: makeNimstrLit("simcoloncolon"), Field2: {rows: [makeNimstrLit("\xE2\x88\xBC\xE2\x88\xB7")], baseline: 0, width: 2, flag: 2}}, {Field0: -2083237030, Field1: makeNimstrLit("trianglelefteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xB4")], baseline: 0, width: 1, flag: 2}}, {Field0: 624996184, Field1: makeNimstrLit("nVDash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xAF")], baseline: 0, width: 1, flag: 2}}, {Field0: -508762280, Field1: makeNimstrLit("varGamma"), Field2: {rows: [makeNimstrLit("\xCE\x93")], baseline: 0, width: 1, flag: 1}}, {Field0: -582062244, Field1: makeNimstrLit("pi"), Field2: {rows: [makeNimstrLit("\xCF\x80")], baseline: 0, width: 1, flag: 1}}, {Field0: 485069654, Field1: makeNimstrLit("triangle"), Field2: {rows: [makeNimstrLit("\xE2\x96\xB3")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1089835168, Field1: makeNimstrLit("approxeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x8A")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1376821406, Field1: makeNimstrLit("bigtriangledown"), Field2: {rows: [makeNimstrLit("\xE2\x96\xBD")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1165389980, Field1: makeNimstrLit("downharpoonright"), Field2: {rows: [makeNimstrLit("\xE2\x87\x82")], baseline: 0, width: 1, flag: 2}}, {Field0: -498708635, Field1: makeNimstrLit("supseteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x87")], baseline: 0, width: 1, flag: 2}}, {Field0: 1390254950, Field1: makeNimstrLit("varOmega"), Field2: {rows: [makeNimstrLit("\xCE\xA9")], baseline: 0, width: 1, flag: 1}}, {Field0: 113278823, Field1: makeNimstrLit("cup"), Field2: {rows: [makeNimstrLit("\xE2\x88\xAA")], baseline: 0, width: 1, flag: 2}}, {Field0: 775896934, Field1: makeNimstrLit("cnums"), Field2: {rows: [makeNimstrLit("C")], baseline: 0, width: 1, flag: 1}}, {Field0: -1421636764, Field1: makeNimstrLit("angle"), Field2: {rows: [makeNimstrLit("\xE2\x88\xA0")], baseline: 0, width: 1, flag: 0}}, {Field0: 1368969066, Field1: makeNimstrLit("Omicron"), Field2: {rows: [makeNimstrLit("O")], baseline: 0, width: 1, flag: 1}}, {Field0: -1825022101, Field1: makeNimstrLit("dotsc"), Field2: {rows: [makeNimstrLit("\xE2\x80\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: 1049816935, Field1: makeNimstrLit("sharp"), Field2: {rows: [makeNimstrLit("\xE2\x99\xAF")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -660215953, Field1: makeNimstrLit("blacktriangledown"), Field2: {rows: [makeNimstrLit("\xE2\x96\xBC")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 701244274, Field1: makeNimstrLit("empty"), Field2: {rows: [makeNimstrLit("\xE2\x88\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: -164919438, Field1: makeNimstrLit("gnsim"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xA7")], baseline: 0, width: 1, flag: 2}}, {Field0: -1450188941, Field1: makeNimstrLit("star"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x86")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1706303621, Field1: makeNimstrLit("dArr"), Field2: {rows: [makeNimstrLit("\xE2\x87\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -250139779, Field1: makeNimstrLit("textemdash"), Field2: {rows: [makeNimstrLit("\xE2\x80\x94")], baseline: 0, width: 1, flag: 0}}, {Field0: 1726374782, Field1: makeNimstrLit("circledS"), Field2: {rows: [makeNimstrLit("\xE2\x93\x88")], baseline: 0, width: 1, flag: 0}}, {Field0: 268964735, Field1: makeNimstrLit("circledast"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x9B")], baseline: 0, width: 1, flag: 2}}, {Field0: -722765953, Field1: makeNimstrLit("fallingdotseq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 978164610, Field1: makeNimstrLit("nless"), Field2: {rows: [makeNimstrLit("\xE2\x89\xAE")], baseline: 0, width: 1, flag: 2}}, {Field0: 1202677635, Field1: makeNimstrLit("rparen"), Field2: {rows: [makeNimstrLit(")")], baseline: 0, width: 1, flag: 0}}, {Field0: 1073095556, Field1: makeNimstrLit("phi"), Field2: {rows: [makeNimstrLit("\xCF\x95")], baseline: 0, width: 1, flag: 1}}, {Field0: -902326395, Field1: makeNimstrLit("arccos"), Field2: {rows: [makeNimstrLit("arccos")], baseline: 0, width: 6, flag: 4}}, {Field0: 104139654, Field1: makeNimstrLit("doublebarwedge"), Field2: {rows: [makeNimstrLit("\xE2\xA9\x9E")], baseline: 0, width: 1, flag: 2}}, {Field0: -296343675, Field1: makeNimstrLit("tanh"), Field2: {rows: [makeNimstrLit("tanh")], baseline: 0, width: 4, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1878301815, Field1: makeNimstrLit("rightharpoonup"), Field2: {rows: [makeNimstrLit("\xE2\x87\x80")], baseline: 0, width: 1, flag: 2}}, {Field0: 1586769802, Field1: makeNimstrLit("llless"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x98")], baseline: 0, width: 1, flag: 2}}, {Field0: 1991520139, Field1: makeNimstrLit("alefsym"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB5")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 773731214, Field1: makeNimstrLit("subsetneq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x8A")], baseline: 0, width: 1, flag: 2}}, {Field0: 1642151823, Field1: makeNimstrLit("supsetneqq"), Field2: {rows: [makeNimstrLit("\xE2\xAB\x8C")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -399796335, Field1: makeNimstrLit("curlyvee"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x8E")], baseline: 0, width: 1, flag: 2}}, {Field0: 1863581586, Field1: makeNimstrLit("clubsuit"), Field2: {rows: [makeNimstrLit("\xE2\x99\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: 1089098643, Field1: makeNimstrLit("circeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: -983711852, Field1: makeNimstrLit("bumpeq"), Field2: {rows: [makeNimstrLit("\xE2\x89\x8F")], baseline: 0, width: 1, flag: 2}}, {Field0: 626165651, Field1: makeNimstrLit("cdots"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAF")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -135784553, Field1: makeNimstrLit("rightrightarrows"), Field2: {rows: [makeNimstrLit("\xE2\x87\x89")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -347878501, Field1: makeNimstrLit("rightharpoondown"), Field2: {rows: [makeNimstrLit("\xE2\x87\x81")], baseline: 0, width: 1, flag: 2}}, {Field0: 1961500571, Field1: makeNimstrLit("Subset"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x90")], baseline: 0, width: 1, flag: 2}}, {Field0: -1325636708, Field1: makeNimstrLit("partial"), Field2: {rows: [makeNimstrLit("\xE2\x88\x82")], baseline: 0, width: 1, flag: 1}}, {Field0: -1030514789, Field1: makeNimstrLit("max"), Field2: {rows: [makeNimstrLit("max")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -647533664, Field1: makeNimstrLit("circlearrowleft"), Field2: {rows: [makeNimstrLit("\xE2\x86\xBA")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2088133539, Field1: makeNimstrLit("notni"), Field2: {rows: [makeNimstrLit("\xE2\x88\x8C")], baseline: 0, width: 1, flag: 2}}, {Field0: -1130670173, Field1: makeNimstrLit("Uparrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x91")], baseline: 0, width: 1, flag: 2}}, {Field0: 1251576741, Field1: makeNimstrLit("asymp"), Field2: {rows: [makeNimstrLit("\xE2\x89\x8D")], baseline: 0, width: 1, flag: 2}}, {Field0: -949496923, Field1: makeNimstrLit("varLambda"), Field2: {rows: [makeNimstrLit("\xCE\x9B")], baseline: 0, width: 1, flag: 1}}, {Field0: 508142500, Field1: makeNimstrLit("textgreater"), Field2: {rows: [makeNimstrLit(">")], baseline: 0, width: 1, flag: 0}}, {Field0: -1519553629, Field1: makeNimstrLit("blacklozenge"), Field2: {rows: [makeNimstrLit("\xE2\xA7\xAB")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -902478933, Field1: makeNimstrLit("longleftarrow"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB5")], baseline: 0, width: 1, flag: 2}}, {Field0: 2018705324, Field1: makeNimstrLit("digamma"), Field2: {rows: [makeNimstrLit("\xCF\x9D")], baseline: 0, width: 1, flag: 1}}, {Field0: -1187603539, Field1: makeNimstrLit("bigcap"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x82")], baseline: 0, width: 1, flag: 3}}, {Field0: 1543318445, Field1: makeNimstrLit("daleth"), Field2: {rows: [makeNimstrLit("\xE2\x84\xB8")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -433189967, Field1: makeNimstrLit("N"), Field2: {rows: [makeNimstrLit("N")], baseline: 0, width: 1, flag: 1}}, {Field0: 924587953, Field1: makeNimstrLit("diamond"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x84")], baseline: 0, width: 1, flag: 0}}, {Field0: 1813402546, Field1: makeNimstrLit("coth"), Field2: {rows: [makeNimstrLit("coth")], baseline: 0, width: 4, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -817291339, Field1: makeNimstrLit("updownarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\x95")], baseline: 0, width: 1, flag: 2}}, {Field0: -769796170, Field1: makeNimstrLit("kappa"), Field2: {rows: [makeNimstrLit("\xCE\xBA")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1976659016, Field1: makeNimstrLit("rtimes"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x8A")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1928334405, Field1: makeNimstrLit("varsubsetneq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x8A")], baseline: 0, width: 1, flag: 2}}, {Field0: -31274052, Field1: makeNimstrLit("Eqqcolon"), Field2: {rows: [makeNimstrLit("=\xE2\x88\xB7")], baseline: 0, width: 2, flag: 2}}, {Field0: 1465733053, Field1: makeNimstrLit("approx"), Field2: {rows: [makeNimstrLit("\xE2\x89\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -166071362, Field1: makeNimstrLit("subseteq"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x86")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1005448255, Field1: makeNimstrLit("ae"), Field2: {rows: [makeNimstrLit("\xC3\xA6")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -774891575, Field1: makeNimstrLit("Downarrow"), Field2: {rows: [makeNimstrLit("\xE2\x87\x93")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 886597579, Field1: makeNimstrLit("deg"), Field2: {rows: [makeNimstrLit("deg")], baseline: 0, width: 3, flag: 4}}, {Field0: 747939788, Field1: makeNimstrLit("argmax"), Field2: {rows: [makeNimstrLit("arg\xE2\x80\x89max")], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 2054813647, Field1: makeNimstrLit("bigtriangleup"), Field2: {rows: [makeNimstrLit("\xE2\x96\xB3")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -288939055, Field1: makeNimstrLit("gggtr"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x99")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -996883499, Field1: makeNimstrLit("nleqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB0")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 1772959704, Field1: makeNimstrLit("lneq"), Field2: {rows: [makeNimstrLit("\xE2\xAA\x87")], baseline: 0, width: 1, flag: 2}}, {Field0: 1375335385, Field1: makeNimstrLit("leftrightsquigarrow"), Field2: {rows: [makeNimstrLit("\xE2\x86\xAD")], baseline: 0, width: 1, flag: 2}}, {Field0: 1312613338, Field1: makeNimstrLit("nvDash"), Field2: {rows: [makeNimstrLit("\xE2\x8A\xAD")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 846101468, Field1: makeNimstrLit("ntriangleright"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xAB")], baseline: 0, width: 1, flag: 2}}, {Field0: -2075499555, Field1: makeNimstrLit("precnsim"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xA8")], baseline: 0, width: 1, flag: 2}}, {Field0: -2025091106, Field1: makeNimstrLit("cdotp"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: -606648354, Field1: makeNimstrLit("Longrightarrow"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xB9")], baseline: 0, width: 1, flag: 2}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1515557918, Field1: makeNimstrLit("uplus"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x8E")], baseline: 0, width: 1, flag: 2}}, {Field0: 1908426722, Field1: makeNimstrLit("Mu"), Field2: {rows: [makeNimstrLit("M")], baseline: 0, width: 1, flag: 1}}, {Field0: -2045698077, Field1: makeNimstrLit("Pr"), Field2: {rows: [makeNimstrLit("Pr")], baseline: 0, width: 2, flag: 4}}, {Field0: -757661723, Field1: makeNimstrLit("th"), Field2: {rows: [makeNimstrLit("th")], baseline: 0, width: 2, flag: 4}}, {Field0: 1227092966, Field1: makeNimstrLit("lnsim"), Field2: {rows: [makeNimstrLit("\xE2\x8B\xA6")], baseline: 0, width: 1, flag: 2}}, {Field0: -573794331, Field1: makeNimstrLit("injlim"), Field2: {rows: [makeNimstrLit("inj\xE2\x80\x89lim")], baseline: 0, width: 7, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -810559509, Field1: makeNimstrLit("cong"), Field2: {rows: [makeNimstrLit("\xE2\x89\x85")], baseline: 0, width: 1, flag: 2}}, {Field0: 1662921708, Field1: makeNimstrLit("Xi"), Field2: {rows: [makeNimstrLit("\xCE\x9E")], baseline: 0, width: 1, flag: 1}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -753883154, Field1: makeNimstrLit("varphi"), Field2: {rows: [makeNimstrLit("\xCF\x86")], baseline: 0, width: 1, flag: 1}}, {Field0: 783613935, Field1: makeNimstrLit("leftrightharpoons"), Field2: {rows: [makeNimstrLit("\xE2\x87\x8B")], baseline: 0, width: 1, flag: 2}}, {Field0: -826565649, Field1: makeNimstrLit("lesseqgtr"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x9A")], baseline: 0, width: 1, flag: 2}}, {Field0: -2057048081, Field1: makeNimstrLit("ggg"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x99")], baseline: 0, width: 1, flag: 2}}, {Field0: -1661005840, Field1: makeNimstrLit("simcolon"), Field2: {rows: [makeNimstrLit("\xE2\x88\xBC:")], baseline: 0, width: 2, flag: 2}}, {Field0: 816394223, Field1: makeNimstrLit("ngeqq"), Field2: {rows: [makeNimstrLit("\xE2\x89\xB1")], baseline: 0, width: 1, flag: 2}}, {Field0: 1170508784, Field1: makeNimstrLit("langle"), Field2: {rows: [makeNimstrLit("\xE2\x9F\xA8")], baseline: 0, width: 1, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}, {Field0: -1927886855, Field1: makeNimstrLit("Beta"), Field2: {rows: [makeNimstrLit("B")], baseline: 0, width: 1, flag: 1}}, {Field0: -1420442630, Field1: makeNimstrLit("bowtie"), Field2: {rows: [makeNimstrLit("\xE2\x8B\x88")], baseline: 0, width: 1, flag: 2}}, {Field0: -1390482437, Field1: makeNimstrLit("odot"), Field2: {rows: [makeNimstrLit("\xE2\x8A\x99")], baseline: 0, width: 1, flag: 2}}, {Field0: 1269585915, Field1: makeNimstrLit("plusmn"), Field2: {rows: [makeNimstrLit("\xC2\xB1")], baseline: 0, width: 1, flag: 2}}, {Field0: 1408007165, Field1: makeNimstrLit("oe"), Field2: {rows: [makeNimstrLit("\xC5\x93")], baseline: 0, width: 1, flag: 1}}, {Field0: 1811268606, Field1: makeNimstrLit("log"), Field2: {rows: [makeNimstrLit("log")], baseline: 0, width: 3, flag: 4}}, {Field0: 0, Field1: [], Field2: {rows: [], baseline: 0, width: 0, flag: 0}}], counter: 653};
    var nonCommands_1828719809 = [{Field0: makeNimstrLit("+"), Field1: {rows: [makeNimstrLit("+")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("-"), Field1: {rows: [makeNimstrLit("\xE2\x88\x92")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("*"), Field1: {rows: [makeNimstrLit("\xE2\x88\x97")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("/"), Field1: {rows: [makeNimstrLit("/")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("="), Field1: {rows: [makeNimstrLit("=")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("<"), Field1: {rows: [makeNimstrLit("<")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit(">"), Field1: {rows: [makeNimstrLit(">")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("\x1Bqualscoloncolon"), Field1: {rows: [makeNimstrLit("=\xE2\x88\xB7")], baseline: 0, width: 2, flag: 2}}, {Field0: makeNimstrLit("\x07pproxcoloncolon"), Field1: {rows: [makeNimstrLit("\xE2\x89\x88\xE2\x88\xB7")], baseline: 0, width: 2, flag: 2}}, {Field0: makeNimstrLit("\x0Doloncolonapprox"), Field1: {rows: [makeNimstrLit("\xE2\x88\xB7\xE2\x89\x88")], baseline: 0, width: 2, flag: 2}}, {Field0: makeNimstrLit("\x0Doloncolonminus"), Field1: {rows: [makeNimstrLit("\xE2\x88\xB7\xE2\x88\x92")], baseline: 0, width: 2, flag: 2}}, {Field0: makeNimstrLit("\x0Dolonequals"), Field1: {rows: [makeNimstrLit("\xE2\x89\x94")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("\x0Doloncolonequals"), Field1: {rows: [makeNimstrLit("\xE2\x88\xB7=")], baseline: 0, width: 2, flag: 2}}, {Field0: makeNimstrLit("\x0Doloncolonsim"), Field1: {rows: [makeNimstrLit("\xE2\x88\xB7\xE2\x88\xBC")], baseline: 0, width: 2, flag: 2}}, {Field0: makeNimstrLit("\x0Doloncolon"), Field1: {rows: [makeNimstrLit("\xE2\x88\xB7")], baseline: 0, width: 1, flag: 2}}, {Field0: makeNimstrLit("("), Field1: {rows: [makeNimstrLit("(")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit(")"), Field1: {rows: [makeNimstrLit(")")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("["), Field1: {rows: [makeNimstrLit("[")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("]"), Field1: {rows: [makeNimstrLit("]")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\{"), Field1: {rows: [makeNimstrLit("{")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\}"), Field1: {rows: [makeNimstrLit("}")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA8"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA8")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA9"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA9")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("|"), Field1: {rows: [makeNimstrLit("\xE2\x88\xA3")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\|"), Field1: {rows: [makeNimstrLit("\xE2\x88\xA5")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x88"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x88")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x89"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x89")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x8A"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x8A")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x8C\x8B"), Field1: {rows: [makeNimstrLit("\xE2\x8C\x8B")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA6"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA6")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\xE2\x9F\xA7"), Field1: {rows: [makeNimstrLit("\xE2\x9F\xA7")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit(","), Field1: {rows: [makeNimstrLit(",")], baseline: 0, width: 1, flag: 8}}, {Field0: makeNimstrLit(":"), Field1: {rows: [makeNimstrLit(":")], baseline: 0, width: 1, flag: 8}}, {Field0: makeNimstrLit("\\%"), Field1: {rows: [makeNimstrLit("%")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\#"), Field1: {rows: [makeNimstrLit("#")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\&"), Field1: {rows: [makeNimstrLit("&")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\_"), Field1: {rows: [makeNimstrLit("_")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\--"), Field1: {rows: [makeNimstrLit("\xE2\x80\x93")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\---"), Field1: {rows: [makeNimstrLit("\xE2\x80\x94")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("`"), Field1: {rows: [makeNimstrLit("\xE2\x80\x98")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\""), Field1: {rows: [makeNimstrLit("\"")], baseline: 0, width: 1, flag: 0}}, {Field0: makeNimstrLit("\\$"), Field1: {rows: [makeNimstrLit("$")], baseline: 0, width: 1, flag: 0}}];
    var simpleDiacritics_1828716894 = [{Field0: makeNimstrLit("\\acute"), Field1: {Field0: makeNimstrLit("\xCC\x81"), Field1: makeNimstrLit("\xCB\x8F")}}, {Field0: makeNimstrLit("\\bar"), Field1: {Field0: makeNimstrLit("\xCC\x84"), Field1: makeNimstrLit("_")}}, {Field0: makeNimstrLit("\\breve"), Field1: {Field0: makeNimstrLit("\xCC\x86"), Field1: makeNimstrLit("\xE2\x8F\x91")}}, {Field0: makeNimstrLit("\\check"), Field1: {Field0: makeNimstrLit("\xCC\x8C"), Field1: makeNimstrLit("\xCB\x87")}}, {Field0: makeNimstrLit("\\dot"), Field1: {Field0: makeNimstrLit("\xCC\x87"), Field1: makeNimstrLit(".")}}, {Field0: makeNimstrLit("\\ddot"), Field1: {Field0: makeNimstrLit("\xCC\x88"), Field1: makeNimstrLit("\xC2\xA8")}}, {Field0: makeNimstrLit("\\grave"), Field1: {Field0: makeNimstrLit("\xCC\x80"), Field1: makeNimstrLit("\xCB\x8E")}}, {Field0: makeNimstrLit("\\hat"), Field1: {Field0: makeNimstrLit("\xCC\x82"), Field1: makeNimstrLit("\xEA\x9E\x88")}}, {Field0: makeNimstrLit("\\not"), Field1: {Field0: makeNimstrLit("\xCC\xB8"), Field1: makeNimstrLit("/")}}, {Field0: makeNimstrLit("\\tilde"), Field1: {Field0: makeNimstrLit("\xCC\x83"), Field1: makeNimstrLit("\xCB\xB7")}}, {Field0: makeNimstrLit("\\vec"), Field1: {Field0: makeNimstrLit("\xE2\x83\x97"), Field1: makeNimstrLit("\xE2\x86\x92")}}];
var ConstSet111 = setConstr(1);
var ConstSet112 = setConstr(0);
var ConstSet113 = setConstr(1);
var ConstSet114 = setConstr(1);
var ConstSet115 = setConstr(0);
var ConstSet116 = setConstr(1);
var ConstSet117 = setConstr(1);
var ConstSet118 = setConstr(0);
    var alignFuncs_1845494634 = [HEX3Aanonymous_1845494622, HEX3Aanonymous_1845494626, HEX3Aanonymous_1845494630];
var ConstSet119 = setConstr(1);
var ConstSet120 = setConstr(1);
var ConstSet121 = setConstr(0);
var ConstSet122 = setConstr(1);
var ConstSet123 = setConstr(1);
var ConstSet124 = setConstr(1);
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(0);
var ConstSet127 = setConstr(0);
      var delimiterParts_1811940719 = {data: [{Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 132032417, Field1: makeNimstrLit("\xE2\x88\xA5"), Field2: {Field0: makeNimstrLit("\xE2\x95\x91"), Field1: makeNimstrLit("\xE2\x95\x91"), Field2: makeNimstrLit("\xE2\x95\x91")}}, {Field0: 1632932802, Field1: makeNimstrLit("["), Field2: {Field0: makeNimstrLit("\xE2\x8E\xA1"), Field1: makeNimstrLit("\xE2\x8E\xA2"), Field2: makeNimstrLit("\xE2\x8E\xA3")}}, {Field0: -289087198, Field1: makeNimstrLit("\xE2\x9F\xA7"), Field2: {Field0: makeNimstrLit("\xE2\x95\x96"), Field1: makeNimstrLit("\xE2\x95\x91"), Field2: makeNimstrLit("\xE2\x95\x9C")}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: -436772347, Field1: makeNimstrLit(")"), Field2: {Field0: makeNimstrLit("\xE2\x8E\x9E"), Field1: makeNimstrLit("\xE2\x8E\x9F"), Field2: makeNimstrLit("\xE2\x8E\xA0")}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: -1827680438, Field1: makeNimstrLit("\xE2\x8C\x88"), Field2: {Field0: makeNimstrLit("\xE2\x8E\xA1"), Field1: makeNimstrLit("\xE2\x8E\xA2"), Field2: makeNimstrLit("\xE2\x8E\xA2")}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 501150701, Field1: makeNimstrLit("("), Field2: {Field0: makeNimstrLit("\xE2\x8E\x9B"), Field1: makeNimstrLit("\xE2\x8E\x9C"), Field2: makeNimstrLit("\xE2\x8E\x9D")}}, {Field0: 243936301, Field1: makeNimstrLit("\xE2\x8C\x8A"), Field2: {Field0: makeNimstrLit("\xE2\x8E\xA2"), Field1: makeNimstrLit("\xE2\x8E\xA2"), Field2: makeNimstrLit("\xE2\x8E\xA3")}}, {Field0: 1380037103, Field1: makeNimstrLit("\xE2\x9F\xA6"), Field2: {Field0: makeNimstrLit("\xE2\x95\x93"), Field1: makeNimstrLit("\xE2\x95\x91"), Field2: makeNimstrLit("\xE2\x95\x99")}}, {Field0: 1862135120, Field1: makeNimstrLit("]"), Field2: {Field0: makeNimstrLit("\xE2\x8E\xA4"), Field1: makeNimstrLit("\xE2\x8E\xA5"), Field2: makeNimstrLit("\xE2\x8E\xA6")}}, {Field0: -696588431, Field1: makeNimstrLit("\xE2\x8C\x8B"), Field2: {Field0: makeNimstrLit("\xE2\x8E\xA5"), Field1: makeNimstrLit("\xE2\x8E\xA5"), Field2: makeNimstrLit("\xE2\x8E\xA6")}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: -1377921419, Field1: makeNimstrLit("\xE2\x88\xA3"), Field2: {Field0: makeNimstrLit("\xE2\x94\x82"), Field1: makeNimstrLit("\xE2\x94\x82"), Field2: makeNimstrLit("\xE2\x94\x82")}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: -2091933701, Field1: makeNimstrLit("\xE2\x8C\x89"), Field2: {Field0: makeNimstrLit("\xE2\x8E\xA4"), Field1: makeNimstrLit("\xE2\x8E\xA5"), Field2: makeNimstrLit("\xE2\x8E\xA5")}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}, {Field0: 0, Field1: [], Field2: {Field0: [], Field1: [], Field2: []}}], counter: 12};
    var extensibleArrowParts_1828716668 = [{Field0: makeNimstrLit("\\xleftarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\x90"), Field1: makeNimstrLit("\xE2\x86\x90"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x94\x80")}}, {Field0: makeNimstrLit("\\xLeftarrow"), Field1: {Field0: makeNimstrLit("\xE2\x87\x90"), Field1: makeNimstrLit("\xE2\x87\x90"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\x95\x90")}}, {Field0: makeNimstrLit("\\xleftrightarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\x94"), Field1: makeNimstrLit("\xE2\x86\x90"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x86\x92")}}, {Field0: makeNimstrLit("\\xhookleftarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\xA9"), Field1: makeNimstrLit("\xE2\x86\x90"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x95\xAF")}}, {Field0: makeNimstrLit("\\xtwoheadleftarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\x9E"), Field1: makeNimstrLit("\xE2\x86\x9E"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x94\x80")}}, {Field0: makeNimstrLit("\\xleftharpoonup"), Field1: {Field0: makeNimstrLit("\xE2\x86\xBC"), Field1: makeNimstrLit("\xE2\x86\xBC"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x94\x80")}}, {Field0: makeNimstrLit("\\xleftharpoondown"), Field1: {Field0: makeNimstrLit("\xE2\x86\xBD"), Field1: makeNimstrLit("\xE2\x86\xBD"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x94\x80")}}, {Field0: makeNimstrLit("\\xleftrightharpoons"), Field1: {Field0: makeNimstrLit("\xE2\x87\x8B"), Field1: makeNimstrLit("\xE2\xA5\xAA"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\xA5\xAD")}}, {Field0: makeNimstrLit("\\xtofrom"), Field1: {Field0: makeNimstrLit("\xE2\x87\x84"), Field1: makeNimstrLit("\xE2\x86\x90"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\x86\x92")}}, {Field0: makeNimstrLit("\\xlongequal"), Field1: {Field0: makeNimstrLit("="), Field1: makeNimstrLit("\xE2\x95\x90"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\x95\x90")}}, {Field0: makeNimstrLit("\\xrightarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\x92"), Field1: makeNimstrLit("\xE2\x94\x80"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x86\x92")}}, {Field0: makeNimstrLit("\\xRightarrow"), Field1: {Field0: makeNimstrLit("\xE2\x87\x92"), Field1: makeNimstrLit("\xE2\x95\x90"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\x87\x92")}}, {Field0: makeNimstrLit("\\xLeftrightarrow"), Field1: {Field0: makeNimstrLit("\xE2\x87\x94"), Field1: makeNimstrLit("\xE2\x87\x90"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\x87\x92")}}, {Field0: makeNimstrLit("\\xhookrightarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\xAA"), Field1: makeNimstrLit("\xE2\x95\xB0"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x86\x92")}}, {Field0: makeNimstrLit("\\xtwoheadrightarrow"), Field1: {Field0: makeNimstrLit("\xE2\x86\xA0"), Field1: makeNimstrLit("\xE2\x94\x80"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x86\xA0")}}, {Field0: makeNimstrLit("\\xrightharpoonup"), Field1: {Field0: makeNimstrLit("\xE2\x87\x80"), Field1: makeNimstrLit("\xE2\x94\x80"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x87\x80")}}, {Field0: makeNimstrLit("\\xrightharpoondown"), Field1: {Field0: makeNimstrLit("\xE2\x87\x81"), Field1: makeNimstrLit("\xE2\x94\x80"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x87\x81")}}, {Field0: makeNimstrLit("\\xrightleftharpoons"), Field1: {Field0: makeNimstrLit("\xE2\x87\x8C"), Field1: makeNimstrLit("\xE2\xA5\xAB"), Field2: makeNimstrLit("\xE2\x95\x90"), Field3: makeNimstrLit("\xE2\xA5\xAC")}}, {Field0: makeNimstrLit("\\xmapsto"), Field1: {Field0: makeNimstrLit("\xE2\x86\xA6"), Field1: makeNimstrLit("\xE2\x94\x9C"), Field2: makeNimstrLit("\xE2\x94\x80"), Field3: makeNimstrLit("\xE2\x86\x92")}}];
var ConstSet128 = setConstr(1);
var ConstSet129 = setConstr(1);
var ConstSet130 = setConstr(0);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(0);
var ConstSet134 = setConstr(1);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(1);
var ConstSet139 = setConstr(0);
var ConstSet140 = setConstr(1);
var ConstSet141 = setConstr(0);
          var subscripts_1828718263 = {data: [{Field0: -1651658498, Field1: 45, Field2: makeNimstrLit("\xE2\x82\x8B")}, {Field0: 340567103, Field1: 101, Field2: makeNimstrLit("\xE2\x82\x91")}, {Field0: -1262851587, Field1: 109, Field2: makeNimstrLit("\xE2\x82\x98")}, {Field0: -1852580415, Field1: 961, Field2: makeNimstrLit("\xE1\xB5\xA8")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 45316872, Field1: 54, Field2: makeNimstrLit("\xE2\x82\x86")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1131254452, Field1: 55, Field2: makeNimstrLit("\xE2\x82\x87")}, {Field0: 131599437, Field1: 118, Field2: makeNimstrLit("\xE1\xB5\xA5")}, {Field0: 1651272845, Field1: 967, Field2: makeNimstrLit("\xE1\xB5\xAA")}, {Field0: -720547953, Field1: 111, Field2: makeNimstrLit("\xE2\x82\x92")}, {Field0: -130464176, Field1: 105, Field2: makeNimstrLit("\xE1\xB5\xA2")}, {Field0: -1802190319, Field1: 49, Field2: makeNimstrLit("\xE2\x82\x81")}, {Field0: -632269230, Field1: 120, Field2: makeNimstrLit("\xE2\x82\x93")}, {Field0: 922521427, Field1: 107, Field2: makeNimstrLit("\xE2\x82\x96")}, {Field0: 1876833038, Field1: 947, Field2: makeNimstrLit("\xE1\xB5\xA7")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 96048537, Field1: 114, Field2: makeNimstrLit("\xE1\xB5\xA3")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1152145308, Field1: 115, Field2: makeNimstrLit("\xE2\x82\x9B")}, {Field0: 1890224028, Field1: 117, Field2: makeNimstrLit("\xE1\xB5\xA4")}, {Field0: -910705250, Field1: 32, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 889415264, Field1: 97, Field2: makeNimstrLit("\xE2\x82\x90")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1778223580, Field1: 52, Field2: makeNimstrLit("\xE2\x82\x84")}, {Field0: 908899684, Field1: 104, Field2: makeNimstrLit("\xE2\x82\x95")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1581067563, Field1: 56, Field2: makeNimstrLit("\xE2\x82\x88")}, {Field0: 1049132588, Field1: 51, Field2: makeNimstrLit("\xE2\x82\x83")}, {Field0: -2116423573, Field1: 106, Field2: makeNimstrLit("\xE2\xB1\xBC")}, {Field0: -41588306, Field1: 48, Field2: makeNimstrLit("\xE2\x82\x80")}, {Field0: 826013230, Field1: 61, Field2: makeNimstrLit("\xE2\x82\x8C")}, {Field0: -1160343377, Field1: 112, Field2: makeNimstrLit("\xE2\x82\x9A")}, {Field0: -1380996561, Field1: 116, Field2: makeNimstrLit("\xE2\x82\x9C")}, {Field0: -21492693, Field1: 966, Field2: makeNimstrLit("\xE1\xB5\xA9")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 2019811060, Field1: 40, Field2: makeNimstrLit("\xE2\x82\x8D")}, {Field0: -1823011404, Field1: 41, Field2: makeNimstrLit("\xE2\x82\x8E")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -369358473, Field1: 57, Field2: makeNimstrLit("\xE2\x82\x89")}, {Field0: -1629987273, Field1: 108, Field2: makeNimstrLit("\xE2\x82\x97")}, {Field0: -2070212424, Field1: 946, Field2: makeNimstrLit("\xE1\xB5\xA6")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1712371396, Field1: 110, Field2: makeNimstrLit("\xE2\x82\x99")}, {Field0: -1941233091, Field1: 50, Field2: makeNimstrLit("\xE2\x82\x82")}, {Field0: 1003719038, Field1: 53, Field2: makeNimstrLit("\xE2\x82\x85")}, {Field0: -1019208771, Field1: 43, Field2: makeNimstrLit("\xE2\x82\x8A")}], counter: 38};
          var superscripts_1828718258 = {data: [{Field0: 329902878, Field1: 8722, Field2: makeNimstrLit("\xE2\x81\xBB")}, {Field0: -910705250, Field1: 32, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1778223580, Field1: 52, Field2: makeNimstrLit("\xE2\x81\xB4")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 45316872, Field1: 54, Field2: makeNimstrLit("\xE2\x81\xB6")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1581067563, Field1: 56, Field2: makeNimstrLit("\xE2\x81\xB8")}, {Field0: 1049132588, Field1: 51, Field2: makeNimstrLit("\xC2\xB3")}, {Field0: -1131254452, Field1: 55, Field2: makeNimstrLit("\xE2\x81\xB7")}, {Field0: -41588306, Field1: 48, Field2: makeNimstrLit("\xE2\x81\xB0")}, {Field0: 826013230, Field1: 61, Field2: makeNimstrLit("\xE2\x81\xBC")}, {Field0: -130464176, Field1: 105, Field2: makeNimstrLit("\xE2\x81\xB1")}, {Field0: -1802190319, Field1: 49, Field2: makeNimstrLit("\xC2\xB9")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 2019811060, Field1: 40, Field2: makeNimstrLit("\xE2\x81\xBD")}, {Field0: -1823011404, Field1: 41, Field2: makeNimstrLit("\xE2\x81\xBE")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -369358473, Field1: 57, Field2: makeNimstrLit("\xE2\x81\xB9")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1712371396, Field1: 110, Field2: makeNimstrLit("\xE2\x81\xBF")}, {Field0: -1941233091, Field1: 50, Field2: makeNimstrLit("\xC2\xB2")}, {Field0: 1003719038, Field1: 53, Field2: makeNimstrLit("\xE2\x81\xB5")}, {Field0: -1019208771, Field1: 43, Field2: makeNimstrLit("\xE2\x81\xBA")}], counter: 18};
var ConstSet142 = setConstr(3, 4);
var ConstSet143 = setConstr(1);
var ConstSet144 = setConstr(1);
var ConstSet145 = setConstr(0);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(13, 10);
      var Literal_1275068564 = {kind: 4, base: 0};
      var Raw_1275068563 = {kind: 3, base: 0};
var ConstSet148 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet149 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet150 = setConstr(9, [11, 12], 32);
var ConstSet151 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet152 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet153 = setConstr([9, 13], 32, 91, 93);
var ConstSet154 = setConstr(0, 1);
var ConstSet155 = setConstr(0);
var ConstSet156 = setConstr(0, 1);
var ConstSet157 = setConstr();
var ConstSet158 = setConstr(0);
var ConstSet159 = setConstr(2);
var ConstSet160 = setConstr(0);
var ConstSet161 = setConstr(1);
var ConstSet162 = setConstr(0, 1);
var ConstSet163 = setConstr(2);
var ConstSet164 = setConstr(2);
var ConstSet165 = setConstr(2);
var ConstSet166 = setConstr(0, 1);
var ConstSet167 = setConstr(0, 1);
var ConstSet168 = setConstr(0, 1);
var ConstSet169 = setConstr(0, 1);
var ConstSet170 = setConstr(0, 1);
var ConstSet171 = setConstr(0, 1);
var ConstSet172 = setConstr(2);
var ConstSet173 = setConstr(2);
var ConstSet174 = setConstr(2);
var ConstSet175 = setConstr(0, 1);
    var translations_1291845656 = [[makeNimstrLit("Corollary"), makeNimstrLit("D\xC5\xAFsledek"), makeNimstrLit("Folgesatz")], [makeNimstrLit("Definition"), makeNimstrLit("Definice"), makeNimstrLit("Definition")], [makeNimstrLit("Example"), makeNimstrLit("P\xC5\x99\xC3\xADklad"), makeNimstrLit("Beispiel")], [makeNimstrLit("Exercise"), makeNimstrLit("Cvi\xC4\x8Den\xC3\xAD"), makeNimstrLit("\xC3\x9Cbung")], [makeNimstrLit("Hint"), makeNimstrLit("N\xC3\xA1pov\xC4\x9Bda"), makeNimstrLit("Hinweis")], [makeNimstrLit("en"), makeNimstrLit("cs"), makeNimstrLit("de")], [makeNimstrLit("english"), makeNimstrLit("czech"), makeNimstrLit("ngerman")], [makeNimstrLit("Lemma"), makeNimstrLit("Lemma"), makeNimstrLit("Lemma")], [makeNimstrLit("Proof"), makeNimstrLit("D\xC5\xAFkaz"), makeNimstrLit("Beweis")], [makeNimstrLit("\xE2\x80\x9C$1\xE2\x80\x9D"), makeNimstrLit("\xE2\x80\x9E$1\xE2\x80\x9C"), makeNimstrLit("\xE2\x80\x9E$1\xE2\x80\x9C")], [makeNimstrLit("Solution"), makeNimstrLit("\xC5\x98e\xC5\xA1en\xC3\xAD"), makeNimstrLit("L\xC3\xB6sung")], [makeNimstrLit("Theorem"), makeNimstrLit("V\xC4\x9Bta"), makeNimstrLit("Satz")]];
var ConstSet176 = setConstr(3);
    var toLowerRanges_939525019 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_939525020 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
    var toUpperRanges_939525021 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_939525022 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var alphaRanges_939525024 = new Int32Array([65, 90, 97, 122, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 880, 884, 886, 887, 890, 893, 904, 906, 910, 929, 931, 1013, 1015, 1153, 1162, 1327, 1329, 1366, 1376, 1416, 1488, 1514, 1519, 1522, 1568, 1610, 1646, 1647, 1649, 1747, 1765, 1766, 1774, 1775, 1786, 1788, 1810, 1839, 1869, 1957, 1994, 2026, 2036, 2037, 2048, 2069, 2112, 2136, 2144, 2154, 2208, 2228, 2230, 2237, 2308, 2361, 2392, 2401, 2417, 2432, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2486, 2489, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2674, 2676, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2784, 2785, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2908, 2909, 2911, 2913, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3129, 3160, 3162, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3296, 3297, 3313, 3314, 3333, 3340, 3342, 3344, 3346, 3386, 3412, 3414, 3423, 3425, 3450, 3455, 3461, 3478, 3482, 3505, 3507, 3515, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3718, 3722, 3724, 3747, 3751, 3760, 3762, 3763, 3776, 3780, 3804, 3807, 3904, 3911, 3913, 3948, 3976, 3980, 4096, 4138, 4176, 4181, 4186, 4189, 4197, 4198, 4206, 4208, 4213, 4225, 4256, 4293, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024, 5109, 5112, 5117, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5873, 5880, 5888, 5900, 5902, 5905, 5920, 5937, 5952, 5969, 5984, 5996, 5998, 6000, 6016, 6067, 6176, 6264, 6272, 6276, 6279, 6312, 6320, 6389, 6400, 6430, 6480, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6656, 6678, 6688, 6740, 6917, 6963, 6981, 6987, 7043, 7072, 7086, 7087, 7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7296, 7304, 7312, 7354, 7357, 7359, 7401, 7404, 7406, 7411, 7413, 7414, 7424, 7615, 7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8031, 8061, 8064, 8116, 8118, 8124, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8336, 8348, 8458, 8467, 8473, 8477, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8579, 8580, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11502, 11506, 11507, 11520, 11557, 11568, 11623, 11648, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 12293, 12294, 12337, 12341, 12347, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12591, 12593, 12686, 12704, 12730, 12784, 12799, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42527, 42538, 42539, 42560, 42606, 42623, 42653, 42656, 42725, 42775, 42783, 42786, 42888, 42891, 42943, 42946, 42950, 42999, 43009, 43011, 43013, 43015, 43018, 43020, 43042, 43072, 43123, 43138, 43187, 43250, 43255, 43261, 43262, 43274, 43301, 43312, 43334, 43360, 43388, 43396, 43442, 43488, 43492, 43494, 43503, 43514, 43518, 43520, 43560, 43584, 43586, 43588, 43595, 43616, 43638, 43646, 43695, 43701, 43702, 43705, 43709, 43739, 43741, 43744, 43754, 43762, 43764, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43824, 43866, 43868, 43879, 43888, 44002, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64287, 64296, 64298, 64310, 64312, 64316, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 65536, 65547, 65549, 65574, 65576, 65594, 65596, 65597, 65599, 65613, 65616, 65629, 65664, 65786, 66176, 66204, 66208, 66256, 66304, 66335, 66349, 66368, 66370, 66377, 66384, 66421, 66432, 66461, 66464, 66499, 66504, 66511, 66560, 66717, 66736, 66771, 66776, 66811, 66816, 66855, 66864, 66915, 67072, 67382, 67392, 67413, 67424, 67431, 67584, 67589, 67594, 67637, 67639, 67640, 67647, 67669, 67680, 67702, 67712, 67742, 67808, 67826, 67828, 67829, 67840, 67861, 67872, 67897, 67968, 68023, 68030, 68031, 68112, 68115, 68117, 68119, 68121, 68149, 68192, 68220, 68224, 68252, 68288, 68295, 68297, 68324, 68352, 68405, 68416, 68437, 68448, 68466, 68480, 68497, 68608, 68680, 68736, 68786, 68800, 68850, 68864, 68899, 69376, 69404, 69424, 69445, 69600, 69622, 69635, 69687, 69763, 69807, 69840, 69864, 69891, 69926, 69968, 70002, 70019, 70066, 70081, 70084, 70144, 70161, 70163, 70187, 70272, 70278, 70282, 70285, 70287, 70301, 70303, 70312, 70320, 70366, 70405, 70412, 70415, 70416, 70419, 70440, 70442, 70448, 70450, 70451, 70453, 70457, 70493, 70497, 70656, 70708, 70727, 70730, 70784, 70831, 70852, 70853, 71040, 71086, 71128, 71131, 71168, 71215, 71296, 71338, 71424, 71450, 71680, 71723, 71840, 71903, 72096, 72103, 72106, 72144, 72203, 72242, 72284, 72329, 72384, 72440, 72704, 72712, 72714, 72750, 72818, 72847, 72960, 72966, 72968, 72969, 72971, 73008, 73056, 73061, 73063, 73064, 73066, 73097, 73440, 73458, 73728, 74649, 74880, 75075, 77824, 78894, 82944, 83526, 92160, 92728, 92736, 92766, 92880, 92909, 92928, 92975, 92992, 92995, 93027, 93047, 93053, 93071, 93760, 93823, 93952, 94026, 94099, 94111, 94176, 94177, 100352, 101106, 110592, 110878, 110928, 110930, 110948, 110951, 110960, 111355, 113664, 113770, 113776, 113788, 113792, 113800, 113808, 113817, 119808, 119892, 119894, 119964, 119966, 119967, 119973, 119974, 119977, 119980, 119982, 119993, 119997, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120138, 120144, 120146, 120485, 120488, 120512, 120514, 120538, 120540, 120570, 120572, 120596, 120598, 120628, 120630, 120654, 120656, 120686, 120688, 120712, 120714, 120744, 120746, 120770, 120772, 120779, 123136, 123180, 123191, 123197, 123584, 123627, 124928, 125124, 125184, 125251, 126464, 126467, 126469, 126495, 126497, 126498, 126505, 126514, 126516, 126519, 126541, 126543, 126545, 126546, 126561, 126562, 126567, 126570, 126572, 126578, 126580, 126583, 126585, 126588, 126592, 126601, 126603, 126619, 126625, 126627, 126629, 126633, 126635, 126651, 194560, 195101]);
    var alphaSinglets_939525025 = new Int32Array([170, 181, 186, 748, 750, 895, 902, 908, 1369, 1749, 1791, 1808, 1969, 2042, 2074, 2084, 2088, 2365, 2384, 2482, 2493, 2510, 2556, 2654, 2749, 2768, 2809, 2877, 2929, 2947, 2972, 3024, 3133, 3200, 3261, 3294, 3389, 3406, 3517, 3716, 3749, 3773, 3782, 3840, 4159, 4193, 4238, 4295, 4301, 4696, 4800, 6103, 6108, 6314, 6823, 7418, 8025, 8027, 8029, 8126, 8305, 8319, 8450, 8455, 8469, 8484, 8486, 8488, 8526, 11559, 11565, 11631, 11823, 13312, 19893, 19968, 40943, 43259, 43471, 43642, 43697, 43712, 43714, 44032, 55203, 64285, 64318, 67592, 67644, 68096, 69415, 69956, 70006, 70106, 70108, 70280, 70461, 70480, 70751, 70855, 71236, 71352, 71935, 72161, 72163, 72192, 72250, 72272, 72349, 72768, 73030, 73112, 94032, 94179, 94208, 100343, 119970, 119995, 120134, 123214, 125259, 126500, 126503, 126521, 126523, 126530, 126535, 126537, 126539, 126548, 126551, 126553, 126555, 126557, 126559, 126564, 126590, 131072, 173782, 173824, 177972, 177984, 178205, 178208, 183969, 183984, 191456]);
    var spaceRanges_939525026 = new Int32Array([9, 13, 32, 32, 133, 133, 160, 160, 5760, 5760, 8192, 8202, 8232, 8233, 8239, 8239, 8287, 8287, 12288, 12288]);
var ConstSet177 = setConstr(9, 10, 11);
var ConstSet178 = setConstr(9, 10, 11);
var ConstSet179 = setConstr(9, 10, 11);
var ConstSet180 = setConstr(9, 10, 11);
var ConstSet181 = setConstr(9, 10, 11);
var ConstSet182 = setConstr(9, 10, 11);
var ConstSet183 = setConstr(9, 10, 11);
var ConstSet184 = setConstr(9, 10, 11);
var ConstSet185 = setConstr(9, 10, 11);
var ConstSet186 = setConstr(9, 10, 11);
var ConstSet187 = setConstr(9, 10, 11);
var ConstSet188 = setConstr(9, 10, 11);
var ConstSet189 = setConstr(9, 10, 11);
var ConstSet190 = setConstr(9, 10, 11);
var ConstSet191 = setConstr(9, 10, 11);
var ConstSet192 = setConstr(9, 10, 11);
var ConstSet193 = setConstr(9, 10, 11);
var ConstSet194 = setConstr(9, 10, 11);
var ConstSet195 = setConstr(9, 10, 11);
var ConstSet196 = setConstr(9, 10, 11);
var ConstSet197 = setConstr(9, 10, 11);
var ConstSet198 = setConstr(9, 10, 11);
var ConstSet199 = setConstr(9, 10, 11);
var ConstSet200 = setConstr(9, 10, 11);
var ConstSet201 = setConstr(9, 10, 11);
var ConstSet202 = setConstr(9, 10, 11);
var ConstSet203 = setConstr(9, 10, 11);
var ConstSet204 = setConstr(9, 10, 11);
var ConstSet205 = setConstr(9, 10, 11);
var ConstSet206 = setConstr(9, 10, 11);
var ConstSet207 = setConstr(9, 10, 11);
var ConstSet208 = setConstr(9, 10, 11);
var ConstSet209 = setConstr(9, 10, 11);
var ConstSet210 = setConstr(9, 10, 11);
var ConstSet211 = setConstr(9, 10, 11);
var ConstSet212 = setConstr(9, 10, 11);
var ConstSet213 = setConstr(9, 10, 11);
var ConstSet214 = setConstr(9, 10, 11);
var ConstSet215 = setConstr(9, 10, 11);
var ConstSet216 = setConstr(9, 10, 11);
var ConstSet217 = setConstr(9, 10, 11);
var ConstSet218 = setConstr(9, 10, 11);
var ConstSet219 = setConstr(9, 10, 11);
var ConstSet220 = setConstr(9, 10, 11);
var ConstSet221 = setConstr(9, 10, 11);
var ConstSet222 = setConstr(9, 10, 11);
var ConstSet223 = setConstr(9, 10, 11);
var ConstSet224 = setConstr(9, 10, 11);
var ConstSet225 = setConstr(9, 10, 11);
var ConstSet226 = setConstr(9, 10, 11);
var ConstSet227 = setConstr(9, 10, 11);
var ConstSet228 = setConstr(9, 10, 11);
var ConstSet229 = setConstr(9, 10, 11);
var ConstSet230 = setConstr(9, 10, 11);
var ConstSet231 = setConstr(9, 10, 11);
var ConstSet232 = setConstr(9, 10, 11);
var ConstSet233 = setConstr(9, 10, 11);
var ConstSet234 = setConstr(9, 10, 11);
var ConstSet235 = setConstr(9, 10, 11);
var ConstSet236 = setConstr(9, 10, 11);
var ConstSet237 = setConstr(9, 10, 11);
var ConstSet238 = setConstr(9, 10, 11);
var ConstSet239 = setConstr(9, 10, 11);
var ConstSet240 = setConstr(9, 10, 11);
var ConstSet241 = setConstr(9, 10, 11);
var ConstSet242 = setConstr(9, 10, 11);
var ConstSet243 = setConstr(9, 10, 11);
var ConstSet244 = setConstr(9, 10, 11);
var ConstSet245 = setConstr(9, 10, 11);
var ConstSet246 = setConstr(9, 10, 11);
var ConstSet247 = setConstr(9, 10, 11);
var ConstSet248 = setConstr(9, 10, 11);
var ConstSet249 = setConstr(12, 18);
var ConstSet250 = setConstr(13, 19);
var ConstSet251 = setConstr(14);
var ConstSet252 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet253 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet254 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet255 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet256 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet257 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet258 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet259 = setConstr(12, 18);
var ConstSet260 = setConstr(13, 19);
var ConstSet261 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet262 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet263 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet264 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet265 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet266 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet267 = setConstr([25, 27]);
var ConstSet268 = setConstr();
var ConstSet269 = setConstr(13, 10, 0);
var ConstSet270 = setConstr();
var ConstSet271 = setConstr([48, 57]);
var ConstSet272 = setConstr([65, 90], [97, 122]);

function SetMinus(a_33556920, b_33556921) {
        var result = {};
    for (var elem in a_33556920) {
      if (!b_33556921[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet273 = setConstr([1, 255]);
var ConstSet274 = setConstr([65, 90], [97, 122]);
var ConstSet275 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet276 = setConstr([48, 57]);
var ConstSet277 = setConstr([48, 57]);

function negInt(a_33556983) {
  var result_33556984 = 0;

    result_33556984 = (a_33556983 * -1);

  return result_33556984;

}
var ConstSet278 = setConstr(39, 34);
var ConstSet279 = setConstr(94, [48, 57]);

function absInt(a_33556989) {
    var Temporary1;

  var result_33556990 = 0;

    if ((a_33556989 < 0)) {
    Temporary1 = (a_33556989 * -1);
    }
    else {
    Temporary1 = a_33556989;
    }
    
    result_33556990 = Temporary1;

  return result_33556990;

}
var ConstSet280 = setConstr(21, 17, 20, 18, 19);
var ConstSet281 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet282 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet283 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet284 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet285 = setConstr(9, 10, 11);
var ConstSet286 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet287 = setConstr(9, 10, 11);
var ConstSet288 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet289 = setConstr(9, 10, 11);
var ConstSet290 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet291 = setConstr(12, 18);
var ConstSet292 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet293 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet294 = setConstr(9, 32);
var ConstSet295 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet296 = setConstr(13, 19);
var ConstSet297 = setConstr(13, 19);
var ConstSet298 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet299 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet300 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);

function SetPlus(a_33556916, b_33556917) {
        var result = {};
    for (var elem in a_33556916) { result[elem] = true; }
    for (var elem in b_33556917) { result[elem] = true; }
    return result;
  

  
}
var ConstSet301 = setConstr(13, 19);
var ConstSet302 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet303 = setConstr(13, 19);
var ConstSet304 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet305 = setConstr(13, 19);
var ConstSet306 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
var ConstSet307 = setConstr(12, 18);
var ConstSet308 = setConstr([0, 8], 9, 10, 11, 12, 18, 13, 19, 14, [25, 27]);
      var tokKindToStr_1207962766 = [makeNimstrLit("invalid"), makeNimstrLit("[EOF]"), makeNimstrLit("."), makeNimstrLit("_"), makeNimstrLit("identifier"), makeNimstrLit("string literal"), makeNimstrLit("character set"), makeNimstrLit("("), makeNimstrLit(")"), makeNimstrLit("{"), makeNimstrLit("}"), makeNimstrLit("{@}"), makeNimstrLit("{}"), makeNimstrLit("<-"), makeNimstrLit("/"), makeNimstrLit("*"), makeNimstrLit("+"), makeNimstrLit("&"), makeNimstrLit("!"), makeNimstrLit("?"), makeNimstrLit("@"), makeNimstrLit("built-in"), makeNimstrLit("escaped"), makeNimstrLit("$"), makeNimstrLit("$"), makeNimstrLit("^")];
var ConstSet309 = setConstr([48, 57]);
var ConstSet310 = setConstr([1, 47], [58, 255]);
var ConstSet311 = setConstr(32, [9, 13]);
var ConstSet312 = setConstr([1, 8], [14, 31], [33, 255]);
var ConstSet313 = setConstr([97, 122], [65, 90], 95, [48, 57]);
var ConstSet314 = setConstr([1, 47], [58, 64], [91, 94], 96, [123, 255]);
var ConstSet315 = setConstr([97, 122], [65, 90]);
var ConstSet316 = setConstr([1, 64], [91, 96], [123, 255]);
var ConstSet317 = setConstr([97, 122], [65, 90], 95);
var ConstSet318 = setConstr(12, 18);
var ConstSet319 = setConstr(13, 19);
var ConstSet320 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet321 = setConstr(0);

function isObj(obj_33557239, subclass_33557240) {
  var result_33557241 = false;

  BeforeRet: do {
    var x_33557242 = obj_33557239;
    if ((x_33557242 == subclass_33557240)) {
    result_33557241 = true;
    break BeforeRet;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!!((x_33557242 == subclass_33557240))) break Label2;
          if ((x_33557242 == null)) {
          result_33557241 = false;
          break BeforeRet;
          }
          
          x_33557242 = x_33557242.base;
        }
    } while (false);
    result_33557241 = true;
    break BeforeRet;
  } while (false);

  return result_33557241;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: makeNimstrLit("no exception to reraise"), parent: null, m_type: NTI33555132, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556520()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet322 = setConstr(0);
var ConstSet323 = setConstr(0, 1);
var ConstSet324 = setConstr(0, 1);
var ConstSet325 = setConstr(0);
      var prismCss_1191182368 = {data: [{Field0: 203983520, Field1: makeNimstrLit("okaidia"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#f8f8f2;background:0 0;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#272822}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#8292a2}.token.punctuation{color:#f8f8f2}.token.namespace{opacity:.7}.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag{color:#f92672}.token.boolean,.token.number{color:#ae81ff}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#a6e22e}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f8f8f2}.token.atrule,.token.attr-value,.token.class-name,.token.function{color:#e6db74}.token.keyword{color:#66d9ef}.token.important,.token.regex{color:#fd971f}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\x0A")}, {Field0: 0, Field1: [], Field2: []}, {Field0: 2098521666, Field1: makeNimstrLit("funky"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-funky&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:.4em .8em;margin:.5em 0;overflow:auto;background:url(\'data:image/svg+xml;charset=utf-8,<svg%20version%3D\"1.1\"%20xmlns%3D\"http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\"%20width%3D\"100\"%20height%3D\"100\"%20fill%3D\"rgba(0%2C0%2C0%2C.2)\">%0D%0A<polygon%20points%3D\"0%2C50%2050%2C0%200%2C0\"%20%2F>%0D%0A<polygon%20points%3D\"0%2C100%2050%2C100%20100%2C50%20100%2C0\"%20%2F>%0D%0A<%2Fsvg>\');background-size:1em 1em}code[class*=language-]{background:#000;color:#fff;box-shadow:-.3em 0 0 .3em #000,.3em 0 0 .3em #000}:not(pre)>code[class*=language-]{padding:.2em;border-radius:.3em;box-shadow:none;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#aaa}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#0cf}.token.attr-name,.token.builtin,.token.char,.token.selector,.token.string{color:#ff0}.language-css .token.string,.token.entity,.token.inserted,.token.operator,.token.url,.token.variable{color:#9acd32}.token.atrule,.token.attr-value,.token.keyword{color:#ff1493}.token.important,.token.regex{color:orange}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}pre.diff-highlight.diff-highlight>code .token.deleted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.deleted:not(.prefix){background-color:rgba(255,0,0,.3);display:inline}pre.diff-highlight.diff-highlight>code .token.inserted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.inserted:not(.prefix){background-color:rgba(0,255,128,.3);display:inline}\x0A")}, {Field0: -1431576765, Field1: makeNimstrLit("funky-x"), Field2: makeNimstrLit("code[class*=language-],pre[class*=language-]{font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:.4em .8em;margin:.5em 0;overflow:auto;background-color:#000}code[class*=language-]{background:#000;color:#fff;box-shadow:-.3em 0 0 .3em #000,.3em 0 0 .3em #000}:not(pre)>code[class*=language-]{padding:.2em;border-radius:.3em;box-shadow:none;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#aaa}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#0cf}.token.attr-name,.token.builtin,.token.char,.token.selector,.token.string{color:#ff0}.language-css .token.string,.token.entity,.token.inserted,.token.operator,.token.url,.token.variable{color:#9acd32}.token.atrule,.token.attr-value,.token.keyword{color:#ff1493}.token.important,.token.regex{color:orange}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}pre.diff-highlight.diff-highlight>code .token.deleted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.deleted:not(.prefix){background-color:rgba(255,0,0,.3);display:inline}pre.diff-highlight.diff-highlight>code .token.inserted:not(.prefix),pre>code.diff-highlight.diff-highlight .token.inserted:not(.prefix){background-color:rgba(0,255,128,.3);display:inline}\x0A")}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 63010150, Field1: makeNimstrLit("coy"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-coy&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#000;background:0 0;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{position:relative;margin:.5em 0;overflow:visible;padding:1px}pre[class*=language-]>code{position:relative;z-index:1;border-left:10px solid #358ccb;box-shadow:-1px 0 0 0 #358ccb,0 0 0 1px #dfdfdf;background-color:#fdfdfd;background-image:linear-gradient(transparent 50%,rgba(69,142,209,.04) 50%);background-size:3em 3em;background-origin:content-box;background-attachment:local}code[class*=language-]{max-height:inherit;height:inherit;padding:0 1em;display:block;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background-color:#fdfdfd;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;margin-bottom:1em}:not(pre)>code[class*=language-]{position:relative;padding:.2em;border-radius:.3em;color:#c92c2c;border:1px solid rgba(0,0,0,.1);display:inline;white-space:normal}pre[class*=language-]:after,pre[class*=language-]:before{content:\'\';display:block;position:absolute;bottom:.75em;left:.18em;width:40%;height:20%;max-height:13em;box-shadow:0 13px 8px #979797;-webkit-transform:rotate(-2deg);-moz-transform:rotate(-2deg);-ms-transform:rotate(-2deg);-o-transform:rotate(-2deg);transform:rotate(-2deg)}pre[class*=language-]:after{right:.75em;left:auto;-webkit-transform:rotate(2deg);-moz-transform:rotate(2deg);-ms-transform:rotate(2deg);-o-transform:rotate(2deg);transform:rotate(2deg)}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#7d8b99}.token.punctuation{color:#5f6364}.token.boolean,.token.constant,.token.deleted,.token.function-name,.token.number,.token.property,.token.symbol,.token.tag{color:#c92c2c}.token.attr-name,.token.builtin,.token.char,.token.function,.token.inserted,.token.selector,.token.string{color:#2f9c0a}.token.entity,.token.operator,.token.url,.token.variable{color:#a67f59;background:rgba(255,255,255,.5)}.token.atrule,.token.attr-value,.token.class-name,.token.keyword{color:#1990b8}.token.important,.token.regex{color:#e90}.language-css .token.string,.style .token.string{color:#a67f59;background:rgba(255,255,255,.5)}.token.important{font-weight:400}.token.bold{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.namespace{opacity:.7}@media screen and (max-width:767px){pre[class*=language-]:after,pre[class*=language-]:before{bottom:14px;box-shadow:none}}pre[class*=language-].line-numbers.line-numbers{padding-left:0}pre[class*=language-].line-numbers.line-numbers code{padding-left:3.8em}pre[class*=language-].line-numbers.line-numbers .line-numbers-rows{left:0}pre[class*=language-][data-line]{padding-top:0;padding-bottom:0;padding-left:0}pre[data-line] code{position:relative;padding-left:4em}pre .line-highlight{margin-top:0}\x0A")}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: -1356231671, Field1: makeNimstrLit("tomorrow-night"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#ccc;background:0 0;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#2d2d2d}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#999}.token.punctuation{color:#ccc}.token.attr-name,.token.deleted,.token.namespace,.token.tag{color:#e2777a}.token.function-name{color:#6196cc}.token.boolean,.token.function,.token.number{color:#f08d49}.token.class-name,.token.constant,.token.property,.token.symbol{color:#f8c555}.token.atrule,.token.builtin,.token.important,.token.keyword,.token.selector{color:#cc99cd}.token.attr-value,.token.char,.token.regex,.token.string,.token.variable{color:#7ec699}.token.entity,.token.operator,.token.url{color:#67cdcc}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.inserted{color:green}\x0A")}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: -1944989682, Field1: makeNimstrLit("twilight"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-twilight&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#fff;background:0 0;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;text-shadow:0 -.1em .2em #000;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}:not(pre)>code[class*=language-],pre[class*=language-]{background:#141414}pre[class*=language-]{border-radius:.5em;border:.3em solid #545454;box-shadow:1px 1px .5em #000 inset;margin:.5em 0;overflow:auto;padding:1em}pre[class*=language-]::-moz-selection{background:#27292a}pre[class*=language-]::selection{background:#27292a}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{text-shadow:none;background:hsla(0,0%,93%,.15)}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{text-shadow:none;background:hsla(0,0%,93%,.15)}:not(pre)>code[class*=language-]{border-radius:.3em;border:.13em solid #545454;box-shadow:1px 1px .3em -.1em #000 inset;padding:.15em .2em .05em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#777}.token.punctuation{opacity:.7}.token.namespace{opacity:.7}.token.boolean,.token.deleted,.token.number,.token.tag{color:#ce6849}.token.builtin,.token.constant,.token.keyword,.token.property,.token.selector,.token.symbol{color:#f9ed99}.language-css .token.string,.style .token.string,.token.attr-name,.token.attr-value,.token.char,.token.entity,.token.inserted,.token.operator,.token.string,.token.url,.token.variable{color:#909e6a}.token.atrule{color:#7385a5}.token.important,.token.regex{color:#e8c062}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.language-markup .token.attr-name,.language-markup .token.punctuation,.language-markup .token.tag{color:#ac885c}.token{position:relative;z-index:1}.line-highlight.line-highlight{background:hsla(0,0%,33%,.25);background:linear-gradient(to right,hsla(0,0%,33%,.1) 70%,hsla(0,0%,33%,0));border-bottom:1px dashed #545454;border-top:1px dashed #545454;margin-top:.75em;z-index:0}.line-highlight.line-highlight:before,.line-highlight.line-highlight[data-end]:after{background-color:#8693a6;color:#f4f1ef}\x0A")}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 767273821, Field1: makeNimstrLit("dark"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-dark&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#fff;background:0 0;text-shadow:0 -.1em .2em #000;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}:not(pre)>code[class*=language-],pre[class*=language-]{background:#4c3f33}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:.3em solid #7a6651;border-radius:.5em;box-shadow:1px 1px .5em #000 inset}:not(pre)>code[class*=language-]{padding:.15em .2em .05em;border-radius:.3em;border:.13em solid #7a6651;box-shadow:1px 1px .3em -.1em #000 inset;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#997f66}.token.punctuation{opacity:.7}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.number,.token.property,.token.symbol,.token.tag{color:#d1939e}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#bce051}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f4b73d}.token.atrule,.token.attr-value,.token.keyword{color:#d1939e}.token.important,.token.regex{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:red}\x0A")}, {Field0: -2023672578, Field1: makeNimstrLit("solarized-light"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism-solarizedlight&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#657b83;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{background:#073642}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{background:#073642}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background-color:#fdf6e3}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#93a1a1}.token.punctuation{color:#586e75}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#268bd2}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string,.token.url{color:#2aa198}.token.entity{color:#657b83;background:#eee8d5}.token.atrule,.token.attr-value,.token.keyword{color:#859900}.token.class-name,.token.function{color:#b58900}.token.important,.token.regex,.token.variable{color:#cb4b16}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\x0A")}, {Field0: 1120495519, Field1: makeNimstrLit("default"), Field2: makeNimstrLit("/* PrismJS 1.25.0\x0Ahttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\x0Acode[class*=language-],pre[class*=language-]{color:#000;background:0 0;text-shadow:0 1px #fff;font-family:Consolas,Monaco,\'Andale Mono\',\'Ubuntu Mono\',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{text-shadow:none;background:#b3d4fc}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{text-shadow:none;background:#b3d4fc}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#f5f2f0}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#9a6e3a;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.class-name,.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\x0A")}], counter: 9};
var ConstSet326 = setConstr(0);
var ConstSet327 = setConstr(0);
var ConstSet328 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet329 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet330 = setConstr(2);
var ConstSet331 = setConstr(0);
var ConstSet332 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet333 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet334 = setConstr([48, 57]);
var ConstSet335 = setConstr([48, 57]);
var ConstSet336 = setConstr(101, 69);
var ConstSet337 = setConstr([48, 57]);
var ConstSet338 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557274, number_33557275, number_33557275_Idx, start_33557276) {
    var Temporary1;

  var result_33557277 = 0;

  BeforeRet: do {
    var sign_33557278 = false;
    var i_33557279 = start_33557276;
    if ((s_33557274[i_33557279] == 43)) {
    i_33557279 += 1;
    }
    else {
    if ((s_33557274[i_33557279] == 45)) {
    sign_33557278 = true;
    i_33557279 += 1;
    }
    }
    if (((s_33557274[i_33557279] == 78) || (s_33557274[i_33557279] == 110))) {
    if (((s_33557274[(i_33557279 + 1)] == 65) || (s_33557274[(i_33557279 + 1)] == 97))) {
    if (((s_33557274[(i_33557279 + 2)] == 78) || (s_33557274[(i_33557279 + 2)] == 110))) {
    if (!((ConstSet332[s_33557274[(i_33557279 + 3)]] != undefined))) {
    number_33557275[number_33557275_Idx] = NaN;
    result_33557277 = ((i_33557279 + 3) - start_33557276);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557277 = 0;
    break BeforeRet;
    }
    
    if (((s_33557274[i_33557279] == 73) || (s_33557274[i_33557279] == 105))) {
    if (((s_33557274[(i_33557279 + 1)] == 78) || (s_33557274[(i_33557279 + 1)] == 110))) {
    if (((s_33557274[(i_33557279 + 2)] == 70) || (s_33557274[(i_33557279 + 2)] == 102))) {
    if (!((ConstSet333[s_33557274[(i_33557279 + 3)]] != undefined))) {
    if (sign_33557278) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557275[number_33557275_Idx] = Temporary1;
    result_33557277 = ((i_33557279 + 3) - start_33557276);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557277 = 0;
    break BeforeRet;
    }
    
    var buf_33557296 = [];
    if (sign_33557278) {
    addChar(buf_33557296, 45);;
    }
    
    Label2: do {
        Label3: while (true) {
        if (!(ConstSet334[s_33557274[i_33557279]] != undefined)) break Label3;
          addChar(buf_33557296, s_33557274[i_33557279]);;
          i_33557279 += 1;
          Label4: do {
              Label5: while (true) {
              if (!(s_33557274[i_33557279] == 95)) break Label5;
                i_33557279 += 1;
              }
          } while (false);
        }
    } while (false);
    if ((s_33557274[i_33557279] == 46)) {
    addChar(buf_33557296, s_33557274[i_33557279]);;
    i_33557279 += 1;
    Label6: do {
        Label7: while (true) {
        if (!(ConstSet335[s_33557274[i_33557279]] != undefined)) break Label7;
          addChar(buf_33557296, s_33557274[i_33557279]);;
          i_33557279 += 1;
          Label8: do {
              Label9: while (true) {
              if (!(s_33557274[i_33557279] == 95)) break Label9;
                i_33557279 += 1;
              }
          } while (false);
        }
    } while (false);
    }
    
    if (((buf_33557296).length == (sign_33557278 ? 1 : 0))) {
    result_33557277 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet336[s_33557274[i_33557279]] != undefined)) {
    addChar(buf_33557296, s_33557274[i_33557279]);;
    i_33557279 += 1;
    if ((s_33557274[i_33557279] == 43)) {
    i_33557279 += 1;
    }
    else {
    if ((s_33557274[i_33557279] == 45)) {
    addChar(buf_33557296, s_33557274[i_33557279]);;
    i_33557279 += 1;
    }
    }
    if (!((ConstSet337[s_33557274[i_33557279]] != undefined))) {
    result_33557277 = 0;
    break BeforeRet;
    }
    
    Label10: do {
        Label11: while (true) {
        if (!(ConstSet338[s_33557274[i_33557279]] != undefined)) break Label11;
          addChar(buf_33557296, s_33557274[i_33557279]);;
          i_33557279 += 1;
          Label12: do {
              Label13: while (true) {
              if (!(s_33557274[i_33557279] == 95)) break Label13;
                i_33557279 += 1;
              }
          } while (false);
        }
    } while (false);
    }
    
    number_33557275[number_33557275_Idx] = parseFloatNative_33557269(buf_33557296);
    result_33557277 = (i_33557279 - start_33557276);
  } while (false);

  return result_33557277;

}
var ConstSet339 = setConstr(46, 44);
var ConstSet340 = setConstr([65, 90]);
var ConstSet341 = setConstr([97, 122]);
var ConstSet342 = setConstr(0);
var ConstSet343 = setConstr(0);
var ConstSet344 = setConstr(2);
var ConstSet345 = setConstr(47, 47);
var ConstSet346 = setConstr(47, 47);
var ConstSet347 = setConstr(47, 47);
var ConstSet348 = setConstr(47, 47);
var ConstSet349 = setConstr(47, 47);
var ConstSet350 = setConstr(47, 47);
var ConstSet351 = setConstr(47, 47);
var ConstSet352 = setConstr(47, 47);
var ConstSet353 = setConstr(47, 47);
var ConstSet354 = setConstr(47, 47);
var ConstSet355 = setConstr(47, 47);
var ConstSet356 = setConstr(47, 47);
var ConstSet357 = setConstr(47, 47);
var ConstSet358 = setConstr(0);
var ConstSet359 = setConstr(47, 47);
    var FormatOpen_452985184 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet360 = setConstr(0);
var ConstSet361 = setConstr(1);
var ConstSet362 = setConstr(0, 1);
var ConstSet363 = setConstr([65, 90]);
var ConstSet364 = setConstr(0);
    var seps_1191189285 = [makeNimstrLit("<br />"), makeNimstrLit("\\\\"), makeNimstrLit("\x0A")];
var ConstSet365 = setConstr(0);
var ConstSet366 = setConstr(10);
var ConstSet367 = setConstr(13, 10);
var ConstSet368 = setConstr(13, 10);
var ConstSet369 = setConstr(0);
var ConstSet370 = setConstr(0);
var ConstSet371 = setConstr(0);
var ConstSet372 = setConstr(0);
              var htmlTags_1191182362 = [makeNimstrLit("!--"), makeNimstrLit("!DOCTYPE"), makeNimstrLit("a"), makeNimstrLit("abbr"), makeNimstrLit("acronym"), makeNimstrLit("address"), makeNimstrLit("applet"), makeNimstrLit("area"), makeNimstrLit("article"), makeNimstrLit("aside"), makeNimstrLit("audio"), makeNimstrLit("b"), makeNimstrLit("base"), makeNimstrLit("basefont"), makeNimstrLit("bdi"), makeNimstrLit("bdo"), makeNimstrLit("big"), makeNimstrLit("blockquote"), makeNimstrLit("body"), makeNimstrLit("br"), makeNimstrLit("button"), makeNimstrLit("canvas"), makeNimstrLit("caption"), makeNimstrLit("center"), makeNimstrLit("circle"), makeNimstrLit("cite"), makeNimstrLit("code"), makeNimstrLit("col"), makeNimstrLit("colgroup"), makeNimstrLit("data"), makeNimstrLit("datalist"), makeNimstrLit("dd"), makeNimstrLit("del"), makeNimstrLit("details"), makeNimstrLit("dfn"), makeNimstrLit("dialog"), makeNimstrLit("dir"), makeNimstrLit("div"), makeNimstrLit("dl"), makeNimstrLit("dt"), makeNimstrLit("em"), makeNimstrLit("embed"), makeNimstrLit("fieldset"), makeNimstrLit("figcaption"), makeNimstrLit("figure"), makeNimstrLit("font"), makeNimstrLit("footer"), makeNimstrLit("form"), makeNimstrLit("frame"), makeNimstrLit("frameset"), makeNimstrLit("g"), makeNimstrLit("h1"), makeNimstrLit("h2"), makeNimstrLit("h3"), makeNimstrLit("h4"), makeNimstrLit("h5"), makeNimstrLit("h6"), makeNimstrLit("head"), makeNimstrLit("header"), makeNimstrLit("hr"), makeNimstrLit("html"), makeNimstrLit("i"), makeNimstrLit("iframe"), makeNimstrLit("img"), makeNimstrLit("input"), makeNimstrLit("ins"), makeNimstrLit("kbd"), makeNimstrLit("label"), makeNimstrLit("legend"), makeNimstrLit("li"), makeNimstrLit("line"), makeNimstrLit("link"), makeNimstrLit("main"), makeNimstrLit("map"), makeNimstrLit("mark"), makeNimstrLit("meta"), makeNimstrLit("meter"), makeNimstrLit("nav"), makeNimstrLit("noframes"), makeNimstrLit("noscript"), makeNimstrLit("object"), makeNimstrLit("ol"), makeNimstrLit("optgroup"), makeNimstrLit("option"), makeNimstrLit("output"), makeNimstrLit("p"), makeNimstrLit("param"), makeNimstrLit("path"), makeNimstrLit("picture"), makeNimstrLit("polyline"), makeNimstrLit("pre"), makeNimstrLit("progress"), makeNimstrLit("q"), makeNimstrLit("rect"), makeNimstrLit("rp"), makeNimstrLit("rt"), makeNimstrLit("ruby"), makeNimstrLit("s"), makeNimstrLit("samp"), makeNimstrLit("script"), makeNimstrLit("section"), makeNimstrLit("select"), makeNimstrLit("small"), makeNimstrLit("source"), makeNimstrLit("span"), makeNimstrLit("strike"), makeNimstrLit("strong"), makeNimstrLit("style"), makeNimstrLit("sub"), makeNimstrLit("summary"), makeNimstrLit("sup"), makeNimstrLit("svg"), makeNimstrLit("table"), makeNimstrLit("tbody"), makeNimstrLit("td"), makeNimstrLit("template"), makeNimstrLit("textarea"), makeNimstrLit("tfoot"), makeNimstrLit("th"), makeNimstrLit("thead"), makeNimstrLit("time"), makeNimstrLit("title"), makeNimstrLit("tr"), makeNimstrLit("track"), makeNimstrLit("tt"), makeNimstrLit("u"), makeNimstrLit("ul"), makeNimstrLit("var"), makeNimstrLit("video"), makeNimstrLit("wbr")];
                    var htmlSelfClosingTags_1191182363 = [makeNimstrLit("area"), makeNimstrLit("base"), makeNimstrLit("br"), makeNimstrLit("circle"), makeNimstrLit("col"), makeNimstrLit("embed"), makeNimstrLit("hr"), makeNimstrLit("img"), makeNimstrLit("input"), makeNimstrLit("line"), makeNimstrLit("link"), makeNimstrLit("meta"), makeNimstrLit("param"), makeNimstrLit("polyline"), makeNimstrLit("source"), makeNimstrLit("path"), makeNimstrLit("rect"), makeNimstrLit("track"), makeNimstrLit("wbr")];
var ConstSet373 = setConstr(0);
var ConstSet374 = setConstr(0);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_1056964770 = [0];

function initLock_1426063420(lock_1426063421) {
  
}
var gFunsLock_1409286158 = [({})];
var gFuns_1409286159 = [[]];
initLock_1426063420(gFunsLock_1409286158[0]);
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.katex=t():e.katex=t()}("undefined"!=typeof self?self:this,(function(){return function(){"use strict";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},t={};e.d(t,{default:function(){return Qn}});var r=function e(t,r){this.position=void 0;var n,a="KaTeX parse error: "+t,i=r&&r.loc;if(i&&i.start<=i.end){var o=i.lexer.input;n=i.start;var s=i.end;n===o.length?a+=" at end of input: ":a+=" at position "+(n+1)+": ";var l=o.slice(n,s).replace(/[^]/g,"$&\u0332");a+=(n>15?"\u2026"+o.slice(n-15,n):o.slice(0,n))+l+(s+15<o.length?o.slice(s,s+15)+"\u2026":o.slice(s))}var h=new Error(a);return h.name="ParseError",h.__proto__=e.prototype,h.position=n,h};r.prototype.__proto__=Error.prototype;var n=r,a=/([A-Z])/g,i={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},o=/[&><"']/g;var s=function e(t){return"ordgroup"===t.type||"color"===t.type?1===t.body.length?e(t.body[0]):t:"font"===t.type?e(t.body):t},l={contains:function(e,t){return-1!==e.indexOf(t)},deflt:function(e,t){return void 0===e?t:e},escape:function(e){return String(e).replace(o,(function(e){return i[e]}))},hyphenate:function(e){return e.replace(a,"-$1").toLowerCase()},getBaseElem:s,isCharacterBox:function(e){var t=s(e);return"mathord"===t.type||"textord"===t.type||"atom"===t.type},protocolFromUrl:function(e){var t=/^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(e);return null!=t?t[1]:"_relative"}},h={displayMode:{type:"boolean",description:"Render math in display mode, which puts the math in display style (so \\int and \\sum are large, for example), and centers the math on the page on its own line.",cli:"-d, --display-mode"},output:{type:{enum:["htmlAndMathml","html","mathml"]},description:"Determines the markup language of the output.",cli:"-F, --format <type>"},leqno:{type:"boolean",description:"Render display math in leqno style (left-justified tags)."},fleqn:{type:"boolean",description:"Render display math flush left."},throwOnError:{type:"boolean",default:!0,cli:"-t, --no-throw-on-error",cliDescription:"Render errors (in the color given by --error-color) instead of throwing a ParseError exception when encountering an error."},errorColor:{type:"string",default:"#cc0000",cli:"-c, --error-color <color>",cliDescription:"A color string given in the format 'rgb' or 'rrggbb' (no #). This option determines the color of errors rendered by the -t option.",cliProcessor:function(e){return"#"+e}},macros:{type:"object",cli:"-m, --macro <def>",cliDescription:"Define custom macro of the form '\\foo:expansion' (use multiple -m arguments for multiple macros).",cliDefault:[],cliProcessor:function(e,t){return t.push(e),t}},minRuleThickness:{type:"number",description:"Specifies a minimum thickness, in ems, for fraction lines, \\sqrt top lines, {array} vertical lines, \\hline, \\hdashline, \\underline, \\overline, and the borders of \\fbox, \\boxed, and \\fcolorbox.",processor:function(e){return Math.max(0,e)},cli:"--min-rule-thickness <size>",cliProcessor:parseFloat},colorIsTextColor:{type:"boolean",description:"Makes \\color behave like LaTeX's 2-argument \\textcolor, instead of LaTeX's one-argument \\color mode change.",cli:"-b, --color-is-text-color"},strict:{type:[{enum:["warn","ignore","error"]},"boolean","function"],description:"Turn on strict / LaTeX faithfulness mode, which throws an error if the input uses features that are not supported by LaTeX.",cli:"-S, --strict",cliDefault:!1},trust:{type:["boolean","function"],description:"Trust the input, enabling all HTML features such as \\url.",cli:"-T, --trust"},maxSize:{type:"number",default:1/0,description:"If non-zero, all user-specified sizes, e.g. in \\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, elements and spaces can be arbitrarily large",processor:function(e){return Math.max(0,e)},cli:"-s, --max-size <n>",cliProcessor:parseInt},maxExpand:{type:"number",default:1e3,description:"Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity, the macro expander will try to fully expand as in LaTeX.",processor:function(e){return Math.max(0,e)},cli:"-e, --max-expand <n>",cliProcessor:function(e){return"Infinity"===e?1/0:parseInt(e)}},globalGroup:{type:"boolean",cli:!1}};function c(e){if(e.default)return e.default;var t=e.type,r=Array.isArray(t)?t[0]:t;if("string"!=typeof r)return r.enum[0];switch(r){case"boolean":return!1;case"string":return"";case"number":return 0;case"object":return{}}}var m=function(){function e(e){for(var t in this.displayMode=void 0,this.output=void 0,this.leqno=void 0,this.fleqn=void 0,this.throwOnError=void 0,this.errorColor=void 0,this.macros=void 0,this.minRuleThickness=void 0,this.colorIsTextColor=void 0,this.strict=void 0,this.trust=void 0,this.maxSize=void 0,this.maxExpand=void 0,this.globalGroup=void 0,e=e||{},h)if(h.hasOwnProperty(t)){var r=h[t];this[t]=void 0!==e[t]?r.processor?r.processor(e[t]):e[t]:c(r)}}var t=e.prototype;return t.reportNonstrict=function(e,t,r){var a=this.strict;if("function"==typeof a&&(a=a(e,t,r)),a&&"ignore"!==a){if(!0===a||"error"===a)throw new n("LaTeX-incompatible input and strict mode is set to 'error': "+t+" ["+e+"]",r);"warn"===a?"undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+t+" ["+e+"]"):"undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to unrecognized '"+a+"': "+t+" ["+e+"]")}},t.useStrictBehavior=function(e,t,r){var n=this.strict;if("function"==typeof n)try{n=n(e,t,r)}catch(e){n="error"}return!(!n||"ignore"===n)&&(!0===n||"error"===n||("warn"===n?("undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+t+" ["+e+"]"),!1):("undefined"!=typeof console&&console.warn("LaTeX-incompatible input and strict mode is set to unrecognized '"+n+"': "+t+" ["+e+"]"),!1)))},t.isTrusted=function(e){e.url&&!e.protocol&&(e.protocol=l.protocolFromUrl(e.url));var t="function"==typeof this.trust?this.trust(e):this.trust;return Boolean(t)},e}(),u=function(){function e(e,t,r){this.id=void 0,this.size=void 0,this.cramped=void 0,this.id=e,this.size=t,this.cramped=r}var t=e.prototype;return t.sup=function(){return p[d[this.id]]},t.sub=function(){return p[f[this.id]]},t.fracNum=function(){return p[g[this.id]]},t.fracDen=function(){return p[v[this.id]]},t.cramp=function(){return p[y[this.id]]},t.text=function(){return p[b[this.id]]},t.isTight=function(){return this.size>=2},e}(),p=[new u(0,0,!1),new u(1,0,!0),new u(2,1,!1),new u(3,1,!0),new u(4,2,!1),new u(5,2,!0),new u(6,3,!1),new u(7,3,!0)],d=[4,5,4,5,6,7,6,7],f=[5,5,5,5,7,7,7,7],g=[2,3,4,5,6,7,6,7],v=[3,3,5,5,7,7,7,7],y=[1,1,3,3,5,5,7,7],b=[0,1,2,3,2,3,2,3],x={DISPLAY:p[0],TEXT:p[2],SCRIPT:p[4],SCRIPTSCRIPT:p[6]},w=[{name:"latin",blocks:[[256,591],[768,879]]},{name:"cyrillic",blocks:[[1024,1279]]},{name:"armenian",blocks:[[1328,1423]]},{name:"brahmic",blocks:[[2304,4255]]},{name:"georgian",blocks:[[4256,4351]]},{name:"cjk",blocks:[[12288,12543],[19968,40879],[65280,65376]]},{name:"hangul",blocks:[[44032,55215]]}];var k=[];function S(e){for(var t=0;t<k.length;t+=2)if(e>=k[t]&&e<=k[t+1])return!0;return!1}w.forEach((function(e){return e.blocks.forEach((function(e){return k.push.apply(k,e)}))}));var M=80,z={doubleleftarrow:"M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",doublerightarrow:"M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",leftarrow:"M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",leftbrace:"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",leftbraceunder:"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",leftgroup:"M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",leftgroupunder:"M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",leftharpoon:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",leftharpoonplus:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",leftharpoondown:"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",leftharpoondownplus:"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",lefthook:"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",leftlinesegment:"M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",leftmapsto:"M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",leftToFrom:"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",longequal:"M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",midbrace:"M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",midbraceunder:"M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",oiintSize1:"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",oiintSize2:"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z",oiiintSize1:"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",oiiintSize2:"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",rightarrow:"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",rightbrace:"M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",rightbraceunder:"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",rightgroup:"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",rightgroupunder:"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",rightharpoon:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",rightharpoonplus:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",rightharpoondown:"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",rightharpoondownplus:"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",righthook:"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",rightlinesegment:"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",rightToFrom:"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",twoheadleftarrow:"M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",twoheadrightarrow:"M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",tilde1:"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",tilde2:"M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",tilde3:"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",tilde4:"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",vec:"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",widehat1:"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",widehat2:"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat3:"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat4:"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widecheck1:"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",widecheck2:"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",widecheck3:"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",widecheck4:"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",baraboveleftarrow:"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",rightarrowabovebar:"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",baraboveshortleftharpoon:"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",rightharpoonaboveshortbar:"M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",shortbaraboveleftharpoon:"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",shortrightharpoonabovebar:"M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"},A=function(){function e(e){this.children=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.children=e,this.classes=[],this.height=0,this.depth=0,this.maxFontSize=0,this.style={}}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){for(var e=document.createDocumentFragment(),t=0;t<this.children.length;t++)e.appendChild(this.children[t].toNode());return e},t.toMarkup=function(){for(var e="",t=0;t<this.children.length;t++)e+=this.children[t].toMarkup();return e},t.toText=function(){var e=function(e){return e.toText()};return this.children.map(e).join("")},e}(),T={"AMS-Regular":{32:[0,0,0,0,.25],65:[0,.68889,0,0,.72222],66:[0,.68889,0,0,.66667],67:[0,.68889,0,0,.72222],68:[0,.68889,0,0,.72222],69:[0,.68889,0,0,.66667],70:[0,.68889,0,0,.61111],71:[0,.68889,0,0,.77778],72:[0,.68889,0,0,.77778],73:[0,.68889,0,0,.38889],74:[.16667,.68889,0,0,.5],75:[0,.68889,0,0,.77778],76:[0,.68889,0,0,.66667],77:[0,.68889,0,0,.94445],78:[0,.68889,0,0,.72222],79:[.16667,.68889,0,0,.77778],80:[0,.68889,0,0,.61111],81:[.16667,.68889,0,0,.77778],82:[0,.68889,0,0,.72222],83:[0,.68889,0,0,.55556],84:[0,.68889,0,0,.66667],85:[0,.68889,0,0,.72222],86:[0,.68889,0,0,.72222],87:[0,.68889,0,0,1],88:[0,.68889,0,0,.72222],89:[0,.68889,0,0,.72222],90:[0,.68889,0,0,.66667],107:[0,.68889,0,0,.55556],160:[0,0,0,0,.25],165:[0,.675,.025,0,.75],174:[.15559,.69224,0,0,.94666],240:[0,.68889,0,0,.55556],295:[0,.68889,0,0,.54028],710:[0,.825,0,0,2.33334],732:[0,.9,0,0,2.33334],770:[0,.825,0,0,2.33334],771:[0,.9,0,0,2.33334],989:[.08167,.58167,0,0,.77778],1008:[0,.43056,.04028,0,.66667],8245:[0,.54986,0,0,.275],8463:[0,.68889,0,0,.54028],8487:[0,.68889,0,0,.72222],8498:[0,.68889,0,0,.55556],8502:[0,.68889,0,0,.66667],8503:[0,.68889,0,0,.44445],8504:[0,.68889,0,0,.66667],8513:[0,.68889,0,0,.63889],8592:[-.03598,.46402,0,0,.5],8594:[-.03598,.46402,0,0,.5],8602:[-.13313,.36687,0,0,1],8603:[-.13313,.36687,0,0,1],8606:[.01354,.52239,0,0,1],8608:[.01354,.52239,0,0,1],8610:[.01354,.52239,0,0,1.11111],8611:[.01354,.52239,0,0,1.11111],8619:[0,.54986,0,0,1],8620:[0,.54986,0,0,1],8621:[-.13313,.37788,0,0,1.38889],8622:[-.13313,.36687,0,0,1],8624:[0,.69224,0,0,.5],8625:[0,.69224,0,0,.5],8630:[0,.43056,0,0,1],8631:[0,.43056,0,0,1],8634:[.08198,.58198,0,0,.77778],8635:[.08198,.58198,0,0,.77778],8638:[.19444,.69224,0,0,.41667],8639:[.19444,.69224,0,0,.41667],8642:[.19444,.69224,0,0,.41667],8643:[.19444,.69224,0,0,.41667],8644:[.1808,.675,0,0,1],8646:[.1808,.675,0,0,1],8647:[.1808,.675,0,0,1],8648:[.19444,.69224,0,0,.83334],8649:[.1808,.675,0,0,1],8650:[.19444,.69224,0,0,.83334],8651:[.01354,.52239,0,0,1],8652:[.01354,.52239,0,0,1],8653:[-.13313,.36687,0,0,1],8654:[-.13313,.36687,0,0,1],8655:[-.13313,.36687,0,0,1],8666:[.13667,.63667,0,0,1],8667:[.13667,.63667,0,0,1],8669:[-.13313,.37788,0,0,1],8672:[-.064,.437,0,0,1.334],8674:[-.064,.437,0,0,1.334],8705:[0,.825,0,0,.5],8708:[0,.68889,0,0,.55556],8709:[.08167,.58167,0,0,.77778],8717:[0,.43056,0,0,.42917],8722:[-.03598,.46402,0,0,.5],8724:[.08198,.69224,0,0,.77778],8726:[.08167,.58167,0,0,.77778],8733:[0,.69224,0,0,.77778],8736:[0,.69224,0,0,.72222],8737:[0,.69224,0,0,.72222],8738:[.03517,.52239,0,0,.72222],8739:[.08167,.58167,0,0,.22222],8740:[.25142,.74111,0,0,.27778],8741:[.08167,.58167,0,0,.38889],8742:[.25142,.74111,0,0,.5],8756:[0,.69224,0,0,.66667],8757:[0,.69224,0,0,.66667],8764:[-.13313,.36687,0,0,.77778],8765:[-.13313,.37788,0,0,.77778],8769:[-.13313,.36687,0,0,.77778],8770:[-.03625,.46375,0,0,.77778],8774:[.30274,.79383,0,0,.77778],8776:[-.01688,.48312,0,0,.77778],8778:[.08167,.58167,0,0,.77778],8782:[.06062,.54986,0,0,.77778],8783:[.06062,.54986,0,0,.77778],8785:[.08198,.58198,0,0,.77778],8786:[.08198,.58198,0,0,.77778],8787:[.08198,.58198,0,0,.77778],8790:[0,.69224,0,0,.77778],8791:[.22958,.72958,0,0,.77778],8796:[.08198,.91667,0,0,.77778],8806:[.25583,.75583,0,0,.77778],8807:[.25583,.75583,0,0,.77778],8808:[.25142,.75726,0,0,.77778],8809:[.25142,.75726,0,0,.77778],8812:[.25583,.75583,0,0,.5],8814:[.20576,.70576,0,0,.77778],8815:[.20576,.70576,0,0,.77778],8816:[.30274,.79383,0,0,.77778],8817:[.30274,.79383,0,0,.77778],8818:[.22958,.72958,0,0,.77778],8819:[.22958,.72958,0,0,.77778],8822:[.1808,.675,0,0,.77778],8823:[.1808,.675,0,0,.77778],8828:[.13667,.63667,0,0,.77778],8829:[.13667,.63667,0,0,.77778],8830:[.22958,.72958,0,0,.77778],8831:[.22958,.72958,0,0,.77778],8832:[.20576,.70576,0,0,.77778],8833:[.20576,.70576,0,0,.77778],8840:[.30274,.79383,0,0,.77778],8841:[.30274,.79383,0,0,.77778],8842:[.13597,.63597,0,0,.77778],8843:[.13597,.63597,0,0,.77778],8847:[.03517,.54986,0,0,.77778],8848:[.03517,.54986,0,0,.77778],8858:[.08198,.58198,0,0,.77778],8859:[.08198,.58198,0,0,.77778],8861:[.08198,.58198,0,0,.77778],8862:[0,.675,0,0,.77778],8863:[0,.675,0,0,.77778],8864:[0,.675,0,0,.77778],8865:[0,.675,0,0,.77778],8872:[0,.69224,0,0,.61111],8873:[0,.69224,0,0,.72222],8874:[0,.69224,0,0,.88889],8876:[0,.68889,0,0,.61111],8877:[0,.68889,0,0,.61111],8878:[0,.68889,0,0,.72222],8879:[0,.68889,0,0,.72222],8882:[.03517,.54986,0,0,.77778],8883:[.03517,.54986,0,0,.77778],8884:[.13667,.63667,0,0,.77778],8885:[.13667,.63667,0,0,.77778],8888:[0,.54986,0,0,1.11111],8890:[.19444,.43056,0,0,.55556],8891:[.19444,.69224,0,0,.61111],8892:[.19444,.69224,0,0,.61111],8901:[0,.54986,0,0,.27778],8903:[.08167,.58167,0,0,.77778],8905:[.08167,.58167,0,0,.77778],8906:[.08167,.58167,0,0,.77778],8907:[0,.69224,0,0,.77778],8908:[0,.69224,0,0,.77778],8909:[-.03598,.46402,0,0,.77778],8910:[0,.54986,0,0,.76042],8911:[0,.54986,0,0,.76042],8912:[.03517,.54986,0,0,.77778],8913:[.03517,.54986,0,0,.77778],8914:[0,.54986,0,0,.66667],8915:[0,.54986,0,0,.66667],8916:[0,.69224,0,0,.66667],8918:[.0391,.5391,0,0,.77778],8919:[.0391,.5391,0,0,.77778],8920:[.03517,.54986,0,0,1.33334],8921:[.03517,.54986,0,0,1.33334],8922:[.38569,.88569,0,0,.77778],8923:[.38569,.88569,0,0,.77778],8926:[.13667,.63667,0,0,.77778],8927:[.13667,.63667,0,0,.77778],8928:[.30274,.79383,0,0,.77778],8929:[.30274,.79383,0,0,.77778],8934:[.23222,.74111,0,0,.77778],8935:[.23222,.74111,0,0,.77778],8936:[.23222,.74111,0,0,.77778],8937:[.23222,.74111,0,0,.77778],8938:[.20576,.70576,0,0,.77778],8939:[.20576,.70576,0,0,.77778],8940:[.30274,.79383,0,0,.77778],8941:[.30274,.79383,0,0,.77778],8994:[.19444,.69224,0,0,.77778],8995:[.19444,.69224,0,0,.77778],9416:[.15559,.69224,0,0,.90222],9484:[0,.69224,0,0,.5],9488:[0,.69224,0,0,.5],9492:[0,.37788,0,0,.5],9496:[0,.37788,0,0,.5],9585:[.19444,.68889,0,0,.88889],9586:[.19444,.74111,0,0,.88889],9632:[0,.675,0,0,.77778],9633:[0,.675,0,0,.77778],9650:[0,.54986,0,0,.72222],9651:[0,.54986,0,0,.72222],9654:[.03517,.54986,0,0,.77778],9660:[0,.54986,0,0,.72222],9661:[0,.54986,0,0,.72222],9664:[.03517,.54986,0,0,.77778],9674:[.11111,.69224,0,0,.66667],9733:[.19444,.69224,0,0,.94445],10003:[0,.69224,0,0,.83334],10016:[0,.69224,0,0,.83334],10731:[.11111,.69224,0,0,.66667],10846:[.19444,.75583,0,0,.61111],10877:[.13667,.63667,0,0,.77778],10878:[.13667,.63667,0,0,.77778],10885:[.25583,.75583,0,0,.77778],10886:[.25583,.75583,0,0,.77778],10887:[.13597,.63597,0,0,.77778],10888:[.13597,.63597,0,0,.77778],10889:[.26167,.75726,0,0,.77778],10890:[.26167,.75726,0,0,.77778],10891:[.48256,.98256,0,0,.77778],10892:[.48256,.98256,0,0,.77778],10901:[.13667,.63667,0,0,.77778],10902:[.13667,.63667,0,0,.77778],10933:[.25142,.75726,0,0,.77778],10934:[.25142,.75726,0,0,.77778],10935:[.26167,.75726,0,0,.77778],10936:[.26167,.75726,0,0,.77778],10937:[.26167,.75726,0,0,.77778],10938:[.26167,.75726,0,0,.77778],10949:[.25583,.75583,0,0,.77778],10950:[.25583,.75583,0,0,.77778],10955:[.28481,.79383,0,0,.77778],10956:[.28481,.79383,0,0,.77778],57350:[.08167,.58167,0,0,.22222],57351:[.08167,.58167,0,0,.38889],57352:[.08167,.58167,0,0,.77778],57353:[0,.43056,.04028,0,.66667],57356:[.25142,.75726,0,0,.77778],57357:[.25142,.75726,0,0,.77778],57358:[.41951,.91951,0,0,.77778],57359:[.30274,.79383,0,0,.77778],57360:[.30274,.79383,0,0,.77778],57361:[.41951,.91951,0,0,.77778],57366:[.25142,.75726,0,0,.77778],57367:[.25142,.75726,0,0,.77778],57368:[.25142,.75726,0,0,.77778],57369:[.25142,.75726,0,0,.77778],57370:[.13597,.63597,0,0,.77778],57371:[.13597,.63597,0,0,.77778]},"Caligraphic-Regular":{32:[0,0,0,0,.25],65:[0,.68333,0,.19445,.79847],66:[0,.68333,.03041,.13889,.65681],67:[0,.68333,.05834,.13889,.52653],68:[0,.68333,.02778,.08334,.77139],69:[0,.68333,.08944,.11111,.52778],70:[0,.68333,.09931,.11111,.71875],71:[.09722,.68333,.0593,.11111,.59487],72:[0,.68333,.00965,.11111,.84452],73:[0,.68333,.07382,0,.54452],74:[.09722,.68333,.18472,.16667,.67778],75:[0,.68333,.01445,.05556,.76195],76:[0,.68333,0,.13889,.68972],77:[0,.68333,0,.13889,1.2009],78:[0,.68333,.14736,.08334,.82049],79:[0,.68333,.02778,.11111,.79611],80:[0,.68333,.08222,.08334,.69556],81:[.09722,.68333,0,.11111,.81667],82:[0,.68333,0,.08334,.8475],83:[0,.68333,.075,.13889,.60556],84:[0,.68333,.25417,0,.54464],85:[0,.68333,.09931,.08334,.62583],86:[0,.68333,.08222,0,.61278],87:[0,.68333,.08222,.08334,.98778],88:[0,.68333,.14643,.13889,.7133],89:[.09722,.68333,.08222,.08334,.66834],90:[0,.68333,.07944,.13889,.72473],160:[0,0,0,0,.25]},"Fraktur-Regular":{32:[0,0,0,0,.25],33:[0,.69141,0,0,.29574],34:[0,.69141,0,0,.21471],38:[0,.69141,0,0,.73786],39:[0,.69141,0,0,.21201],40:[.24982,.74947,0,0,.38865],41:[.24982,.74947,0,0,.38865],42:[0,.62119,0,0,.27764],43:[.08319,.58283,0,0,.75623],44:[0,.10803,0,0,.27764],45:[.08319,.58283,0,0,.75623],46:[0,.10803,0,0,.27764],47:[.24982,.74947,0,0,.50181],48:[0,.47534,0,0,.50181],49:[0,.47534,0,0,.50181],50:[0,.47534,0,0,.50181],51:[.18906,.47534,0,0,.50181],52:[.18906,.47534,0,0,.50181],53:[.18906,.47534,0,0,.50181],54:[0,.69141,0,0,.50181],55:[.18906,.47534,0,0,.50181],56:[0,.69141,0,0,.50181],57:[.18906,.47534,0,0,.50181],58:[0,.47534,0,0,.21606],59:[.12604,.47534,0,0,.21606],61:[-.13099,.36866,0,0,.75623],63:[0,.69141,0,0,.36245],65:[0,.69141,0,0,.7176],66:[0,.69141,0,0,.88397],67:[0,.69141,0,0,.61254],68:[0,.69141,0,0,.83158],69:[0,.69141,0,0,.66278],70:[.12604,.69141,0,0,.61119],71:[0,.69141,0,0,.78539],72:[.06302,.69141,0,0,.7203],73:[0,.69141,0,0,.55448],74:[.12604,.69141,0,0,.55231],75:[0,.69141,0,0,.66845],76:[0,.69141,0,0,.66602],77:[0,.69141,0,0,1.04953],78:[0,.69141,0,0,.83212],79:[0,.69141,0,0,.82699],80:[.18906,.69141,0,0,.82753],81:[.03781,.69141,0,0,.82699],82:[0,.69141,0,0,.82807],83:[0,.69141,0,0,.82861],84:[0,.69141,0,0,.66899],85:[0,.69141,0,0,.64576],86:[0,.69141,0,0,.83131],87:[0,.69141,0,0,1.04602],88:[0,.69141,0,0,.71922],89:[.18906,.69141,0,0,.83293],90:[.12604,.69141,0,0,.60201],91:[.24982,.74947,0,0,.27764],93:[.24982,.74947,0,0,.27764],94:[0,.69141,0,0,.49965],97:[0,.47534,0,0,.50046],98:[0,.69141,0,0,.51315],99:[0,.47534,0,0,.38946],100:[0,.62119,0,0,.49857],101:[0,.47534,0,0,.40053],102:[.18906,.69141,0,0,.32626],103:[.18906,.47534,0,0,.5037],104:[.18906,.69141,0,0,.52126],105:[0,.69141,0,0,.27899],106:[0,.69141,0,0,.28088],107:[0,.69141,0,0,.38946],108:[0,.69141,0,0,.27953],109:[0,.47534,0,0,.76676],110:[0,.47534,0,0,.52666],111:[0,.47534,0,0,.48885],112:[.18906,.52396,0,0,.50046],113:[.18906,.47534,0,0,.48912],114:[0,.47534,0,0,.38919],115:[0,.47534,0,0,.44266],116:[0,.62119,0,0,.33301],117:[0,.47534,0,0,.5172],118:[0,.52396,0,0,.5118],119:[0,.52396,0,0,.77351],120:[.18906,.47534,0,0,.38865],121:[.18906,.47534,0,0,.49884],122:[.18906,.47534,0,0,.39054],160:[0,0,0,0,.25],8216:[0,.69141,0,0,.21471],8217:[0,.69141,0,0,.21471],58112:[0,.62119,0,0,.49749],58113:[0,.62119,0,0,.4983],58114:[.18906,.69141,0,0,.33328],58115:[.18906,.69141,0,0,.32923],58116:[.18906,.47534,0,0,.50343],58117:[0,.69141,0,0,.33301],58118:[0,.62119,0,0,.33409],58119:[0,.47534,0,0,.50073]},"Main-Bold":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.35],34:[0,.69444,0,0,.60278],35:[.19444,.69444,0,0,.95833],36:[.05556,.75,0,0,.575],37:[.05556,.75,0,0,.95833],38:[0,.69444,0,0,.89444],39:[0,.69444,0,0,.31944],40:[.25,.75,0,0,.44722],41:[.25,.75,0,0,.44722],42:[0,.75,0,0,.575],43:[.13333,.63333,0,0,.89444],44:[.19444,.15556,0,0,.31944],45:[0,.44444,0,0,.38333],46:[0,.15556,0,0,.31944],47:[.25,.75,0,0,.575],48:[0,.64444,0,0,.575],49:[0,.64444,0,0,.575],50:[0,.64444,0,0,.575],51:[0,.64444,0,0,.575],52:[0,.64444,0,0,.575],53:[0,.64444,0,0,.575],54:[0,.64444,0,0,.575],55:[0,.64444,0,0,.575],56:[0,.64444,0,0,.575],57:[0,.64444,0,0,.575],58:[0,.44444,0,0,.31944],59:[.19444,.44444,0,0,.31944],60:[.08556,.58556,0,0,.89444],61:[-.10889,.39111,0,0,.89444],62:[.08556,.58556,0,0,.89444],63:[0,.69444,0,0,.54305],64:[0,.69444,0,0,.89444],65:[0,.68611,0,0,.86944],66:[0,.68611,0,0,.81805],67:[0,.68611,0,0,.83055],68:[0,.68611,0,0,.88194],69:[0,.68611,0,0,.75555],70:[0,.68611,0,0,.72361],71:[0,.68611,0,0,.90416],72:[0,.68611,0,0,.9],73:[0,.68611,0,0,.43611],74:[0,.68611,0,0,.59444],75:[0,.68611,0,0,.90138],76:[0,.68611,0,0,.69166],77:[0,.68611,0,0,1.09166],78:[0,.68611,0,0,.9],79:[0,.68611,0,0,.86388],80:[0,.68611,0,0,.78611],81:[.19444,.68611,0,0,.86388],82:[0,.68611,0,0,.8625],83:[0,.68611,0,0,.63889],84:[0,.68611,0,0,.8],85:[0,.68611,0,0,.88472],86:[0,.68611,.01597,0,.86944],87:[0,.68611,.01597,0,1.18888],88:[0,.68611,0,0,.86944],89:[0,.68611,.02875,0,.86944],90:[0,.68611,0,0,.70277],91:[.25,.75,0,0,.31944],92:[.25,.75,0,0,.575],93:[.25,.75,0,0,.31944],94:[0,.69444,0,0,.575],95:[.31,.13444,.03194,0,.575],97:[0,.44444,0,0,.55902],98:[0,.69444,0,0,.63889],99:[0,.44444,0,0,.51111],100:[0,.69444,0,0,.63889],101:[0,.44444,0,0,.52708],102:[0,.69444,.10903,0,.35139],103:[.19444,.44444,.01597,0,.575],104:[0,.69444,0,0,.63889],105:[0,.69444,0,0,.31944],106:[.19444,.69444,0,0,.35139],107:[0,.69444,0,0,.60694],108:[0,.69444,0,0,.31944],109:[0,.44444,0,0,.95833],110:[0,.44444,0,0,.63889],111:[0,.44444,0,0,.575],112:[.19444,.44444,0,0,.63889],113:[.19444,.44444,0,0,.60694],114:[0,.44444,0,0,.47361],115:[0,.44444,0,0,.45361],116:[0,.63492,0,0,.44722],117:[0,.44444,0,0,.63889],118:[0,.44444,.01597,0,.60694],119:[0,.44444,.01597,0,.83055],120:[0,.44444,0,0,.60694],121:[.19444,.44444,.01597,0,.60694],122:[0,.44444,0,0,.51111],123:[.25,.75,0,0,.575],124:[.25,.75,0,0,.31944],125:[.25,.75,0,0,.575],126:[.35,.34444,0,0,.575],160:[0,0,0,0,.25],163:[0,.69444,0,0,.86853],168:[0,.69444,0,0,.575],172:[0,.44444,0,0,.76666],176:[0,.69444,0,0,.86944],177:[.13333,.63333,0,0,.89444],184:[.17014,0,0,0,.51111],198:[0,.68611,0,0,1.04166],215:[.13333,.63333,0,0,.89444],216:[.04861,.73472,0,0,.89444],223:[0,.69444,0,0,.59722],230:[0,.44444,0,0,.83055],247:[.13333,.63333,0,0,.89444],248:[.09722,.54167,0,0,.575],305:[0,.44444,0,0,.31944],338:[0,.68611,0,0,1.16944],339:[0,.44444,0,0,.89444],567:[.19444,.44444,0,0,.35139],710:[0,.69444,0,0,.575],711:[0,.63194,0,0,.575],713:[0,.59611,0,0,.575],714:[0,.69444,0,0,.575],715:[0,.69444,0,0,.575],728:[0,.69444,0,0,.575],729:[0,.69444,0,0,.31944],730:[0,.69444,0,0,.86944],732:[0,.69444,0,0,.575],733:[0,.69444,0,0,.575],915:[0,.68611,0,0,.69166],916:[0,.68611,0,0,.95833],920:[0,.68611,0,0,.89444],923:[0,.68611,0,0,.80555],926:[0,.68611,0,0,.76666],928:[0,.68611,0,0,.9],931:[0,.68611,0,0,.83055],933:[0,.68611,0,0,.89444],934:[0,.68611,0,0,.83055],936:[0,.68611,0,0,.89444],937:[0,.68611,0,0,.83055],8211:[0,.44444,.03194,0,.575],8212:[0,.44444,.03194,0,1.14999],8216:[0,.69444,0,0,.31944],8217:[0,.69444,0,0,.31944],8220:[0,.69444,0,0,.60278],8221:[0,.69444,0,0,.60278],8224:[.19444,.69444,0,0,.51111],8225:[.19444,.69444,0,0,.51111],8242:[0,.55556,0,0,.34444],8407:[0,.72444,.15486,0,.575],8463:[0,.69444,0,0,.66759],8465:[0,.69444,0,0,.83055],8467:[0,.69444,0,0,.47361],8472:[.19444,.44444,0,0,.74027],8476:[0,.69444,0,0,.83055],8501:[0,.69444,0,0,.70277],8592:[-.10889,.39111,0,0,1.14999],8593:[.19444,.69444,0,0,.575],8594:[-.10889,.39111,0,0,1.14999],8595:[.19444,.69444,0,0,.575],8596:[-.10889,.39111,0,0,1.14999],8597:[.25,.75,0,0,.575],8598:[.19444,.69444,0,0,1.14999],8599:[.19444,.69444,0,0,1.14999],8600:[.19444,.69444,0,0,1.14999],8601:[.19444,.69444,0,0,1.14999],8636:[-.10889,.39111,0,0,1.14999],8637:[-.10889,.39111,0,0,1.14999],8640:[-.10889,.39111,0,0,1.14999],8641:[-.10889,.39111,0,0,1.14999],8656:[-.10889,.39111,0,0,1.14999],8657:[.19444,.69444,0,0,.70277],8658:[-.10889,.39111,0,0,1.14999],8659:[.19444,.69444,0,0,.70277],8660:[-.10889,.39111,0,0,1.14999],8661:[.25,.75,0,0,.70277],8704:[0,.69444,0,0,.63889],8706:[0,.69444,.06389,0,.62847],8707:[0,.69444,0,0,.63889],8709:[.05556,.75,0,0,.575],8711:[0,.68611,0,0,.95833],8712:[.08556,.58556,0,0,.76666],8715:[.08556,.58556,0,0,.76666],8722:[.13333,.63333,0,0,.89444],8723:[.13333,.63333,0,0,.89444],8725:[.25,.75,0,0,.575],8726:[.25,.75,0,0,.575],8727:[-.02778,.47222,0,0,.575],8728:[-.02639,.47361,0,0,.575],8729:[-.02639,.47361,0,0,.575],8730:[.18,.82,0,0,.95833],8733:[0,.44444,0,0,.89444],8734:[0,.44444,0,0,1.14999],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.31944],8741:[.25,.75,0,0,.575],8743:[0,.55556,0,0,.76666],8744:[0,.55556,0,0,.76666],8745:[0,.55556,0,0,.76666],8746:[0,.55556,0,0,.76666],8747:[.19444,.69444,.12778,0,.56875],8764:[-.10889,.39111,0,0,.89444],8768:[.19444,.69444,0,0,.31944],8771:[.00222,.50222,0,0,.89444],8773:[.027,.638,0,0,.894],8776:[.02444,.52444,0,0,.89444],8781:[.00222,.50222,0,0,.89444],8801:[.00222,.50222,0,0,.89444],8804:[.19667,.69667,0,0,.89444],8805:[.19667,.69667,0,0,.89444],8810:[.08556,.58556,0,0,1.14999],8811:[.08556,.58556,0,0,1.14999],8826:[.08556,.58556,0,0,.89444],8827:[.08556,.58556,0,0,.89444],8834:[.08556,.58556,0,0,.89444],8835:[.08556,.58556,0,0,.89444],8838:[.19667,.69667,0,0,.89444],8839:[.19667,.69667,0,0,.89444],8846:[0,.55556,0,0,.76666],8849:[.19667,.69667,0,0,.89444],8850:[.19667,.69667,0,0,.89444],8851:[0,.55556,0,0,.76666],8852:[0,.55556,0,0,.76666],8853:[.13333,.63333,0,0,.89444],8854:[.13333,.63333,0,0,.89444],8855:[.13333,.63333,0,0,.89444],8856:[.13333,.63333,0,0,.89444],8857:[.13333,.63333,0,0,.89444],8866:[0,.69444,0,0,.70277],8867:[0,.69444,0,0,.70277],8868:[0,.69444,0,0,.89444],8869:[0,.69444,0,0,.89444],8900:[-.02639,.47361,0,0,.575],8901:[-.02639,.47361,0,0,.31944],8902:[-.02778,.47222,0,0,.575],8968:[.25,.75,0,0,.51111],8969:[.25,.75,0,0,.51111],8970:[.25,.75,0,0,.51111],8971:[.25,.75,0,0,.51111],8994:[-.13889,.36111,0,0,1.14999],8995:[-.13889,.36111,0,0,1.14999],9651:[.19444,.69444,0,0,1.02222],9657:[-.02778,.47222,0,0,.575],9661:[.19444,.69444,0,0,1.02222],9667:[-.02778,.47222,0,0,.575],9711:[.19444,.69444,0,0,1.14999],9824:[.12963,.69444,0,0,.89444],9825:[.12963,.69444,0,0,.89444],9826:[.12963,.69444,0,0,.89444],9827:[.12963,.69444,0,0,.89444],9837:[0,.75,0,0,.44722],9838:[.19444,.69444,0,0,.44722],9839:[.19444,.69444,0,0,.44722],10216:[.25,.75,0,0,.44722],10217:[.25,.75,0,0,.44722],10815:[0,.68611,0,0,.9],10927:[.19667,.69667,0,0,.89444],10928:[.19667,.69667,0,0,.89444],57376:[.19444,.69444,0,0,0]},"Main-BoldItalic":{32:[0,0,0,0,.25],33:[0,.69444,.11417,0,.38611],34:[0,.69444,.07939,0,.62055],35:[.19444,.69444,.06833,0,.94444],37:[.05556,.75,.12861,0,.94444],38:[0,.69444,.08528,0,.88555],39:[0,.69444,.12945,0,.35555],40:[.25,.75,.15806,0,.47333],41:[.25,.75,.03306,0,.47333],42:[0,.75,.14333,0,.59111],43:[.10333,.60333,.03306,0,.88555],44:[.19444,.14722,0,0,.35555],45:[0,.44444,.02611,0,.41444],46:[0,.14722,0,0,.35555],47:[.25,.75,.15806,0,.59111],48:[0,.64444,.13167,0,.59111],49:[0,.64444,.13167,0,.59111],50:[0,.64444,.13167,0,.59111],51:[0,.64444,.13167,0,.59111],52:[.19444,.64444,.13167,0,.59111],53:[0,.64444,.13167,0,.59111],54:[0,.64444,.13167,0,.59111],55:[.19444,.64444,.13167,0,.59111],56:[0,.64444,.13167,0,.59111],57:[0,.64444,.13167,0,.59111],58:[0,.44444,.06695,0,.35555],59:[.19444,.44444,.06695,0,.35555],61:[-.10889,.39111,.06833,0,.88555],63:[0,.69444,.11472,0,.59111],64:[0,.69444,.09208,0,.88555],65:[0,.68611,0,0,.86555],66:[0,.68611,.0992,0,.81666],67:[0,.68611,.14208,0,.82666],68:[0,.68611,.09062,0,.87555],69:[0,.68611,.11431,0,.75666],70:[0,.68611,.12903,0,.72722],71:[0,.68611,.07347,0,.89527],72:[0,.68611,.17208,0,.8961],73:[0,.68611,.15681,0,.47166],74:[0,.68611,.145,0,.61055],75:[0,.68611,.14208,0,.89499],76:[0,.68611,0,0,.69777],77:[0,.68611,.17208,0,1.07277],78:[0,.68611,.17208,0,.8961],79:[0,.68611,.09062,0,.85499],80:[0,.68611,.0992,0,.78721],81:[.19444,.68611,.09062,0,.85499],82:[0,.68611,.02559,0,.85944],83:[0,.68611,.11264,0,.64999],84:[0,.68611,.12903,0,.7961],85:[0,.68611,.17208,0,.88083],86:[0,.68611,.18625,0,.86555],87:[0,.68611,.18625,0,1.15999],88:[0,.68611,.15681,0,.86555],89:[0,.68611,.19803,0,.86555],90:[0,.68611,.14208,0,.70888],91:[.25,.75,.1875,0,.35611],93:[.25,.75,.09972,0,.35611],94:[0,.69444,.06709,0,.59111],95:[.31,.13444,.09811,0,.59111],97:[0,.44444,.09426,0,.59111],98:[0,.69444,.07861,0,.53222],99:[0,.44444,.05222,0,.53222],100:[0,.69444,.10861,0,.59111],101:[0,.44444,.085,0,.53222],102:[.19444,.69444,.21778,0,.4],103:[.19444,.44444,.105,0,.53222],104:[0,.69444,.09426,0,.59111],105:[0,.69326,.11387,0,.35555],106:[.19444,.69326,.1672,0,.35555],107:[0,.69444,.11111,0,.53222],108:[0,.69444,.10861,0,.29666],109:[0,.44444,.09426,0,.94444],110:[0,.44444,.09426,0,.64999],111:[0,.44444,.07861,0,.59111],112:[.19444,.44444,.07861,0,.59111],113:[.19444,.44444,.105,0,.53222],114:[0,.44444,.11111,0,.50167],115:[0,.44444,.08167,0,.48694],116:[0,.63492,.09639,0,.385],117:[0,.44444,.09426,0,.62055],118:[0,.44444,.11111,0,.53222],119:[0,.44444,.11111,0,.76777],120:[0,.44444,.12583,0,.56055],121:[.19444,.44444,.105,0,.56166],122:[0,.44444,.13889,0,.49055],126:[.35,.34444,.11472,0,.59111],160:[0,0,0,0,.25],168:[0,.69444,.11473,0,.59111],176:[0,.69444,0,0,.94888],184:[.17014,0,0,0,.53222],198:[0,.68611,.11431,0,1.02277],216:[.04861,.73472,.09062,0,.88555],223:[.19444,.69444,.09736,0,.665],230:[0,.44444,.085,0,.82666],248:[.09722,.54167,.09458,0,.59111],305:[0,.44444,.09426,0,.35555],338:[0,.68611,.11431,0,1.14054],339:[0,.44444,.085,0,.82666],567:[.19444,.44444,.04611,0,.385],710:[0,.69444,.06709,0,.59111],711:[0,.63194,.08271,0,.59111],713:[0,.59444,.10444,0,.59111],714:[0,.69444,.08528,0,.59111],715:[0,.69444,0,0,.59111],728:[0,.69444,.10333,0,.59111],729:[0,.69444,.12945,0,.35555],730:[0,.69444,0,0,.94888],732:[0,.69444,.11472,0,.59111],733:[0,.69444,.11472,0,.59111],915:[0,.68611,.12903,0,.69777],916:[0,.68611,0,0,.94444],920:[0,.68611,.09062,0,.88555],923:[0,.68611,0,0,.80666],926:[0,.68611,.15092,0,.76777],928:[0,.68611,.17208,0,.8961],931:[0,.68611,.11431,0,.82666],933:[0,.68611,.10778,0,.88555],934:[0,.68611,.05632,0,.82666],936:[0,.68611,.10778,0,.88555],937:[0,.68611,.0992,0,.82666],8211:[0,.44444,.09811,0,.59111],8212:[0,.44444,.09811,0,1.18221],8216:[0,.69444,.12945,0,.35555],8217:[0,.69444,.12945,0,.35555],8220:[0,.69444,.16772,0,.62055],8221:[0,.69444,.07939,0,.62055]},"Main-Italic":{32:[0,0,0,0,.25],33:[0,.69444,.12417,0,.30667],34:[0,.69444,.06961,0,.51444],35:[.19444,.69444,.06616,0,.81777],37:[.05556,.75,.13639,0,.81777],38:[0,.69444,.09694,0,.76666],39:[0,.69444,.12417,0,.30667],40:[.25,.75,.16194,0,.40889],41:[.25,.75,.03694,0,.40889],42:[0,.75,.14917,0,.51111],43:[.05667,.56167,.03694,0,.76666],44:[.19444,.10556,0,0,.30667],45:[0,.43056,.02826,0,.35778],46:[0,.10556,0,0,.30667],47:[.25,.75,.16194,0,.51111],48:[0,.64444,.13556,0,.51111],49:[0,.64444,.13556,0,.51111],50:[0,.64444,.13556,0,.51111],51:[0,.64444,.13556,0,.51111],52:[.19444,.64444,.13556,0,.51111],53:[0,.64444,.13556,0,.51111],54:[0,.64444,.13556,0,.51111],55:[.19444,.64444,.13556,0,.51111],56:[0,.64444,.13556,0,.51111],57:[0,.64444,.13556,0,.51111],58:[0,.43056,.0582,0,.30667],59:[.19444,.43056,.0582,0,.30667],61:[-.13313,.36687,.06616,0,.76666],63:[0,.69444,.1225,0,.51111],64:[0,.69444,.09597,0,.76666],65:[0,.68333,0,0,.74333],66:[0,.68333,.10257,0,.70389],67:[0,.68333,.14528,0,.71555],68:[0,.68333,.09403,0,.755],69:[0,.68333,.12028,0,.67833],70:[0,.68333,.13305,0,.65277],71:[0,.68333,.08722,0,.77361],72:[0,.68333,.16389,0,.74333],73:[0,.68333,.15806,0,.38555],74:[0,.68333,.14028,0,.525],75:[0,.68333,.14528,0,.76888],76:[0,.68333,0,0,.62722],77:[0,.68333,.16389,0,.89666],78:[0,.68333,.16389,0,.74333],79:[0,.68333,.09403,0,.76666],80:[0,.68333,.10257,0,.67833],81:[.19444,.68333,.09403,0,.76666],82:[0,.68333,.03868,0,.72944],83:[0,.68333,.11972,0,.56222],84:[0,.68333,.13305,0,.71555],85:[0,.68333,.16389,0,.74333],86:[0,.68333,.18361,0,.74333],87:[0,.68333,.18361,0,.99888],88:[0,.68333,.15806,0,.74333],89:[0,.68333,.19383,0,.74333],90:[0,.68333,.14528,0,.61333],91:[.25,.75,.1875,0,.30667],93:[.25,.75,.10528,0,.30667],94:[0,.69444,.06646,0,.51111],95:[.31,.12056,.09208,0,.51111],97:[0,.43056,.07671,0,.51111],98:[0,.69444,.06312,0,.46],99:[0,.43056,.05653,0,.46],100:[0,.69444,.10333,0,.51111],101:[0,.43056,.07514,0,.46],102:[.19444,.69444,.21194,0,.30667],103:[.19444,.43056,.08847,0,.46],104:[0,.69444,.07671,0,.51111],105:[0,.65536,.1019,0,.30667],106:[.19444,.65536,.14467,0,.30667],107:[0,.69444,.10764,0,.46],108:[0,.69444,.10333,0,.25555],109:[0,.43056,.07671,0,.81777],110:[0,.43056,.07671,0,.56222],111:[0,.43056,.06312,0,.51111],112:[.19444,.43056,.06312,0,.51111],113:[.19444,.43056,.08847,0,.46],114:[0,.43056,.10764,0,.42166],115:[0,.43056,.08208,0,.40889],116:[0,.61508,.09486,0,.33222],117:[0,.43056,.07671,0,.53666],118:[0,.43056,.10764,0,.46],119:[0,.43056,.10764,0,.66444],120:[0,.43056,.12042,0,.46389],121:[.19444,.43056,.08847,0,.48555],122:[0,.43056,.12292,0,.40889],126:[.35,.31786,.11585,0,.51111],160:[0,0,0,0,.25],168:[0,.66786,.10474,0,.51111],176:[0,.69444,0,0,.83129],184:[.17014,0,0,0,.46],198:[0,.68333,.12028,0,.88277],216:[.04861,.73194,.09403,0,.76666],223:[.19444,.69444,.10514,0,.53666],230:[0,.43056,.07514,0,.71555],248:[.09722,.52778,.09194,0,.51111],338:[0,.68333,.12028,0,.98499],339:[0,.43056,.07514,0,.71555],710:[0,.69444,.06646,0,.51111],711:[0,.62847,.08295,0,.51111],713:[0,.56167,.10333,0,.51111],714:[0,.69444,.09694,0,.51111],715:[0,.69444,0,0,.51111],728:[0,.69444,.10806,0,.51111],729:[0,.66786,.11752,0,.30667],730:[0,.69444,0,0,.83129],732:[0,.66786,.11585,0,.51111],733:[0,.69444,.1225,0,.51111],915:[0,.68333,.13305,0,.62722],916:[0,.68333,0,0,.81777],920:[0,.68333,.09403,0,.76666],923:[0,.68333,0,0,.69222],926:[0,.68333,.15294,0,.66444],928:[0,.68333,.16389,0,.74333],931:[0,.68333,.12028,0,.71555],933:[0,.68333,.11111,0,.76666],934:[0,.68333,.05986,0,.71555],936:[0,.68333,.11111,0,.76666],937:[0,.68333,.10257,0,.71555],8211:[0,.43056,.09208,0,.51111],8212:[0,.43056,.09208,0,1.02222],8216:[0,.69444,.12417,0,.30667],8217:[0,.69444,.12417,0,.30667],8220:[0,.69444,.1685,0,.51444],8221:[0,.69444,.06961,0,.51444],8463:[0,.68889,0,0,.54028]},"Main-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.27778],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.77778],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.19444,.10556,0,0,.27778],45:[0,.43056,0,0,.33333],46:[0,.10556,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.64444,0,0,.5],49:[0,.64444,0,0,.5],50:[0,.64444,0,0,.5],51:[0,.64444,0,0,.5],52:[0,.64444,0,0,.5],53:[0,.64444,0,0,.5],54:[0,.64444,0,0,.5],55:[0,.64444,0,0,.5],56:[0,.64444,0,0,.5],57:[0,.64444,0,0,.5],58:[0,.43056,0,0,.27778],59:[.19444,.43056,0,0,.27778],60:[.0391,.5391,0,0,.77778],61:[-.13313,.36687,0,0,.77778],62:[.0391,.5391,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.77778],65:[0,.68333,0,0,.75],66:[0,.68333,0,0,.70834],67:[0,.68333,0,0,.72222],68:[0,.68333,0,0,.76389],69:[0,.68333,0,0,.68056],70:[0,.68333,0,0,.65278],71:[0,.68333,0,0,.78472],72:[0,.68333,0,0,.75],73:[0,.68333,0,0,.36111],74:[0,.68333,0,0,.51389],75:[0,.68333,0,0,.77778],76:[0,.68333,0,0,.625],77:[0,.68333,0,0,.91667],78:[0,.68333,0,0,.75],79:[0,.68333,0,0,.77778],80:[0,.68333,0,0,.68056],81:[.19444,.68333,0,0,.77778],82:[0,.68333,0,0,.73611],83:[0,.68333,0,0,.55556],84:[0,.68333,0,0,.72222],85:[0,.68333,0,0,.75],86:[0,.68333,.01389,0,.75],87:[0,.68333,.01389,0,1.02778],88:[0,.68333,0,0,.75],89:[0,.68333,.025,0,.75],90:[0,.68333,0,0,.61111],91:[.25,.75,0,0,.27778],92:[.25,.75,0,0,.5],93:[.25,.75,0,0,.27778],94:[0,.69444,0,0,.5],95:[.31,.12056,.02778,0,.5],97:[0,.43056,0,0,.5],98:[0,.69444,0,0,.55556],99:[0,.43056,0,0,.44445],100:[0,.69444,0,0,.55556],101:[0,.43056,0,0,.44445],102:[0,.69444,.07778,0,.30556],103:[.19444,.43056,.01389,0,.5],104:[0,.69444,0,0,.55556],105:[0,.66786,0,0,.27778],106:[.19444,.66786,0,0,.30556],107:[0,.69444,0,0,.52778],108:[0,.69444,0,0,.27778],109:[0,.43056,0,0,.83334],110:[0,.43056,0,0,.55556],111:[0,.43056,0,0,.5],112:[.19444,.43056,0,0,.55556],113:[.19444,.43056,0,0,.52778],114:[0,.43056,0,0,.39167],115:[0,.43056,0,0,.39445],116:[0,.61508,0,0,.38889],117:[0,.43056,0,0,.55556],118:[0,.43056,.01389,0,.52778],119:[0,.43056,.01389,0,.72222],120:[0,.43056,0,0,.52778],121:[.19444,.43056,.01389,0,.52778],122:[0,.43056,0,0,.44445],123:[.25,.75,0,0,.5],124:[.25,.75,0,0,.27778],125:[.25,.75,0,0,.5],126:[.35,.31786,0,0,.5],160:[0,0,0,0,.25],163:[0,.69444,0,0,.76909],167:[.19444,.69444,0,0,.44445],168:[0,.66786,0,0,.5],172:[0,.43056,0,0,.66667],176:[0,.69444,0,0,.75],177:[.08333,.58333,0,0,.77778],182:[.19444,.69444,0,0,.61111],184:[.17014,0,0,0,.44445],198:[0,.68333,0,0,.90278],215:[.08333,.58333,0,0,.77778],216:[.04861,.73194,0,0,.77778],223:[0,.69444,0,0,.5],230:[0,.43056,0,0,.72222],247:[.08333,.58333,0,0,.77778],248:[.09722,.52778,0,0,.5],305:[0,.43056,0,0,.27778],338:[0,.68333,0,0,1.01389],339:[0,.43056,0,0,.77778],567:[.19444,.43056,0,0,.30556],710:[0,.69444,0,0,.5],711:[0,.62847,0,0,.5],713:[0,.56778,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.66786,0,0,.27778],730:[0,.69444,0,0,.75],732:[0,.66786,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.68333,0,0,.625],916:[0,.68333,0,0,.83334],920:[0,.68333,0,0,.77778],923:[0,.68333,0,0,.69445],926:[0,.68333,0,0,.66667],928:[0,.68333,0,0,.75],931:[0,.68333,0,0,.72222],933:[0,.68333,0,0,.77778],934:[0,.68333,0,0,.72222],936:[0,.68333,0,0,.77778],937:[0,.68333,0,0,.72222],8211:[0,.43056,.02778,0,.5],8212:[0,.43056,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5],8224:[.19444,.69444,0,0,.44445],8225:[.19444,.69444,0,0,.44445],8230:[0,.123,0,0,1.172],8242:[0,.55556,0,0,.275],8407:[0,.71444,.15382,0,.5],8463:[0,.68889,0,0,.54028],8465:[0,.69444,0,0,.72222],8467:[0,.69444,0,.11111,.41667],8472:[.19444,.43056,0,.11111,.63646],8476:[0,.69444,0,0,.72222],8501:[0,.69444,0,0,.61111],8592:[-.13313,.36687,0,0,1],8593:[.19444,.69444,0,0,.5],8594:[-.13313,.36687,0,0,1],8595:[.19444,.69444,0,0,.5],8596:[-.13313,.36687,0,0,1],8597:[.25,.75,0,0,.5],8598:[.19444,.69444,0,0,1],8599:[.19444,.69444,0,0,1],8600:[.19444,.69444,0,0,1],8601:[.19444,.69444,0,0,1],8614:[.011,.511,0,0,1],8617:[.011,.511,0,0,1.126],8618:[.011,.511,0,0,1.126],8636:[-.13313,.36687,0,0,1],8637:[-.13313,.36687,0,0,1],8640:[-.13313,.36687,0,0,1],8641:[-.13313,.36687,0,0,1],8652:[.011,.671,0,0,1],8656:[-.13313,.36687,0,0,1],8657:[.19444,.69444,0,0,.61111],8658:[-.13313,.36687,0,0,1],8659:[.19444,.69444,0,0,.61111],8660:[-.13313,.36687,0,0,1],8661:[.25,.75,0,0,.61111],8704:[0,.69444,0,0,.55556],8706:[0,.69444,.05556,.08334,.5309],8707:[0,.69444,0,0,.55556],8709:[.05556,.75,0,0,.5],8711:[0,.68333,0,0,.83334],8712:[.0391,.5391,0,0,.66667],8715:[.0391,.5391,0,0,.66667],8722:[.08333,.58333,0,0,.77778],8723:[.08333,.58333,0,0,.77778],8725:[.25,.75,0,0,.5],8726:[.25,.75,0,0,.5],8727:[-.03472,.46528,0,0,.5],8728:[-.05555,.44445,0,0,.5],8729:[-.05555,.44445,0,0,.5],8730:[.2,.8,0,0,.83334],8733:[0,.43056,0,0,.77778],8734:[0,.43056,0,0,1],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.27778],8741:[.25,.75,0,0,.5],8743:[0,.55556,0,0,.66667],8744:[0,.55556,0,0,.66667],8745:[0,.55556,0,0,.66667],8746:[0,.55556,0,0,.66667],8747:[.19444,.69444,.11111,0,.41667],8764:[-.13313,.36687,0,0,.77778],8768:[.19444,.69444,0,0,.27778],8771:[-.03625,.46375,0,0,.77778],8773:[-.022,.589,0,0,.778],8776:[-.01688,.48312,0,0,.77778],8781:[-.03625,.46375,0,0,.77778],8784:[-.133,.673,0,0,.778],8801:[-.03625,.46375,0,0,.77778],8804:[.13597,.63597,0,0,.77778],8805:[.13597,.63597,0,0,.77778],8810:[.0391,.5391,0,0,1],8811:[.0391,.5391,0,0,1],8826:[.0391,.5391,0,0,.77778],8827:[.0391,.5391,0,0,.77778],8834:[.0391,.5391,0,0,.77778],8835:[.0391,.5391,0,0,.77778],8838:[.13597,.63597,0,0,.77778],8839:[.13597,.63597,0,0,.77778],8846:[0,.55556,0,0,.66667],8849:[.13597,.63597,0,0,.77778],8850:[.13597,.63597,0,0,.77778],8851:[0,.55556,0,0,.66667],8852:[0,.55556,0,0,.66667],8853:[.08333,.58333,0,0,.77778],8854:[.08333,.58333,0,0,.77778],8855:[.08333,.58333,0,0,.77778],8856:[.08333,.58333,0,0,.77778],8857:[.08333,.58333,0,0,.77778],8866:[0,.69444,0,0,.61111],8867:[0,.69444,0,0,.61111],8868:[0,.69444,0,0,.77778],8869:[0,.69444,0,0,.77778],8872:[.249,.75,0,0,.867],8900:[-.05555,.44445,0,0,.5],8901:[-.05555,.44445,0,0,.27778],8902:[-.03472,.46528,0,0,.5],8904:[.005,.505,0,0,.9],8942:[.03,.903,0,0,.278],8943:[-.19,.313,0,0,1.172],8945:[-.1,.823,0,0,1.282],8968:[.25,.75,0,0,.44445],8969:[.25,.75,0,0,.44445],8970:[.25,.75,0,0,.44445],8971:[.25,.75,0,0,.44445],8994:[-.14236,.35764,0,0,1],8995:[-.14236,.35764,0,0,1],9136:[.244,.744,0,0,.412],9137:[.244,.745,0,0,.412],9651:[.19444,.69444,0,0,.88889],9657:[-.03472,.46528,0,0,.5],9661:[.19444,.69444,0,0,.88889],9667:[-.03472,.46528,0,0,.5],9711:[.19444,.69444,0,0,1],9824:[.12963,.69444,0,0,.77778],9825:[.12963,.69444,0,0,.77778],9826:[.12963,.69444,0,0,.77778],9827:[.12963,.69444,0,0,.77778],9837:[0,.75,0,0,.38889],9838:[.19444,.69444,0,0,.38889],9839:[.19444,.69444,0,0,.38889],10216:[.25,.75,0,0,.38889],10217:[.25,.75,0,0,.38889],10222:[.244,.744,0,0,.412],10223:[.244,.745,0,0,.412],10229:[.011,.511,0,0,1.609],10230:[.011,.511,0,0,1.638],10231:[.011,.511,0,0,1.859],10232:[.024,.525,0,0,1.609],10233:[.024,.525,0,0,1.638],10234:[.024,.525,0,0,1.858],10236:[.011,.511,0,0,1.638],10815:[0,.68333,0,0,.75],10927:[.13597,.63597,0,0,.77778],10928:[.13597,.63597,0,0,.77778],57376:[.19444,.69444,0,0,0]},"Math-BoldItalic":{32:[0,0,0,0,.25],48:[0,.44444,0,0,.575],49:[0,.44444,0,0,.575],50:[0,.44444,0,0,.575],51:[.19444,.44444,0,0,.575],52:[.19444,.44444,0,0,.575],53:[.19444,.44444,0,0,.575],54:[0,.64444,0,0,.575],55:[.19444,.44444,0,0,.575],56:[0,.64444,0,0,.575],57:[.19444,.44444,0,0,.575],65:[0,.68611,0,0,.86944],66:[0,.68611,.04835,0,.8664],67:[0,.68611,.06979,0,.81694],68:[0,.68611,.03194,0,.93812],69:[0,.68611,.05451,0,.81007],70:[0,.68611,.15972,0,.68889],71:[0,.68611,0,0,.88673],72:[0,.68611,.08229,0,.98229],73:[0,.68611,.07778,0,.51111],74:[0,.68611,.10069,0,.63125],75:[0,.68611,.06979,0,.97118],76:[0,.68611,0,0,.75555],77:[0,.68611,.11424,0,1.14201],78:[0,.68611,.11424,0,.95034],79:[0,.68611,.03194,0,.83666],80:[0,.68611,.15972,0,.72309],81:[.19444,.68611,0,0,.86861],82:[0,.68611,.00421,0,.87235],83:[0,.68611,.05382,0,.69271],84:[0,.68611,.15972,0,.63663],85:[0,.68611,.11424,0,.80027],86:[0,.68611,.25555,0,.67778],87:[0,.68611,.15972,0,1.09305],88:[0,.68611,.07778,0,.94722],89:[0,.68611,.25555,0,.67458],90:[0,.68611,.06979,0,.77257],97:[0,.44444,0,0,.63287],98:[0,.69444,0,0,.52083],99:[0,.44444,0,0,.51342],100:[0,.69444,0,0,.60972],101:[0,.44444,0,0,.55361],102:[.19444,.69444,.11042,0,.56806],103:[.19444,.44444,.03704,0,.5449],104:[0,.69444,0,0,.66759],105:[0,.69326,0,0,.4048],106:[.19444,.69326,.0622,0,.47083],107:[0,.69444,.01852,0,.6037],108:[0,.69444,.0088,0,.34815],109:[0,.44444,0,0,1.0324],110:[0,.44444,0,0,.71296],111:[0,.44444,0,0,.58472],112:[.19444,.44444,0,0,.60092],113:[.19444,.44444,.03704,0,.54213],114:[0,.44444,.03194,0,.5287],115:[0,.44444,0,0,.53125],116:[0,.63492,0,0,.41528],117:[0,.44444,0,0,.68102],118:[0,.44444,.03704,0,.56666],119:[0,.44444,.02778,0,.83148],120:[0,.44444,0,0,.65903],121:[.19444,.44444,.03704,0,.59028],122:[0,.44444,.04213,0,.55509],160:[0,0,0,0,.25],915:[0,.68611,.15972,0,.65694],916:[0,.68611,0,0,.95833],920:[0,.68611,.03194,0,.86722],923:[0,.68611,0,0,.80555],926:[0,.68611,.07458,0,.84125],928:[0,.68611,.08229,0,.98229],931:[0,.68611,.05451,0,.88507],933:[0,.68611,.15972,0,.67083],934:[0,.68611,0,0,.76666],936:[0,.68611,.11653,0,.71402],937:[0,.68611,.04835,0,.8789],945:[0,.44444,0,0,.76064],946:[.19444,.69444,.03403,0,.65972],947:[.19444,.44444,.06389,0,.59003],948:[0,.69444,.03819,0,.52222],949:[0,.44444,0,0,.52882],950:[.19444,.69444,.06215,0,.50833],951:[.19444,.44444,.03704,0,.6],952:[0,.69444,.03194,0,.5618],953:[0,.44444,0,0,.41204],954:[0,.44444,0,0,.66759],955:[0,.69444,0,0,.67083],956:[.19444,.44444,0,0,.70787],957:[0,.44444,.06898,0,.57685],958:[.19444,.69444,.03021,0,.50833],959:[0,.44444,0,0,.58472],960:[0,.44444,.03704,0,.68241],961:[.19444,.44444,0,0,.6118],962:[.09722,.44444,.07917,0,.42361],963:[0,.44444,.03704,0,.68588],964:[0,.44444,.13472,0,.52083],965:[0,.44444,.03704,0,.63055],966:[.19444,.44444,0,0,.74722],967:[.19444,.44444,0,0,.71805],968:[.19444,.69444,.03704,0,.75833],969:[0,.44444,.03704,0,.71782],977:[0,.69444,0,0,.69155],981:[.19444,.69444,0,0,.7125],982:[0,.44444,.03194,0,.975],1009:[.19444,.44444,0,0,.6118],1013:[0,.44444,0,0,.48333],57649:[0,.44444,0,0,.39352],57911:[.19444,.44444,0,0,.43889]},"Math-Italic":{32:[0,0,0,0,.25],48:[0,.43056,0,0,.5],49:[0,.43056,0,0,.5],50:[0,.43056,0,0,.5],51:[.19444,.43056,0,0,.5],52:[.19444,.43056,0,0,.5],53:[.19444,.43056,0,0,.5],54:[0,.64444,0,0,.5],55:[.19444,.43056,0,0,.5],56:[0,.64444,0,0,.5],57:[.19444,.43056,0,0,.5],65:[0,.68333,0,.13889,.75],66:[0,.68333,.05017,.08334,.75851],67:[0,.68333,.07153,.08334,.71472],68:[0,.68333,.02778,.05556,.82792],69:[0,.68333,.05764,.08334,.7382],70:[0,.68333,.13889,.08334,.64306],71:[0,.68333,0,.08334,.78625],72:[0,.68333,.08125,.05556,.83125],73:[0,.68333,.07847,.11111,.43958],74:[0,.68333,.09618,.16667,.55451],75:[0,.68333,.07153,.05556,.84931],76:[0,.68333,0,.02778,.68056],77:[0,.68333,.10903,.08334,.97014],78:[0,.68333,.10903,.08334,.80347],79:[0,.68333,.02778,.08334,.76278],80:[0,.68333,.13889,.08334,.64201],81:[.19444,.68333,0,.08334,.79056],82:[0,.68333,.00773,.08334,.75929],83:[0,.68333,.05764,.08334,.6132],84:[0,.68333,.13889,.08334,.58438],85:[0,.68333,.10903,.02778,.68278],86:[0,.68333,.22222,0,.58333],87:[0,.68333,.13889,0,.94445],88:[0,.68333,.07847,.08334,.82847],89:[0,.68333,.22222,0,.58056],90:[0,.68333,.07153,.08334,.68264],97:[0,.43056,0,0,.52859],98:[0,.69444,0,0,.42917],99:[0,.43056,0,.05556,.43276],100:[0,.69444,0,.16667,.52049],101:[0,.43056,0,.05556,.46563],102:[.19444,.69444,.10764,.16667,.48959],103:[.19444,.43056,.03588,.02778,.47697],104:[0,.69444,0,0,.57616],105:[0,.65952,0,0,.34451],106:[.19444,.65952,.05724,0,.41181],107:[0,.69444,.03148,0,.5206],108:[0,.69444,.01968,.08334,.29838],109:[0,.43056,0,0,.87801],110:[0,.43056,0,0,.60023],111:[0,.43056,0,.05556,.48472],112:[.19444,.43056,0,.08334,.50313],113:[.19444,.43056,.03588,.08334,.44641],114:[0,.43056,.02778,.05556,.45116],115:[0,.43056,0,.05556,.46875],116:[0,.61508,0,.08334,.36111],117:[0,.43056,0,.02778,.57246],118:[0,.43056,.03588,.02778,.48472],119:[0,.43056,.02691,.08334,.71592],120:[0,.43056,0,.02778,.57153],121:[.19444,.43056,.03588,.05556,.49028],122:[0,.43056,.04398,.05556,.46505],160:[0,0,0,0,.25],915:[0,.68333,.13889,.08334,.61528],916:[0,.68333,0,.16667,.83334],920:[0,.68333,.02778,.08334,.76278],923:[0,.68333,0,.16667,.69445],926:[0,.68333,.07569,.08334,.74236],928:[0,.68333,.08125,.05556,.83125],931:[0,.68333,.05764,.08334,.77986],933:[0,.68333,.13889,.05556,.58333],934:[0,.68333,0,.08334,.66667],936:[0,.68333,.11,.05556,.61222],937:[0,.68333,.05017,.08334,.7724],945:[0,.43056,.0037,.02778,.6397],946:[.19444,.69444,.05278,.08334,.56563],947:[.19444,.43056,.05556,0,.51773],948:[0,.69444,.03785,.05556,.44444],949:[0,.43056,0,.08334,.46632],950:[.19444,.69444,.07378,.08334,.4375],951:[.19444,.43056,.03588,.05556,.49653],952:[0,.69444,.02778,.08334,.46944],953:[0,.43056,0,.05556,.35394],954:[0,.43056,0,0,.57616],955:[0,.69444,0,0,.58334],956:[.19444,.43056,0,.02778,.60255],957:[0,.43056,.06366,.02778,.49398],958:[.19444,.69444,.04601,.11111,.4375],959:[0,.43056,0,.05556,.48472],960:[0,.43056,.03588,0,.57003],961:[.19444,.43056,0,.08334,.51702],962:[.09722,.43056,.07986,.08334,.36285],963:[0,.43056,.03588,0,.57141],964:[0,.43056,.1132,.02778,.43715],965:[0,.43056,.03588,.02778,.54028],966:[.19444,.43056,0,.08334,.65417],967:[.19444,.43056,0,.05556,.62569],968:[.19444,.69444,.03588,.11111,.65139],969:[0,.43056,.03588,0,.62245],977:[0,.69444,0,.08334,.59144],981:[.19444,.69444,0,.08334,.59583],982:[0,.43056,.02778,0,.82813],1009:[.19444,.43056,0,.08334,.51702],1013:[0,.43056,0,.05556,.4059],57649:[0,.43056,0,.02778,.32246],57911:[.19444,.43056,0,.08334,.38403]},"SansSerif-Bold":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.36667],34:[0,.69444,0,0,.55834],35:[.19444,.69444,0,0,.91667],36:[.05556,.75,0,0,.55],37:[.05556,.75,0,0,1.02912],38:[0,.69444,0,0,.83056],39:[0,.69444,0,0,.30556],40:[.25,.75,0,0,.42778],41:[.25,.75,0,0,.42778],42:[0,.75,0,0,.55],43:[.11667,.61667,0,0,.85556],44:[.10556,.13056,0,0,.30556],45:[0,.45833,0,0,.36667],46:[0,.13056,0,0,.30556],47:[.25,.75,0,0,.55],48:[0,.69444,0,0,.55],49:[0,.69444,0,0,.55],50:[0,.69444,0,0,.55],51:[0,.69444,0,0,.55],52:[0,.69444,0,0,.55],53:[0,.69444,0,0,.55],54:[0,.69444,0,0,.55],55:[0,.69444,0,0,.55],56:[0,.69444,0,0,.55],57:[0,.69444,0,0,.55],58:[0,.45833,0,0,.30556],59:[.10556,.45833,0,0,.30556],61:[-.09375,.40625,0,0,.85556],63:[0,.69444,0,0,.51945],64:[0,.69444,0,0,.73334],65:[0,.69444,0,0,.73334],66:[0,.69444,0,0,.73334],67:[0,.69444,0,0,.70278],68:[0,.69444,0,0,.79445],69:[0,.69444,0,0,.64167],70:[0,.69444,0,0,.61111],71:[0,.69444,0,0,.73334],72:[0,.69444,0,0,.79445],73:[0,.69444,0,0,.33056],74:[0,.69444,0,0,.51945],75:[0,.69444,0,0,.76389],76:[0,.69444,0,0,.58056],77:[0,.69444,0,0,.97778],78:[0,.69444,0,0,.79445],79:[0,.69444,0,0,.79445],80:[0,.69444,0,0,.70278],81:[.10556,.69444,0,0,.79445],82:[0,.69444,0,0,.70278],83:[0,.69444,0,0,.61111],84:[0,.69444,0,0,.73334],85:[0,.69444,0,0,.76389],86:[0,.69444,.01528,0,.73334],87:[0,.69444,.01528,0,1.03889],88:[0,.69444,0,0,.73334],89:[0,.69444,.0275,0,.73334],90:[0,.69444,0,0,.67223],91:[.25,.75,0,0,.34306],93:[.25,.75,0,0,.34306],94:[0,.69444,0,0,.55],95:[.35,.10833,.03056,0,.55],97:[0,.45833,0,0,.525],98:[0,.69444,0,0,.56111],99:[0,.45833,0,0,.48889],100:[0,.69444,0,0,.56111],101:[0,.45833,0,0,.51111],102:[0,.69444,.07639,0,.33611],103:[.19444,.45833,.01528,0,.55],104:[0,.69444,0,0,.56111],105:[0,.69444,0,0,.25556],106:[.19444,.69444,0,0,.28611],107:[0,.69444,0,0,.53056],108:[0,.69444,0,0,.25556],109:[0,.45833,0,0,.86667],110:[0,.45833,0,0,.56111],111:[0,.45833,0,0,.55],112:[.19444,.45833,0,0,.56111],113:[.19444,.45833,0,0,.56111],114:[0,.45833,.01528,0,.37222],115:[0,.45833,0,0,.42167],116:[0,.58929,0,0,.40417],117:[0,.45833,0,0,.56111],118:[0,.45833,.01528,0,.5],119:[0,.45833,.01528,0,.74445],120:[0,.45833,0,0,.5],121:[.19444,.45833,.01528,0,.5],122:[0,.45833,0,0,.47639],126:[.35,.34444,0,0,.55],160:[0,0,0,0,.25],168:[0,.69444,0,0,.55],176:[0,.69444,0,0,.73334],180:[0,.69444,0,0,.55],184:[.17014,0,0,0,.48889],305:[0,.45833,0,0,.25556],567:[.19444,.45833,0,0,.28611],710:[0,.69444,0,0,.55],711:[0,.63542,0,0,.55],713:[0,.63778,0,0,.55],728:[0,.69444,0,0,.55],729:[0,.69444,0,0,.30556],730:[0,.69444,0,0,.73334],732:[0,.69444,0,0,.55],733:[0,.69444,0,0,.55],915:[0,.69444,0,0,.58056],916:[0,.69444,0,0,.91667],920:[0,.69444,0,0,.85556],923:[0,.69444,0,0,.67223],926:[0,.69444,0,0,.73334],928:[0,.69444,0,0,.79445],931:[0,.69444,0,0,.79445],933:[0,.69444,0,0,.85556],934:[0,.69444,0,0,.79445],936:[0,.69444,0,0,.85556],937:[0,.69444,0,0,.79445],8211:[0,.45833,.03056,0,.55],8212:[0,.45833,.03056,0,1.10001],8216:[0,.69444,0,0,.30556],8217:[0,.69444,0,0,.30556],8220:[0,.69444,0,0,.55834],8221:[0,.69444,0,0,.55834]},"SansSerif-Italic":{32:[0,0,0,0,.25],33:[0,.69444,.05733,0,.31945],34:[0,.69444,.00316,0,.5],35:[.19444,.69444,.05087,0,.83334],36:[.05556,.75,.11156,0,.5],37:[.05556,.75,.03126,0,.83334],38:[0,.69444,.03058,0,.75834],39:[0,.69444,.07816,0,.27778],40:[.25,.75,.13164,0,.38889],41:[.25,.75,.02536,0,.38889],42:[0,.75,.11775,0,.5],43:[.08333,.58333,.02536,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,.01946,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,.13164,0,.5],48:[0,.65556,.11156,0,.5],49:[0,.65556,.11156,0,.5],50:[0,.65556,.11156,0,.5],51:[0,.65556,.11156,0,.5],52:[0,.65556,.11156,0,.5],53:[0,.65556,.11156,0,.5],54:[0,.65556,.11156,0,.5],55:[0,.65556,.11156,0,.5],56:[0,.65556,.11156,0,.5],57:[0,.65556,.11156,0,.5],58:[0,.44444,.02502,0,.27778],59:[.125,.44444,.02502,0,.27778],61:[-.13,.37,.05087,0,.77778],63:[0,.69444,.11809,0,.47222],64:[0,.69444,.07555,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,.08293,0,.66667],67:[0,.69444,.11983,0,.63889],68:[0,.69444,.07555,0,.72223],69:[0,.69444,.11983,0,.59722],70:[0,.69444,.13372,0,.56945],71:[0,.69444,.11983,0,.66667],72:[0,.69444,.08094,0,.70834],73:[0,.69444,.13372,0,.27778],74:[0,.69444,.08094,0,.47222],75:[0,.69444,.11983,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,.08094,0,.875],78:[0,.69444,.08094,0,.70834],79:[0,.69444,.07555,0,.73611],80:[0,.69444,.08293,0,.63889],81:[.125,.69444,.07555,0,.73611],82:[0,.69444,.08293,0,.64584],83:[0,.69444,.09205,0,.55556],84:[0,.69444,.13372,0,.68056],85:[0,.69444,.08094,0,.6875],86:[0,.69444,.1615,0,.66667],87:[0,.69444,.1615,0,.94445],88:[0,.69444,.13372,0,.66667],89:[0,.69444,.17261,0,.66667],90:[0,.69444,.11983,0,.61111],91:[.25,.75,.15942,0,.28889],93:[.25,.75,.08719,0,.28889],94:[0,.69444,.0799,0,.5],95:[.35,.09444,.08616,0,.5],97:[0,.44444,.00981,0,.48056],98:[0,.69444,.03057,0,.51667],99:[0,.44444,.08336,0,.44445],100:[0,.69444,.09483,0,.51667],101:[0,.44444,.06778,0,.44445],102:[0,.69444,.21705,0,.30556],103:[.19444,.44444,.10836,0,.5],104:[0,.69444,.01778,0,.51667],105:[0,.67937,.09718,0,.23889],106:[.19444,.67937,.09162,0,.26667],107:[0,.69444,.08336,0,.48889],108:[0,.69444,.09483,0,.23889],109:[0,.44444,.01778,0,.79445],110:[0,.44444,.01778,0,.51667],111:[0,.44444,.06613,0,.5],112:[.19444,.44444,.0389,0,.51667],113:[.19444,.44444,.04169,0,.51667],114:[0,.44444,.10836,0,.34167],115:[0,.44444,.0778,0,.38333],116:[0,.57143,.07225,0,.36111],117:[0,.44444,.04169,0,.51667],118:[0,.44444,.10836,0,.46111],119:[0,.44444,.10836,0,.68334],120:[0,.44444,.09169,0,.46111],121:[.19444,.44444,.10836,0,.46111],122:[0,.44444,.08752,0,.43472],126:[.35,.32659,.08826,0,.5],160:[0,0,0,0,.25],168:[0,.67937,.06385,0,.5],176:[0,.69444,0,0,.73752],184:[.17014,0,0,0,.44445],305:[0,.44444,.04169,0,.23889],567:[.19444,.44444,.04169,0,.26667],710:[0,.69444,.0799,0,.5],711:[0,.63194,.08432,0,.5],713:[0,.60889,.08776,0,.5],714:[0,.69444,.09205,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,.09483,0,.5],729:[0,.67937,.07774,0,.27778],730:[0,.69444,0,0,.73752],732:[0,.67659,.08826,0,.5],733:[0,.69444,.09205,0,.5],915:[0,.69444,.13372,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,.07555,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,.12816,0,.66667],928:[0,.69444,.08094,0,.70834],931:[0,.69444,.11983,0,.72222],933:[0,.69444,.09031,0,.77778],934:[0,.69444,.04603,0,.72222],936:[0,.69444,.09031,0,.77778],937:[0,.69444,.08293,0,.72222],8211:[0,.44444,.08616,0,.5],8212:[0,.44444,.08616,0,1],8216:[0,.69444,.07816,0,.27778],8217:[0,.69444,.07816,0,.27778],8220:[0,.69444,.14205,0,.5],8221:[0,.69444,.00316,0,.5]},"SansSerif-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.31945],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.75834],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,0,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.65556,0,0,.5],49:[0,.65556,0,0,.5],50:[0,.65556,0,0,.5],51:[0,.65556,0,0,.5],52:[0,.65556,0,0,.5],53:[0,.65556,0,0,.5],54:[0,.65556,0,0,.5],55:[0,.65556,0,0,.5],56:[0,.65556,0,0,.5],57:[0,.65556,0,0,.5],58:[0,.44444,0,0,.27778],59:[.125,.44444,0,0,.27778],61:[-.13,.37,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,0,0,.66667],67:[0,.69444,0,0,.63889],68:[0,.69444,0,0,.72223],69:[0,.69444,0,0,.59722],70:[0,.69444,0,0,.56945],71:[0,.69444,0,0,.66667],72:[0,.69444,0,0,.70834],73:[0,.69444,0,0,.27778],74:[0,.69444,0,0,.47222],75:[0,.69444,0,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,0,0,.875],78:[0,.69444,0,0,.70834],79:[0,.69444,0,0,.73611],80:[0,.69444,0,0,.63889],81:[.125,.69444,0,0,.73611],82:[0,.69444,0,0,.64584],83:[0,.69444,0,0,.55556],84:[0,.69444,0,0,.68056],85:[0,.69444,0,0,.6875],86:[0,.69444,.01389,0,.66667],87:[0,.69444,.01389,0,.94445],88:[0,.69444,0,0,.66667],89:[0,.69444,.025,0,.66667],90:[0,.69444,0,0,.61111],91:[.25,.75,0,0,.28889],93:[.25,.75,0,0,.28889],94:[0,.69444,0,0,.5],95:[.35,.09444,.02778,0,.5],97:[0,.44444,0,0,.48056],98:[0,.69444,0,0,.51667],99:[0,.44444,0,0,.44445],100:[0,.69444,0,0,.51667],101:[0,.44444,0,0,.44445],102:[0,.69444,.06944,0,.30556],103:[.19444,.44444,.01389,0,.5],104:[0,.69444,0,0,.51667],105:[0,.67937,0,0,.23889],106:[.19444,.67937,0,0,.26667],107:[0,.69444,0,0,.48889],108:[0,.69444,0,0,.23889],109:[0,.44444,0,0,.79445],110:[0,.44444,0,0,.51667],111:[0,.44444,0,0,.5],112:[.19444,.44444,0,0,.51667],113:[.19444,.44444,0,0,.51667],114:[0,.44444,.01389,0,.34167],115:[0,.44444,0,0,.38333],116:[0,.57143,0,0,.36111],117:[0,.44444,0,0,.51667],118:[0,.44444,.01389,0,.46111],119:[0,.44444,.01389,0,.68334],120:[0,.44444,0,0,.46111],121:[.19444,.44444,.01389,0,.46111],122:[0,.44444,0,0,.43472],126:[.35,.32659,0,0,.5],160:[0,0,0,0,.25],168:[0,.67937,0,0,.5],176:[0,.69444,0,0,.66667],184:[.17014,0,0,0,.44445],305:[0,.44444,0,0,.23889],567:[.19444,.44444,0,0,.26667],710:[0,.69444,0,0,.5],711:[0,.63194,0,0,.5],713:[0,.60889,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.67937,0,0,.27778],730:[0,.69444,0,0,.66667],732:[0,.67659,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.69444,0,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,0,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,0,0,.66667],928:[0,.69444,0,0,.70834],931:[0,.69444,0,0,.72222],933:[0,.69444,0,0,.77778],934:[0,.69444,0,0,.72222],936:[0,.69444,0,0,.77778],937:[0,.69444,0,0,.72222],8211:[0,.44444,.02778,0,.5],8212:[0,.44444,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5]},"Script-Regular":{32:[0,0,0,0,.25],65:[0,.7,.22925,0,.80253],66:[0,.7,.04087,0,.90757],67:[0,.7,.1689,0,.66619],68:[0,.7,.09371,0,.77443],69:[0,.7,.18583,0,.56162],70:[0,.7,.13634,0,.89544],71:[0,.7,.17322,0,.60961],72:[0,.7,.29694,0,.96919],73:[0,.7,.19189,0,.80907],74:[.27778,.7,.19189,0,1.05159],75:[0,.7,.31259,0,.91364],76:[0,.7,.19189,0,.87373],77:[0,.7,.15981,0,1.08031],78:[0,.7,.3525,0,.9015],79:[0,.7,.08078,0,.73787],80:[0,.7,.08078,0,1.01262],81:[0,.7,.03305,0,.88282],82:[0,.7,.06259,0,.85],83:[0,.7,.19189,0,.86767],84:[0,.7,.29087,0,.74697],85:[0,.7,.25815,0,.79996],86:[0,.7,.27523,0,.62204],87:[0,.7,.27523,0,.80532],88:[0,.7,.26006,0,.94445],89:[0,.7,.2939,0,.70961],90:[0,.7,.24037,0,.8212],160:[0,0,0,0,.25]},"Size1-Regular":{32:[0,0,0,0,.25],40:[.35001,.85,0,0,.45834],41:[.35001,.85,0,0,.45834],47:[.35001,.85,0,0,.57778],91:[.35001,.85,0,0,.41667],92:[.35001,.85,0,0,.57778],93:[.35001,.85,0,0,.41667],123:[.35001,.85,0,0,.58334],125:[.35001,.85,0,0,.58334],160:[0,0,0,0,.25],710:[0,.72222,0,0,.55556],732:[0,.72222,0,0,.55556],770:[0,.72222,0,0,.55556],771:[0,.72222,0,0,.55556],8214:[-99e-5,.601,0,0,.77778],8593:[1e-5,.6,0,0,.66667],8595:[1e-5,.6,0,0,.66667],8657:[1e-5,.6,0,0,.77778],8659:[1e-5,.6,0,0,.77778],8719:[.25001,.75,0,0,.94445],8720:[.25001,.75,0,0,.94445],8721:[.25001,.75,0,0,1.05556],8730:[.35001,.85,0,0,1],8739:[-.00599,.606,0,0,.33333],8741:[-.00599,.606,0,0,.55556],8747:[.30612,.805,.19445,0,.47222],8748:[.306,.805,.19445,0,.47222],8749:[.306,.805,.19445,0,.47222],8750:[.30612,.805,.19445,0,.47222],8896:[.25001,.75,0,0,.83334],8897:[.25001,.75,0,0,.83334],8898:[.25001,.75,0,0,.83334],8899:[.25001,.75,0,0,.83334],8968:[.35001,.85,0,0,.47222],8969:[.35001,.85,0,0,.47222],8970:[.35001,.85,0,0,.47222],8971:[.35001,.85,0,0,.47222],9168:[-99e-5,.601,0,0,.66667],10216:[.35001,.85,0,0,.47222],10217:[.35001,.85,0,0,.47222],10752:[.25001,.75,0,0,1.11111],10753:[.25001,.75,0,0,1.11111],10754:[.25001,.75,0,0,1.11111],10756:[.25001,.75,0,0,.83334],10758:[.25001,.75,0,0,.83334]},"Size2-Regular":{32:[0,0,0,0,.25],40:[.65002,1.15,0,0,.59722],41:[.65002,1.15,0,0,.59722],47:[.65002,1.15,0,0,.81111],91:[.65002,1.15,0,0,.47222],92:[.65002,1.15,0,0,.81111],93:[.65002,1.15,0,0,.47222],123:[.65002,1.15,0,0,.66667],125:[.65002,1.15,0,0,.66667],160:[0,0,0,0,.25],710:[0,.75,0,0,1],732:[0,.75,0,0,1],770:[0,.75,0,0,1],771:[0,.75,0,0,1],8719:[.55001,1.05,0,0,1.27778],8720:[.55001,1.05,0,0,1.27778],8721:[.55001,1.05,0,0,1.44445],8730:[.65002,1.15,0,0,1],8747:[.86225,1.36,.44445,0,.55556],8748:[.862,1.36,.44445,0,.55556],8749:[.862,1.36,.44445,0,.55556],8750:[.86225,1.36,.44445,0,.55556],8896:[.55001,1.05,0,0,1.11111],8897:[.55001,1.05,0,0,1.11111],8898:[.55001,1.05,0,0,1.11111],8899:[.55001,1.05,0,0,1.11111],8968:[.65002,1.15,0,0,.52778],8969:[.65002,1.15,0,0,.52778],8970:[.65002,1.15,0,0,.52778],8971:[.65002,1.15,0,0,.52778],10216:[.65002,1.15,0,0,.61111],10217:[.65002,1.15,0,0,.61111],10752:[.55001,1.05,0,0,1.51112],10753:[.55001,1.05,0,0,1.51112],10754:[.55001,1.05,0,0,1.51112],10756:[.55001,1.05,0,0,1.11111],10758:[.55001,1.05,0,0,1.11111]},"Size3-Regular":{32:[0,0,0,0,.25],40:[.95003,1.45,0,0,.73611],41:[.95003,1.45,0,0,.73611],47:[.95003,1.45,0,0,1.04445],91:[.95003,1.45,0,0,.52778],92:[.95003,1.45,0,0,1.04445],93:[.95003,1.45,0,0,.52778],123:[.95003,1.45,0,0,.75],125:[.95003,1.45,0,0,.75],160:[0,0,0,0,.25],710:[0,.75,0,0,1.44445],732:[0,.75,0,0,1.44445],770:[0,.75,0,0,1.44445],771:[0,.75,0,0,1.44445],8730:[.95003,1.45,0,0,1],8968:[.95003,1.45,0,0,.58334],8969:[.95003,1.45,0,0,.58334],8970:[.95003,1.45,0,0,.58334],8971:[.95003,1.45,0,0,.58334],10216:[.95003,1.45,0,0,.75],10217:[.95003,1.45,0,0,.75]},"Size4-Regular":{32:[0,0,0,0,.25],40:[1.25003,1.75,0,0,.79167],41:[1.25003,1.75,0,0,.79167],47:[1.25003,1.75,0,0,1.27778],91:[1.25003,1.75,0,0,.58334],92:[1.25003,1.75,0,0,1.27778],93:[1.25003,1.75,0,0,.58334],123:[1.25003,1.75,0,0,.80556],125:[1.25003,1.75,0,0,.80556],160:[0,0,0,0,.25],710:[0,.825,0,0,1.8889],732:[0,.825,0,0,1.8889],770:[0,.825,0,0,1.8889],771:[0,.825,0,0,1.8889],8730:[1.25003,1.75,0,0,1],8968:[1.25003,1.75,0,0,.63889],8969:[1.25003,1.75,0,0,.63889],8970:[1.25003,1.75,0,0,.63889],8971:[1.25003,1.75,0,0,.63889],9115:[.64502,1.155,0,0,.875],9116:[1e-5,.6,0,0,.875],9117:[.64502,1.155,0,0,.875],9118:[.64502,1.155,0,0,.875],9119:[1e-5,.6,0,0,.875],9120:[.64502,1.155,0,0,.875],9121:[.64502,1.155,0,0,.66667],9122:[-99e-5,.601,0,0,.66667],9123:[.64502,1.155,0,0,.66667],9124:[.64502,1.155,0,0,.66667],9125:[-99e-5,.601,0,0,.66667],9126:[.64502,1.155,0,0,.66667],9127:[1e-5,.9,0,0,.88889],9128:[.65002,1.15,0,0,.88889],9129:[.90001,0,0,0,.88889],9130:[0,.3,0,0,.88889],9131:[1e-5,.9,0,0,.88889],9132:[.65002,1.15,0,0,.88889],9133:[.90001,0,0,0,.88889],9143:[.88502,.915,0,0,1.05556],10216:[1.25003,1.75,0,0,.80556],10217:[1.25003,1.75,0,0,.80556],57344:[-.00499,.605,0,0,1.05556],57345:[-.00499,.605,0,0,1.05556],57680:[0,.12,0,0,.45],57681:[0,.12,0,0,.45],57682:[0,.12,0,0,.45],57683:[0,.12,0,0,.45]},"Typewriter-Regular":{32:[0,0,0,0,.525],33:[0,.61111,0,0,.525],34:[0,.61111,0,0,.525],35:[0,.61111,0,0,.525],36:[.08333,.69444,0,0,.525],37:[.08333,.69444,0,0,.525],38:[0,.61111,0,0,.525],39:[0,.61111,0,0,.525],40:[.08333,.69444,0,0,.525],41:[.08333,.69444,0,0,.525],42:[0,.52083,0,0,.525],43:[-.08056,.53055,0,0,.525],44:[.13889,.125,0,0,.525],45:[-.08056,.53055,0,0,.525],46:[0,.125,0,0,.525],47:[.08333,.69444,0,0,.525],48:[0,.61111,0,0,.525],49:[0,.61111,0,0,.525],50:[0,.61111,0,0,.525],51:[0,.61111,0,0,.525],52:[0,.61111,0,0,.525],53:[0,.61111,0,0,.525],54:[0,.61111,0,0,.525],55:[0,.61111,0,0,.525],56:[0,.61111,0,0,.525],57:[0,.61111,0,0,.525],58:[0,.43056,0,0,.525],59:[.13889,.43056,0,0,.525],60:[-.05556,.55556,0,0,.525],61:[-.19549,.41562,0,0,.525],62:[-.05556,.55556,0,0,.525],63:[0,.61111,0,0,.525],64:[0,.61111,0,0,.525],65:[0,.61111,0,0,.525],66:[0,.61111,0,0,.525],67:[0,.61111,0,0,.525],68:[0,.61111,0,0,.525],69:[0,.61111,0,0,.525],70:[0,.61111,0,0,.525],71:[0,.61111,0,0,.525],72:[0,.61111,0,0,.525],73:[0,.61111,0,0,.525],74:[0,.61111,0,0,.525],75:[0,.61111,0,0,.525],76:[0,.61111,0,0,.525],77:[0,.61111,0,0,.525],78:[0,.61111,0,0,.525],79:[0,.61111,0,0,.525],80:[0,.61111,0,0,.525],81:[.13889,.61111,0,0,.525],82:[0,.61111,0,0,.525],83:[0,.61111,0,0,.525],84:[0,.61111,0,0,.525],85:[0,.61111,0,0,.525],86:[0,.61111,0,0,.525],87:[0,.61111,0,0,.525],88:[0,.61111,0,0,.525],89:[0,.61111,0,0,.525],90:[0,.61111,0,0,.525],91:[.08333,.69444,0,0,.525],92:[.08333,.69444,0,0,.525],93:[.08333,.69444,0,0,.525],94:[0,.61111,0,0,.525],95:[.09514,0,0,0,.525],96:[0,.61111,0,0,.525],97:[0,.43056,0,0,.525],98:[0,.61111,0,0,.525],99:[0,.43056,0,0,.525],100:[0,.61111,0,0,.525],101:[0,.43056,0,0,.525],102:[0,.61111,0,0,.525],103:[.22222,.43056,0,0,.525],104:[0,.61111,0,0,.525],105:[0,.61111,0,0,.525],106:[.22222,.61111,0,0,.525],107:[0,.61111,0,0,.525],108:[0,.61111,0,0,.525],109:[0,.43056,0,0,.525],110:[0,.43056,0,0,.525],111:[0,.43056,0,0,.525],112:[.22222,.43056,0,0,.525],113:[.22222,.43056,0,0,.525],114:[0,.43056,0,0,.525],115:[0,.43056,0,0,.525],116:[0,.55358,0,0,.525],117:[0,.43056,0,0,.525],118:[0,.43056,0,0,.525],119:[0,.43056,0,0,.525],120:[0,.43056,0,0,.525],121:[.22222,.43056,0,0,.525],122:[0,.43056,0,0,.525],123:[.08333,.69444,0,0,.525],124:[.08333,.69444,0,0,.525],125:[.08333,.69444,0,0,.525],126:[0,.61111,0,0,.525],127:[0,.61111,0,0,.525],160:[0,0,0,0,.525],176:[0,.61111,0,0,.525],184:[.19445,0,0,0,.525],305:[0,.43056,0,0,.525],567:[.22222,.43056,0,0,.525],711:[0,.56597,0,0,.525],713:[0,.56555,0,0,.525],714:[0,.61111,0,0,.525],715:[0,.61111,0,0,.525],728:[0,.61111,0,0,.525],730:[0,.61111,0,0,.525],770:[0,.61111,0,0,.525],771:[0,.61111,0,0,.525],776:[0,.61111,0,0,.525],915:[0,.61111,0,0,.525],916:[0,.61111,0,0,.525],920:[0,.61111,0,0,.525],923:[0,.61111,0,0,.525],926:[0,.61111,0,0,.525],928:[0,.61111,0,0,.525],931:[0,.61111,0,0,.525],933:[0,.61111,0,0,.525],934:[0,.61111,0,0,.525],936:[0,.61111,0,0,.525],937:[0,.61111,0,0,.525],8216:[0,.61111,0,0,.525],8217:[0,.61111,0,0,.525],8242:[0,.61111,0,0,.525],9251:[.11111,.21944,0,0,.525]}},B={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2],arrayRuleWidth:[.04,.04,.04],fboxsep:[.3,.3,.3],fboxrule:[.04,.04,.04]},C={"\xc5":"A","\xd0":"D","\xde":"o","\xe5":"a","\xf0":"d","\xfe":"o","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};function N(e,t,r){if(!T[t])throw new Error("Font metrics not found for font: "+t+".");var n=e.charCodeAt(0),a=T[t][n];if(!a&&e[0]in C&&(n=C[e[0]].charCodeAt(0),a=T[t][n]),a||"text"!==r||S(n)&&(a=T[t][77]),a)return{depth:a[0],height:a[1],italic:a[2],skew:a[3],width:a[4]}}var q={};var I=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]],R=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488],H=function(e,t){return t.size<2?e:I[e-1][t.size-1]},O=function(){function e(t){this.style=void 0,this.color=void 0,this.size=void 0,this.textSize=void 0,this.phantom=void 0,this.font=void 0,this.fontFamily=void 0,this.fontWeight=void 0,this.fontShape=void 0,this.sizeMultiplier=void 0,this.maxSize=void 0,this.minRuleThickness=void 0,this._fontMetrics=void 0,this.style=t.style,this.color=t.color,this.size=t.size||e.BASESIZE,this.textSize=t.textSize||this.size,this.phantom=!!t.phantom,this.font=t.font||"",this.fontFamily=t.fontFamily||"",this.fontWeight=t.fontWeight||"",this.fontShape=t.fontShape||"",this.sizeMultiplier=R[this.size-1],this.maxSize=t.maxSize,this.minRuleThickness=t.minRuleThickness,this._fontMetrics=void 0}var t=e.prototype;return t.extend=function(t){var r={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,fontFamily:this.fontFamily,fontWeight:this.fontWeight,fontShape:this.fontShape,maxSize:this.maxSize,minRuleThickness:this.minRuleThickness};for(var n in t)t.hasOwnProperty(n)&&(r[n]=t[n]);return new e(r)},t.havingStyle=function(e){return this.style===e?this:this.extend({style:e,size:H(this.textSize,e)})},t.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())},t.havingSize=function(e){return this.size===e&&this.textSize===e?this:this.extend({style:this.style.text(),size:e,textSize:e,sizeMultiplier:R[e-1]})},t.havingBaseStyle=function(t){t=t||this.style.text();var r=H(e.BASESIZE,t);return this.size===r&&this.textSize===e.BASESIZE&&this.style===t?this:this.extend({style:t,size:r})},t.havingBaseSizing=function(){var e;switch(this.style.id){case 4:case 5:e=3;break;case 6:case 7:e=1;break;default:e=6}return this.extend({style:this.style.text(),size:e})},t.withColor=function(e){return this.extend({color:e})},t.withPhantom=function(){return this.extend({phantom:!0})},t.withFont=function(e){return this.extend({font:e})},t.withTextFontFamily=function(e){return this.extend({fontFamily:e,font:""})},t.withTextFontWeight=function(e){return this.extend({fontWeight:e,font:""})},t.withTextFontShape=function(e){return this.extend({fontShape:e,font:""})},t.sizingClasses=function(e){return e.size!==this.size?["sizing","reset-size"+e.size,"size"+this.size]:[]},t.baseSizingClasses=function(){return this.size!==e.BASESIZE?["sizing","reset-size"+this.size,"size"+e.BASESIZE]:[]},t.fontMetrics=function(){return this._fontMetrics||(this._fontMetrics=function(e){var t;if(!q[t=e>=5?0:e>=3?1:2]){var r=q[t]={cssEmPerMu:B.quad[t]/18};for(var n in B)B.hasOwnProperty(n)&&(r[n]=B[n][t])}return q[t]}(this.size)),this._fontMetrics},t.getColor=function(){return this.phantom?"transparent":this.color},e}();O.BASESIZE=6;var E=O,L={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:1.00375,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:1.00375},D={ex:!0,em:!0,mu:!0},V=function(e){return"string"!=typeof e&&(e=e.unit),e in L||e in D||"ex"===e},P=function(e,t){var r;if(e.unit in L)r=L[e.unit]/t.fontMetrics().ptPerEm/t.sizeMultiplier;else if("mu"===e.unit)r=t.fontMetrics().cssEmPerMu;else{var a;if(a=t.style.isTight()?t.havingStyle(t.style.text()):t,"ex"===e.unit)r=a.fontMetrics().xHeight;else{if("em"!==e.unit)throw new n("Invalid unit: '"+e.unit+"'");r=a.fontMetrics().quad}a!==t&&(r*=a.sizeMultiplier/t.sizeMultiplier)}return Math.min(e.number*r,t.maxSize)},F=function(e){return+e.toFixed(4)+"em"},G=function(e){return e.filter((function(e){return e})).join(" ")},U=function(e,t,r){if(this.classes=e||[],this.attributes={},this.height=0,this.depth=0,this.maxFontSize=0,this.style=r||{},t){t.style.isTight()&&this.classes.push("mtight");var n=t.getColor();n&&(this.style.color=n)}},Y=function(e){var t=document.createElement(e);for(var r in t.className=G(this.classes),this.style)this.style.hasOwnProperty(r)&&(t.style[r]=this.style[r]);for(var n in this.attributes)this.attributes.hasOwnProperty(n)&&t.setAttribute(n,this.attributes[n]);for(var a=0;a<this.children.length;a++)t.appendChild(this.children[a].toNode());return t},X=function(e){var t="<"+e;this.classes.length&&(t+=' class="'+l.escape(G(this.classes))+'"');var r="";for(var n in this.style)this.style.hasOwnProperty(n)&&(r+=l.hyphenate(n)+":"+this.style[n]+";");for(var a in r&&(t+=' style="'+l.escape(r)+'"'),this.attributes)this.attributes.hasOwnProperty(a)&&(t+=" "+a+'="'+l.escape(this.attributes[a])+'"');t+=">";for(var i=0;i<this.children.length;i++)t+=this.children[i].toMarkup();return t+="</"+e+">"},W=function(){function e(e,t,r,n){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.width=void 0,this.maxFontSize=void 0,this.style=void 0,U.call(this,e,r,n),this.children=t||[]}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){return Y.call(this,"span")},t.toMarkup=function(){return X.call(this,"span")},e}(),_=function(){function e(e,t,r,n){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,U.call(this,t,n),this.children=r||[],this.setAttribute("href",e)}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){return Y.call(this,"a")},t.toMarkup=function(){return X.call(this,"a")},e}(),j=function(){function e(e,t,r){this.src=void 0,this.alt=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.alt=t,this.src=e,this.classes=["mord"],this.style=r}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){var e=document.createElement("img");for(var t in e.src=this.src,e.alt=this.alt,e.className="mord",this.style)this.style.hasOwnProperty(t)&&(e.style[t]=this.style[t]);return e},t.toMarkup=function(){var e="<img  src='"+this.src+" 'alt='"+this.alt+"' ",t="";for(var r in this.style)this.style.hasOwnProperty(r)&&(t+=l.hyphenate(r)+":"+this.style[r]+";");return t&&(e+=' style="'+l.escape(t)+'"'),e+="'/>"},e}(),$={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"},Z=function(){function e(e,t,r,n,a,i,o,s){this.text=void 0,this.height=void 0,this.depth=void 0,this.italic=void 0,this.skew=void 0,this.width=void 0,this.maxFontSize=void 0,this.classes=void 0,this.style=void 0,this.text=e,this.height=t||0,this.depth=r||0,this.italic=n||0,this.skew=a||0,this.width=i||0,this.classes=o||[],this.style=s||{},this.maxFontSize=0;var l=function(e){for(var t=0;t<w.length;t++)for(var r=w[t],n=0;n<r.blocks.length;n++){var a=r.blocks[n];if(e>=a[0]&&e<=a[1])return r.name}return null}(this.text.charCodeAt(0));l&&this.classes.push(l+"_fallback"),/[\xee\xef\xed\xec]/.test(this.text)&&(this.text=$[this.text])}var t=e.prototype;return t.hasClass=function(e){return l.contains(this.classes,e)},t.toNode=function(){var e=document.createTextNode(this.text),t=null;for(var r in this.italic>0&&((t=document.createElement("span")).style.marginRight=F(this.italic)),this.classes.length>0&&((t=t||document.createElement("span")).className=G(this.classes)),this.style)this.style.hasOwnProperty(r)&&((t=t||document.createElement("span")).style[r]=this.style[r]);return t?(t.appendChild(e),t):e},t.toMarkup=function(){var e=!1,t="<span";this.classes.length&&(e=!0,t+=' class="',t+=l.escape(G(this.classes)),t+='"');var r="";for(var n in this.italic>0&&(r+="margin-right:"+this.italic+"em;"),this.style)this.style.hasOwnProperty(n)&&(r+=l.hyphenate(n)+":"+this.style[n]+";");r&&(e=!0,t+=' style="'+l.escape(r)+'"');var a=l.escape(this.text);return e?(t+=">",t+=a,t+="</span>"):a},e}(),K=function(){function e(e,t){this.children=void 0,this.attributes=void 0,this.children=e||[],this.attributes=t||{}}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS("http://www.w3.org/2000/svg","svg");for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);for(var r=0;r<this.children.length;r++)e.appendChild(this.children[r].toNode());return e},t.toMarkup=function(){var e='<svg xmlns="http://www.w3.org/2000/svg"';for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=" "+t+"='"+this.attributes[t]+"'");e+=">";for(var r=0;r<this.children.length;r++)e+=this.children[r].toMarkup();return e+="</svg>"},e}(),J=function(){function e(e,t){this.pathName=void 0,this.alternate=void 0,this.pathName=e,this.alternate=t}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS("http://www.w3.org/2000/svg","path");return this.alternate?e.setAttribute("d",this.alternate):e.setAttribute("d",z[this.pathName]),e},t.toMarkup=function(){return this.alternate?"<path d='"+this.alternate+"'/>":"<path d='"+z[this.pathName]+"'/>"},e}(),Q=function(){function e(e){this.attributes=void 0,this.attributes=e||{}}var t=e.prototype;return t.toNode=function(){var e=document.createElementNS("http://www.w3.org/2000/svg","line");for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);return e},t.toMarkup=function(){var e="<line";for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=" "+t+"='"+this.attributes[t]+"'");return e+="/>"},e}();function ee(e){if(e instanceof Z)return e;throw new Error("Expected symbolNode but got "+String(e)+".")}var te={bin:1,close:1,inner:1,open:1,punct:1,rel:1},re={"accent-token":1,mathord:1,"op-token":1,spacing:1,textord:1},ne={math:{},text:{}},ae=ne;function ie(e,t,r,n,a,i){ne[e][a]={font:t,group:r,replace:n},i&&n&&(ne[e][n]=ne[e][a])}var oe="math",se="text",le="main",he="ams",ce="accent-token",me="bin",ue="close",pe="inner",de="mathord",fe="op-token",ge="open",ve="punct",ye="rel",be="spacing",xe="textord";ie(oe,le,ye,"\u2261","\\equiv",!0),ie(oe,le,ye,"\u227a","\\prec",!0),ie(oe,le,ye,"\u227b","\\succ",!0),ie(oe,le,ye,"\u223c","\\sim",!0),ie(oe,le,ye,"\u22a5","\\perp"),ie(oe,le,ye,"\u2aaf","\\preceq",!0),ie(oe,le,ye,"\u2ab0","\\succeq",!0),ie(oe,le,ye,"\u2243","\\simeq",!0),ie(oe,le,ye,"\u2223","\\mid",!0),ie(oe,le,ye,"\u226a","\\ll",!0),ie(oe,le,ye,"\u226b","\\gg",!0),ie(oe,le,ye,"\u224d","\\asymp",!0),ie(oe,le,ye,"\u2225","\\parallel"),ie(oe,le,ye,"\u22c8","\\bowtie",!0),ie(oe,le,ye,"\u2323","\\smile",!0),ie(oe,le,ye,"\u2291","\\sqsubseteq",!0),ie(oe,le,ye,"\u2292","\\sqsupseteq",!0),ie(oe,le,ye,"\u2250","\\doteq",!0),ie(oe,le,ye,"\u2322","\\frown",!0),ie(oe,le,ye,"\u220b","\\ni",!0),ie(oe,le,ye,"\u221d","\\propto",!0),ie(oe,le,ye,"\u22a2","\\vdash",!0),ie(oe,le,ye,"\u22a3","\\dashv",!0),ie(oe,le,ye,"\u220b","\\owns"),ie(oe,le,ve,".","\\ldotp"),ie(oe,le,ve,"\u22c5","\\cdotp"),ie(oe,le,xe,"#","\\#"),ie(se,le,xe,"#","\\#"),ie(oe,le,xe,"&","\\&"),ie(se,le,xe,"&","\\&"),ie(oe,le,xe,"\u2135","\\aleph",!0),ie(oe,le,xe,"\u2200","\\forall",!0),ie(oe,le,xe,"\u210f","\\hbar",!0),ie(oe,le,xe,"\u2203","\\exists",!0),ie(oe,le,xe,"\u2207","\\nabla",!0),ie(oe,le,xe,"\u266d","\\flat",!0),ie(oe,le,xe,"\u2113","\\ell",!0),ie(oe,le,xe,"\u266e","\\natural",!0),ie(oe,le,xe,"\u2663","\\clubsuit",!0),ie(oe,le,xe,"\u2118","\\wp",!0),ie(oe,le,xe,"\u266f","\\sharp",!0),ie(oe,le,xe,"\u2662","\\diamondsuit",!0),ie(oe,le,xe,"\u211c","\\Re",!0),ie(oe,le,xe,"\u2661","\\heartsuit",!0),ie(oe,le,xe,"\u2111","\\Im",!0),ie(oe,le,xe,"\u2660","\\spadesuit",!0),ie(oe,le,xe,"\xa7","\\S",!0),ie(se,le,xe,"\xa7","\\S"),ie(oe,le,xe,"\xb6","\\P",!0),ie(se,le,xe,"\xb6","\\P"),ie(oe,le,xe,"\u2020","\\dag"),ie(se,le,xe,"\u2020","\\dag"),ie(se,le,xe,"\u2020","\\textdagger"),ie(oe,le,xe,"\u2021","\\ddag"),ie(se,le,xe,"\u2021","\\ddag"),ie(se,le,xe,"\u2021","\\textdaggerdbl"),ie(oe,le,ue,"\u23b1","\\rmoustache",!0),ie(oe,le,ge,"\u23b0","\\lmoustache",!0),ie(oe,le,ue,"\u27ef","\\rgroup",!0),ie(oe,le,ge,"\u27ee","\\lgroup",!0),ie(oe,le,me,"\u2213","\\mp",!0),ie(oe,le,me,"\u2296","\\ominus",!0),ie(oe,le,me,"\u228e","\\uplus",!0),ie(oe,le,me,"\u2293","\\sqcap",!0),ie(oe,le,me,"\u2217","\\ast"),ie(oe,le,me,"\u2294","\\sqcup",!0),ie(oe,le,me,"\u25ef","\\bigcirc",!0),ie(oe,le,me,"\u2219","\\bullet",!0),ie(oe,le,me,"\u2021","\\ddagger"),ie(oe,le,me,"\u2240","\\wr",!0),ie(oe,le,me,"\u2a3f","\\amalg"),ie(oe,le,me,"&","\\And"),ie(oe,le,ye,"\u27f5","\\longleftarrow",!0),ie(oe,le,ye,"\u21d0","\\Leftarrow",!0),ie(oe,le,ye,"\u27f8","\\Longleftarrow",!0),ie(oe,le,ye,"\u27f6","\\longrightarrow",!0),ie(oe,le,ye,"\u21d2","\\Rightarrow",!0),ie(oe,le,ye,"\u27f9","\\Longrightarrow",!0),ie(oe,le,ye,"\u2194","\\leftrightarrow",!0),ie(oe,le,ye,"\u27f7","\\longleftrightarrow",!0),ie(oe,le,ye,"\u21d4","\\Leftrightarrow",!0),ie(oe,le,ye,"\u27fa","\\Longleftrightarrow",!0),ie(oe,le,ye,"\u21a6","\\mapsto",!0),ie(oe,le,ye,"\u27fc","\\longmapsto",!0),ie(oe,le,ye,"\u2197","\\nearrow",!0),ie(oe,le,ye,"\u21a9","\\hookleftarrow",!0),ie(oe,le,ye,"\u21aa","\\hookrightarrow",!0),ie(oe,le,ye,"\u2198","\\searrow",!0),ie(oe,le,ye,"\u21bc","\\leftharpoonup",!0),ie(oe,le,ye,"\u21c0","\\rightharpoonup",!0),ie(oe,le,ye,"\u2199","\\swarrow",!0),ie(oe,le,ye,"\u21bd","\\leftharpoondown",!0),ie(oe,le,ye,"\u21c1","\\rightharpoondown",!0),ie(oe,le,ye,"\u2196","\\nwarrow",!0),ie(oe,le,ye,"\u21cc","\\rightleftharpoons",!0),ie(oe,he,ye,"\u226e","\\nless",!0),ie(oe,he,ye,"\ue010","\\@nleqslant"),ie(oe,he,ye,"\ue011","\\@nleqq"),ie(oe,he,ye,"\u2a87","\\lneq",!0),ie(oe,he,ye,"\u2268","\\lneqq",!0),ie(oe,he,ye,"\ue00c","\\@lvertneqq"),ie(oe,he,ye,"\u22e6","\\lnsim",!0),ie(oe,he,ye,"\u2a89","\\lnapprox",!0),ie(oe,he,ye,"\u2280","\\nprec",!0),ie(oe,he,ye,"\u22e0","\\npreceq",!0),ie(oe,he,ye,"\u22e8","\\precnsim",!0),ie(oe,he,ye,"\u2ab9","\\precnapprox",!0),ie(oe,he,ye,"\u2241","\\nsim",!0),ie(oe,he,ye,"\ue006","\\@nshortmid"),ie(oe,he,ye,"\u2224","\\nmid",!0),ie(oe,he,ye,"\u22ac","\\nvdash",!0),ie(oe,he,ye,"\u22ad","\\nvDash",!0),ie(oe,he,ye,"\u22ea","\\ntriangleleft"),ie(oe,he,ye,"\u22ec","\\ntrianglelefteq",!0),ie(oe,he,ye,"\u228a","\\subsetneq",!0),ie(oe,he,ye,"\ue01a","\\@varsubsetneq"),ie(oe,he,ye,"\u2acb","\\subsetneqq",!0),ie(oe,he,ye,"\ue017","\\@varsubsetneqq"),ie(oe,he,ye,"\u226f","\\ngtr",!0),ie(oe,he,ye,"\ue00f","\\@ngeqslant"),ie(oe,he,ye,"\ue00e","\\@ngeqq"),ie(oe,he,ye,"\u2a88","\\gneq",!0),ie(oe,he,ye,"\u2269","\\gneqq",!0),ie(oe,he,ye,"\ue00d","\\@gvertneqq"),ie(oe,he,ye,"\u22e7","\\gnsim",!0),ie(oe,he,ye,"\u2a8a","\\gnapprox",!0),ie(oe,he,ye,"\u2281","\\nsucc",!0),ie(oe,he,ye,"\u22e1","\\nsucceq",!0),ie(oe,he,ye,"\u22e9","\\succnsim",!0),ie(oe,he,ye,"\u2aba","\\succnapprox",!0),ie(oe,he,ye,"\u2246","\\ncong",!0),ie(oe,he,ye,"\ue007","\\@nshortparallel"),ie(oe,he,ye,"\u2226","\\nparallel",!0),ie(oe,he,ye,"\u22af","\\nVDash",!0),ie(oe,he,ye,"\u22eb","\\ntriangleright"),ie(oe,he,ye,"\u22ed","\\ntrianglerighteq",!0),ie(oe,he,ye,"\ue018","\\@nsupseteqq"),ie(oe,he,ye,"\u228b","\\supsetneq",!0),ie(oe,he,ye,"\ue01b","\\@varsupsetneq"),ie(oe,he,ye,"\u2acc","\\supsetneqq",!0),ie(oe,he,ye,"\ue019","\\@varsupsetneqq"),ie(oe,he,ye,"\u22ae","\\nVdash",!0),ie(oe,he,ye,"\u2ab5","\\precneqq",!0),ie(oe,he,ye,"\u2ab6","\\succneqq",!0),ie(oe,he,ye,"\ue016","\\@nsubseteqq"),ie(oe,he,me,"\u22b4","\\unlhd"),ie(oe,he,me,"\u22b5","\\unrhd"),ie(oe,he,ye,"\u219a","\\nleftarrow",!0),ie(oe,he,ye,"\u219b","\\nrightarrow",!0),ie(oe,he,ye,"\u21cd","\\nLeftarrow",!0),ie(oe,he,ye,"\u21cf","\\nRightarrow",!0),ie(oe,he,ye,"\u21ae","\\nleftrightarrow",!0),ie(oe,he,ye,"\u21ce","\\nLeftrightarrow",!0),ie(oe,he,ye,"\u25b3","\\vartriangle"),ie(oe,he,xe,"\u210f","\\hslash"),ie(oe,he,xe,"\u25bd","\\triangledown"),ie(oe,he,xe,"\u25ca","\\lozenge"),ie(oe,he,xe,"\u24c8","\\circledS"),ie(oe,he,xe,"\xae","\\circledR"),ie(se,he,xe,"\xae","\\circledR"),ie(oe,he,xe,"\u2221","\\measuredangle",!0),ie(oe,he,xe,"\u2204","\\nexists"),ie(oe,he,xe,"\u2127","\\mho"),ie(oe,he,xe,"\u2132","\\Finv",!0),ie(oe,he,xe,"\u2141","\\Game",!0),ie(oe,he,xe,"\u2035","\\backprime"),ie(oe,he,xe,"\u25b2","\\blacktriangle"),ie(oe,he,xe,"\u25bc","\\blacktriangledown"),ie(oe,he,xe,"\u25a0","\\blacksquare"),ie(oe,he,xe,"\u29eb","\\blacklozenge"),ie(oe,he,xe,"\u2605","\\bigstar"),ie(oe,he,xe,"\u2222","\\sphericalangle",!0),ie(oe,he,xe,"\u2201","\\complement",!0),ie(oe,he,xe,"\xf0","\\eth",!0),ie(se,le,xe,"\xf0","\xf0"),ie(oe,he,xe,"\u2571","\\diagup"),ie(oe,he,xe,"\u2572","\\diagdown"),ie(oe,he,xe,"\u25a1","\\square"),ie(oe,he,xe,"\u25a1","\\Box"),ie(oe,he,xe,"\u25ca","\\Diamond"),ie(oe,he,xe,"\xa5","\\yen",!0),ie(se,he,xe,"\xa5","\\yen",!0),ie(oe,he,xe,"\u2713","\\checkmark",!0),ie(se,he,xe,"\u2713","\\checkmark"),ie(oe,he,xe,"\u2136","\\beth",!0),ie(oe,he,xe,"\u2138","\\daleth",!0),ie(oe,he,xe,"\u2137","\\gimel",!0),ie(oe,he,xe,"\u03dd","\\digamma",!0),ie(oe,he,xe,"\u03f0","\\varkappa"),ie(oe,he,ge,"\u250c","\\@ulcorner",!0),ie(oe,he,ue,"\u2510","\\@urcorner",!0),ie(oe,he,ge,"\u2514","\\@llcorner",!0),ie(oe,he,ue,"\u2518","\\@lrcorner",!0),ie(oe,he,ye,"\u2266","\\leqq",!0),ie(oe,he,ye,"\u2a7d","\\leqslant",!0),ie(oe,he,ye,"\u2a95","\\eqslantless",!0),ie(oe,he,ye,"\u2272","\\lesssim",!0),ie(oe,he,ye,"\u2a85","\\lessapprox",!0),ie(oe,he,ye,"\u224a","\\approxeq",!0),ie(oe,he,me,"\u22d6","\\lessdot"),ie(oe,he,ye,"\u22d8","\\lll",!0),ie(oe,he,ye,"\u2276","\\lessgtr",!0),ie(oe,he,ye,"\u22da","\\lesseqgtr",!0),ie(oe,he,ye,"\u2a8b","\\lesseqqgtr",!0),ie(oe,he,ye,"\u2251","\\doteqdot"),ie(oe,he,ye,"\u2253","\\risingdotseq",!0),ie(oe,he,ye,"\u2252","\\fallingdotseq",!0),ie(oe,he,ye,"\u223d","\\backsim",!0),ie(oe,he,ye,"\u22cd","\\backsimeq",!0),ie(oe,he,ye,"\u2ac5","\\subseteqq",!0),ie(oe,he,ye,"\u22d0","\\Subset",!0),ie(oe,he,ye,"\u228f","\\sqsubset",!0),ie(oe,he,ye,"\u227c","\\preccurlyeq",!0),ie(oe,he,ye,"\u22de","\\curlyeqprec",!0),ie(oe,he,ye,"\u227e","\\precsim",!0),ie(oe,he,ye,"\u2ab7","\\precapprox",!0),ie(oe,he,ye,"\u22b2","\\vartriangleleft"),ie(oe,he,ye,"\u22b4","\\trianglelefteq"),ie(oe,he,ye,"\u22a8","\\vDash",!0),ie(oe,he,ye,"\u22aa","\\Vvdash",!0),ie(oe,he,ye,"\u2323","\\smallsmile"),ie(oe,he,ye,"\u2322","\\smallfrown"),ie(oe,he,ye,"\u224f","\\bumpeq",!0),ie(oe,he,ye,"\u224e","\\Bumpeq",!0),ie(oe,he,ye,"\u2267","\\geqq",!0),ie(oe,he,ye,"\u2a7e","\\geqslant",!0),ie(oe,he,ye,"\u2a96","\\eqslantgtr",!0),ie(oe,he,ye,"\u2273","\\gtrsim",!0),ie(oe,he,ye,"\u2a86","\\gtrapprox",!0),ie(oe,he,me,"\u22d7","\\gtrdot"),ie(oe,he,ye,"\u22d9","\\ggg",!0),ie(oe,he,ye,"\u2277","\\gtrless",!0),ie(oe,he,ye,"\u22db","\\gtreqless",!0),ie(oe,he,ye,"\u2a8c","\\gtreqqless",!0),ie(oe,he,ye,"\u2256","\\eqcirc",!0),ie(oe,he,ye,"\u2257","\\circeq",!0),ie(oe,he,ye,"\u225c","\\triangleq",!0),ie(oe,he,ye,"\u223c","\\thicksim"),ie(oe,he,ye,"\u2248","\\thickapprox"),ie(oe,he,ye,"\u2ac6","\\supseteqq",!0),ie(oe,he,ye,"\u22d1","\\Supset",!0),ie(oe,he,ye,"\u2290","\\sqsupset",!0),ie(oe,he,ye,"\u227d","\\succcurlyeq",!0),ie(oe,he,ye,"\u22df","\\curlyeqsucc",!0),ie(oe,he,ye,"\u227f","\\succsim",!0),ie(oe,he,ye,"\u2ab8","\\succapprox",!0),ie(oe,he,ye,"\u22b3","\\vartriangleright"),ie(oe,he,ye,"\u22b5","\\trianglerighteq"),ie(oe,he,ye,"\u22a9","\\Vdash",!0),ie(oe,he,ye,"\u2223","\\shortmid"),ie(oe,he,ye,"\u2225","\\shortparallel"),ie(oe,he,ye,"\u226c","\\between",!0),ie(oe,he,ye,"\u22d4","\\pitchfork",!0),ie(oe,he,ye,"\u221d","\\varpropto"),ie(oe,he,ye,"\u25c0","\\blacktriangleleft"),ie(oe,he,ye,"\u2234","\\therefore",!0),ie(oe,he,ye,"\u220d","\\backepsilon"),ie(oe,he,ye,"\u25b6","\\blacktriangleright"),ie(oe,he,ye,"\u2235","\\because",!0),ie(oe,he,ye,"\u22d8","\\llless"),ie(oe,he,ye,"\u22d9","\\gggtr"),ie(oe,he,me,"\u22b2","\\lhd"),ie(oe,he,me,"\u22b3","\\rhd"),ie(oe,he,ye,"\u2242","\\eqsim",!0),ie(oe,le,ye,"\u22c8","\\Join"),ie(oe,he,ye,"\u2251","\\Doteq",!0),ie(oe,he,me,"\u2214","\\dotplus",!0),ie(oe,he,me,"\u2216","\\smallsetminus"),ie(oe,he,me,"\u22d2","\\Cap",!0),ie(oe,he,me,"\u22d3","\\Cup",!0),ie(oe,he,me,"\u2a5e","\\doublebarwedge",!0),ie(oe,he,me,"\u229f","\\boxminus",!0),ie(oe,he,me,"\u229e","\\boxplus",!0),ie(oe,he,me,"\u22c7","\\divideontimes",!0),ie(oe,he,me,"\u22c9","\\ltimes",!0),ie(oe,he,me,"\u22ca","\\rtimes",!0),ie(oe,he,me,"\u22cb","\\leftthreetimes",!0),ie(oe,he,me,"\u22cc","\\rightthreetimes",!0),ie(oe,he,me,"\u22cf","\\curlywedge",!0),ie(oe,he,me,"\u22ce","\\curlyvee",!0),ie(oe,he,me,"\u229d","\\circleddash",!0),ie(oe,he,me,"\u229b","\\circledast",!0),ie(oe,he,me,"\u22c5","\\centerdot"),ie(oe,he,me,"\u22ba","\\intercal",!0),ie(oe,he,me,"\u22d2","\\doublecap"),ie(oe,he,me,"\u22d3","\\doublecup"),ie(oe,he,me,"\u22a0","\\boxtimes",!0),ie(oe,he,ye,"\u21e2","\\dashrightarrow",!0),ie(oe,he,ye,"\u21e0","\\dashleftarrow",!0),ie(oe,he,ye,"\u21c7","\\leftleftarrows",!0),ie(oe,he,ye,"\u21c6","\\leftrightarrows",!0),ie(oe,he,ye,"\u21da","\\Lleftarrow",!0),ie(oe,he,ye,"\u219e","\\twoheadleftarrow",!0),ie(oe,he,ye,"\u21a2","\\leftarrowtail",!0),ie(oe,he,ye,"\u21ab","\\looparrowleft",!0),ie(oe,he,ye,"\u21cb","\\leftrightharpoons",!0),ie(oe,he,ye,"\u21b6","\\curvearrowleft",!0),ie(oe,he,ye,"\u21ba","\\circlearrowleft",!0),ie(oe,he,ye,"\u21b0","\\Lsh",!0),ie(oe,he,ye,"\u21c8","\\upuparrows",!0),ie(oe,he,ye,"\u21bf","\\upharpoonleft",!0),ie(oe,he,ye,"\u21c3","\\downharpoonleft",!0),ie(oe,le,ye,"\u22b6","\\origof",!0),ie(oe,le,ye,"\u22b7","\\imageof",!0),ie(oe,he,ye,"\u22b8","\\multimap",!0),ie(oe,he,ye,"\u21ad","\\leftrightsquigarrow",!0),ie(oe,he,ye,"\u21c9","\\rightrightarrows",!0),ie(oe,he,ye,"\u21c4","\\rightleftarrows",!0),ie(oe,he,ye,"\u21a0","\\twoheadrightarrow",!0),ie(oe,he,ye,"\u21a3","\\rightarrowtail",!0),ie(oe,he,ye,"\u21ac","\\looparrowright",!0),ie(oe,he,ye,"\u21b7","\\curvearrowright",!0),ie(oe,he,ye,"\u21bb","\\circlearrowright",!0),ie(oe,he,ye,"\u21b1","\\Rsh",!0),ie(oe,he,ye,"\u21ca","\\downdownarrows",!0),ie(oe,he,ye,"\u21be","\\upharpoonright",!0),ie(oe,he,ye,"\u21c2","\\downharpoonright",!0),ie(oe,he,ye,"\u21dd","\\rightsquigarrow",!0),ie(oe,he,ye,"\u21dd","\\leadsto"),ie(oe,he,ye,"\u21db","\\Rrightarrow",!0),ie(oe,he,ye,"\u21be","\\restriction"),ie(oe,le,xe,"\u2018",""),ie(oe,le,xe,"$","\\$"),ie(se,le,xe,"$","\\$"),ie(se,le,xe,"$","\\textdollar"),ie(oe,le,xe,"%","\\%"),ie(se,le,xe,"%","\\%"),ie(oe,le,xe,"_","\\_"),ie(se,le,xe,"_","\\_"),ie(se,le,xe,"_","\\textunderscore"),ie(oe,le,xe,"\u2220","\\angle",!0),ie(oe,le,xe,"\u221e","\\infty",!0),ie(oe,le,xe,"\u2032","\\prime"),ie(oe,le,xe,"\u25b3","\\triangle"),ie(oe,le,xe,"\u0393","\\Gamma",!0),ie(oe,le,xe,"\u0394","\\Delta",!0),ie(oe,le,xe,"\u0398","\\Theta",!0),ie(oe,le,xe,"\u039b","\\Lambda",!0),ie(oe,le,xe,"\u039e","\\Xi",!0),ie(oe,le,xe,"\u03a0","\\Pi",!0),ie(oe,le,xe,"\u03a3","\\Sigma",!0),ie(oe,le,xe,"\u03a5","\\Upsilon",!0),ie(oe,le,xe,"\u03a6","\\Phi",!0),ie(oe,le,xe,"\u03a8","\\Psi",!0),ie(oe,le,xe,"\u03a9","\\Omega",!0),ie(oe,le,xe,"A","\u0391"),ie(oe,le,xe,"B","\u0392"),ie(oe,le,xe,"E","\u0395"),ie(oe,le,xe,"Z","\u0396"),ie(oe,le,xe,"H","\u0397"),ie(oe,le,xe,"I","\u0399"),ie(oe,le,xe,"K","\u039a"),ie(oe,le,xe,"M","\u039c"),ie(oe,le,xe,"N","\u039d"),ie(oe,le,xe,"O","\u039f"),ie(oe,le,xe,"P","\u03a1"),ie(oe,le,xe,"T","\u03a4"),ie(oe,le,xe,"X","\u03a7"),ie(oe,le,xe,"\xac","\\neg",!0),ie(oe,le,xe,"\xac","\\lnot"),ie(oe,le,xe,"\u22a4","\\top"),ie(oe,le,xe,"\u22a5","\\bot"),ie(oe,le,xe,"\u2205","\\emptyset"),ie(oe,he,xe,"\u2205","\\varnothing"),ie(oe,le,de,"\u03b1","\\alpha",!0),ie(oe,le,de,"\u03b2","\\beta",!0),ie(oe,le,de,"\u03b3","\\gamma",!0),ie(oe,le,de,"\u03b4","\\delta",!0),ie(oe,le,de,"\u03f5","\\epsilon",!0),ie(oe,le,de,"\u03b6","\\zeta",!0),ie(oe,le,de,"\u03b7","\\eta",!0),ie(oe,le,de,"\u03b8","\\theta",!0),ie(oe,le,de,"\u03b9","\\iota",!0),ie(oe,le,de,"\u03ba","\\kappa",!0),ie(oe,le,de,"\u03bb","\\lambda",!0),ie(oe,le,de,"\u03bc","\\mu",!0),ie(oe,le,de,"\u03bd","\\nu",!0),ie(oe,le,de,"\u03be","\\xi",!0),ie(oe,le,de,"\u03bf","\\omicron",!0),ie(oe,le,de,"\u03c0","\\pi",!0),ie(oe,le,de,"\u03c1","\\rho",!0),ie(oe,le,de,"\u03c3","\\sigma",!0),ie(oe,le,de,"\u03c4","\\tau",!0),ie(oe,le,de,"\u03c5","\\upsilon",!0),ie(oe,le,de,"\u03d5","\\phi",!0),ie(oe,le,de,"\u03c7","\\chi",!0),ie(oe,le,de,"\u03c8","\\psi",!0),ie(oe,le,de,"\u03c9","\\omega",!0),ie(oe,le,de,"\u03b5","\\varepsilon",!0),ie(oe,le,de,"\u03d1","\\vartheta",!0),ie(oe,le,de,"\u03d6","\\varpi",!0),ie(oe,le,de,"\u03f1","\\varrho",!0),ie(oe,le,de,"\u03c2","\\varsigma",!0),ie(oe,le,de,"\u03c6","\\varphi",!0),ie(oe,le,me,"\u2217","*",!0),ie(oe,le,me,"+","+"),ie(oe,le,me,"\u2212","-",!0),ie(oe,le,me,"\u22c5","\\cdot",!0),ie(oe,le,me,"\u2218","\\circ",!0),ie(oe,le,me,"\xf7","\\div",!0),ie(oe,le,me,"\xb1","\\pm",!0),ie(oe,le,me,"\xd7","\\times",!0),ie(oe,le,me,"\u2229","\\cap",!0),ie(oe,le,me,"\u222a","\\cup",!0),ie(oe,le,me,"\u2216","\\setminus",!0),ie(oe,le,me,"\u2227","\\land"),ie(oe,le,me,"\u2228","\\lor"),ie(oe,le,me,"\u2227","\\wedge",!0),ie(oe,le,me,"\u2228","\\vee",!0),ie(oe,le,xe,"\u221a","\\surd"),ie(oe,le,ge,"\u27e8","\\langle",!0),ie(oe,le,ge,"\u2223","\\lvert"),ie(oe,le,ge,"\u2225","\\lVert"),ie(oe,le,ue,"?","?"),ie(oe,le,ue,"!","!"),ie(oe,le,ue,"\u27e9","\\rangle",!0),ie(oe,le,ue,"\u2223","\\rvert"),ie(oe,le,ue,"\u2225","\\rVert"),ie(oe,le,ye,"=","="),ie(oe,le,ye,":",":"),ie(oe,le,ye,"\u2248","\\approx",!0),ie(oe,le,ye,"\u2245","\\cong",!0),ie(oe,le,ye,"\u2265","\\ge"),ie(oe,le,ye,"\u2265","\\geq",!0),ie(oe,le,ye,"\u2190","\\gets"),ie(oe,le,ye,">","\\gt",!0),ie(oe,le,ye,"\u2208","\\in",!0),ie(oe,le,ye,"\ue020","\\@not"),ie(oe,le,ye,"\u2282","\\subset",!0),ie(oe,le,ye,"\u2283","\\supset",!0),ie(oe,le,ye,"\u2286","\\subseteq",!0),ie(oe,le,ye,"\u2287","\\supseteq",!0),ie(oe,he,ye,"\u2288","\\nsubseteq",!0),ie(oe,he,ye,"\u2289","\\nsupseteq",!0),ie(oe,le,ye,"\u22a8","\\models"),ie(oe,le,ye,"\u2190","\\leftarrow",!0),ie(oe,le,ye,"\u2264","\\le"),ie(oe,le,ye,"\u2264","\\leq",!0),ie(oe,le,ye,"<","\\lt",!0),ie(oe,le,ye,"\u2192","\\rightarrow",!0),ie(oe,le,ye,"\u2192","\\to"),ie(oe,he,ye,"\u2271","\\ngeq",!0),ie(oe,he,ye,"\u2270","\\nleq",!0),ie(oe,le,be,"\xa0","\\ "),ie(oe,le,be,"\xa0","\\space"),ie(oe,le,be,"\xa0","\\nobreakspace"),ie(se,le,be,"\xa0","\\ "),ie(se,le,be,"\xa0"," "),ie(se,le,be,"\xa0","\\space"),ie(se,le,be,"\xa0","\\nobreakspace"),ie(oe,le,be,null,"\\nobreak"),ie(oe,le,be,null,"\\allowbreak"),ie(oe,le,ve,",",","),ie(oe,le,ve,";",";"),ie(oe,he,me,"\u22bc","\\barwedge",!0),ie(oe,he,me,"\u22bb","\\veebar",!0),ie(oe,le,me,"\u2299","\\odot",!0),ie(oe,le,me,"\u2295","\\oplus",!0),ie(oe,le,me,"\u2297","\\otimes",!0),ie(oe,le,xe,"\u2202","\\partial",!0),ie(oe,le,me,"\u2298","\\oslash",!0),ie(oe,he,me,"\u229a","\\circledcirc",!0),ie(oe,he,me,"\u22a1","\\boxdot",!0),ie(oe,le,me,"\u25b3","\\bigtriangleup"),ie(oe,le,me,"\u25bd","\\bigtriangledown"),ie(oe,le,me,"\u2020","\\dagger"),ie(oe,le,me,"\u22c4","\\diamond"),ie(oe,le,me,"\u22c6","\\star"),ie(oe,le,me,"\u25c3","\\triangleleft"),ie(oe,le,me,"\u25b9","\\triangleright"),ie(oe,le,ge,"{","\\{"),ie(se,le,xe,"{","\\{"),ie(se,le,xe,"{","\\textbraceleft"),ie(oe,le,ue,"}","\\}"),ie(se,le,xe,"}","\\}"),ie(se,le,xe,"}","\\textbraceright"),ie(oe,le,ge,"{","\\lbrace"),ie(oe,le,ue,"}","\\rbrace"),ie(oe,le,ge,"[","\\lbrack",!0),ie(se,le,xe,"[","\\lbrack",!0),ie(oe,le,ue,"]","\\rbrack",!0),ie(se,le,xe,"]","\\rbrack",!0),ie(oe,le,ge,"(","\\lparen",!0),ie(oe,le,ue,")","\\rparen",!0),ie(se,le,xe,"<","\\textless",!0),ie(se,le,xe,">","\\textgreater",!0),ie(oe,le,ge,"\u230a","\\lfloor",!0),ie(oe,le,ue,"\u230b","\\rfloor",!0),ie(oe,le,ge,"\u2308","\\lceil",!0),ie(oe,le,ue,"\u2309","\\rceil",!0),ie(oe,le,xe,"\\","\\backslash"),ie(oe,le,xe,"\u2223","|"),ie(oe,le,xe,"\u2223","\\vert"),ie(se,le,xe,"|","\\textbar",!0),ie(oe,le,xe,"\u2225","\\|"),ie(oe,le,xe,"\u2225","\\Vert"),ie(se,le,xe,"\u2225","\\textbardbl"),ie(se,le,xe,"~","\\textasciitilde"),ie(se,le,xe,"\\","\\textbackslash"),ie(se,le,xe,"^","\\textasciicircum"),ie(oe,le,ye,"\u2191","\\uparrow",!0),ie(oe,le,ye,"\u21d1","\\Uparrow",!0),ie(oe,le,ye,"\u2193","\\downarrow",!0),ie(oe,le,ye,"\u21d3","\\Downarrow",!0),ie(oe,le,ye,"\u2195","\\updownarrow",!0),ie(oe,le,ye,"\u21d5","\\Updownarrow",!0),ie(oe,le,fe,"\u2210","\\coprod"),ie(oe,le,fe,"\u22c1","\\bigvee"),ie(oe,le,fe,"\u22c0","\\bigwedge"),ie(oe,le,fe,"\u2a04","\\biguplus"),ie(oe,le,fe,"\u22c2","\\bigcap"),ie(oe,le,fe,"\u22c3","\\bigcup"),ie(oe,le,fe,"\u222b","\\int"),ie(oe,le,fe,"\u222b","\\intop"),ie(oe,le,fe,"\u222c","\\iint"),ie(oe,le,fe,"\u222d","\\iiint"),ie(oe,le,fe,"\u220f","\\prod"),ie(oe,le,fe,"\u2211","\\sum"),ie(oe,le,fe,"\u2a02","\\bigotimes"),ie(oe,le,fe,"\u2a01","\\bigoplus"),ie(oe,le,fe,"\u2a00","\\bigodot"),ie(oe,le,fe,"\u222e","\\oint"),ie(oe,le,fe,"\u222f","\\oiint"),ie(oe,le,fe,"\u2230","\\oiiint"),ie(oe,le,fe,"\u2a06","\\bigsqcup"),ie(oe,le,fe,"\u222b","\\smallint"),ie(se,le,pe,"\u2026","\\textellipsis"),ie(oe,le,pe,"\u2026","\\mathellipsis"),ie(se,le,pe,"\u2026","\\ldots",!0),ie(oe,le,pe,"\u2026","\\ldots",!0),ie(oe,le,pe,"\u22ef","\\@cdots",!0),ie(oe,le,pe,"\u22f1","\\ddots",!0),ie(oe,le,xe,"\u22ee","\\varvdots"),ie(oe,le,ce,"\u02ca","\\acute"),ie(oe,le,ce,"\u02cb","\\grave"),ie(oe,le,ce,"\xa8","\\ddot"),ie(oe,le,ce,"~","\\tilde"),ie(oe,le,ce,"\u02c9","\\bar"),ie(oe,le,ce,"\u02d8","\\breve"),ie(oe,le,ce,"\u02c7","\\check"),ie(oe,le,ce,"^","\\hat"),ie(oe,le,ce,"\u20d7","\\vec"),ie(oe,le,ce,"\u02d9","\\dot"),ie(oe,le,ce,"\u02da","\\mathring"),ie(oe,le,de,"\ue131","\\@imath"),ie(oe,le,de,"\ue237","\\@jmath"),ie(oe,le,xe,"\u0131","\u0131"),ie(oe,le,xe,"\u0237","\u0237"),ie(se,le,xe,"\u0131","\\i",!0),ie(se,le,xe,"\u0237","\\j",!0),ie(se,le,xe,"\xdf","\\ss",!0),ie(se,le,xe,"\xe6","\\ae",!0),ie(se,le,xe,"\u0153","\\oe",!0),ie(se,le,xe,"\xf8","\\o",!0),ie(se,le,xe,"\xc6","\\AE",!0),ie(se,le,xe,"\u0152","\\OE",!0),ie(se,le,xe,"\xd8","\\O",!0),ie(se,le,ce,"\u02ca","\\'"),ie(se,le,ce,"\u02cb","\\"),ie(se,le,ce,"\u02c6","\\^"),ie(se,le,ce,"\u02dc","\\~"),ie(se,le,ce,"\u02c9","\\="),ie(se,le,ce,"\u02d8","\\u"),ie(se,le,ce,"\u02d9","\\."),ie(se,le,ce,"\xb8","\\c"),ie(se,le,ce,"\u02da","\\r"),ie(se,le,ce,"\u02c7","\\v"),ie(se,le,ce,"\xa8",'\\"'),ie(se,le,ce,"\u02dd","\\H"),ie(se,le,ce,"\u25ef","\\textcircled");var we={"--":!0,"---":!0,"`":!0,"''":!0};ie(se,le,xe,"\u2013","--",!0),ie(se,le,xe,"\u2013","\\textendash"),ie(se,le,xe,"\u2014","---",!0),ie(se,le,xe,"\u2014","\\textemdash"),ie(se,le,xe,"\u2018","",!0),ie(se,le,xe,"\u2018","\\textquoteleft"),ie(se,le,xe,"\u2019","'",!0),ie(se,le,xe,"\u2019","\\textquoteright"),ie(se,le,xe,"\u201c","",!0),ie(se,le,xe,"\u201c","\\textquotedblleft"),ie(se,le,xe,"\u201d","''",!0),ie(se,le,xe,"\u201d","\\textquotedblright"),ie(oe,le,xe,"\xb0","\\degree",!0),ie(se,le,xe,"\xb0","\\degree"),ie(se,le,xe,"\xb0","\\textdegree",!0),ie(oe,le,xe,"\xa3","\\pounds"),ie(oe,le,xe,"\xa3","\\mathsterling",!0),ie(se,le,xe,"\xa3","\\pounds"),ie(se,le,xe,"\xa3","\\textsterling",!0),ie(oe,he,xe,"\u2720","\\maltese"),ie(se,he,xe,"\u2720","\\maltese");for(var ke='0123456789/@."',Se=0;Se<ke.length;Se++){var Me=ke.charAt(Se);ie(oe,le,xe,Me,Me)}for(var ze='0123456789!@*()-=+";:?/.,',Ae=0;Ae<ze.length;Ae++){var Te=ze.charAt(Ae);ie(se,le,xe,Te,Te)}for(var Be="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",Ce=0;Ce<Be.length;Ce++){var Ne=Be.charAt(Ce);ie(oe,le,de,Ne,Ne),ie(se,le,xe,Ne,Ne)}ie(oe,he,xe,"C","\u2102"),ie(se,he,xe,"C","\u2102"),ie(oe,he,xe,"H","\u210d"),ie(se,he,xe,"H","\u210d"),ie(oe,he,xe,"N","\u2115"),ie(se,he,xe,"N","\u2115"),ie(oe,he,xe,"P","\u2119"),ie(se,he,xe,"P","\u2119"),ie(oe,he,xe,"Q","\u211a"),ie(se,he,xe,"Q","\u211a"),ie(oe,he,xe,"R","\u211d"),ie(se,he,xe,"R","\u211d"),ie(oe,he,xe,"Z","\u2124"),ie(se,he,xe,"Z","\u2124"),ie(oe,le,de,"h","\u210e"),ie(se,le,de,"h","\u210e");for(var qe="",Ie=0;Ie<Be.length;Ie++){var Re=Be.charAt(Ie);ie(oe,le,de,Re,qe=String.fromCharCode(55349,56320+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56372+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56424+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56580+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56736+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56788+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56840+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56944+Ie)),ie(se,le,xe,Re,qe),Ie<26&&(ie(oe,le,de,Re,qe=String.fromCharCode(55349,56632+Ie)),ie(se,le,xe,Re,qe),ie(oe,le,de,Re,qe=String.fromCharCode(55349,56476+Ie)),ie(se,le,xe,Re,qe))}ie(oe,le,de,"k",qe=String.fromCharCode(55349,56668)),ie(se,le,xe,"k",qe);for(var He=0;He<10;He++){var Oe=He.toString();ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57294+He)),ie(se,le,xe,Oe,qe),ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57314+He)),ie(se,le,xe,Oe,qe),ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57324+He)),ie(se,le,xe,Oe,qe),ie(oe,le,de,Oe,qe=String.fromCharCode(55349,57334+He)),ie(se,le,xe,Oe,qe)}for(var Ee="\xd0\xde\xfe",Le=0;Le<Ee.length;Le++){var De=Ee.charAt(Le);ie(oe,le,de,De,De),ie(se,le,xe,De,De)}var Ve=[["mathbf","textbf","Main-Bold"],["mathbf","textbf","Main-Bold"],["mathnormal","textit","Math-Italic"],["mathnormal","textit","Math-Italic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["mathscr","textscr","Script-Regular"],["","",""],["","",""],["","",""],["mathfrak","textfrak","Fraktur-Regular"],["mathfrak","textfrak","Fraktur-Regular"],["mathbb","textbb","AMS-Regular"],["mathbb","textbb","AMS-Regular"],["","",""],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathitsf","textitsf","SansSerif-Italic"],["mathitsf","textitsf","SansSerif-Italic"],["","",""],["","",""],["mathtt","texttt","Typewriter-Regular"],["mathtt","texttt","Typewriter-Regular"]],Pe=[["mathbf","textbf","Main-Bold"],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathtt","texttt","Typewriter-Regular"]],Fe=function(e,t,r){return ae[r][e]&&ae[r][e].replace&&(e=ae[r][e].replace),{value:e,metrics:N(e,t,r)}},Ge=function(e,t,r,n,a){var i,o=Fe(e,t,r),s=o.metrics;if(e=o.value,s){var l=s.italic;("text"===r||n&&"mathit"===n.font)&&(l=0),i=new Z(e,s.height,s.depth,l,s.skew,s.width,a)}else"undefined"!=typeof console&&console.warn("No character metrics for '"+e+"' in style '"+t+"' and mode '"+r+"'"),i=new Z(e,0,0,0,0,0,a);if(n){i.maxFontSize=n.sizeMultiplier,n.style.isTight()&&i.classes.push("mtight");var h=n.getColor();h&&(i.style.color=h)}return i},Ue=function(e,t){if(G(e.classes)!==G(t.classes)||e.skew!==t.skew||e.maxFontSize!==t.maxFontSize)return!1;if(1===e.classes.length){var r=e.classes[0];if("mbin"===r||"mord"===r)return!1}for(var n in e.style)if(e.style.hasOwnProperty(n)&&e.style[n]!==t.style[n])return!1;for(var a in t.style)if(t.style.hasOwnProperty(a)&&e.style[a]!==t.style[a])return!1;return!0},Ye=function(e){for(var t=0,r=0,n=0,a=0;a<e.children.length;a++){var i=e.children[a];i.height>t&&(t=i.height),i.depth>r&&(r=i.depth),i.maxFontSize>n&&(n=i.maxFontSize)}e.height=t,e.depth=r,e.maxFontSize=n},Xe=function(e,t,r,n){var a=new W(e,t,r,n);return Ye(a),a},We=function(e,t,r,n){return new W(e,t,r,n)},_e=function(e){var t=new A(e);return Ye(t),t},je=function(e,t,r){var n="";switch(e){case"amsrm":n="AMS";break;case"textrm":n="Main";break;case"textsf":n="SansSerif";break;case"texttt":n="Typewriter";break;default:n=e}return n+"-"+("textbf"===t&&"textit"===r?"BoldItalic":"textbf"===t?"Bold":"textit"===t?"Italic":"Regular")},$e={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathit:{variant:"italic",fontName:"Main-Italic"},mathnormal:{variant:"italic",fontName:"Math-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}},Ze={vec:["vec",.471,.714],oiintSize1:["oiintSize1",.957,.499],oiintSize2:["oiintSize2",1.472,.659],oiiintSize1:["oiiintSize1",1.304,.499],oiiintSize2:["oiiintSize2",1.98,.659]},Ke={fontMap:$e,makeSymbol:Ge,mathsym:function(e,t,r,n){return void 0===n&&(n=[]),"boldsymbol"===r.font&&Fe(e,"Main-Bold",t).metrics?Ge(e,"Main-Bold",t,r,n.concat(["mathbf"])):"\\"===e||"main"===ae[t][e].font?Ge(e,"Main-Regular",t,r,n):Ge(e,"AMS-Regular",t,r,n.concat(["amsrm"]))},makeSpan:Xe,makeSvgSpan:We,makeLineSpan:function(e,t,r){var n=Xe([e],[],t);return n.height=Math.max(r||t.fontMetrics().defaultRuleThickness,t.minRuleThickness),n.style.borderBottomWidth=F(n.height),n.maxFontSize=1,n},makeAnchor:function(e,t,r,n){var a=new _(e,t,r,n);return Ye(a),a},makeFragment:_e,wrapFragment:function(e,t){return e instanceof A?Xe([],[e],t):e},makeVList:function(e,t){for(var r=function(e){if("individualShift"===e.positionType){for(var t=e.children,r=[t[0]],n=-t[0].shift-t[0].elem.depth,a=n,i=1;i<t.length;i++){var o=-t[i].shift-a-t[i].elem.depth,s=o-(t[i-1].elem.height+t[i-1].elem.depth);a+=o,r.push({type:"kern",size:s}),r.push(t[i])}return{children:r,depth:n}}var l;if("top"===e.positionType){for(var h=e.positionData,c=0;c<e.children.length;c++){var m=e.children[c];h-="kern"===m.type?m.size:m.elem.height+m.elem.depth}l=h}else if("bottom"===e.positionType)l=-e.positionData;else{var u=e.children[0];if("elem"!==u.type)throw new Error('First child must have type "elem".');if("shift"===e.positionType)l=-u.elem.depth-e.positionData;else{if("firstBaseline"!==e.positionType)throw new Error("Invalid positionType "+e.positionType+".");l=-u.elem.depth}}return{children:e.children,depth:l}}(e),n=r.children,a=r.depth,i=0,o=0;o<n.length;o++){var s=n[o];if("elem"===s.type){var l=s.elem;i=Math.max(i,l.maxFontSize,l.height)}}i+=2;var h=Xe(["pstrut"],[]);h.style.height=F(i);for(var c=[],m=a,u=a,p=a,d=0;d<n.length;d++){var f=n[d];if("kern"===f.type)p+=f.size;else{var g=f.elem,v=f.wrapperClasses||[],y=f.wrapperStyle||{},b=Xe(v,[h,g],void 0,y);b.style.top=F(-i-p-g.depth),f.marginLeft&&(b.style.marginLeft=f.marginLeft),f.marginRight&&(b.style.marginRight=f.marginRight),c.push(b),p+=g.height+g.depth}m=Math.min(m,p),u=Math.max(u,p)}var x,w=Xe(["vlist"],c);if(w.style.height=F(u),m<0){var k=Xe([],[]),S=Xe(["vlist"],[k]);S.style.height=F(-m);var M=Xe(["vlist-s"],[new Z("\u200b")]);x=[Xe(["vlist-r"],[w,M]),Xe(["vlist-r"],[S])]}else x=[Xe(["vlist-r"],[w])];var z=Xe(["vlist-t"],x);return 2===x.length&&z.classes.push("vlist-t2"),z.height=u,z.depth=-m,z},makeOrd:function(e,t,r){var a=e.mode,i=e.text,o=["mord"],s="math"===a||"text"===a&&t.font,l=s?t.font:t.fontFamily;if(55349===i.charCodeAt(0)){var h=function(e,t){var r=1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320)+65536,a="math"===t?0:1;if(119808<=r&&r<120484){var i=Math.floor((r-119808)/26);return[Ve[i][2],Ve[i][a]]}if(120782<=r&&r<=120831){var o=Math.floor((r-120782)/10);return[Pe[o][2],Pe[o][a]]}if(120485===r||120486===r)return[Ve[0][2],Ve[0][a]];if(120486<r&&r<120782)return["",""];throw new n("Unsupported character: "+e)}(i,a),c=h[0],m=h[1];return Ge(i,c,a,t,o.concat(m))}if(l){var u,p;if("boldsymbol"===l){var d=function(e,t,r,n,a){return"textord"!==a&&Fe(e,"Math-BoldItalic",t).metrics?{fontName:"Math-BoldItalic",fontClass:"boldsymbol"}:{fontName:"Main-Bold",fontClass:"mathbf"}}(i,a,0,0,r);u=d.fontName,p=[d.fontClass]}else s?(u=$e[l].fontName,p=[l]):(u=je(l,t.fontWeight,t.fontShape),p=[l,t.fontWeight,t.fontShape]);if(Fe(i,u,a).metrics)return Ge(i,u,a,t,o.concat(p));if(we.hasOwnProperty(i)&&"Typewriter"===u.slice(0,10)){for(var f=[],g=0;g<i.length;g++)f.push(Ge(i[g],u,a,t,o.concat(p)));return _e(f)}}if("mathord"===r)return Ge(i,"Math-Italic",a,t,o.concat(["mathnormal"]));if("textord"===r){var v=ae[a][i]&&ae[a][i].font;if("ams"===v){var y=je("amsrm",t.fontWeight,t.fontShape);return Ge(i,y,a,t,o.concat("amsrm",t.fontWeight,t.fontShape))}if("main"!==v&&v){var b=je(v,t.fontWeight,t.fontShape);return Ge(i,b,a,t,o.concat(b,t.fontWeight,t.fontShape))}var x=je("textrm",t.fontWeight,t.fontShape);return Ge(i,x,a,t,o.concat(t.fontWeight,t.fontShape))}throw new Error("unexpected type: "+r+" in makeOrd")},makeGlue:function(e,t){var r=Xe(["mspace"],[],t),n=P(e,t);return r.style.marginRight=F(n),r},staticSvg:function(e,t){var r=Ze[e],n=r[0],a=r[1],i=r[2],o=new J(n),s=new K([o],{width:F(a),height:F(i),style:"width:"+F(a),viewBox:"0 0 "+1e3*a+" "+1e3*i,preserveAspectRatio:"xMinYMin"}),l=We(["overlay"],[s],t);return l.height=i,l.style.height=F(i),l.style.width=F(a),l},svgData:Ze,tryCombineChars:function(e){for(var t=0;t<e.length-1;t++){var r=e[t],n=e[t+1];r instanceof Z&&n instanceof Z&&Ue(r,n)&&(r.text+=n.text,r.height=Math.max(r.height,n.height),r.depth=Math.max(r.depth,n.depth),r.italic=n.italic,e.splice(t+1,1),t--)}return e}},Je={number:3,unit:"mu"},Qe={number:4,unit:"mu"},et={number:5,unit:"mu"},tt={mord:{mop:Je,mbin:Qe,mrel:et,minner:Je},mop:{mord:Je,mop:Je,mrel:et,minner:Je},mbin:{mord:Qe,mop:Qe,mopen:Qe,minner:Qe},mrel:{mord:et,mop:et,mopen:et,minner:et},mopen:{},mclose:{mop:Je,mbin:Qe,mrel:et,minner:Je},mpunct:{mord:Je,mop:Je,mrel:et,mopen:Je,mclose:Je,mpunct:Je,minner:Je},minner:{mord:Je,mop:Je,mbin:Qe,mrel:et,mopen:Je,mpunct:Je,minner:Je}},rt={mord:{mop:Je},mop:{mord:Je,mop:Je},mbin:{},mrel:{},mopen:{},mclose:{mop:Je},mpunct:{},minner:{mop:Je}},nt={},at={},it={};function ot(e){for(var t=e.type,r=e.names,n=e.props,a=e.handler,i=e.htmlBuilder,o=e.mathmlBuilder,s={type:t,numArgs:n.numArgs,argTypes:n.argTypes,allowedInArgument:!!n.allowedInArgument,allowedInText:!!n.allowedInText,allowedInMath:void 0===n.allowedInMath||n.allowedInMath,numOptionalArgs:n.numOptionalArgs||0,infix:!!n.infix,primitive:!!n.primitive,handler:a},l=0;l<r.length;++l)nt[r[l]]=s;t&&(i&&(at[t]=i),o&&(it[t]=o))}function st(e){ot({type:e.type,names:[],props:{numArgs:0},handler:function(){throw new Error("Should never be called.")},htmlBuilder:e.htmlBuilder,mathmlBuilder:e.mathmlBuilder})}var lt=function(e){return"ordgroup"===e.type&&1===e.body.length?e.body[0]:e},ht=function(e){return"ordgroup"===e.type?e.body:[e]},ct=Ke.makeSpan,mt=["leftmost","mbin","mopen","mrel","mop","mpunct"],ut=["rightmost","mrel","mclose","mpunct"],pt={display:x.DISPLAY,text:x.TEXT,script:x.SCRIPT,scriptscript:x.SCRIPTSCRIPT},dt={mord:"mord",mop:"mop",mbin:"mbin",mrel:"mrel",mopen:"mopen",mclose:"mclose",mpunct:"mpunct",minner:"minner"},ft=function(e,t,r,n){void 0===n&&(n=[null,null]);for(var a=[],i=0;i<e.length;i++){var o=wt(e[i],t);if(o instanceof A){var s=o.children;a.push.apply(a,s)}else a.push(o)}if(Ke.tryCombineChars(a),!r)return a;var h=t;if(1===e.length){var c=e[0];"sizing"===c.type?h=t.havingSize(c.size):"styling"===c.type&&(h=t.havingStyle(pt[c.style]))}var m=ct([n[0]||"leftmost"],[],t),u=ct([n[1]||"rightmost"],[],t),p="root"===r;return gt(a,(function(e,t){var r=t.classes[0],n=e.classes[0];"mbin"===r&&l.contains(ut,n)?t.classes[0]="mord":"mbin"===n&&l.contains(mt,r)&&(e.classes[0]="mord")}),{node:m},u,p),gt(a,(function(e,t){var r=bt(t),n=bt(e),a=r&&n?e.hasClass("mtight")?rt[r][n]:tt[r][n]:null;if(a)return Ke.makeGlue(a,h)}),{node:m},u,p),a},gt=function e(t,r,n,a,i){a&&t.push(a);for(var o=0;o<t.length;o++){var s=t[o],l=vt(s);if(l)e(l.children,r,n,null,i);else{var h=!s.hasClass("mspace");if(h){var c=r(s,n.node);c&&(n.insertAfter?n.insertAfter(c):(t.unshift(c),o++))}h?n.node=s:i&&s.hasClass("newline")&&(n.node=ct(["leftmost"])),n.insertAfter=function(e){return function(r){t.splice(e+1,0,r),o++}}(o)}}a&&t.pop()},vt=function(e){return e instanceof A||e instanceof _||e instanceof W&&e.hasClass("enclosing")?e:null},yt=function e(t,r){var n=vt(t);if(n){var a=n.children;if(a.length){if("right"===r)return e(a[a.length-1],"right");if("left"===r)return e(a[0],"left")}}return t},bt=function(e,t){return e?(t&&(e=yt(e,t)),dt[e.classes[0]]||null):null},xt=function(e,t){var r=["nulldelimiter"].concat(e.baseSizingClasses());return ct(t.concat(r))},wt=function(e,t,r){if(!e)return ct();if(at[e.type]){var a=at[e.type](e,t);if(r&&t.size!==r.size){a=ct(t.sizingClasses(r),[a],t);var i=t.sizeMultiplier/r.sizeMultiplier;a.height*=i,a.depth*=i}return a}throw new n("Got group of unknown type: '"+e.type+"'")};function kt(e,t){var r=ct(["base"],e,t),n=ct(["strut"]);return n.style.height=F(r.height+r.depth),r.depth&&(n.style.verticalAlign=F(-r.depth)),r.children.unshift(n),r}function St(e,t){var r=null;1===e.length&&"tag"===e[0].type&&(r=e[0].tag,e=e[0].body);var n,a=ft(e,t,"root");2===a.length&&a[1].hasClass("tag")&&(n=a.pop());for(var i,o=[],s=[],l=0;l<a.length;l++)if(s.push(a[l]),a[l].hasClass("mbin")||a[l].hasClass("mrel")||a[l].hasClass("allowbreak")){for(var h=!1;l<a.length-1&&a[l+1].hasClass("mspace")&&!a[l+1].hasClass("newline");)l++,s.push(a[l]),a[l].hasClass("nobreak")&&(h=!0);h||(o.push(kt(s,t)),s=[])}else a[l].hasClass("newline")&&(s.pop(),s.length>0&&(o.push(kt(s,t)),s=[]),o.push(a[l]));s.length>0&&o.push(kt(s,t)),r?((i=kt(ft(r,t,!0))).classes=["tag"],o.push(i)):n&&o.push(n);var c=ct(["katex-html"],o);if(c.setAttribute("aria-hidden","true"),i){var m=i.children[0];m.style.height=F(c.height+c.depth),c.depth&&(m.style.verticalAlign=F(-c.depth))}return c}function Mt(e){return new A(e)}var zt=function(){function e(e,t,r){this.type=void 0,this.attributes=void 0,this.children=void 0,this.classes=void 0,this.type=e,this.attributes={},this.children=t||[],this.classes=r||[]}var t=e.prototype;return t.setAttribute=function(e,t){this.attributes[e]=t},t.getAttribute=function(e){return this.attributes[e]},t.toNode=function(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&e.setAttribute(t,this.attributes[t]);this.classes.length>0&&(e.className=G(this.classes));for(var r=0;r<this.children.length;r++)e.appendChild(this.children[r].toNode());return e},t.toMarkup=function(){var e="<"+this.type;for(var t in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,t)&&(e+=" "+t+'="',e+=l.escape(this.attributes[t]),e+='"');this.classes.length>0&&(e+=' class ="'+l.escape(G(this.classes))+'"'),e+=">";for(var r=0;r<this.children.length;r++)e+=this.children[r].toMarkup();return e+="</"+this.type+">"},t.toText=function(){return this.children.map((function(e){return e.toText()})).join("")},e}(),At=function(){function e(e){this.text=void 0,this.text=e}var t=e.prototype;return t.toNode=function(){return document.createTextNode(this.text)},t.toMarkup=function(){return l.escape(this.toText())},t.toText=function(){return this.text},e}(),Tt={MathNode:zt,TextNode:At,SpaceNode:function(){function e(e){this.width=void 0,this.character=void 0,this.width=e,this.character=e>=.05555&&e<=.05556?"\u200a":e>=.1666&&e<=.1667?"\u2009":e>=.2222&&e<=.2223?"\u2005":e>=.2777&&e<=.2778?"\u2005\u200a":e>=-.05556&&e<=-.05555?"\u200a\u2063":e>=-.1667&&e<=-.1666?"\u2009\u2063":e>=-.2223&&e<=-.2222?"\u205f\u2063":e>=-.2778&&e<=-.2777?"\u2005\u2063":null}var t=e.prototype;return t.toNode=function(){if(this.character)return document.createTextNode(this.character);var e=document.createElementNS("http://www.w3.org/1998/Math/MathML","mspace");return e.setAttribute("width",F(this.width)),e},t.toMarkup=function(){return this.character?"<mtext>"+this.character+"</mtext>":'<mspace width="'+F(this.width)+'"/>'},t.toText=function(){return this.character?this.character:" "},e}(),newDocumentFragment:Mt},Bt=function(e,t,r){return!ae[t][e]||!ae[t][e].replace||55349===e.charCodeAt(0)||we.hasOwnProperty(e)&&r&&(r.fontFamily&&"tt"===r.fontFamily.slice(4,6)||r.font&&"tt"===r.font.slice(4,6))||(e=ae[t][e].replace),new Tt.TextNode(e)},Ct=function(e){return 1===e.length?e[0]:new Tt.MathNode("mrow",e)},Nt=function(e,t){if("texttt"===t.fontFamily)return"monospace";if("textsf"===t.fontFamily)return"textit"===t.fontShape&&"textbf"===t.fontWeight?"sans-serif-bold-italic":"textit"===t.fontShape?"sans-serif-italic":"textbf"===t.fontWeight?"bold-sans-serif":"sans-serif";if("textit"===t.fontShape&&"textbf"===t.fontWeight)return"bold-italic";if("textit"===t.fontShape)return"italic";if("textbf"===t.fontWeight)return"bold";var r=t.font;if(!r||"mathnormal"===r)return null;var n=e.mode;if("mathit"===r)return"italic";if("boldsymbol"===r)return"textord"===e.type?"bold":"bold-italic";if("mathbf"===r)return"bold";if("mathbb"===r)return"double-struck";if("mathfrak"===r)return"fraktur";if("mathscr"===r||"mathcal"===r)return"script";if("mathsf"===r)return"sans-serif";if("mathtt"===r)return"monospace";var a=e.text;return l.contains(["\\imath","\\jmath"],a)?null:(ae[n][a]&&ae[n][a].replace&&(a=ae[n][a].replace),N(a,Ke.fontMap[r].fontName,n)?Ke.fontMap[r].variant:null)},qt=function(e,t,r){if(1===e.length){var n=Rt(e[0],t);return r&&n instanceof zt&&"mo"===n.type&&(n.setAttribute("lspace","0em"),n.setAttribute("rspace","0em")),[n]}for(var a,i=[],o=0;o<e.length;o++){var s=Rt(e[o],t);if(s instanceof zt&&a instanceof zt){if("mtext"===s.type&&"mtext"===a.type&&s.getAttribute("mathvariant")===a.getAttribute("mathvariant")){var l;(l=a.children).push.apply(l,s.children);continue}if("mn"===s.type&&"mn"===a.type){var h;(h=a.children).push.apply(h,s.children);continue}if("mi"===s.type&&1===s.children.length&&"mn"===a.type){var c=s.children[0];if(c instanceof At&&"."===c.text){var m;(m=a.children).push.apply(m,s.children);continue}}else if("mi"===a.type&&1===a.children.length){var u=a.children[0];if(u instanceof At&&"\u0338"===u.text&&("mo"===s.type||"mi"===s.type||"mn"===s.type)){var p=s.children[0];p instanceof At&&p.text.length>0&&(p.text=p.text.slice(0,1)+"\u0338"+p.text.slice(1),i.pop())}}}i.push(s),a=s}return i},It=function(e,t,r){return Ct(qt(e,t,r))},Rt=function(e,t){if(!e)return new Tt.MathNode("mrow");if(it[e.type])return it[e.type](e,t);throw new n("Got group of unknown type: '"+e.type+"'")};function Ht(e,t,r,n,a){var i,o=qt(e,r);i=1===o.length&&o[0]instanceof zt&&l.contains(["mrow","mtable"],o[0].type)?o[0]:new Tt.MathNode("mrow",o);var s=new Tt.MathNode("annotation",[new Tt.TextNode(t)]);s.setAttribute("encoding","application/x-tex");var h=new Tt.MathNode("semantics",[i,s]),c=new Tt.MathNode("math",[h]);c.setAttribute("xmlns","http://www.w3.org/1998/Math/MathML"),n&&c.setAttribute("display","block");var m=a?"katex":"katex-mathml";return Ke.makeSpan([m],[c])}var Ot=function(e){return new E({style:e.displayMode?x.DISPLAY:x.TEXT,maxSize:e.maxSize,minRuleThickness:e.minRuleThickness})},Et=function(e,t){if(t.displayMode){var r=["katex-display"];t.leqno&&r.push("leqno"),t.fleqn&&r.push("fleqn"),e=Ke.makeSpan(r,[e])}return e},Lt=function(e,t,r){var n,a=Ot(r);if("mathml"===r.output)return Ht(e,t,a,r.displayMode,!0);if("html"===r.output){var i=St(e,a);n=Ke.makeSpan(["katex"],[i])}else{var o=Ht(e,t,a,r.displayMode,!1),s=St(e,a);n=Ke.makeSpan(["katex"],[o,s])}return Et(n,r)},Dt={widehat:"^",widecheck:"\u02c7",widetilde:"~",utilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23df",overbrace:"\u23de",overgroup:"\u23e0",undergroup:"\u23e1",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xlongequal:"=",xtofrom:"\u21c4",xrightleftarrows:"\u21c4",xrightequilibrium:"\u21cc",xleftequilibrium:"\u21cb","\\cdrightarrow":"\u2192","\\cdleftarrow":"\u2190","\\cdlongequal":"="},Vt={overrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],overleftarrow:[["leftarrow"],.888,522,"xMinYMin"],underrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],underleftarrow:[["leftarrow"],.888,522,"xMinYMin"],xrightarrow:[["rightarrow"],1.469,522,"xMaxYMin"],"\\cdrightarrow":[["rightarrow"],3,522,"xMaxYMin"],xleftarrow:[["leftarrow"],1.469,522,"xMinYMin"],"\\cdleftarrow":[["leftarrow"],3,522,"xMinYMin"],Overrightarrow:[["doublerightarrow"],.888,560,"xMaxYMin"],xRightarrow:[["doublerightarrow"],1.526,560,"xMaxYMin"],xLeftarrow:[["doubleleftarrow"],1.526,560,"xMinYMin"],overleftharpoon:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoonup:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoondown:[["leftharpoondown"],.888,522,"xMinYMin"],overrightharpoon:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoonup:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoondown:[["rightharpoondown"],.888,522,"xMaxYMin"],xlongequal:[["longequal"],.888,334,"xMinYMin"],"\\cdlongequal":[["longequal"],3,334,"xMinYMin"],xtwoheadleftarrow:[["twoheadleftarrow"],.888,334,"xMinYMin"],xtwoheadrightarrow:[["twoheadrightarrow"],.888,334,"xMaxYMin"],overleftrightarrow:[["leftarrow","rightarrow"],.888,522],overbrace:[["leftbrace","midbrace","rightbrace"],1.6,548],underbrace:[["leftbraceunder","midbraceunder","rightbraceunder"],1.6,548],underleftrightarrow:[["leftarrow","rightarrow"],.888,522],xleftrightarrow:[["leftarrow","rightarrow"],1.75,522],xLeftrightarrow:[["doubleleftarrow","doublerightarrow"],1.75,560],xrightleftharpoons:[["leftharpoondownplus","rightharpoonplus"],1.75,716],xleftrightharpoons:[["leftharpoonplus","rightharpoondownplus"],1.75,716],xhookleftarrow:[["leftarrow","righthook"],1.08,522],xhookrightarrow:[["lefthook","rightarrow"],1.08,522],overlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],underlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],overgroup:[["leftgroup","rightgroup"],.888,342],undergroup:[["leftgroupunder","rightgroupunder"],.888,342],xmapsto:[["leftmapsto","rightarrow"],1.5,522],xtofrom:[["leftToFrom","rightToFrom"],1.75,528],xrightleftarrows:[["baraboveleftarrow","rightarrowabovebar"],1.75,901],xrightequilibrium:[["baraboveshortleftharpoon","rightharpoonaboveshortbar"],1.75,716],xleftequilibrium:[["shortbaraboveleftharpoon","shortrightharpoonabovebar"],1.75,716]},Pt=function(e,t,r,n,a){var i,o=e.height+e.depth+r+n;if(/fbox|color|angl/.test(t)){if(i=Ke.makeSpan(["stretchy",t],[],a),"fbox"===t){var s=a.color&&a.getColor();s&&(i.style.borderColor=s)}}else{var l=[];/^[bx]cancel$/.test(t)&&l.push(new Q({x1:"0",y1:"0",x2:"100%",y2:"100%","stroke-width":"0.046em"})),/^x?cancel$/.test(t)&&l.push(new Q({x1:"0",y1:"100%",x2:"100%",y2:"0","stroke-width":"0.046em"}));var h=new K(l,{width:"100%",height:F(o)});i=Ke.makeSvgSpan([],[h],a)}return i.height=o,i.style.height=F(o),i},Ft=function(e){var t=new Tt.MathNode("mo",[new Tt.TextNode(Dt[e.replace(/^\\/,"")])]);return t.setAttribute("stretchy","true"),t},Gt=function(e,t){var r=function(){var r=4e5,n=e.label.slice(1);if(l.contains(["widehat","widecheck","widetilde","utilde"],n)){var a,i,o,s="ordgroup"===(d=e.base).type?d.body.length:1;if(s>5)"widehat"===n||"widecheck"===n?(a=420,r=2364,o=.42,i=n+"4"):(a=312,r=2340,o=.34,i="tilde4");else{var h=[1,1,2,2,3,3][s];"widehat"===n||"widecheck"===n?(r=[0,1062,2364,2364,2364][h],a=[0,239,300,360,420][h],o=[0,.24,.3,.3,.36,.42][h],i=n+h):(r=[0,600,1033,2339,2340][h],a=[0,260,286,306,312][h],o=[0,.26,.286,.3,.306,.34][h],i="tilde"+h)}var c=new J(i),m=new K([c],{width:"100%",height:F(o),viewBox:"0 0 "+r+" "+a,preserveAspectRatio:"none"});return{span:Ke.makeSvgSpan([],[m],t),minWidth:0,height:o}}var u,p,d,f=[],g=Vt[n],v=g[0],y=g[1],b=g[2],x=b/1e3,w=v.length;if(1===w)u=["hide-tail"],p=[g[3]];else if(2===w)u=["halfarrow-left","halfarrow-right"],p=["xMinYMin","xMaxYMin"];else{if(3!==w)throw new Error("Correct katexImagesData or update code here to support\n                    "+w+" children.");u=["brace-left","brace-center","brace-right"],p=["xMinYMin","xMidYMin","xMaxYMin"]}for(var k=0;k<w;k++){var S=new J(v[k]),M=new K([S],{width:"400em",height:F(x),viewBox:"0 0 "+r+" "+b,preserveAspectRatio:p[k]+" slice"}),z=Ke.makeSvgSpan([u[k]],[M],t);if(1===w)return{span:z,minWidth:y,height:x};z.style.height=F(x),f.push(z)}return{span:Ke.makeSpan(["stretchy"],f,t),minWidth:y,height:x}}(),n=r.span,a=r.minWidth,i=r.height;return n.height=i,n.style.height=F(i),a>0&&(n.style.minWidth=F(a)),n};function Ut(e,t){if(!e||e.type!==t)throw new Error("Expected node of type "+t+", but got "+(e?"node of type "+e.type:String(e)));return e}function Yt(e){var t=Xt(e);if(!t)throw new Error("Expected node of symbol group type, but got "+(e?"node of type "+e.type:String(e)));return t}function Xt(e){return e&&("atom"===e.type||re.hasOwnProperty(e.type))?e:null}var Wt=function(e,t){var r,n,a;e&&"supsub"===e.type?(r=(n=Ut(e.base,"accent")).base,e.base=r,a=function(e){if(e instanceof W)return e;throw new Error("Expected span<HtmlDomNode> but got "+String(e)+".")}(wt(e,t)),e.base=n):r=(n=Ut(e,"accent")).base;var i=wt(r,t.havingCrampedStyle()),o=0;if(n.isShifty&&l.isCharacterBox(r)){var s=l.getBaseElem(r);o=ee(wt(s,t.havingCrampedStyle())).skew}var h,c="\\c"===n.label,m=c?i.height+i.depth:Math.min(i.height,t.fontMetrics().xHeight);if(n.isStretchy)h=Gt(n,t),h=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"elem",elem:h,wrapperClasses:["svg-align"],wrapperStyle:o>0?{width:"calc(100% - "+F(2*o)+")",marginLeft:F(2*o)}:void 0}]},t);else{var u,p;"\\vec"===n.label?(u=Ke.staticSvg("vec",t),p=Ke.svgData.vec[1]):((u=ee(u=Ke.makeOrd({mode:n.mode,text:n.label},t,"textord"))).italic=0,p=u.width,c&&(m+=u.depth)),h=Ke.makeSpan(["accent-body"],[u]);var d="\\textcircled"===n.label;d&&(h.classes.push("accent-full"),m=i.height);var f=o;d||(f-=p/2),h.style.left=F(f),"\\textcircled"===n.label&&(h.style.top=".2em"),h=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:i},{type:"kern",size:-m},{type:"elem",elem:h}]},t)}var g=Ke.makeSpan(["mord","accent"],[h],t);return a?(a.children[0]=g,a.height=Math.max(g.height,a.height),a.classes[0]="mord",a):g},_t=function(e,t){var r=e.isStretchy?Ft(e.label):new Tt.MathNode("mo",[Bt(e.label,e.mode)]),n=new Tt.MathNode("mover",[Rt(e.base,t),r]);return n.setAttribute("accent","true"),n},jt=new RegExp(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring"].map((function(e){return"\\"+e})).join("|"));ot({type:"accent",names:["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring","\\widecheck","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],props:{numArgs:1},handler:function(e,t){var r=lt(t[0]),n=!jt.test(e.funcName),a=!n||"\\widehat"===e.funcName||"\\widetilde"===e.funcName||"\\widecheck"===e.funcName;return{type:"accent",mode:e.parser.mode,label:e.funcName,isStretchy:n,isShifty:a,base:r}},htmlBuilder:Wt,mathmlBuilder:_t}),ot({type:"accent",names:["\\'","\\","\\^","\\~","\\=","\\u","\\.",'\\"',"\\c","\\r","\\H","\\v","\\textcircled"],props:{numArgs:1,allowedInText:!0,allowedInMath:!0,argTypes:["primitive"]},handler:function(e,t){var r=t[0],n=e.parser.mode;return"math"===n&&(e.parser.settings.reportNonstrict("mathVsTextAccents","LaTeX's accent "+e.funcName+" works only in text mode"),n="text"),{type:"accent",mode:n,label:e.funcName,isStretchy:!1,isShifty:!0,base:r}},htmlBuilder:Wt,mathmlBuilder:_t}),ot({type:"accentUnder",names:["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\utilde"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"accentUnder",mode:r.mode,label:n,base:a}},htmlBuilder:function(e,t){var r=wt(e.base,t),n=Gt(e,t),a="\\utilde"===e.label?.12:0,i=Ke.makeVList({positionType:"top",positionData:r.height,children:[{type:"elem",elem:n,wrapperClasses:["svg-align"]},{type:"kern",size:a},{type:"elem",elem:r}]},t);return Ke.makeSpan(["mord","accentunder"],[i],t)},mathmlBuilder:function(e,t){var r=Ft(e.label),n=new Tt.MathNode("munder",[Rt(e.base,t),r]);return n.setAttribute("accentunder","true"),n}});var $t=function(e){var t=new Tt.MathNode("mpadded",e?[e]:[]);return t.setAttribute("width","+0.6em"),t.setAttribute("lspace","0.3em"),t};ot({type:"xArrow",names:["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xlongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xtofrom","\\xrightleftarrows","\\xrightequilibrium","\\xleftequilibrium","\\\\cdrightarrow","\\\\cdleftarrow","\\\\cdlongequal"],props:{numArgs:1,numOptionalArgs:1},handler:function(e,t,r){var n=e.parser,a=e.funcName;return{type:"xArrow",mode:n.mode,label:a,body:t[0],below:r[0]}},htmlBuilder:function(e,t){var r,n=t.style,a=t.havingStyle(n.sup()),i=Ke.wrapFragment(wt(e.body,a,t),t),o="\\x"===e.label.slice(0,2)?"x":"cd";i.classes.push(o+"-arrow-pad"),e.below&&(a=t.havingStyle(n.sub()),(r=Ke.wrapFragment(wt(e.below,a,t),t)).classes.push(o+"-arrow-pad"));var s,l=Gt(e,t),h=-t.fontMetrics().axisHeight+.5*l.height,c=-t.fontMetrics().axisHeight-.5*l.height-.111;if((i.depth>.25||"\\xleftequilibrium"===e.label)&&(c-=i.depth),r){var m=-t.fontMetrics().axisHeight+r.height+.5*l.height+.111;s=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:c},{type:"elem",elem:l,shift:h},{type:"elem",elem:r,shift:m}]},t)}else s=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:c},{type:"elem",elem:l,shift:h}]},t);return s.children[0].children[0].children[1].classes.push("svg-align"),Ke.makeSpan(["mrel","x-arrow"],[s],t)},mathmlBuilder:function(e,t){var r,n=Ft(e.label);if(n.setAttribute("minsize","x"===e.label.charAt(0)?"1.75em":"3.0em"),e.body){var a=$t(Rt(e.body,t));if(e.below){var i=$t(Rt(e.below,t));r=new Tt.MathNode("munderover",[n,i,a])}else r=new Tt.MathNode("mover",[n,a])}else if(e.below){var o=$t(Rt(e.below,t));r=new Tt.MathNode("munder",[n,o])}else r=$t(),r=new Tt.MathNode("mover",[n,r]);return r}});var Zt=Ke.makeSpan;function Kt(e,t){var r=ft(e.body,t,!0);return Zt([e.mclass],r,t)}function Jt(e,t){var r,n=qt(e.body,t);return"minner"===e.mclass?r=new Tt.MathNode("mpadded",n):"mord"===e.mclass?e.isCharacterBox?(r=n[0]).type="mi":r=new Tt.MathNode("mi",n):(e.isCharacterBox?(r=n[0]).type="mo":r=new Tt.MathNode("mo",n),"mbin"===e.mclass?(r.attributes.lspace="0.22em",r.attributes.rspace="0.22em"):"mpunct"===e.mclass?(r.attributes.lspace="0em",r.attributes.rspace="0.17em"):"mopen"===e.mclass||"mclose"===e.mclass?(r.attributes.lspace="0em",r.attributes.rspace="0em"):"minner"===e.mclass&&(r.attributes.lspace="0.0556em",r.attributes.width="+0.1111em")),r}ot({type:"mclass",names:["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"mclass",mode:r.mode,mclass:"m"+n.slice(5),body:ht(a),isCharacterBox:l.isCharacterBox(a)}},htmlBuilder:Kt,mathmlBuilder:Jt});var Qt=function(e){var t="ordgroup"===e.type&&e.body.length?e.body[0]:e;return"atom"!==t.type||"bin"!==t.family&&"rel"!==t.family?"mord":"m"+t.family};ot({type:"mclass",names:["\\@binrel"],props:{numArgs:2},handler:function(e,t){return{type:"mclass",mode:e.parser.mode,mclass:Qt(t[0]),body:ht(t[1]),isCharacterBox:l.isCharacterBox(t[1])}}}),ot({type:"mclass",names:["\\stackrel","\\overset","\\underset"],props:{numArgs:2},handler:function(e,t){var r,n=e.parser,a=e.funcName,i=t[1],o=t[0];r="\\stackrel"!==a?Qt(i):"mrel";var s={type:"op",mode:i.mode,limits:!0,alwaysHandleSupSub:!0,parentIsSupSub:!1,symbol:!1,suppressBaseShift:"\\stackrel"!==a,body:ht(i)},h={type:"supsub",mode:o.mode,base:s,sup:"\\underset"===a?null:o,sub:"\\underset"===a?o:null};return{type:"mclass",mode:n.mode,mclass:r,body:[h],isCharacterBox:l.isCharacterBox(h)}},htmlBuilder:Kt,mathmlBuilder:Jt}),ot({type:"pmb",names:["\\pmb"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){return{type:"pmb",mode:e.parser.mode,mclass:Qt(t[0]),body:ht(t[0])}},htmlBuilder:function(e,t){var r=ft(e.body,t,!0),n=Ke.makeSpan([e.mclass],r,t);return n.style.textShadow="0.02em 0.01em 0.04px",n},mathmlBuilder:function(e,t){var r=qt(e.body,t),n=new Tt.MathNode("mstyle",r);return n.setAttribute("style","text-shadow: 0.02em 0.01em 0.04px"),n}});var er={">":"\\\\cdrightarrow","<":"\\\\cdleftarrow","=":"\\\\cdlongequal",A:"\\uparrow",V:"\\downarrow","|":"\\Vert",".":"no arrow"},tr=function(e){return"textord"===e.type&&"@"===e.text};function rr(e,t,r){var n=er[e];switch(n){case"\\\\cdrightarrow":case"\\\\cdleftarrow":return r.callFunction(n,[t[0]],[t[1]]);case"\\uparrow":case"\\downarrow":var a={type:"atom",text:n,mode:"math",family:"rel"},i={type:"ordgroup",mode:"math",body:[r.callFunction("\\\\cdleft",[t[0]],[]),r.callFunction("\\Big",[a],[]),r.callFunction("\\\\cdright",[t[1]],[])]};return r.callFunction("\\\\cdparent",[i],[]);case"\\\\cdlongequal":return r.callFunction("\\\\cdlongequal",[],[]);case"\\Vert":return r.callFunction("\\Big",[{type:"textord",text:"\\Vert",mode:"math"}],[]);default:return{type:"textord",text:" ",mode:"math"}}}ot({type:"cdlabel",names:["\\\\cdleft","\\\\cdright"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName;return{type:"cdlabel",mode:r.mode,side:n.slice(4),label:t[0]}},htmlBuilder:function(e,t){var r=t.havingStyle(t.style.sup()),n=Ke.wrapFragment(wt(e.label,r,t),t);return n.classes.push("cd-label-"+e.side),n.style.bottom=F(.8-n.depth),n.height=0,n.depth=0,n},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mrow",[Rt(e.label,t)]);return(r=new Tt.MathNode("mpadded",[r])).setAttribute("width","0"),"left"===e.side&&r.setAttribute("lspace","-1width"),r.setAttribute("voffset","0.7em"),(r=new Tt.MathNode("mstyle",[r])).setAttribute("displaystyle","false"),r.setAttribute("scriptlevel","1"),r}}),ot({type:"cdlabelparent",names:["\\\\cdparent"],props:{numArgs:1},handler:function(e,t){return{type:"cdlabelparent",mode:e.parser.mode,fragment:t[0]}},htmlBuilder:function(e,t){var r=Ke.wrapFragment(wt(e.fragment,t),t);return r.classes.push("cd-vert-arrow"),r},mathmlBuilder:function(e,t){return new Tt.MathNode("mrow",[Rt(e.fragment,t)])}}),ot({type:"textord",names:["\\@char"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){for(var r=e.parser,a=Ut(t[0],"ordgroup").body,i="",o=0;o<a.length;o++){i+=Ut(a[o],"textord").text}var s,l=parseInt(i);if(isNaN(l))throw new n("\\@char has non-numeric argument "+i);if(l<0||l>=1114111)throw new n("\\@char with invalid code point "+i);return l<=65535?s=String.fromCharCode(l):(l-=65536,s=String.fromCharCode(55296+(l>>10),56320+(1023&l))),{type:"textord",mode:r.mode,text:s}}});var nr=function(e,t){var r=ft(e.body,t.withColor(e.color),!1);return Ke.makeFragment(r)},ar=function(e,t){var r=qt(e.body,t.withColor(e.color)),n=new Tt.MathNode("mstyle",r);return n.setAttribute("mathcolor",e.color),n};ot({type:"color",names:["\\textcolor"],props:{numArgs:2,allowedInText:!0,argTypes:["color","original"]},handler:function(e,t){var r=e.parser,n=Ut(t[0],"color-token").color,a=t[1];return{type:"color",mode:r.mode,color:n,body:ht(a)}},htmlBuilder:nr,mathmlBuilder:ar}),ot({type:"color",names:["\\color"],props:{numArgs:1,allowedInText:!0,argTypes:["color"]},handler:function(e,t){var r=e.parser,n=e.breakOnTokenText,a=Ut(t[0],"color-token").color;r.gullet.macros.set("\\current@color",a);var i=r.parseExpression(!0,n);return{type:"color",mode:r.mode,color:a,body:i}},htmlBuilder:nr,mathmlBuilder:ar}),ot({type:"cr",names:["\\\\"],props:{numArgs:0,numOptionalArgs:1,argTypes:["size"],allowedInText:!0},handler:function(e,t,r){var n=e.parser,a=r[0],i=!n.settings.displayMode||!n.settings.useStrictBehavior("newLineInDisplayMode","In LaTeX, \\\\ or \\newline does nothing in display mode");return{type:"cr",mode:n.mode,newLine:i,size:a&&Ut(a,"size").value}},htmlBuilder:function(e,t){var r=Ke.makeSpan(["mspace"],[],t);return e.newLine&&(r.classes.push("newline"),e.size&&(r.style.marginTop=F(P(e.size,t)))),r},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mspace");return e.newLine&&(r.setAttribute("linebreak","newline"),e.size&&r.setAttribute("height",F(P(e.size,t)))),r}});var ir={"\\global":"\\global","\\long":"\\\\globallong","\\\\globallong":"\\\\globallong","\\def":"\\gdef","\\gdef":"\\gdef","\\edef":"\\xdef","\\xdef":"\\xdef","\\let":"\\\\globallet","\\futurelet":"\\\\globalfuture"},or=function(e){var t=e.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(t))throw new n("Expected a control sequence",e);return t},sr=function(e,t,r,n){var a=e.gullet.macros.get(r.text);null==a&&(r.noexpand=!0,a={tokens:[r],numArgs:0,unexpandable:!e.gullet.isExpandable(r.text)}),e.gullet.macros.set(t,a,n)};ot({type:"internal",names:["\\global","\\long","\\\\globallong"],props:{numArgs:0,allowedInText:!0},handler:function(e){var t=e.parser,r=e.funcName;t.consumeSpaces();var a=t.fetch();if(ir[a.text])return"\\global"!==r&&"\\\\globallong"!==r||(a.text=ir[a.text]),Ut(t.parseFunction(),"internal");throw new n("Invalid token after macro prefix",a)}}),ot({type:"internal",names:["\\def","\\gdef","\\edef","\\xdef"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,a=t.gullet.popToken(),i=a.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(i))throw new n("Expected a control sequence",a);for(var o,s=0,l=[[]];"{"!==t.gullet.future().text;)if("#"===(a=t.gullet.popToken()).text){if("{"===t.gullet.future().text){o=t.gullet.future(),l[s].push("{");break}if(a=t.gullet.popToken(),!/^[1-9]$/.test(a.text))throw new n('Invalid argument number "'+a.text+'"');if(parseInt(a.text)!==s+1)throw new n('Argument number "'+a.text+'" out of order');s++,l.push([])}else{if("EOF"===a.text)throw new n("Expected a macro definition");l[s].push(a.text)}var h=t.gullet.consumeArg().tokens;return o&&h.unshift(o),"\\edef"!==r&&"\\xdef"!==r||(h=t.gullet.expandTokens(h)).reverse(),t.gullet.macros.set(i,{tokens:h,numArgs:s,delimiters:l},r===ir[r]),{type:"internal",mode:t.mode}}}),ot({type:"internal",names:["\\let","\\\\globallet"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,n=or(t.gullet.popToken());t.gullet.consumeSpaces();var a=function(e){var t=e.gullet.popToken();return"="===t.text&&" "===(t=e.gullet.popToken()).text&&(t=e.gullet.popToken()),t}(t);return sr(t,n,a,"\\\\globallet"===r),{type:"internal",mode:t.mode}}}),ot({type:"internal",names:["\\futurelet","\\\\globalfuture"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e){var t=e.parser,r=e.funcName,n=or(t.gullet.popToken()),a=t.gullet.popToken(),i=t.gullet.popToken();return sr(t,n,i,"\\\\globalfuture"===r),t.gullet.pushToken(i),t.gullet.pushToken(a),{type:"internal",mode:t.mode}}});var lr=function(e,t,r){var n=N(ae.math[e]&&ae.math[e].replace||e,t,r);if(!n)throw new Error("Unsupported symbol "+e+" and font size "+t+".");return n},hr=function(e,t,r,n){var a=r.havingBaseStyle(t),i=Ke.makeSpan(n.concat(a.sizingClasses(r)),[e],r),o=a.sizeMultiplier/r.sizeMultiplier;return i.height*=o,i.depth*=o,i.maxFontSize=a.sizeMultiplier,i},cr=function(e,t,r){var n=t.havingBaseStyle(r),a=(1-t.sizeMultiplier/n.sizeMultiplier)*t.fontMetrics().axisHeight;e.classes.push("delimcenter"),e.style.top=F(a),e.height-=a,e.depth+=a},mr=function(e,t,r,n,a,i){var o=function(e,t,r,n){return Ke.makeSymbol(e,"Size"+t+"-Regular",r,n)}(e,t,a,n),s=hr(Ke.makeSpan(["delimsizing","size"+t],[o],n),x.TEXT,n,i);return r&&cr(s,n,x.TEXT),s},ur=function(e,t,r){var n;return n="Size1-Regular"===t?"delim-size1":"delim-size4",{type:"elem",elem:Ke.makeSpan(["delimsizinginner",n],[Ke.makeSpan([],[Ke.makeSymbol(e,t,r)])])}},pr=function(e,t,r){var n=T["Size4-Regular"][e.charCodeAt(0)]?T["Size4-Regular"][e.charCodeAt(0)][4]:T["Size1-Regular"][e.charCodeAt(0)][4],a=new J("inner",function(e,t){switch(e){case"\u239c":return"M291 0 H417 V"+t+" H291z M291 0 H417 V"+t+" H291z";case"\u2223":return"M145 0 H188 V"+t+" H145z M145 0 H188 V"+t+" H145z";case"\u2225":return"M145 0 H188 V"+t+" H145z M145 0 H188 V"+t+" H145zM367 0 H410 V"+t+" H367z M367 0 H410 V"+t+" H367z";case"\u239f":return"M457 0 H583 V"+t+" H457z M457 0 H583 V"+t+" H457z";case"\u23a2":return"M319 0 H403 V"+t+" H319z M319 0 H403 V"+t+" H319z";case"\u23a5":return"M263 0 H347 V"+t+" H263z M263 0 H347 V"+t+" H263z";case"\u23aa":return"M384 0 H504 V"+t+" H384z M384 0 H504 V"+t+" H384z";case"\u23d0":return"M312 0 H355 V"+t+" H312z M312 0 H355 V"+t+" H312z";case"\u2016":return"M257 0 H300 V"+t+" H257z M257 0 H300 V"+t+" H257zM478 0 H521 V"+t+" H478z M478 0 H521 V"+t+" H478z";default:return""}}(e,Math.round(1e3*t))),i=new K([a],{width:F(n),height:F(t),style:"width:"+F(n),viewBox:"0 0 "+1e3*n+" "+Math.round(1e3*t),preserveAspectRatio:"xMinYMin"}),o=Ke.makeSvgSpan([],[i],r);return o.height=t,o.style.height=F(t),o.style.width=F(n),{type:"elem",elem:o}},dr={type:"kern",size:-.008},fr=["|","\\lvert","\\rvert","\\vert"],gr=["\\|","\\lVert","\\rVert","\\Vert"],vr=function(e,t,r,n,a,i){var o,s,h,c,m="",u=0;o=h=c=e,s=null;var p="Size1-Regular";"\\uparrow"===e?h=c="\u23d0":"\\Uparrow"===e?h=c="\u2016":"\\downarrow"===e?o=h="\u23d0":"\\Downarrow"===e?o=h="\u2016":"\\updownarrow"===e?(o="\\uparrow",h="\u23d0",c="\\downarrow"):"\\Updownarrow"===e?(o="\\Uparrow",h="\u2016",c="\\Downarrow"):l.contains(fr,e)?(h="\u2223",m="vert",u=333):l.contains(gr,e)?(h="\u2225",m="doublevert",u=556):"["===e||"\\lbrack"===e?(o="\u23a1",h="\u23a2",c="\u23a3",p="Size4-Regular",m="lbrack",u=667):"]"===e||"\\rbrack"===e?(o="\u23a4",h="\u23a5",c="\u23a6",p="Size4-Regular",m="rbrack",u=667):"\\lfloor"===e||"\u230a"===e?(h=o="\u23a2",c="\u23a3",p="Size4-Regular",m="lfloor",u=667):"\\lceil"===e||"\u2308"===e?(o="\u23a1",h=c="\u23a2",p="Size4-Regular",m="lceil",u=667):"\\rfloor"===e||"\u230b"===e?(h=o="\u23a5",c="\u23a6",p="Size4-Regular",m="rfloor",u=667):"\\rceil"===e||"\u2309"===e?(o="\u23a4",h=c="\u23a5",p="Size4-Regular",m="rceil",u=667):"("===e||"\\lparen"===e?(o="\u239b",h="\u239c",c="\u239d",p="Size4-Regular",m="lparen",u=875):")"===e||"\\rparen"===e?(o="\u239e",h="\u239f",c="\u23a0",p="Size4-Regular",m="rparen",u=875):"\\{"===e||"\\lbrace"===e?(o="\u23a7",s="\u23a8",c="\u23a9",h="\u23aa",p="Size4-Regular"):"\\}"===e||"\\rbrace"===e?(o="\u23ab",s="\u23ac",c="\u23ad",h="\u23aa",p="Size4-Regular"):"\\lgroup"===e||"\u27ee"===e?(o="\u23a7",c="\u23a9",h="\u23aa",p="Size4-Regular"):"\\rgroup"===e||"\u27ef"===e?(o="\u23ab",c="\u23ad",h="\u23aa",p="Size4-Regular"):"\\lmoustache"===e||"\u23b0"===e?(o="\u23a7",c="\u23ad",h="\u23aa",p="Size4-Regular"):"\\rmoustache"!==e&&"\u23b1"!==e||(o="\u23ab",c="\u23a9",h="\u23aa",p="Size4-Regular");var d=lr(o,p,a),f=d.height+d.depth,g=lr(h,p,a),v=g.height+g.depth,y=lr(c,p,a),b=y.height+y.depth,w=0,k=1;if(null!==s){var S=lr(s,p,a);w=S.height+S.depth,k=2}var M=f+b+w,z=M+Math.max(0,Math.ceil((t-M)/(k*v)))*k*v,A=n.fontMetrics().axisHeight;r&&(A*=n.sizeMultiplier);var T=z/2-A,B=[];if(m.length>0){var C=z-f-b,N=Math.round(1e3*z),q=function(e,t){switch(e){case"lbrack":return"M403 1759 V84 H666 V0 H319 V1759 v"+t+" v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v"+t+" v1759 h84z";case"rbrack":return"M347 1759 V0 H0 V84 H263 V1759 v"+t+" v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v"+t+" v1759 h84z";case"vert":return"M145 15 v585 v"+t+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-t+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v"+t+" v585 h43z";case"doublevert":return"M145 15 v585 v"+t+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-t+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v"+t+" v585 h43z\nM367 15 v585 v"+t+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-t+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v"+t+" v585 h43z";case"lfloor":return"M319 602 V0 H403 V602 v"+t+" v1715 h263 v84 H319z\nMM319 602 V0 H403 V602 v"+t+" v1715 H319z";case"rfloor":return"M319 602 V0 H403 V602 v"+t+" v1799 H0 v-84 H319z\nMM319 602 V0 H403 V602 v"+t+" v1715 H319z";case"lceil":return"M403 1759 V84 H666 V0 H319 V1759 v"+t+" v602 h84z\nM403 1759 V0 H319 V1759 v"+t+" v602 h84z";case"rceil":return"M347 1759 V0 H0 V84 H263 V1759 v"+t+" v602 h84z\nM347 1759 V0 h-84 V1759 v"+t+" v602 h84z";case"lparen":return"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,"+(t+84)+"c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-"+(t+92)+"c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z";case"rparen":return"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,"+(t+9)+"\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-"+(t+144)+"c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z";default:throw new Error("Unknown stretchy delimiter.")}}(m,Math.round(1e3*C)),I=new J(m,q),R=(u/1e3).toFixed(3)+"em",H=(N/1e3).toFixed(3)+"em",O=new K([I],{width:R,height:H,viewBox:"0 0 "+u+" "+N}),E=Ke.makeSvgSpan([],[O],n);E.height=N/1e3,E.style.width=R,E.style.height=H,B.push({type:"elem",elem:E})}else{if(B.push(ur(c,p,a)),B.push(dr),null===s){var L=z-f-b+.016;B.push(pr(h,L,n))}else{var D=(z-f-b-w)/2+.016;B.push(pr(h,D,n)),B.push(dr),B.push(ur(s,p,a)),B.push(dr),B.push(pr(h,D,n))}B.push(dr),B.push(ur(o,p,a))}var V=n.havingBaseStyle(x.TEXT),P=Ke.makeVList({positionType:"bottom",positionData:T,children:B},V);return hr(Ke.makeSpan(["delimsizing","mult"],[P],V),x.TEXT,n,i)},yr=.08,br=function(e,t,r,n,a){var i=function(e,t,r){t*=1e3;var n="";switch(e){case"sqrtMain":n=function(e,t){return"M95,"+(622+e+t)+"\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl"+e/2.075+" -"+e+"\nc5.3,-9.3,12,-14,20,-14\nH400000v"+(40+e)+"H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM"+(834+e)+" "+t+"h400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize1":n=function(e,t){return"M263,"+(601+e+t)+"c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl"+e/2.084+" -"+e+"\nc4.7,-7.3,11,-11,19,-11\nH40000v"+(40+e)+"H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM"+(1001+e)+" "+t+"h400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize2":n=function(e,t){return"M983 "+(10+e+t)+"\nl"+e/3.13+" -"+e+"\nc4,-6.7,10,-10,18,-10 H400000v"+(40+e)+"\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM"+(1001+e)+" "+t+"h400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize3":n=function(e,t){return"M424,"+(2398+e+t)+"\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl"+e/4.223+" -"+e+"c4,-6.7,10,-10,18,-10 H400000\nv"+(40+e)+"H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M"+(1001+e)+" "+t+"\nh400000v"+(40+e)+"h-400000z"}(t,M);break;case"sqrtSize4":n=function(e,t){return"M473,"+(2713+e+t)+"\nc339.3,-1799.3,509.3,-2700,510,-2702 l"+e/5.298+" -"+e+"\nc3.3,-7.3,9.3,-11,18,-11 H400000v"+(40+e)+"H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM"+(1001+e)+" "+t+"h400000v"+(40+e)+"H1017.7z"}(t,M);break;case"sqrtTall":n=function(e,t,r){return"M702 "+(e+t)+"H400000"+(40+e)+"\nH742v"+(r-54-t-e)+"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 "+t+"H400000v"+(40+e)+"H742z"}(t,M,r)}return n}(e,n,r),o=new J(e,i),s=new K([o],{width:"400em",height:F(t),viewBox:"0 0 400000 "+r,preserveAspectRatio:"xMinYMin slice"});return Ke.makeSvgSpan(["hide-tail"],[s],a)},xr=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\u230a","\u230b","\\lceil","\\rceil","\u2308","\u2309","\\surd"],wr=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\u27ee","\u27ef","\\lmoustache","\\rmoustache","\u23b0","\u23b1"],kr=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"],Sr=[0,1.2,1.8,2.4,3],Mr=[{type:"small",style:x.SCRIPTSCRIPT},{type:"small",style:x.SCRIPT},{type:"small",style:x.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}],zr=[{type:"small",style:x.SCRIPTSCRIPT},{type:"small",style:x.SCRIPT},{type:"small",style:x.TEXT},{type:"stack"}],Ar=[{type:"small",style:x.SCRIPTSCRIPT},{type:"small",style:x.SCRIPT},{type:"small",style:x.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}],Tr=function(e){if("small"===e.type)return"Main-Regular";if("large"===e.type)return"Size"+e.size+"-Regular";if("stack"===e.type)return"Size4-Regular";throw new Error("Add support for delim type '"+e.type+"' here.")},Br=function(e,t,r,n){for(var a=Math.min(2,3-n.style.size);a<r.length&&"stack"!==r[a].type;a++){var i=lr(e,Tr(r[a]),"math"),o=i.height+i.depth;if("small"===r[a].type&&(o*=n.havingBaseStyle(r[a].style).sizeMultiplier),o>t)return r[a]}return r[r.length-1]},Cr=function(e,t,r,n,a,i){var o;"<"===e||"\\lt"===e||"\u27e8"===e?e="\\langle":">"!==e&&"\\gt"!==e&&"\u27e9"!==e||(e="\\rangle"),o=l.contains(kr,e)?Mr:l.contains(xr,e)?Ar:zr;var s=Br(e,t,o,n);return"small"===s.type?function(e,t,r,n,a,i){var o=Ke.makeSymbol(e,"Main-Regular",a,n),s=hr(o,t,n,i);return r&&cr(s,n,t),s}(e,s.style,r,n,a,i):"large"===s.type?mr(e,s.size,r,n,a,i):vr(e,t,r,n,a,i)},Nr={sqrtImage:function(e,t){var r,n,a=t.havingBaseSizing(),i=Br("\\surd",e*a.sizeMultiplier,Ar,a),o=a.sizeMultiplier,s=Math.max(0,t.minRuleThickness-t.fontMetrics().sqrtRuleThickness),l=0,h=0,c=0;return"small"===i.type?(e<1?o=1:e<1.4&&(o=.7),h=(1+s)/o,(r=br("sqrtMain",l=(1+s+yr)/o,c=1e3+1e3*s+80,s,t)).style.minWidth="0.853em",n=.833/o):"large"===i.type?(c=1080*Sr[i.size],h=(Sr[i.size]+s)/o,l=(Sr[i.size]+s+yr)/o,(r=br("sqrtSize"+i.size,l,c,s,t)).style.minWidth="1.02em",n=1/o):(l=e+s+yr,h=e+s,c=Math.floor(1e3*e+s)+80,(r=br("sqrtTall",l,c,s,t)).style.minWidth="0.742em",n=1.056),r.height=h,r.style.height=F(l),{span:r,advanceWidth:n,ruleWidth:(t.fontMetrics().sqrtRuleThickness+s)*o}},sizedDelim:function(e,t,r,a,i){if("<"===e||"\\lt"===e||"\u27e8"===e?e="\\langle":">"!==e&&"\\gt"!==e&&"\u27e9"!==e||(e="\\rangle"),l.contains(xr,e)||l.contains(kr,e))return mr(e,t,!1,r,a,i);if(l.contains(wr,e))return vr(e,Sr[t],!1,r,a,i);throw new n("Illegal delimiter: '"+e+"'")},sizeToMaxHeight:Sr,customSizedDelim:Cr,leftRightDelim:function(e,t,r,n,a,i){var o=n.fontMetrics().axisHeight*n.sizeMultiplier,s=5/n.fontMetrics().ptPerEm,l=Math.max(t-o,r+o),h=Math.max(l/500*901,2*l-s);return Cr(e,h,!0,n,a,i)}},qr={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}},Ir=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\u230a","\u230b","\\lceil","\\rceil","\u2308","\u2309","<",">","\\langle","\u27e8","\\rangle","\u27e9","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\u27ee","\u27ef","\\lmoustache","\\rmoustache","\u23b0","\u23b1","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];function Rr(e,t){var r=Xt(e);if(r&&l.contains(Ir,r.text))return r;throw new n(r?"Invalid delimiter '"+r.text+"' after '"+t.funcName+"'":"Invalid delimiter type '"+e.type+"'",e)}function Hr(e){if(!e.body)throw new Error("Bug: The leftright ParseNode wasn't fully parsed.")}ot({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1,argTypes:["primitive"]},handler:function(e,t){var r=Rr(t[0],e);return{type:"delimsizing",mode:e.parser.mode,size:qr[e.funcName].size,mclass:qr[e.funcName].mclass,delim:r.text}},htmlBuilder:function(e,t){return"."===e.delim?Ke.makeSpan([e.mclass]):Nr.sizedDelim(e.delim,e.size,t,e.mode,[e.mclass])},mathmlBuilder:function(e){var t=[];"."!==e.delim&&t.push(Bt(e.delim,e.mode));var r=new Tt.MathNode("mo",t);"mopen"===e.mclass||"mclose"===e.mclass?r.setAttribute("fence","true"):r.setAttribute("fence","false"),r.setAttribute("stretchy","true");var n=F(Nr.sizeToMaxHeight[e.size]);return r.setAttribute("minsize",n),r.setAttribute("maxsize",n),r}}),ot({type:"leftright-right",names:["\\right"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser.gullet.macros.get("\\current@color");if(r&&"string"!=typeof r)throw new n("\\current@color set to non-string in \\right");return{type:"leftright-right",mode:e.parser.mode,delim:Rr(t[0],e).text,color:r}}}),ot({type:"leftright",names:["\\left"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=Rr(t[0],e),n=e.parser;++n.leftrightDepth;var a=n.parseExpression(!1);--n.leftrightDepth,n.expect("\\right",!1);var i=Ut(n.parseFunction(),"leftright-right");return{type:"leftright",mode:n.mode,body:a,left:r.text,right:i.delim,rightColor:i.color}},htmlBuilder:function(e,t){Hr(e);for(var r,n,a=ft(e.body,t,!0,["mopen","mclose"]),i=0,o=0,s=!1,l=0;l<a.length;l++)a[l].isMiddle?s=!0:(i=Math.max(a[l].height,i),o=Math.max(a[l].depth,o));if(i*=t.sizeMultiplier,o*=t.sizeMultiplier,r="."===e.left?xt(t,["mopen"]):Nr.leftRightDelim(e.left,i,o,t,e.mode,["mopen"]),a.unshift(r),s)for(var h=1;h<a.length;h++){var c=a[h].isMiddle;c&&(a[h]=Nr.leftRightDelim(c.delim,i,o,c.options,e.mode,[]))}if("."===e.right)n=xt(t,["mclose"]);else{var m=e.rightColor?t.withColor(e.rightColor):t;n=Nr.leftRightDelim(e.right,i,o,m,e.mode,["mclose"])}return a.push(n),Ke.makeSpan(["minner"],a,t)},mathmlBuilder:function(e,t){Hr(e);var r=qt(e.body,t);if("."!==e.left){var n=new Tt.MathNode("mo",[Bt(e.left,e.mode)]);n.setAttribute("fence","true"),r.unshift(n)}if("."!==e.right){var a=new Tt.MathNode("mo",[Bt(e.right,e.mode)]);a.setAttribute("fence","true"),e.rightColor&&a.setAttribute("mathcolor",e.rightColor),r.push(a)}return Ct(r)}}),ot({type:"middle",names:["\\middle"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=Rr(t[0],e);if(!e.parser.leftrightDepth)throw new n("\\middle without preceding \\left",r);return{type:"middle",mode:e.parser.mode,delim:r.text}},htmlBuilder:function(e,t){var r;if("."===e.delim)r=xt(t,[]);else{r=Nr.sizedDelim(e.delim,1,t,e.mode,[]);var n={delim:e.delim,options:t};r.isMiddle=n}return r},mathmlBuilder:function(e,t){var r="\\vert"===e.delim||"|"===e.delim?Bt("|","text"):Bt(e.delim,e.mode),n=new Tt.MathNode("mo",[r]);return n.setAttribute("fence","true"),n.setAttribute("lspace","0.05em"),n.setAttribute("rspace","0.05em"),n}});var Or=function(e,t){var r,n,a,i=Ke.wrapFragment(wt(e.body,t),t),o=e.label.slice(1),s=t.sizeMultiplier,h=0,c=l.isCharacterBox(e.body);if("sout"===o)(r=Ke.makeSpan(["stretchy","sout"])).height=t.fontMetrics().defaultRuleThickness/s,h=-.5*t.fontMetrics().xHeight;else if("phase"===o){var m=P({number:.6,unit:"pt"},t),u=P({number:.35,unit:"ex"},t);s/=t.havingBaseSizing().sizeMultiplier;var p=i.height+i.depth+m+u;i.style.paddingLeft=F(p/2+m);var d=Math.floor(1e3*p*s),f="M400000 "+(n=d)+" H0 L"+n/2+" 0 l65 45 L145 "+(n-80)+" H400000z",g=new K([new J("phase",f)],{width:"400em",height:F(d/1e3),viewBox:"0 0 400000 "+d,preserveAspectRatio:"xMinYMin slice"});(r=Ke.makeSvgSpan(["hide-tail"],[g],t)).style.height=F(p),h=i.depth+m+u}else{/cancel/.test(o)?c||i.classes.push("cancel-pad"):"angl"===o?i.classes.push("anglpad"):i.classes.push("boxpad");var v=0,y=0,b=0;/box/.test(o)?(b=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness),y=v=t.fontMetrics().fboxsep+("colorbox"===o?0:b)):"angl"===o?(v=4*(b=Math.max(t.fontMetrics().defaultRuleThickness,t.minRuleThickness)),y=Math.max(0,.25-i.depth)):y=v=c?.2:0,r=Pt(i,o,v,y,t),/fbox|boxed|fcolorbox/.test(o)?(r.style.borderStyle="solid",r.style.borderWidth=F(b)):"angl"===o&&.049!==b&&(r.style.borderTopWidth=F(b),r.style.borderRightWidth=F(b)),h=i.depth+y,e.backgroundColor&&(r.style.backgroundColor=e.backgroundColor,e.borderColor&&(r.style.borderColor=e.borderColor))}if(e.backgroundColor)a=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:r,shift:h},{type:"elem",elem:i,shift:0}]},t);else{var x=/cancel|phase/.test(o)?["svg-align"]:[];a=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:i,shift:0},{type:"elem",elem:r,shift:h,wrapperClasses:x}]},t)}return/cancel/.test(o)&&(a.height=i.height,a.depth=i.depth),/cancel/.test(o)&&!c?Ke.makeSpan(["mord","cancel-lap"],[a],t):Ke.makeSpan(["mord"],[a],t)},Er=function(e,t){var r=0,n=new Tt.MathNode(e.label.indexOf("colorbox")>-1?"mpadded":"menclose",[Rt(e.body,t)]);switch(e.label){case"\\cancel":n.setAttribute("notation","updiagonalstrike");break;case"\\bcancel":n.setAttribute("notation","downdiagonalstrike");break;case"\\phase":n.setAttribute("notation","phasorangle");break;case"\\sout":n.setAttribute("notation","horizontalstrike");break;case"\\fbox":n.setAttribute("notation","box");break;case"\\angl":n.setAttribute("notation","actuarial");break;case"\\fcolorbox":case"\\colorbox":if(r=t.fontMetrics().fboxsep*t.fontMetrics().ptPerEm,n.setAttribute("width","+"+2*r+"pt"),n.setAttribute("height","+"+2*r+"pt"),n.setAttribute("lspace",r+"pt"),n.setAttribute("voffset",r+"pt"),"\\fcolorbox"===e.label){var a=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness);n.setAttribute("style","border: "+a+"em solid "+String(e.borderColor))}break;case"\\xcancel":n.setAttribute("notation","updiagonalstrike downdiagonalstrike")}return e.backgroundColor&&n.setAttribute("mathbackground",e.backgroundColor),n};ot({type:"enclose",names:["\\colorbox"],props:{numArgs:2,allowedInText:!0,argTypes:["color","text"]},handler:function(e,t,r){var n=e.parser,a=e.funcName,i=Ut(t[0],"color-token").color,o=t[1];return{type:"enclose",mode:n.mode,label:a,backgroundColor:i,body:o}},htmlBuilder:Or,mathmlBuilder:Er}),ot({type:"enclose",names:["\\fcolorbox"],props:{numArgs:3,allowedInText:!0,argTypes:["color","color","text"]},handler:function(e,t,r){var n=e.parser,a=e.funcName,i=Ut(t[0],"color-token").color,o=Ut(t[1],"color-token").color,s=t[2];return{type:"enclose",mode:n.mode,label:a,backgroundColor:o,borderColor:i,body:s}},htmlBuilder:Or,mathmlBuilder:Er}),ot({type:"enclose",names:["\\fbox"],props:{numArgs:1,argTypes:["hbox"],allowedInText:!0},handler:function(e,t){return{type:"enclose",mode:e.parser.mode,label:"\\fbox",body:t[0]}}}),ot({type:"enclose",names:["\\cancel","\\bcancel","\\xcancel","\\sout","\\phase"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"enclose",mode:r.mode,label:n,body:a}},htmlBuilder:Or,mathmlBuilder:Er}),ot({type:"enclose",names:["\\angl"],props:{numArgs:1,argTypes:["hbox"],allowedInText:!1},handler:function(e,t){return{type:"enclose",mode:e.parser.mode,label:"\\angl",body:t[0]}}});var Lr={};function Dr(e){for(var t=e.type,r=e.names,n=e.props,a=e.handler,i=e.htmlBuilder,o=e.mathmlBuilder,s={type:t,numArgs:n.numArgs||0,allowedInText:!1,numOptionalArgs:0,handler:a},l=0;l<r.length;++l)Lr[r[l]]=s;i&&(at[t]=i),o&&(it[t]=o)}var Vr={};function Pr(e,t){Vr[e]=t}var Fr=function(){function e(e,t,r){this.lexer=void 0,this.start=void 0,this.end=void 0,this.lexer=e,this.start=t,this.end=r}return e.range=function(t,r){return r?t&&t.loc&&r.loc&&t.loc.lexer===r.loc.lexer?new e(t.loc.lexer,t.loc.start,r.loc.end):null:t&&t.loc},e}(),Gr=function(){function e(e,t){this.text=void 0,this.loc=void 0,this.noexpand=void 0,this.treatAsRelax=void 0,this.text=e,this.loc=t}return e.prototype.range=function(t,r){return new e(r,Fr.range(this,t))},e}();function Ur(e){var t=[];e.consumeSpaces();var r=e.fetch().text;for("\\relax"===r&&(e.consume(),e.consumeSpaces(),r=e.fetch().text);"\\hline"===r||"\\hdashline"===r;)e.consume(),t.push("\\hdashline"===r),e.consumeSpaces(),r=e.fetch().text;return t}var Yr=function(e){if(!e.parser.settings.displayMode)throw new n("{"+e.envName+"} can be used only in display mode.")};function Xr(e){if(-1===e.indexOf("ed"))return-1===e.indexOf("*")}function Wr(e,t,r){var a=t.hskipBeforeAndAfter,i=t.addJot,o=t.cols,s=t.arraystretch,l=t.colSeparationType,h=t.autoTag,c=t.singleRow,m=t.emptySingleRow,u=t.maxNumCols,p=t.leqno;if(e.gullet.beginGroup(),c||e.gullet.macros.set("\\cr","\\\\\\relax"),!s){var d=e.gullet.expandMacroAsText("\\arraystretch");if(null==d)s=1;else if(!(s=parseFloat(d))||s<0)throw new n("Invalid \\arraystretch: "+d)}e.gullet.beginGroup();var f=[],g=[f],v=[],y=[],b=null!=h?[]:void 0;function x(){h&&e.gullet.macros.set("\\@eqnsw","1",!0)}function w(){b&&(e.gullet.macros.get("\\df@tag")?(b.push(e.subparse([new Gr("\\df@tag")])),e.gullet.macros.set("\\df@tag",void 0,!0)):b.push(Boolean(h)&&"1"===e.gullet.macros.get("\\@eqnsw")))}for(x(),y.push(Ur(e));;){var k=e.parseExpression(!1,c?"\\end":"\\\\");e.gullet.endGroup(),e.gullet.beginGroup(),k={type:"ordgroup",mode:e.mode,body:k},r&&(k={type:"styling",mode:e.mode,style:r,body:[k]}),f.push(k);var S=e.fetch().text;if("&"===S){if(u&&f.length===u){if(c||l)throw new n("Too many tab characters: &",e.nextToken);e.settings.reportNonstrict("textEnv","Too few columns specified in the {array} column argument.")}e.consume()}else{if("\\end"===S){w(),1===f.length&&"styling"===k.type&&0===k.body[0].body.length&&(g.length>1||!m)&&g.pop(),y.length<g.length+1&&y.push([]);break}if("\\\\"!==S)throw new n("Expected & or \\\\ or \\cr or \\end",e.nextToken);e.consume();var M=void 0;" "!==e.gullet.future().text&&(M=e.parseSizeGroup(!0)),v.push(M?M.value:null),w(),y.push(Ur(e)),f=[],g.push(f),x()}}return e.gullet.endGroup(),e.gullet.endGroup(),{type:"array",mode:e.mode,addJot:i,arraystretch:s,body:g,cols:o,rowGaps:v,hskipBeforeAndAfter:a,hLinesBeforeRow:y,colSeparationType:l,tags:b,leqno:p}}function _r(e){return"d"===e.slice(0,1)?"display":"text"}var jr=function(e,t){var r,a,i=e.body.length,o=e.hLinesBeforeRow,s=0,h=new Array(i),c=[],m=Math.max(t.fontMetrics().arrayRuleWidth,t.minRuleThickness),u=1/t.fontMetrics().ptPerEm,p=5*u;e.colSeparationType&&"small"===e.colSeparationType&&(p=t.havingStyle(x.SCRIPT).sizeMultiplier/t.sizeMultiplier*.2778);var d="CD"===e.colSeparationType?P({number:3,unit:"ex"},t):12*u,f=3*u,g=e.arraystretch*d,v=.7*g,y=.3*g,b=0;function w(e){for(var t=0;t<e.length;++t)t>0&&(b+=.25),c.push({pos:b,isDashed:e[t]})}for(w(o[0]),r=0;r<e.body.length;++r){var k=e.body[r],S=v,M=y;s<k.length&&(s=k.length);var z=new Array(k.length);for(a=0;a<k.length;++a){var A=wt(k[a],t);M<A.depth&&(M=A.depth),S<A.height&&(S=A.height),z[a]=A}var T=e.rowGaps[r],B=0;T&&(B=P(T,t))>0&&(M<(B+=y)&&(M=B),B=0),e.addJot&&(M+=f),z.height=S,z.depth=M,b+=S,z.pos=b,b+=M+B,h[r]=z,w(o[r+1])}var C,N,q=b/2+t.fontMetrics().axisHeight,I=e.cols||[],R=[],H=[];if(e.tags&&e.tags.some((function(e){return e})))for(r=0;r<i;++r){var O=h[r],E=O.pos-q,L=e.tags[r],D=void 0;(D=!0===L?Ke.makeSpan(["eqn-num"],[],t):!1===L?Ke.makeSpan([],[],t):Ke.makeSpan([],ft(L,t,!0),t)).depth=O.depth,D.height=O.height,H.push({type:"elem",elem:D,shift:E})}for(a=0,N=0;a<s||N<I.length;++a,++N){for(var V=I[N]||{},G=!0;"separator"===V.type;){if(G||((C=Ke.makeSpan(["arraycolsep"],[])).style.width=F(t.fontMetrics().doubleRuleSep),R.push(C)),"|"!==V.separator&&":"!==V.separator)throw new n("Invalid separator type: "+V.separator);var U="|"===V.separator?"solid":"dashed",Y=Ke.makeSpan(["vertical-separator"],[],t);Y.style.height=F(b),Y.style.borderRightWidth=F(m),Y.style.borderRightStyle=U,Y.style.margin="0 "+F(-m/2);var X=b-q;X&&(Y.style.verticalAlign=F(-X)),R.push(Y),V=I[++N]||{},G=!1}if(!(a>=s)){var W=void 0;(a>0||e.hskipBeforeAndAfter)&&0!==(W=l.deflt(V.pregap,p))&&((C=Ke.makeSpan(["arraycolsep"],[])).style.width=F(W),R.push(C));var _=[];for(r=0;r<i;++r){var j=h[r],$=j[a];if($){var Z=j.pos-q;$.depth=j.depth,$.height=j.height,_.push({type:"elem",elem:$,shift:Z})}}_=Ke.makeVList({positionType:"individualShift",children:_},t),_=Ke.makeSpan(["col-align-"+(V.align||"c")],[_]),R.push(_),(a<s-1||e.hskipBeforeAndAfter)&&0!==(W=l.deflt(V.postgap,p))&&((C=Ke.makeSpan(["arraycolsep"],[])).style.width=F(W),R.push(C))}}if(h=Ke.makeSpan(["mtable"],R),c.length>0){for(var K=Ke.makeLineSpan("hline",t,m),J=Ke.makeLineSpan("hdashline",t,m),Q=[{type:"elem",elem:h,shift:0}];c.length>0;){var ee=c.pop(),te=ee.pos-q;ee.isDashed?Q.push({type:"elem",elem:J,shift:te}):Q.push({type:"elem",elem:K,shift:te})}h=Ke.makeVList({positionType:"individualShift",children:Q},t)}if(0===H.length)return Ke.makeSpan(["mord"],[h],t);var re=Ke.makeVList({positionType:"individualShift",children:H},t);return re=Ke.makeSpan(["tag"],[re],t),Ke.makeFragment([h,re])},$r={c:"center ",l:"left ",r:"right "},Zr=function(e,t){for(var r=[],n=new Tt.MathNode("mtd",[],["mtr-glue"]),a=new Tt.MathNode("mtd",[],["mml-eqn-num"]),i=0;i<e.body.length;i++){for(var o=e.body[i],s=[],l=0;l<o.length;l++)s.push(new Tt.MathNode("mtd",[Rt(o[l],t)]));e.tags&&e.tags[i]&&(s.unshift(n),s.push(n),e.leqno?s.unshift(a):s.push(a)),r.push(new Tt.MathNode("mtr",s))}var h=new Tt.MathNode("mtable",r),c=.5===e.arraystretch?.1:.16+e.arraystretch-1+(e.addJot?.09:0);h.setAttribute("rowspacing",F(c));var m="",u="";if(e.cols&&e.cols.length>0){var p=e.cols,d="",f=!1,g=0,v=p.length;"separator"===p[0].type&&(m+="top ",g=1),"separator"===p[p.length-1].type&&(m+="bottom ",v-=1);for(var y=g;y<v;y++)"align"===p[y].type?(u+=$r[p[y].align],f&&(d+="none "),f=!0):"separator"===p[y].type&&f&&(d+="|"===p[y].separator?"solid ":"dashed ",f=!1);h.setAttribute("columnalign",u.trim()),/[sd]/.test(d)&&h.setAttribute("columnlines",d.trim())}if("align"===e.colSeparationType){for(var b=e.cols||[],x="",w=1;w<b.length;w++)x+=w%2?"0em ":"1em ";h.setAttribute("columnspacing",x.trim())}else"alignat"===e.colSeparationType||"gather"===e.colSeparationType?h.setAttribute("columnspacing","0em"):"small"===e.colSeparationType?h.setAttribute("columnspacing","0.2778em"):"CD"===e.colSeparationType?h.setAttribute("columnspacing","0.5em"):h.setAttribute("columnspacing","1em");var k="",S=e.hLinesBeforeRow;m+=S[0].length>0?"left ":"",m+=S[S.length-1].length>0?"right ":"";for(var M=1;M<S.length-1;M++)k+=0===S[M].length?"none ":S[M][0]?"dashed ":"solid ";return/[sd]/.test(k)&&h.setAttribute("rowlines",k.trim()),""!==m&&(h=new Tt.MathNode("menclose",[h])).setAttribute("notation",m.trim()),e.arraystretch&&e.arraystretch<1&&(h=new Tt.MathNode("mstyle",[h])).setAttribute("scriptlevel","1"),h},Kr=function(e,t){-1===e.envName.indexOf("ed")&&Yr(e);var r,a=[],i=e.envName.indexOf("at")>-1?"alignat":"align",o="split"===e.envName,s=Wr(e.parser,{cols:a,addJot:!0,autoTag:o?void 0:Xr(e.envName),emptySingleRow:!0,colSeparationType:i,maxNumCols:o?2:void 0,leqno:e.parser.settings.leqno},"display"),l=0,h={type:"ordgroup",mode:e.mode,body:[]};if(t[0]&&"ordgroup"===t[0].type){for(var c="",m=0;m<t[0].body.length;m++){c+=Ut(t[0].body[m],"textord").text}r=Number(c),l=2*r}var u=!l;s.body.forEach((function(e){for(var t=1;t<e.length;t+=2){var a=Ut(e[t],"styling");Ut(a.body[0],"ordgroup").body.unshift(h)}if(u)l<e.length&&(l=e.length);else{var i=e.length/2;if(r<i)throw new n("Too many math in a row: expected "+r+", but got "+i,e[0])}}));for(var p=0;p<l;++p){var d="r",f=0;p%2==1?d="l":p>0&&u&&(f=1),a[p]={type:"align",align:d,pregap:f,postgap:0}}return s.colSeparationType=u?"align":"alignat",s};Dr({type:"array",names:["array","darray"],props:{numArgs:1},handler:function(e,t){var r=(Xt(t[0])?[t[0]]:Ut(t[0],"ordgroup").body).map((function(e){var t=Yt(e).text;if(-1!=="lcr".indexOf(t))return{type:"align",align:t};if("|"===t)return{type:"separator",separator:"|"};if(":"===t)return{type:"separator",separator:":"};throw new n("Unknown column alignment: "+t,e)})),a={cols:r,hskipBeforeAndAfter:!0,maxNumCols:r.length};return Wr(e.parser,a,_r(e.envName))},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","matrix*","pmatrix*","bmatrix*","Bmatrix*","vmatrix*","Vmatrix*"],props:{numArgs:0},handler:function(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName.replace("*","")],r="c",a={hskipBeforeAndAfter:!1,cols:[{type:"align",align:r}]};if("*"===e.envName.charAt(e.envName.length-1)){var i=e.parser;if(i.consumeSpaces(),"["===i.fetch().text){if(i.consume(),i.consumeSpaces(),r=i.fetch().text,-1==="lcr".indexOf(r))throw new n("Expected l or c or r",i.nextToken);i.consume(),i.consumeSpaces(),i.expect("]"),i.consume(),a.cols=[{type:"align",align:r}]}}var o=Wr(e.parser,a,_r(e.envName)),s=Math.max.apply(Math,[0].concat(o.body.map((function(e){return e.length}))));return o.cols=new Array(s).fill({type:"align",align:r}),t?{type:"leftright",mode:e.mode,body:[o],left:t[0],right:t[1],rightColor:void 0}:o},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["smallmatrix"],props:{numArgs:0},handler:function(e){var t=Wr(e.parser,{arraystretch:.5},"script");return t.colSeparationType="small",t},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["subarray"],props:{numArgs:1},handler:function(e,t){var r=(Xt(t[0])?[t[0]]:Ut(t[0],"ordgroup").body).map((function(e){var t=Yt(e).text;if(-1!=="lc".indexOf(t))return{type:"align",align:t};throw new n("Unknown column alignment: "+t,e)}));if(r.length>1)throw new n("{subarray} can contain only one column");var a={cols:r,hskipBeforeAndAfter:!1,arraystretch:.5};if((a=Wr(e.parser,a,"script")).body.length>0&&a.body[0].length>1)throw new n("{subarray} can contain only one column");return a},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["cases","dcases","rcases","drcases"],props:{numArgs:0},handler:function(e){var t=Wr(e.parser,{arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]},_r(e.envName));return{type:"leftright",mode:e.mode,body:[t],left:e.envName.indexOf("r")>-1?".":"\\{",right:e.envName.indexOf("r")>-1?"\\}":".",rightColor:void 0}},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["align","align*","aligned","split"],props:{numArgs:0},handler:Kr,htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["gathered","gather","gather*"],props:{numArgs:0},handler:function(e){l.contains(["gather","gather*"],e.envName)&&Yr(e);var t={cols:[{type:"align",align:"c"}],addJot:!0,colSeparationType:"gather",autoTag:Xr(e.envName),emptySingleRow:!0,leqno:e.parser.settings.leqno};return Wr(e.parser,t,"display")},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["alignat","alignat*","alignedat"],props:{numArgs:1},handler:Kr,htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["equation","equation*"],props:{numArgs:0},handler:function(e){Yr(e);var t={autoTag:Xr(e.envName),emptySingleRow:!0,singleRow:!0,maxNumCols:1,leqno:e.parser.settings.leqno};return Wr(e.parser,t,"display")},htmlBuilder:jr,mathmlBuilder:Zr}),Dr({type:"array",names:["CD"],props:{numArgs:0},handler:function(e){return Yr(e),function(e){var t=[];for(e.gullet.beginGroup(),e.gullet.macros.set("\\cr","\\\\\\relax"),e.gullet.beginGroup();;){t.push(e.parseExpression(!1,"\\\\")),e.gullet.endGroup(),e.gullet.beginGroup();var r=e.fetch().text;if("&"!==r&&"\\\\"!==r){if("\\end"===r){0===t[t.length-1].length&&t.pop();break}throw new n("Expected \\\\ or \\cr or \\end",e.nextToken)}e.consume()}for(var a,i,o=[],s=[o],l=0;l<t.length;l++){for(var h=t[l],c={type:"styling",body:[],mode:"math",style:"display"},m=0;m<h.length;m++)if(tr(h[m])){o.push(c);var u=Yt(h[m+=1]).text,p=new Array(2);if(p[0]={type:"ordgroup",mode:"math",body:[]},p[1]={type:"ordgroup",mode:"math",body:[]},"=|.".indexOf(u)>-1);else{if(!("<>AV".indexOf(u)>-1))throw new n('Expected one of "<>AV=|." after @',h[m]);for(var d=0;d<2;d++){for(var f=!0,g=m+1;g<h.length;g++){if(i=u,("mathord"===(a=h[g]).type||"atom"===a.type)&&a.text===i){f=!1,m=g;break}if(tr(h[g]))throw new n("Missing a "+u+" character to complete a CD arrow.",h[g]);p[d].body.push(h[g])}if(f)throw new n("Missing a "+u+" character to complete a CD arrow.",h[m])}}var v={type:"styling",body:[rr(u,p,e)],mode:"math",style:"display"};o.push(v),c={type:"styling",body:[],mode:"math",style:"display"}}else c.body.push(h[m]);l%2==0?o.push(c):o.shift(),o=[],s.push(o)}return e.gullet.endGroup(),e.gullet.endGroup(),{type:"array",mode:"math",body:s,arraystretch:1,addJot:!0,rowGaps:[null],cols:new Array(s[0].length).fill({type:"align",align:"c",pregap:.25,postgap:.25}),colSeparationType:"CD",hLinesBeforeRow:new Array(s.length+1).fill([])}}(e.parser)},htmlBuilder:jr,mathmlBuilder:Zr}),Pr("\\nonumber","\\gdef\\@eqnsw{0}"),Pr("\\notag","\\nonumber"),ot({type:"text",names:["\\hline","\\hdashline"],props:{numArgs:0,allowedInText:!0,allowedInMath:!0},handler:function(e,t){throw new n(e.funcName+" valid only within array environment")}});var Jr=Lr;ot({type:"environment",names:["\\begin","\\end"],props:{numArgs:1,argTypes:["text"]},handler:function(e,t){var r=e.parser,a=e.funcName,i=t[0];if("ordgroup"!==i.type)throw new n("Invalid environment name",i);for(var o="",s=0;s<i.body.length;++s)o+=Ut(i.body[s],"textord").text;if("\\begin"===a){if(!Jr.hasOwnProperty(o))throw new n("No such environment: "+o,i);var l=Jr[o],h=r.parseArguments("\\begin{"+o+"}",l),c=h.args,m=h.optArgs,u={mode:r.mode,envName:o,parser:r},p=l.handler(u,c,m);r.expect("\\end",!1);var d=r.nextToken,f=Ut(r.parseFunction(),"environment");if(f.name!==o)throw new n("Mismatch: \\begin{"+o+"} matched by \\end{"+f.name+"}",d);return p}return{type:"environment",mode:r.mode,name:o,nameGroup:i}}});var Qr=function(e,t){var r=e.font,n=t.withFont(r);return wt(e.body,n)},en=function(e,t){var r=e.font,n=t.withFont(r);return Rt(e.body,n)},tn={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak","\\bm":"\\boldsymbol"};ot({type:"font",names:["\\mathrm","\\mathit","\\mathbf","\\mathnormal","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],props:{numArgs:1,allowedInArgument:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=lt(t[0]),i=n;return i in tn&&(i=tn[i]),{type:"font",mode:r.mode,font:i.slice(1),body:a}},htmlBuilder:Qr,mathmlBuilder:en}),ot({type:"mclass",names:["\\boldsymbol","\\bm"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=t[0],a=l.isCharacterBox(n);return{type:"mclass",mode:r.mode,mclass:Qt(n),body:[{type:"font",mode:r.mode,font:"boldsymbol",body:n}],isCharacterBox:a}}}),ot({type:"font",names:["\\rm","\\sf","\\tt","\\bf","\\it","\\cal"],props:{numArgs:0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=e.breakOnTokenText,i=r.mode,o=r.parseExpression(!0,a);return{type:"font",mode:i,font:"math"+n.slice(1),body:{type:"ordgroup",mode:r.mode,body:o}}},htmlBuilder:Qr,mathmlBuilder:en});var rn=function(e,t){var r=t;return"display"===e?r=r.id>=x.SCRIPT.id?r.text():x.DISPLAY:"text"===e&&r.size===x.DISPLAY.size?r=x.TEXT:"script"===e?r=x.SCRIPT:"scriptscript"===e&&(r=x.SCRIPTSCRIPT),r},nn=function(e,t){var r,n=rn(e.size,t.style),a=n.fracNum(),i=n.fracDen();r=t.havingStyle(a);var o=wt(e.numer,r,t);if(e.continued){var s=8.5/t.fontMetrics().ptPerEm,l=3.5/t.fontMetrics().ptPerEm;o.height=o.height<s?s:o.height,o.depth=o.depth<l?l:o.depth}r=t.havingStyle(i);var h,c,m,u,p,d,f,g,v,y,b=wt(e.denom,r,t);if(e.hasBarLine?(e.barSize?(c=P(e.barSize,t),h=Ke.makeLineSpan("frac-line",t,c)):h=Ke.makeLineSpan("frac-line",t),c=h.height,m=h.height):(h=null,c=0,m=t.fontMetrics().defaultRuleThickness),n.size===x.DISPLAY.size||"display"===e.size?(u=t.fontMetrics().num1,p=c>0?3*m:7*m,d=t.fontMetrics().denom1):(c>0?(u=t.fontMetrics().num2,p=m):(u=t.fontMetrics().num3,p=3*m),d=t.fontMetrics().denom2),h){var w=t.fontMetrics().axisHeight;u-o.depth-(w+.5*c)<p&&(u+=p-(u-o.depth-(w+.5*c))),w-.5*c-(b.height-d)<p&&(d+=p-(w-.5*c-(b.height-d)));var k=-(w-.5*c);f=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:b,shift:d},{type:"elem",elem:h,shift:k},{type:"elem",elem:o,shift:-u}]},t)}else{var S=u-o.depth-(b.height-d);S<p&&(u+=.5*(p-S),d+=.5*(p-S)),f=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:b,shift:d},{type:"elem",elem:o,shift:-u}]},t)}return r=t.havingStyle(n),f.height*=r.sizeMultiplier/t.sizeMultiplier,f.depth*=r.sizeMultiplier/t.sizeMultiplier,g=n.size===x.DISPLAY.size?t.fontMetrics().delim1:n.size===x.SCRIPTSCRIPT.size?t.havingStyle(x.SCRIPT).fontMetrics().delim2:t.fontMetrics().delim2,v=null==e.leftDelim?xt(t,["mopen"]):Nr.customSizedDelim(e.leftDelim,g,!0,t.havingStyle(n),e.mode,["mopen"]),y=e.continued?Ke.makeSpan([]):null==e.rightDelim?xt(t,["mclose"]):Nr.customSizedDelim(e.rightDelim,g,!0,t.havingStyle(n),e.mode,["mclose"]),Ke.makeSpan(["mord"].concat(r.sizingClasses(t)),[v,Ke.makeSpan(["mfrac"],[f]),y],t)},an=function(e,t){var r=new Tt.MathNode("mfrac",[Rt(e.numer,t),Rt(e.denom,t)]);if(e.hasBarLine){if(e.barSize){var n=P(e.barSize,t);r.setAttribute("linethickness",F(n))}}else r.setAttribute("linethickness","0px");var a=rn(e.size,t.style);if(a.size!==t.style.size){r=new Tt.MathNode("mstyle",[r]);var i=a.size===x.DISPLAY.size?"true":"false";r.setAttribute("displaystyle",i),r.setAttribute("scriptlevel","0")}if(null!=e.leftDelim||null!=e.rightDelim){var o=[];if(null!=e.leftDelim){var s=new Tt.MathNode("mo",[new Tt.TextNode(e.leftDelim.replace("\\",""))]);s.setAttribute("fence","true"),o.push(s)}if(o.push(r),null!=e.rightDelim){var l=new Tt.MathNode("mo",[new Tt.TextNode(e.rightDelim.replace("\\",""))]);l.setAttribute("fence","true"),o.push(l)}return Ct(o)}return r};ot({type:"genfrac",names:["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac","\\\\bracefrac","\\\\brackfrac"],props:{numArgs:2,allowedInArgument:!0},handler:function(e,t){var r,n=e.parser,a=e.funcName,i=t[0],o=t[1],s=null,l=null,h="auto";switch(a){case"\\dfrac":case"\\frac":case"\\tfrac":r=!0;break;case"\\\\atopfrac":r=!1;break;case"\\dbinom":case"\\binom":case"\\tbinom":r=!1,s="(",l=")";break;case"\\\\bracefrac":r=!1,s="\\{",l="\\}";break;case"\\\\brackfrac":r=!1,s="[",l="]";break;default:throw new Error("Unrecognized genfrac command")}switch(a){case"\\dfrac":case"\\dbinom":h="display";break;case"\\tfrac":case"\\tbinom":h="text"}return{type:"genfrac",mode:n.mode,continued:!1,numer:i,denom:o,hasBarLine:r,leftDelim:s,rightDelim:l,size:h,barSize:null}},htmlBuilder:nn,mathmlBuilder:an}),ot({type:"genfrac",names:["\\cfrac"],props:{numArgs:2},handler:function(e,t){var r=e.parser,n=(e.funcName,t[0]),a=t[1];return{type:"genfrac",mode:r.mode,continued:!0,numer:n,denom:a,hasBarLine:!0,leftDelim:null,rightDelim:null,size:"display",barSize:null}}}),ot({type:"infix",names:["\\over","\\choose","\\atop","\\brace","\\brack"],props:{numArgs:0,infix:!0},handler:function(e){var t,r=e.parser,n=e.funcName,a=e.token;switch(n){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;case"\\brace":t="\\\\bracefrac";break;case"\\brack":t="\\\\brackfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",mode:r.mode,replaceWith:t,token:a}}});var on=["display","text","script","scriptscript"],sn=function(e){var t=null;return e.length>0&&(t="."===(t=e)?null:t),t};ot({type:"genfrac",names:["\\genfrac"],props:{numArgs:6,allowedInArgument:!0,argTypes:["math","math","size","text","math","math"]},handler:function(e,t){var r,n=e.parser,a=t[4],i=t[5],o=lt(t[0]),s="atom"===o.type&&"open"===o.family?sn(o.text):null,l=lt(t[1]),h="atom"===l.type&&"close"===l.family?sn(l.text):null,c=Ut(t[2],"size"),m=null;r=!!c.isBlank||(m=c.value).number>0;var u="auto",p=t[3];if("ordgroup"===p.type){if(p.body.length>0){var d=Ut(p.body[0],"textord");u=on[Number(d.text)]}}else p=Ut(p,"textord"),u=on[Number(p.text)];return{type:"genfrac",mode:n.mode,numer:a,denom:i,continued:!1,hasBarLine:r,barSize:m,leftDelim:s,rightDelim:h,size:u}},htmlBuilder:nn,mathmlBuilder:an}),ot({type:"infix",names:["\\above"],props:{numArgs:1,argTypes:["size"],infix:!0},handler:function(e,t){var r=e.parser,n=(e.funcName,e.token);return{type:"infix",mode:r.mode,replaceWith:"\\\\abovefrac",size:Ut(t[0],"size").value,token:n}}}),ot({type:"genfrac",names:["\\\\abovefrac"],props:{numArgs:3,argTypes:["math","size","math"]},handler:function(e,t){var r=e.parser,n=(e.funcName,t[0]),a=function(e){if(!e)throw new Error("Expected non-null, but got "+String(e));return e}(Ut(t[1],"infix").size),i=t[2],o=a.number>0;return{type:"genfrac",mode:r.mode,numer:n,denom:i,continued:!1,hasBarLine:o,barSize:a,leftDelim:null,rightDelim:null,size:"auto"}},htmlBuilder:nn,mathmlBuilder:an});var ln=function(e,t){var r,n,a=t.style;"supsub"===e.type?(r=e.sup?wt(e.sup,t.havingStyle(a.sup()),t):wt(e.sub,t.havingStyle(a.sub()),t),n=Ut(e.base,"horizBrace")):n=Ut(e,"horizBrace");var i,o=wt(n.base,t.havingBaseStyle(x.DISPLAY)),s=Gt(n,t);if(n.isOver?(i=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:s}]},t)).children[0].children[0].children[1].classes.push("svg-align"):(i=Ke.makeVList({positionType:"bottom",positionData:o.depth+.1+s.height,children:[{type:"elem",elem:s},{type:"kern",size:.1},{type:"elem",elem:o}]},t)).children[0].children[0].children[0].classes.push("svg-align"),r){var l=Ke.makeSpan(["mord",n.isOver?"mover":"munder"],[i],t);i=n.isOver?Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:l},{type:"kern",size:.2},{type:"elem",elem:r}]},t):Ke.makeVList({positionType:"bottom",positionData:l.depth+.2+r.height+r.depth,children:[{type:"elem",elem:r},{type:"kern",size:.2},{type:"elem",elem:l}]},t)}return Ke.makeSpan(["mord",n.isOver?"mover":"munder"],[i],t)};ot({type:"horizBrace",names:["\\overbrace","\\underbrace"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName;return{type:"horizBrace",mode:r.mode,label:n,isOver:/^\\over/.test(n),base:t[0]}},htmlBuilder:ln,mathmlBuilder:function(e,t){var r=Ft(e.label);return new Tt.MathNode(e.isOver?"mover":"munder",[Rt(e.base,t),r])}}),ot({type:"href",names:["\\href"],props:{numArgs:2,argTypes:["url","original"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[1],a=Ut(t[0],"url").url;return r.settings.isTrusted({command:"\\href",url:a})?{type:"href",mode:r.mode,href:a,body:ht(n)}:r.formatUnsupportedCmd("\\href")},htmlBuilder:function(e,t){var r=ft(e.body,t,!1);return Ke.makeAnchor(e.href,[],r,t)},mathmlBuilder:function(e,t){var r=It(e.body,t);return r instanceof zt||(r=new zt("mrow",[r])),r.setAttribute("href",e.href),r}}),ot({type:"href",names:["\\url"],props:{numArgs:1,argTypes:["url"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=Ut(t[0],"url").url;if(!r.settings.isTrusted({command:"\\url",url:n}))return r.formatUnsupportedCmd("\\url");for(var a=[],i=0;i<n.length;i++){var o=n[i];"~"===o&&(o="\\textasciitilde"),a.push({type:"textord",mode:"text",text:o})}var s={type:"text",mode:r.mode,font:"\\texttt",body:a};return{type:"href",mode:r.mode,href:n,body:ht(s)}}}),ot({type:"hbox",names:["\\hbox"],props:{numArgs:1,argTypes:["text"],allowedInText:!0,primitive:!0},handler:function(e,t){return{type:"hbox",mode:e.parser.mode,body:ht(t[0])}},htmlBuilder:function(e,t){var r=ft(e.body,t,!1);return Ke.makeFragment(r)},mathmlBuilder:function(e,t){return new Tt.MathNode("mrow",qt(e.body,t))}}),ot({type:"html",names:["\\htmlClass","\\htmlId","\\htmlStyle","\\htmlData"],props:{numArgs:2,argTypes:["raw","original"],allowedInText:!0},handler:function(e,t){var r,a=e.parser,i=e.funcName,o=(e.token,Ut(t[0],"raw").string),s=t[1];a.settings.strict&&a.settings.reportNonstrict("htmlExtension","HTML extension is disabled on strict mode");var l={};switch(i){case"\\htmlClass":l.class=o,r={command:"\\htmlClass",class:o};break;case"\\htmlId":l.id=o,r={command:"\\htmlId",id:o};break;case"\\htmlStyle":l.style=o,r={command:"\\htmlStyle",style:o};break;case"\\htmlData":for(var h=o.split(","),c=0;c<h.length;c++){var m=h[c].split("=");if(2!==m.length)throw new n("Error parsing key-value for \\htmlData");l["data-"+m[0].trim()]=m[1].trim()}r={command:"\\htmlData",attributes:l};break;default:throw new Error("Unrecognized html command")}return a.settings.isTrusted(r)?{type:"html",mode:a.mode,attributes:l,body:ht(s)}:a.formatUnsupportedCmd(i)},htmlBuilder:function(e,t){var r=ft(e.body,t,!1),n=["enclosing"];e.attributes.class&&n.push.apply(n,e.attributes.class.trim().split(/\s+/));var a=Ke.makeSpan(n,r,t);for(var i in e.attributes)"class"!==i&&e.attributes.hasOwnProperty(i)&&a.setAttribute(i,e.attributes[i]);return a},mathmlBuilder:function(e,t){return It(e.body,t)}}),ot({type:"htmlmathml",names:["\\html@mathml"],props:{numArgs:2,allowedInText:!0},handler:function(e,t){return{type:"htmlmathml",mode:e.parser.mode,html:ht(t[0]),mathml:ht(t[1])}},htmlBuilder:function(e,t){var r=ft(e.html,t,!1);return Ke.makeFragment(r)},mathmlBuilder:function(e,t){return It(e.mathml,t)}});var hn=function(e){if(/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(e))return{number:+e,unit:"bp"};var t=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(e);if(!t)throw new n("Invalid size: '"+e+"' in \\includegraphics");var r={number:+(t[1]+t[2]),unit:t[3]};if(!V(r))throw new n("Invalid unit: '"+r.unit+"' in \\includegraphics.");return r};ot({type:"includegraphics",names:["\\includegraphics"],props:{numArgs:1,numOptionalArgs:1,argTypes:["raw","url"],allowedInText:!1},handler:function(e,t,r){var a=e.parser,i={number:0,unit:"em"},o={number:.9,unit:"em"},s={number:0,unit:"em"},l="";if(r[0])for(var h=Ut(r[0],"raw").string.split(","),c=0;c<h.length;c++){var m=h[c].split("=");if(2===m.length){var u=m[1].trim();switch(m[0].trim()){case"alt":l=u;break;case"width":i=hn(u);break;case"height":o=hn(u);break;case"totalheight":s=hn(u);break;default:throw new n("Invalid key: '"+m[0]+"' in \\includegraphics.")}}}var p=Ut(t[0],"url").url;return""===l&&(l=(l=(l=p).replace(/^.*[\\/]/,"")).substring(0,l.lastIndexOf("."))),a.settings.isTrusted({command:"\\includegraphics",url:p})?{type:"includegraphics",mode:a.mode,alt:l,width:i,height:o,totalheight:s,src:p}:a.formatUnsupportedCmd("\\includegraphics")},htmlBuilder:function(e,t){var r=P(e.height,t),n=0;e.totalheight.number>0&&(n=P(e.totalheight,t)-r);var a=0;e.width.number>0&&(a=P(e.width,t));var i={height:F(r+n)};a>0&&(i.width=F(a)),n>0&&(i.verticalAlign=F(-n));var o=new j(e.src,e.alt,i);return o.height=r,o.depth=n,o},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mglyph",[]);r.setAttribute("alt",e.alt);var n=P(e.height,t),a=0;if(e.totalheight.number>0&&(a=P(e.totalheight,t)-n,r.setAttribute("valign",F(-a))),r.setAttribute("height",F(n+a)),e.width.number>0){var i=P(e.width,t);r.setAttribute("width",F(i))}return r.setAttribute("src",e.src),r}}),ot({type:"kern",names:["\\kern","\\mkern","\\hskip","\\mskip"],props:{numArgs:1,argTypes:["size"],primitive:!0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=Ut(t[0],"size");if(r.settings.strict){var i="m"===n[1],o="mu"===a.value.unit;i?(o||r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" supports only mu units, not "+a.value.unit+" units"),"math"!==r.mode&&r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" works only in math mode")):o&&r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" doesn't support mu units")}return{type:"kern",mode:r.mode,dimension:a.value}},htmlBuilder:function(e,t){return Ke.makeGlue(e.dimension,t)},mathmlBuilder:function(e,t){var r=P(e.dimension,t);return new Tt.SpaceNode(r)}}),ot({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"lap",mode:r.mode,alignment:n.slice(5),body:a}},htmlBuilder:function(e,t){var r;"clap"===e.alignment?(r=Ke.makeSpan([],[wt(e.body,t)]),r=Ke.makeSpan(["inner"],[r],t)):r=Ke.makeSpan(["inner"],[wt(e.body,t)]);var n=Ke.makeSpan(["fix"],[]),a=Ke.makeSpan([e.alignment],[r,n],t),i=Ke.makeSpan(["strut"]);return i.style.height=F(a.height+a.depth),a.depth&&(i.style.verticalAlign=F(-a.depth)),a.children.unshift(i),a=Ke.makeSpan(["thinbox"],[a],t),Ke.makeSpan(["mord","vbox"],[a],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mpadded",[Rt(e.body,t)]);if("rlap"!==e.alignment){var n="llap"===e.alignment?"-1":"-0.5";r.setAttribute("lspace",n+"width")}return r.setAttribute("width","0px"),r}}),ot({type:"styling",names:["\\(","$"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(e,t){var r=e.funcName,n=e.parser,a=n.mode;n.switchMode("math");var i="\\("===r?"\\)":"$",o=n.parseExpression(!1,i);return n.expect(i),n.switchMode(a),{type:"styling",mode:n.mode,style:"text",body:o}}}),ot({type:"text",names:["\\)","\\]"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(e,t){throw new n("Mismatched "+e.funcName)}});var cn=function(e,t){switch(t.style.size){case x.DISPLAY.size:return e.display;case x.TEXT.size:return e.text;case x.SCRIPT.size:return e.script;case x.SCRIPTSCRIPT.size:return e.scriptscript;default:return e.text}};ot({type:"mathchoice",names:["\\mathchoice"],props:{numArgs:4,primitive:!0},handler:function(e,t){return{type:"mathchoice",mode:e.parser.mode,display:ht(t[0]),text:ht(t[1]),script:ht(t[2]),scriptscript:ht(t[3])}},htmlBuilder:function(e,t){var r=cn(e,t),n=ft(r,t,!1);return Ke.makeFragment(n)},mathmlBuilder:function(e,t){var r=cn(e,t);return It(r,t)}});var mn=function(e,t,r,n,a,i,o){e=Ke.makeSpan([],[e]);var s,h,c,m=r&&l.isCharacterBox(r);if(t){var u=wt(t,n.havingStyle(a.sup()),n);h={elem:u,kern:Math.max(n.fontMetrics().bigOpSpacing1,n.fontMetrics().bigOpSpacing3-u.depth)}}if(r){var p=wt(r,n.havingStyle(a.sub()),n);s={elem:p,kern:Math.max(n.fontMetrics().bigOpSpacing2,n.fontMetrics().bigOpSpacing4-p.height)}}if(h&&s){var d=n.fontMetrics().bigOpSpacing5+s.elem.height+s.elem.depth+s.kern+e.depth+o;c=Ke.makeVList({positionType:"bottom",positionData:d,children:[{type:"kern",size:n.fontMetrics().bigOpSpacing5},{type:"elem",elem:s.elem,marginLeft:F(-i)},{type:"kern",size:s.kern},{type:"elem",elem:e},{type:"kern",size:h.kern},{type:"elem",elem:h.elem,marginLeft:F(i)},{type:"kern",size:n.fontMetrics().bigOpSpacing5}]},n)}else if(s){var f=e.height-o;c=Ke.makeVList({positionType:"top",positionData:f,children:[{type:"kern",size:n.fontMetrics().bigOpSpacing5},{type:"elem",elem:s.elem,marginLeft:F(-i)},{type:"kern",size:s.kern},{type:"elem",elem:e}]},n)}else{if(!h)return e;var g=e.depth+o;c=Ke.makeVList({positionType:"bottom",positionData:g,children:[{type:"elem",elem:e},{type:"kern",size:h.kern},{type:"elem",elem:h.elem,marginLeft:F(i)},{type:"kern",size:n.fontMetrics().bigOpSpacing5}]},n)}var v=[c];if(s&&0!==i&&!m){var y=Ke.makeSpan(["mspace"],[],n);y.style.marginRight=F(i),v.unshift(y)}return Ke.makeSpan(["mop","op-limits"],v,n)},un=["\\smallint"],pn=function(e,t){var r,n,a,i=!1;"supsub"===e.type?(r=e.sup,n=e.sub,a=Ut(e.base,"op"),i=!0):a=Ut(e,"op");var o,s=t.style,h=!1;if(s.size===x.DISPLAY.size&&a.symbol&&!l.contains(un,a.name)&&(h=!0),a.symbol){var c=h?"Size2-Regular":"Size1-Regular",m="";if("\\oiint"!==a.name&&"\\oiiint"!==a.name||(m=a.name.slice(1),a.name="oiint"===m?"\\iint":"\\iiint"),o=Ke.makeSymbol(a.name,c,"math",t,["mop","op-symbol",h?"large-op":"small-op"]),m.length>0){var u=o.italic,p=Ke.staticSvg(m+"Size"+(h?"2":"1"),t);o=Ke.makeVList({positionType:"individualShift",children:[{type:"elem",elem:o,shift:0},{type:"elem",elem:p,shift:h?.08:0}]},t),a.name="\\"+m,o.classes.unshift("mop"),o.italic=u}}else if(a.body){var d=ft(a.body,t,!0);1===d.length&&d[0]instanceof Z?(o=d[0]).classes[0]="mop":o=Ke.makeSpan(["mop"],d,t)}else{for(var f=[],g=1;g<a.name.length;g++)f.push(Ke.mathsym(a.name[g],a.mode,t));o=Ke.makeSpan(["mop"],f,t)}var v=0,y=0;return(o instanceof Z||"\\oiint"===a.name||"\\oiiint"===a.name)&&!a.suppressBaseShift&&(v=(o.height-o.depth)/2-t.fontMetrics().axisHeight,y=o.italic),i?mn(o,r,n,t,s,y,v):(v&&(o.style.position="relative",o.style.top=F(v)),o)},dn=function(e,t){var r;if(e.symbol)r=new zt("mo",[Bt(e.name,e.mode)]),l.contains(un,e.name)&&r.setAttribute("largeop","false");else if(e.body)r=new zt("mo",qt(e.body,t));else{r=new zt("mi",[new At(e.name.slice(1))]);var n=new zt("mo",[Bt("\u2061","text")]);r=e.parentIsSupSub?new zt("mrow",[r,n]):Mt([r,n])}return r},fn={"\u220f":"\\prod","\u2210":"\\coprod","\u2211":"\\sum","\u22c0":"\\bigwedge","\u22c1":"\\bigvee","\u22c2":"\\bigcap","\u22c3":"\\bigcup","\u2a00":"\\bigodot","\u2a01":"\\bigoplus","\u2a02":"\\bigotimes","\u2a04":"\\biguplus","\u2a06":"\\bigsqcup"};ot({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint","\u220f","\u2210","\u2211","\u22c0","\u22c1","\u22c2","\u22c3","\u2a00","\u2a01","\u2a02","\u2a04","\u2a06"],props:{numArgs:0},handler:function(e,t){var r=e.parser,n=e.funcName;return 1===n.length&&(n=fn[n]),{type:"op",mode:r.mode,limits:!0,parentIsSupSub:!1,symbol:!0,name:n}},htmlBuilder:pn,mathmlBuilder:dn}),ot({type:"op",names:["\\mathop"],props:{numArgs:1,primitive:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"op",mode:r.mode,limits:!1,parentIsSupSub:!1,symbol:!1,body:ht(n)}},htmlBuilder:pn,mathmlBuilder:dn});var gn={"\u222b":"\\int","\u222c":"\\iint","\u222d":"\\iiint","\u222e":"\\oint","\u222f":"\\oiint","\u2230":"\\oiiint"};ot({type:"op",names:["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return{type:"op",mode:t.mode,limits:!1,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:pn,mathmlBuilder:dn}),ot({type:"op",names:["\\det","\\gcd","\\inf","\\lim","\\max","\\min","\\Pr","\\sup"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return{type:"op",mode:t.mode,limits:!0,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:pn,mathmlBuilder:dn}),ot({type:"op",names:["\\int","\\iint","\\iiint","\\oint","\\oiint","\\oiiint","\u222b","\u222c","\u222d","\u222e","\u222f","\u2230"],props:{numArgs:0},handler:function(e){var t=e.parser,r=e.funcName;return 1===r.length&&(r=gn[r]),{type:"op",mode:t.mode,limits:!1,parentIsSupSub:!1,symbol:!0,name:r}},htmlBuilder:pn,mathmlBuilder:dn});var vn=function(e,t){var r,n,a,i,o=!1;if("supsub"===e.type?(r=e.sup,n=e.sub,a=Ut(e.base,"operatorname"),o=!0):a=Ut(e,"operatorname"),a.body.length>0){for(var s=a.body.map((function(e){var t=e.text;return"string"==typeof t?{type:"textord",mode:e.mode,text:t}:e})),l=ft(s,t.withFont("mathrm"),!0),h=0;h<l.length;h++){var c=l[h];c instanceof Z&&(c.text=c.text.replace(/\u2212/,"-").replace(/\u2217/,"*"))}i=Ke.makeSpan(["mop"],l,t)}else i=Ke.makeSpan(["mop"],[],t);return o?mn(i,r,n,t,t.style,0,0):i};function yn(e,t,r){for(var n=ft(e,t,!1),a=t.sizeMultiplier/r.sizeMultiplier,i=0;i<n.length;i++){var o=n[i].classes.indexOf("sizing");o<0?Array.prototype.push.apply(n[i].classes,t.sizingClasses(r)):n[i].classes[o+1]==="reset-size"+t.size&&(n[i].classes[o+1]="reset-size"+r.size),n[i].height*=a,n[i].depth*=a}return Ke.makeFragment(n)}ot({type:"operatorname",names:["\\operatorname@","\\operatornamewithlimits"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"operatorname",mode:r.mode,body:ht(a),alwaysHandleSupSub:"\\operatornamewithlimits"===n,limits:!1,parentIsSupSub:!1}},htmlBuilder:vn,mathmlBuilder:function(e,t){for(var r=qt(e.body,t.withFont("mathrm")),n=!0,a=0;a<r.length;a++){var i=r[a];if(i instanceof Tt.SpaceNode);else if(i instanceof Tt.MathNode)switch(i.type){case"mi":case"mn":case"ms":case"mspace":case"mtext":break;case"mo":var o=i.children[0];1===i.children.length&&o instanceof Tt.TextNode?o.text=o.text.replace(/\u2212/,"-").replace(/\u2217/,"*"):n=!1;break;default:n=!1}else n=!1}if(n){var s=r.map((function(e){return e.toText()})).join("");r=[new Tt.TextNode(s)]}var l=new Tt.MathNode("mi",r);l.setAttribute("mathvariant","normal");var h=new Tt.MathNode("mo",[Bt("\u2061","text")]);return e.parentIsSupSub?new Tt.MathNode("mrow",[l,h]):Tt.newDocumentFragment([l,h])}}),Pr("\\operatorname","\\@ifstar\\operatornamewithlimits\\operatorname@"),st({type:"ordgroup",htmlBuilder:function(e,t){return e.semisimple?Ke.makeFragment(ft(e.body,t,!1)):Ke.makeSpan(["mord"],ft(e.body,t,!0),t)},mathmlBuilder:function(e,t){return It(e.body,t,!0)}}),ot({type:"overline",names:["\\overline"],props:{numArgs:1},handler:function(e,t){var r=e.parser,n=t[0];return{type:"overline",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=wt(e.body,t.havingCrampedStyle()),n=Ke.makeLineSpan("overline-line",t),a=t.fontMetrics().defaultRuleThickness,i=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:3*a},{type:"elem",elem:n},{type:"kern",size:a}]},t);return Ke.makeSpan(["mord","overline"],[i],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mo",[new Tt.TextNode("\u203e")]);r.setAttribute("stretchy","true");var n=new Tt.MathNode("mover",[Rt(e.body,t),r]);return n.setAttribute("accent","true"),n}}),ot({type:"phantom",names:["\\phantom"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"phantom",mode:r.mode,body:ht(n)}},htmlBuilder:function(e,t){var r=ft(e.body,t.withPhantom(),!1);return Ke.makeFragment(r)},mathmlBuilder:function(e,t){var r=qt(e.body,t);return new Tt.MathNode("mphantom",r)}}),ot({type:"hphantom",names:["\\hphantom"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"hphantom",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=Ke.makeSpan([],[wt(e.body,t.withPhantom())]);if(r.height=0,r.depth=0,r.children)for(var n=0;n<r.children.length;n++)r.children[n].height=0,r.children[n].depth=0;return r=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},t),Ke.makeSpan(["mord"],[r],t)},mathmlBuilder:function(e,t){var r=qt(ht(e.body),t),n=new Tt.MathNode("mphantom",r),a=new Tt.MathNode("mpadded",[n]);return a.setAttribute("height","0px"),a.setAttribute("depth","0px"),a}}),ot({type:"vphantom",names:["\\vphantom"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){var r=e.parser,n=t[0];return{type:"vphantom",mode:r.mode,body:n}},htmlBuilder:function(e,t){var r=Ke.makeSpan(["inner"],[wt(e.body,t.withPhantom())]),n=Ke.makeSpan(["fix"],[]);return Ke.makeSpan(["mord","rlap"],[r,n],t)},mathmlBuilder:function(e,t){var r=qt(ht(e.body),t),n=new Tt.MathNode("mphantom",r),a=new Tt.MathNode("mpadded",[n]);return a.setAttribute("width","0px"),a}}),ot({type:"raisebox",names:["\\raisebox"],props:{numArgs:2,argTypes:["size","hbox"],allowedInText:!0},handler:function(e,t){var r=e.parser,n=Ut(t[0],"size").value,a=t[1];return{type:"raisebox",mode:r.mode,dy:n,body:a}},htmlBuilder:function(e,t){var r=wt(e.body,t),n=P(e.dy,t);return Ke.makeVList({positionType:"shift",positionData:-n,children:[{type:"elem",elem:r}]},t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mpadded",[Rt(e.body,t)]),n=e.dy.number+e.dy.unit;return r.setAttribute("voffset",n),r}}),ot({type:"internal",names:["\\relax"],props:{numArgs:0,allowedInText:!0},handler:function(e){return{type:"internal",mode:e.parser.mode}}}),ot({type:"rule",names:["\\rule"],props:{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},handler:function(e,t,r){var n=e.parser,a=r[0],i=Ut(t[0],"size"),o=Ut(t[1],"size");return{type:"rule",mode:n.mode,shift:a&&Ut(a,"size").value,width:i.value,height:o.value}},htmlBuilder:function(e,t){var r=Ke.makeSpan(["mord","rule"],[],t),n=P(e.width,t),a=P(e.height,t),i=e.shift?P(e.shift,t):0;return r.style.borderRightWidth=F(n),r.style.borderTopWidth=F(a),r.style.bottom=F(i),r.width=n,r.height=a+i,r.depth=-i,r.maxFontSize=1.125*a*t.sizeMultiplier,r},mathmlBuilder:function(e,t){var r=P(e.width,t),n=P(e.height,t),a=e.shift?P(e.shift,t):0,i=t.color&&t.getColor()||"black",o=new Tt.MathNode("mspace");o.setAttribute("mathbackground",i),o.setAttribute("width",F(r)),o.setAttribute("height",F(n));var s=new Tt.MathNode("mpadded",[o]);return a>=0?s.setAttribute("height",F(a)):(s.setAttribute("height",F(a)),s.setAttribute("depth",F(-a))),s.setAttribute("voffset",F(a)),s}});var bn=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];ot({type:"sizing",names:bn,props:{numArgs:0,allowedInText:!0},handler:function(e,t){var r=e.breakOnTokenText,n=e.funcName,a=e.parser,i=a.parseExpression(!1,r);return{type:"sizing",mode:a.mode,size:bn.indexOf(n)+1,body:i}},htmlBuilder:function(e,t){var r=t.havingSize(e.size);return yn(e.body,r,t)},mathmlBuilder:function(e,t){var r=t.havingSize(e.size),n=qt(e.body,r),a=new Tt.MathNode("mstyle",n);return a.setAttribute("mathsize",F(r.sizeMultiplier)),a}}),ot({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:!0},handler:function(e,t,r){var n=e.parser,a=!1,i=!1,o=r[0]&&Ut(r[0],"ordgroup");if(o)for(var s="",l=0;l<o.body.length;++l){if("t"===(s=o.body[l].text))a=!0;else{if("b"!==s){a=!1,i=!1;break}i=!0}}else a=!0,i=!0;var h=t[0];return{type:"smash",mode:n.mode,body:h,smashHeight:a,smashDepth:i}},htmlBuilder:function(e,t){var r=Ke.makeSpan([],[wt(e.body,t)]);if(!e.smashHeight&&!e.smashDepth)return r;if(e.smashHeight&&(r.height=0,r.children))for(var n=0;n<r.children.length;n++)r.children[n].height=0;if(e.smashDepth&&(r.depth=0,r.children))for(var a=0;a<r.children.length;a++)r.children[a].depth=0;var i=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},t);return Ke.makeSpan(["mord"],[i],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mpadded",[Rt(e.body,t)]);return e.smashHeight&&r.setAttribute("height","0px"),e.smashDepth&&r.setAttribute("depth","0px"),r}}),ot({type:"sqrt",names:["\\sqrt"],props:{numArgs:1,numOptionalArgs:1},handler:function(e,t,r){var n=e.parser,a=r[0],i=t[0];return{type:"sqrt",mode:n.mode,body:i,index:a}},htmlBuilder:function(e,t){var r=wt(e.body,t.havingCrampedStyle());0===r.height&&(r.height=t.fontMetrics().xHeight),r=Ke.wrapFragment(r,t);var n=t.fontMetrics().defaultRuleThickness,a=n;t.style.id<x.TEXT.id&&(a=t.fontMetrics().xHeight);var i=n+a/4,o=r.height+r.depth+i+n,s=Nr.sqrtImage(o,t),l=s.span,h=s.ruleWidth,c=s.advanceWidth,m=l.height-h;m>r.height+r.depth+i&&(i=(i+m-r.height-r.depth)/2);var u=l.height-r.height-i-h;r.style.paddingLeft=F(c);var p=Ke.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r,wrapperClasses:["svg-align"]},{type:"kern",size:-(r.height+u)},{type:"elem",elem:l},{type:"kern",size:h}]},t);if(e.index){var d=t.havingStyle(x.SCRIPTSCRIPT),f=wt(e.index,d,t),g=.6*(p.height-p.depth),v=Ke.makeVList({positionType:"shift",positionData:-g,children:[{type:"elem",elem:f}]},t),y=Ke.makeSpan(["root"],[v]);return Ke.makeSpan(["mord","sqrt"],[y,p],t)}return Ke.makeSpan(["mord","sqrt"],[p],t)},mathmlBuilder:function(e,t){var r=e.body,n=e.index;return n?new Tt.MathNode("mroot",[Rt(r,t),Rt(n,t)]):new Tt.MathNode("msqrt",[Rt(r,t)])}});var xn={display:x.DISPLAY,text:x.TEXT,script:x.SCRIPT,scriptscript:x.SCRIPTSCRIPT};ot({type:"styling",names:["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],props:{numArgs:0,allowedInText:!0,primitive:!0},handler:function(e,t){var r=e.breakOnTokenText,n=e.funcName,a=e.parser,i=a.parseExpression(!0,r),o=n.slice(1,n.length-5);return{type:"styling",mode:a.mode,style:o,body:i}},htmlBuilder:function(e,t){var r=xn[e.style],n=t.havingStyle(r).withFont("");return yn(e.body,n,t)},mathmlBuilder:function(e,t){var r=xn[e.style],n=t.havingStyle(r),a=qt(e.body,n),i=new Tt.MathNode("mstyle",a),o={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]}[e.style];return i.setAttribute("scriptlevel",o[0]),i.setAttribute("displaystyle",o[1]),i}});var wn=function(e,t){var r=e.base;return r?"op"===r.type?r.limits&&(t.style.size===x.DISPLAY.size||r.alwaysHandleSupSub)?pn:null:"operatorname"===r.type?r.alwaysHandleSupSub&&(t.style.size===x.DISPLAY.size||r.limits)?vn:null:"accent"===r.type?l.isCharacterBox(r.base)?Wt:null:"horizBrace"===r.type&&!e.sub===r.isOver?ln:null:null};st({type:"supsub",htmlBuilder:function(e,t){var r=wn(e,t);if(r)return r(e,t);var n,a,i,o=e.base,s=e.sup,h=e.sub,c=wt(o,t),m=t.fontMetrics(),u=0,p=0,d=o&&l.isCharacterBox(o);if(s){var f=t.havingStyle(t.style.sup());n=wt(s,f,t),d||(u=c.height-f.fontMetrics().supDrop*f.sizeMultiplier/t.sizeMultiplier)}if(h){var g=t.havingStyle(t.style.sub());a=wt(h,g,t),d||(p=c.depth+g.fontMetrics().subDrop*g.sizeMultiplier/t.sizeMultiplier)}i=t.style===x.DISPLAY?m.sup1:t.style.cramped?m.sup3:m.sup2;var v,y=t.sizeMultiplier,b=F(.5/m.ptPerEm/y),w=null;if(a){var k=e.base&&"op"===e.base.type&&e.base.name&&("\\oiint"===e.base.name||"\\oiiint"===e.base.name);(c instanceof Z||k)&&(w=F(-c.italic))}if(n&&a){u=Math.max(u,i,n.depth+.25*m.xHeight),p=Math.max(p,m.sub2);var S=4*m.defaultRuleThickness;if(u-n.depth-(a.height-p)<S){p=S-(u-n.depth)+a.height;var M=.8*m.xHeight-(u-n.depth);M>0&&(u+=M,p-=M)}var z=[{type:"elem",elem:a,shift:p,marginRight:b,marginLeft:w},{type:"elem",elem:n,shift:-u,marginRight:b}];v=Ke.makeVList({positionType:"individualShift",children:z},t)}else if(a){p=Math.max(p,m.sub1,a.height-.8*m.xHeight);var A=[{type:"elem",elem:a,marginLeft:w,marginRight:b}];v=Ke.makeVList({positionType:"shift",positionData:p,children:A},t)}else{if(!n)throw new Error("supsub must have either sup or sub.");u=Math.max(u,i,n.depth+.25*m.xHeight),v=Ke.makeVList({positionType:"shift",positionData:-u,children:[{type:"elem",elem:n,marginRight:b}]},t)}var T=bt(c,"right")||"mord";return Ke.makeSpan([T],[c,Ke.makeSpan(["msupsub"],[v])],t)},mathmlBuilder:function(e,t){var r,n=!1;e.base&&"horizBrace"===e.base.type&&!!e.sup===e.base.isOver&&(n=!0,r=e.base.isOver),!e.base||"op"!==e.base.type&&"operatorname"!==e.base.type||(e.base.parentIsSupSub=!0);var a,i=[Rt(e.base,t)];if(e.sub&&i.push(Rt(e.sub,t)),e.sup&&i.push(Rt(e.sup,t)),n)a=r?"mover":"munder";else if(e.sub)if(e.sup){var o=e.base;a=o&&"op"===o.type&&o.limits&&t.style===x.DISPLAY||o&&"operatorname"===o.type&&o.alwaysHandleSupSub&&(t.style===x.DISPLAY||o.limits)?"munderover":"msubsup"}else{var s=e.base;a=s&&"op"===s.type&&s.limits&&(t.style===x.DISPLAY||s.alwaysHandleSupSub)||s&&"operatorname"===s.type&&s.alwaysHandleSupSub&&(s.limits||t.style===x.DISPLAY)?"munder":"msub"}else{var l=e.base;a=l&&"op"===l.type&&l.limits&&(t.style===x.DISPLAY||l.alwaysHandleSupSub)||l&&"operatorname"===l.type&&l.alwaysHandleSupSub&&(l.limits||t.style===x.DISPLAY)?"mover":"msup"}return new Tt.MathNode(a,i)}}),st({type:"atom",htmlBuilder:function(e,t){return Ke.mathsym(e.text,e.mode,t,["m"+e.family])},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mo",[Bt(e.text,e.mode)]);if("bin"===e.family){var n=Nt(e,t);"bold-italic"===n&&r.setAttribute("mathvariant",n)}else"punct"===e.family?r.setAttribute("separator","true"):"open"!==e.family&&"close"!==e.family||r.setAttribute("stretchy","false");return r}});var kn={mi:"italic",mn:"normal",mtext:"normal"};st({type:"mathord",htmlBuilder:function(e,t){return Ke.makeOrd(e,t,"mathord")},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mi",[Bt(e.text,e.mode,t)]),n=Nt(e,t)||"italic";return n!==kn[r.type]&&r.setAttribute("mathvariant",n),r}}),st({type:"textord",htmlBuilder:function(e,t){return Ke.makeOrd(e,t,"textord")},mathmlBuilder:function(e,t){var r,n=Bt(e.text,e.mode,t),a=Nt(e,t)||"normal";return r="text"===e.mode?new Tt.MathNode("mtext",[n]):/[0-9]/.test(e.text)?new Tt.MathNode("mn",[n]):"\\prime"===e.text?new Tt.MathNode("mo",[n]):new Tt.MathNode("mi",[n]),a!==kn[r.type]&&r.setAttribute("mathvariant",a),r}});var Sn={"\\nobreak":"nobreak","\\allowbreak":"allowbreak"},Mn={" ":{},"\\ ":{},"~":{className:"nobreak"},"\\space":{},"\\nobreakspace":{className:"nobreak"}};st({type:"spacing",htmlBuilder:function(e,t){if(Mn.hasOwnProperty(e.text)){var r=Mn[e.text].className||"";if("text"===e.mode){var a=Ke.makeOrd(e,t,"textord");return a.classes.push(r),a}return Ke.makeSpan(["mspace",r],[Ke.mathsym(e.text,e.mode,t)],t)}if(Sn.hasOwnProperty(e.text))return Ke.makeSpan(["mspace",Sn[e.text]],[],t);throw new n('Unknown type of space "'+e.text+'"')},mathmlBuilder:function(e,t){if(!Mn.hasOwnProperty(e.text)){if(Sn.hasOwnProperty(e.text))return new Tt.MathNode("mspace");throw new n('Unknown type of space "'+e.text+'"')}return new Tt.MathNode("mtext",[new Tt.TextNode("\xa0")])}});var zn=function(){var e=new Tt.MathNode("mtd",[]);return e.setAttribute("width","50%"),e};st({type:"tag",mathmlBuilder:function(e,t){var r=new Tt.MathNode("mtable",[new Tt.MathNode("mtr",[zn(),new Tt.MathNode("mtd",[It(e.body,t)]),zn(),new Tt.MathNode("mtd",[It(e.tag,t)])])]);return r.setAttribute("width","100%"),r}});var An={"\\text":void 0,"\\textrm":"textrm","\\textsf":"textsf","\\texttt":"texttt","\\textnormal":"textrm"},Tn={"\\textbf":"textbf","\\textmd":"textmd"},Bn={"\\textit":"textit","\\textup":"textup"},Cn=function(e,t){var r=e.font;return r?An[r]?t.withTextFontFamily(An[r]):Tn[r]?t.withTextFontWeight(Tn[r]):t.withTextFontShape(Bn[r]):t};ot({type:"text",names:["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textmd","\\textit","\\textup"],props:{numArgs:1,argTypes:["text"],allowedInArgument:!0,allowedInText:!0},handler:function(e,t){var r=e.parser,n=e.funcName,a=t[0];return{type:"text",mode:r.mode,body:ht(a),font:n}},htmlBuilder:function(e,t){var r=Cn(e,t),n=ft(e.body,r,!0);return Ke.makeSpan(["mord","text"],n,r)},mathmlBuilder:function(e,t){var r=Cn(e,t);return It(e.body,r)}}),ot({type:"underline",names:["\\underline"],props:{numArgs:1,allowedInText:!0},handler:function(e,t){return{type:"underline",mode:e.parser.mode,body:t[0]}},htmlBuilder:function(e,t){var r=wt(e.body,t),n=Ke.makeLineSpan("underline-line",t),a=t.fontMetrics().defaultRuleThickness,i=Ke.makeVList({positionType:"top",positionData:r.height,children:[{type:"kern",size:a},{type:"elem",elem:n},{type:"kern",size:3*a},{type:"elem",elem:r}]},t);return Ke.makeSpan(["mord","underline"],[i],t)},mathmlBuilder:function(e,t){var r=new Tt.MathNode("mo",[new Tt.TextNode("\u203e")]);r.setAttribute("stretchy","true");var n=new Tt.MathNode("munder",[Rt(e.body,t),r]);return n.setAttribute("accentunder","true"),n}}),ot({type:"vcenter",names:["\\vcenter"],props:{numArgs:1,argTypes:["original"],allowedInText:!1},handler:function(e,t){return{type:"vcenter",mode:e.parser.mode,body:t[0]}},htmlBuilder:function(e,t){var r=wt(e.body,t),n=t.fontMetrics().axisHeight,a=.5*(r.height-n-(r.depth+n));return Ke.makeVList({positionType:"shift",positionData:a,children:[{type:"elem",elem:r}]},t)},mathmlBuilder:function(e,t){return new Tt.MathNode("mpadded",[Rt(e.body,t)],["vcenter"])}}),ot({type:"verb",names:["\\verb"],props:{numArgs:0,allowedInText:!0},handler:function(e,t,r){throw new n("\\verb ended by end of line instead of matching delimiter")},htmlBuilder:function(e,t){for(var r=Nn(e),n=[],a=t.havingStyle(t.style.text()),i=0;i<r.length;i++){var o=r[i];"~"===o&&(o="\\textasciitilde"),n.push(Ke.makeSymbol(o,"Typewriter-Regular",e.mode,a,["mord","texttt"]))}return Ke.makeSpan(["mord","text"].concat(a.sizingClasses(t)),Ke.tryCombineChars(n),a)},mathmlBuilder:function(e,t){var r=new Tt.TextNode(Nn(e)),n=new Tt.MathNode("mtext",[r]);return n.setAttribute("mathvariant","monospace"),n}});var Nn=function(e){return e.body.replace(/ /g,e.star?"\u2423":"\xa0")},qn=nt,In=new RegExp("[\u0300-\u036f]+$"),Rn=function(){function e(e,t){this.input=void 0,this.settings=void 0,this.tokenRegex=void 0,this.catcodes=void 0,this.input=e,this.settings=t,this.tokenRegex=new RegExp("([ \r\n\t]+)|\\\\(\n|[ \r\t]+\n?)[ \r\t]*|([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff][\u0300-\u036f]*|[\ud800-\udbff][\udc00-\udfff][\u0300-\u036f]*|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5|(\\\\[a-zA-Z@]+)[ \r\n\t]*|\\\\[^\ud800-\udfff])","g"),this.catcodes={"%":14,"~":13}}var t=e.prototype;return t.setCatcode=function(e,t){this.catcodes[e]=t},t.lex=function(){var e=this.input,t=this.tokenRegex.lastIndex;if(t===e.length)return new Gr("EOF",new Fr(this,t,t));var r=this.tokenRegex.exec(e);if(null===r||r.index!==t)throw new n("Unexpected character: '"+e[t]+"'",new Gr(e[t],new Fr(this,t,t+1)));var a=r[6]||r[3]||(r[2]?"\\ ":" ");if(14===this.catcodes[a]){var i=e.indexOf("\n",this.tokenRegex.lastIndex);return-1===i?(this.tokenRegex.lastIndex=e.length,this.settings.reportNonstrict("commentAtEnd","% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")):this.tokenRegex.lastIndex=i+1,this.lex()}return new Gr(a,new Fr(this,t,this.tokenRegex.lastIndex))},e}(),Hn=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={}),this.current=void 0,this.builtins=void 0,this.undefStack=void 0,this.current=t,this.builtins=e,this.undefStack=[]}var t=e.prototype;return t.beginGroup=function(){this.undefStack.push({})},t.endGroup=function(){if(0===this.undefStack.length)throw new n("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");var e=this.undefStack.pop();for(var t in e)e.hasOwnProperty(t)&&(null==e[t]?delete this.current[t]:this.current[t]=e[t])},t.endGroups=function(){for(;this.undefStack.length>0;)this.endGroup()},t.has=function(e){return this.current.hasOwnProperty(e)||this.builtins.hasOwnProperty(e)},t.get=function(e){return this.current.hasOwnProperty(e)?this.current[e]:this.builtins[e]},t.set=function(e,t,r){if(void 0===r&&(r=!1),r){for(var n=0;n<this.undefStack.length;n++)delete this.undefStack[n][e];this.undefStack.length>0&&(this.undefStack[this.undefStack.length-1][e]=t)}else{var a=this.undefStack[this.undefStack.length-1];a&&!a.hasOwnProperty(e)&&(a[e]=this.current[e])}null==t?delete this.current[e]:this.current[e]=t},e}(),On=Vr;Pr("\\noexpand",(function(e){var t=e.popToken();return e.isExpandable(t.text)&&(t.noexpand=!0,t.treatAsRelax=!0),{tokens:[t],numArgs:0}})),Pr("\\expandafter",(function(e){var t=e.popToken();return e.expandOnce(!0),{tokens:[t],numArgs:0}})),Pr("\\@firstoftwo",(function(e){return{tokens:e.consumeArgs(2)[0],numArgs:0}})),Pr("\\@secondoftwo",(function(e){return{tokens:e.consumeArgs(2)[1],numArgs:0}})),Pr("\\@ifnextchar",(function(e){var t=e.consumeArgs(3);e.consumeSpaces();var r=e.future();return 1===t[0].length&&t[0][0].text===r.text?{tokens:t[1],numArgs:0}:{tokens:t[2],numArgs:0}})),Pr("\\@ifstar","\\@ifnextchar *{\\@firstoftwo{#1}}"),Pr("\\TextOrMath",(function(e){var t=e.consumeArgs(2);return"text"===e.mode?{tokens:t[0],numArgs:0}:{tokens:t[1],numArgs:0}}));var En={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15};Pr("\\char",(function(e){var t,r=e.popToken(),a="";if("'"===r.text)t=8,r=e.popToken();else if('"'===r.text)t=16,r=e.popToken();else if(""===r.text)if("\\"===(r=e.popToken()).text[0])a=r.text.charCodeAt(1);else{if("EOF"===r.text)throw new n("\\char missing argument");a=r.text.charCodeAt(0)}else t=10;if(t){if(null==(a=En[r.text])||a>=t)throw new n("Invalid base-"+t+" digit "+r.text);for(var i;null!=(i=En[e.future().text])&&i<t;)a*=t,a+=i,e.popToken()}return"\\@char{"+a+"}"}));var Ln=function(e,t,r){var a=e.consumeArg().tokens;if(1!==a.length)throw new n("\\newcommand's first argument must be a macro name");var i=a[0].text,o=e.isDefined(i);if(o&&!t)throw new n("\\newcommand{"+i+"} attempting to redefine "+i+"; use \\renewcommand");if(!o&&!r)throw new n("\\renewcommand{"+i+"} when command "+i+" does not yet exist; use \\newcommand");var s=0;if(1===(a=e.consumeArg().tokens).length&&"["===a[0].text){for(var l="",h=e.expandNextToken();"]"!==h.text&&"EOF"!==h.text;)l+=h.text,h=e.expandNextToken();if(!l.match(/^\s*[0-9]+\s*$/))throw new n("Invalid number of arguments: "+l);s=parseInt(l),a=e.consumeArg().tokens}return e.macros.set(i,{tokens:a,numArgs:s}),""};Pr("\\newcommand",(function(e){return Ln(e,!1,!0)})),Pr("\\renewcommand",(function(e){return Ln(e,!0,!1)})),Pr("\\providecommand",(function(e){return Ln(e,!0,!0)})),Pr("\\message",(function(e){var t=e.consumeArgs(1)[0];return console.log(t.reverse().map((function(e){return e.text})).join("")),""})),Pr("\\errmessage",(function(e){var t=e.consumeArgs(1)[0];return console.error(t.reverse().map((function(e){return e.text})).join("")),""})),Pr("\\show",(function(e){var t=e.popToken(),r=t.text;return console.log(t,e.macros.get(r),qn[r],ae.math[r],ae.text[r]),""})),Pr("\\bgroup","{"),Pr("\\egroup","}"),Pr("~","\\nobreakspace"),Pr("\\lq",""),Pr("\\rq","'"),Pr("\\aa","\\r a"),Pr("\\AA","\\r A"),Pr("\\textcopyright","\\html@mathml{\\textcircled{c}}{\\char\xa9}"),Pr("\\copyright","\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}"),Pr("\\textregistered","\\html@mathml{\\textcircled{\\scriptsize R}}{\\char\xae}"),Pr("\u212c","\\mathscr{B}"),Pr("\u2130","\\mathscr{E}"),Pr("\u2131","\\mathscr{F}"),Pr("\u210b","\\mathscr{H}"),Pr("\u2110","\\mathscr{I}"),Pr("\u2112","\\mathscr{L}"),Pr("\u2133","\\mathscr{M}"),Pr("\u211b","\\mathscr{R}"),Pr("\u212d","\\mathfrak{C}"),Pr("\u210c","\\mathfrak{H}"),Pr("\u2128","\\mathfrak{Z}"),Pr("\\Bbbk","\\Bbb{k}"),Pr("\xb7","\\cdotp"),Pr("\\llap","\\mathllap{\\textrm{#1}}"),Pr("\\rlap","\\mathrlap{\\textrm{#1}}"),Pr("\\clap","\\mathclap{\\textrm{#1}}"),Pr("\\mathstrut","\\vphantom{(}"),Pr("\\underbar","\\underline{\\text{#1}}"),Pr("\\not",'\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}'),Pr("\\neq","\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char\u2260}}"),Pr("\\ne","\\neq"),Pr("\u2260","\\neq"),Pr("\\notin","\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char\u2209}}"),Pr("\u2209","\\notin"),Pr("\u2258","\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char\u2258}}"),Pr("\u2259","\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char\u2258}}"),Pr("\u225a","\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char\u225a}}"),Pr("\u225b","\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char\u225b}}"),Pr("\u225d","\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char\u225d}}"),Pr("\u225e","\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char\u225e}}"),Pr("\u225f","\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char\u225f}}"),Pr("\u27c2","\\perp"),Pr("\u203c","\\mathclose{!\\mkern-0.8mu!}"),Pr("\u220c","\\notni"),Pr("\u231c","\\ulcorner"),Pr("\u231d","\\urcorner"),Pr("\u231e","\\llcorner"),Pr("\u231f","\\lrcorner"),Pr("\xa9","\\copyright"),Pr("\xae","\\textregistered"),Pr("\ufe0f","\\textregistered"),Pr("\\ulcorner",'\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}'),Pr("\\urcorner",'\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}'),Pr("\\llcorner",'\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}'),Pr("\\lrcorner",'\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}'),Pr("\\vdots","\\mathord{\\varvdots\\rule{0pt}{15pt}}"),Pr("\u22ee","\\vdots"),Pr("\\varGamma","\\mathit{\\Gamma}"),Pr("\\varDelta","\\mathit{\\Delta}"),Pr("\\varTheta","\\mathit{\\Theta}"),Pr("\\varLambda","\\mathit{\\Lambda}"),Pr("\\varXi","\\mathit{\\Xi}"),Pr("\\varPi","\\mathit{\\Pi}"),Pr("\\varSigma","\\mathit{\\Sigma}"),Pr("\\varUpsilon","\\mathit{\\Upsilon}"),Pr("\\varPhi","\\mathit{\\Phi}"),Pr("\\varPsi","\\mathit{\\Psi}"),Pr("\\varOmega","\\mathit{\\Omega}"),Pr("\\substack","\\begin{subarray}{c}#1\\end{subarray}"),Pr("\\colon","\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax"),Pr("\\boxed","\\fbox{$\\displaystyle{#1}$}"),Pr("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;"),Pr("\\implies","\\DOTSB\\;\\Longrightarrow\\;"),Pr("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");var Dn={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcup":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};Pr("\\dots",(function(e){var t="\\dotso",r=e.expandAfterFuture().text;return r in Dn?t=Dn[r]:("\\not"===r.slice(0,4)||r in ae.math&&l.contains(["bin","rel"],ae.math[r].group))&&(t="\\dotsb"),t}));var Vn={")":!0,"]":!0,"\\rbrack":!0,"\\}":!0,"\\rbrace":!0,"\\rangle":!0,"\\rceil":!0,"\\rfloor":!0,"\\rgroup":!0,"\\rmoustache":!0,"\\right":!0,"\\bigr":!0,"\\biggr":!0,"\\Bigr":!0,"\\Biggr":!0,$:!0,";":!0,".":!0,",":!0};Pr("\\dotso",(function(e){return e.future().text in Vn?"\\ldots\\,":"\\ldots"})),Pr("\\dotsc",(function(e){var t=e.future().text;return t in Vn&&","!==t?"\\ldots\\,":"\\ldots"})),Pr("\\cdots",(function(e){return e.future().text in Vn?"\\@cdots\\,":"\\@cdots"})),Pr("\\dotsb","\\cdots"),Pr("\\dotsm","\\cdots"),Pr("\\dotsi","\\!\\cdots"),Pr("\\dotsx","\\ldots\\,"),Pr("\\DOTSI","\\relax"),Pr("\\DOTSB","\\relax"),Pr("\\DOTSX","\\relax"),Pr("\\tmspace","\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"),Pr("\\,","\\tmspace+{3mu}{.1667em}"),Pr("\\thinspace","\\,"),Pr("\\>","\\mskip{4mu}"),Pr("\\:","\\tmspace+{4mu}{.2222em}"),Pr("\\medspace","\\:"),Pr("\\;","\\tmspace+{5mu}{.2777em}"),Pr("\\thickspace","\\;"),Pr("\\!","\\tmspace-{3mu}{.1667em}"),Pr("\\negthinspace","\\!"),Pr("\\negmedspace","\\tmspace-{4mu}{.2222em}"),Pr("\\negthickspace","\\tmspace-{5mu}{.277em}"),Pr("\\enspace","\\kern.5em "),Pr("\\enskip","\\hskip.5em\\relax"),Pr("\\quad","\\hskip1em\\relax"),Pr("\\qquad","\\hskip2em\\relax"),Pr("\\tag","\\@ifstar\\tag@literal\\tag@paren"),Pr("\\tag@paren","\\tag@literal{({#1})}"),Pr("\\tag@literal",(function(e){if(e.macros.get("\\df@tag"))throw new n("Multiple \\tag");return"\\gdef\\df@tag{\\text{#1}}"})),Pr("\\bmod","\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"),Pr("\\pod","\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)"),Pr("\\pmod","\\pod{{\\rm mod}\\mkern6mu#1}"),Pr("\\mod","\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1"),Pr("\\newline","\\\\\\relax"),Pr("\\TeX","\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");var Pn=F(T["Main-Regular"]["T".charCodeAt(0)][1]-.7*T["Main-Regular"]["A".charCodeAt(0)][1]);Pr("\\LaTeX","\\textrm{\\html@mathml{L\\kern-.36em\\raisebox{"+Pn+"}{\\scriptstyle A}\\kern-.15em\\TeX}{LaTeX}}"),Pr("\\KaTeX","\\textrm{\\html@mathml{K\\kern-.17em\\raisebox{"+Pn+"}{\\scriptstyle A}\\kern-.15em\\TeX}{KaTeX}}"),Pr("\\hspace","\\@ifstar\\@hspacer\\@hspace"),Pr("\\@hspace","\\hskip #1\\relax"),Pr("\\@hspacer","\\rule{0pt}{0pt}\\hskip #1\\relax"),Pr("\\ordinarycolon",":"),Pr("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}"),Pr("\\dblcolon",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}'),Pr("\\coloneqq",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}'),Pr("\\Coloneqq",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}'),Pr("\\coloneq",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}'),Pr("\\Coloneq",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}'),Pr("\\eqqcolon",'\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}'),Pr("\\Eqqcolon",'\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}'),Pr("\\eqcolon",'\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}'),Pr("\\Eqcolon",'\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}'),Pr("\\colonapprox",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}'),Pr("\\Colonapprox",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}'),Pr("\\colonsim",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}'),Pr("\\Colonsim",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}'),Pr("\u2237","\\dblcolon"),Pr("\u2239","\\eqcolon"),Pr("\u2254","\\coloneqq"),Pr("\u2255","\\eqqcolon"),Pr("\u2a74","\\Coloneqq"),Pr("\\ratio","\\vcentcolon"),Pr("\\coloncolon","\\dblcolon"),Pr("\\colonequals","\\coloneqq"),Pr("\\coloncolonequals","\\Coloneqq"),Pr("\\equalscolon","\\eqqcolon"),Pr("\\equalscoloncolon","\\Eqqcolon"),Pr("\\colonminus","\\coloneq"),Pr("\\coloncolonminus","\\Coloneq"),Pr("\\minuscolon","\\eqcolon"),Pr("\\minuscoloncolon","\\Eqcolon"),Pr("\\coloncolonapprox","\\Colonapprox"),Pr("\\coloncolonsim","\\Colonsim"),Pr("\\simcolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),Pr("\\simcoloncolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}"),Pr("\\approxcolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),Pr("\\approxcoloncolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}"),Pr("\\notni","\\html@mathml{\\not\\ni}{\\mathrel{\\char\u220c}}"),Pr("\\limsup","\\DOTSB\\operatorname*{lim\\,sup}"),Pr("\\liminf","\\DOTSB\\operatorname*{lim\\,inf}"),Pr("\\injlim","\\DOTSB\\operatorname*{inj\\,lim}"),Pr("\\projlim","\\DOTSB\\operatorname*{proj\\,lim}"),Pr("\\varlimsup","\\DOTSB\\operatorname*{\\overline{lim}}"),Pr("\\varliminf","\\DOTSB\\operatorname*{\\underline{lim}}"),Pr("\\varinjlim","\\DOTSB\\operatorname*{\\underrightarrow{lim}}"),Pr("\\varprojlim","\\DOTSB\\operatorname*{\\underleftarrow{lim}}"),Pr("\\gvertneqq","\\html@mathml{\\@gvertneqq}{\u2269}"),Pr("\\lvertneqq","\\html@mathml{\\@lvertneqq}{\u2268}"),Pr("\\ngeqq","\\html@mathml{\\@ngeqq}{\u2271}"),Pr("\\ngeqslant","\\html@mathml{\\@ngeqslant}{\u2271}"),Pr("\\nleqq","\\html@mathml{\\@nleqq}{\u2270}"),Pr("\\nleqslant","\\html@mathml{\\@nleqslant}{\u2270}"),Pr("\\nshortmid","\\html@mathml{\\@nshortmid}{\u2224}"),Pr("\\nshortparallel","\\html@mathml{\\@nshortparallel}{\u2226}"),Pr("\\nsubseteqq","\\html@mathml{\\@nsubseteqq}{\u2288}"),Pr("\\nsupseteqq","\\html@mathml{\\@nsupseteqq}{\u2289}"),Pr("\\varsubsetneq","\\html@mathml{\\@varsubsetneq}{\u228a}"),Pr("\\varsubsetneqq","\\html@mathml{\\@varsubsetneqq}{\u2acb}"),Pr("\\varsupsetneq","\\html@mathml{\\@varsupsetneq}{\u228b}"),Pr("\\varsupsetneqq","\\html@mathml{\\@varsupsetneqq}{\u2acc}"),Pr("\\imath","\\html@mathml{\\@imath}{\u0131}"),Pr("\\jmath","\\html@mathml{\\@jmath}{\u0237}"),Pr("\\llbracket","\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char\u27e6}}"),Pr("\\rrbracket","\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char\u27e7}}"),Pr("\u27e6","\\llbracket"),Pr("\u27e7","\\rrbracket"),Pr("\\lBrace","\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char\u2983}}"),Pr("\\rBrace","\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char\u2984}}"),Pr("\u2983","\\lBrace"),Pr("\u2984","\\rBrace"),Pr("\\minuso","\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char\u29b5}}"),Pr("\u29b5","\\minuso"),Pr("\\darr","\\downarrow"),Pr("\\dArr","\\Downarrow"),Pr("\\Darr","\\Downarrow"),Pr("\\lang","\\langle"),Pr("\\rang","\\rangle"),Pr("\\uarr","\\uparrow"),Pr("\\uArr","\\Uparrow"),Pr("\\Uarr","\\Uparrow"),Pr("\\N","\\mathbb{N}"),Pr("\\R","\\mathbb{R}"),Pr("\\Z","\\mathbb{Z}"),Pr("\\alef","\\aleph"),Pr("\\alefsym","\\aleph"),Pr("\\Alpha","\\mathrm{A}"),Pr("\\Beta","\\mathrm{B}"),Pr("\\bull","\\bullet"),Pr("\\Chi","\\mathrm{X}"),Pr("\\clubs","\\clubsuit"),Pr("\\cnums","\\mathbb{C}"),Pr("\\Complex","\\mathbb{C}"),Pr("\\Dagger","\\ddagger"),Pr("\\diamonds","\\diamondsuit"),Pr("\\empty","\\emptyset"),Pr("\\Epsilon","\\mathrm{E}"),Pr("\\Eta","\\mathrm{H}"),Pr("\\exist","\\exists"),Pr("\\harr","\\leftrightarrow"),Pr("\\hArr","\\Leftrightarrow"),Pr("\\Harr","\\Leftrightarrow"),Pr("\\hearts","\\heartsuit"),Pr("\\image","\\Im"),Pr("\\infin","\\infty"),Pr("\\Iota","\\mathrm{I}"),Pr("\\isin","\\in"),Pr("\\Kappa","\\mathrm{K}"),Pr("\\larr","\\leftarrow"),Pr("\\lArr","\\Leftarrow"),Pr("\\Larr","\\Leftarrow"),Pr("\\lrarr","\\leftrightarrow"),Pr("\\lrArr","\\Leftrightarrow"),Pr("\\Lrarr","\\Leftrightarrow"),Pr("\\Mu","\\mathrm{M}"),Pr("\\natnums","\\mathbb{N}"),Pr("\\Nu","\\mathrm{N}"),Pr("\\Omicron","\\mathrm{O}"),Pr("\\plusmn","\\pm"),Pr("\\rarr","\\rightarrow"),Pr("\\rArr","\\Rightarrow"),Pr("\\Rarr","\\Rightarrow"),Pr("\\real","\\Re"),Pr("\\reals","\\mathbb{R}"),Pr("\\Reals","\\mathbb{R}"),Pr("\\Rho","\\mathrm{P}"),Pr("\\sdot","\\cdot"),Pr("\\sect","\\S"),Pr("\\spades","\\spadesuit"),Pr("\\sub","\\subset"),Pr("\\sube","\\subseteq"),Pr("\\supe","\\supseteq"),Pr("\\Tau","\\mathrm{T}"),Pr("\\thetasym","\\vartheta"),Pr("\\weierp","\\wp"),Pr("\\Zeta","\\mathrm{Z}"),Pr("\\argmin","\\DOTSB\\operatorname*{arg\\,min}"),Pr("\\argmax","\\DOTSB\\operatorname*{arg\\,max}"),Pr("\\plim","\\DOTSB\\mathop{\\operatorname{plim}}\\limits"),Pr("\\bra","\\mathinner{\\langle{#1}|}"),Pr("\\ket","\\mathinner{|{#1}\\rangle}"),Pr("\\braket","\\mathinner{\\langle{#1}\\rangle}"),Pr("\\Bra","\\left\\langle#1\\right|"),Pr("\\Ket","\\left|#1\\right\\rangle");var Fn=function(e){return function(t){var r=t.consumeArg().tokens,n=t.consumeArg().tokens,a=t.consumeArg().tokens,i=t.consumeArg().tokens,o=t.macros.get("|"),s=t.macros.get("\\|");t.macros.beginGroup();var l=function(t){return function(r){e&&(r.macros.set("|",o),a.length&&r.macros.set("\\|",s));var i=t;!t&&a.length&&("|"===r.future().text&&(r.popToken(),i=!0));return{tokens:i?a:n,numArgs:0}}};t.macros.set("|",l(!1)),a.length&&t.macros.set("\\|",l(!0));var h=t.consumeArg().tokens,c=t.expandTokens([].concat(i,h,r));return t.macros.endGroup(),{tokens:c.reverse(),numArgs:0}}};Pr("\\bra@ket",Fn(!1)),Pr("\\bra@set",Fn(!0)),Pr("\\Braket","\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}"),Pr("\\Set","\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}"),Pr("\\set","\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}"),Pr("\\angln","{\\angl n}"),Pr("\\blue","\\textcolor{##6495ed}{#1}"),Pr("\\orange","\\textcolor{##ffa500}{#1}"),Pr("\\pink","\\textcolor{##ff00af}{#1}"),Pr("\\red","\\textcolor{##df0030}{#1}"),Pr("\\green","\\textcolor{##28ae7b}{#1}"),Pr("\\gray","\\textcolor{gray}{#1}"),Pr("\\purple","\\textcolor{##9d38bd}{#1}"),Pr("\\blueA","\\textcolor{##ccfaff}{#1}"),Pr("\\blueB","\\textcolor{##80f6ff}{#1}"),Pr("\\blueC","\\textcolor{##63d9ea}{#1}"),Pr("\\blueD","\\textcolor{##11accd}{#1}"),Pr("\\blueE","\\textcolor{##0c7f99}{#1}"),Pr("\\tealA","\\textcolor{##94fff5}{#1}"),Pr("\\tealB","\\textcolor{##26edd5}{#1}"),Pr("\\tealC","\\textcolor{##01d1c1}{#1}"),Pr("\\tealD","\\textcolor{##01a995}{#1}"),Pr("\\tealE","\\textcolor{##208170}{#1}"),Pr("\\greenA","\\textcolor{##b6ffb0}{#1}"),Pr("\\greenB","\\textcolor{##8af281}{#1}"),Pr("\\greenC","\\textcolor{##74cf70}{#1}"),Pr("\\greenD","\\textcolor{##1fab54}{#1}"),Pr("\\greenE","\\textcolor{##0d923f}{#1}"),Pr("\\goldA","\\textcolor{##ffd0a9}{#1}"),Pr("\\goldB","\\textcolor{##ffbb71}{#1}"),Pr("\\goldC","\\textcolor{##ff9c39}{#1}"),Pr("\\goldD","\\textcolor{##e07d10}{#1}"),Pr("\\goldE","\\textcolor{##a75a05}{#1}"),Pr("\\redA","\\textcolor{##fca9a9}{#1}"),Pr("\\redB","\\textcolor{##ff8482}{#1}"),Pr("\\redC","\\textcolor{##f9685d}{#1}"),Pr("\\redD","\\textcolor{##e84d39}{#1}"),Pr("\\redE","\\textcolor{##bc2612}{#1}"),Pr("\\maroonA","\\textcolor{##ffbde0}{#1}"),Pr("\\maroonB","\\textcolor{##ff92c6}{#1}"),Pr("\\maroonC","\\textcolor{##ed5fa6}{#1}"),Pr("\\maroonD","\\textcolor{##ca337c}{#1}"),Pr("\\maroonE","\\textcolor{##9e034e}{#1}"),Pr("\\purpleA","\\textcolor{##ddd7ff}{#1}"),Pr("\\purpleB","\\textcolor{##c6b9fc}{#1}"),Pr("\\purpleC","\\textcolor{##aa87ff}{#1}"),Pr("\\purpleD","\\textcolor{##7854ab}{#1}"),Pr("\\purpleE","\\textcolor{##543b78}{#1}"),Pr("\\mintA","\\textcolor{##f5f9e8}{#1}"),Pr("\\mintB","\\textcolor{##edf2df}{#1}"),Pr("\\mintC","\\textcolor{##e0e5cc}{#1}"),Pr("\\grayA","\\textcolor{##f6f7f7}{#1}"),Pr("\\grayB","\\textcolor{##f0f1f2}{#1}"),Pr("\\grayC","\\textcolor{##e3e5e6}{#1}"),Pr("\\grayD","\\textcolor{##d6d8da}{#1}"),Pr("\\grayE","\\textcolor{##babec2}{#1}"),Pr("\\grayF","\\textcolor{##888d93}{#1}"),Pr("\\grayG","\\textcolor{##626569}{#1}"),Pr("\\grayH","\\textcolor{##3b3e40}{#1}"),Pr("\\grayI","\\textcolor{##21242c}{#1}"),Pr("\\kaBlue","\\textcolor{##314453}{#1}"),Pr("\\kaGreen","\\textcolor{##71B307}{#1}");var Gn={"^":!0,_:!0,"\\limits":!0,"\\nolimits":!0},Un=function(){function e(e,t,r){this.settings=void 0,this.expansionCount=void 0,this.lexer=void 0,this.macros=void 0,this.stack=void 0,this.mode=void 0,this.settings=t,this.expansionCount=0,this.feed(e),this.macros=new Hn(On,t.macros),this.mode=r,this.stack=[]}var t=e.prototype;return t.feed=function(e){this.lexer=new Rn(e,this.settings)},t.switchMode=function(e){this.mode=e},t.beginGroup=function(){this.macros.beginGroup()},t.endGroup=function(){this.macros.endGroup()},t.endGroups=function(){this.macros.endGroups()},t.future=function(){return 0===this.stack.length&&this.pushToken(this.lexer.lex()),this.stack[this.stack.length-1]},t.popToken=function(){return this.future(),this.stack.pop()},t.pushToken=function(e){this.stack.push(e)},t.pushTokens=function(e){var t;(t=this.stack).push.apply(t,e)},t.scanArgument=function(e){var t,r,n;if(e){if(this.consumeSpaces(),"["!==this.future().text)return null;t=this.popToken();var a=this.consumeArg(["]"]);n=a.tokens,r=a.end}else{var i=this.consumeArg();n=i.tokens,t=i.start,r=i.end}return this.pushToken(new Gr("EOF",r.loc)),this.pushTokens(n),t.range(r,"")},t.consumeSpaces=function(){for(;;){if(" "!==this.future().text)break;this.stack.pop()}},t.consumeArg=function(e){var t=[],r=e&&e.length>0;r||this.consumeSpaces();var a,i=this.future(),o=0,s=0;do{if(a=this.popToken(),t.push(a),"{"===a.text)++o;else if("}"===a.text){if(-1===--o)throw new n("Extra }",a)}else if("EOF"===a.text)throw new n("Unexpected end of input in a macro argument, expected '"+(e&&r?e[s]:"}")+"'",a);if(e&&r)if((0===o||1===o&&"{"===e[s])&&a.text===e[s]){if(++s===e.length){t.splice(-s,s);break}}else s=0}while(0!==o||r);return"{"===i.text&&"}"===t[t.length-1].text&&(t.pop(),t.shift()),t.reverse(),{tokens:t,start:i,end:a}},t.consumeArgs=function(e,t){if(t){if(t.length!==e+1)throw new n("The length of delimiters doesn't match the number of args!");for(var r=t[0],a=0;a<r.length;a++){var i=this.popToken();if(r[a]!==i.text)throw new n("Use of the macro doesn't match its definition",i)}}for(var o=[],s=0;s<e;s++)o.push(this.consumeArg(t&&t[s+1]).tokens);return o},t.expandOnce=function(e){var t=this.popToken(),r=t.text,a=t.noexpand?null:this._getExpansion(r);if(null==a||e&&a.unexpandable){if(e&&null==a&&"\\"===r[0]&&!this.isDefined(r))throw new n("Undefined control sequence: "+r);return this.pushToken(t),t}if(this.expansionCount++,this.expansionCount>this.settings.maxExpand)throw new n("Too many expansions: infinite loop or need to increase maxExpand setting");var i=a.tokens,o=this.consumeArgs(a.numArgs,a.delimiters);if(a.numArgs)for(var s=(i=i.slice()).length-1;s>=0;--s){var l=i[s];if("#"===l.text){if(0===s)throw new n("Incomplete placeholder at end of macro body",l);if("#"===(l=i[--s]).text)i.splice(s+1,1);else{if(!/^[1-9]$/.test(l.text))throw new n("Not a valid argument number",l);var h;(h=i).splice.apply(h,[s,2].concat(o[+l.text-1]))}}}return this.pushTokens(i),i},t.expandAfterFuture=function(){return this.expandOnce(),this.future()},t.expandNextToken=function(){for(;;){var e=this.expandOnce();if(e instanceof Gr)return e.treatAsRelax&&(e.text="\\relax"),this.stack.pop()}throw new Error},t.expandMacro=function(e){return this.macros.has(e)?this.expandTokens([new Gr(e)]):void 0},t.expandTokens=function(e){var t=[],r=this.stack.length;for(this.pushTokens(e);this.stack.length>r;){var n=this.expandOnce(!0);n instanceof Gr&&(n.treatAsRelax&&(n.noexpand=!1,n.treatAsRelax=!1),t.push(this.stack.pop()))}return t},t.expandMacroAsText=function(e){var t=this.expandMacro(e);return t?t.map((function(e){return e.text})).join(""):t},t._getExpansion=function(e){var t=this.macros.get(e);if(null==t)return t;if(1===e.length){var r=this.lexer.catcodes[e];if(null!=r&&13!==r)return}var n="function"==typeof t?t(this):t;if("string"==typeof n){var a=0;if(-1!==n.indexOf("#"))for(var i=n.replace(/##/g,"");-1!==i.indexOf("#"+(a+1));)++a;for(var o=new Rn(n,this.settings),s=[],l=o.lex();"EOF"!==l.text;)s.push(l),l=o.lex();return s.reverse(),{tokens:s,numArgs:a}}return n},t.isDefined=function(e){return this.macros.has(e)||qn.hasOwnProperty(e)||ae.math.hasOwnProperty(e)||ae.text.hasOwnProperty(e)||Gn.hasOwnProperty(e)},t.isExpandable=function(e){var t=this.macros.get(e);return null!=t?"string"==typeof t||"function"==typeof t||!t.unexpandable:qn.hasOwnProperty(e)&&!qn[e].primitive},e}(),Yn=/^[\u208a\u208b\u208c\u208d\u208e\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089\u2090\u2091\u2095\u1d62\u2c7c\u2096\u2097\u2098\u2099\u2092\u209a\u1d63\u209b\u209c\u1d64\u1d65\u2093\u1d66\u1d67\u1d68\u1d69\u1d6a]/,Xn=Object.freeze({"\u208a":"+","\u208b":"-","\u208c":"=","\u208d":"(","\u208e":")","\u2080":"0","\u2081":"1","\u2082":"2","\u2083":"3","\u2084":"4","\u2085":"5","\u2086":"6","\u2087":"7","\u2088":"8","\u2089":"9","\u2090":"a","\u2091":"e","\u2095":"h","\u1d62":"i","\u2c7c":"j","\u2096":"k","\u2097":"l","\u2098":"m","\u2099":"n","\u2092":"o","\u209a":"p","\u1d63":"r","\u209b":"s","\u209c":"t","\u1d64":"u","\u1d65":"v","\u2093":"x","\u1d66":"\u03b2","\u1d67":"\u03b3","\u1d68":"\u03c1","\u1d69":"\u03d5","\u1d6a":"\u03c7","\u207a":"+","\u207b":"-","\u207c":"=","\u207d":"(","\u207e":")","\u2070":"0","\xb9":"1","\xb2":"2","\xb3":"3","\u2074":"4","\u2075":"5","\u2076":"6","\u2077":"7","\u2078":"8","\u2079":"9","\u1d2c":"A","\u1d2e":"B","\u1d30":"D","\u1d31":"E","\u1d33":"G","\u1d34":"H","\u1d35":"I","\u1d36":"J","\u1d37":"K","\u1d38":"L","\u1d39":"M","\u1d3a":"N","\u1d3c":"O","\u1d3e":"P","\u1d3f":"R","\u1d40":"T","\u1d41":"U","\u2c7d":"V","\u1d42":"W","\u1d43":"a","\u1d47":"b","\u1d9c":"c","\u1d48":"d","\u1d49":"e","\u1da0":"f","\u1d4d":"g","\u02b0":"h","\u2071":"i","\u02b2":"j","\u1d4f":"k","\u02e1":"l","\u1d50":"m","\u207f":"n","\u1d52":"o","\u1d56":"p","\u02b3":"r","\u02e2":"s","\u1d57":"t","\u1d58":"u","\u1d5b":"v","\u02b7":"w","\u02e3":"x","\u02b8":"y","\u1dbb":"z","\u1d5d":"\u03b2","\u1d5e":"\u03b3","\u1d5f":"\u03b4","\u1d60":"\u03d5","\u1d61":"\u03c7","\u1dbf":"\u03b8"}),Wn={"\u0301":{text:"\\'",math:"\\acute"},"\u0300":{text:"\\",math:"\\grave"},"\u0308":{text:'\\"',math:"\\ddot"},"\u0303":{text:"\\~",math:"\\tilde"},"\u0304":{text:"\\=",math:"\\bar"},"\u0306":{text:"\\u",math:"\\breve"},"\u030c":{text:"\\v",math:"\\check"},"\u0302":{text:"\\^",math:"\\hat"},"\u0307":{text:"\\.",math:"\\dot"},"\u030a":{text:"\\r",math:"\\mathring"},"\u030b":{text:"\\H"},"\u0327":{text:"\\c"}},_n={"\xe1":"a\u0301","\xe0":"a\u0300","\xe4":"a\u0308","\u01df":"a\u0308\u0304","\xe3":"a\u0303","\u0101":"a\u0304","\u0103":"a\u0306","\u1eaf":"a\u0306\u0301","\u1eb1":"a\u0306\u0300","\u1eb5":"a\u0306\u0303","\u01ce":"a\u030c","\xe2":"a\u0302","\u1ea5":"a\u0302\u0301","\u1ea7":"a\u0302\u0300","\u1eab":"a\u0302\u0303","\u0227":"a\u0307","\u01e1":"a\u0307\u0304","\xe5":"a\u030a","\u01fb":"a\u030a\u0301","\u1e03":"b\u0307","\u0107":"c\u0301","\u1e09":"c\u0327\u0301","\u010d":"c\u030c","\u0109":"c\u0302","\u010b":"c\u0307","\xe7":"c\u0327","\u010f":"d\u030c","\u1e0b":"d\u0307","\u1e11":"d\u0327","\xe9":"e\u0301","\xe8":"e\u0300","\xeb":"e\u0308","\u1ebd":"e\u0303","\u0113":"e\u0304","\u1e17":"e\u0304\u0301","\u1e15":"e\u0304\u0300","\u0115":"e\u0306","\u1e1d":"e\u0327\u0306","\u011b":"e\u030c","\xea":"e\u0302","\u1ebf":"e\u0302\u0301","\u1ec1":"e\u0302\u0300","\u1ec5":"e\u0302\u0303","\u0117":"e\u0307","\u0229":"e\u0327","\u1e1f":"f\u0307","\u01f5":"g\u0301","\u1e21":"g\u0304","\u011f":"g\u0306","\u01e7":"g\u030c","\u011d":"g\u0302","\u0121":"g\u0307","\u0123":"g\u0327","\u1e27":"h\u0308","\u021f":"h\u030c","\u0125":"h\u0302","\u1e23":"h\u0307","\u1e29":"h\u0327","\xed":"i\u0301","\xec":"i\u0300","\xef":"i\u0308","\u1e2f":"i\u0308\u0301","\u0129":"i\u0303","\u012b":"i\u0304","\u012d":"i\u0306","\u01d0":"i\u030c","\xee":"i\u0302","\u01f0":"j\u030c","\u0135":"j\u0302","\u1e31":"k\u0301","\u01e9":"k\u030c","\u0137":"k\u0327","\u013a":"l\u0301","\u013e":"l\u030c","\u013c":"l\u0327","\u1e3f":"m\u0301","\u1e41":"m\u0307","\u0144":"n\u0301","\u01f9":"n\u0300","\xf1":"n\u0303","\u0148":"n\u030c","\u1e45":"n\u0307","\u0146":"n\u0327","\xf3":"o\u0301","\xf2":"o\u0300","\xf6":"o\u0308","\u022b":"o\u0308\u0304","\xf5":"o\u0303","\u1e4d":"o\u0303\u0301","\u1e4f":"o\u0303\u0308","\u022d":"o\u0303\u0304","\u014d":"o\u0304","\u1e53":"o\u0304\u0301","\u1e51":"o\u0304\u0300","\u014f":"o\u0306","\u01d2":"o\u030c","\xf4":"o\u0302","\u1ed1":"o\u0302\u0301","\u1ed3":"o\u0302\u0300","\u1ed7":"o\u0302\u0303","\u022f":"o\u0307","\u0231":"o\u0307\u0304","\u0151":"o\u030b","\u1e55":"p\u0301","\u1e57":"p\u0307","\u0155":"r\u0301","\u0159":"r\u030c","\u1e59":"r\u0307","\u0157":"r\u0327","\u015b":"s\u0301","\u1e65":"s\u0301\u0307","\u0161":"s\u030c","\u1e67":"s\u030c\u0307","\u015d":"s\u0302","\u1e61":"s\u0307","\u015f":"s\u0327","\u1e97":"t\u0308","\u0165":"t\u030c","\u1e6b":"t\u0307","\u0163":"t\u0327","\xfa":"u\u0301","\xf9":"u\u0300","\xfc":"u\u0308","\u01d8":"u\u0308\u0301","\u01dc":"u\u0308\u0300","\u01d6":"u\u0308\u0304","\u01da":"u\u0308\u030c","\u0169":"u\u0303","\u1e79":"u\u0303\u0301","\u016b":"u\u0304","\u1e7b":"u\u0304\u0308","\u016d":"u\u0306","\u01d4":"u\u030c","\xfb":"u\u0302","\u016f":"u\u030a","\u0171":"u\u030b","\u1e7d":"v\u0303","\u1e83":"w\u0301","\u1e81":"w\u0300","\u1e85":"w\u0308","\u0175":"w\u0302","\u1e87":"w\u0307","\u1e98":"w\u030a","\u1e8d":"x\u0308","\u1e8b":"x\u0307","\xfd":"y\u0301","\u1ef3":"y\u0300","\xff":"y\u0308","\u1ef9":"y\u0303","\u0233":"y\u0304","\u0177":"y\u0302","\u1e8f":"y\u0307","\u1e99":"y\u030a","\u017a":"z\u0301","\u017e":"z\u030c","\u1e91":"z\u0302","\u017c":"z\u0307","\xc1":"A\u0301","\xc0":"A\u0300","\xc4":"A\u0308","\u01de":"A\u0308\u0304","\xc3":"A\u0303","\u0100":"A\u0304","\u0102":"A\u0306","\u1eae":"A\u0306\u0301","\u1eb0":"A\u0306\u0300","\u1eb4":"A\u0306\u0303","\u01cd":"A\u030c","\xc2":"A\u0302","\u1ea4":"A\u0302\u0301","\u1ea6":"A\u0302\u0300","\u1eaa":"A\u0302\u0303","\u0226":"A\u0307","\u01e0":"A\u0307\u0304","\xc5":"A\u030a","\u01fa":"A\u030a\u0301","\u1e02":"B\u0307","\u0106":"C\u0301","\u1e08":"C\u0327\u0301","\u010c":"C\u030c","\u0108":"C\u0302","\u010a":"C\u0307","\xc7":"C\u0327","\u010e":"D\u030c","\u1e0a":"D\u0307","\u1e10":"D\u0327","\xc9":"E\u0301","\xc8":"E\u0300","\xcb":"E\u0308","\u1ebc":"E\u0303","\u0112":"E\u0304","\u1e16":"E\u0304\u0301","\u1e14":"E\u0304\u0300","\u0114":"E\u0306","\u1e1c":"E\u0327\u0306","\u011a":"E\u030c","\xca":"E\u0302","\u1ebe":"E\u0302\u0301","\u1ec0":"E\u0302\u0300","\u1ec4":"E\u0302\u0303","\u0116":"E\u0307","\u0228":"E\u0327","\u1e1e":"F\u0307","\u01f4":"G\u0301","\u1e20":"G\u0304","\u011e":"G\u0306","\u01e6":"G\u030c","\u011c":"G\u0302","\u0120":"G\u0307","\u0122":"G\u0327","\u1e26":"H\u0308","\u021e":"H\u030c","\u0124":"H\u0302","\u1e22":"H\u0307","\u1e28":"H\u0327","\xcd":"I\u0301","\xcc":"I\u0300","\xcf":"I\u0308","\u1e2e":"I\u0308\u0301","\u0128":"I\u0303","\u012a":"I\u0304","\u012c":"I\u0306","\u01cf":"I\u030c","\xce":"I\u0302","\u0130":"I\u0307","\u0134":"J\u0302","\u1e30":"K\u0301","\u01e8":"K\u030c","\u0136":"K\u0327","\u0139":"L\u0301","\u013d":"L\u030c","\u013b":"L\u0327","\u1e3e":"M\u0301","\u1e40":"M\u0307","\u0143":"N\u0301","\u01f8":"N\u0300","\xd1":"N\u0303","\u0147":"N\u030c","\u1e44":"N\u0307","\u0145":"N\u0327","\xd3":"O\u0301","\xd2":"O\u0300","\xd6":"O\u0308","\u022a":"O\u0308\u0304","\xd5":"O\u0303","\u1e4c":"O\u0303\u0301","\u1e4e":"O\u0303\u0308","\u022c":"O\u0303\u0304","\u014c":"O\u0304","\u1e52":"O\u0304\u0301","\u1e50":"O\u0304\u0300","\u014e":"O\u0306","\u01d1":"O\u030c","\xd4":"O\u0302","\u1ed0":"O\u0302\u0301","\u1ed2":"O\u0302\u0300","\u1ed6":"O\u0302\u0303","\u022e":"O\u0307","\u0230":"O\u0307\u0304","\u0150":"O\u030b","\u1e54":"P\u0301","\u1e56":"P\u0307","\u0154":"R\u0301","\u0158":"R\u030c","\u1e58":"R\u0307","\u0156":"R\u0327","\u015a":"S\u0301","\u1e64":"S\u0301\u0307","\u0160":"S\u030c","\u1e66":"S\u030c\u0307","\u015c":"S\u0302","\u1e60":"S\u0307","\u015e":"S\u0327","\u0164":"T\u030c","\u1e6a":"T\u0307","\u0162":"T\u0327","\xda":"U\u0301","\xd9":"U\u0300","\xdc":"U\u0308","\u01d7":"U\u0308\u0301","\u01db":"U\u0308\u0300","\u01d5":"U\u0308\u0304","\u01d9":"U\u0308\u030c","\u0168":"U\u0303","\u1e78":"U\u0303\u0301","\u016a":"U\u0304","\u1e7a":"U\u0304\u0308","\u016c":"U\u0306","\u01d3":"U\u030c","\xdb":"U\u0302","\u016e":"U\u030a","\u0170":"U\u030b","\u1e7c":"V\u0303","\u1e82":"W\u0301","\u1e80":"W\u0300","\u1e84":"W\u0308","\u0174":"W\u0302","\u1e86":"W\u0307","\u1e8c":"X\u0308","\u1e8a":"X\u0307","\xdd":"Y\u0301","\u1ef2":"Y\u0300","\u0178":"Y\u0308","\u1ef8":"Y\u0303","\u0232":"Y\u0304","\u0176":"Y\u0302","\u1e8e":"Y\u0307","\u0179":"Z\u0301","\u017d":"Z\u030c","\u1e90":"Z\u0302","\u017b":"Z\u0307","\u03ac":"\u03b1\u0301","\u1f70":"\u03b1\u0300","\u1fb1":"\u03b1\u0304","\u1fb0":"\u03b1\u0306","\u03ad":"\u03b5\u0301","\u1f72":"\u03b5\u0300","\u03ae":"\u03b7\u0301","\u1f74":"\u03b7\u0300","\u03af":"\u03b9\u0301","\u1f76":"\u03b9\u0300","\u03ca":"\u03b9\u0308","\u0390":"\u03b9\u0308\u0301","\u1fd2":"\u03b9\u0308\u0300","\u1fd1":"\u03b9\u0304","\u1fd0":"\u03b9\u0306","\u03cc":"\u03bf\u0301","\u1f78":"\u03bf\u0300","\u03cd":"\u03c5\u0301","\u1f7a":"\u03c5\u0300","\u03cb":"\u03c5\u0308","\u03b0":"\u03c5\u0308\u0301","\u1fe2":"\u03c5\u0308\u0300","\u1fe1":"\u03c5\u0304","\u1fe0":"\u03c5\u0306","\u03ce":"\u03c9\u0301","\u1f7c":"\u03c9\u0300","\u038e":"\u03a5\u0301","\u1fea":"\u03a5\u0300","\u03ab":"\u03a5\u0308","\u1fe9":"\u03a5\u0304","\u1fe8":"\u03a5\u0306","\u038f":"\u03a9\u0301","\u1ffa":"\u03a9\u0300"},jn=function(){function e(e,t){this.mode=void 0,this.gullet=void 0,this.settings=void 0,this.leftrightDepth=void 0,this.nextToken=void 0,this.mode="math",this.gullet=new Un(e,t,this.mode),this.settings=t,this.leftrightDepth=0}var t=e.prototype;return t.expect=function(e,t){if(void 0===t&&(t=!0),this.fetch().text!==e)throw new n("Expected '"+e+"', got '"+this.fetch().text+"'",this.fetch());t&&this.consume()},t.consume=function(){this.nextToken=null},t.fetch=function(){return null==this.nextToken&&(this.nextToken=this.gullet.expandNextToken()),this.nextToken},t.switchMode=function(e){this.mode=e,this.gullet.switchMode(e)},t.parse=function(){this.settings.globalGroup||this.gullet.beginGroup(),this.settings.colorIsTextColor&&this.gullet.macros.set("\\color","\\textcolor");try{var e=this.parseExpression(!1);return this.expect("EOF"),this.settings.globalGroup||this.gullet.endGroup(),e}finally{this.gullet.endGroups()}},t.subparse=function(e){var t=this.nextToken;this.consume(),this.gullet.pushToken(new Gr("}")),this.gullet.pushTokens(e);var r=this.parseExpression(!1);return this.expect("}"),this.nextToken=t,r},t.parseExpression=function(t,r){for(var n=[];;){"math"===this.mode&&this.consumeSpaces();var a=this.fetch();if(-1!==e.endOfExpression.indexOf(a.text))break;if(r&&a.text===r)break;if(t&&qn[a.text]&&qn[a.text].infix)break;var i=this.parseAtom(r);if(!i)break;"internal"!==i.type&&n.push(i)}return"text"===this.mode&&this.formLigatures(n),this.handleInfixNodes(n)},t.handleInfixNodes=function(e){for(var t,r=-1,a=0;a<e.length;a++)if("infix"===e[a].type){if(-1!==r)throw new n("only one infix operator per group",e[a].token);r=a,t=e[a].replaceWith}if(-1!==r&&t){var i,o,s=e.slice(0,r),l=e.slice(r+1);return i=1===s.length&&"ordgroup"===s[0].type?s[0]:{type:"ordgroup",mode:this.mode,body:s},o=1===l.length&&"ordgroup"===l[0].type?l[0]:{type:"ordgroup",mode:this.mode,body:l},["\\\\abovefrac"===t?this.callFunction(t,[i,e[r],o],[]):this.callFunction(t,[i,o],[])]}return e},t.handleSupSubscript=function(e){var t=this.fetch(),r=t.text;this.consume(),this.consumeSpaces();var a=this.parseGroup(e);if(!a)throw new n("Expected group after '"+r+"'",t);return a},t.formatUnsupportedCmd=function(e){for(var t=[],r=0;r<e.length;r++)t.push({type:"textord",mode:"text",text:e[r]});var n={type:"text",mode:this.mode,body:t};return{type:"color",mode:this.mode,color:this.settings.errorColor,body:[n]}},t.parseAtom=function(t){var r,a,i=this.parseGroup("atom",t);if("text"===this.mode)return i;for(;;){this.consumeSpaces();var o=this.fetch();if("\\limits"===o.text||"\\nolimits"===o.text){if(i&&"op"===i.type){var s="\\limits"===o.text;i.limits=s,i.alwaysHandleSupSub=!0}else{if(!i||"operatorname"!==i.type)throw new n("Limit controls must follow a math operator",o);i.alwaysHandleSupSub&&(i.limits="\\limits"===o.text)}this.consume()}else if("^"===o.text){if(r)throw new n("Double superscript",o);r=this.handleSupSubscript("superscript")}else if("_"===o.text){if(a)throw new n("Double subscript",o);a=this.handleSupSubscript("subscript")}else if("'"===o.text){if(r)throw new n("Double superscript",o);var l={type:"textord",mode:this.mode,text:"\\prime"},h=[l];for(this.consume();"'"===this.fetch().text;)h.push(l),this.consume();"^"===this.fetch().text&&h.push(this.handleSupSubscript("superscript")),r={type:"ordgroup",mode:this.mode,body:h}}else{if(!Xn[o.text])break;var c=Xn[o.text],m=Yn.test(o.text);for(this.consume();;){var u=this.fetch().text;if(!Xn[u])break;if(Yn.test(u)!==m)break;this.consume(),c+=Xn[u]}var p=new e(c,this.settings).parse();m?a={type:"ordgroup",mode:"math",body:p}:r={type:"ordgroup",mode:"math",body:p}}}return r||a?{type:"supsub",mode:this.mode,base:i,sup:r,sub:a}:i},t.parseFunction=function(e,t){var r=this.fetch(),a=r.text,i=qn[a];if(!i)return null;if(this.consume(),t&&"atom"!==t&&!i.allowedInArgument)throw new n("Got function '"+a+"' with no arguments"+(t?" as "+t:""),r);if("text"===this.mode&&!i.allowedInText)throw new n("Can't use function '"+a+"' in text mode",r);if("math"===this.mode&&!1===i.allowedInMath)throw new n("Can't use function '"+a+"' in math mode",r);var o=this.parseArguments(a,i),s=o.args,l=o.optArgs;return this.callFunction(a,s,l,r,e)},t.callFunction=function(e,t,r,a,i){var o={funcName:e,parser:this,token:a,breakOnTokenText:i},s=qn[e];if(s&&s.handler)return s.handler(o,t,r);throw new n("No function handler for "+e)},t.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(0===r)return{args:[],optArgs:[]};for(var a=[],i=[],o=0;o<r;o++){var s=t.argTypes&&t.argTypes[o],l=o<t.numOptionalArgs;(t.primitive&&null==s||"sqrt"===t.type&&1===o&&null==i[0])&&(s="primitive");var h=this.parseGroupOfType("argument to '"+e+"'",s,l);if(l)i.push(h);else{if(null==h)throw new n("Null argument, please report this as a bug");a.push(h)}}return{args:a,optArgs:i}},t.parseGroupOfType=function(e,t,r){switch(t){case"color":return this.parseColorGroup(r);case"size":return this.parseSizeGroup(r);case"url":return this.parseUrlGroup(r);case"math":case"text":return this.parseArgumentGroup(r,t);case"hbox":var a=this.parseArgumentGroup(r,"text");return null!=a?{type:"styling",mode:a.mode,body:[a],style:"text"}:null;case"raw":var i=this.parseStringGroup("raw",r);return null!=i?{type:"raw",mode:"text",string:i.text}:null;case"primitive":if(r)throw new n("A primitive argument cannot be optional");var o=this.parseGroup(e);if(null==o)throw new n("Expected group as "+e,this.fetch());return o;case"original":case null:case void 0:return this.parseArgumentGroup(r);default:throw new n("Unknown group type as "+e,this.fetch())}},t.consumeSpaces=function(){for(;" "===this.fetch().text;)this.consume()},t.parseStringGroup=function(e,t){var r=this.gullet.scanArgument(t);if(null==r)return null;for(var n,a="";"EOF"!==(n=this.fetch()).text;)a+=n.text,this.consume();return this.consume(),r.text=a,r},t.parseRegexGroup=function(e,t){for(var r,a=this.fetch(),i=a,o="";"EOF"!==(r=this.fetch()).text&&e.test(o+r.text);)o+=(i=r).text,this.consume();if(""===o)throw new n("Invalid "+t+": '"+a.text+"'",a);return a.range(i,o)},t.parseColorGroup=function(e){var t=this.parseStringGroup("color",e);if(null==t)return null;var r=/^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);if(!r)throw new n("Invalid color: '"+t.text+"'",t);var a=r[0];return/^[0-9a-f]{6}$/i.test(a)&&(a="#"+a),{type:"color-token",mode:this.mode,color:a}},t.parseSizeGroup=function(e){var t,r=!1;if(this.gullet.consumeSpaces(),!(t=e||"{"===this.gullet.future().text?this.parseStringGroup("size",e):this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")))return null;e||0!==t.text.length||(t.text="0pt",r=!0);var a=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!a)throw new n("Invalid size: '"+t.text+"'",t);var i={number:+(a[1]+a[2]),unit:a[3]};if(!V(i))throw new n("Invalid unit: '"+i.unit+"'",t);return{type:"size",mode:this.mode,value:i,isBlank:r}},t.parseUrlGroup=function(e){this.gullet.lexer.setCatcode("%",13),this.gullet.lexer.setCatcode("~",12);var t=this.parseStringGroup("url",e);if(this.gullet.lexer.setCatcode("%",14),this.gullet.lexer.setCatcode("~",13),null==t)return null;var r=t.text.replace(/\\([#$%&~_^{}])/g,"$1");return{type:"url",mode:this.mode,url:r}},t.parseArgumentGroup=function(e,t){var r=this.gullet.scanArgument(e);if(null==r)return null;var n=this.mode;t&&this.switchMode(t),this.gullet.beginGroup();var a=this.parseExpression(!1,"EOF");this.expect("EOF"),this.gullet.endGroup();var i={type:"ordgroup",mode:this.mode,loc:r.loc,body:a};return t&&this.switchMode(n),i},t.parseGroup=function(e,t){var r,a=this.fetch(),i=a.text;if("{"===i||"\\begingroup"===i){this.consume();var o="{"===i?"}":"\\endgroup";this.gullet.beginGroup();var s=this.parseExpression(!1,o),l=this.fetch();this.expect(o),this.gullet.endGroup(),r={type:"ordgroup",mode:this.mode,loc:Fr.range(a,l),body:s,semisimple:"\\begingroup"===i||void 0}}else if(null==(r=this.parseFunction(t,e)||this.parseSymbol())&&"\\"===i[0]&&!Gn.hasOwnProperty(i)){if(this.settings.throwOnError)throw new n("Undefined control sequence: "+i,a);r=this.formatUnsupportedCmd(i),this.consume()}return r},t.formLigatures=function(e){for(var t=e.length-1,r=0;r<t;++r){var n=e[r],a=n.text;"-"===a&&"-"===e[r+1].text&&(r+1<t&&"-"===e[r+2].text?(e.splice(r,3,{type:"textord",mode:"text",loc:Fr.range(n,e[r+2]),text:"---"}),t-=2):(e.splice(r,2,{type:"textord",mode:"text",loc:Fr.range(n,e[r+1]),text:"--"}),t-=1)),"'"!==a&&""!==a||e[r+1].text!==a||(e.splice(r,2,{type:"textord",mode:"text",loc:Fr.range(n,e[r+1]),text:a+a}),t-=1)}},t.parseSymbol=function(){var e=this.fetch(),t=e.text;if(/^\\verb[^a-zA-Z]/.test(t)){this.consume();var r=t.slice(5),a="*"===r.charAt(0);if(a&&(r=r.slice(1)),r.length<2||r.charAt(0)!==r.slice(-1))throw new n("\\verb assertion failed --\n                    please report what input caused this bug");return{type:"verb",mode:"text",body:r=r.slice(1,-1),star:a}}_n.hasOwnProperty(t[0])&&!ae[this.mode][t[0]]&&(this.settings.strict&&"math"===this.mode&&this.settings.reportNonstrict("unicodeTextInMathMode",'Accented Unicode text character "'+t[0]+'" used in math mode',e),t=_n[t[0]]+t.slice(1));var i,o=In.exec(t);if(o&&("i"===(t=t.substring(0,o.index))?t="\u0131":"j"===t&&(t="\u0237")),ae[this.mode][t]){this.settings.strict&&"math"===this.mode&&Ee.indexOf(t)>=0&&this.settings.reportNonstrict("unicodeTextInMathMode",'Latin-1/Unicode text character "'+t[0]+'" used in math mode',e);var s,l=ae[this.mode][t].group,h=Fr.range(e);if(te.hasOwnProperty(l)){var c=l;s={type:"atom",mode:this.mode,family:c,loc:h,text:t}}else s={type:l,mode:this.mode,loc:h,text:t};i=s}else{if(!(t.charCodeAt(0)>=128))return null;this.settings.strict&&(S(t.charCodeAt(0))?"math"===this.mode&&this.settings.reportNonstrict("unicodeTextInMathMode",'Unicode text character "'+t[0]+'" used in math mode',e):this.settings.reportNonstrict("unknownSymbol",'Unrecognized Unicode character "'+t[0]+'" ('+t.charCodeAt(0)+")",e)),i={type:"textord",mode:"text",loc:Fr.range(e),text:t}}if(this.consume(),o)for(var m=0;m<o[0].length;m++){var u=o[0][m];if(!Wn[u])throw new n("Unknown accent ' "+u+"'",e);var p=Wn[u][this.mode]||Wn[u].text;if(!p)throw new n("Accent "+u+" unsupported in "+this.mode+" mode",e);i={type:"accent",mode:this.mode,loc:Fr.range(e),label:p,isStretchy:!1,isShifty:!0,base:i}}return i},e}();jn.endOfExpression=["}","\\endgroup","\\end","\\right","&"];var $n=function(e,t){if(!("string"==typeof e||e instanceof String))throw new TypeError("KaTeX can only parse string typed expression");var r=new jn(e,t);delete r.gullet.macros.current["\\df@tag"];var a=r.parse();if(delete r.gullet.macros.current["\\current@color"],delete r.gullet.macros.current["\\color"],r.gullet.macros.get("\\df@tag")){if(!t.displayMode)throw new n("\\tag works only in display equations");a=[{type:"tag",mode:"text",body:a,tag:r.subparse([new Gr("\\df@tag")])}]}return a},Zn=function(e,t,r){t.textContent="";var n=Jn(e,r).toNode();t.appendChild(n)};"undefined"!=typeof document&&"CSS1Compat"!==document.compatMode&&("undefined"!=typeof console&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."),Zn=function(){throw new n("KaTeX doesn't work in quirks mode.")});var Kn=function(e,t,r){if(r.throwOnError||!(e instanceof n))throw e;var a=Ke.makeSpan(["katex-error"],[new Z(t)]);return a.setAttribute("title",e.toString()),a.setAttribute("style","color:"+r.errorColor),a},Jn=function(e,t){var r=new m(t);try{var n=$n(e,r);return Lt(n,e,r)}catch(t){return Kn(t,e,r)}},Qn={version:"0.16.3",render:Zn,renderToString:function(e,t){return Jn(e,t).toMarkup()},ParseError:n,SETTINGS_SCHEMA:h,__parse:function(e,t){var r=new m(t);return $n(e,r)},__renderToDomTree:Jn,__renderToHTMLTree:function(e,t){var r=new m(t);try{return function(e,t,r){var n=St(e,Ot(r)),a=Ke.makeSpan(["katex"],[n]);return Et(a,r)}($n(e,r),0,r)}catch(t){return Kn(t,e,r)}},__setFontMetrics:function(e,t){T[e]=t},__defineSymbol:ie,__defineMacro:Pr,__domTree:{Span:W,Anchor:_,SymbolNode:Z,SvgNode:K,PathNode:J,LineNode:Q}};return t=t.default}()}));

function isFatPointer_33557132(ti_33557133) {
  var result_33557134 = false;

  BeforeRet: do {
    result_33557134 = !((ConstSet1[ti_33557133.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557134;

}

function nimCopyAux(dest_33557145, src_33557146, n_33557147) {
    switch (n_33557147.kind) {
    case 0:
      break;
    case 1:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557147.sons.length; i++) {
      nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i]);
    }
    
      break;
    case 3:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
      for (var i = 0; i < n_33557147.sons.length; ++i) {
        nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i][1]);
      }
    
      break;
    }

  
}

function succeedImpl_1862271948(inputInHEX60gensym43_1862271949, valueInHEX60gensym43_1862271950, tailInHEX60gensym43_1862271951) {
  var result_1862271953 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1862271953 = nimCopy(result_1862271953, {kind: 0, value: nimCopy(null, valueInHEX60gensym43_1862271950, NTI33554439), tail: nimCopy(null, tailInHEX60gensym43_1862271951, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym43_1862271949, NTI33554439), expected: []}, NTI1862271108);

  return result_1862271953;

}

function failImpl_1862271955(inputInHEX60gensym43_1862271956, expectedInHEX60gensym43_1862271957, tailInHEX60gensym43_1862271958) {
  var result_1862271960 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1862271960 = nimCopy(result_1862271960, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym43_1862271957, NTI1862271998), tail: nimCopy(null, tailInHEX60gensym43_1862271958, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym43_1862271956, NTI33554439), value: []}, NTI1862271108);

  return result_1862271960;

}

function succeedImpl_1862271984(inputInHEX60gensym45_1862271985, valueInHEX60gensym45_1862271986, tailInHEX60gensym45_1862271987) {
  var result_1862271989 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862271989 = nimCopy(result_1862271989, {kind: 0, value: valueInHEX60gensym45_1862271986, tail: nimCopy(null, tailInHEX60gensym45_1862271987, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym45_1862271985, NTI33554439), expected: []}, NTI1862271206);

  return result_1862271989;

}

function failImpl_1862271991(inputInHEX60gensym45_1862271992, expectedInHEX60gensym45_1862271993, tailInHEX60gensym45_1862271994) {
  var result_1862271996 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862271996 = nimCopy(result_1862271996, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym45_1862271993, NTI1862272032), tail: nimCopy(null, tailInHEX60gensym45_1862271994, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym45_1862271992, NTI33554439), value: 0}, NTI1862271206);

  return result_1862271996;

}

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function newSeq_33556826(len_33556828) {
  var result_33556829 = [];

    result_33556829 = new Array(len_33556828); for (var i = 0 ; i < len_33556828 ; ++i) { result_33556829[i] = null; }
  return result_33556829;

}

function unhandledException(e_33556664) {
    var buf_33556665 = [[]];
    if (!(((e_33556664.message).length == 0))) {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556665[0].push.apply(buf_33556665[0], e_33556664.message);;
    }
    else {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556665, 0, e_33556664.name);
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556666 = toJSStr(buf_33556665[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556666);
  }
  else {
    throw cbuf_33556666;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556939) {
        if (a_33556939 > 2147483647 || a_33556939 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_1862272167 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1862272167 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_1862272167;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_1862272167 = addInt(i_1862272167, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function raiseIndexError(i_33556755, a_33556756, b_33556757) {
    var Temporary1;

    if ((b_33556757 < a_33556756)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556755) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556756) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556757) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX5BHEX5D_939527322(s_939527325, x_939527326) {
  var result_939527327 = [];

    var a_939527329 = x_939527326.a;
    var L_939527331 = addInt(subInt(subInt((s_939527325).length, x_939527326.b), a_939527329), 1);
    result_939527327 = nimCopy(null, mnewString(chckRange(L_939527331, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_939527336 = 0;
      var i_1828719775 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1828719775 < L_939527331)) break Label3;
            i_939527336 = i_1828719775;
            result_939527327[chckIndx(i_939527336, 0, (result_939527327).length - 1)] = s_939527325[chckIndx(addInt(i_939527336, a_939527329), 0, (s_939527325).length - 1)];
            i_1828719775 = addInt(i_1828719775, 1);
          }
      } while (false);
    } while (false);

  return result_939527327;

}

function HEX2EHEX2E_872415312(a_872415315, b_872415316) {
  var result_872415319 = ({a: 0, b: 0});

    result_872415319 = nimCopy(result_872415319, {a: a_872415315, b: b_872415316}, NTI872415311);

  return result_872415319;

}

function nsuFindChar(s_654312949, sub_654312950, start_654312951, last_654312952) {
    var Temporary1;

  var result_654312953 = 0;

  BeforeRet: do {
    if ((last_654312952 == 0)) {
    Temporary1 = (s_654312949).length - 1;
    }
    else {
    Temporary1 = last_654312952;
    }
    
    var last_654312954 = Temporary1;
    Label2: do {
      var i_654312964 = 0;
      var colontmp__1862272181 = 0;
      colontmp__1862272181 = start_654312951;
      var res_1862272182 = colontmp__1862272181;
      Label3: do {
          Label4: while (true) {
          if (!(res_1862272182 <= last_654312954)) break Label4;
            i_654312964 = res_1862272182;
            if ((sub_654312950 == s_654312949[chckIndx(i_654312964, 0, (s_654312949).length - 1)])) {
            result_654312953 = i_654312964;
            break BeforeRet;
            }
            
            res_1862272182 = addInt(res_1862272182, 1);
          }
      } while (false);
    } while (false);
    result_654312953 = -1;
    break BeforeRet;
  } while (false);

  return result_654312953;

}

function fill_654312891(a_654312893, value_654312894) {
    var xHEX60gensym166_654312900 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(xHEX60gensym166_654312900 <= (a_654312893).length - 1)) break Label2;
          a_654312893[chckIndx(xHEX60gensym166_654312900, 0, (a_654312893).length - 1)] = value_654312894;
          xHEX60gensym166_654312900 = addInt(xHEX60gensym166_654312900, 1);
        }
    } while (false);

  
}

function nsuInitSkipTable(a_654312888, sub_654312889) {
    var m_654312890 = (sub_654312889).length;
    fill_654312891(a_654312888, m_654312890);
    Label1: do {
      var i_654312909 = 0;
      var colontmp__1862272185 = 0;
      colontmp__1862272185 = subInt(m_654312890, 1);
      var i_1862272186 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1862272186 < colontmp__1862272185)) break Label3;
            i_654312909 = i_1862272186;
            a_654312888[chckIndx(sub_654312889[chckIndx(i_654312909, 0, (sub_654312889).length - 1)], 0, (a_654312888).length - 1)] = subInt(subInt(m_654312890, 1), i_654312909);
            i_1862272186 = addInt(i_1862272186, 1);
          }
      } while (false);
    } while (false);

  
}

function nsuFindStrA(a_654312929, s_654312930, sub_654312931, start_654312932, last_654312933) {
    var Temporary1;

  var result_654312934 = 0;

  BeforeRet: do {
    if ((last_654312933 == 0)) {
    Temporary1 = (s_654312930).length - 1;
    }
    else {
    Temporary1 = last_654312933;
    }
    
    var last_654312935 = Temporary1;
    var subLast_654312936 = subInt((sub_654312931).length, 1);
    if ((subLast_654312936 == -1)) {
    result_654312934 = start_654312932;
    break BeforeRet;
    }
    
    var skip_654312937 = start_654312932;
    Label2: do {
        Label3: while (true) {
        if (!(subLast_654312936 <= subInt(last_654312935, skip_654312937))) break Label3;
          var i_654312938 = subLast_654312936;
          Label4: do {
              Label5: while (true) {
              if (!(s_654312930[chckIndx(addInt(skip_654312937, i_654312938), 0, (s_654312930).length - 1)] == sub_654312931[chckIndx(i_654312938, 0, (sub_654312931).length - 1)])) break Label5;
                if ((i_654312938 == 0)) {
                result_654312934 = skip_654312937;
                break BeforeRet;
                }
                
                i_654312938 = subInt(i_654312938, 1);
              }
          } while (false);
          skip_654312937 = addInt(skip_654312937, a_654312929[chckIndx(s_654312930[chckIndx(addInt(skip_654312937, subLast_654312936), 0, (s_654312930).length - 1)], 0, (a_654312929).length - 1)]);
        }
    } while (false);
    result_654312934 = -1;
    break BeforeRet;
  } while (false);

  return result_654312934;

}

function nsuFindStr(s_654312982, sub_654312983, start_654312984, last_654312985) {
  var result_654312986 = 0;

  BeforeRet: do {
    if ((subInt((s_654312982).length, start_654312984) < (sub_654312983).length)) {
    result_654312986 = -1;
    break BeforeRet;
    }
    
    if (((sub_654312983).length == 1)) {
    result_654312986 = nsuFindChar(s_654312982, sub_654312983[chckIndx(0, 0, (sub_654312983).length - 1)], start_654312984, last_654312985);
    break BeforeRet;
    }
    
    var a_654312988 = [new Int32Array(256)];
    nsuInitSkipTable(a_654312988[0], sub_654312983);
    result_654312986 = nsuFindStrA(a_654312988[0], s_654312982, sub_654312983, start_654312984, last_654312985);
  } while (false);

  return result_654312986;

}

function findBounds_1862270984(s_1862270985, r_1862270986) {
  var result_1862270987 = {Field0: 0, Field1: 0};

  BeforeRet: do {
    var m_1862270988 = toJSStr(s_1862270985).match(r_1862270986);
    if (!(((m_1862270988) == null))) {
    var start_1862270996 = nsuFindStr(s_1862270985, cstrToNimstr(m_1862270988[chckIndx(0, 0, (m_1862270988).length - 1)]), 0, 0);
    var colontmp__1862272172 = start_1862270996;
    var colontmp__1862272173 = subInt(addInt(start_1862270996, ((m_1862270988[chckIndx(0, 0, (m_1862270988).length - 1)]) == null ? 0 : (m_1862270988[chckIndx(0, 0, (m_1862270988).length - 1)]).length)), 1);
    result_1862270987 = nimCopy(result_1862270987, {Field0: colontmp__1862272172, Field1: colontmp__1862272173}, NTI1862270982);
    break BeforeRet;
    }
    
    var colontmp__1862272174 = -1;
    var colontmp__1862272175 = 0;
    result_1862270987 = nimCopy(result_1862270987, {Field0: colontmp__1862272174, Field1: colontmp__1862272175}, NTI1862270982);
    break BeforeRet;
  } while (false);

  return result_1862270987;

}

function invalidFormatString_654313549() {
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_973078529(c_973078530) {
  var result_973078531 = 0;

    if ((ConstSet5[c_973078530] != undefined)) {
    result_973078531 = chckRange(addInt(c_973078530, 32), 0, 255);
    }
    else {
      result_973078531 = c_973078530;
    }
    

  return result_973078531;

}

function nsuCmpIgnoreStyle(a_654311614, b_654311615) {
          var Temporary7;
          var Temporary8;

  var result_654311616 = 0;

  BeforeRet: do {
    var aLenHEX60gensym25_654311625 = (a_654311614).length;
    var bLenHEX60gensym25_654311626 = (b_654311615).length;
    var iHEX60gensym25_654311627 = 0;
    var jHEX60gensym25_654311628 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: do {
              Label4: while (true) {
              if (!((iHEX60gensym25_654311627 < aLenHEX60gensym25_654311625) && (a_654311614[iHEX60gensym25_654311627] == 95))) break Label4;
                iHEX60gensym25_654311627 += 1;
              }
          } while (false);
          Label5: do {
              Label6: while (true) {
              if (!((jHEX60gensym25_654311628 < bLenHEX60gensym25_654311626) && (b_654311615[jHEX60gensym25_654311628] == 95))) break Label6;
                jHEX60gensym25_654311628 += 1;
              }
          } while (false);
          if ((iHEX60gensym25_654311627 < aLenHEX60gensym25_654311625)) {
          Temporary7 = toLowerAscii_973078529(a_654311614[iHEX60gensym25_654311627]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym25_654311637 = Temporary7;
          if ((jHEX60gensym25_654311628 < bLenHEX60gensym25_654311626)) {
          Temporary8 = toLowerAscii_973078529(b_654311615[jHEX60gensym25_654311628]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym25_654311638 = Temporary8;
          result_654311616 = (aaHEX60gensym25_654311637 - bbHEX60gensym25_654311638);
          if (!((result_654311616 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym25_654311625 <= iHEX60gensym25_654311627)) {
          if ((bLenHEX60gensym25_654311626 <= jHEX60gensym25_654311628)) {
          result_654311616 = 0;
          break BeforeRet;
          }
          
          result_654311616 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym25_654311626 <= jHEX60gensym25_654311628)) {
          result_654311616 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym25_654311627 += 1;
          jHEX60gensym25_654311628 += 1;
        }
    } while (false);
  } while (false);

  return result_654311616;

}

function findNormalized_654313537(x_654313538, inArray_654313539) {
  var result_654313540 = 0;

  BeforeRet: do {
    var i_654313541 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313541 < (inArray_654313539).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_654313538, inArray_654313539[chckIndx(i_654313541, 0, (inArray_654313539).length - 1)]) == 0)) {
          result_654313540 = i_654313541;
          break BeforeRet;
          }
          
          i_654313541 = addInt(i_654313541, 2);
        }
    } while (false);
    result_654313540 = -1;
    break BeforeRet;
  } while (false);

  return result_654313540;

}

function substr_33557922(s_33557923, first_33557924, last_33557925) {
  var result_33557926 = [];

    var first_33557927 = nimMax(first_33557924, 0);
    var L_33557928 = nimMax(addInt(subInt(nimMin(last_33557925, (s_33557923).length - 1), first_33557927), 1), 0);
    result_33557926 = nimCopy(null, mnewString(chckRange(L_33557928, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_33557933 = 0;
      var colontmp__1392508942 = 0;
      colontmp__1392508942 = subInt(L_33557928, 1);
      var res_1392508943 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1392508943 <= colontmp__1392508942)) break Label3;
            i_33557933 = res_1392508943;
            result_33557926[chckIndx(i_33557933, 0, (result_33557926).length - 1)] = s_33557923[chckIndx(addInt(i_33557933, first_33557927), 0, (s_33557923).length - 1)];
            res_1392508943 = addInt(res_1392508943, 1);
          }
      } while (false);
    } while (false);

  return result_33557926;

}

function nsuAddf(s_654313552, s_654313552_Idx, formatstr_654313553, a_654313554) {
                  var Temporary5;
            var Temporary6;
              var Temporary7;
            var Temporary10;
              var Temporary11;
                var Temporary12;
                  var Temporary15;
              var Temporary16;

    var i_654313556 = 0;
    var num_654313557 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313556 < (formatstr_654313553).length)) break Label2;
          if (((formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)] == 36) && (addInt(i_654313556, 1) < (formatstr_654313553).length))) {
          switch (formatstr_654313553[chckIndx(addInt(i_654313556, 1), 0, (formatstr_654313553).length - 1)]) {
          case 35:
            if (((a_654313554).length - 1 < num_654313557)) {
            invalidFormatString_654313549();
            }
            
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(num_654313557, 0, (a_654313554).length - 1)]);;
            i_654313556 = addInt(i_654313556, 2);
            num_654313557 = addInt(num_654313557, 1);
            break;
          case 36:
            addChar(s_654313552[s_654313552_Idx], 36);;
            i_654313556 = addInt(i_654313556, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_654313573 = 0;
            i_654313556 = addInt(i_654313556, 1);
            var negative_654313578 = (formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)] == 45);
            if (negative_654313578) {
            i_654313556 = addInt(i_654313556, 1);
            }
            
            Label3: do {
                Label4: while (true) {
                  if (!(i_654313556 < (formatstr_654313553).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet2[formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_654313573 = subInt(addInt(mulInt(j_654313573, 10), formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)]), 48);
                  i_654313556 = addInt(i_654313556, 1);
                }
            } while (false);
            if (!(negative_654313578)) {
            Temporary6 = subInt(j_654313573, 1);
            }
            else {
            Temporary6 = subInt((a_654313554).length, j_654313573);
            }
            
            var idx_654313601 = Temporary6;
              if ((idx_654313601 < 0)) Temporary7 = true; else {                Temporary7 = ((a_654313554).length - 1 < idx_654313601);              }            if (Temporary7) {
            invalidFormatString_654313549();
            }
            
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(idx_654313601, 0, (a_654313554).length - 1)]);;
            break;
          case 123:
            var j_654313605 = addInt(i_654313556, 2);
            var k_654313606 = 0;
            var negative_654313607 = (formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)] == 45);
            if (negative_654313607) {
            j_654313605 = addInt(j_654313605, 1);
            }
            
            var isNumber_654313612 = 0;
            Label8: do {
                Label9: while (true) {
                if (!((j_654313605 < (formatstr_654313553).length) && !((ConstSet3[formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)]] != undefined)))) break Label9;
                  if ((ConstSet4[formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)]] != undefined)) {
                  k_654313606 = subInt(addInt(mulInt(k_654313606, 10), formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)]), 48);
                  if ((isNumber_654313612 == 0)) {
                  isNumber_654313612 = 1;
                  }
                  
                  }
                  else {
                    isNumber_654313612 = -1;
                  }
                  
                  j_654313605 = addInt(j_654313605, 1);
                }
            } while (false);
            if ((isNumber_654313612 == 1)) {
            if (!(negative_654313607)) {
            Temporary10 = subInt(k_654313606, 1);
            }
            else {
            Temporary10 = subInt((a_654313554).length, k_654313606);
            }
            
            var idx_654313634 = Temporary10;
              if ((idx_654313634 < 0)) Temporary11 = true; else {                Temporary11 = ((a_654313554).length - 1 < idx_654313634);              }            if (Temporary11) {
            invalidFormatString_654313549();
            }
            
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(idx_654313634, 0, (a_654313554).length - 1)]);;
            }
            else {
              var x_654313638 = findNormalized_654313537(substr_33557922(formatstr_654313553, addInt(i_654313556, 2), subInt(j_654313605, 1)), a_654313554);
                if (!(0 <= x_654313638)) Temporary12 = false; else {                  Temporary12 = (x_654313638 < (a_654313554).length - 1);                }              if (Temporary12) {
              s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(addInt(x_654313638, 1), 0, (a_654313554).length - 1)]);;
              }
              else {
              invalidFormatString_654313549();
              }
              
            }
            
            i_654313556 = addInt(j_654313605, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_654313642 = addInt(i_654313556, 1);
            Label13: do {
                Label14: while (true) {
                  if (!(j_654313642 < (formatstr_654313553).length)) Temporary15 = false; else {                    Temporary15 = (ConstSet6[formatstr_654313553[chckIndx(j_654313642, 0, (formatstr_654313553).length - 1)]] != undefined);                  }                if (!Temporary15) break Label14;
                  j_654313642 = addInt(j_654313642, 1);
                }
            } while (false);
            var x_654313651 = findNormalized_654313537(substr_33557922(formatstr_654313553, addInt(i_654313556, 1), subInt(j_654313642, 1)), a_654313554);
              if (!(0 <= x_654313651)) Temporary16 = false; else {                Temporary16 = (x_654313651 < (a_654313554).length - 1);              }            if (Temporary16) {
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(addInt(x_654313651, 1), 0, (a_654313554).length - 1)]);;
            }
            else {
            invalidFormatString_654313549();
            }
            
            i_654313556 = j_654313642;
            break;
          default: 
            invalidFormatString_654313549();
            break;
          }
          }
          else {
            addChar(s_654313552[s_654313552_Idx], formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)]);;
            i_654313556 = addInt(i_654313556, 1);
          }
          
        }
    } while (false);

  
}

function nsuFormatSingleElem(formatstr_654313671, a_654313672) {
  var result_654313673 = [[]];

    result_654313673[0] = nimCopy(null, mnewString(0), NTI33554439);
    nsuAddf(result_654313673, 0, formatstr_654313671, [nimCopy(null, a_654313672, NTI33554439)]);

  return result_654313673[0];

}

function HEX5BHEX5D_939524972(s_939524975, x_939524976) {
  var result_939524977 = [];

    var a_939524979 = x_939524976.a;
    var L_939524981 = addInt(subInt(x_939524976.b, a_939524979), 1);
    result_939524977 = nimCopy(null, mnewString(chckRange(L_939524981, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_939524986 = 0;
      var i_1862272196 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1862272196 < L_939524981)) break Label3;
            i_939524986 = i_1862272196;
            result_939524977[chckIndx(i_939524986, 0, (result_939524977).length - 1)] = s_939524975[chckIndx(addInt(i_939524986, a_939524979), 0, (s_939524975).length - 1)];
            i_1862272196 = addInt(i_1862272196, 1);
          }
      } while (false);
    } while (false);

  return result_939524977;

}

function HEX2EHEX2E_939524947(a_939524950, b_939524951) {
  var result_939524952 = ({a: 0, b: 0});

    result_939524952 = nimCopy(result_939524952, {a: a_939524950, b: b_939524951}, NTI721420349);

  return result_939524952;

}

function regex_1862271449(expect_1862271450) {

function succeedImpl_1862271464(inputInHEX60gensym20_1862271465, valueInHEX60gensym20_1862271466, tailInHEX60gensym20_1862271467) {
  var result_1862271469 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1862271469 = nimCopy(result_1862271469, {kind: 0, value: nimCopy(null, valueInHEX60gensym20_1862271466, NTI33554439), tail: nimCopy(null, tailInHEX60gensym20_1862271467, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym20_1862271465, NTI33554439), expected: []}, NTI1862271108);

  return result_1862271469;

}

function failImpl_1862271471(inputInHEX60gensym20_1862271472, expectedInHEX60gensym20_1862271473, tailInHEX60gensym20_1862271474) {
  var result_1862271476 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1862271476 = nimCopy(result_1862271476, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym20_1862271473, NTI1862271429), tail: nimCopy(null, tailInHEX60gensym20_1862271474, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym20_1862271472, NTI33554439), value: []}, NTI1862271108);

  return result_1862271476;

}
      expect_1862271450 = nimCopy(null, expect_1862271450, NTI33554439);
      
function HEX3Aanonymous_1862271479(input_1862271480) {
        var result_1862271482 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1862271483 = succeedImpl_1862271464;
          var fail_1862271484 = failImpl_1862271471;
          var bounds_1862271485 = findBounds_1862270984(input_1862271480, expreg_1862271453);
          if (!((bounds_1862271485["Field0"] == 0))) {
          result_1862271482 = nimCopy(result_1862271482, fail_1862271484(input_1862271480, [nsuFormatSingleElem(makeNimstrLit("match for regex \'$1\'"), expect_1862271450)], input_1862271480), NTI1862271108);
          break BeforeRet;
          }
          
          result_1862271482 = nimCopy(result_1862271482, succeed_1862271483(input_1862271480, HEX5BHEX5D_939524972(input_1862271480, HEX2EHEX2E_939524947(0, bounds_1862271485["Field1"])), HEX5BHEX5D_939527322(input_1862271480, HEX2EHEX2E_872415312(addInt(bounds_1862271485["Field1"], 1), 1))), NTI1862271108);
        } while (false);

        return result_1862271482;

      }

  var result_1862271452 = null;

    var expreg_1862271453 = new RegExp(toJSStr(expect_1862271450));
    Label1: do {
    } while (false);
    result_1862271452 = {body: HEX3Aanonymous_1862271479};

  return result_1862271452;

}

function parse_1862271905(p_1862271907, input_1862271908) {
  var result_1862271909 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1862271907.body == null)) {
    result_1862271909 = nimCopy(result_1862271909, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1862271908, NTI33554439), fromInput: nimCopy(null, input_1862271908, NTI33554439), value: 0}, NTI1862271206);
    break BeforeRet;
    }
    
    result_1862271909 = nimCopy(result_1862271909, p_1862271907.body(input_1862271908), NTI1862271206);
  } while (false);

  return result_1862271909;

}

function HEX26_1845493855(x_1845493857, y_1845493858) {
  var result_1845493859 = [];

    result_1845493859 = new Array(chckRange(addInt((x_1845493857).length, (y_1845493858).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1845493857).length, (y_1845493858).length), 0, 2147483647) ; ++i) { result_1845493859[i] = []; }    Label1: do {
      var i_1845493877 = 0;
      var colontmp__1862272200 = 0;
      colontmp__1862272200 = subInt((x_1845493857).length, 1);
      var res_1862272201 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1862272201 <= colontmp__1862272200)) break Label3;
            i_1845493877 = res_1862272201;
            result_1845493859[chckIndx(i_1845493877, 0, (result_1845493859).length - 1)] = nimCopy(null, x_1845493857[chckIndx(i_1845493877, 0, (x_1845493857).length - 1)], NTI33554439);
            res_1862272201 = addInt(res_1862272201, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1845493885 = 0;
      var colontmp__1862272204 = 0;
      colontmp__1862272204 = subInt((y_1845493858).length, 1);
      var res_1862272205 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_1862272205 <= colontmp__1862272204)) break Label6;
            i_1845493885 = res_1862272205;
            result_1845493859[chckIndx(addInt(i_1845493885, (x_1845493857).length), 0, (result_1845493859).length - 1)] = nimCopy(null, y_1845493858[chckIndx(i_1845493885, 0, (y_1845493858).length - 1)], NTI33554439);
            res_1862272205 = addInt(res_1862272205, 1);
          }
      } while (false);
    } while (false);

  return result_1845493859;

}

function reprEnum(e_33557401, typ_33557402) {
  var result_33557403 = [];

    var tmp_33557404 = false;
    var item_33557405 = typ_33557402.node.sons[e_33557401];
    tmp_33557404 = item_33557405 !== undefined
    if (tmp_33557404) {
    result_33557403 = nimCopy(null, makeNimstrLit(item_33557405.name), NTI33554439);
    }
    else {
      result_33557403 = nimCopy(null, (HEX24_335544323(e_33557401) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557403;

}

function HEX7C_1862272049(a_1862272051, b_1862272052) {

function succeedImpl_1862272064(inputInHEX60gensym49_1862272065, valueInHEX60gensym49_1862272066, tailInHEX60gensym49_1862272067) {
  var result_1862272069 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862272069 = nimCopy(result_1862272069, {kind: 0, value: valueInHEX60gensym49_1862272066, tail: nimCopy(null, tailInHEX60gensym49_1862272067, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym49_1862272065, NTI33554439), expected: []}, NTI1862271206);

  return result_1862272069;

}

function failImpl_1862272071(inputInHEX60gensym49_1862272072, expectedInHEX60gensym49_1862272073, tailInHEX60gensym49_1862272074) {
  var result_1862272076 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862272076 = nimCopy(result_1862272076, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym49_1862272073, NTI1862272094), tail: nimCopy(null, tailInHEX60gensym49_1862272074, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym49_1862272072, NTI33554439), value: 0}, NTI1862271206);

  return result_1862272076;

}
      
function HEX3Aanonymous_1862272079(input_1862272080) {
          var Temporary1;
          var Temporary2;

        var result_1862272082 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1862272083 = succeedImpl_1862272064;
          var fail_1862272084 = failImpl_1862272071;
          var result1_1862272097 = parse_1862271905(a_1862272051, input_1862272080);
          if ((result1_1862272097.kind == 0)) {
          result_1862272082 = nimCopy(result_1862272082, result1_1862272097, NTI1862271206);
          break BeforeRet;
          }
          
          var result2_1862272114 = parse_1862271905(b_1862272052, input_1862272080);
          if ((result2_1862272114.kind == 0)) {
          result_1862272082 = nimCopy(result_1862272082, result2_1862272114, NTI1862271206);
          break BeforeRet;
          }
          
          var Temporary1 = result1_1862272097;
          if (ConstSet7[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
          var Temporary2 = result2_1862272114;
          if (ConstSet8[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
          result_1862272082 = nimCopy(result_1862272082, fail_1862272084(input_1862272080, HEX26_1845493855(Temporary1.expected, Temporary2.expected), input_1862272080), NTI1862271206);
        } while (false);

        return result_1862272082;

      }

  var result_1862272053 = null;

    Label1: do {
    } while (false);
    result_1862272053 = {body: HEX3Aanonymous_1862272079};

  return result_1862272053;

}

function contains_1828718348(s_1828718352, value_1828718353) {
  var result_1828718354 = false;

    result_1828718354 = ((s_1828718352.a <= value_1828718353) && (value_1828718353 <= s_1828718352.b));

  return result_1828718354;

}

function nsuFormatOpenArray(formatstr_654313660, a_654313661) {
  var result_654313662 = [[]];

    result_654313662[0] = nimCopy(null, mnewString(0), NTI33554439);
    nsuAddf(result_654313662, 0, formatstr_654313660, a_654313661);

  return result_654313662[0];

}

function c_1862271383(expect_1862271385) {

function succeedImpl_1862271398(inputInHEX60gensym14_1862271399, valueInHEX60gensym14_1862271400, tailInHEX60gensym14_1862271401) {
  var result_1862271403 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862271403 = nimCopy(result_1862271403, {kind: 0, value: valueInHEX60gensym14_1862271400, tail: nimCopy(null, tailInHEX60gensym14_1862271401, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym14_1862271399, NTI33554439), expected: []}, NTI1862271206);

  return result_1862271403;

}

function failImpl_1862271405(inputInHEX60gensym14_1862271406, expectedInHEX60gensym14_1862271407, tailInHEX60gensym14_1862271408) {
  var result_1862271410 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862271410 = nimCopy(result_1862271410, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym14_1862271407, NTI1862271372), tail: nimCopy(null, tailInHEX60gensym14_1862271408, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym14_1862271406, NTI33554439), value: 0}, NTI1862271206);

  return result_1862271410;

}
      expect_1862271385 = nimCopy(null, expect_1862271385, NTI1828718412);
      
function HEX3Aanonymous_1862271413(input_1862271414) {
            var Temporary1;

        var result_1862271416 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1862271417 = succeedImpl_1862271398;
          var fail_1862271418 = failImpl_1862271405;
            if (!(0 < (input_1862271414).length)) Temporary1 = false; else {              Temporary1 = contains_1828718348(expect_1862271385, input_1862271414[chckIndx(0, 0, (input_1862271414).length - 1)]);            }          if (Temporary1) {
          result_1862271416 = nimCopy(result_1862271416, succeed_1862271417(input_1862271414, input_1862271414[chckIndx(0, 0, (input_1862271414).length - 1)], HEX5BHEX5D_939527322(input_1862271414, HEX2EHEX2E_872415312(1, 1))), NTI1862271206);
          break BeforeRet;
          }
          
          result_1862271416 = nimCopy(result_1862271416, fail_1862271418(input_1862271414, [nsuFormatOpenArray(makeNimstrLit("character from $1..$2"), [nimCharToStr(expect_1862271385.a), nimCharToStr(expect_1862271385.b)])], input_1862271414), NTI1862271206);
        } while (false);

        return result_1862271416;

      }

  var result_1862271387 = null;

    Label1: do {
    } while (false);
    result_1862271387 = {body: HEX3Aanonymous_1862271413};

  return result_1862271387;

}

function HEX2EHEX2E_1828718278(a_1828718281, b_1828718282) {
  var result_1828718285 = ({a: 0, b: 0});

    result_1828718285 = nimCopy(result_1828718285, {a: a_1828718281, b: b_1828718282}, NTI1828718412);

  return result_1828718285;

}

function HEX3Aanonymous_1862271963(input_1862271964) {
  var result_1862271966 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    var succeed_1862271967 = succeedImpl_1862271948;
    var fail_1862271968 = failImpl_1862271955;
    if ((0 < (input_1862271964).length)) {
    result_1862271966 = nimCopy(result_1862271966, fail_1862271968(input_1862271964, [makeNimstrLit("EOF")], input_1862271964), NTI1862271108);
    break BeforeRet;
    }
    
    result_1862271966 = nimCopy(result_1862271966, succeed_1862271967(input_1862271964, [], []), NTI1862271108);
  } while (false);

  return result_1862271966;

}

function HEX3Aanonymous_1862271999(input_1862272000) {
  var result_1862272002 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    var succeed_1862272003 = succeedImpl_1862271984;
    var fail_1862272004 = failImpl_1862271991;
    if ((0 < (input_1862272000).length)) {
    result_1862272002 = nimCopy(result_1862272002, succeed_1862272003(input_1862272000, input_1862272000[chckIndx(0, 0, (input_1862272000).length - 1)], HEX5BHEX5D_939527322(input_1862272000, HEX2EHEX2E_872415312(1, 1))), NTI1862271206);
    break BeforeRet;
    }
    
    result_1862272002 = nimCopy(result_1862272002, fail_1862272004(input_1862272000, [makeNimstrLit("any character")], input_1862272000), NTI1862271206);
  } while (false);

  return result_1862272002;

}
Label1: do {
} while (false);
var eofImpl_1862271973 = {body: HEX3Aanonymous_1862271963};
Label2: do {
} while (false);
var anyCharImpl_1862272027 = {body: HEX3Aanonymous_1862271999};
var eof_1862272028 = eofImpl_1862271973;
var anyChar_1862272029 = anyCharImpl_1862272027;
var whitespace_1862272030 = regex_1862271449(makeNimstrLit("\\s+"));
var letter_1862272123 = HEX7C_1862272049(c_1862271383(HEX2EHEX2E_1828718278(97, 122)), c_1862271383(HEX2EHEX2E_1828718278(65, 90)));
var digit_1862272129 = c_1862271383(HEX2EHEX2E_1828718278(48, 57));
var alphanumeric_1862272142 = HEX7C_1862272049(letter_1862272123, digit_1862272129);

function parse_1811941902(p_1811941904, input_1811941905) {
  var result_1811941906 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811941904.body == null)) {
    result_1811941906 = nimCopy(result_1811941906, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811941905, NTI33554439), fromInput: nimCopy(null, input_1811941905, NTI33554439), value: []}, NTI1811940637);
    break BeforeRet;
    }
    
    result_1811941906 = nimCopy(result_1811941906, p_1811941904.body(input_1811941905), NTI1811940637);
  } while (false);

  return result_1811941906;

}

function map_1811942083(a_1811942086, fn_1811942088) {

function succeedImpl_1811942100(inputInHEX60gensym43_1811942101, valueInHEX60gensym43_1811942102, tailInHEX60gensym43_1811942103) {
  var result_1811942105 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942105 = nimCopy(result_1811942105, {kind: 0, value: nimCopy(null, valueInHEX60gensym43_1811942102, NTI452985127), tail: nimCopy(null, tailInHEX60gensym43_1811942103, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym43_1811942101, NTI33554439), expected: []}, NTI1811940170);

  return result_1811942105;

}

function failImpl_1811942107(inputInHEX60gensym43_1811942108, expectedInHEX60gensym43_1811942109, tailInHEX60gensym43_1811942110) {
  var result_1811942112 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942112 = nimCopy(result_1811942112, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym43_1811942109, NTI1811941227), tail: nimCopy(null, tailInHEX60gensym43_1811942110, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym43_1811942108, NTI33554439), value: []}, NTI1811940170);

  return result_1811942112;

}
      
function HEX3Aanonymous_1811942115(input_1811942116) {
            var Temporary2;
          var Temporary3;

        var result_1811942118 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811942119 = succeedImpl_1811942100;
          var fail_1811942120 = failImpl_1811942107;
          Label1: do {
            var tempHEX60gensym24_1811942133 = parse_1811941902(a_1811942086, input_1811942116);
            if ((tempHEX60gensym24_1811942133.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811942133;
            if (ConstSet9[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811942118 = nimCopy(result_1811942118, {kind: 1, fromInput: nimCopy(null, input_1811942116, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811942133.tail, NTI33554439), value: []}, NTI1811940170);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811942139 = nimCopy(null, tempHEX60gensym24_1811942133, NTI1811940637);
          var Temporary3 = result1_1811942139;
          if (ConstSet10[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811942118 = nimCopy(result_1811942118, succeed_1811942119(input_1811942116, fn_1811942088(Temporary3.value), result1_1811942139.tail), NTI1811940170);
          break BeforeRet;
        } while (false);

        return result_1811942118;

      }

  var result_1811942089 = null;

    Label1: do {
    } while (false);
    result_1811942089 = {body: HEX3Aanonymous_1811942115};

  return result_1811942089;

}

function HEX26_1811941944(x_1811941946, y_1811941947) {
  var result_1811941948 = [];

    result_1811941948 = new Array(chckRange(addInt((x_1811941946).length, (y_1811941947).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1811941946).length, (y_1811941947).length), 0, 2147483647) ; ++i) { result_1811941948[i] = []; }    Label1: do {
      var i_1811941967 = 0;
      var colontmp__1795162194 = 0;
      colontmp__1795162194 = subInt((x_1811941946).length, 1);
      var res_1795162195 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162195 <= colontmp__1795162194)) break Label3;
            i_1811941967 = res_1795162195;
            result_1811941948[chckIndx(i_1811941967, 0, (result_1811941948).length - 1)] = nimCopy(null, x_1811941946[chckIndx(i_1811941967, 0, (x_1811941946).length - 1)], NTI1811940164);
            res_1795162195 = addInt(res_1795162195, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1811941975 = 0;
      var colontmp__1795162198 = 0;
      colontmp__1795162198 = subInt((y_1811941947).length, 1);
      var res_1795162199 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_1795162199 <= colontmp__1795162198)) break Label6;
            i_1811941975 = res_1795162199;
            result_1811941948[chckIndx(addInt(i_1811941975, (x_1811941946).length), 0, (result_1811941948).length - 1)] = nimCopy(null, y_1811941947[chckIndx(i_1811941975, 0, (y_1811941947).length - 1)], NTI1811940164);
            res_1795162199 = addInt(res_1795162199, 1);
          }
      } while (false);
    } while (false);

  return result_1811941948;

}

function HEX26_1811941849(a_1811941854, b_1811941858) {

function succeedImpl_1811941873(inputInHEX60gensym37_1811941874, valueInHEX60gensym37_1811941875, tailInHEX60gensym37_1811941876) {
  var result_1811941878 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941878 = nimCopy(result_1811941878, {kind: 0, value: nimCopy(null, valueInHEX60gensym37_1811941875, NTI1811941037), tail: nimCopy(null, tailInHEX60gensym37_1811941876, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym37_1811941874, NTI33554439), expected: []}, NTI1811940637);

  return result_1811941878;

}

function failImpl_1811941880(inputInHEX60gensym37_1811941881, expectedInHEX60gensym37_1811941882, tailInHEX60gensym37_1811941883) {
  var result_1811941885 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941885 = nimCopy(result_1811941885, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym37_1811941882, NTI1811941043), tail: nimCopy(null, tailInHEX60gensym37_1811941883, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym37_1811941881, NTI33554439), value: []}, NTI1811940637);

  return result_1811941885;

}
      
function HEX3Aanonymous_1811941888(input_1811941889) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_1811941891 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811941892 = succeedImpl_1811941873;
          var fail_1811941893 = failImpl_1811941880;
          Label1: do {
            var tempHEX60gensym26_1811941918 = parse_1811941902(a_1811941854, input_1811941889);
            if ((tempHEX60gensym26_1811941918.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_1811941918;
            if (ConstSet11[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811941891 = nimCopy(result_1811941891, {kind: 1, fromInput: nimCopy(null, input_1811941889, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym26_1811941918.tail, NTI33554439), value: []}, NTI1811940637);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811941924 = nimCopy(null, tempHEX60gensym26_1811941918, NTI1811940637);
          Label3: do {
            var tempHEX60gensym28_1811941937 = parse_1811941902(b_1811941858, result1_1811941924.tail);
            if ((tempHEX60gensym28_1811941937.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_1811941937;
            if (ConstSet12[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811941891 = nimCopy(result_1811941891, {kind: 1, fromInput: nimCopy(null, input_1811941889, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym28_1811941937.tail, NTI33554439), value: []}, NTI1811940637);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811941943 = nimCopy(null, tempHEX60gensym28_1811941937, NTI1811940637);
          var Temporary5 = result1_1811941924;
          if (ConstSet13[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          var Temporary6 = result2_1811941943;
          if (ConstSet14[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1862270997)); }
          result_1811941891 = nimCopy(result_1811941891, succeed_1811941892(input_1811941889, HEX26_1811941944(Temporary5.value, Temporary6.value), result2_1811941943.tail), NTI1811940637);
          break BeforeRet;
        } while (false);

        return result_1811941891;

      }

  var result_1811941862 = null;

    Label1: do {
    } while (false);
    result_1811941862 = {body: HEX3Aanonymous_1811941888};

  return result_1811941862;

}

function parse_1811941370(p_1811941372, input_1811941373) {
  var result_1811941374 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811941372.body == null)) {
    result_1811941374 = nimCopy(result_1811941374, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811941373, NTI33554439), fromInput: nimCopy(null, input_1811941373, NTI33554439), value: []}, NTI1811940170);
    break BeforeRet;
    }
    
    result_1811941374 = nimCopy(result_1811941374, p_1811941372.body(input_1811941373), NTI1811940170);
  } while (false);

  return result_1811941374;

}

function map_1811941604(a_1811941607, fn_1811941609) {

function succeedImpl_1811941621(inputInHEX60gensym33_1811941622, valueInHEX60gensym33_1811941623, tailInHEX60gensym33_1811941624) {
  var result_1811941626 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941626 = nimCopy(result_1811941626, {kind: 0, value: nimCopy(null, valueInHEX60gensym33_1811941623, NTI1811940746), tail: nimCopy(null, tailInHEX60gensym33_1811941624, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym33_1811941622, NTI33554439), expected: []}, NTI1811940637);

  return result_1811941626;

}

function failImpl_1811941628(inputInHEX60gensym33_1811941629, expectedInHEX60gensym33_1811941630, tailInHEX60gensym33_1811941631) {
  var result_1811941633 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941633 = nimCopy(result_1811941633, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym33_1811941630, NTI1811940797), tail: nimCopy(null, tailInHEX60gensym33_1811941631, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym33_1811941629, NTI33554439), value: []}, NTI1811940637);

  return result_1811941633;

}
      
function HEX3Aanonymous_1811941636(input_1811941637) {
            var Temporary2;
          var Temporary3;

        var result_1811941639 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811941640 = succeedImpl_1811941621;
          var fail_1811941641 = failImpl_1811941628;
          Label1: do {
            var tempHEX60gensym24_1811941654 = parse_1811941370(a_1811941607, input_1811941637);
            if ((tempHEX60gensym24_1811941654.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811941654;
            if (ConstSet15[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811941639 = nimCopy(result_1811941639, {kind: 1, fromInput: nimCopy(null, input_1811941637, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811941654.tail, NTI33554439), value: []}, NTI1811940637);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811941660 = nimCopy(null, tempHEX60gensym24_1811941654, NTI1811940170);
          var Temporary3 = result1_1811941660;
          if (ConstSet16[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811941639 = nimCopy(result_1811941639, succeed_1811941640(input_1811941637, fn_1811941609(Temporary3.value), result1_1811941660.tail), NTI1811940637);
          break BeforeRet;
        } while (false);

        return result_1811941639;

      }

  var result_1811941610 = null;

    Label1: do {
    } while (false);
    result_1811941610 = {body: HEX3Aanonymous_1811941636};

  return result_1811941610;

}

function nop_1811940950() {

function succeedImpl_1811940963(inputInHEX60gensym23_1811940964, valueInHEX60gensym23_1811940965, tailInHEX60gensym23_1811940966) {
  var result_1811940968 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811940968 = nimCopy(result_1811940968, {kind: 0, value: nimCopy(null, valueInHEX60gensym23_1811940965, NTI1811940224), tail: nimCopy(null, tailInHEX60gensym23_1811940966, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym23_1811940964, NTI33554439), expected: []}, NTI1811940170);

  return result_1811940968;

}

function failImpl_1811940982(inputInHEX60gensym23_1811940983, expectedInHEX60gensym23_1811940984, tailInHEX60gensym23_1811940985) {
  var result_1811940987 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811940987 = nimCopy(result_1811940987, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym23_1811940984, NTI1811940251), tail: nimCopy(null, tailInHEX60gensym23_1811940985, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym23_1811940983, NTI33554439), value: []}, NTI1811940170);

  return result_1811940987;

}
      
function HEX3Aanonymous_1811940990(input_1811940991) {
        var result_1811940993 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_1811940994 = succeedImpl_1811940963;
          var fail_1811940995 = failImpl_1811940982;
          result_1811940993 = nimCopy(result_1811940993, succeed_1811940994(input_1811940991, [], input_1811940991), NTI1811940170);

        return result_1811940993;

      }

  var result_1811940952 = null;

    Label1: do {
    } while (false);
    result_1811940952 = {body: HEX3Aanonymous_1811940990};

  return result_1811940952;

}

function parse_1811941132(p_1811941134, input_1811941135) {
  var result_1811941136 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811941134.body == null)) {
    result_1811941136 = nimCopy(result_1811941136, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811941135, NTI33554439), fromInput: nimCopy(null, input_1811941135, NTI33554439), value: []}, NTI1862271108);
    break BeforeRet;
    }
    
    result_1811941136 = nimCopy(result_1811941136, p_1811941134.body(input_1811941135), NTI1862271108);
  } while (false);

  return result_1811941136;

}

function map_1811941086(a_1811941089, fn_1811941091) {

function succeedImpl_1811941103(inputInHEX60gensym25_1811941104, valueInHEX60gensym25_1811941105, tailInHEX60gensym25_1811941106) {
  var result_1811941108 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941108 = nimCopy(result_1811941108, {kind: 0, value: nimCopy(null, valueInHEX60gensym25_1811941105, NTI1476395617), tail: nimCopy(null, tailInHEX60gensym25_1811941106, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym25_1811941104, NTI33554439), expected: []}, NTI1811940170);

  return result_1811941108;

}

function failImpl_1811941110(inputInHEX60gensym25_1811941111, expectedInHEX60gensym25_1811941112, tailInHEX60gensym25_1811941113) {
  var result_1811941115 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941115 = nimCopy(result_1811941115, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym25_1811941112, NTI1811940359), tail: nimCopy(null, tailInHEX60gensym25_1811941113, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym25_1811941111, NTI33554439), value: []}, NTI1811940170);

  return result_1811941115;

}
      
function HEX3Aanonymous_1811941118(input_1811941119) {
            var Temporary2;
          var Temporary3;

        var result_1811941121 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811941122 = succeedImpl_1811941103;
          var fail_1811941123 = failImpl_1811941110;
          Label1: do {
            var tempHEX60gensym24_1811941148 = parse_1811941132(a_1811941089, input_1811941119);
            if ((tempHEX60gensym24_1811941148.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811941148;
            if (ConstSet17[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811941121 = nimCopy(result_1811941121, {kind: 1, fromInput: nimCopy(null, input_1811941119, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811941148.tail, NTI33554439), value: []}, NTI1811940170);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811941154 = nimCopy(null, tempHEX60gensym24_1811941148, NTI1862271108);
          var Temporary3 = result1_1811941154;
          if (ConstSet18[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811941121 = nimCopy(result_1811941121, succeed_1811941122(input_1811941119, fn_1811941091(Temporary3.value), result1_1811941154.tail), NTI1811940170);
          break BeforeRet;
        } while (false);

        return result_1811941121;

      }

  var result_1811941092 = null;

    Label1: do {
    } while (false);
    result_1811941092 = {body: HEX3Aanonymous_1811941118};

  return result_1811941092;

}

function HEX2A_1811940942(a_1811940944, n_1811940945) {
    var Temporary1;
      
function HEX3Aanonymous_1811941049(x_1811941069) {
        var result_1811941072 = [];

          result_1811941072 = nimCopy(null, [nimCopy(null, x_1811941069, NTI33554439)], NTI1476395617);

        return result_1811941072;

      }

function succeedImpl_1811941165(inputInHEX60gensym26_1811941166, valueInHEX60gensym26_1811941167, tailInHEX60gensym26_1811941168) {
  var result_1811941170 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941170 = nimCopy(result_1811941170, {kind: 0, value: nimCopy(null, valueInHEX60gensym26_1811941167, NTI1811940411), tail: nimCopy(null, tailInHEX60gensym26_1811941168, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym26_1811941166, NTI33554439), expected: []}, NTI1811940170);

  return result_1811941170;

}

function failImpl_1811941172(inputInHEX60gensym26_1811941173, expectedInHEX60gensym26_1811941174, tailInHEX60gensym26_1811941175) {
  var result_1811941177 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941177 = nimCopy(result_1811941177, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym26_1811941174, NTI1811940417), tail: nimCopy(null, tailInHEX60gensym26_1811941175, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym26_1811941173, NTI33554439), value: []}, NTI1811940170);

  return result_1811941177;

}
        
function HEX3Aanonymous_1811941180(input_1811941181) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_1811941183 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: do {
            var succeed_1811941184 = succeedImpl_1811941165;
            var fail_1811941185 = failImpl_1811941172;
            Label1: do {
              var tempHEX60gensym38_1811941198 = parse_1811941132(a_1811940944, input_1811941181);
              if ((tempHEX60gensym38_1811941198.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_1811941198;
              if (ConstSet19[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
              result_1811941183 = nimCopy(result_1811941183, {kind: 1, fromInput: nimCopy(null, input_1811941181, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym38_1811941198.tail, NTI33554439), value: []}, NTI1811940170);
              break BeforeRet;
              }
              
            } while (false);
            var result1_1811941204 = nimCopy(null, tempHEX60gensym38_1811941198, NTI1862271108);
            var Temporary3 = result1_1811941204;
            if (ConstSet20[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
            var outputs_1811941209 = [nimCopy(null, Temporary3.value, NTI33554439)];
            var lastTail_1811941210 = nimCopy(null, result1_1811941204.tail, NTI33554439);
            Label4: do {
              var i_1811941216 = 0;
              var res_1795162207 = 2;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_1795162207 <= n_1811940945)) break Label6;
                    i_1811941216 = res_1795162207;
                    Label7: do {
                      var tempHEX60gensym40_1811941229 = parse_1811941132(a_1811940944, result1_1811941204.tail);
                      if ((tempHEX60gensym40_1811941229.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_1811941229;
                      if (ConstSet21[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1862270997)); }
                      result_1811941183 = nimCopy(result_1811941183, {kind: 1, fromInput: nimCopy(null, input_1811941181, NTI33554439), expected: nimCopy(null, Temporary8.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym40_1811941229.tail, NTI33554439), value: []}, NTI1811940170);
                      break BeforeRet;
                      }
                      
                    } while (false);
                    result1_1811941204 = nimCopy(result1_1811941204, tempHEX60gensym40_1811941229, NTI1862271108);
                    if (eqStrings(result1_1811941204.tail, lastTail_1811941210)) {
                    break Label4;
                    }
                    
                    lastTail_1811941210 = nimCopy(null, result1_1811941204.tail, NTI33554439);
                    var Temporary9 = result1_1811941204;
                    if (ConstSet22[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1862270997)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI33554439);
                    outputs_1811941209.push(Temporary10);;
                    res_1795162207 = addInt(res_1795162207, 1);
                  }
              } while (false);
            } while (false);
            result_1811941183 = nimCopy(result_1811941183, succeed_1811941184(input_1811941181, outputs_1811941209, result1_1811941204.tail), NTI1811940170);
          } while (false);

          return result_1811941183;

        }

  var result_1811940949 = null;

  BeforeRet: do {
    switch (n_1811940945) {
    case 0:
      result_1811940949 = nop_1811940950();
      break BeforeRet;
      break;
    case 1:
      result_1811940949 = map_1811941086(a_1811940944, HEX3Aanonymous_1811941049);
      break BeforeRet;
      break;
    default: 
      Label2: do {
      } while (false);
      Temporary1 = {body: HEX3Aanonymous_1811941180};
      break;
    }
    result_1811940949 = Temporary1;
  } while (false);

  return result_1811940949;

}

function nop_1811941441() {

function succeedImpl_1811941454(inputInHEX60gensym31_1811941455, valueInHEX60gensym31_1811941456, tailInHEX60gensym31_1811941457) {
  var result_1811941459 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941459 = nimCopy(result_1811941459, {kind: 0, value: nimCopy(null, valueInHEX60gensym31_1811941456, NTI1811940644), tail: nimCopy(null, tailInHEX60gensym31_1811941457, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym31_1811941455, NTI33554439), expected: []}, NTI1811940637);

  return result_1811941459;

}

function failImpl_1811941482(inputInHEX60gensym31_1811941483, expectedInHEX60gensym31_1811941484, tailInHEX60gensym31_1811941485) {
  var result_1811941487 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941487 = nimCopy(result_1811941487, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym31_1811941484, NTI1811940677), tail: nimCopy(null, tailInHEX60gensym31_1811941485, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym31_1811941483, NTI33554439), value: []}, NTI1811940637);

  return result_1811941487;

}
      
function HEX3Aanonymous_1811941490(input_1811941491) {
        var result_1811941493 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_1811941494 = succeedImpl_1811941454;
          var fail_1811941495 = failImpl_1811941482;
          result_1811941493 = nimCopy(result_1811941493, succeed_1811941494(input_1811941491, [], input_1811941491), NTI1811940637);

        return result_1811941493;

      }

  var result_1811941443 = null;

    Label1: do {
    } while (false);
    result_1811941443 = {body: HEX3Aanonymous_1811941490};

  return result_1811941443;

}

function HEX2A_1811941428(a_1811941430, n_1811941431) {
    var Temporary1;
      
function HEX3Aanonymous_1811941558(x_1811941587) {
        var result_1811941590 = [];

          result_1811941590 = nimCopy(null, [nimCopy(null, x_1811941587, NTI1811940164)], NTI1811940746);

        return result_1811941590;

      }

function succeedImpl_1811941671(inputInHEX60gensym34_1811941672, valueInHEX60gensym34_1811941673, tailInHEX60gensym34_1811941674) {
  var result_1811941676 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941676 = nimCopy(result_1811941676, {kind: 0, value: nimCopy(null, valueInHEX60gensym34_1811941673, NTI1811940837), tail: nimCopy(null, tailInHEX60gensym34_1811941674, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym34_1811941672, NTI33554439), expected: []}, NTI1811940637);

  return result_1811941676;

}

function failImpl_1811941678(inputInHEX60gensym34_1811941679, expectedInHEX60gensym34_1811941680, tailInHEX60gensym34_1811941681) {
  var result_1811941683 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941683 = nimCopy(result_1811941683, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym34_1811941680, NTI1811940843), tail: nimCopy(null, tailInHEX60gensym34_1811941681, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym34_1811941679, NTI33554439), value: []}, NTI1811940637);

  return result_1811941683;

}
        
function HEX3Aanonymous_1811941686(input_1811941687) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_1811941689 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: do {
            var succeed_1811941690 = succeedImpl_1811941671;
            var fail_1811941691 = failImpl_1811941678;
            Label1: do {
              var tempHEX60gensym38_1811941704 = parse_1811941370(a_1811941430, input_1811941687);
              if ((tempHEX60gensym38_1811941704.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_1811941704;
              if (ConstSet23[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
              result_1811941689 = nimCopy(result_1811941689, {kind: 1, fromInput: nimCopy(null, input_1811941687, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym38_1811941704.tail, NTI33554439), value: []}, NTI1811940637);
              break BeforeRet;
              }
              
            } while (false);
            var result1_1811941710 = nimCopy(null, tempHEX60gensym38_1811941704, NTI1811940170);
            var Temporary3 = result1_1811941710;
            if (ConstSet24[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
            var outputs_1811941715 = [nimCopy(null, Temporary3.value, NTI1811940164)];
            var lastTail_1811941716 = nimCopy(null, result1_1811941710.tail, NTI33554439);
            Label4: do {
              var i_1811941722 = 0;
              var res_1795162216 = 2;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_1795162216 <= n_1811941431)) break Label6;
                    i_1811941722 = res_1795162216;
                    Label7: do {
                      var tempHEX60gensym40_1811941735 = parse_1811941370(a_1811941430, result1_1811941710.tail);
                      if ((tempHEX60gensym40_1811941735.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_1811941735;
                      if (ConstSet25[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1862270997)); }
                      result_1811941689 = nimCopy(result_1811941689, {kind: 1, fromInput: nimCopy(null, input_1811941687, NTI33554439), expected: nimCopy(null, Temporary8.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym40_1811941735.tail, NTI33554439), value: []}, NTI1811940637);
                      break BeforeRet;
                      }
                      
                    } while (false);
                    result1_1811941710 = nimCopy(result1_1811941710, tempHEX60gensym40_1811941735, NTI1811940170);
                    if (eqStrings(result1_1811941710.tail, lastTail_1811941716)) {
                    break Label4;
                    }
                    
                    lastTail_1811941716 = nimCopy(null, result1_1811941710.tail, NTI33554439);
                    var Temporary9 = result1_1811941710;
                    if (ConstSet26[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1862270997)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI1811940164);
                    outputs_1811941715.push(Temporary10);;
                    res_1795162216 = addInt(res_1795162216, 1);
                  }
              } while (false);
            } while (false);
            result_1811941689 = nimCopy(result_1811941689, succeed_1811941690(input_1811941687, outputs_1811941715, result1_1811941710.tail), NTI1811940637);
          } while (false);

          return result_1811941689;

        }

  var result_1811941440 = null;

  BeforeRet: do {
    switch (n_1811941431) {
    case 0:
      result_1811941440 = nop_1811941441();
      break BeforeRet;
      break;
    case 1:
      result_1811941440 = map_1811941604(a_1811941430, HEX3Aanonymous_1811941558);
      break BeforeRet;
      break;
    default: 
      Label2: do {
      } while (false);
      Temporary1 = {body: HEX3Aanonymous_1811941686};
      break;
    }
    result_1811941440 = Temporary1;
  } while (false);

  return result_1811941440;

}

function HEX7C_1811941326(a_1811941328, b_1811941329) {

function succeedImpl_1811941341(inputInHEX60gensym30_1811941342, valueInHEX60gensym30_1811941343, tailInHEX60gensym30_1811941344) {
  var result_1811941346 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941346 = nimCopy(result_1811941346, {kind: 0, value: nimCopy(null, valueInHEX60gensym30_1811941343, NTI1811940164), tail: nimCopy(null, tailInHEX60gensym30_1811941344, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym30_1811941342, NTI33554439), expected: []}, NTI1811940170);

  return result_1811941346;

}

function failImpl_1811941348(inputInHEX60gensym30_1811941349, expectedInHEX60gensym30_1811941350, tailInHEX60gensym30_1811941351) {
  var result_1811941353 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811941353 = nimCopy(result_1811941353, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym30_1811941350, NTI1811940581), tail: nimCopy(null, tailInHEX60gensym30_1811941351, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym30_1811941349, NTI33554439), value: []}, NTI1811940170);

  return result_1811941353;

}
      
function HEX3Aanonymous_1811941356(input_1811941357) {
          var Temporary1;
          var Temporary2;

        var result_1811941359 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811941360 = succeedImpl_1811941341;
          var fail_1811941361 = failImpl_1811941348;
          var result1_1811941386 = parse_1811941370(a_1811941328, input_1811941357);
          if ((result1_1811941386.kind == 0)) {
          result_1811941359 = nimCopy(result_1811941359, result1_1811941386, NTI1811940170);
          break BeforeRet;
          }
          
          var result2_1811941403 = parse_1811941370(b_1811941329, input_1811941357);
          if ((result2_1811941403.kind == 0)) {
          result_1811941359 = nimCopy(result_1811941359, result2_1811941403, NTI1811940170);
          break BeforeRet;
          }
          
          var Temporary1 = result1_1811941386;
          if (ConstSet27[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
          var Temporary2 = result2_1811941403;
          if (ConstSet28[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
          result_1811941359 = nimCopy(result_1811941359, fail_1811941361(input_1811941357, HEX26_1845493855(Temporary1.expected, Temporary2.expected), input_1811941357), NTI1811940170);
        } while (false);

        return result_1811941359;

      }

  var result_1811941330 = null;

    Label1: do {
    } while (false);
    result_1811941330 = {body: HEX3Aanonymous_1811941356};

  return result_1811941330;

}

function newSeq_452985301(len_452985303) {
  var result_452985304 = [];

    result_452985304 = new Array(len_452985303); for (var i = 0 ; i < len_452985303 ; ++i) { result_452985304[i] = []; }
  return result_452985304;

}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function parse_1811942654(p_1811942656, input_1811942657) {
  var result_1811942658 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811942656.body == null)) {
    result_1811942658 = nimCopy(result_1811942658, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811942657, NTI33554439), fromInput: nimCopy(null, input_1811942657, NTI33554439), value: []}, NTI1811941276);
    break BeforeRet;
    }
    
    result_1811942658 = nimCopy(result_1811942658, p_1811942656.body(input_1811942657), NTI1811941276);
  } while (false);

  return result_1811942658;

}

function map_1811943500(a_1811943503, fn_1811943505) {

function succeedImpl_1811943517(inputInHEX60gensym70_1811943518, valueInHEX60gensym70_1811943519, tailInHEX60gensym70_1811943520) {
  var result_1811943522 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811943522 = nimCopy(result_1811943522, {kind: 0, value: nimCopy(null, valueInHEX60gensym70_1811943519, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym70_1811943520, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym70_1811943518, NTI33554439), expected: []}, NTI1811941261);

  return result_1811943522;

}

function failImpl_1811943524(inputInHEX60gensym70_1811943525, expectedInHEX60gensym70_1811943526, tailInHEX60gensym70_1811943527) {
  var result_1811943529 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811943529 = nimCopy(result_1811943529, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym70_1811943526, NTI1811942452), tail: nimCopy(null, tailInHEX60gensym70_1811943527, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym70_1811943525, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811943529;

}
      
function HEX3Aanonymous_1811943532(input_1811943533) {
            var Temporary2;
          var Temporary3;

        var result_1811943535 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811943536 = succeedImpl_1811943517;
          var fail_1811943537 = failImpl_1811943524;
          Label1: do {
            var tempHEX60gensym24_1811943550 = parse_1811942654(a_1811943503, input_1811943533);
            if ((tempHEX60gensym24_1811943550.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811943550;
            if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811943535 = nimCopy(result_1811943535, {kind: 1, fromInput: nimCopy(null, input_1811943533, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811943550.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811943556 = nimCopy(null, tempHEX60gensym24_1811943550, NTI1811941276);
          var Temporary3 = result1_1811943556;
          if (ConstSet30[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811943535 = nimCopy(result_1811943535, succeed_1811943536(input_1811943533, fn_1811943505(Temporary3.value), result1_1811943556.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811943535;

      }

  var result_1811943506 = null;

    Label1: do {
    } while (false);
    result_1811943506 = {body: HEX3Aanonymous_1811943532};

  return result_1811943506;

}

function parse_1811943186(p_1811943188, input_1811943189) {
  var result_1811943190 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811943188.body == null)) {
    result_1811943190 = nimCopy(result_1811943190, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811943189, NTI33554439), fromInput: nimCopy(null, input_1811943189, NTI33554439), value: []}, NTI1811941762);
    break BeforeRet;
    }
    
    result_1811943190 = nimCopy(result_1811943190, p_1811943188.body(input_1811943189), NTI1811941762);
  } while (false);

  return result_1811943190;

}

function map_1811943406(a_1811943409, fn_1811943411) {

function succeedImpl_1811943423(inputInHEX60gensym69_1811943424, valueInHEX60gensym69_1811943425, tailInHEX60gensym69_1811943426) {
  var result_1811943428 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811943428 = nimCopy(result_1811943428, {kind: 0, value: nimCopy(null, valueInHEX60gensym69_1811943425, NTI1845493951), tail: nimCopy(null, tailInHEX60gensym69_1811943426, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym69_1811943424, NTI33554439), expected: []}, NTI1811941276);

  return result_1811943428;

}

function failImpl_1811943430(inputInHEX60gensym69_1811943431, expectedInHEX60gensym69_1811943432, tailInHEX60gensym69_1811943433) {
  var result_1811943435 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811943435 = nimCopy(result_1811943435, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym69_1811943432, NTI1811942379), tail: nimCopy(null, tailInHEX60gensym69_1811943433, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym69_1811943431, NTI33554439), value: []}, NTI1811941276);

  return result_1811943435;

}
      
function HEX3Aanonymous_1811943438(input_1811943439) {
            var Temporary2;
          var Temporary3;

        var result_1811943441 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811943442 = succeedImpl_1811943423;
          var fail_1811943443 = failImpl_1811943430;
          Label1: do {
            var tempHEX60gensym24_1811943456 = parse_1811943186(a_1811943409, input_1811943439);
            if ((tempHEX60gensym24_1811943456.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811943456;
            if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811943441 = nimCopy(result_1811943441, {kind: 1, fromInput: nimCopy(null, input_1811943439, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811943456.tail, NTI33554439), value: []}, NTI1811941276);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811943462 = nimCopy(null, tempHEX60gensym24_1811943456, NTI1811941762);
          var Temporary3 = result1_1811943462;
          if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811943441 = nimCopy(result_1811943441, succeed_1811943442(input_1811943439, fn_1811943411(Temporary3.value), result1_1811943462.tail), NTI1811941276);
          break BeforeRet;
        } while (false);

        return result_1811943441;

      }

  var result_1811943412 = null;

    Label1: do {
    } while (false);
    result_1811943412 = {body: HEX3Aanonymous_1811943438};

  return result_1811943412;

}

function HEX26_1811943228(x_1811943230, y_1811943231) {
  var result_1811943232 = [];

    result_1811943232 = new Array(chckRange(addInt((x_1811943230).length, (y_1811943231).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1811943230).length, (y_1811943231).length), 0, 2147483647) ; ++i) { result_1811943232[i] = []; }    Label1: do {
      var i_1811943251 = 0;
      var colontmp__1795162233 = 0;
      colontmp__1795162233 = subInt((x_1811943230).length, 1);
      var res_1795162234 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162234 <= colontmp__1795162233)) break Label3;
            i_1811943251 = res_1795162234;
            result_1811943232[chckIndx(i_1811943251, 0, (result_1811943232).length - 1)] = nimCopy(null, x_1811943230[chckIndx(i_1811943251, 0, (x_1811943230).length - 1)], NTI1811941270);
            res_1795162234 = addInt(res_1795162234, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1811943259 = 0;
      var colontmp__1795162237 = 0;
      colontmp__1795162237 = subInt((y_1811943231).length, 1);
      var res_1795162238 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_1795162238 <= colontmp__1795162237)) break Label6;
            i_1811943259 = res_1795162238;
            result_1811943232[chckIndx(addInt(i_1811943259, (x_1811943230).length), 0, (result_1811943232).length - 1)] = nimCopy(null, y_1811943231[chckIndx(i_1811943259, 0, (y_1811943231).length - 1)], NTI1811941270);
            res_1795162238 = addInt(res_1795162238, 1);
          }
      } while (false);
    } while (false);

  return result_1811943232;

}

function HEX26_1811943133(a_1811943138, b_1811943142) {

function succeedImpl_1811943157(inputInHEX60gensym63_1811943158, valueInHEX60gensym63_1811943159, tailInHEX60gensym63_1811943160) {
  var result_1811943162 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811943162 = nimCopy(result_1811943162, {kind: 0, value: nimCopy(null, valueInHEX60gensym63_1811943159, NTI1811942162), tail: nimCopy(null, tailInHEX60gensym63_1811943160, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym63_1811943158, NTI33554439), expected: []}, NTI1811941762);

  return result_1811943162;

}

function failImpl_1811943164(inputInHEX60gensym63_1811943165, expectedInHEX60gensym63_1811943166, tailInHEX60gensym63_1811943167) {
  var result_1811943169 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811943169 = nimCopy(result_1811943169, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym63_1811943166, NTI1811942168), tail: nimCopy(null, tailInHEX60gensym63_1811943167, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym63_1811943165, NTI33554439), value: []}, NTI1811941762);

  return result_1811943169;

}
      
function HEX3Aanonymous_1811943172(input_1811943173) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_1811943175 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811943176 = succeedImpl_1811943157;
          var fail_1811943177 = failImpl_1811943164;
          Label1: do {
            var tempHEX60gensym26_1811943202 = parse_1811943186(a_1811943138, input_1811943173);
            if ((tempHEX60gensym26_1811943202.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_1811943202;
            if (ConstSet33[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811943175 = nimCopy(result_1811943175, {kind: 1, fromInput: nimCopy(null, input_1811943173, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym26_1811943202.tail, NTI33554439), value: []}, NTI1811941762);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811943208 = nimCopy(null, tempHEX60gensym26_1811943202, NTI1811941762);
          Label3: do {
            var tempHEX60gensym28_1811943221 = parse_1811943186(b_1811943142, result1_1811943208.tail);
            if ((tempHEX60gensym28_1811943221.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_1811943221;
            if (ConstSet34[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811943175 = nimCopy(result_1811943175, {kind: 1, fromInput: nimCopy(null, input_1811943173, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym28_1811943221.tail, NTI33554439), value: []}, NTI1811941762);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811943227 = nimCopy(null, tempHEX60gensym28_1811943221, NTI1811941762);
          var Temporary5 = result1_1811943208;
          if (ConstSet35[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          var Temporary6 = result2_1811943227;
          if (ConstSet36[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1862270997)); }
          result_1811943175 = nimCopy(result_1811943175, succeed_1811943176(input_1811943173, HEX26_1811943228(Temporary5.value, Temporary6.value), result2_1811943227.tail), NTI1811941762);
          break BeforeRet;
        } while (false);

        return result_1811943175;

      }

  var result_1811943146 = null;

    Label1: do {
    } while (false);
    result_1811943146 = {body: HEX3Aanonymous_1811943172};

  return result_1811943146;

}

function map_1811942888(a_1811942891, fn_1811942893) {

function succeedImpl_1811942905(inputInHEX60gensym59_1811942906, valueInHEX60gensym59_1811942907, tailInHEX60gensym59_1811942908) {
  var result_1811942910 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942910 = nimCopy(result_1811942910, {kind: 0, value: nimCopy(null, valueInHEX60gensym59_1811942907, NTI1811941871), tail: nimCopy(null, tailInHEX60gensym59_1811942908, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym59_1811942906, NTI33554439), expected: []}, NTI1811941762);

  return result_1811942910;

}

function failImpl_1811942912(inputInHEX60gensym59_1811942913, expectedInHEX60gensym59_1811942914, tailInHEX60gensym59_1811942915) {
  var result_1811942917 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942917 = nimCopy(result_1811942917, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym59_1811942914, NTI1811941922), tail: nimCopy(null, tailInHEX60gensym59_1811942915, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym59_1811942913, NTI33554439), value: []}, NTI1811941762);

  return result_1811942917;

}
      
function HEX3Aanonymous_1811942920(input_1811942921) {
            var Temporary2;
          var Temporary3;

        var result_1811942923 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811942924 = succeedImpl_1811942905;
          var fail_1811942925 = failImpl_1811942912;
          Label1: do {
            var tempHEX60gensym24_1811942938 = parse_1811942654(a_1811942891, input_1811942921);
            if ((tempHEX60gensym24_1811942938.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811942938;
            if (ConstSet37[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811942923 = nimCopy(result_1811942923, {kind: 1, fromInput: nimCopy(null, input_1811942921, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811942938.tail, NTI33554439), value: []}, NTI1811941762);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811942944 = nimCopy(null, tempHEX60gensym24_1811942938, NTI1811941276);
          var Temporary3 = result1_1811942944;
          if (ConstSet38[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811942923 = nimCopy(result_1811942923, succeed_1811942924(input_1811942921, fn_1811942893(Temporary3.value), result1_1811942944.tail), NTI1811941762);
          break BeforeRet;
        } while (false);

        return result_1811942923;

      }

  var result_1811942894 = null;

    Label1: do {
    } while (false);
    result_1811942894 = {body: HEX3Aanonymous_1811942920};

  return result_1811942894;

}

function nop_1811942204() {

function succeedImpl_1811942217(inputInHEX60gensym49_1811942218, valueInHEX60gensym49_1811942219, tailInHEX60gensym49_1811942220) {
  var result_1811942222 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942222 = nimCopy(result_1811942222, {kind: 0, value: nimCopy(null, valueInHEX60gensym49_1811942219, NTI1811941330), tail: nimCopy(null, tailInHEX60gensym49_1811942220, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym49_1811942218, NTI33554439), expected: []}, NTI1811941276);

  return result_1811942222;

}

function failImpl_1811942236(inputInHEX60gensym49_1811942237, expectedInHEX60gensym49_1811942238, tailInHEX60gensym49_1811942239) {
  var result_1811942241 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942241 = nimCopy(result_1811942241, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym49_1811942238, NTI1811941357), tail: nimCopy(null, tailInHEX60gensym49_1811942239, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym49_1811942237, NTI33554439), value: []}, NTI1811941276);

  return result_1811942241;

}
      
function HEX3Aanonymous_1811942244(input_1811942245) {
        var result_1811942247 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_1811942248 = succeedImpl_1811942217;
          var fail_1811942249 = failImpl_1811942236;
          result_1811942247 = nimCopy(result_1811942247, succeed_1811942248(input_1811942245, [], input_1811942245), NTI1811941276);

        return result_1811942247;

      }

  var result_1811942206 = null;

    Label1: do {
    } while (false);
    result_1811942206 = {body: HEX3Aanonymous_1811942244};

  return result_1811942206;

}

function parse_1811942404(p_1811942406, input_1811942407) {
  var result_1811942408 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811942406.body == null)) {
    result_1811942408 = nimCopy(result_1811942408, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811942407, NTI33554439), fromInput: nimCopy(null, input_1811942407, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
    break BeforeRet;
    }
    
    result_1811942408 = nimCopy(result_1811942408, p_1811942406.body(input_1811942407), NTI1811941261);
  } while (false);

  return result_1811942408;

}

function map_1811942358(a_1811942361, fn_1811942363) {

function succeedImpl_1811942375(inputInHEX60gensym51_1811942376, valueInHEX60gensym51_1811942377, tailInHEX60gensym51_1811942378) {
  var result_1811942380 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942380 = nimCopy(result_1811942380, {kind: 0, value: nimCopy(null, valueInHEX60gensym51_1811942377, NTI1811941426), tail: nimCopy(null, tailInHEX60gensym51_1811942378, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym51_1811942376, NTI33554439), expected: []}, NTI1811941276);

  return result_1811942380;

}

function failImpl_1811942382(inputInHEX60gensym51_1811942383, expectedInHEX60gensym51_1811942384, tailInHEX60gensym51_1811942385) {
  var result_1811942387 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942387 = nimCopy(result_1811942387, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym51_1811942384, NTI1811941477), tail: nimCopy(null, tailInHEX60gensym51_1811942385, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym51_1811942383, NTI33554439), value: []}, NTI1811941276);

  return result_1811942387;

}
      
function HEX3Aanonymous_1811942390(input_1811942391) {
            var Temporary2;
          var Temporary3;

        var result_1811942393 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811942394 = succeedImpl_1811942375;
          var fail_1811942395 = failImpl_1811942382;
          Label1: do {
            var tempHEX60gensym24_1811942432 = parse_1811942404(a_1811942361, input_1811942391);
            if ((tempHEX60gensym24_1811942432.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811942432;
            if (ConstSet39[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811942393 = nimCopy(result_1811942393, {kind: 1, fromInput: nimCopy(null, input_1811942391, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811942432.tail, NTI33554439), value: []}, NTI1811941276);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811942438 = nimCopy(null, tempHEX60gensym24_1811942432, NTI1811941261);
          var Temporary3 = result1_1811942438;
          if (ConstSet40[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811942393 = nimCopy(result_1811942393, succeed_1811942394(input_1811942391, fn_1811942363(Temporary3.value), result1_1811942438.tail), NTI1811941276);
          break BeforeRet;
        } while (false);

        return result_1811942393;

      }

  var result_1811942364 = null;

    Label1: do {
    } while (false);
    result_1811942364 = {body: HEX3Aanonymous_1811942390};

  return result_1811942364;

}

function HEX2A_1811942196(a_1811942198, n_1811942199) {
    var Temporary1;
      
function HEX3Aanonymous_1811942312(x_1811942341) {
        var result_1811942344 = [];

          result_1811942344 = nimCopy(null, [nimCopy(null, x_1811942341, NTI1845493764)], NTI1811941426);

        return result_1811942344;

      }

function succeedImpl_1811942449(inputInHEX60gensym52_1811942450, valueInHEX60gensym52_1811942451, tailInHEX60gensym52_1811942452) {
  var result_1811942454 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942454 = nimCopy(result_1811942454, {kind: 0, value: nimCopy(null, valueInHEX60gensym52_1811942451, NTI1811941536), tail: nimCopy(null, tailInHEX60gensym52_1811942452, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym52_1811942450, NTI33554439), expected: []}, NTI1811941276);

  return result_1811942454;

}

function failImpl_1811942456(inputInHEX60gensym52_1811942457, expectedInHEX60gensym52_1811942458, tailInHEX60gensym52_1811942459) {
  var result_1811942461 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942461 = nimCopy(result_1811942461, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym52_1811942458, NTI1811941542), tail: nimCopy(null, tailInHEX60gensym52_1811942459, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym52_1811942457, NTI33554439), value: []}, NTI1811941276);

  return result_1811942461;

}
        
function HEX3Aanonymous_1811942464(input_1811942465) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_1811942467 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: do {
            var succeed_1811942468 = succeedImpl_1811942449;
            var fail_1811942469 = failImpl_1811942456;
            Label1: do {
              var tempHEX60gensym38_1811942482 = parse_1811942404(a_1811942198, input_1811942465);
              if ((tempHEX60gensym38_1811942482.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_1811942482;
              if (ConstSet41[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
              result_1811942467 = nimCopy(result_1811942467, {kind: 1, fromInput: nimCopy(null, input_1811942465, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym38_1811942482.tail, NTI33554439), value: []}, NTI1811941276);
              break BeforeRet;
              }
              
            } while (false);
            var result1_1811942488 = nimCopy(null, tempHEX60gensym38_1811942482, NTI1811941261);
            var Temporary3 = result1_1811942488;
            if (ConstSet42[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
            var outputs_1811942493 = [nimCopy(null, Temporary3.value, NTI1845493764)];
            var lastTail_1811942494 = nimCopy(null, result1_1811942488.tail, NTI33554439);
            Label4: do {
              var i_1811942500 = 0;
              var res_1795162246 = 2;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_1795162246 <= n_1811942199)) break Label6;
                    i_1811942500 = res_1795162246;
                    Label7: do {
                      var tempHEX60gensym40_1811942513 = parse_1811942404(a_1811942198, result1_1811942488.tail);
                      if ((tempHEX60gensym40_1811942513.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_1811942513;
                      if (ConstSet43[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1862270997)); }
                      result_1811942467 = nimCopy(result_1811942467, {kind: 1, fromInput: nimCopy(null, input_1811942465, NTI33554439), expected: nimCopy(null, Temporary8.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym40_1811942513.tail, NTI33554439), value: []}, NTI1811941276);
                      break BeforeRet;
                      }
                      
                    } while (false);
                    result1_1811942488 = nimCopy(result1_1811942488, tempHEX60gensym40_1811942513, NTI1811941261);
                    if (eqStrings(result1_1811942488.tail, lastTail_1811942494)) {
                    break Label4;
                    }
                    
                    lastTail_1811942494 = nimCopy(null, result1_1811942488.tail, NTI33554439);
                    var Temporary9 = result1_1811942488;
                    if (ConstSet44[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1862270997)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI1845493764);
                    outputs_1811942493.push(Temporary10);;
                    res_1795162246 = addInt(res_1795162246, 1);
                  }
              } while (false);
            } while (false);
            result_1811942467 = nimCopy(result_1811942467, succeed_1811942468(input_1811942465, outputs_1811942493, result1_1811942488.tail), NTI1811941276);
          } while (false);

          return result_1811942467;

        }

  var result_1811942203 = null;

  BeforeRet: do {
    switch (n_1811942199) {
    case 0:
      result_1811942203 = nop_1811942204();
      break BeforeRet;
      break;
    case 1:
      result_1811942203 = map_1811942358(a_1811942198, HEX3Aanonymous_1811942312);
      break BeforeRet;
      break;
    default: 
      Label2: do {
      } while (false);
      Temporary1 = {body: HEX3Aanonymous_1811942464};
      break;
    }
    result_1811942203 = Temporary1;
  } while (false);

  return result_1811942203;

}

function nop_1811942725() {

function succeedImpl_1811942738(inputInHEX60gensym57_1811942739, valueInHEX60gensym57_1811942740, tailInHEX60gensym57_1811942741) {
  var result_1811942743 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942743 = nimCopy(result_1811942743, {kind: 0, value: nimCopy(null, valueInHEX60gensym57_1811942740, NTI1811941769), tail: nimCopy(null, tailInHEX60gensym57_1811942741, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym57_1811942739, NTI33554439), expected: []}, NTI1811941762);

  return result_1811942743;

}

function failImpl_1811942766(inputInHEX60gensym57_1811942767, expectedInHEX60gensym57_1811942768, tailInHEX60gensym57_1811942769) {
  var result_1811942771 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942771 = nimCopy(result_1811942771, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym57_1811942768, NTI1811941802), tail: nimCopy(null, tailInHEX60gensym57_1811942769, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym57_1811942767, NTI33554439), value: []}, NTI1811941762);

  return result_1811942771;

}
      
function HEX3Aanonymous_1811942774(input_1811942775) {
        var result_1811942777 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_1811942778 = succeedImpl_1811942738;
          var fail_1811942779 = failImpl_1811942766;
          result_1811942777 = nimCopy(result_1811942777, succeed_1811942778(input_1811942775, [], input_1811942775), NTI1811941762);

        return result_1811942777;

      }

  var result_1811942727 = null;

    Label1: do {
    } while (false);
    result_1811942727 = {body: HEX3Aanonymous_1811942774};

  return result_1811942727;

}

function HEX2A_1811942712(a_1811942714, n_1811942715) {
    var Temporary1;
      
function HEX3Aanonymous_1811942842(x_1811942871) {
        var result_1811942874 = [];

          result_1811942874 = nimCopy(null, [nimCopy(null, x_1811942871, NTI1811941270)], NTI1811941871);

        return result_1811942874;

      }

function succeedImpl_1811942955(inputInHEX60gensym60_1811942956, valueInHEX60gensym60_1811942957, tailInHEX60gensym60_1811942958) {
  var result_1811942960 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942960 = nimCopy(result_1811942960, {kind: 0, value: nimCopy(null, valueInHEX60gensym60_1811942957, NTI1811941962), tail: nimCopy(null, tailInHEX60gensym60_1811942958, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym60_1811942956, NTI33554439), expected: []}, NTI1811941762);

  return result_1811942960;

}

function failImpl_1811942962(inputInHEX60gensym60_1811942963, expectedInHEX60gensym60_1811942964, tailInHEX60gensym60_1811942965) {
  var result_1811942967 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942967 = nimCopy(result_1811942967, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym60_1811942964, NTI1811941968), tail: nimCopy(null, tailInHEX60gensym60_1811942965, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym60_1811942963, NTI33554439), value: []}, NTI1811941762);

  return result_1811942967;

}
        
function HEX3Aanonymous_1811942970(input_1811942971) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_1811942973 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: do {
            var succeed_1811942974 = succeedImpl_1811942955;
            var fail_1811942975 = failImpl_1811942962;
            Label1: do {
              var tempHEX60gensym38_1811942988 = parse_1811942654(a_1811942714, input_1811942971);
              if ((tempHEX60gensym38_1811942988.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_1811942988;
              if (ConstSet45[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
              result_1811942973 = nimCopy(result_1811942973, {kind: 1, fromInput: nimCopy(null, input_1811942971, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym38_1811942988.tail, NTI33554439), value: []}, NTI1811941762);
              break BeforeRet;
              }
              
            } while (false);
            var result1_1811942994 = nimCopy(null, tempHEX60gensym38_1811942988, NTI1811941276);
            var Temporary3 = result1_1811942994;
            if (ConstSet46[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
            var outputs_1811942999 = [nimCopy(null, Temporary3.value, NTI1811941270)];
            var lastTail_1811943000 = nimCopy(null, result1_1811942994.tail, NTI33554439);
            Label4: do {
              var i_1811943006 = 0;
              var res_1795162255 = 2;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_1795162255 <= n_1811942715)) break Label6;
                    i_1811943006 = res_1795162255;
                    Label7: do {
                      var tempHEX60gensym40_1811943019 = parse_1811942654(a_1811942714, result1_1811942994.tail);
                      if ((tempHEX60gensym40_1811943019.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_1811943019;
                      if (ConstSet47[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1862270997)); }
                      result_1811942973 = nimCopy(result_1811942973, {kind: 1, fromInput: nimCopy(null, input_1811942971, NTI33554439), expected: nimCopy(null, Temporary8.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym40_1811943019.tail, NTI33554439), value: []}, NTI1811941762);
                      break BeforeRet;
                      }
                      
                    } while (false);
                    result1_1811942994 = nimCopy(result1_1811942994, tempHEX60gensym40_1811943019, NTI1811941276);
                    if (eqStrings(result1_1811942994.tail, lastTail_1811943000)) {
                    break Label4;
                    }
                    
                    lastTail_1811943000 = nimCopy(null, result1_1811942994.tail, NTI33554439);
                    var Temporary9 = result1_1811942994;
                    if (ConstSet48[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1862270997)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI1811941270);
                    outputs_1811942999.push(Temporary10);;
                    res_1795162255 = addInt(res_1795162255, 1);
                  }
              } while (false);
            } while (false);
            result_1811942973 = nimCopy(result_1811942973, succeed_1811942974(input_1811942971, outputs_1811942999, result1_1811942994.tail), NTI1811941762);
          } while (false);

          return result_1811942973;

        }

  var result_1811942724 = null;

  BeforeRet: do {
    switch (n_1811942715) {
    case 0:
      result_1811942724 = nop_1811942725();
      break BeforeRet;
      break;
    case 1:
      result_1811942724 = map_1811942888(a_1811942714, HEX3Aanonymous_1811942842);
      break BeforeRet;
      break;
    default: 
      Label2: do {
      } while (false);
      Temporary1 = {body: HEX3Aanonymous_1811942970};
      break;
    }
    result_1811942724 = Temporary1;
  } while (false);

  return result_1811942724;

}

function HEX7C_1811942610(a_1811942612, b_1811942613) {

function succeedImpl_1811942625(inputInHEX60gensym56_1811942626, valueInHEX60gensym56_1811942627, tailInHEX60gensym56_1811942628) {
  var result_1811942630 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942630 = nimCopy(result_1811942630, {kind: 0, value: nimCopy(null, valueInHEX60gensym56_1811942627, NTI1811941270), tail: nimCopy(null, tailInHEX60gensym56_1811942628, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym56_1811942626, NTI33554439), expected: []}, NTI1811941276);

  return result_1811942630;

}

function failImpl_1811942632(inputInHEX60gensym56_1811942633, expectedInHEX60gensym56_1811942634, tailInHEX60gensym56_1811942635) {
  var result_1811942637 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811942637 = nimCopy(result_1811942637, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym56_1811942634, NTI1811941706), tail: nimCopy(null, tailInHEX60gensym56_1811942635, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym56_1811942633, NTI33554439), value: []}, NTI1811941276);

  return result_1811942637;

}
      
function HEX3Aanonymous_1811942640(input_1811942641) {
          var Temporary1;
          var Temporary2;

        var result_1811942643 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811942644 = succeedImpl_1811942625;
          var fail_1811942645 = failImpl_1811942632;
          var result1_1811942670 = parse_1811942654(a_1811942612, input_1811942641);
          if ((result1_1811942670.kind == 0)) {
          result_1811942643 = nimCopy(result_1811942643, result1_1811942670, NTI1811941276);
          break BeforeRet;
          }
          
          var result2_1811942687 = parse_1811942654(b_1811942613, input_1811942641);
          if ((result2_1811942687.kind == 0)) {
          result_1811942643 = nimCopy(result_1811942643, result2_1811942687, NTI1811941276);
          break BeforeRet;
          }
          
          var Temporary1 = result1_1811942670;
          if (ConstSet49[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
          var Temporary2 = result2_1811942687;
          if (ConstSet50[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
          result_1811942643 = nimCopy(result_1811942643, fail_1811942645(input_1811942641, HEX26_1845493855(Temporary1.expected, Temporary2.expected), input_1811942641), NTI1811941276);
        } while (false);

        return result_1811942643;

      }

  var result_1811942614 = null;

    Label1: do {
    } while (false);
    result_1811942614 = {body: HEX3Aanonymous_1811942640};

  return result_1811942614;

}

function newSeq_1845494075(len_1845494077) {
  var result_1845494078 = [];

    result_1845494078 = new Array(len_1845494077); for (var i = 0 ; i < len_1845494077 ; ++i) { result_1845494078[i] = ({rows: [], baseline: 0, width: 0, flag: 0}); }
  return result_1845494078;

}

function HEX26_1811943322(x_1811943324, y_1811943325) {
  var result_1811943326 = [];

    result_1811943326 = new Array(chckRange(addInt((x_1811943324).length, (y_1811943325).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1811943324).length, (y_1811943325).length), 0, 2147483647) ; ++i) { result_1811943326[i] = ({rows: [], baseline: 0, width: 0, flag: 0}); }    Label1: do {
      var i_1811943344 = 0;
      var colontmp__1795162265 = 0;
      colontmp__1795162265 = subInt((x_1811943324).length, 1);
      var res_1795162266 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162266 <= colontmp__1795162265)) break Label3;
            i_1811943344 = res_1795162266;
            result_1811943326[chckIndx(i_1811943344, 0, (result_1811943326).length - 1)] = nimCopy(result_1811943326[chckIndx(i_1811943344, 0, (result_1811943326).length - 1)], x_1811943324[chckIndx(i_1811943344, 0, (x_1811943324).length - 1)], NTI1845493764);
            res_1795162266 = addInt(res_1795162266, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1811943352 = 0;
      var colontmp__1795162269 = 0;
      colontmp__1795162269 = subInt((y_1811943325).length, 1);
      var res_1795162270 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_1795162270 <= colontmp__1795162269)) break Label6;
            i_1811943352 = res_1795162270;
            result_1811943326[chckIndx(addInt(i_1811943352, (x_1811943324).length), 0, (result_1811943326).length - 1)] = nimCopy(result_1811943326[chckIndx(addInt(i_1811943352, (x_1811943324).length), 0, (result_1811943326).length - 1)], y_1811943325[chckIndx(i_1811943352, 0, (y_1811943325).length - 1)], NTI1845493764);
            res_1795162270 = addInt(res_1795162270, 1);
          }
      } while (false);
    } while (false);

  return result_1811943326;

}

function height_1845493801(rect_1845493802) {
  var result_1845493803 = 0;

    result_1845493803 = chckRange((rect_1845493802.rows).length, 0, 2147483647);

  return result_1845493803;

}

function isEmpty_1845493807(rect_1845493808) {
  var result_1845493809 = false;

    result_1845493809 = (height_1845493801(rect_1845493808) == 0);

  return result_1845493809;

}

function HEX3DHEX3D_1845494155(x_1845494157, y_1845494158) {
  var result_1845494159 = false;

  BeforeRet: do {
    var sameObject_1845494166 = false;
    sameObject_1845494166 = x_1845494157 === y_1845494158
    if (sameObject_1845494166) {
    result_1845494159 = true;
    break BeforeRet;
    }
    
    if (!(((x_1845494157).length == (y_1845494158).length))) {
    result_1845494159 = false;
    break BeforeRet;
    }
    
    Label1: do {
      var i_1845494180 = 0;
      var colontmp__1795162325 = 0;
      colontmp__1795162325 = subInt((x_1845494157).length, 1);
      var res_1795162326 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162326 <= colontmp__1795162325)) break Label3;
            i_1845494180 = res_1795162326;
            if (!(eqStrings(x_1845494157[chckIndx(i_1845494180, 0, (x_1845494157).length - 1)], y_1845494158[chckIndx(i_1845494180, 0, (y_1845494158).length - 1)]))) {
            result_1845494159 = false;
            break BeforeRet;
            }
            
            res_1795162326 = addInt(res_1795162326, 1);
          }
      } while (false);
    } while (false);
    result_1845494159 = true;
    break BeforeRet;
  } while (false);

  return result_1845494159;

}

function HEX3DHEX3D_1845494145(x_1845494147, y_1845494148) {
  var result_1845494149 = false;

  BeforeRet: do {
    if (!(HEX3DHEX3D_1845494155(x_1845494147.rows, y_1845494148.rows))) {
    result_1845494149 = false;
    break BeforeRet;
    }
    
    if (!((x_1845494147.baseline == y_1845494148.baseline))) {
    result_1845494149 = false;
    break BeforeRet;
    }
    
    if (!((x_1845494147.width == y_1845494148.width))) {
    result_1845494149 = false;
    break BeforeRet;
    }
    
    if (!((x_1845494147.flag == y_1845494148.flag))) {
    result_1845494149 = false;
    break BeforeRet;
    }
    
    result_1845494149 = true;
    break BeforeRet;
  } while (false);

  return result_1845494149;

}

function HEX3DHEX3D_1845494119(x_1845494121, y_1845494122) {
  var result_1845494123 = false;

  BeforeRet: do {
    var sameObject_1845494130 = false;
    sameObject_1845494130 = x_1845494121 === y_1845494122
    if (sameObject_1845494130) {
    result_1845494123 = true;
    break BeforeRet;
    }
    
    if (!(((x_1845494121).length == (y_1845494122).length))) {
    result_1845494123 = false;
    break BeforeRet;
    }
    
    Label1: do {
      var i_1845494144 = 0;
      var colontmp__1795162321 = 0;
      colontmp__1795162321 = subInt((x_1845494121).length, 1);
      var res_1795162322 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162322 <= colontmp__1795162321)) break Label3;
            i_1845494144 = res_1795162322;
            if (!(HEX3DHEX3D_1845494145(x_1845494121[chckIndx(i_1845494144, 0, (x_1845494121).length - 1)], y_1845494122[chckIndx(i_1845494144, 0, (y_1845494122).length - 1)]))) {
            result_1845494123 = false;
            break BeforeRet;
            }
            
            res_1795162322 = addInt(res_1795162322, 1);
          }
      } while (false);
    } while (false);
    result_1845494123 = true;
    break BeforeRet;
  } while (false);

  return result_1845494123;

}

function extendRight_1845493937(rect_1845493938) {
    Label1: do {
      var row_1845493942 = null;
      var row_1845493942_Idx = 0;
      var i_1795162330 = 0;
      var L_1795162331 = (rect_1845493938.rows).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162330 < L_1795162331)) break Label3;
            row_1845493942 = rect_1845493938.rows; row_1845493942_Idx = chckIndx(i_1795162330, 0, (rect_1845493938.rows).length - 1);
            row_1845493942[row_1845493942_Idx].push.apply(row_1845493942[row_1845493942_Idx], makeNimstrLit(" "));;
            i_1795162330 = addInt(i_1795162330, 1);
            if (!(((rect_1845493938.rows).length == L_1795162331))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(249, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    rect_1845493938.width = addInt(rect_1845493938.width, 1);

  
}

function extendLeft_1845493901(rect_1845493902) {
    Label1: do {
      var row_1845493923 = null;
      var row_1845493923_Idx = 0;
      var i_1795162334 = 0;
      var L_1795162335 = (rect_1845493902.rows).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162334 < L_1795162335)) break Label3;
            row_1845493923 = rect_1845493902.rows; row_1845493923_Idx = chckIndx(i_1795162334, 0, (rect_1845493902.rows).length - 1);
            row_1845493923[row_1845493923_Idx] = nimCopy(null, (makeNimstrLit(" ") || []).concat(row_1845493923[row_1845493923_Idx] || []), NTI33554439);
            i_1795162334 = addInt(i_1795162334, 1);
            if (!(((rect_1845493902.rows).length == L_1795162335))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(249, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    rect_1845493902.width = addInt(rect_1845493902.width, 1);

  
}

function max_1845494327(x_1845494329) {
  var result_1845494330 = 0;

    result_1845494330 = x_1845494329[chckIndx(0, 0, (x_1845494329).length - 1)];
    Label1: do {
      var i_1845494338 = 0;
      var colontmp__1795162338 = 0;
      colontmp__1795162338 = (x_1845494329).length - 1;
      var res_1795162339 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162339 <= colontmp__1795162338)) break Label3;
            i_1845494338 = res_1795162339;
            if ((result_1845494330 < x_1845494329[chckIndx(i_1845494338, 0, (x_1845494329).length - 1)])) {
            result_1845494330 = x_1845494329[chckIndx(i_1845494338, 0, (x_1845494329).length - 1)];
            }
            
            res_1795162339 = addInt(res_1795162339, 1);
          }
      } while (false);
    } while (false);

  return result_1845494330;

}

function newSeq_1845494301(len_1845494303) {
  var result_1845494304 = [];

    result_1845494304 = new Array(len_1845494303); for (var i = 0 ; i < len_1845494303 ; ++i) { result_1845494304[i] = 0; }
  return result_1845494304;

}

function repeat_1845493842(x_1845493844, n_1845493845) {
  var result_1845493846 = [];

    result_1845493846 = nimCopy(null, newSeq_452985301(n_1845493845), NTI452985127);
    Label1: do {
      var i_1845493854 = 0;
      var colontmp__1795162342 = 0;
      colontmp__1795162342 = n_1845493845;
      var i_1795162343 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162343 < colontmp__1795162342)) break Label3;
            i_1845493854 = i_1795162343;
            result_1845493846[chckIndx(i_1845493854, 0, (result_1845493846).length - 1)] = nimCopy(null, x_1845493844, NTI33554439);
            i_1795162343 = addInt(i_1795162343, 1);
          }
      } while (false);
    } while (false);

  return result_1845493846;

}

function nsuRepeatChar(c_654312443, count_654312444) {
  var result_654312445 = [];

    result_654312445 = nimCopy(null, mnewString(count_654312444), NTI33554439);
    Label1: do {
      var i_654312450 = 0;
      var colontmp__1795162346 = 0;
      colontmp__1795162346 = subInt(count_654312444, 1);
      var res_1795162347 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162347 <= colontmp__1795162346)) break Label3;
            i_654312450 = res_1795162347;
            result_654312445[chckIndx(i_654312450, 0, (result_654312445).length - 1)] = c_654312443;
            res_1795162347 = addInt(res_1795162347, 1);
          }
      } while (false);
    } while (false);

  return result_654312445;

}

function extendUp_1845493838(rect_1845493839, num_1845493840) {
  var result_1845493841 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_1845493841.rows = nimCopy(null, HEX26_1845493855(repeat_1845493842(nsuRepeatChar(32, rect_1845493839.width), num_1845493840), rect_1845493839.rows), NTI1845493817);
    result_1845493841.baseline = addInt(rect_1845493839.baseline, num_1845493840);
    result_1845493841.width = rect_1845493839.width;

  return result_1845493841;

}

function max_1845494404(x_1845494406) {
  var result_1845494407 = 0;

    result_1845494407 = x_1845494406[chckIndx(0, 0, (x_1845494406).length - 1)];
    Label1: do {
      var i_1845494415 = 0;
      var colontmp__1795162350 = 0;
      colontmp__1795162350 = (x_1845494406).length - 1;
      var res_1795162351 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162351 <= colontmp__1795162350)) break Label3;
            i_1845494415 = res_1795162351;
            if ((result_1845494407 < x_1845494406[chckIndx(i_1845494415, 0, (x_1845494406).length - 1)])) {
            result_1845494407 = x_1845494406[chckIndx(i_1845494415, 0, (x_1845494406).length - 1)];
            }
            
            res_1795162351 = addInt(res_1795162351, 1);
          }
      } while (false);
    } while (false);

  return result_1845494407;

}

function newSeq_1845494378(len_1845494380) {
  var result_1845494381 = [];

    result_1845494381 = new Array(len_1845494380); for (var i = 0 ; i < len_1845494380 ; ++i) { result_1845494381[i] = 0; }
  return result_1845494381;

}

function extendDown_1845493889(rect_1845493890, num_1845493891) {
  var result_1845493892 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_1845493892.rows = nimCopy(null, HEX26_1845493855(rect_1845493890.rows, repeat_1845493842(nsuRepeatChar(32, rect_1845493890.width), num_1845493891)), NTI1845493817);
    result_1845493892.baseline = rect_1845493890.baseline;
    result_1845493892.width = rect_1845493890.width;

  return result_1845493892;

}

function nsuJoinSep(a_654312849, sep_654312850) {
  var result_654312851 = [];

    if ((0 < (a_654312849).length)) {
    var L_654312858 = mulInt((sep_654312850).length, subInt((a_654312849).length, 1));
    Label1: do {
      var i_654312866 = 0;
      var colontmp__1795162354 = 0;
      colontmp__1795162354 = (a_654312849).length - 1;
      var res_1795162355 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162355 <= colontmp__1795162354)) break Label3;
            i_654312866 = res_1795162355;
            L_654312858 = addInt(L_654312858, (a_654312849[chckIndx(i_654312866, 0, (a_654312849).length - 1)]).length);
            res_1795162355 = addInt(res_1795162355, 1);
          }
      } while (false);
    } while (false);
    result_654312851 = nimCopy(null, mnewString(0), NTI33554439);
    result_654312851.push.apply(result_654312851, a_654312849[chckIndx(0, 0, (a_654312849).length - 1)]);;
    Label4: do {
      var i_654312878 = 0;
      var colontmp__1795162358 = 0;
      colontmp__1795162358 = (a_654312849).length - 1;
      var res_1795162359 = 1;
      Label5: do {
          Label6: while (true) {
          if (!(res_1795162359 <= colontmp__1795162358)) break Label6;
            i_654312878 = res_1795162359;
            result_654312851.push.apply(result_654312851, sep_654312850);;
            result_654312851.push.apply(result_654312851, a_654312849[chckIndx(i_654312878, 0, (a_654312849).length - 1)]);;
            res_1795162359 = addInt(res_1795162359, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      result_654312851 = nimCopy(null, [], NTI33554439);
    }
    

  return result_654312851;

}

function sum_1845494544(x_1845494546) {
  var result_1845494547 = 0;

    Label1: do {
      var i_1845494560 = 0;
      var i_1795162363 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162363 < (x_1845494546).length)) break Label3;
            i_1845494560 = x_1845494546[i_1795162363];
            result_1845494547 = (result_1845494547 + i_1845494560);
            i_1795162363 += 1;
          }
      } while (false);
    } while (false);

  return result_1845494547;

}

function join_1845493947(rects_1845493948) {
                var Temporary11;
                var Temporary12;
                var Temporary13;

  var result_1845493949 = ({rows: [], baseline: 0, width: 0, flag: 0});

  BeforeRet: do {
    Label1: do {
      var iHEX60gensym8_1845494070 = 0;
      var resultHEX60gensym8_1845494083 = newSeq_1845494075(chckRange((rects_1845493948).length, 0, 2147483647));
      Label2: do {
        var itHEX60gensym8_1845494087 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_1795162275 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(i_1795162275 < (rects_1845493948).length)) break Label4;
              itHEX60gensym8_1845494087 = rects_1845493948[chckIndx(i_1795162275, 0, (rects_1845493948).length - 1)];
              resultHEX60gensym8_1845494083[chckIndx(iHEX60gensym8_1845494070, 0, (resultHEX60gensym8_1845494083).length - 1)] = nimCopy(resultHEX60gensym8_1845494083[chckIndx(iHEX60gensym8_1845494070, 0, (resultHEX60gensym8_1845494083).length - 1)], itHEX60gensym8_1845494087, NTI1845493764);
              iHEX60gensym8_1845494070 = addInt(iHEX60gensym8_1845494070, 1);
              i_1795162275 = addInt(i_1795162275, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    var rects_1845494092 = [nimCopy(null, resultHEX60gensym8_1845494083, NTI1845493951)];
    var posHEX60gensym11_1845494096 = 0;
    Label5: do {
      var iHEX60gensym11_1845494105 = 0;
      var colontmp__1795162278 = 0;
      colontmp__1795162278 = (rects_1845494092[0]).length;
      var i_1795162279 = 0;
      Label6: do {
          Label7: while (true) {
          if (!(i_1795162279 < colontmp__1795162278)) break Label7;
            iHEX60gensym11_1845494105 = i_1795162279;
            var it_1845494106 = nimCopy(null, rects_1845494092[0][chckIndx(iHEX60gensym11_1845494105, 0, (rects_1845494092[0]).length - 1)], NTI1845493764);
            if (!(isEmpty_1845493807(it_1845494106))) {
            if (!((posHEX60gensym11_1845494096 == iHEX60gensym11_1845494105))) {
            rects_1845494092[0][chckIndx(posHEX60gensym11_1845494096, 0, (rects_1845494092[0]).length - 1)] = nimCopy(rects_1845494092[0][chckIndx(posHEX60gensym11_1845494096, 0, (rects_1845494092[0]).length - 1)], rects_1845494092[0][chckIndx(iHEX60gensym11_1845494105, 0, (rects_1845494092[0]).length - 1)], NTI1845493764);
            }
            
            posHEX60gensym11_1845494096 = addInt(posHEX60gensym11_1845494096, 1);
            }
            
            i_1795162279 = addInt(i_1795162279, 1);
          }
      } while (false);
    } while (false);
    if (rects_1845494092[0].length < chckRange(posHEX60gensym11_1845494096, 0, 2147483647)) { for (var i = rects_1845494092[0].length ; i < chckRange(posHEX60gensym11_1845494096, 0, 2147483647) ; ++i) rects_1845494092[0].push(({rows: [], baseline: 0, width: 0, flag: 0})); }
               else { rects_1845494092[0].length = chckRange(posHEX60gensym11_1845494096, 0, 2147483647); };
    if (HEX3DHEX3D_1845494119(rects_1845494092[0], [])) {
    break BeforeRet;
    }
    
    if (((rects_1845494092[0]).length == 1)) {
    result_1845493949 = nimCopy(result_1845493949, rects_1845494092[0][chckIndx(0, 0, (rects_1845494092[0]).length - 1)], NTI1845493764);
    break BeforeRet;
    }
    
    Label8: do {
      var i_1845494229 = 0;
      var rect_1845494230 = null;
      var i_1795162283 = 0;
      var L_1795162284 = (rects_1845494092[0]).length;
      Label9: do {
          Label10: while (true) {
          if (!(i_1795162283 < L_1795162284)) break Label10;
            i_1845494229 = i_1795162283;
            rect_1845494230 = rects_1845494092[0][chckIndx(i_1795162283, 0, (rects_1845494092[0]).length - 1)];
            switch (rect_1845494230.flag) {
            case 8:
              if (!((i_1845494229 == (rects_1845494092[0]).length - 1))) {
              extendRight_1845493937(rect_1845494230);
              }
              
              break;
            case 2:
            case 3:
              if (!((i_1845494229 == (rects_1845494092[0]).length - 1))) {
              extendRight_1845493937(rect_1845494230);
              }
              
                if (!!((i_1845494229 == 0))) Temporary11 = false; else {                  Temporary11 = !((ConstSet51[rects_1845494092[0][chckIndx(subInt(i_1845494229, 1), 0, (rects_1845494092[0]).length - 1)].flag] != undefined));                }              if (Temporary11) {
              extendLeft_1845493901(rect_1845494230);
              }
              
              break;
            case 4:
                if (!!((i_1845494229 == (rects_1845494092[0]).length - 1))) Temporary12 = false; else {                  Temporary12 = (ConstSet52[rects_1845494092[0][chckIndx(addInt(i_1845494229, 1), 0, (rects_1845494092[0]).length - 1)].flag] != undefined);                }              if (Temporary12) {
              extendRight_1845493937(rect_1845494230);
              }
              
                if (!!((i_1845494229 == 0))) Temporary13 = false; else {                  Temporary13 = (ConstSet53[rects_1845494092[0][chckIndx(subInt(i_1845494229, 1), 0, (rects_1845494092[0]).length - 1)].flag] != undefined);                }              if (Temporary13) {
              extendLeft_1845493901(rect_1845494230);
              }
              
              break;
            default: 
              break;
            }
            i_1795162283 = addInt(i_1795162283, 1);
            if (!(((rects_1845494092[0]).length == L_1795162284))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(183, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label14: do {
      var iHEX60gensym23_1845494297 = 0;
      var resultHEX60gensym23_1845494318 = newSeq_1845494301(chckRange((rects_1845494092[0]).length, 0, 2147483647));
      Label15: do {
        var it_1845494322 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_1795162289 = 0;
        var L_1795162290 = (rects_1845494092[0]).length;
        Label16: do {
            Label17: while (true) {
            if (!(i_1795162289 < L_1795162290)) break Label17;
              it_1845494322 = rects_1845494092[0][chckIndx(i_1795162289, 0, (rects_1845494092[0]).length - 1)];
              resultHEX60gensym23_1845494318[chckIndx(iHEX60gensym23_1845494297, 0, (resultHEX60gensym23_1845494318).length - 1)] = it_1845494322.baseline;
              iHEX60gensym23_1845494297 = addInt(iHEX60gensym23_1845494297, 1);
              i_1795162289 = addInt(i_1795162289, 1);
              if (!(((rects_1845494092[0]).length == L_1795162290))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    var maxBaseline_1845494339 = max_1845494327(resultHEX60gensym23_1845494318);
    Label18: do {
      var iHEX60gensym28_1845494351 = 0;
      var colontmp__1795162293 = 0;
      colontmp__1795162293 = (rects_1845494092[0]).length - 1;
      var res_1795162294 = 0;
      Label19: do {
          Label20: while (true) {
          if (!(res_1795162294 <= colontmp__1795162293)) break Label20;
            iHEX60gensym28_1845494351 = res_1795162294;
            var it_1845494352 = nimCopy(null, rects_1845494092[0][chckIndx(iHEX60gensym28_1845494351, 0, (rects_1845494092[0]).length - 1)], NTI1845493764);
            rects_1845494092[0][chckIndx(iHEX60gensym28_1845494351, 0, (rects_1845494092[0]).length - 1)] = nimCopy(rects_1845494092[0][chckIndx(iHEX60gensym28_1845494351, 0, (rects_1845494092[0]).length - 1)], extendUp_1845493838(it_1845494352, chckRange(subInt(maxBaseline_1845494339, it_1845494352.baseline), 0, 2147483647)), NTI1845493764);
            res_1795162294 = addInt(res_1795162294, 1);
          }
      } while (false);
    } while (false);
    Label21: do {
      var iHEX60gensym29_1845494374 = 0;
      var resultHEX60gensym29_1845494395 = newSeq_1845494378(chckRange((rects_1845494092[0]).length, 0, 2147483647));
      Label22: do {
        var it_1845494399 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_1795162298 = 0;
        var L_1795162299 = (rects_1845494092[0]).length;
        Label23: do {
            Label24: while (true) {
            if (!(i_1795162298 < L_1795162299)) break Label24;
              it_1845494399 = rects_1845494092[0][chckIndx(i_1795162298, 0, (rects_1845494092[0]).length - 1)];
              resultHEX60gensym29_1845494395[chckIndx(iHEX60gensym29_1845494374, 0, (resultHEX60gensym29_1845494395).length - 1)] = height_1845493801(it_1845494399);
              iHEX60gensym29_1845494374 = addInt(iHEX60gensym29_1845494374, 1);
              i_1795162298 = addInt(i_1795162298, 1);
              if (!(((rects_1845494092[0]).length == L_1795162299))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    var maxHeight_1845494416 = max_1845494404(resultHEX60gensym29_1845494395);
    Label25: do {
      var iHEX60gensym32_1845494428 = 0;
      var colontmp__1795162302 = 0;
      colontmp__1795162302 = (rects_1845494092[0]).length - 1;
      var res_1795162303 = 0;
      Label26: do {
          Label27: while (true) {
          if (!(res_1795162303 <= colontmp__1795162302)) break Label27;
            iHEX60gensym32_1845494428 = res_1795162303;
            var it_1845494429 = nimCopy(null, rects_1845494092[0][chckIndx(iHEX60gensym32_1845494428, 0, (rects_1845494092[0]).length - 1)], NTI1845493764);
            rects_1845494092[0][chckIndx(iHEX60gensym32_1845494428, 0, (rects_1845494092[0]).length - 1)] = nimCopy(rects_1845494092[0][chckIndx(iHEX60gensym32_1845494428, 0, (rects_1845494092[0]).length - 1)], extendDown_1845493889(it_1845494429, chckRange(subInt(maxHeight_1845494416, height_1845493801(it_1845494429)), 0, 2147483647)), NTI1845493764);
            res_1795162303 = addInt(res_1795162303, 1);
          }
      } while (false);
    } while (false);
    result_1845493949.rows = nimCopy(null, newSeq_452985301(height_1845493801(rects_1845494092[0][chckIndx(0, 0, (rects_1845494092[0]).length - 1)])), NTI452985127);
    Label28: do {
      var i_1845494468 = 0;
      var row_1845494469 = null;
      var row_1845494469_Idx = 0;
      var i_1795162312 = 0;
      var L_1795162313 = (result_1845493949.rows).length;
      Label29: do {
          Label30: while (true) {
          if (!(i_1795162312 < L_1795162313)) break Label30;
            i_1845494468 = i_1795162312;
            row_1845494469 = result_1845493949.rows; row_1845494469_Idx = chckIndx(i_1795162312, 0, (result_1845493949.rows).length - 1);
            Label31: do {
              var iHEX60gensym35_1845494491 = 0;
              var resultHEX60gensym35_1845494498 = newSeq_452985301(chckRange((rects_1845494092[0]).length, 0, 2147483647));
              Label32: do {
                var it_1845494502 = ({rows: [], baseline: 0, width: 0, flag: 0});
                var i_1795162308 = 0;
                var L_1795162309 = (rects_1845494092[0]).length;
                Label33: do {
                    Label34: while (true) {
                    if (!(i_1795162308 < L_1795162309)) break Label34;
                      it_1845494502 = rects_1845494092[0][chckIndx(i_1795162308, 0, (rects_1845494092[0]).length - 1)];
                      resultHEX60gensym35_1845494498[chckIndx(iHEX60gensym35_1845494491, 0, (resultHEX60gensym35_1845494498).length - 1)] = nimCopy(null, it_1845494502.rows[chckIndx(i_1845494468, 0, (it_1845494502.rows).length - 1)], NTI33554439);
                      iHEX60gensym35_1845494491 = addInt(iHEX60gensym35_1845494491, 1);
                      i_1795162308 = addInt(i_1795162308, 1);
                      if (!(((rects_1845494092[0]).length == L_1795162309))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
            } while (false);
            row_1845494469[row_1845494469_Idx] = nimCopy(null, nsuJoinSep(resultHEX60gensym35_1845494498, []), NTI33554439);
            i_1795162312 = addInt(i_1795162312, 1);
            if (!(((result_1845493949.rows).length == L_1795162313))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(183, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_1845493949.baseline = rects_1845494092[0][chckIndx(0, 0, (rects_1845494092[0]).length - 1)].baseline;
    Label35: do {
      var iHEX60gensym38_1845494528 = 0;
      var resultHEX60gensym38_1845494535 = newSeq_1845494378(chckRange((rects_1845494092[0]).length, 0, 2147483647));
      Label36: do {
        var it_1845494539 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_1795162317 = 0;
        var L_1795162318 = (rects_1845494092[0]).length;
        Label37: do {
            Label38: while (true) {
            if (!(i_1795162317 < L_1795162318)) break Label38;
              it_1845494539 = rects_1845494092[0][chckIndx(i_1795162317, 0, (rects_1845494092[0]).length - 1)];
              resultHEX60gensym38_1845494535[chckIndx(iHEX60gensym38_1845494528, 0, (resultHEX60gensym38_1845494535).length - 1)] = it_1845494539.width;
              iHEX60gensym38_1845494528 = addInt(iHEX60gensym38_1845494528, 1);
              i_1795162317 = addInt(i_1795162317, 1);
              if (!(((rects_1845494092[0]).length == L_1795162318))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    result_1845493949.width = sum_1845494544(resultHEX60gensym38_1845494535);
  } while (false);

  return result_1845493949;

}

function map_1811943667(a_1811943670, fn_1811943672) {

function succeedImpl_1811943684(inputInHEX60gensym71_1811943685, valueInHEX60gensym71_1811943686, tailInHEX60gensym71_1811943687) {
  var result_1811943689 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811943689 = nimCopy(result_1811943689, {kind: 0, value: nimCopy(null, valueInHEX60gensym71_1811943686, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym71_1811943687, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym71_1811943685, NTI33554439), expected: []}, NTI1811941261);

  return result_1811943689;

}

function failImpl_1811943691(inputInHEX60gensym71_1811943692, expectedInHEX60gensym71_1811943693, tailInHEX60gensym71_1811943694) {
  var result_1811943696 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811943696 = nimCopy(result_1811943696, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym71_1811943693, NTI1811942573), tail: nimCopy(null, tailInHEX60gensym71_1811943694, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym71_1811943692, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811943696;

}
      
function HEX3Aanonymous_1811943699(input_1811943700) {
            var Temporary2;
          var Temporary3;

        var result_1811943702 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811943703 = succeedImpl_1811943684;
          var fail_1811943704 = failImpl_1811943691;
          Label1: do {
            var tempHEX60gensym24_1811943717 = parse_1862271905(a_1811943670, input_1811943700);
            if ((tempHEX60gensym24_1811943717.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811943717;
            if (ConstSet54[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811943702 = nimCopy(result_1811943702, {kind: 1, fromInput: nimCopy(null, input_1811943700, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811943717.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811943723 = nimCopy(null, tempHEX60gensym24_1811943717, NTI1862271206);
          var Temporary3 = result1_1811943723;
          if (ConstSet55[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811943702 = nimCopy(result_1811943702, succeed_1811943703(input_1811943700, fn_1811943672(Temporary3.value), result1_1811943723.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811943702;

      }

  var result_1811943673 = null;

    Label1: do {
    } while (false);
    result_1811943673 = {body: HEX3Aanonymous_1811943699};

  return result_1811943673;

}

function nucruneLen(s_939524106) {
  var result_939524107 = 0;

    result_939524107 = 0;
    var i_939524108 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_939524108 < (s_939524106).length)) break Label2;
          if ((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] <= 127)) {
          i_939524108 = addInt(i_939524108, 1);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 5) == 6)) {
          i_939524108 = addInt(i_939524108, 2);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 4) == 14)) {
          i_939524108 = addInt(i_939524108, 3);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 3) == 30)) {
          i_939524108 = addInt(i_939524108, 4);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 2) == 62)) {
          i_939524108 = addInt(i_939524108, 5);
          }
          else {
          if (((s_939524106[chckIndx(i_939524108, 0, (s_939524106).length - 1)] >>> 1) == 126)) {
          i_939524108 = addInt(i_939524108, 6);
          }
          else {
          i_939524108 = addInt(i_939524108, 1);
          }
          }}}}}
          result_939524107 = addInt(result_939524107, 1);
        }
    } while (false);

  return result_939524107;

}

function toTextRectOneLine_1845493829(s_1845493830, baseline_1845493831, flag_1845493832) {
  var result_1845493833 = ({rows: [], baseline: 0, width: 0, flag: 0});

  BeforeRet: do {
    if (eqStrings(s_1845493830, [])) {
    result_1845493833.flag = flag_1845493832;
    break BeforeRet;
    }
    
    result_1845493833.rows = nimCopy(null, [nimCopy(null, s_1845493830, NTI33554439)], NTI1476395617);
    result_1845493833.width = chckRange(nucruneLen(s_1845493830), 0, 2147483647);
    result_1845493833.baseline = baseline_1845493831;
    result_1845493833.flag = flag_1845493832;
  } while (false);

  return result_1845493833;

}

function HEX7C_1811944754(a_1811944756, b_1811944757) {

function succeedImpl_1811944769(inputInHEX60gensym92_1811944770, valueInHEX60gensym92_1811944771, tailInHEX60gensym92_1811944772) {
  var result_1811944774 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811944774 = nimCopy(result_1811944774, {kind: 0, value: nimCopy(null, valueInHEX60gensym92_1811944771, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym92_1811944772, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym92_1811944770, NTI33554439), expected: []}, NTI1811941261);

  return result_1811944774;

}

function failImpl_1811944776(inputInHEX60gensym92_1811944777, expectedInHEX60gensym92_1811944778, tailInHEX60gensym92_1811944779) {
  var result_1811944781 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811944781 = nimCopy(result_1811944781, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym92_1811944778, NTI1811943427), tail: nimCopy(null, tailInHEX60gensym92_1811944779, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym92_1811944777, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811944781;

}
      
function HEX3Aanonymous_1811944784(input_1811944785) {
          var Temporary1;
          var Temporary2;

        var result_1811944787 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811944788 = succeedImpl_1811944769;
          var fail_1811944789 = failImpl_1811944776;
          var result1_1811944802 = parse_1811942404(a_1811944756, input_1811944785);
          if ((result1_1811944802.kind == 0)) {
          result_1811944787 = nimCopy(result_1811944787, result1_1811944802, NTI1811941261);
          break BeforeRet;
          }
          
          var result2_1811944819 = parse_1811942404(b_1811944757, input_1811944785);
          if ((result2_1811944819.kind == 0)) {
          result_1811944787 = nimCopy(result_1811944787, result2_1811944819, NTI1811941261);
          break BeforeRet;
          }
          
          var Temporary1 = result1_1811944802;
          if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
          var Temporary2 = result2_1811944819;
          if (ConstSet57[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
          result_1811944787 = nimCopy(result_1811944787, fail_1811944789(input_1811944785, HEX26_1845493855(Temporary1.expected, Temporary2.expected), input_1811944785), NTI1811941261);
        } while (false);

        return result_1811944787;

      }

  var result_1811944758 = null;

    Label1: do {
    } while (false);
    result_1811944758 = {body: HEX3Aanonymous_1811944784};

  return result_1811944758;

}

function HEX3CHEX3DHEX25_33555429(x_33555430, y_33555431) {
  var result_33555432 = false;

    result_33555432 = ((x_33555430 >>> 0) <= (y_33555431 >>> 0));

  return result_33555432;

}

function nuctoUTF8(c_939524437) {
  var result_939524438 = [];

    result_939524438 = nimCopy(null, [], NTI33554439);
    var iHEX60gensym49_939524440 = c_939524437;
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_939524440, 127)) {
    (result_939524438.length = 1);
    result_939524438[chckIndx(0, 0, (result_939524438).length - 1)] = chckRange(iHEX60gensym49_939524440, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_939524440, 2047)) {
    (result_939524438.length = 2);
    result_939524438[chckIndx(0, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 >> 6) | 192), 0, 255);
    result_939524438[chckIndx(1, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_939524440, 65535)) {
    (result_939524438.length = 3);
    result_939524438[chckIndx(0, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 >> 12) | 224), 0, 255);
    result_939524438[chckIndx(1, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 6) & 63) | 128), 0, 255);
    result_939524438[chckIndx(2, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_939524440, 2097151)) {
    (result_939524438.length = 4);
    result_939524438[chckIndx(0, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 >> 18) | 240), 0, 255);
    result_939524438[chckIndx(1, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 12) & 63) | 128), 0, 255);
    result_939524438[chckIndx(2, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 6) & 63) | 128), 0, 255);
    result_939524438[chckIndx(3, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_939524440, 67108863)) {
    (result_939524438.length = 5);
    result_939524438[chckIndx(0, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 >> 24) | 248), 0, 255);
    result_939524438[chckIndx(1, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 18) & 63) | 128), 0, 255);
    result_939524438[chckIndx(2, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 12) & 63) | 128), 0, 255);
    result_939524438[chckIndx(3, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 6) & 63) | 128), 0, 255);
    result_939524438[chckIndx(4, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_939524440, 2147483647)) {
    (result_939524438.length = 6);
    result_939524438[chckIndx(0, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 >> 30) | 252), 0, 255);
    result_939524438[chckIndx(1, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 24) & 63) | 128), 0, 255);
    result_939524438[chckIndx(2, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 18) & 63) | 128), 0, 255);
    result_939524438[chckIndx(3, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 12) & 63) | 128), 0, 255);
    result_939524438[chckIndx(4, 0, (result_939524438).length - 1)] = chckRange((((iHEX60gensym49_939524440 >> 6) & 63) | 128), 0, 255);
    result_939524438[chckIndx(5, 0, (result_939524438).length - 1)] = chckRange(((iHEX60gensym49_939524440 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_939524438;

}

function HEX24_939524687(rune_939524688) {
  var result_939524689 = [];

    result_939524689 = nimCopy(null, nuctoUTF8(rune_939524688), NTI33554439);

  return result_939524689;

}

function HEX3DHEX3D_939525015(a_939525016, b_939525017) {
  var result_939525018 = false;

  BeforeRet: do {
    result_939525018 = (((a_939525016) | 0) == ((b_939525017) | 0));
    break BeforeRet;
  } while (false);

  return result_939525018;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function parseSaturatedNatural_687866172(s_687866173, b_687866174, b_687866174_Idx, start_687866175) {
      var Temporary1;
          var Temporary4;

  var result_687866176 = 0;

    var i_687866177 = start_687866175;
    if (((i_687866177 < (s_687866173).length) && (s_687866173[chckIndx(i_687866177, 0, (s_687866173).length - 1)] == 43))) {
    i_687866177 = addInt(i_687866177, 1);
    }
    
      if (!(i_687866177 < (s_687866173).length)) Temporary1 = false; else {        Temporary1 = (ConstSet62[s_687866173[chckIndx(i_687866177, 0, (s_687866173).length - 1)]] != undefined);      }    if (Temporary1) {
    b_687866174[b_687866174_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_687866177 < (s_687866173).length)) Temporary4 = false; else {            Temporary4 = (ConstSet63[s_687866173[chckIndx(i_687866177, 0, (s_687866173).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_687866196 = subInt(s_687866173[chckIndx(i_687866177, 0, (s_687866173).length - 1)], 48);
          if ((b_687866174[b_687866174_Idx] <= divInt(subInt(2147483647, c_687866196), 10))) {
          b_687866174[b_687866174_Idx] = addInt(mulInt(b_687866174[b_687866174_Idx], 10), c_687866196);
          }
          else {
            b_687866174[b_687866174_Idx] = 2147483647;
          }
          
          i_687866177 = addInt(i_687866177, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_687866177 < (s_687866173).length) && (s_687866173[chckIndx(i_687866177, 0, (s_687866173).length - 1)] == 95))) break Label6;
                i_687866177 = addInt(i_687866177, 1);
              }
          } while (false);
        }
    } while (false);
    result_687866176 = subInt(i_687866177, start_687866175);
    }
    

  return result_687866176;

}

function parseStandardFormatSpecifier_1124073530(s_1124073531, start_1124073532, ignoreUnknownSuffix_1124073533) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1124073534 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1124073534.fill = 32;
    result_1124073534.align = 0;
    result_1124073534.sign = 45;
    var i_1124073536 = start_1124073532;
    if (((addInt(i_1124073536, 1) < (s_1124073531).length) && (ConstSet58[s_1124073531[chckIndx(addInt(i_1124073536, 1), 0, (s_1124073531).length - 1)]] != undefined))) {
    result_1124073534.fill = s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)];
    result_1124073534.align = s_1124073531[chckIndx(addInt(i_1124073536, 1), 0, (s_1124073531).length - 1)];
    i_1124073536 = addInt(i_1124073536, 2);
    }
    else {
    if (((i_1124073536 < (s_1124073531).length) && (ConstSet59[s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)]] != undefined))) {
    result_1124073534.align = s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)];
    i_1124073536 = addInt(i_1124073536, 1);
    }
    }
    if (((i_1124073536 < (s_1124073531).length) && (ConstSet60[s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)]] != undefined))) {
    result_1124073534.sign = s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)];
    i_1124073536 = addInt(i_1124073536, 1);
    }
    
    if (((i_1124073536 < (s_1124073531).length) && (s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)] == 35))) {
    result_1124073534.alternateForm = true;
    i_1124073536 = addInt(i_1124073536, 1);
    }
    
      if (!((addInt(i_1124073536, 1) < (s_1124073531).length) && (s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet61[s_1124073531[chckIndx(addInt(i_1124073536, 1), 0, (s_1124073531).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1124073534.padWithZero = true;
    i_1124073536 = addInt(i_1124073536, 1);
    }
    
    var parsedLength_1124073573 = parseSaturatedNatural_687866172(s_1124073531, result_1124073534, "minimumWidth", i_1124073536);
    i_1124073536 = addInt(i_1124073536, parsedLength_1124073573);
    if (((i_1124073536 < (s_1124073531).length) && (s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)] == 46))) {
    i_1124073536 = addInt(i_1124073536, 1);
    var parsedLengthB_1124073582 = parseSaturatedNatural_687866172(s_1124073531, result_1124073534, "precision", i_1124073536);
    i_1124073536 = addInt(i_1124073536, parsedLengthB_1124073582);
    }
    else {
      result_1124073534.precision = -1;
    }
    
      if (!(i_1124073536 < (s_1124073531).length)) Temporary2 = false; else {        Temporary2 = (ConstSet64[s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1124073534.typ = s_1124073531[chckIndx(i_1124073536, 0, (s_1124073531).length - 1)];
    i_1124073536 = addInt(i_1124073536, 1);
    }
    
    result_1124073534.endPosition = i_1124073536;
      if (!!((i_1124073536 == (s_1124073531).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1124073533);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_939527322(s_1124073531, HEX2EHEX2E_872415312(i_1124073536, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1124073534;

}

function runeLenAt_939524161(s_939524162, i_939524163) {
  var result_939524164 = 0;

    if ((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] <= 127)) {
    result_939524164 = 1;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 5) == 6)) {
    result_939524164 = 2;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 4) == 14)) {
    result_939524164 = 3;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 3) == 30)) {
    result_939524164 = 4;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 2) == 62)) {
    result_939524164 = 5;
    }
    else {
    if (((s_939524162[chckIndx(i_939524163, 0, (s_939524162).length - 1)] >>> 1) == 126)) {
    result_939524164 = 6;
    }
    else {
      result_939524164 = 1;
    }
    }}}}}

  return result_939524164;

}

function runeOffset_939524733(s_939524734, pos_939524735, start_939524736) {
  var result_939524737 = 0;

  BeforeRet: do {
    var i_939524738 = 0;
    var o_939524739 = start_939524736;
    Label1: do {
        Label2: while (true) {
        if (!(i_939524738 < pos_939524735)) break Label2;
          o_939524739 = addInt(o_939524739, chckRange(runeLenAt_939524161(s_939524734, o_939524739), 0, 2147483647));
          if (((s_939524734).length <= o_939524739)) {
          result_939524737 = -1;
          break BeforeRet;
          }
          
          i_939524738 = addInt(i_939524738, 1);
        }
    } while (false);
    result_939524737 = o_939524739;
    break BeforeRet;
  } while (false);

  return result_939524737;

}

function validateUtf8_939524373(s_939524374) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_939524375 = 0;

  BeforeRet: do {
    var i_939524376 = 0;
    var L_939524377 = (s_939524374).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_939524376 < L_939524377)) break Label2;
          if ((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] <= 127)) {
          i_939524376 = addInt(i_939524376, 1);
          }
          else {
          if (((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] >>> 5) == 6)) {
          if ((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] < 194)) {
          result_939524375 = i_939524376;
          break BeforeRet;
          }
          
            if (!(addInt(i_939524376, 1) < L_939524377)) Temporary3 = false; else {              Temporary3 = ((s_939524374[chckIndx(addInt(i_939524376, 1), 0, (s_939524374).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_939524376 = addInt(i_939524376, 2);
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_939524376, 2) < L_939524377)) Temporary5 = false; else {              Temporary5 = ((s_939524374[chckIndx(addInt(i_939524376, 1), 0, (s_939524374).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_939524374[chckIndx(addInt(i_939524376, 2), 0, (s_939524374).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_939524376 = addInt(i_939524376, 3);
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_939524374[chckIndx(i_939524376, 0, (s_939524374).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_939524376, 3) < L_939524377)) Temporary8 = false; else {              Temporary8 = ((s_939524374[chckIndx(addInt(i_939524376, 1), 0, (s_939524374).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_939524374[chckIndx(addInt(i_939524376, 2), 0, (s_939524374).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_939524374[chckIndx(addInt(i_939524376, 3), 0, (s_939524374).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_939524376 = addInt(i_939524376, 4);
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          
          }
          else {
            result_939524375 = i_939524376;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_939524375 = -1;
    break BeforeRet;
  } while (false);

  return result_939524375;

}

function alignString_1124073492(s_1124073493, minimumWidth_1124073494, align_1124073495, fill_1124073496) {
      var Temporary1;

  var result_1124073497 = [];

    if ((minimumWidth_1124073494 == 0)) {
    result_1124073497 = nimCopy(null, s_1124073493, NTI33554439);
    }
    else {
      if ((validateUtf8_939524373(s_1124073493) == -1)) {
      Temporary1 = nucruneLen(s_1124073493);
      }
      else {
      Temporary1 = (s_1124073493).length;
      }
      
      var sRuneLen_1124073498 = Temporary1;
      var toFill_1124073499 = subInt(minimumWidth_1124073494, sRuneLen_1124073498);
      if ((toFill_1124073499 <= 0)) {
      result_1124073497 = nimCopy(null, s_1124073493, NTI33554439);
      }
      else {
      if (((align_1124073495 == 60) || (align_1124073495 == 0))) {
      result_1124073497 = nimCopy(null, (s_1124073493 || []).concat(nsuRepeatChar(fill_1124073496, chckRange(toFill_1124073499, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_1124073495 == 94)) {
      var half_1124073500 = divInt(toFill_1124073499, 2);
      result_1124073497 = nimCopy(null, (nsuRepeatChar(fill_1124073496, chckRange(half_1124073500, 0, 2147483647)) || []).concat(s_1124073493 || [],nsuRepeatChar(fill_1124073496, chckRange(subInt(toFill_1124073499, half_1124073500), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        result_1124073497 = nimCopy(null, (nsuRepeatChar(fill_1124073496, chckRange(toFill_1124073499, 0, 2147483647)) || []).concat(s_1124073493 || []), NTI33554439);
      }
      }}
    }
    

  return result_1124073497;

}

function formatValue_1124073634(result_1124073635, result_1124073635_Idx, value_1124073636, specifier_1124073637) {
    var spec_1124073638 = parseStandardFormatSpecifier_1124073530(specifier_1124073637, 0, false);
    var value_1124073639 = nimCopy(null, value_1124073636, NTI33554439);
    switch (spec_1124073638.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_1124073638.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1124073638.precision == -1))) {
    if ((spec_1124073638.precision < nucruneLen(value_1124073639))) {
    (value_1124073639.length = chckRange(runeOffset_939524733(value_1124073639, chckRange(spec_1124073638.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_1124073635[result_1124073635_Idx].push.apply(result_1124073635[result_1124073635_Idx], alignString_1124073492(value_1124073639, spec_1124073638.minimumWidth, spec_1124073638.align, spec_1124073638.fill));;

  
}

function formatValue_1828716797(result_1828716799, result_1828716799_Idx, value_1828716800, specifier_1828716801) {
    formatValue_1124073634(result_1828716799, result_1828716799_Idx, HEX24_939524687(value_1828716800), specifier_1828716801);

  
}

function formatValue_1828716812(result_1828716814, result_1828716814_Idx, value_1828716815, specifier_1828716816) {
    formatValue_1124073634(result_1828716814, result_1828716814_Idx, reprEnum(value_1828716815, NTI1828716547), specifier_1828716816);

  
}

function inFont_1828716764(letter_1828716765, font_1828716766) {
    var Temporary4;

  var result_1828716767 = [];

  BeforeRet: do {
    if ((font_1828716766 == 0)) {
    result_1828716767 = nimCopy(null, HEX24_939524687(letter_1828716765), NTI33554439);
    break BeforeRet;
    }
    
    Label1: do {
      var lhs_1828716794 = 0;
      var rhs_1828716795 = [];
      var colontmp__1795162369 = [];
      colontmp__1795162369 = fontExceptions_1828716691[chckIndx(font_1828716766, 1, (fontExceptions_1828716691).length + (1) - 1) - (1)];
      var i_1795162371 = 0;
      var L_1795162372 = (colontmp__1795162369).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162371 < L_1795162372)) break Label3;
            lhs_1828716794 = colontmp__1795162369[chckIndx(i_1795162371, 0, (colontmp__1795162369).length - 1)]["Field0"];
            rhs_1828716795 = colontmp__1795162369[chckIndx(i_1795162371, 0, (colontmp__1795162369).length - 1)]["Field1"];
            if (HEX3DHEX3D_939525015(letter_1828716765, lhs_1828716794)) {
            result_1828716767 = nimCopy(null, rhs_1828716795, NTI33554439);
            break BeforeRet;
            }
            
            i_1795162371 = addInt(i_1795162371, 1);
            if (!(((colontmp__1795162369).length == L_1795162372))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    switch (letter_1828716765) {
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
      Temporary4 = {Field0: 0, Field1: 65};
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
      Temporary4 = {Field0: 0, Field1: 71};
      break;
    case 913:
    case 914:
    case 915:
    case 916:
    case 917:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 924:
    case 925:
    case 926:
    case 927:
    case 928:
    case 929:
    case 930:
    case 931:
    case 932:
    case 933:
    case 934:
    case 935:
    case 936:
    case 937:
      Temporary4 = {Field0: 1, Field1: 913};
      break;
    case 945:
    case 946:
    case 947:
    case 948:
    case 949:
    case 950:
    case 951:
    case 952:
    case 953:
    case 954:
    case 955:
    case 956:
    case 957:
    case 958:
    case 959:
    case 960:
    case 961:
    case 962:
    case 963:
    case 964:
    case 965:
    case 966:
    case 967:
    case 968:
    case 969:
      Temporary4 = {Field0: 1, Field1: 919};
      break;
    default: 
      var fmtRes_1828716796 = [mnewString(0)];
      fmtRes_1828716796[0].push.apply(fmtRes_1828716796[0], makeNimstrLit("Invalid letter: "));;
      formatValue_1828716797(fmtRes_1828716796, 0, letter_1828716765, []);
      raiseException({message: nimCopy(null, fmtRes_1828716796[0], NTI33554439), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var colontmp__1795162374 = nimCopy(null, Temporary4, NTI1828717280);
    var typ_1828716803 = colontmp__1795162374["Field0"];
    var shift_1828716804 = colontmp__1795162374["Field1"];
    var fontStart_1828716805 = fontStarts_1828716670[chckIndx(typ_1828716803, 0, (fontStarts_1828716670).length - 1)][chckIndx(font_1828716766, 1, (fontStarts_1828716670[chckIndx(typ_1828716803, 0, (fontStarts_1828716670).length - 1)]).length + (1) - 1) - (1)];
    if ((fontStart_1828716805 == 0)) {
    var fmtRes_1828716806 = [mnewString(0)];
    fmtRes_1828716806[0].push.apply(fmtRes_1828716806[0], makeNimstrLit("Letter "));;
    formatValue_1828716797(fmtRes_1828716806, 0, letter_1828716765, []);
    fmtRes_1828716806[0].push.apply(fmtRes_1828716806[0], makeNimstrLit(" can\'t be rendered in font "));;
    formatValue_1828716812(fmtRes_1828716806, 0, font_1828716766, []);
    raiseException({message: nimCopy(null, fmtRes_1828716806[0], NTI33554439), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1828716767 = nimCopy(null, HEX24_939524687(((subInt(addInt(fontStart_1828716805, letter_1828716765), shift_1828716804)) | 0)), NTI33554439);
    break BeforeRet;
  } while (false);

  return result_1828716767;

}

function map_1811944690(s_1811944693, op_1811944695) {
  var result_1811944696 = [];

    result_1811944696 = new Array(chckRange((s_1811944693).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1811944693).length, 0, 2147483647) ; ++i) { result_1811944696[i] = null; }    Label1: do {
      var i_1811944712 = 0;
      var colontmp__1795162380 = 0;
      colontmp__1795162380 = (s_1811944693).length;
      var i_1795162381 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162381 < colontmp__1795162380)) break Label3;
            i_1811944712 = i_1795162381;
            result_1811944696[chckIndx(i_1811944712, 0, (result_1811944696).length - 1)] = op_1811944695(s_1811944693[chckIndx(i_1811944712, 0, (s_1811944693).length - 1)]);
            i_1795162381 = addInt(i_1795162381, 1);
          }
      } while (false);
    } while (false);

  return result_1811944696;

}

function HEX3CHEX3C_1811944162(a_1811944165, b_1811944166) {

function succeedImpl_1811944178(inputInHEX60gensym76_1811944179, valueInHEX60gensym76_1811944180, tailInHEX60gensym76_1811944181) {
  var result_1811944183 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811944183 = nimCopy(result_1811944183, {kind: 0, value: valueInHEX60gensym76_1811944180, tail: nimCopy(null, tailInHEX60gensym76_1811944181, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym76_1811944179, NTI33554439), expected: []}, NTI1862271206);

  return result_1811944183;

}

function failImpl_1811944185(inputInHEX60gensym76_1811944186, expectedInHEX60gensym76_1811944187, tailInHEX60gensym76_1811944188) {
  var result_1811944190 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811944190 = nimCopy(result_1811944190, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym76_1811944187, NTI1811942926), tail: nimCopy(null, tailInHEX60gensym76_1811944188, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym76_1811944186, NTI33554439), value: 0}, NTI1862271206);

  return result_1811944190;

}
      
function HEX3Aanonymous_1811944193(input_1811944194) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811944196 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811944197 = succeedImpl_1811944178;
          var fail_1811944198 = failImpl_1811944185;
          Label1: do {
            var tempHEX60gensym30_1811944211 = parse_1862271905(a_1811944165, input_1811944194);
            if ((tempHEX60gensym30_1811944211.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_1811944211;
            if (ConstSet65[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811944196 = nimCopy(result_1811944196, {kind: 1, fromInput: nimCopy(null, input_1811944194, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym30_1811944211.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811944217 = nimCopy(null, tempHEX60gensym30_1811944211, NTI1862271206);
          Label3: do {
            var tempHEX60gensym32_1811944230 = parse_1862271905(b_1811944166, result1_1811944217.tail);
            if ((tempHEX60gensym32_1811944230.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_1811944230;
            if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811944196 = nimCopy(result_1811944196, {kind: 1, fromInput: nimCopy(null, input_1811944194, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym32_1811944230.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811944236 = nimCopy(null, tempHEX60gensym32_1811944230, NTI1862271206);
          var Temporary5 = result1_1811944217;
          if (ConstSet67[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811944196 = nimCopy(result_1811944196, succeed_1811944197(input_1811944194, Temporary5.value, result2_1811944236.tail), NTI1862271206);
          break BeforeRet;
        } while (false);

        return result_1811944196;

      }

  var result_1811944167 = null;

    Label1: do {
    } while (false);
    result_1811944167 = {body: HEX3Aanonymous_1811944193};

  return result_1811944167;

}

function HEX3CHEX3C_1811944079(a_1811944082, b_1811944083) {

function succeedImpl_1811944095(inputInHEX60gensym75_1811944096, valueInHEX60gensym75_1811944097, tailInHEX60gensym75_1811944098) {
  var result_1811944100 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811944100 = nimCopy(result_1811944100, {kind: 0, value: valueInHEX60gensym75_1811944097, tail: nimCopy(null, tailInHEX60gensym75_1811944098, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym75_1811944096, NTI33554439), expected: []}, NTI1862271206);

  return result_1811944100;

}

function failImpl_1811944102(inputInHEX60gensym75_1811944103, expectedInHEX60gensym75_1811944104, tailInHEX60gensym75_1811944105) {
  var result_1811944107 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811944107 = nimCopy(result_1811944107, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym75_1811944104, NTI1811942865), tail: nimCopy(null, tailInHEX60gensym75_1811944105, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym75_1811944103, NTI33554439), value: 0}, NTI1862271206);

  return result_1811944107;

}
      
function HEX3Aanonymous_1811944110(input_1811944111) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811944113 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811944114 = succeedImpl_1811944095;
          var fail_1811944115 = failImpl_1811944102;
          Label1: do {
            var tempHEX60gensym30_1811944128 = parse_1862271905(a_1811944082, input_1811944111);
            if ((tempHEX60gensym30_1811944128.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_1811944128;
            if (ConstSet68[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811944113 = nimCopy(result_1811944113, {kind: 1, fromInput: nimCopy(null, input_1811944111, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym30_1811944128.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811944134 = nimCopy(null, tempHEX60gensym30_1811944128, NTI1862271206);
          Label3: do {
            var tempHEX60gensym32_1811944147 = parse_1811941370(b_1811944083, result1_1811944134.tail);
            if ((tempHEX60gensym32_1811944147.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_1811944147;
            if (ConstSet69[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811944113 = nimCopy(result_1811944113, {kind: 1, fromInput: nimCopy(null, input_1811944111, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym32_1811944147.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811944153 = nimCopy(null, tempHEX60gensym32_1811944147, NTI1811940170);
          var Temporary5 = result1_1811944134;
          if (ConstSet70[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811944113 = nimCopy(result_1811944113, succeed_1811944114(input_1811944111, Temporary5.value, result2_1811944153.tail), NTI1862271206);
          break BeforeRet;
        } while (false);

        return result_1811944113;

      }

  var result_1811944084 = null;

    Label1: do {
    } while (false);
    result_1811944084 = {body: HEX3Aanonymous_1811944110};

  return result_1811944084;

}

function HEX3EHEX3E_1811943900(a_1811943903, b_1811943904) {

function succeedImpl_1811943916(inputInHEX60gensym73_1811943917, valueInHEX60gensym73_1811943918, tailInHEX60gensym73_1811943919) {
  var result_1811943921 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811943921 = nimCopy(result_1811943921, {kind: 0, value: valueInHEX60gensym73_1811943918, tail: nimCopy(null, tailInHEX60gensym73_1811943919, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym73_1811943917, NTI33554439), expected: []}, NTI1862271206);

  return result_1811943921;

}

function failImpl_1811943923(inputInHEX60gensym73_1811943924, expectedInHEX60gensym73_1811943925, tailInHEX60gensym73_1811943926) {
  var result_1811943928 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811943928 = nimCopy(result_1811943928, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym73_1811943925, NTI1811942738), tail: nimCopy(null, tailInHEX60gensym73_1811943926, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym73_1811943924, NTI33554439), value: 0}, NTI1862271206);

  return result_1811943928;

}
      
function HEX3Aanonymous_1811943931(input_1811943932) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811943934 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811943935 = succeedImpl_1811943916;
          var fail_1811943936 = failImpl_1811943923;
          Label1: do {
            var tempHEX60gensym34_1811943949 = parse_1811941370(a_1811943903, input_1811943932);
            if ((tempHEX60gensym34_1811943949.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811943949;
            if (ConstSet71[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811943934 = nimCopy(result_1811943934, {kind: 1, fromInput: nimCopy(null, input_1811943932, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811943949.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811943955 = nimCopy(null, tempHEX60gensym34_1811943949, NTI1811940170);
          Label3: do {
            var tempHEX60gensym36_1811943968 = parse_1862271905(b_1811943904, result1_1811943955.tail);
            if ((tempHEX60gensym36_1811943968.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811943968;
            if (ConstSet72[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811943934 = nimCopy(result_1811943934, {kind: 1, fromInput: nimCopy(null, input_1811943932, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811943968.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811943974 = nimCopy(null, tempHEX60gensym36_1811943968, NTI1862271206);
          var Temporary5 = result2_1811943974;
          if (ConstSet73[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811943934 = nimCopy(result_1811943934, succeed_1811943935(input_1811943932, Temporary5.value, result2_1811943974.tail), NTI1862271206);
          break BeforeRet;
        } while (false);

        return result_1811943934;

      }

  var result_1811943905 = null;

    Label1: do {
    } while (false);
    result_1811943905 = {body: HEX3Aanonymous_1811943931};

  return result_1811943905;

}

function HEX3EHEX3E_1811943983(a_1811943986, b_1811943987) {

function succeedImpl_1811943999(inputInHEX60gensym74_1811944000, valueInHEX60gensym74_1811944001, tailInHEX60gensym74_1811944002) {
  var result_1811944004 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811944004 = nimCopy(result_1811944004, {kind: 0, value: nimCopy(null, valueInHEX60gensym74_1811944001, NTI1811940164), tail: nimCopy(null, tailInHEX60gensym74_1811944002, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym74_1811944000, NTI33554439), expected: []}, NTI1811940170);

  return result_1811944004;

}

function failImpl_1811944006(inputInHEX60gensym74_1811944007, expectedInHEX60gensym74_1811944008, tailInHEX60gensym74_1811944009) {
  var result_1811944011 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811944011 = nimCopy(result_1811944011, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym74_1811944008, NTI1811942799), tail: nimCopy(null, tailInHEX60gensym74_1811944009, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym74_1811944007, NTI33554439), value: []}, NTI1811940170);

  return result_1811944011;

}
      
function HEX3Aanonymous_1811944014(input_1811944015) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811944017 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811944018 = succeedImpl_1811943999;
          var fail_1811944019 = failImpl_1811944006;
          Label1: do {
            var tempHEX60gensym34_1811944032 = parse_1862271905(a_1811943986, input_1811944015);
            if ((tempHEX60gensym34_1811944032.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811944032;
            if (ConstSet74[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811944017 = nimCopy(result_1811944017, {kind: 1, fromInput: nimCopy(null, input_1811944015, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811944032.tail, NTI33554439), value: []}, NTI1811940170);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811944038 = nimCopy(null, tempHEX60gensym34_1811944032, NTI1862271206);
          Label3: do {
            var tempHEX60gensym36_1811944051 = parse_1811941370(b_1811943987, result1_1811944038.tail);
            if ((tempHEX60gensym36_1811944051.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811944051;
            if (ConstSet75[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811944017 = nimCopy(result_1811944017, {kind: 1, fromInput: nimCopy(null, input_1811944015, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811944051.tail, NTI33554439), value: []}, NTI1811940170);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811944057 = nimCopy(null, tempHEX60gensym36_1811944051, NTI1811940170);
          var Temporary5 = result2_1811944057;
          if (ConstSet76[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811944017 = nimCopy(result_1811944017, succeed_1811944018(input_1811944015, Temporary5.value, result2_1811944057.tail), NTI1811940170);
          break BeforeRet;
        } while (false);

        return result_1811944017;

      }

  var result_1811943988 = null;

    Label1: do {
    } while (false);
    result_1811943988 = {body: HEX3Aanonymous_1811944014};

  return result_1811943988;

}

function HEX3EHEX3E_1811943817(a_1811943820, b_1811943821) {

function succeedImpl_1811943833(inputInHEX60gensym72_1811943834, valueInHEX60gensym72_1811943835, tailInHEX60gensym72_1811943836) {
  var result_1811943838 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811943838 = nimCopy(result_1811943838, {kind: 0, value: nimCopy(null, valueInHEX60gensym72_1811943835, NTI1811940164), tail: nimCopy(null, tailInHEX60gensym72_1811943836, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym72_1811943834, NTI33554439), expected: []}, NTI1811940170);

  return result_1811943838;

}

function failImpl_1811943840(inputInHEX60gensym72_1811943841, expectedInHEX60gensym72_1811943842, tailInHEX60gensym72_1811943843) {
  var result_1811943845 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811943845 = nimCopy(result_1811943845, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym72_1811943842, NTI1811942677), tail: nimCopy(null, tailInHEX60gensym72_1811943843, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym72_1811943841, NTI33554439), value: []}, NTI1811940170);

  return result_1811943845;

}
      
function HEX3Aanonymous_1811943848(input_1811943849) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811943851 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811943852 = succeedImpl_1811943833;
          var fail_1811943853 = failImpl_1811943840;
          Label1: do {
            var tempHEX60gensym34_1811943866 = parse_1811941132(a_1811943820, input_1811943849);
            if ((tempHEX60gensym34_1811943866.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811943866;
            if (ConstSet77[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811943851 = nimCopy(result_1811943851, {kind: 1, fromInput: nimCopy(null, input_1811943849, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811943866.tail, NTI33554439), value: []}, NTI1811940170);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811943872 = nimCopy(null, tempHEX60gensym34_1811943866, NTI1862271108);
          Label3: do {
            var tempHEX60gensym36_1811943885 = parse_1811941370(b_1811943821, result1_1811943872.tail);
            if ((tempHEX60gensym36_1811943885.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811943885;
            if (ConstSet78[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811943851 = nimCopy(result_1811943851, {kind: 1, fromInput: nimCopy(null, input_1811943849, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811943885.tail, NTI33554439), value: []}, NTI1811940170);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811943891 = nimCopy(null, tempHEX60gensym36_1811943885, NTI1811940170);
          var Temporary5 = result2_1811943891;
          if (ConstSet79[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811943851 = nimCopy(result_1811943851, succeed_1811943852(input_1811943849, Temporary5.value, result2_1811943891.tail), NTI1811940170);
          break BeforeRet;
        } while (false);

        return result_1811943851;

      }

  var result_1811943822 = null;

    Label1: do {
    } while (false);
    result_1811943822 = {body: HEX3Aanonymous_1811943848};

  return result_1811943822;

}

function nsuStartsWith(s_654312737, prefix_654312738) {
            var Temporary3;

  var result_654312739 = false;

  BeforeRet: do {
    var prefixLenHEX60gensym141_654312744 = (prefix_654312738).length;
    var sLenHEX60gensym141_654312745 = (s_654312737).length;
    var iHEX60gensym141_654312746 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym141_654312744 <= iHEX60gensym141_654312746)) {
          result_654312739 = true;
          break BeforeRet;
          }
          
            if ((sLenHEX60gensym141_654312745 <= iHEX60gensym141_654312746)) Temporary3 = true; else {              Temporary3 = !((s_654312737[chckIndx(iHEX60gensym141_654312746, 0, (s_654312737).length - 1)] == prefix_654312738[chckIndx(iHEX60gensym141_654312746, 0, (prefix_654312738).length - 1)]));            }          if (Temporary3) {
          result_654312739 = false;
          break BeforeRet;
          }
          
          iHEX60gensym141_654312746 = addInt(iHEX60gensym141_654312746, 1);
        }
    } while (false);
  } while (false);

  return result_654312739;

}

function s_1862271087(expect_1862271088) {

function succeedImpl_1862271109(inputInHEX60gensym2_1862271110, valueInHEX60gensym2_1862271111, tailInHEX60gensym2_1862271112) {
  var result_1862271114 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1862271114 = nimCopy(result_1862271114, {kind: 0, value: nimCopy(null, valueInHEX60gensym2_1862271111, NTI33554439), tail: nimCopy(null, tailInHEX60gensym2_1862271112, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym2_1862271110, NTI33554439), expected: []}, NTI1862271108);

  return result_1862271114;

}

function failImpl_1862271137(inputInHEX60gensym2_1862271138, expectedInHEX60gensym2_1862271139, tailInHEX60gensym2_1862271140) {
  var result_1862271142 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1862271142 = nimCopy(result_1862271142, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym2_1862271139, NTI1862271142), tail: nimCopy(null, tailInHEX60gensym2_1862271140, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym2_1862271138, NTI33554439), value: []}, NTI1862271108);

  return result_1862271142;

}
      expect_1862271088 = nimCopy(null, expect_1862271088, NTI33554439);
      
function HEX3Aanonymous_1862271145(input_1862271146) {
        var result_1862271148 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1862271149 = succeedImpl_1862271109;
          var fail_1862271150 = failImpl_1862271137;
          if (nsuStartsWith(input_1862271146, expect_1862271088)) {
          result_1862271148 = nimCopy(result_1862271148, succeed_1862271149(input_1862271146, expect_1862271088, HEX5BHEX5D_939527322(input_1862271146, HEX2EHEX2E_872415312((expect_1862271088).length, 1))), NTI1862271108);
          break BeforeRet;
          }
          
          result_1862271148 = nimCopy(result_1862271148, fail_1862271150(input_1862271146, [nsuFormatSingleElem(makeNimstrLit("\'$1\'"), expect_1862271088)], input_1862271146), NTI1862271108);
        } while (false);

        return result_1862271148;

      }

  var result_1862271098 = null;

    Label1: do {
    } while (false);
    result_1862271098 = {body: HEX3Aanonymous_1862271145};

  return result_1862271098;

}

function c_1862271209(expect_1862271210) {

function succeedImpl_1862271231(inputInHEX60gensym5_1862271232, valueInHEX60gensym5_1862271233, tailInHEX60gensym5_1862271234) {
  var result_1862271236 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862271236 = nimCopy(result_1862271236, {kind: 0, value: valueInHEX60gensym5_1862271233, tail: nimCopy(null, tailInHEX60gensym5_1862271234, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym5_1862271232, NTI33554439), expected: []}, NTI1862271206);

  return result_1862271236;

}

function failImpl_1862271250(inputInHEX60gensym5_1862271251, expectedInHEX60gensym5_1862271252, tailInHEX60gensym5_1862271253) {
  var result_1862271255 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1862271255 = nimCopy(result_1862271255, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym5_1862271252, NTI1862271234), tail: nimCopy(null, tailInHEX60gensym5_1862271253, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym5_1862271251, NTI33554439), value: 0}, NTI1862271206);

  return result_1862271255;

}
      
function HEX3Aanonymous_1862271258(input_1862271259) {
            var Temporary1;

        var result_1862271261 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1862271262 = succeedImpl_1862271231;
          var fail_1862271263 = failImpl_1862271250;
            if (!(0 < (input_1862271259).length)) Temporary1 = false; else {              Temporary1 = (input_1862271259[chckIndx(0, 0, (input_1862271259).length - 1)] == expect_1862271210);            }          if (Temporary1) {
          result_1862271261 = nimCopy(result_1862271261, succeed_1862271262(input_1862271259, expect_1862271210, HEX5BHEX5D_939527322(input_1862271259, HEX2EHEX2E_872415312(1, 1))), NTI1862271206);
          break BeforeRet;
          }
          
          result_1862271261 = nimCopy(result_1862271261, fail_1862271263(input_1862271259, [nsuFormatSingleElem(makeNimstrLit("\'$1\'"), nimCharToStr(expect_1862271210))], input_1862271259), NTI1862271206);
        } while (false);

        return result_1862271261;

      }

  var result_1862271220 = null;

    Label1: do {
    } while (false);
    result_1862271220 = {body: HEX3Aanonymous_1862271258};

  return result_1862271220;

}

function map_1811945141(s_1811945144, op_1811945146) {
  var result_1811945147 = [];

    result_1811945147 = new Array(chckRange((s_1811945144).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1811945144).length, 0, 2147483647) ; ++i) { result_1811945147[i] = null; }    Label1: do {
      var i_1811945162 = 0;
      var colontmp__1795162406 = 0;
      colontmp__1795162406 = (s_1811945144).length;
      var i_1795162407 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162407 < colontmp__1795162406)) break Label3;
            i_1811945162 = i_1795162407;
            result_1811945147[chckIndx(i_1811945162, 0, (result_1811945147).length - 1)] = op_1811945146(s_1811945144[chckIndx(i_1811945162, 0, (s_1811945144).length - 1)]);
            i_1795162407 = addInt(i_1795162407, 1);
          }
      } while (false);
    } while (false);

  return result_1811945147;

}

function map_1811945029(a_1811945032, fn_1811945034) {

function succeedImpl_1811945046(inputInHEX60gensym96_1811945047, valueInHEX60gensym96_1811945048, tailInHEX60gensym96_1811945049) {
  var result_1811945051 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811945051 = nimCopy(result_1811945051, {kind: 0, value: nimCopy(null, valueInHEX60gensym96_1811945048, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym96_1811945049, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym96_1811945047, NTI33554439), expected: []}, NTI1811941261);

  return result_1811945051;

}

function failImpl_1811945053(inputInHEX60gensym96_1811945054, expectedInHEX60gensym96_1811945055, tailInHEX60gensym96_1811945056) {
  var result_1811945058 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811945058 = nimCopy(result_1811945058, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym96_1811945055, NTI1811943622), tail: nimCopy(null, tailInHEX60gensym96_1811945056, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym96_1811945054, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811945058;

}
      
function HEX3Aanonymous_1811945061(input_1811945062) {
            var Temporary2;
          var Temporary3;

        var result_1811945064 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811945065 = succeedImpl_1811945046;
          var fail_1811945066 = failImpl_1811945053;
          Label1: do {
            var tempHEX60gensym24_1811945079 = parse_1811941132(a_1811945032, input_1811945062);
            if ((tempHEX60gensym24_1811945079.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811945079;
            if (ConstSet80[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811945064 = nimCopy(result_1811945064, {kind: 1, fromInput: nimCopy(null, input_1811945062, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811945079.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811945085 = nimCopy(null, tempHEX60gensym24_1811945079, NTI1862271108);
          var Temporary3 = result1_1811945085;
          if (ConstSet81[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811945064 = nimCopy(result_1811945064, succeed_1811945065(input_1811945062, fn_1811945034(Temporary3.value), result1_1811945085.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811945064;

      }

  var result_1811945035 = null;

    Label1: do {
    } while (false);
    result_1811945035 = {body: HEX3Aanonymous_1811945061};

  return result_1811945035;

}

function HEX3CHEX3C_1811944915(a_1811944918, b_1811944919) {

function succeedImpl_1811944931(inputInHEX60gensym94_1811944932, valueInHEX60gensym94_1811944933, tailInHEX60gensym94_1811944934) {
  var result_1811944936 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811944936 = nimCopy(result_1811944936, {kind: 0, value: nimCopy(null, valueInHEX60gensym94_1811944933, NTI33554439), tail: nimCopy(null, tailInHEX60gensym94_1811944934, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym94_1811944932, NTI33554439), expected: []}, NTI1862271108);

  return result_1811944936;

}

function failImpl_1811944938(inputInHEX60gensym94_1811944939, expectedInHEX60gensym94_1811944940, tailInHEX60gensym94_1811944941) {
  var result_1811944943 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811944943 = nimCopy(result_1811944943, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym94_1811944940, NTI1811943536), tail: nimCopy(null, tailInHEX60gensym94_1811944941, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym94_1811944939, NTI33554439), value: []}, NTI1862271108);

  return result_1811944943;

}
      
function HEX3Aanonymous_1811944946(input_1811944947) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811944949 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811944950 = succeedImpl_1811944931;
          var fail_1811944951 = failImpl_1811944938;
          Label1: do {
            var tempHEX60gensym30_1811944964 = parse_1811941132(a_1811944918, input_1811944947);
            if ((tempHEX60gensym30_1811944964.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_1811944964;
            if (ConstSet82[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811944949 = nimCopy(result_1811944949, {kind: 1, fromInput: nimCopy(null, input_1811944947, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym30_1811944964.tail, NTI33554439), value: []}, NTI1862271108);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811944970 = nimCopy(null, tempHEX60gensym30_1811944964, NTI1862271108);
          Label3: do {
            var tempHEX60gensym32_1811944983 = parse_1862271905(b_1811944919, result1_1811944970.tail);
            if ((tempHEX60gensym32_1811944983.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_1811944983;
            if (ConstSet83[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811944949 = nimCopy(result_1811944949, {kind: 1, fromInput: nimCopy(null, input_1811944947, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym32_1811944983.tail, NTI33554439), value: []}, NTI1862271108);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811944989 = nimCopy(null, tempHEX60gensym32_1811944983, NTI1862271206);
          var Temporary5 = result1_1811944970;
          if (ConstSet84[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811944949 = nimCopy(result_1811944949, succeed_1811944950(input_1811944947, Temporary5.value, result2_1811944989.tail), NTI1862271108);
          break BeforeRet;
        } while (false);

        return result_1811944949;

      }

  var result_1811944920 = null;

    Label1: do {
    } while (false);
    result_1811944920 = {body: HEX3Aanonymous_1811944946};

  return result_1811944920;

}

function HEX21_1811944858(a_1811944860) {

function succeedImpl_1811944872(inputInHEX60gensym93_1811944873, valueInHEX60gensym93_1811944874, tailInHEX60gensym93_1811944875) {
  var result_1811944877 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811944877 = nimCopy(result_1811944877, {kind: 0, value: valueInHEX60gensym93_1811944874, tail: nimCopy(null, tailInHEX60gensym93_1811944875, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym93_1811944873, NTI33554439), expected: []}, NTI1862271206);

  return result_1811944877;

}

function failImpl_1811944879(inputInHEX60gensym93_1811944880, expectedInHEX60gensym93_1811944881, tailInHEX60gensym93_1811944882) {
  var result_1811944884 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811944884 = nimCopy(result_1811944884, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym93_1811944881, NTI1811943491), tail: nimCopy(null, tailInHEX60gensym93_1811944882, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym93_1811944880, NTI33554439), value: 0}, NTI1862271206);

  return result_1811944884;

}
      
function HEX3Aanonymous_1811944887(input_1811944888) {
        var result_1811944890 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811944891 = succeedImpl_1811944872;
          var fail_1811944892 = failImpl_1811944879;
          var result1_1811944905 = parse_1862271905(a_1811944860, input_1811944888);
          switch (result1_1811944905.kind) {
          case 0:
            result_1811944890 = nimCopy(result_1811944890, fail_1811944892(input_1811944888, [makeNimstrLit("successful negative lookahead")], input_1811944888), NTI1862271206);
            break BeforeRet;
            break;
          case 1:
            result_1811944890 = nimCopy(result_1811944890, succeed_1811944891(input_1811944888, 0, input_1811944888), NTI1862271206);
            break BeforeRet;
            break;
          }
        } while (false);

        return result_1811944890;

      }

  var result_1811944861 = null;

    Label1: do {
    } while (false);
    result_1811944861 = {body: HEX3Aanonymous_1811944887};

  return result_1811944861;

}

function validate_1811946791(p_1811946793, fn_1811946795, expected_1811946796) {

function succeedImpl_1811946808(inputInHEX60gensym129_1811946809, valueInHEX60gensym129_1811946810, tailInHEX60gensym129_1811946811) {
  var result_1811946813 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946813 = nimCopy(result_1811946813, {kind: 0, value: nimCopy(null, valueInHEX60gensym129_1811946810, NTI33554439), tail: nimCopy(null, tailInHEX60gensym129_1811946811, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym129_1811946809, NTI33554439), expected: []}, NTI1862271108);

  return result_1811946813;

}

function failImpl_1811946815(inputInHEX60gensym129_1811946816, expectedInHEX60gensym129_1811946817, tailInHEX60gensym129_1811946818) {
  var result_1811946820 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946820 = nimCopy(result_1811946820, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym129_1811946817, NTI1811945049), tail: nimCopy(null, tailInHEX60gensym129_1811946818, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym129_1811946816, NTI33554439), value: []}, NTI1862271108);

  return result_1811946820;

}
      expected_1811946796 = nimCopy(null, expected_1811946796, NTI33554439);
      
function HEX3Aanonymous_1811946823(input_1811946824) {
              var Temporary1;

        var result_1811946826 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811946827 = succeedImpl_1811946808;
          var fail_1811946828 = failImpl_1811946815;
          var result1_1811946841 = parse_1811941132(p_1811946793, input_1811946824);
          switch (result1_1811946841.kind) {
          case 1:
            result_1811946826 = nimCopy(result_1811946826, result1_1811946841, NTI1862271108);
            break BeforeRet;
            break;
          case 0:
              var Temporary1 = result1_1811946841;
              if (ConstSet85[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
            if (fn_1811946795(Temporary1.value)) {
            result_1811946826 = nimCopy(result_1811946826, result1_1811946841, NTI1862271108);
            break BeforeRet;
            }
            
            result_1811946826 = nimCopy(result_1811946826, fail_1811946828(input_1811946824, [nimCopy(null, expected_1811946796, NTI33554439)], input_1811946824), NTI1862271108);
            break BeforeRet;
            break;
          }
        } while (false);

        return result_1811946826;

      }

  var result_1811946797 = null;

    Label1: do {
    } while (false);
    result_1811946797 = {body: HEX3Aanonymous_1811946823};

  return result_1811946797;

}

function parse_1811945698(p_1811945700, input_1811945701) {
  var result_1811945702 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811945700.body == null)) {
    result_1811945702 = nimCopy(result_1811945702, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811945701, NTI33554439), fromInput: nimCopy(null, input_1811945701, NTI33554439), value: []}, NTI1811943724);
    break BeforeRet;
    }
    
    result_1811945702 = nimCopy(result_1811945702, p_1811945700.body(input_1811945701), NTI1811943724);
  } while (false);

  return result_1811945702;

}

function map_1811946657(a_1811946660, fn_1811946662) {

function succeedImpl_1811946674(inputInHEX60gensym127_1811946675, valueInHEX60gensym127_1811946676, tailInHEX60gensym127_1811946677) {
  var result_1811946679 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946679 = nimCopy(result_1811946679, {kind: 0, value: nimCopy(null, valueInHEX60gensym127_1811946676, NTI33554439), tail: nimCopy(null, tailInHEX60gensym127_1811946677, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym127_1811946675, NTI33554439), expected: []}, NTI1862271108);

  return result_1811946679;

}

function failImpl_1811946681(inputInHEX60gensym127_1811946682, expectedInHEX60gensym127_1811946683, tailInHEX60gensym127_1811946684) {
  var result_1811946686 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946686 = nimCopy(result_1811946686, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym127_1811946683, NTI1811944968), tail: nimCopy(null, tailInHEX60gensym127_1811946684, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym127_1811946682, NTI33554439), value: []}, NTI1862271108);

  return result_1811946686;

}
      
function HEX3Aanonymous_1811946689(input_1811946690) {
            var Temporary2;
          var Temporary3;

        var result_1811946692 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811946693 = succeedImpl_1811946674;
          var fail_1811946694 = failImpl_1811946681;
          Label1: do {
            var tempHEX60gensym24_1811946707 = parse_1811945698(a_1811946660, input_1811946690);
            if ((tempHEX60gensym24_1811946707.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811946707;
            if (ConstSet86[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811946692 = nimCopy(result_1811946692, {kind: 1, fromInput: nimCopy(null, input_1811946690, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811946707.tail, NTI33554439), value: []}, NTI1862271108);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811946713 = nimCopy(null, tempHEX60gensym24_1811946707, NTI1811943724);
          var Temporary3 = result1_1811946713;
          if (ConstSet87[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811946692 = nimCopy(result_1811946692, succeed_1811946693(input_1811946690, fn_1811946662(Temporary3.value), result1_1811946713.tail), NTI1862271108);
          break BeforeRet;
        } while (false);

        return result_1811946692;

      }

  var result_1811946663 = null;

    Label1: do {
    } while (false);
    result_1811946663 = {body: HEX3Aanonymous_1811946689};

  return result_1811946663;

}

function HEX3EHEX3E_1811946521(a_1811946524, b_1811946525) {

function succeedImpl_1811946537(inputInHEX60gensym126_1811946538, valueInHEX60gensym126_1811946539, tailInHEX60gensym126_1811946540) {
  var result_1811946542 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946542 = nimCopy(result_1811946542, {kind: 0, value: nimCopy(null, valueInHEX60gensym126_1811946539, NTI1811943718), tail: nimCopy(null, tailInHEX60gensym126_1811946540, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym126_1811946538, NTI33554439), expected: []}, NTI1811943724);

  return result_1811946542;

}

function failImpl_1811946544(inputInHEX60gensym126_1811946545, expectedInHEX60gensym126_1811946546, tailInHEX60gensym126_1811946547) {
  var result_1811946549 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946549 = nimCopy(result_1811946549, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym126_1811946546, NTI1811944869), tail: nimCopy(null, tailInHEX60gensym126_1811946547, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym126_1811946545, NTI33554439), value: []}, NTI1811943724);

  return result_1811946549;

}
      
function HEX3Aanonymous_1811946552(input_1811946553) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811946555 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811946556 = succeedImpl_1811946537;
          var fail_1811946557 = failImpl_1811946544;
          Label1: do {
            var tempHEX60gensym34_1811946570 = parse_1862271905(a_1811946524, input_1811946553);
            if ((tempHEX60gensym34_1811946570.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811946570;
            if (ConstSet88[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811946555 = nimCopy(result_1811946555, {kind: 1, fromInput: nimCopy(null, input_1811946553, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811946570.tail, NTI33554439), value: []}, NTI1811943724);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811946576 = nimCopy(null, tempHEX60gensym34_1811946570, NTI1862271206);
          Label3: do {
            var tempHEX60gensym36_1811946589 = parse_1811945698(b_1811946525, result1_1811946576.tail);
            if ((tempHEX60gensym36_1811946589.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811946589;
            if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811946555 = nimCopy(result_1811946555, {kind: 1, fromInput: nimCopy(null, input_1811946553, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811946589.tail, NTI33554439), value: []}, NTI1811943724);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811946595 = nimCopy(null, tempHEX60gensym36_1811946589, NTI1811943724);
          var Temporary5 = result2_1811946595;
          if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811946555 = nimCopy(result_1811946555, succeed_1811946556(input_1811946553, Temporary5.value, result2_1811946595.tail), NTI1811943724);
          break BeforeRet;
        } while (false);

        return result_1811946555;

      }

  var result_1811946526 = null;

    Label1: do {
    } while (false);
    result_1811946526 = {body: HEX3Aanonymous_1811946552};

  return result_1811946526;

}

function parse_1811946230(p_1811946232, input_1811946233) {
  var result_1811946234 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

  BeforeRet: do {
    if ((p_1811946232.body == null)) {
    result_1811946234 = nimCopy(result_1811946234, {kind: 1, expected: [makeNimstrLit("forward-declared parser to be initialized with .become(Parser)")], tail: nimCopy(null, input_1811946233, NTI33554439), fromInput: nimCopy(null, input_1811946233, NTI33554439), value: []}, NTI1811944202);
    break BeforeRet;
    }
    
    result_1811946234 = nimCopy(result_1811946234, p_1811946232.body(input_1811946233), NTI1811944202);
  } while (false);

  return result_1811946234;

}

function map_1811946456(a_1811946459, fn_1811946461) {

function succeedImpl_1811946473(inputInHEX60gensym125_1811946474, valueInHEX60gensym125_1811946475, tailInHEX60gensym125_1811946476) {
  var result_1811946478 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946478 = nimCopy(result_1811946478, {kind: 0, value: nimCopy(null, valueInHEX60gensym125_1811946475, NTI1811944720), tail: nimCopy(null, tailInHEX60gensym125_1811946476, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym125_1811946474, NTI33554439), expected: []}, NTI1811943724);

  return result_1811946478;

}

function failImpl_1811946480(inputInHEX60gensym125_1811946481, expectedInHEX60gensym125_1811946482, tailInHEX60gensym125_1811946483) {
  var result_1811946485 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946485 = nimCopy(result_1811946485, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym125_1811946482, NTI1811944822), tail: nimCopy(null, tailInHEX60gensym125_1811946483, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym125_1811946481, NTI33554439), value: []}, NTI1811943724);

  return result_1811946485;

}
      
function HEX3Aanonymous_1811946488(input_1811946489) {
            var Temporary2;
          var Temporary3;

        var result_1811946491 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811946492 = succeedImpl_1811946473;
          var fail_1811946493 = failImpl_1811946480;
          Label1: do {
            var tempHEX60gensym24_1811946506 = parse_1811946230(a_1811946459, input_1811946489);
            if ((tempHEX60gensym24_1811946506.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811946506;
            if (ConstSet91[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811946491 = nimCopy(result_1811946491, {kind: 1, fromInput: nimCopy(null, input_1811946489, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811946506.tail, NTI33554439), value: []}, NTI1811943724);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811946512 = nimCopy(null, tempHEX60gensym24_1811946506, NTI1811944202);
          var Temporary3 = result1_1811946512;
          if (ConstSet92[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811946491 = nimCopy(result_1811946491, succeed_1811946492(input_1811946489, fn_1811946461(Temporary3.value), result1_1811946512.tail), NTI1811943724);
          break BeforeRet;
        } while (false);

        return result_1811946491;

      }

  var result_1811946462 = null;

    Label1: do {
    } while (false);
    result_1811946462 = {body: HEX3Aanonymous_1811946488};

  return result_1811946462;

}

function HEX26_1811946272(x_1811946274, y_1811946275) {
  var result_1811946276 = [];

    result_1811946276 = new Array(chckRange(addInt((x_1811946274).length, (y_1811946275).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1811946274).length, (y_1811946275).length), 0, 2147483647) ; ++i) { result_1811946276[i] = []; }    Label1: do {
      var i_1811946295 = 0;
      var colontmp__1795162428 = 0;
      colontmp__1795162428 = subInt((x_1811946274).length, 1);
      var res_1795162429 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162429 <= colontmp__1795162428)) break Label3;
            i_1811946295 = res_1795162429;
            result_1811946276[chckIndx(i_1811946295, 0, (result_1811946276).length - 1)] = nimCopy(null, x_1811946274[chckIndx(i_1811946295, 0, (x_1811946274).length - 1)], NTI1811943718);
            res_1795162429 = addInt(res_1795162429, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1811946303 = 0;
      var colontmp__1795162432 = 0;
      colontmp__1795162432 = subInt((y_1811946275).length, 1);
      var res_1795162433 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_1795162433 <= colontmp__1795162432)) break Label6;
            i_1811946303 = res_1795162433;
            result_1811946276[chckIndx(addInt(i_1811946303, (x_1811946274).length), 0, (result_1811946276).length - 1)] = nimCopy(null, y_1811946275[chckIndx(i_1811946303, 0, (y_1811946275).length - 1)], NTI1811943718);
            res_1795162433 = addInt(res_1795162433, 1);
          }
      } while (false);
    } while (false);

  return result_1811946276;

}

function HEX26_1811946177(a_1811946182, b_1811946186) {

function succeedImpl_1811946201(inputInHEX60gensym119_1811946202, valueInHEX60gensym119_1811946203, tailInHEX60gensym119_1811946204) {
  var result_1811946206 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946206 = nimCopy(result_1811946206, {kind: 0, value: nimCopy(null, valueInHEX60gensym119_1811946203, NTI1811944602), tail: nimCopy(null, tailInHEX60gensym119_1811946204, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym119_1811946202, NTI33554439), expected: []}, NTI1811944202);

  return result_1811946206;

}

function failImpl_1811946208(inputInHEX60gensym119_1811946209, expectedInHEX60gensym119_1811946210, tailInHEX60gensym119_1811946211) {
  var result_1811946213 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946213 = nimCopy(result_1811946213, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym119_1811946210, NTI1811944608), tail: nimCopy(null, tailInHEX60gensym119_1811946211, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym119_1811946209, NTI33554439), value: []}, NTI1811944202);

  return result_1811946213;

}
      
function HEX3Aanonymous_1811946216(input_1811946217) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_1811946219 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811946220 = succeedImpl_1811946201;
          var fail_1811946221 = failImpl_1811946208;
          Label1: do {
            var tempHEX60gensym26_1811946246 = parse_1811946230(a_1811946182, input_1811946217);
            if ((tempHEX60gensym26_1811946246.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_1811946246;
            if (ConstSet93[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811946219 = nimCopy(result_1811946219, {kind: 1, fromInput: nimCopy(null, input_1811946217, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym26_1811946246.tail, NTI33554439), value: []}, NTI1811944202);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811946252 = nimCopy(null, tempHEX60gensym26_1811946246, NTI1811944202);
          Label3: do {
            var tempHEX60gensym28_1811946265 = parse_1811946230(b_1811946186, result1_1811946252.tail);
            if ((tempHEX60gensym28_1811946265.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_1811946265;
            if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811946219 = nimCopy(result_1811946219, {kind: 1, fromInput: nimCopy(null, input_1811946217, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym28_1811946265.tail, NTI33554439), value: []}, NTI1811944202);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811946271 = nimCopy(null, tempHEX60gensym28_1811946265, NTI1811944202);
          var Temporary5 = result1_1811946252;
          if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          var Temporary6 = result2_1811946271;
          if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1862270997)); }
          result_1811946219 = nimCopy(result_1811946219, succeed_1811946220(input_1811946217, HEX26_1811946272(Temporary5.value, Temporary6.value), result2_1811946271.tail), NTI1811944202);
          break BeforeRet;
        } while (false);

        return result_1811946219;

      }

  var result_1811946190 = null;

    Label1: do {
    } while (false);
    result_1811946190 = {body: HEX3Aanonymous_1811946216};

  return result_1811946190;

}

function map_1811945932(a_1811945935, fn_1811945937) {

function succeedImpl_1811945949(inputInHEX60gensym115_1811945950, valueInHEX60gensym115_1811945951, tailInHEX60gensym115_1811945952) {
  var result_1811945954 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945954 = nimCopy(result_1811945954, {kind: 0, value: nimCopy(null, valueInHEX60gensym115_1811945951, NTI1811944311), tail: nimCopy(null, tailInHEX60gensym115_1811945952, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym115_1811945950, NTI33554439), expected: []}, NTI1811944202);

  return result_1811945954;

}

function failImpl_1811945956(inputInHEX60gensym115_1811945957, expectedInHEX60gensym115_1811945958, tailInHEX60gensym115_1811945959) {
  var result_1811945961 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945961 = nimCopy(result_1811945961, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym115_1811945958, NTI1811944362), tail: nimCopy(null, tailInHEX60gensym115_1811945959, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym115_1811945957, NTI33554439), value: []}, NTI1811944202);

  return result_1811945961;

}
      
function HEX3Aanonymous_1811945964(input_1811945965) {
            var Temporary2;
          var Temporary3;

        var result_1811945967 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811945968 = succeedImpl_1811945949;
          var fail_1811945969 = failImpl_1811945956;
          Label1: do {
            var tempHEX60gensym24_1811945982 = parse_1811945698(a_1811945935, input_1811945965);
            if ((tempHEX60gensym24_1811945982.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811945982;
            if (ConstSet97[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811945967 = nimCopy(result_1811945967, {kind: 1, fromInput: nimCopy(null, input_1811945965, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811945982.tail, NTI33554439), value: []}, NTI1811944202);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811945988 = nimCopy(null, tempHEX60gensym24_1811945982, NTI1811943724);
          var Temporary3 = result1_1811945988;
          if (ConstSet98[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811945967 = nimCopy(result_1811945967, succeed_1811945968(input_1811945965, fn_1811945937(Temporary3.value), result1_1811945988.tail), NTI1811944202);
          break BeforeRet;
        } while (false);

        return result_1811945967;

      }

  var result_1811945938 = null;

    Label1: do {
    } while (false);
    result_1811945938 = {body: HEX3Aanonymous_1811945964};

  return result_1811945938;

}

function nop_1811945247() {

function succeedImpl_1811945260(inputInHEX60gensym105_1811945261, valueInHEX60gensym105_1811945262, tailInHEX60gensym105_1811945263) {
  var result_1811945265 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945265 = nimCopy(result_1811945265, {kind: 0, value: nimCopy(null, valueInHEX60gensym105_1811945262, NTI1811943767), tail: nimCopy(null, tailInHEX60gensym105_1811945263, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym105_1811945261, NTI33554439), expected: []}, NTI1811943724);

  return result_1811945265;

}

function failImpl_1811945288(inputInHEX60gensym105_1811945289, expectedInHEX60gensym105_1811945290, tailInHEX60gensym105_1811945291) {
  var result_1811945293 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945293 = nimCopy(result_1811945293, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym105_1811945290, NTI1811943800), tail: nimCopy(null, tailInHEX60gensym105_1811945291, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym105_1811945289, NTI33554439), value: []}, NTI1811943724);

  return result_1811945293;

}
      
function HEX3Aanonymous_1811945296(input_1811945297) {
        var result_1811945299 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_1811945300 = succeedImpl_1811945260;
          var fail_1811945301 = failImpl_1811945288;
          result_1811945299 = nimCopy(result_1811945299, succeed_1811945300(input_1811945297, [], input_1811945297), NTI1811943724);

        return result_1811945299;

      }

  var result_1811945249 = null;

    Label1: do {
    } while (false);
    result_1811945249 = {body: HEX3Aanonymous_1811945296};

  return result_1811945249;

}

function map_1811945418(a_1811945421, fn_1811945423) {

function succeedImpl_1811945435(inputInHEX60gensym107_1811945436, valueInHEX60gensym107_1811945437, tailInHEX60gensym107_1811945438) {
  var result_1811945440 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945440 = nimCopy(result_1811945440, {kind: 0, value: nimCopy(null, valueInHEX60gensym107_1811945437, NTI1811943869), tail: nimCopy(null, tailInHEX60gensym107_1811945438, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym107_1811945436, NTI33554439), expected: []}, NTI1811943724);

  return result_1811945440;

}

function failImpl_1811945442(inputInHEX60gensym107_1811945443, expectedInHEX60gensym107_1811945444, tailInHEX60gensym107_1811945445) {
  var result_1811945447 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945447 = nimCopy(result_1811945447, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym107_1811945444, NTI1811943928), tail: nimCopy(null, tailInHEX60gensym107_1811945445, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym107_1811945443, NTI33554439), value: []}, NTI1811943724);

  return result_1811945447;

}
      
function HEX3Aanonymous_1811945450(input_1811945451) {
            var Temporary2;
          var Temporary3;

        var result_1811945453 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811945454 = succeedImpl_1811945435;
          var fail_1811945455 = failImpl_1811945442;
          Label1: do {
            var tempHEX60gensym24_1811945468 = parse_1862271905(a_1811945421, input_1811945451);
            if ((tempHEX60gensym24_1811945468.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811945468;
            if (ConstSet99[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811945453 = nimCopy(result_1811945453, {kind: 1, fromInput: nimCopy(null, input_1811945451, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811945468.tail, NTI33554439), value: []}, NTI1811943724);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811945474 = nimCopy(null, tempHEX60gensym24_1811945468, NTI1862271206);
          var Temporary3 = result1_1811945474;
          if (ConstSet100[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811945453 = nimCopy(result_1811945453, succeed_1811945454(input_1811945451, fn_1811945423(Temporary3.value), result1_1811945474.tail), NTI1811943724);
          break BeforeRet;
        } while (false);

        return result_1811945453;

      }

  var result_1811945424 = null;

    Label1: do {
    } while (false);
    result_1811945424 = {body: HEX3Aanonymous_1811945450};

  return result_1811945424;

}

function HEX2A_1811945239(a_1811945241, n_1811945242) {
    var Temporary1;
      
function HEX3Aanonymous_1811945364(x_1811945393) {
        var result_1811945396 = [];

          result_1811945396 = nimCopy(null, [x_1811945393], NTI1811943869);

        return result_1811945396;

      }

function succeedImpl_1811945485(inputInHEX60gensym108_1811945486, valueInHEX60gensym108_1811945487, tailInHEX60gensym108_1811945488) {
  var result_1811945490 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945490 = nimCopy(result_1811945490, {kind: 0, value: nimCopy(null, valueInHEX60gensym108_1811945487, NTI1811943968), tail: nimCopy(null, tailInHEX60gensym108_1811945488, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym108_1811945486, NTI33554439), expected: []}, NTI1811943724);

  return result_1811945490;

}

function failImpl_1811945492(inputInHEX60gensym108_1811945493, expectedInHEX60gensym108_1811945494, tailInHEX60gensym108_1811945495) {
  var result_1811945497 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945497 = nimCopy(result_1811945497, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym108_1811945494, NTI1811943974), tail: nimCopy(null, tailInHEX60gensym108_1811945495, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym108_1811945493, NTI33554439), value: []}, NTI1811943724);

  return result_1811945497;

}
        
function HEX3Aanonymous_1811945500(input_1811945501) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_1811945503 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: do {
            var succeed_1811945504 = succeedImpl_1811945485;
            var fail_1811945505 = failImpl_1811945492;
            Label1: do {
              var tempHEX60gensym38_1811945518 = parse_1862271905(a_1811945241, input_1811945501);
              if ((tempHEX60gensym38_1811945518.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_1811945518;
              if (ConstSet101[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
              result_1811945503 = nimCopy(result_1811945503, {kind: 1, fromInput: nimCopy(null, input_1811945501, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym38_1811945518.tail, NTI33554439), value: []}, NTI1811943724);
              break BeforeRet;
              }
              
            } while (false);
            var result1_1811945524 = nimCopy(null, tempHEX60gensym38_1811945518, NTI1862271206);
            var Temporary3 = result1_1811945524;
            if (ConstSet102[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
            var outputs_1811945529 = [Temporary3.value];
            var lastTail_1811945530 = nimCopy(null, result1_1811945524.tail, NTI33554439);
            Label4: do {
              var i_1811945536 = 0;
              var res_1795162441 = 2;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_1795162441 <= n_1811945242)) break Label6;
                    i_1811945536 = res_1795162441;
                    Label7: do {
                      var tempHEX60gensym40_1811945549 = parse_1862271905(a_1811945241, result1_1811945524.tail);
                      if ((tempHEX60gensym40_1811945549.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_1811945549;
                      if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1862270997)); }
                      result_1811945503 = nimCopy(result_1811945503, {kind: 1, fromInput: nimCopy(null, input_1811945501, NTI33554439), expected: nimCopy(null, Temporary8.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym40_1811945549.tail, NTI33554439), value: []}, NTI1811943724);
                      break BeforeRet;
                      }
                      
                    } while (false);
                    result1_1811945524 = nimCopy(result1_1811945524, tempHEX60gensym40_1811945549, NTI1862271206);
                    if (eqStrings(result1_1811945524.tail, lastTail_1811945530)) {
                    break Label4;
                    }
                    
                    lastTail_1811945530 = nimCopy(null, result1_1811945524.tail, NTI33554439);
                    var Temporary9 = result1_1811945524;
                    if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1862270997)); }
                    outputs_1811945529.push(Temporary9.value);;
                    res_1795162441 = addInt(res_1795162441, 1);
                  }
              } while (false);
            } while (false);
            result_1811945503 = nimCopy(result_1811945503, succeed_1811945504(input_1811945501, outputs_1811945529, result1_1811945524.tail), NTI1811943724);
          } while (false);

          return result_1811945503;

        }

  var result_1811945246 = null;

  BeforeRet: do {
    switch (n_1811945242) {
    case 0:
      result_1811945246 = nop_1811945247();
      break BeforeRet;
      break;
    case 1:
      result_1811945246 = map_1811945418(a_1811945241, HEX3Aanonymous_1811945364);
      break BeforeRet;
      break;
    default: 
      Label2: do {
      } while (false);
      Temporary1 = {body: HEX3Aanonymous_1811945500};
      break;
    }
    result_1811945246 = Temporary1;
  } while (false);

  return result_1811945246;

}

function nop_1811945769() {

function succeedImpl_1811945782(inputInHEX60gensym113_1811945783, valueInHEX60gensym113_1811945784, tailInHEX60gensym113_1811945785) {
  var result_1811945787 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945787 = nimCopy(result_1811945787, {kind: 0, value: nimCopy(null, valueInHEX60gensym113_1811945784, NTI1811944209), tail: nimCopy(null, tailInHEX60gensym113_1811945785, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym113_1811945783, NTI33554439), expected: []}, NTI1811944202);

  return result_1811945787;

}

function failImpl_1811945810(inputInHEX60gensym113_1811945811, expectedInHEX60gensym113_1811945812, tailInHEX60gensym113_1811945813) {
  var result_1811945815 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945815 = nimCopy(result_1811945815, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym113_1811945812, NTI1811944242), tail: nimCopy(null, tailInHEX60gensym113_1811945813, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym113_1811945811, NTI33554439), value: []}, NTI1811944202);

  return result_1811945815;

}
      
function HEX3Aanonymous_1811945818(input_1811945819) {
        var result_1811945821 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          var succeed_1811945822 = succeedImpl_1811945782;
          var fail_1811945823 = failImpl_1811945810;
          result_1811945821 = nimCopy(result_1811945821, succeed_1811945822(input_1811945819, [], input_1811945819), NTI1811944202);

        return result_1811945821;

      }

  var result_1811945771 = null;

    Label1: do {
    } while (false);
    result_1811945771 = {body: HEX3Aanonymous_1811945818};

  return result_1811945771;

}

function HEX2A_1811945756(a_1811945758, n_1811945759) {
    var Temporary1;
      
function HEX3Aanonymous_1811945886(x_1811945915) {
        var result_1811945918 = [];

          result_1811945918 = nimCopy(null, [nimCopy(null, x_1811945915, NTI1811943718)], NTI1811944311);

        return result_1811945918;

      }

function succeedImpl_1811945999(inputInHEX60gensym116_1811946000, valueInHEX60gensym116_1811946001, tailInHEX60gensym116_1811946002) {
  var result_1811946004 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946004 = nimCopy(result_1811946004, {kind: 0, value: nimCopy(null, valueInHEX60gensym116_1811946001, NTI1811944402), tail: nimCopy(null, tailInHEX60gensym116_1811946002, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym116_1811946000, NTI33554439), expected: []}, NTI1811944202);

  return result_1811946004;

}

function failImpl_1811946006(inputInHEX60gensym116_1811946007, expectedInHEX60gensym116_1811946008, tailInHEX60gensym116_1811946009) {
  var result_1811946011 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811946011 = nimCopy(result_1811946011, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym116_1811946008, NTI1811944408), tail: nimCopy(null, tailInHEX60gensym116_1811946009, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym116_1811946007, NTI33554439), value: []}, NTI1811944202);

  return result_1811946011;

}
        
function HEX3Aanonymous_1811946014(input_1811946015) {
              var Temporary2;
            var Temporary3;
                      var Temporary8;
                    var Temporary9;

          var result_1811946017 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

          BeforeRet: do {
            var succeed_1811946018 = succeedImpl_1811945999;
            var fail_1811946019 = failImpl_1811946006;
            Label1: do {
              var tempHEX60gensym38_1811946032 = parse_1811945698(a_1811945758, input_1811946015);
              if ((tempHEX60gensym38_1811946032.kind == 1)) {
              var Temporary2 = tempHEX60gensym38_1811946032;
              if (ConstSet105[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
              result_1811946017 = nimCopy(result_1811946017, {kind: 1, fromInput: nimCopy(null, input_1811946015, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym38_1811946032.tail, NTI33554439), value: []}, NTI1811944202);
              break BeforeRet;
              }
              
            } while (false);
            var result1_1811946038 = nimCopy(null, tempHEX60gensym38_1811946032, NTI1811943724);
            var Temporary3 = result1_1811946038;
            if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
            var outputs_1811946043 = [nimCopy(null, Temporary3.value, NTI1811943718)];
            var lastTail_1811946044 = nimCopy(null, result1_1811946038.tail, NTI33554439);
            Label4: do {
              var i_1811946050 = 0;
              var res_1795162450 = 2;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_1795162450 <= n_1811945759)) break Label6;
                    i_1811946050 = res_1795162450;
                    Label7: do {
                      var tempHEX60gensym40_1811946063 = parse_1811945698(a_1811945758, result1_1811946038.tail);
                      if ((tempHEX60gensym40_1811946063.kind == 1)) {
                      var Temporary8 = tempHEX60gensym40_1811946063;
                      if (ConstSet107[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1862270997)); }
                      result_1811946017 = nimCopy(result_1811946017, {kind: 1, fromInput: nimCopy(null, input_1811946015, NTI33554439), expected: nimCopy(null, Temporary8.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym40_1811946063.tail, NTI33554439), value: []}, NTI1811944202);
                      break BeforeRet;
                      }
                      
                    } while (false);
                    result1_1811946038 = nimCopy(result1_1811946038, tempHEX60gensym40_1811946063, NTI1811943724);
                    if (eqStrings(result1_1811946038.tail, lastTail_1811946044)) {
                    break Label4;
                    }
                    
                    lastTail_1811946044 = nimCopy(null, result1_1811946038.tail, NTI33554439);
                    var Temporary9 = result1_1811946038;
                    if (ConstSet108[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1862270997)); }
                    var Temporary10 = nimCopy(null, Temporary9.value, NTI1811943718);
                    outputs_1811946043.push(Temporary10);;
                    res_1795162450 = addInt(res_1795162450, 1);
                  }
              } while (false);
            } while (false);
            result_1811946017 = nimCopy(result_1811946017, succeed_1811946018(input_1811946015, outputs_1811946043, result1_1811946038.tail), NTI1811944202);
          } while (false);

          return result_1811946017;

        }

  var result_1811945768 = null;

  BeforeRet: do {
    switch (n_1811945759) {
    case 0:
      result_1811945768 = nop_1811945769();
      break BeforeRet;
      break;
    case 1:
      result_1811945768 = map_1811945932(a_1811945758, HEX3Aanonymous_1811945886);
      break BeforeRet;
      break;
    default: 
      Label2: do {
      } while (false);
      Temporary1 = {body: HEX3Aanonymous_1811946014};
      break;
    }
    result_1811945768 = Temporary1;
  } while (false);

  return result_1811945768;

}

function HEX7C_1811945654(a_1811945656, b_1811945657) {

function succeedImpl_1811945669(inputInHEX60gensym112_1811945670, valueInHEX60gensym112_1811945671, tailInHEX60gensym112_1811945672) {
  var result_1811945674 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945674 = nimCopy(result_1811945674, {kind: 0, value: nimCopy(null, valueInHEX60gensym112_1811945671, NTI1811943718), tail: nimCopy(null, tailInHEX60gensym112_1811945672, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym112_1811945670, NTI33554439), expected: []}, NTI1811943724);

  return result_1811945674;

}

function failImpl_1811945676(inputInHEX60gensym112_1811945677, expectedInHEX60gensym112_1811945678, tailInHEX60gensym112_1811945679) {
  var result_1811945681 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811945681 = nimCopy(result_1811945681, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym112_1811945678, NTI1811944146), tail: nimCopy(null, tailInHEX60gensym112_1811945679, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym112_1811945677, NTI33554439), value: []}, NTI1811943724);

  return result_1811945681;

}
      
function HEX3Aanonymous_1811945684(input_1811945685) {
          var Temporary1;
          var Temporary2;

        var result_1811945687 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811945688 = succeedImpl_1811945669;
          var fail_1811945689 = failImpl_1811945676;
          var result1_1811945714 = parse_1811945698(a_1811945656, input_1811945685);
          if ((result1_1811945714.kind == 0)) {
          result_1811945687 = nimCopy(result_1811945687, result1_1811945714, NTI1811943724);
          break BeforeRet;
          }
          
          var result2_1811945731 = parse_1811945698(b_1811945657, input_1811945685);
          if ((result2_1811945731.kind == 0)) {
          result_1811945687 = nimCopy(result_1811945687, result2_1811945731, NTI1811943724);
          break BeforeRet;
          }
          
          var Temporary1 = result1_1811945714;
          if (ConstSet109[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
          var Temporary2 = result2_1811945731;
          if (ConstSet110[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
          result_1811945687 = nimCopy(result_1811945687, fail_1811945689(input_1811945685, HEX26_1845493855(Temporary1.expected, Temporary2.expected), input_1811945685), NTI1811943724);
        } while (false);

        return result_1811945687;

      }

  var result_1811945658 = null;

    Label1: do {
    } while (false);
    result_1811945658 = {body: HEX3Aanonymous_1811945684};

  return result_1811945658;

}

function newSeq_1811946336(len_1811946338) {
  var result_1811946339 = [];

    result_1811946339 = new Array(len_1811946338); for (var i = 0 ; i < len_1811946338 ; ++i) { result_1811946339[i] = 0; }
  return result_1811946339;

}

function HEX26_1811946371(x_1811946373, y_1811946374) {
  var result_1811946375 = [];

    result_1811946375 = new Array(chckRange(addInt((x_1811946373).length, (y_1811946374).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1811946373).length, (y_1811946374).length), 0, 2147483647) ; ++i) { result_1811946375[i] = 0; }    Label1: do {
      var i_1811946394 = 0;
      var colontmp__1795162460 = 0;
      colontmp__1795162460 = subInt((x_1811946373).length, 1);
      var res_1795162461 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162461 <= colontmp__1795162460)) break Label3;
            i_1811946394 = res_1795162461;
            result_1811946375[chckIndx(i_1811946394, 0, (result_1811946375).length - 1)] = x_1811946373[chckIndx(i_1811946394, 0, (x_1811946373).length - 1)];
            res_1795162461 = addInt(res_1795162461, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_1811946402 = 0;
      var colontmp__1795162464 = 0;
      colontmp__1795162464 = subInt((y_1811946374).length, 1);
      var res_1795162465 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_1795162465 <= colontmp__1795162464)) break Label6;
            i_1811946402 = res_1795162465;
            result_1811946375[chckIndx(addInt(i_1811946402, (x_1811946373).length), 0, (result_1811946375).length - 1)] = y_1811946374[chckIndx(i_1811946402, 0, (y_1811946374).length - 1)];
            res_1795162465 = addInt(res_1795162465, 1);
          }
      } while (false);
    } while (false);

  return result_1811946375;

}

function join_1811946611(a_1811946613, sep_1811946614) {
  var result_1811946615 = [];

    result_1811946615 = nimCopy(null, [], NTI33554439);
    Label1: do {
      var i_1811946629 = 0;
      var x_1811946630 = 0;
      var i_1795162469 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162469 < (a_1811946613).length)) break Label3;
            i_1811946629 = i_1795162469;
            x_1811946630 = a_1811946613[chckIndx(i_1795162469, 0, (a_1811946613).length - 1)];
            if ((0 < i_1811946629)) {
            result_1811946615.push.apply(result_1811946615, sep_1811946614);;
            }
            
            result_1811946615.push.apply(result_1811946615, nimCharToStr(x_1811946630));;
            i_1795162469 = addInt(i_1795162469, 1);
          }
      } while (false);
    } while (false);

  return result_1811946615;

}

function imul_1056964898(a_1056964899, b_1056964900) {
  var result_1056964901 = 0;

    var mask_1056964902 = 65535;
    var aHi_1056964907 = ((a_1056964899 >>> 16) & mask_1056964902);
    var aLo_1056964908 = (a_1056964899 & mask_1056964902);
    var bHi_1056964913 = ((b_1056964900 >>> 16) & mask_1056964902);
    var bLo_1056964914 = (b_1056964900 & mask_1056964902);
    result_1056964901 = ((((aLo_1056964908 * bLo_1056964914) >>> 0) + (((((aHi_1056964907 * bLo_1056964914) >>> 0) + ((aLo_1056964908 * bHi_1056964913) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1056964901;

}

function rotl32_1056964919(x_1056964920, r_1056964921) {
  var result_1056964922 = 0;

    result_1056964922 = ((x_1056964920 << r_1056964921) | (x_1056964920 >>> subInt(32, r_1056964921)));

  return result_1056964922;

}

function murmurHash_1056964931(x_1056964932) {
  var result_1056964933 = 0;

  BeforeRet: do {
    var size_1056964942 = (x_1056964932).length;
    var stepSize_1056964943 = 4;
    var n_1056964944 = divInt(size_1056964942, stepSize_1056964943);
    var h1_1056964945 = 0;
    var i_1056964946 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1056964946 < mulInt(n_1056964944, stepSize_1056964943))) break Label2;
          var k1_1056964947 = 0;
          var j_1056964948 = stepSize_1056964943;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_1056964948)) break Label4;
                j_1056964948 = subInt(j_1056964948, 1);
                k1_1056964947 = ((k1_1056964947 << 8) | x_1056964932[chckIndx(addInt(i_1056964946, j_1056964948), 0, (x_1056964932).length - 1)]);
              }
          } while (false);
          i_1056964946 = addInt(i_1056964946, stepSize_1056964943);
          k1_1056964947 = imul_1056964898(k1_1056964947, 3432918353);
          k1_1056964947 = rotl32_1056964919(k1_1056964947, 15);
          k1_1056964947 = imul_1056964898(k1_1056964947, 461845907);
          h1_1056964945 = (h1_1056964945 ^ k1_1056964947);
          h1_1056964945 = rotl32_1056964919(h1_1056964945, 13);
          h1_1056964945 = ((((h1_1056964945 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_1056964965 = 0;
    var rem_1056964966 = modInt(size_1056964942, stepSize_1056964943);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_1056964966)) break Label6;
          rem_1056964966 = subInt(rem_1056964966, 1);
          k1_1056964965 = ((k1_1056964965 << 8) | x_1056964932[chckIndx(addInt(i_1056964946, rem_1056964966), 0, (x_1056964932).length - 1)]);
        }
    } while (false);
    k1_1056964965 = imul_1056964898(k1_1056964965, 3432918353);
    k1_1056964965 = rotl32_1056964919(k1_1056964965, 15);
    k1_1056964965 = imul_1056964898(k1_1056964965, 461845907);
    h1_1056964945 = (h1_1056964945 ^ k1_1056964965);
    h1_1056964945 = (h1_1056964945 ^ size_1056964942);
    h1_1056964945 = (h1_1056964945 ^ (h1_1056964945 >>> 16));
    h1_1056964945 = imul_1056964898(h1_1056964945, 2246822507);
    h1_1056964945 = (h1_1056964945 ^ (h1_1056964945 >>> 13));
    h1_1056964945 = imul_1056964898(h1_1056964945, 3266489909);
    h1_1056964945 = (h1_1056964945 ^ (h1_1056964945 >>> 16));
    result_1056964933 = (h1_1056964945 | 0);
    break BeforeRet;
  } while (false);

  return result_1056964933;

}

function hash_1056965030(x_1056965031) {
  var result_1056965032 = 0;

    result_1056965032 = murmurHash_1056964931((x_1056965031.slice(0, (x_1056965031).length - 1 + 1)));

  return result_1056965032;

}

function isFilled_1157627935(hcode_1157627936) {
  var result_1157627937 = false;

    result_1157627937 = !((hcode_1157627936 == 0));

  return result_1157627937;

}

function nextTry_1157627938(h_1157627939, maxHash_1157627940) {
  var result_1157627941 = 0;

    result_1157627941 = (addInt(h_1157627939, 1) & maxHash_1157627940);

  return result_1157627941;

}

function rawGet_1828718569(t_1828718572, key_1828718573, hc_1828718574, hc_1828718574_Idx) {
            var Temporary3;

  var result_1828718575 = 0;

  BeforeRet: do {
    hc_1828718574[hc_1828718574_Idx] = hash_1056965030(key_1828718573);
    if ((hc_1828718574[hc_1828718574_Idx] == 0)) {
    hc_1828718574[hc_1828718574_Idx] = 314159265;
    }
    
    if (((t_1828718572.data).length == 0)) {
    result_1828718575 = -1;
    break BeforeRet;
    }
    
    var h_1828718626 = (hc_1828718574[hc_1828718574_Idx] & (t_1828718572.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1828718572.data[chckIndx(h_1828718626, 0, (t_1828718572.data).length - 1)].Field0)) break Label2;
            if (!(t_1828718572.data[chckIndx(h_1828718626, 0, (t_1828718572.data).length - 1)].Field0 == hc_1828718574[hc_1828718574_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1828718572.data[chckIndx(h_1828718626, 0, (t_1828718572.data).length - 1)].Field1, key_1828718573);            }          if (Temporary3) {
          result_1828718575 = h_1828718626;
          break BeforeRet;
          }
          
          h_1828718626 = nextTry_1157627938(h_1828718626, (t_1828718572.data).length - 1);
        }
    } while (false);
    result_1828718575 = subInt(-1, h_1828718626);
  } while (false);

  return result_1828718575;

}

function hasKey_1811946777(t_1811946780, key_1811946781) {
  var result_1811946782 = false;

    var hc_1811946783 = [0];
    result_1811946782 = (0 <= rawGet_1828718569(t_1811946780, key_1811946781, hc_1811946783, 0));

  return result_1811946782;

}

function contains_1811946771(t_1811946774, key_1811946775) {
  var result_1811946776 = false;

  BeforeRet: do {
    result_1811946776 = hasKey_1811946777(t_1811946774, key_1811946775);
    break BeforeRet;
  } while (false);

  return result_1811946776;

}

function raiseKeyError_1308623158(key_1308623160) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_1308623160 || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1811946914(t_1811946917, key_1811946918) {
  var result_1811946919 = ({rows: [], baseline: 0, width: 0, flag: 0});

    var hcHEX60gensym20_1811946920 = [0];
    var indexHEX60gensym20_1811946927 = rawGet_1828718569(t_1811946917, key_1811946918, hcHEX60gensym20_1811946920, 0);
    if ((0 <= indexHEX60gensym20_1811946927)) {
    result_1811946919 = nimCopy(result_1811946919, t_1811946917.data[chckIndx(indexHEX60gensym20_1811946927, 0, (t_1811946917.data).length - 1)].Field2, NTI1845493764);
    }
    else {
    raiseKeyError_1308623158(key_1811946918);
    }
    

  return result_1811946919;

}

function map_1811947496(s_1811947499, op_1811947501) {
  var result_1811947502 = [];

    result_1811947502 = new Array(chckRange((s_1811947499).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1811947499).length, 0, 2147483647) ; ++i) { result_1811947502[i] = null; }    Label1: do {
      var i_1811947518 = 0;
      var colontmp__1795162476 = 0;
      colontmp__1795162476 = (s_1811947499).length;
      var i_1795162477 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162477 < colontmp__1795162476)) break Label3;
            i_1811947518 = i_1795162477;
            result_1811947502[chckIndx(i_1811947518, 0, (result_1811947502).length - 1)] = op_1811947501(s_1811947499[chckIndx(i_1811947518, 0, (s_1811947499).length - 1)]);
            i_1795162477 = addInt(i_1795162477, 1);
          }
      } while (false);
    } while (false);

  return result_1811947502;

}

function map_1811947430(a_1811947433, fn_1811947435) {

function succeedImpl_1811947447(inputInHEX60gensym139_1811947448, valueInHEX60gensym139_1811947449, tailInHEX60gensym139_1811947450) {
  var result_1811947452 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811947452 = nimCopy(result_1811947452, {kind: 0, value: nimCopy(null, valueInHEX60gensym139_1811947449, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym139_1811947450, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym139_1811947448, NTI33554439), expected: []}, NTI1811941261);

  return result_1811947452;

}

function failImpl_1811947454(inputInHEX60gensym139_1811947455, expectedInHEX60gensym139_1811947456, tailInHEX60gensym139_1811947457) {
  var result_1811947459 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811947459 = nimCopy(result_1811947459, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym139_1811947456, NTI1811945458), tail: nimCopy(null, tailInHEX60gensym139_1811947457, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym139_1811947455, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811947459;

}
      
function HEX3Aanonymous_1811947462(input_1811947463) {
            var Temporary2;
          var Temporary3;

        var result_1811947465 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811947466 = succeedImpl_1811947447;
          var fail_1811947467 = failImpl_1811947454;
          Label1: do {
            var tempHEX60gensym24_1811947480 = parse_1811942404(a_1811947433, input_1811947463);
            if ((tempHEX60gensym24_1811947480.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811947480;
            if (ConstSet111[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811947465 = nimCopy(result_1811947465, {kind: 1, fromInput: nimCopy(null, input_1811947463, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811947480.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811947486 = nimCopy(null, tempHEX60gensym24_1811947480, NTI1811941261);
          var Temporary3 = result1_1811947486;
          if (ConstSet112[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811947465 = nimCopy(result_1811947465, succeed_1811947466(input_1811947463, fn_1811947435(Temporary3.value), result1_1811947486.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811947465;

      }

  var result_1811947436 = null;

    Label1: do {
    } while (false);
    result_1811947436 = {body: HEX3Aanonymous_1811947462};

  return result_1811947436;

}

function HEX3EHEX3E_1811947308(a_1811947311, b_1811947312) {

function succeedImpl_1811947324(inputInHEX60gensym136_1811947325, valueInHEX60gensym136_1811947326, tailInHEX60gensym136_1811947327) {
  var result_1811947329 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811947329 = nimCopy(result_1811947329, {kind: 0, value: nimCopy(null, valueInHEX60gensym136_1811947326, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym136_1811947327, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym136_1811947325, NTI33554439), expected: []}, NTI1811941261);

  return result_1811947329;

}

function failImpl_1811947331(inputInHEX60gensym136_1811947332, expectedInHEX60gensym136_1811947333, tailInHEX60gensym136_1811947334) {
  var result_1811947336 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811947336 = nimCopy(result_1811947336, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym136_1811947333, NTI1811945355), tail: nimCopy(null, tailInHEX60gensym136_1811947334, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym136_1811947332, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811947336;

}
      
function HEX3Aanonymous_1811947339(input_1811947340) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811947342 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811947343 = succeedImpl_1811947324;
          var fail_1811947344 = failImpl_1811947331;
          Label1: do {
            var tempHEX60gensym34_1811947357 = parse_1811941370(a_1811947311, input_1811947340);
            if ((tempHEX60gensym34_1811947357.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811947357;
            if (ConstSet113[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811947342 = nimCopy(result_1811947342, {kind: 1, fromInput: nimCopy(null, input_1811947340, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811947357.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811947363 = nimCopy(null, tempHEX60gensym34_1811947357, NTI1811940170);
          Label3: do {
            var tempHEX60gensym36_1811947376 = parse_1811942404(b_1811947312, result1_1811947363.tail);
            if ((tempHEX60gensym36_1811947376.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811947376;
            if (ConstSet114[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811947342 = nimCopy(result_1811947342, {kind: 1, fromInput: nimCopy(null, input_1811947340, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811947376.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811947382 = nimCopy(null, tempHEX60gensym36_1811947376, NTI1811941261);
          var Temporary5 = result2_1811947382;
          if (ConstSet115[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811947342 = nimCopy(result_1811947342, succeed_1811947343(input_1811947340, Temporary5.value, result2_1811947382.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811947342;

      }

  var result_1811947313 = null;

    Label1: do {
    } while (false);
    result_1811947313 = {body: HEX3Aanonymous_1811947339};

  return result_1811947313;

}

function HEX3EHEX3E_1811947212(a_1811947215, b_1811947216) {

function succeedImpl_1811947228(inputInHEX60gensym135_1811947229, valueInHEX60gensym135_1811947230, tailInHEX60gensym135_1811947231) {
  var result_1811947233 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811947233 = nimCopy(result_1811947233, {kind: 0, value: valueInHEX60gensym135_1811947230, tail: nimCopy(null, tailInHEX60gensym135_1811947231, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym135_1811947229, NTI33554439), expected: []}, NTI1862271206);

  return result_1811947233;

}

function failImpl_1811947235(inputInHEX60gensym135_1811947236, expectedInHEX60gensym135_1811947237, tailInHEX60gensym135_1811947238) {
  var result_1811947240 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

    result_1811947240 = nimCopy(result_1811947240, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym135_1811947237, NTI1811945289), tail: nimCopy(null, tailInHEX60gensym135_1811947238, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym135_1811947236, NTI33554439), value: 0}, NTI1862271206);

  return result_1811947240;

}
      
function HEX3Aanonymous_1811947243(input_1811947244) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811947246 = ({kind: 0, value: 0, expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811947247 = succeedImpl_1811947228;
          var fail_1811947248 = failImpl_1811947235;
          Label1: do {
            var tempHEX60gensym34_1811947261 = parse_1811941132(a_1811947215, input_1811947244);
            if ((tempHEX60gensym34_1811947261.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811947261;
            if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811947246 = nimCopy(result_1811947246, {kind: 1, fromInput: nimCopy(null, input_1811947244, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811947261.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811947267 = nimCopy(null, tempHEX60gensym34_1811947261, NTI1862271108);
          Label3: do {
            var tempHEX60gensym36_1811947280 = parse_1862271905(b_1811947216, result1_1811947267.tail);
            if ((tempHEX60gensym36_1811947280.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811947280;
            if (ConstSet117[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811947246 = nimCopy(result_1811947246, {kind: 1, fromInput: nimCopy(null, input_1811947244, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811947280.tail, NTI33554439), value: 0}, NTI1862271206);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811947286 = nimCopy(null, tempHEX60gensym36_1811947280, NTI1862271206);
          var Temporary5 = result2_1811947286;
          if (ConstSet118[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811947246 = nimCopy(result_1811947246, succeed_1811947247(input_1811947244, Temporary5.value, result2_1811947286.tail), NTI1862271206);
          break BeforeRet;
        } while (false);

        return result_1811947246;

      }

  var result_1811947217 = null;

    Label1: do {
    } while (false);
    result_1811947217 = {body: HEX3Aanonymous_1811947243};

  return result_1811947217;

}

function row_1845493795(rect_1845493796) {
  var result_1845493797 = [];

    result_1845493797 = nimCopy(null, rect_1845493796.rows[chckIndx(0, 0, (rect_1845493796.rows).length - 1)], NTI33554439);

  return result_1845493797;

}

function nucRepeatRune(c_939530454, count_939530455) {
  var result_939530456 = [];

    var s_939530457 = HEX24_939524687(c_939530454);
    result_939530456 = nimCopy(null, mnewString(0), NTI33554439);
    Label1: do {
      var i_939530462 = 0;
      var colontmp__1795162500 = 0;
      colontmp__1795162500 = count_939530455;
      var i_1795162501 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162501 < colontmp__1795162500)) break Label3;
            i_939530462 = i_1795162501;
            result_939530456.push.apply(result_939530456, s_939530457);;
            i_1795162501 = addInt(i_1795162501, 1);
          }
      } while (false);
    } while (false);

  return result_939530456;

}

function center_1845494613(s_1845494614, width_1845494615, padding_1845494616) {
    var Temporary1;

  var result_1845494617 = [];

    var sLen_1845494618 = nucruneLen(s_1845494614);
    if ((width_1845494615 <= sLen_1845494618)) {
    Temporary1 = s_1845494614;
    }
    else {
      var diff_1845494619 = subInt(width_1845494615, sLen_1845494618);
      var left_1845494620 = divInt(diff_1845494619, 2);
      var right_1845494621 = subInt(diff_1845494619, left_1845494620);
    Temporary1 = (nucRepeatRune(padding_1845494616, chckRange(left_1845494620, 0, 2147483647)) || []).concat(s_1845494614 || [],nucRepeatRune(padding_1845494616, chckRange(right_1845494621, 0, 2147483647)) || []);
    }
    
    result_1845494617 = nimCopy(null, Temporary1, NTI33554439);

  return result_1845494617;

}

function HEX3Aanonymous_1845494622(s_1845494623, width_1845494624) {
  var result_1845494625 = [];

    result_1845494625 = nimCopy(null, center_1845494613(s_1845494623, chckRange(width_1845494624, 0, 2147483647), 32), NTI33554439);

  return result_1845494625;

}

function alignLeft_939530476(s_939530477, count_939530478, padding_939530479) {
  var result_939530480 = [];

    var sLen_939530481 = nucruneLen(s_939530477);
    if ((sLen_939530481 < count_939530478)) {
    var padStr_939530482 = HEX24_939524687(padding_939530479);
    result_939530480 = nimCopy(null, mnewString(0), NTI33554439);
    result_939530480.push.apply(result_939530480, s_939530477);;
    Label1: do {
      var i_939530487 = 0;
      var colontmp__1795162504 = 0;
      colontmp__1795162504 = count_939530478;
      var i_1795162505 = sLen_939530481;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162505 < colontmp__1795162504)) break Label3;
            i_939530487 = i_1795162505;
            result_939530480.push.apply(result_939530480, padStr_939530482);;
            i_1795162505 = addInt(i_1795162505, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      result_939530480 = nimCopy(null, s_939530477, NTI33554439);
    }
    

  return result_939530480;

}

function HEX3Aanonymous_1845494626(s_1845494627, width_1845494628) {
  var result_1845494629 = [];

    result_1845494629 = nimCopy(null, alignLeft_939530476(s_1845494627, chckRange(width_1845494628, 0, 2147483647), 32), NTI33554439);

  return result_1845494629;

}

function nucAlignString(s_939530464, count_939530465, padding_939530466) {
  var result_939530467 = [];

    var sLen_939530468 = nucruneLen(s_939530464);
    if ((sLen_939530468 < count_939530465)) {
    var padStr_939530469 = HEX24_939524687(padding_939530466);
    result_939530467 = nimCopy(null, mnewString(0), NTI33554439);
    var spaces_939530470 = subInt(count_939530465, sLen_939530468);
    Label1: do {
      var i_939530475 = 0;
      var i_1795162508 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162508 < spaces_939530470)) break Label3;
            i_939530475 = i_1795162508;
            result_939530467.push.apply(result_939530467, padStr_939530469);;
            i_1795162508 = addInt(i_1795162508, 1);
          }
      } while (false);
    } while (false);
    result_939530467.push.apply(result_939530467, s_939530464);;
    }
    else {
      result_939530467 = nimCopy(null, s_939530464, NTI33554439);
    }
    

  return result_939530467;

}

function HEX3Aanonymous_1845494630(s_1845494631, width_1845494632) {
  var result_1845494633 = [];

    result_1845494633 = nimCopy(null, nucAlignString(s_1845494631, chckRange(width_1845494632, 0, 2147483647), 32), NTI33554439);

  return result_1845494633;

}

function stack_1845494644(rects_1845494645, baseline_1845494646, alignment_1845494647) {
  var result_1845494648 = ({rows: [], baseline: 0, width: 0, flag: 0});

    Label1: do {
      var iHEX60gensym42_1845494670 = 0;
      var resultHEX60gensym42_1845494677 = newSeq_1845494378(chckRange((rects_1845494645).length, 0, 2147483647));
      Label2: do {
        var it_1845494681 = ({rows: [], baseline: 0, width: 0, flag: 0});
        var i_1795162490 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(i_1795162490 < (rects_1845494645).length)) break Label4;
              it_1845494681 = rects_1845494645[chckIndx(i_1795162490, 0, (rects_1845494645).length - 1)];
              resultHEX60gensym42_1845494677[chckIndx(iHEX60gensym42_1845494670, 0, (resultHEX60gensym42_1845494677).length - 1)] = it_1845494681.width;
              iHEX60gensym42_1845494670 = addInt(iHEX60gensym42_1845494670, 1);
              i_1795162490 = addInt(i_1795162490, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    var width_1845494689 = max_1845494404(resultHEX60gensym42_1845494677);
    var alignFunc_1845494690 = alignFuncs_1845494634[chckIndx(alignment_1845494647, 0, (alignFuncs_1845494634).length - 1)];
    Label5: do {
      var rect_1845494694 = ({rows: [], baseline: 0, width: 0, flag: 0});
      var i_1795162497 = 0;
      Label6: do {
          Label7: while (true) {
          if (!(i_1795162497 < (rects_1845494645).length)) break Label7;
            rect_1845494694 = rects_1845494645[chckIndx(i_1795162497, 0, (rects_1845494645).length - 1)];
            Label8: do {
              var row_1845494698 = [];
              var i_1795162494 = 0;
              var L_1795162495 = (rect_1845494694.rows).length;
              Label9: do {
                  Label10: while (true) {
                  if (!(i_1795162494 < L_1795162495)) break Label10;
                    row_1845494698 = rect_1845494694.rows[chckIndx(i_1795162494, 0, (rect_1845494694.rows).length - 1)];
                    result_1845494648.rows.push(alignFunc_1845494690(row_1845494698, width_1845494689));;
                    i_1795162494 = addInt(i_1795162494, 1);
                    if (!(((rect_1845494694.rows).length == L_1795162495))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            i_1795162497 = addInt(i_1795162497, 1);
          }
      } while (false);
    } while (false);
    result_1845494648.baseline = baseline_1845494646;
    result_1845494648.width = width_1845494689;

  return result_1845494648;

}

function HEX3EHEX3E_1811947995(a_1811947998, b_1811947999) {

function succeedImpl_1811948011(inputInHEX60gensym151_1811948012, valueInHEX60gensym151_1811948013, tailInHEX60gensym151_1811948014) {
  var result_1811948016 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811948016 = nimCopy(result_1811948016, {kind: 0, value: nimCopy(null, valueInHEX60gensym151_1811948013, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym151_1811948014, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym151_1811948012, NTI33554439), expected: []}, NTI1811941261);

  return result_1811948016;

}

function failImpl_1811948018(inputInHEX60gensym151_1811948019, expectedInHEX60gensym151_1811948020, tailInHEX60gensym151_1811948021) {
  var result_1811948023 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811948023 = nimCopy(result_1811948023, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym151_1811948020, NTI1811945897), tail: nimCopy(null, tailInHEX60gensym151_1811948021, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym151_1811948019, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811948023;

}
      
function HEX3Aanonymous_1811948026(input_1811948027) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811948029 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811948030 = succeedImpl_1811948011;
          var fail_1811948031 = failImpl_1811948018;
          Label1: do {
            var tempHEX60gensym34_1811948044 = parse_1811941132(a_1811947998, input_1811948027);
            if ((tempHEX60gensym34_1811948044.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811948044;
            if (ConstSet119[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811948029 = nimCopy(result_1811948029, {kind: 1, fromInput: nimCopy(null, input_1811948027, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811948044.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811948050 = nimCopy(null, tempHEX60gensym34_1811948044, NTI1862271108);
          Label3: do {
            var tempHEX60gensym36_1811948063 = parse_1811942404(b_1811947999, result1_1811948050.tail);
            if ((tempHEX60gensym36_1811948063.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811948063;
            if (ConstSet120[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811948029 = nimCopy(result_1811948029, {kind: 1, fromInput: nimCopy(null, input_1811948027, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811948063.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811948069 = nimCopy(null, tempHEX60gensym36_1811948063, NTI1811941261);
          var Temporary5 = result2_1811948069;
          if (ConstSet121[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811948029 = nimCopy(result_1811948029, succeed_1811948030(input_1811948027, Temporary5.value, result2_1811948069.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811948029;

      }

  var result_1811948000 = null;

    Label1: do {
    } while (false);
    result_1811948000 = {body: HEX3Aanonymous_1811948026};

  return result_1811948000;

}

function HEX7C_1811947563(a_1811947565, b_1811947566) {

function succeedImpl_1811947578(inputInHEX60gensym144_1811947579, valueInHEX60gensym144_1811947580, tailInHEX60gensym144_1811947581) {
  var result_1811947583 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811947583 = nimCopy(result_1811947583, {kind: 0, value: nimCopy(null, valueInHEX60gensym144_1811947580, NTI33554439), tail: nimCopy(null, tailInHEX60gensym144_1811947581, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym144_1811947579, NTI33554439), expected: []}, NTI1862271108);

  return result_1811947583;

}

function failImpl_1811947585(inputInHEX60gensym144_1811947586, expectedInHEX60gensym144_1811947587, tailInHEX60gensym144_1811947588) {
  var result_1811947590 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811947590 = nimCopy(result_1811947590, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym144_1811947587, NTI1811945544), tail: nimCopy(null, tailInHEX60gensym144_1811947588, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym144_1811947586, NTI33554439), value: []}, NTI1862271108);

  return result_1811947590;

}
      
function HEX3Aanonymous_1811947593(input_1811947594) {
          var Temporary1;
          var Temporary2;

        var result_1811947596 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811947597 = succeedImpl_1811947578;
          var fail_1811947598 = failImpl_1811947585;
          var result1_1811947611 = parse_1811941132(a_1811947565, input_1811947594);
          if ((result1_1811947611.kind == 0)) {
          result_1811947596 = nimCopy(result_1811947596, result1_1811947611, NTI1862271108);
          break BeforeRet;
          }
          
          var result2_1811947628 = parse_1811941132(b_1811947566, input_1811947594);
          if ((result2_1811947628.kind == 0)) {
          result_1811947596 = nimCopy(result_1811947596, result2_1811947628, NTI1862271108);
          break BeforeRet;
          }
          
          var Temporary1 = result1_1811947611;
          if (ConstSet122[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1862270997)); }
          var Temporary2 = result2_1811947628;
          if (ConstSet123[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
          result_1811947596 = nimCopy(result_1811947596, fail_1811947598(input_1811947594, HEX26_1845493855(Temporary1.expected, Temporary2.expected), input_1811947594), NTI1862271108);
        } while (false);

        return result_1811947596;

      }

  var result_1811947567 = null;

    Label1: do {
    } while (false);
    result_1811947567 = {body: HEX3Aanonymous_1811947593};

  return result_1811947567;

}

function HEX26_1811947805(a_1811947810, b_1811947814) {

function succeedImpl_1811947829(inputInHEX60gensym148_1811947830, valueInHEX60gensym148_1811947831, tailInHEX60gensym148_1811947832) {
  var result_1811947834 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811947834 = nimCopy(result_1811947834, {kind: 0, value: nimCopy(null, valueInHEX60gensym148_1811947831, NTI1811945760), tail: nimCopy(null, tailInHEX60gensym148_1811947832, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym148_1811947830, NTI33554439), expected: []}, NTI1811941276);

  return result_1811947834;

}

function failImpl_1811947836(inputInHEX60gensym148_1811947837, expectedInHEX60gensym148_1811947838, tailInHEX60gensym148_1811947839) {
  var result_1811947841 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811947841 = nimCopy(result_1811947841, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym148_1811947838, NTI1811945766), tail: nimCopy(null, tailInHEX60gensym148_1811947839, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym148_1811947837, NTI33554439), value: []}, NTI1811941276);

  return result_1811947841;

}
      
function HEX3Aanonymous_1811947844(input_1811947845) {
            var Temporary2;
            var Temporary4;
          var Temporary5;
          var Temporary6;

        var result_1811947847 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811947848 = succeedImpl_1811947829;
          var fail_1811947849 = failImpl_1811947836;
          Label1: do {
            var tempHEX60gensym26_1811947862 = parse_1811942654(a_1811947810, input_1811947845);
            if ((tempHEX60gensym26_1811947862.kind == 1)) {
            var Temporary2 = tempHEX60gensym26_1811947862;
            if (ConstSet124[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811947847 = nimCopy(result_1811947847, {kind: 1, fromInput: nimCopy(null, input_1811947845, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym26_1811947862.tail, NTI33554439), value: []}, NTI1811941276);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811947868 = nimCopy(null, tempHEX60gensym26_1811947862, NTI1811941276);
          Label3: do {
            var tempHEX60gensym28_1811947881 = parse_1811942654(b_1811947814, result1_1811947868.tail);
            if ((tempHEX60gensym28_1811947881.kind == 1)) {
            var Temporary4 = tempHEX60gensym28_1811947881;
            if (ConstSet125[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811947847 = nimCopy(result_1811947847, {kind: 1, fromInput: nimCopy(null, input_1811947845, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym28_1811947881.tail, NTI33554439), value: []}, NTI1811941276);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811947887 = nimCopy(null, tempHEX60gensym28_1811947881, NTI1811941276);
          var Temporary5 = result1_1811947868;
          if (ConstSet126[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          var Temporary6 = result2_1811947887;
          if (ConstSet127[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1862270997)); }
          result_1811947847 = nimCopy(result_1811947847, succeed_1811947848(input_1811947845, HEX26_1811943322(Temporary5.value, Temporary6.value), result2_1811947887.tail), NTI1811941276);
          break BeforeRet;
        } while (false);

        return result_1811947847;

      }

  var result_1811947818 = null;

    Label1: do {
    } while (false);
    result_1811947818 = {body: HEX3Aanonymous_1811947844};

  return result_1811947818;

}

function rowAsAtom_1845493798(rect_1845493799) {
    var Temporary1;

  var result_1845493800 = [];

    if ((nucruneLen(rect_1845493799.rows[chckIndx(0, 0, (rect_1845493799.rows).length - 1)]) == 1)) {
    Temporary1 = rect_1845493799.rows[chckIndx(0, 0, (rect_1845493799.rows).length - 1)];
    }
    else {
    Temporary1 = (makeNimstrLit("(") || []).concat(rect_1845493799.rows[chckIndx(0, 0, (rect_1845493799.rows).length - 1)] || [],makeNimstrLit(")") || []);
    }
    
    result_1845493800 = nimCopy(null, Temporary1, NTI33554439);

  return result_1845493800;

}

function max_1811947914(x_1811947916, y_1811947917) {
    var Temporary1;

  var result_1811947918 = 0;

    if ((y_1811947917 <= x_1811947916)) {
    Temporary1 = x_1811947916;
    }
    else {
    Temporary1 = y_1811947917;
    }
    
    result_1811947918 = Temporary1;

  return result_1811947918;

}

function nsuRepeatStr(s_654312452, n_654312453) {
  var result_654312454 = [];

    result_654312454 = nimCopy(null, mnewString(0), NTI33554439);
    Label1: do {
      var i_654312459 = 0;
      var colontmp__1795162518 = 0;
      colontmp__1795162518 = n_654312453;
      var res_1795162519 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_1795162519 <= colontmp__1795162518)) break Label3;
            i_654312459 = res_1795162519;
            result_654312454.push.apply(result_654312454, s_654312452);;
            res_1795162519 = addInt(res_1795162519, 1);
          }
      } while (false);
    } while (false);

  return result_654312454;

}

function withFlag_1845494730(rect_1845494731, flag_1845494732) {
  var result_1845494733 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_1845494733 = nimCopy(result_1845494733, rect_1845494731, NTI1845493764);
    result_1845494733.flag = flag_1845494732;

  return result_1845494733;

}

function HEX5BHEX5DHEX3D_1811940732(s_1811940734, i_1811940735, x_1811940736) {
    s_1811940734[chckIndx(subInt((s_1811940734).length, i_1811940735), 0, (s_1811940734).length - 1)] = nimCopy(null, x_1811940736, NTI33554439);

  
}

function rawGet_1811939496(t_1811939499, key_1811939500, hc_1811939501, hc_1811939501_Idx) {
            var Temporary3;

  var result_1811939502 = 0;

  BeforeRet: do {
    hc_1811939501[hc_1811939501_Idx] = hash_1056965030(key_1811939500);
    if ((hc_1811939501[hc_1811939501_Idx] == 0)) {
    hc_1811939501[hc_1811939501_Idx] = 314159265;
    }
    
    if (((t_1811939499.data).length == 0)) {
    result_1811939502 = -1;
    break BeforeRet;
    }
    
    var h_1811939553 = (hc_1811939501[hc_1811939501_Idx] & (t_1811939499.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1811939499.data[chckIndx(h_1811939553, 0, (t_1811939499.data).length - 1)].Field0)) break Label2;
            if (!(t_1811939499.data[chckIndx(h_1811939553, 0, (t_1811939499.data).length - 1)].Field0 == hc_1811939501[hc_1811939501_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1811939499.data[chckIndx(h_1811939553, 0, (t_1811939499.data).length - 1)].Field1, key_1811939500);            }          if (Temporary3) {
          result_1811939502 = h_1811939553;
          break BeforeRet;
          }
          
          h_1811939553 = nextTry_1157627938(h_1811939553, (t_1811939499.data).length - 1);
        }
    } while (false);
    result_1811939502 = subInt(-1, h_1811939553);
  } while (false);

  return result_1811939502;

}

function HEX5BHEX5D_1811940815(t_1811940818, key_1811940819) {
  var result_1811940820 = {Field0: [], Field1: [], Field2: []};

    var hcHEX60gensym20_1811940821 = [0];
    var indexHEX60gensym20_1811940828 = rawGet_1811939496(t_1811940818, key_1811940819, hcHEX60gensym20_1811940821, 0);
    if ((0 <= indexHEX60gensym20_1811940828)) {
    result_1811940820 = nimCopy(result_1811940820, t_1811940818.data[chckIndx(indexHEX60gensym20_1811940828, 0, (t_1811940818.data).length - 1)].Field2, NTI1811939335);
    }
    else {
    raiseKeyError_1308623158(key_1811940819);
    }
    

  return result_1811940820;

}

function substrEq_654311653(s_654311654, pos_654311655, substr_654311656) {
  var result_654311657 = false;

  BeforeRet: do {
    var i_654311658 = 0;
    var length_654311659 = (substr_654311656).length;
    Label1: do {
        Label2: while (true) {
        if (!(((i_654311658 < length_654311659) && (addInt(pos_654311655, i_654311658) < (s_654311654).length)) && (s_654311654[chckIndx(addInt(pos_654311655, i_654311658), 0, (s_654311654).length - 1)] == substr_654311656[chckIndx(i_654311658, 0, (substr_654311656).length - 1)]))) break Label2;
          i_654311658 = addInt(i_654311658, 1);
        }
    } while (false);
    result_654311657 = (i_654311658 == length_654311659);
    break BeforeRet;
  } while (false);

  return result_654311657;

}

function nsuSplitString(s_654311945, sep_654311946, maxsplit_654311947) {
  var result_654311948 = [];

    if (!((0 < (sep_654311946).length))) {
    failedAssertImpl_218103864(makeNimstrLit("strutils.nim(739, 11) `sep.len > 0` "));
    }
    
    result_654311948 = nimCopy(null, [], NTI654311798);
    Label1: do {
      var xHEX60gensym72_654311959 = [];
      var lastHEX60gensym41_1828716658 = 0;
      var splitsHEX60gensym41_1828716659 = maxsplit_654311947;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym41_1828716658 <= (s_654311945).length)) break Label3;
            var firstHEX60gensym41_1828716661 = lastHEX60gensym41_1828716658;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym41_1828716658 < (s_654311945).length) && !(substrEq_654311653(s_654311945, lastHEX60gensym41_1828716658, sep_654311946)))) break Label5;
                  lastHEX60gensym41_1828716658 = addInt(lastHEX60gensym41_1828716658, 1);
                }
            } while (false);
            if ((splitsHEX60gensym41_1828716659 == 0)) {
            lastHEX60gensym41_1828716658 = (s_654311945).length;
            }
            
            xHEX60gensym72_654311959 = substr_33557922(s_654311945, firstHEX60gensym41_1828716661, subInt(lastHEX60gensym41_1828716658, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym72_654311959, NTI33554439);
            result_654311948.push(Temporary6);;
            if ((splitsHEX60gensym41_1828716659 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym41_1828716659 = subInt(splitsHEX60gensym41_1828716659, 1);
            lastHEX60gensym41_1828716658 = addInt(lastHEX60gensym41_1828716658, (sep_654311946).length);
          }
      } while (false);
    } while (false);

  return result_654311948;

}

function toTextRect_1845493810(s_1845493811, baseline_1845493812, flag_1845493813) {
  var result_1845493814 = ({rows: [], baseline: 0, width: 0, flag: 0});

  BeforeRet: do {
    if (eqStrings(s_1845493811, [])) {
    result_1845493814.flag = flag_1845493813;
    break BeforeRet;
    }
    
    result_1845493814.rows = nimCopy(null, nsuSplitString(s_1845493811, makeNimstrLit("\x0A"), -1), NTI654311786);
    result_1845493814.width = chckRange(nucruneLen(result_1845493814.rows[chckIndx(0, 0, (result_1845493814.rows).length - 1)]), 0, 2147483647);
    Label1: do {
      var row_1845493818 = [];
      var i_1828716652 = 0;
      var L_1828716653 = (result_1845493814.rows).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_1828716652 < L_1828716653)) break Label3;
            row_1845493818 = result_1845493814.rows[chckIndx(i_1828716652, 0, (result_1845493814.rows).length - 1)];
            if (!((nucruneLen(row_1845493818) == result_1845493814.width))) {
            raiseException({message: makeNimstrLit("All rows of a TextRect must be the same width"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
            }
            
            i_1828716652 = addInt(i_1828716652, 1);
            if (!(((result_1845493814.rows).length == L_1828716653))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_1845493814.baseline = baseline_1845493812;
    result_1845493814.flag = flag_1845493813;
  } while (false);

  return result_1845493814;

}

function map_1811948904(s_1811948907, op_1811948909) {
  var result_1811948910 = [];

    result_1811948910 = new Array(chckRange((s_1811948907).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1811948907).length, 0, 2147483647) ; ++i) { result_1811948910[i] = null; }    Label1: do {
      var i_1811948926 = 0;
      var colontmp__1795162543 = 0;
      colontmp__1795162543 = (s_1811948907).length;
      var i_1795162544 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162544 < colontmp__1795162543)) break Label3;
            i_1811948926 = i_1795162544;
            result_1811948910[chckIndx(i_1811948926, 0, (result_1811948910).length - 1)] = op_1811948909(s_1811948907[chckIndx(i_1811948926, 0, (s_1811948907).length - 1)]);
            i_1795162544 = addInt(i_1795162544, 1);
          }
      } while (false);
    } while (false);

  return result_1811948910;

}

function HEX26HEX3D_1845494610(left_1845494611, right_1845494612) {
    left_1845494611 = nimCopy(left_1845494611, join_1845493947([nimCopy(null, left_1845494611, NTI1845493764), nimCopy(null, right_1845494612, NTI1845493764)]), NTI1845493764);

  
}

function HEX3EHEX3E_1811949285(a_1811949288, b_1811949289) {

function succeedImpl_1811949301(inputInHEX60gensym194_1811949302, valueInHEX60gensym194_1811949303, tailInHEX60gensym194_1811949304) {
  var result_1811949306 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811949306 = nimCopy(result_1811949306, {kind: 0, value: nimCopy(null, valueInHEX60gensym194_1811949303, NTI1811945736), tail: nimCopy(null, tailInHEX60gensym194_1811949304, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym194_1811949302, NTI33554439), expected: []}, NTI1811941276);

  return result_1811949306;

}

function failImpl_1811949308(inputInHEX60gensym194_1811949309, expectedInHEX60gensym194_1811949310, tailInHEX60gensym194_1811949311) {
  var result_1811949313 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

    result_1811949313 = nimCopy(result_1811949313, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym194_1811949310, NTI1811946997), tail: nimCopy(null, tailInHEX60gensym194_1811949311, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym194_1811949309, NTI33554439), value: []}, NTI1811941276);

  return result_1811949313;

}
      
function HEX3Aanonymous_1811949316(input_1811949317) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811949319 = ({kind: 0, value: [], expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811949320 = succeedImpl_1811949301;
          var fail_1811949321 = failImpl_1811949308;
          Label1: do {
            var tempHEX60gensym34_1811949334 = parse_1811941370(a_1811949288, input_1811949317);
            if ((tempHEX60gensym34_1811949334.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811949334;
            if (ConstSet128[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811949319 = nimCopy(result_1811949319, {kind: 1, fromInput: nimCopy(null, input_1811949317, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811949334.tail, NTI33554439), value: []}, NTI1811941276);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811949340 = nimCopy(null, tempHEX60gensym34_1811949334, NTI1811940170);
          Label3: do {
            var tempHEX60gensym36_1811949353 = parse_1811942654(b_1811949289, result1_1811949340.tail);
            if ((tempHEX60gensym36_1811949353.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811949353;
            if (ConstSet129[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811949319 = nimCopy(result_1811949319, {kind: 1, fromInput: nimCopy(null, input_1811949317, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811949353.tail, NTI33554439), value: []}, NTI1811941276);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811949359 = nimCopy(null, tempHEX60gensym36_1811949353, NTI1811941276);
          var Temporary5 = result2_1811949359;
          if (ConstSet130[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811949319 = nimCopy(result_1811949319, succeed_1811949320(input_1811949317, Temporary5.value, result2_1811949359.tail), NTI1811941276);
          break BeforeRet;
        } while (false);

        return result_1811949319;

      }

  var result_1811949290 = null;

    Label1: do {
    } while (false);
    result_1811949290 = {body: HEX3Aanonymous_1811949316};

  return result_1811949290;

}

function HEX3CHEX3C_1811949501(a_1811949504, b_1811949505) {

function succeedImpl_1811949517(inputInHEX60gensym198_1811949518, valueInHEX60gensym198_1811949519, tailInHEX60gensym198_1811949520) {
  var result_1811949522 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811949522 = nimCopy(result_1811949522, {kind: 0, value: nimCopy(null, valueInHEX60gensym198_1811949519, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym198_1811949520, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym198_1811949518, NTI33554439), expected: []}, NTI1811941261);

  return result_1811949522;

}

function failImpl_1811949524(inputInHEX60gensym198_1811949525, expectedInHEX60gensym198_1811949526, tailInHEX60gensym198_1811949527) {
  var result_1811949529 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811949529 = nimCopy(result_1811949529, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym198_1811949526, NTI1811947152), tail: nimCopy(null, tailInHEX60gensym198_1811949527, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym198_1811949525, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811949529;

}
      
function HEX3Aanonymous_1811949532(input_1811949533) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811949535 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811949536 = succeedImpl_1811949517;
          var fail_1811949537 = failImpl_1811949524;
          Label1: do {
            var tempHEX60gensym30_1811949550 = parse_1811942404(a_1811949504, input_1811949533);
            if ((tempHEX60gensym30_1811949550.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_1811949550;
            if (ConstSet131[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811949535 = nimCopy(result_1811949535, {kind: 1, fromInput: nimCopy(null, input_1811949533, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym30_1811949550.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811949556 = nimCopy(null, tempHEX60gensym30_1811949550, NTI1811941261);
          Label3: do {
            var tempHEX60gensym32_1811949569 = parse_1862271905(b_1811949505, result1_1811949556.tail);
            if ((tempHEX60gensym32_1811949569.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_1811949569;
            if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811949535 = nimCopy(result_1811949535, {kind: 1, fromInput: nimCopy(null, input_1811949533, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym32_1811949569.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811949575 = nimCopy(null, tempHEX60gensym32_1811949569, NTI1862271206);
          var Temporary5 = result1_1811949556;
          if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811949535 = nimCopy(result_1811949535, succeed_1811949536(input_1811949533, Temporary5.value, result2_1811949575.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811949535;

      }

  var result_1811949506 = null;

    Label1: do {
    } while (false);
    result_1811949506 = {body: HEX3Aanonymous_1811949532};

  return result_1811949506;

}

function HEX3EHEX3E_1811949418(a_1811949421, b_1811949422) {

function succeedImpl_1811949434(inputInHEX60gensym197_1811949435, valueInHEX60gensym197_1811949436, tailInHEX60gensym197_1811949437) {
  var result_1811949439 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811949439 = nimCopy(result_1811949439, {kind: 0, value: nimCopy(null, valueInHEX60gensym197_1811949436, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym197_1811949437, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym197_1811949435, NTI33554439), expected: []}, NTI1811941261);

  return result_1811949439;

}

function failImpl_1811949441(inputInHEX60gensym197_1811949442, expectedInHEX60gensym197_1811949443, tailInHEX60gensym197_1811949444) {
  var result_1811949446 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811949446 = nimCopy(result_1811949446, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym197_1811949443, NTI1811947091), tail: nimCopy(null, tailInHEX60gensym197_1811949444, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym197_1811949442, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811949446;

}
      
function HEX3Aanonymous_1811949449(input_1811949450) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811949452 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811949453 = succeedImpl_1811949434;
          var fail_1811949454 = failImpl_1811949441;
          Label1: do {
            var tempHEX60gensym34_1811949467 = parse_1862271905(a_1811949421, input_1811949450);
            if ((tempHEX60gensym34_1811949467.kind == 1)) {
            var Temporary2 = tempHEX60gensym34_1811949467;
            if (ConstSet134[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811949452 = nimCopy(result_1811949452, {kind: 1, fromInput: nimCopy(null, input_1811949450, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym34_1811949467.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811949473 = nimCopy(null, tempHEX60gensym34_1811949467, NTI1862271206);
          Label3: do {
            var tempHEX60gensym36_1811949486 = parse_1811942404(b_1811949422, result1_1811949473.tail);
            if ((tempHEX60gensym36_1811949486.kind == 1)) {
            var Temporary4 = tempHEX60gensym36_1811949486;
            if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811949452 = nimCopy(result_1811949452, {kind: 1, fromInput: nimCopy(null, input_1811949450, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym36_1811949486.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811949492 = nimCopy(null, tempHEX60gensym36_1811949486, NTI1811941261);
          var Temporary5 = result2_1811949492;
          if (ConstSet136[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811949452 = nimCopy(result_1811949452, succeed_1811949453(input_1811949450, Temporary5.value, result2_1811949492.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811949452;

      }

  var result_1811949423 = null;

    Label1: do {
    } while (false);
    result_1811949423 = {body: HEX3Aanonymous_1811949449};

  return result_1811949423;

}

function HEX3CHEX3C_1811949717(a_1811949720, b_1811949721) {

function succeedImpl_1811949733(inputInHEX60gensym199_1811949734, valueInHEX60gensym199_1811949735, tailInHEX60gensym199_1811949736) {
  var result_1811949738 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811949738 = nimCopy(result_1811949738, {kind: 0, value: nimCopy(null, valueInHEX60gensym199_1811949735, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym199_1811949736, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym199_1811949734, NTI33554439), expected: []}, NTI1811941261);

  return result_1811949738;

}

function failImpl_1811949740(inputInHEX60gensym199_1811949741, expectedInHEX60gensym199_1811949742, tailInHEX60gensym199_1811949743) {
  var result_1811949745 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811949745 = nimCopy(result_1811949745, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym199_1811949742, NTI1811947279), tail: nimCopy(null, tailInHEX60gensym199_1811949743, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym199_1811949741, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811949745;

}
      
function HEX3Aanonymous_1811949748(input_1811949749) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811949751 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811949752 = succeedImpl_1811949733;
          var fail_1811949753 = failImpl_1811949740;
          Label1: do {
            var tempHEX60gensym30_1811949766 = parse_1811942404(a_1811949720, input_1811949749);
            if ((tempHEX60gensym30_1811949766.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_1811949766;
            if (ConstSet137[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811949751 = nimCopy(result_1811949751, {kind: 1, fromInput: nimCopy(null, input_1811949749, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym30_1811949766.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811949772 = nimCopy(null, tempHEX60gensym30_1811949766, NTI1811941261);
          Label3: do {
            var tempHEX60gensym32_1811949785 = parse_1811941370(b_1811949721, result1_1811949772.tail);
            if ((tempHEX60gensym32_1811949785.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_1811949785;
            if (ConstSet138[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811949751 = nimCopy(result_1811949751, {kind: 1, fromInput: nimCopy(null, input_1811949749, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym32_1811949785.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811949791 = nimCopy(null, tempHEX60gensym32_1811949785, NTI1811940170);
          var Temporary5 = result1_1811949772;
          if (ConstSet139[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811949751 = nimCopy(result_1811949751, succeed_1811949752(input_1811949749, Temporary5.value, result2_1811949791.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811949751;

      }

  var result_1811949722 = null;

    Label1: do {
    } while (false);
    result_1811949722 = {body: HEX3Aanonymous_1811949748};

  return result_1811949722;

}

function map_1811950568(a_1811950571, fn_1811950573) {

function succeedImpl_1811950585(inputInHEX60gensym218_1811950586, valueInHEX60gensym218_1811950587, tailInHEX60gensym218_1811950588) {
  var result_1811950590 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811950590 = nimCopy(result_1811950590, {kind: 0, value: nimCopy(null, valueInHEX60gensym218_1811950587, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym218_1811950588, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym218_1811950586, NTI33554439), expected: []}, NTI1811941261);

  return result_1811950590;

}

function failImpl_1811950592(inputInHEX60gensym218_1811950593, expectedInHEX60gensym218_1811950594, tailInHEX60gensym218_1811950595) {
  var result_1811950597 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811950597 = nimCopy(result_1811950597, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym218_1811950594, NTI1811947911), tail: nimCopy(null, tailInHEX60gensym218_1811950595, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym218_1811950593, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811950597;

}
      
function HEX3Aanonymous_1811950600(input_1811950601) {
            var Temporary2;
          var Temporary3;

        var result_1811950603 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811950604 = succeedImpl_1811950585;
          var fail_1811950605 = failImpl_1811950592;
          Label1: do {
            var tempHEX60gensym24_1811950618 = parse_1811945698(a_1811950571, input_1811950601);
            if ((tempHEX60gensym24_1811950618.kind == 1)) {
            var Temporary2 = tempHEX60gensym24_1811950618;
            if (ConstSet140[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811950603 = nimCopy(result_1811950603, {kind: 1, fromInput: nimCopy(null, input_1811950601, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym24_1811950618.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811950624 = nimCopy(null, tempHEX60gensym24_1811950618, NTI1811943724);
          var Temporary3 = result1_1811950624;
          if (ConstSet141[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1862270997)); }
          result_1811950603 = nimCopy(result_1811950603, succeed_1811950604(input_1811950601, fn_1811950573(Temporary3.value), result1_1811950624.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811950603;

      }

  var result_1811950574 = null;

    Label1: do {
    } while (false);
    result_1811950574 = {body: HEX3Aanonymous_1811950600};

  return result_1811950574;

}

function nop_1811950696() {

function succeedImpl_1811950709(inputInHEX60gensym220_1811950710, valueInHEX60gensym220_1811950711, tailInHEX60gensym220_1811950712) {
  var result_1811950714 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811950714 = nimCopy(result_1811950714, {kind: 0, value: nimCopy(null, valueInHEX60gensym220_1811950711, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym220_1811950712, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym220_1811950710, NTI33554439), expected: []}, NTI1811941261);

  return result_1811950714;

}

function failImpl_1811950716(inputInHEX60gensym220_1811950717, expectedInHEX60gensym220_1811950718, tailInHEX60gensym220_1811950719) {
  var result_1811950721 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811950721 = nimCopy(result_1811950721, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym220_1811950718, NTI1811947997), tail: nimCopy(null, tailInHEX60gensym220_1811950719, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym220_1811950717, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811950721;

}
      
function HEX3Aanonymous_1811950724(input_1811950725) {
        var result_1811950727 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

          var succeed_1811950728 = succeedImpl_1811950709;
          var fail_1811950729 = failImpl_1811950716;
          result_1811950727 = nimCopy(result_1811950727, succeed_1811950728(input_1811950725, ({rows: [], baseline: 0, width: 0, flag: 0}), input_1811950725), NTI1811941261);

        return result_1811950727;

      }

  var result_1811950698 = null;

    Label1: do {
    } while (false);
    result_1811950698 = {body: HEX3Aanonymous_1811950724};

  return result_1811950698;

}

function isSome_1728053623(self_1728053625) {
  var result_1728053626 = false;

    result_1728053626 = self_1728053625.has;

  return result_1728053626;

}

function get_1744830691(self_1744830693, otherwise_1744830694) {
    var Temporary1;

  var result_1744830695 = [];

    if (isSome_1728053623(self_1744830693)) {
    Temporary1 = self_1744830693.val;
    }
    else {
    Temporary1 = otherwise_1744830694;
    }
    
    result_1744830695 = nimCopy(null, Temporary1, NTI33554439);

  return result_1744830695;

}

function hasJsBigInt_805306411() {
  var result_805306412 = false;

    result_805306412 = typeof BigInt != 'undefined'

  return result_805306412;

}

function hiXorLoJs_1056964693(a_1056964694, b_1056964695) {
  var result_1056964696 = 0n;

    var prod_1056964697 = (a_1056964694 * b_1056964695);
    var mask_1056964698 = BigInt("0xffffffffffffffff");
    result_1056964696 = ((prod_1056964697 >> BigInt("64")) ^ (prod_1056964697 & mask_1056964698));

  return result_1056964696;

}

function hashWangYi1_1056964786(x_1056964788) {
  var result_1056964789 = 0;

    if (hasJsBigInt_805306411()) {
    var P0HEX60gensym6_1056964808 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1056964809 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1056964810 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1056964811 = hiXorLoJs_1056964693(hiXorLoJs_1056964693(P0HEX60gensym6_1056964808, (BigInt(x_1056964788) ^ P1HEX60gensym6_1056964809)), P58HEX60gensym6_1056964810);
    result_1056964789 = Number((() => { const i = resHEX60gensym6_1056964811, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1056964789 = (x_1056964788 & 4294967295);
    }
    

  return result_1056964789;

}

function hash_1828717050(x_1828717052) {
  var result_1828717053 = 0;

    result_1828717053 = hashWangYi1_1056964786(x_1828717052);

  return result_1828717053;

}

function rawGet_1828717043(t_1828717046, key_1828717047, hc_1828717048, hc_1828717048_Idx) {
            var Temporary3;

  var result_1828717049 = 0;

  BeforeRet: do {
    hc_1828717048[hc_1828717048_Idx] = hash_1828717050(key_1828717047);
    if ((hc_1828717048[hc_1828717048_Idx] == 0)) {
    hc_1828717048[hc_1828717048_Idx] = 314159265;
    }
    
    if (((t_1828717046.data).length == 0)) {
    result_1828717049 = -1;
    break BeforeRet;
    }
    
    var h_1828717110 = (hc_1828717048[hc_1828717048_Idx] & (t_1828717046.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1828717046.data[chckIndx(h_1828717110, 0, (t_1828717046.data).length - 1)].Field0)) break Label2;
            if (!(t_1828717046.data[chckIndx(h_1828717110, 0, (t_1828717046.data).length - 1)].Field0 == hc_1828717048[hc_1828717048_Idx])) Temporary3 = false; else {              Temporary3 = HEX3DHEX3D_939525015(t_1828717046.data[chckIndx(h_1828717110, 0, (t_1828717046.data).length - 1)].Field1, key_1828717047);            }          if (Temporary3) {
          result_1828717049 = h_1828717110;
          break BeforeRet;
          }
          
          h_1828717110 = nextTry_1157627938(h_1828717110, (t_1828717046.data).length - 1);
        }
    } while (false);
    result_1828717049 = subInt(-1, h_1828717110);
  } while (false);

  return result_1828717049;

}

function hasKey_1811949870(t_1811949873, key_1811949874) {
  var result_1811949875 = false;

    var hc_1811949876 = [0];
    result_1811949875 = (0 <= rawGet_1828717043(t_1811949873, key_1811949874, hc_1811949876, 0));

  return result_1811949875;

}

function contains_1811949864(t_1811949867, key_1811949868) {
  var result_1811949869 = false;

  BeforeRet: do {
    result_1811949869 = hasKey_1811949870(t_1811949867, key_1811949868);
    break BeforeRet;
  } while (false);

  return result_1811949869;

}

function some_1728053767(val_1728053769) {
  var result_1728053770 = ({val: [], has: false});

    result_1728053770.has = true;
    result_1728053770.val = nimCopy(null, val_1728053769, NTI33554439);

  return result_1728053770;

}

function raiseKeyError_1811950016(key_1811950018) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_939524687(key_1811950018) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1811949949(t_1811949952, key_1811949953) {
  var result_1811949954 = [];

    var hcHEX60gensym20_1811949955 = [0];
    var indexHEX60gensym20_1811949962 = rawGet_1828717043(t_1811949952, key_1811949953, hcHEX60gensym20_1811949955, 0);
    if ((0 <= indexHEX60gensym20_1811949962)) {
    result_1811949954 = nimCopy(null, t_1811949952.data[chckIndx(indexHEX60gensym20_1811949962, 0, (t_1811949952.data).length - 1)].Field2, NTI33554439);
    }
    else {
    raiseKeyError_1811950016(key_1811949953);
    }
    

  return result_1811949954;

}

function HEX26_1845494597(left_1845494598, right_1845494599) {
  var result_1845494600 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_1845494600 = nimCopy(result_1845494600, join_1845493947([nimCopy(null, left_1845494598, NTI1845493764), nimCopy(null, right_1845494599, NTI1845493764)]), NTI1845493764);

  return result_1845494600;

}

function HEX3CHEX3C_1811951369(a_1811951372, b_1811951373) {

function succeedImpl_1811951385(inputInHEX60gensym234_1811951386, valueInHEX60gensym234_1811951387, tailInHEX60gensym234_1811951388) {
  var result_1811951390 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811951390 = nimCopy(result_1811951390, {kind: 0, value: nimCopy(null, valueInHEX60gensym234_1811951387, NTI1845493764), tail: nimCopy(null, tailInHEX60gensym234_1811951388, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym234_1811951386, NTI33554439), expected: []}, NTI1811941261);

  return result_1811951390;

}

function failImpl_1811951392(inputInHEX60gensym234_1811951393, expectedInHEX60gensym234_1811951394, tailInHEX60gensym234_1811951395) {
  var result_1811951397 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

    result_1811951397 = nimCopy(result_1811951397, {kind: 1, expected: nimCopy(null, expectedInHEX60gensym234_1811951394, NTI1811948616), tail: nimCopy(null, tailInHEX60gensym234_1811951395, NTI33554439), fromInput: nimCopy(null, inputInHEX60gensym234_1811951393, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);

  return result_1811951397;

}
      
function HEX3Aanonymous_1811951400(input_1811951401) {
            var Temporary2;
            var Temporary4;
          var Temporary5;

        var result_1811951403 = ({kind: 0, value: ({rows: [], baseline: 0, width: 0, flag: 0}), expected: [], tail: [], fromInput: []});

        BeforeRet: do {
          var succeed_1811951404 = succeedImpl_1811951385;
          var fail_1811951405 = failImpl_1811951392;
          Label1: do {
            var tempHEX60gensym30_1811951418 = parse_1811942404(a_1811951372, input_1811951401);
            if ((tempHEX60gensym30_1811951418.kind == 1)) {
            var Temporary2 = tempHEX60gensym30_1811951418;
            if (ConstSet143[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1862270997)); }
            result_1811951403 = nimCopy(result_1811951403, {kind: 1, fromInput: nimCopy(null, input_1811951401, NTI33554439), expected: nimCopy(null, Temporary2.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym30_1811951418.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result1_1811951424 = nimCopy(null, tempHEX60gensym30_1811951418, NTI1811941261);
          Label3: do {
            var tempHEX60gensym32_1811951437 = parse_1811941132(b_1811951373, result1_1811951424.tail);
            if ((tempHEX60gensym32_1811951437.kind == 1)) {
            var Temporary4 = tempHEX60gensym32_1811951437;
            if (ConstSet144[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'expected\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1862270997)); }
            result_1811951403 = nimCopy(result_1811951403, {kind: 1, fromInput: nimCopy(null, input_1811951401, NTI33554439), expected: nimCopy(null, Temporary4.expected, NTI1862271011), tail: nimCopy(null, tempHEX60gensym32_1811951437.tail, NTI33554439), value: ({rows: [], baseline: 0, width: 0, flag: 0})}, NTI1811941261);
            break BeforeRet;
            }
            
          } while (false);
          var result2_1811951443 = nimCopy(null, tempHEX60gensym32_1811951437, NTI1862271108);
          var Temporary5 = result1_1811951424;
          if (ConstSet145[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1862270997)); }
          result_1811951403 = nimCopy(result_1811951403, succeed_1811951404(input_1811951401, Temporary5.value, result2_1811951443.tail), NTI1811941261);
          break BeforeRet;
        } while (false);

        return result_1811951403;

      }

  var result_1811951374 = null;

    Label1: do {
    } while (false);
    result_1811951374 = {body: HEX3Aanonymous_1811951400};

  return result_1811951374;

}

function HEX24_1845493792(rect_1845493793) {
  var result_1845493794 = [];

    result_1845493794 = nimCopy(null, nsuJoinSep(rect_1845493793.rows, makeNimstrLit("\x0A")), NTI33554439);

  return result_1845493794;

}

function nsuCountLines(s_654313092) {
  var result_654313093 = 0;

    result_654313093 = 1;
    var i_654313094 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313094 < (s_654313092).length)) break Label2;
          switch (s_654313092[chckIndx(i_654313094, 0, (s_654313092).length - 1)]) {
          case 13:
            if (((addInt(i_654313094, 1) < (s_654313092).length) && (s_654313092[chckIndx(addInt(i_654313094, 1), 0, (s_654313092).length - 1)] == 10))) {
            i_654313094 = addInt(i_654313094, 1);
            }
            
            result_654313093 = addInt(result_654313093, 1);
            break;
          case 10:
            result_654313093 = addInt(result_654313093, 1);
            break;
          default: 
            break;
          }
          i_654313094 = addInt(i_654313094, 1);
        }
    } while (false);

  return result_654313093;

}

function nsuSplitLines(s_654312050, keepEol_654312051) {
            var Temporary6;

  var result_654312052 = [];

    result_654312052 = nimCopy(null, [], NTI654311904);
    Label1: do {
      var xHEX60gensym76_654312058 = [];
      var first_1795162591 = 0;
      var last_1795162592 = 0;
      var eolpos_1795162593 = 0;
      Label2: do {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((last_1795162592 < (s_654312050).length) && !((ConstSet147[s_654312050[chckIndx(last_1795162592, 0, (s_654312050).length - 1)]] != undefined)))) break Label5;
                  last_1795162592 = addInt(last_1795162592, 1);
                }
            } while (false);
            eolpos_1795162593 = last_1795162592;
            if ((last_1795162592 < (s_654312050).length)) {
            if ((s_654312050[chckIndx(last_1795162592, 0, (s_654312050).length - 1)] == 10)) {
            last_1795162592 = addInt(last_1795162592, 1);
            }
            else {
            if ((s_654312050[chckIndx(last_1795162592, 0, (s_654312050).length - 1)] == 13)) {
            last_1795162592 = addInt(last_1795162592, 1);
            if (((last_1795162592 < (s_654312050).length) && (s_654312050[chckIndx(last_1795162592, 0, (s_654312050).length - 1)] == 10))) {
            last_1795162592 = addInt(last_1795162592, 1);
            }
            
            }
            }
            }
            
            if (keepEol_654312051) {
            Temporary6 = subInt(last_1795162592, 1);
            }
            else {
            Temporary6 = subInt(eolpos_1795162593, 1);
            }
            
            xHEX60gensym76_654312058 = substr_33557922(s_654312050, first_1795162591, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym76_654312058, NTI33554439);
            result_654312052.push(Temporary7);;
            if ((eolpos_1795162593 == last_1795162592)) {
            break Label2;
            }
            
            first_1795162591 = last_1795162592;
          }
      } while (false);
    } while (false);

  return result_654312052;

}

function lineInfo_1811951462(result1_1811951464) {
  var result_1811951465 = {Field0: 0, Field1: 0};

    var prior_1811951484 = HEX5BHEX5D_939527322(result1_1811951464.fromInput, HEX2EHEX2E_872415312(0, addInt((result1_1811951464.tail).length, 1)));
    var lineNum_1811951485 = nsuCountLines(prior_1811951484);
    var lines_1811951486 = nsuSplitLines(prior_1811951484, false);
    var colmNum_1811951490 = addInt((lines_1811951486[chckIndx(subInt((lines_1811951486).length, 1), 0, (lines_1811951486).length - 1)]).length, 1);
    result_1811951465 = nimCopy(result_1811951465, {Field0: lineNum_1811951485, Field1: colmNum_1811951490}, NTI1862271029);

  return result_1811951465;

}

function mkDigit_1124073477(v_1124073478, typ_1124073479) {
      var Temporary1;

  var result_1124073480 = [];

    if (!((v_1124073478 < 26))) {
    failedAssertImpl_218103864(makeNimstrLit("strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_1124073478 < 10)) {
    result_1124073480 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1124073478), 0, 255)), NTI33554439);
    }
    else {
      if ((typ_1124073479 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1124073480 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1124073478), 10), 0, 255)), NTI33554439);
    }
    

  return result_1124073480;

}

function formatInt_1325400117(n_1325400119, radix_1325400120, spec_1325400121) {
    var Temporary1;
    var Temporary8;

  var result_1325400122 = [];

    var n_1325400125 = n_1325400119;
    var negative_1325400126 = (n_1325400125 < 0);
    if (negative_1325400126) {
    Temporary1 = ((~(n_1325400125) + 1) );
    }
    else {
    Temporary1 = n_1325400125;
    }
    
    var v_1325400127 = Temporary1;
    var xx_1325400128 = [];
    if (spec_1325400121.alternateForm) {
    switch (spec_1325400121.typ) {
    case 88:
      xx_1325400128 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      xx_1325400128 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      xx_1325400128 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      xx_1325400128 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1325400127 == 0)) {
    result_1325400122 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      result_1325400122 = nimCopy(null, [], NTI33554439);
      Label2: do {
          Label3: while (true) {
          if (!(0 < v_1325400127)) break Label3;
            var d_1325400129 = (v_1325400127 % radix_1325400120);
            v_1325400127 = Math.trunc(((v_1325400127 / radix_1325400120) ));
            result_1325400122.push.apply(result_1325400122, mkDigit_1124073477(chckRange(d_1325400129, -2147483648, 2147483647), spec_1325400121.typ));;
          }
      } while (false);
      Label4: do {
        var idx_1325400134 = 0;
        var colontmp__1795162598 = 0;
        colontmp__1795162598 = divInt((result_1325400122).length, 2);
        var i_1795162599 = 0;
        Label5: do {
            Label6: while (true) {
            if (!(i_1795162599 < colontmp__1795162598)) break Label6;
              idx_1325400134 = i_1795162599;
              var Temporary7 = result_1325400122[chckIndx(idx_1325400134, 0, (result_1325400122).length - 1)]; result_1325400122[chckIndx(idx_1325400134, 0, (result_1325400122).length - 1)] = result_1325400122[chckIndx(subInt(subInt((result_1325400122).length, idx_1325400134), 1), 0, (result_1325400122).length - 1)]; result_1325400122[chckIndx(subInt(subInt((result_1325400122).length, idx_1325400134), 1), 0, (result_1325400122).length - 1)] = Temporary7;              i_1795162599 = addInt(i_1795162599, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_1325400121.padWithZero) {
    if (negative_1325400126) Temporary8 = true; else {      Temporary8 = !((spec_1325400121.sign == 45));    }    var sign_1325400139 = Temporary8;
    var toFill_1325400143 = subInt(subInt(subInt(spec_1325400121.minimumWidth, (result_1325400122).length), (xx_1325400128).length), (sign_1325400139 ? 1 : 0));
    if ((0 < toFill_1325400143)) {
    result_1325400122 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1325400143, 0, 2147483647)) || []).concat(result_1325400122 || []), NTI33554439);
    }
    
    }
    
    if (negative_1325400126) {
    result_1325400122 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_1325400128 || [],result_1325400122 || []), NTI33554439);
    }
    else {
    if (!((spec_1325400121.sign == 45))) {
    result_1325400122 = nimCopy(null, [spec_1325400121.sign].concat(xx_1325400128 || [],result_1325400122 || []), NTI33554439);
    }
    else {
      result_1325400122 = nimCopy(null, (xx_1325400128 || []).concat(result_1325400122 || []), NTI33554439);
    }
    }
    if ((spec_1325400121.align == 60)) {
    Label9: do {
      var i_1325400148 = 0;
      var colontmp__1795162602 = 0;
      colontmp__1795162602 = (result_1325400122).length;
      var i_1795162603 = colontmp__1795162602;
      Label10: do {
          Label11: while (true) {
          if (!(i_1795162603 < spec_1325400121.minimumWidth)) break Label11;
            i_1325400148 = i_1795162603;
            addChar(result_1325400122, spec_1325400121.fill);;
            i_1795162603 = addInt(i_1795162603, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_1325400149 = subInt(spec_1325400121.minimumWidth, (result_1325400122).length);
      if ((spec_1325400121.align == 94)) {
      var half_1325400150 = divInt(toFill_1325400149, 2);
      result_1325400122 = nimCopy(null, (nsuRepeatChar(spec_1325400121.fill, chckRange(half_1325400150, 0, 2147483647)) || []).concat(result_1325400122 || [],nsuRepeatChar(spec_1325400121.fill, chckRange(subInt(toFill_1325400149, half_1325400150), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_1325400149)) {
        result_1325400122 = nimCopy(null, (nsuRepeatChar(spec_1325400121.fill, chckRange(toFill_1325400149, 0, 2147483647)) || []).concat(result_1325400122 || []), NTI33554439);
        }
        
      }
      
    }
    

  return result_1325400122;

}

function formatValue_1325400109(result_1325400111, result_1325400111_Idx, value_1325400112, specifier_1325400113) {
  BeforeRet: do {
    if (((specifier_1325400113).length == 0)) {
    result_1325400111[result_1325400111_Idx].push.apply(result_1325400111[result_1325400111_Idx], HEX24_335544323(value_1325400112));;
    break BeforeRet;
    }
    
    var spec_1325400114 = parseStandardFormatSpecifier_1124073530(specifier_1325400113, 0, false);
    var radix_1325400115 = 10;
    switch (spec_1325400114.typ) {
    case 120:
    case 88:
      radix_1325400115 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_1325400115 = 2;
      break;
    case 111:
      radix_1325400115 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1325400114.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1325400111[result_1325400111_Idx].push.apply(result_1325400111[result_1325400111_Idx], formatInt_1325400117(value_1325400112, radix_1325400115, spec_1325400114));;
  } while (false);

  
}

function render_1811939339(latex_1811939340, oneLine_1811939341) {
    
function HEX3Aanonymous_1811941784(x_1811941804) {
      var result_1811941807 = [];

        result_1811941807 = nimCopy(null, [nimCopy(null, x_1811941804, NTI1811940213)], NTI1811940746);

      return result_1811941807;

    }
    
function HEX3Aanonymous_1811941272(x_1811941292) {
      var result_1811941295 = [];

        result_1811941295 = nimCopy(null, [nimCopy(null, x_1811941292, NTI33554439)], NTI1476395617);

      return result_1811941295;

    }
    
function HEX3Aanonymous_1811941999(x_1811942051) {
      var result_1811942054 = [];

        var resultHEX60gensym42_1811942063 = newSeq_452985301(0);
        Label1: do {
          var xHEX60gensym42_1811942067 = [];
          var i_1795162222 = 0;
          var L_1795162223 = (x_1811942051).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_1795162222 < L_1795162223)) break Label3;
                xHEX60gensym42_1811942067 = x_1811942051[chckIndx(i_1795162222, 0, (x_1811942051).length - 1)];
                var a_1811942068 = nimCopy(null, resultHEX60gensym42_1811942063, NTI452985127);
                var b_1811942069 = nimCopy(null, xHEX60gensym42_1811942067, NTI1811940164);
                resultHEX60gensym42_1811942063 = nimCopy(null, HEX26_1845493855(a_1811942068, b_1811942069), NTI1845493817);
                i_1795162222 = addInt(i_1795162222, 1);
                if (!(((x_1811942051).length == L_1795162223))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        result_1811942054 = nimCopy(null, resultHEX60gensym42_1811942063, NTI452985127);

      return result_1811942054;

    }
    
function HEX3Aanonymous_1811943068(x_1811943088) {
      var result_1811943091 = [];

        result_1811943091 = nimCopy(null, [nimCopy(null, x_1811943088, NTI1811941319)], NTI1811941871);

      return result_1811943091;

    }
    
function HEX3Aanonymous_1811942556(x_1811942576) {
      var result_1811942579 = [];

        result_1811942579 = nimCopy(null, [nimCopy(null, x_1811942576, NTI1845493764)], NTI1811941426);

      return result_1811942579;

    }
    
function HEX3Aanonymous_1811943283(x_1811943374) {
      var result_1811943377 = [];

        var resultHEX60gensym68_1811943386 = newSeq_1845494075(0);
        Label1: do {
          var xHEX60gensym68_1811943390 = [];
          var i_1795162261 = 0;
          var L_1795162262 = (x_1811943374).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_1795162261 < L_1795162262)) break Label3;
                xHEX60gensym68_1811943390 = x_1811943374[chckIndx(i_1795162261, 0, (x_1811943374).length - 1)];
                var a_1811943391 = nimCopy(null, resultHEX60gensym68_1811943386, NTI1845493951);
                var b_1811943392 = nimCopy(null, xHEX60gensym68_1811943390, NTI1811941270);
                resultHEX60gensym68_1811943386 = nimCopy(null, HEX26_1811943322(a_1811943391, b_1811943392), NTI1811942300);
                i_1795162261 = addInt(i_1795162261, 1);
                if (!(((x_1811943374).length == L_1795162262))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        result_1811943377 = nimCopy(null, resultHEX60gensym68_1811943386, NTI1845493951);

      return result_1811943377;

    }
    
function HEX3Aanonymous_1811943471(atoms_1811943487) {
      var result_1811943490 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811943490 = nimCopy(result_1811943490, join_1845493947(atoms_1811943487), NTI1845493764);

      return result_1811943490;

    }
    
function HEX3Aanonymous_1811943630(ch_1811943646) {
      var result_1811943649 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811943649 = nimCopy(result_1811943649, toTextRectOneLine_1845493829(nimCharToStr(ch_1811943646), 0, 1), NTI1845493764);

      return result_1811943649;

    }
    
function HEX3Aanonymous_1811943733(letter_1811943749) {
      var result_1811943752 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811943752 = nimCopy(result_1811943752, toTextRectOneLine_1845493829(inFont_1828716764(((letter_1811943749) | 0), 1), 0, 1), NTI1845493764);

      return result_1811943752;

    }
    
function HEX3Aanonymous_1811943800(pair_1811943803) {
        
function HEX3Aanonymous_1811944422(x_1811944442) {
          var result_1811944445 = [];

            result_1811944445 = nimCopy(null, [nimCopy(null, x_1811944442, NTI1811940213)], NTI1811940746);

          return result_1811944445;

        }
        
function HEX3Aanonymous_1811944311(x_1811944331) {
          var result_1811944334 = [];

            result_1811944334 = nimCopy(null, [nimCopy(null, x_1811944331, NTI33554439)], NTI1476395617);

          return result_1811944334;

        }
        
function HEX3Aanonymous_1811944520(x_1811944555) {
          var result_1811944558 = [];

            var resultHEX60gensym87_1811944567 = newSeq_452985301(0);
            Label1: do {
              var xHEX60gensym87_1811944571 = [];
              var i_1795162402 = 0;
              var L_1795162403 = (x_1811944555).length;
              Label2: do {
                  Label3: while (true) {
                  if (!(i_1795162402 < L_1795162403)) break Label3;
                    xHEX60gensym87_1811944571 = x_1811944555[chckIndx(i_1795162402, 0, (x_1811944555).length - 1)];
                    var a_1811944572 = nimCopy(null, resultHEX60gensym87_1811944567, NTI452985127);
                    var b_1811944573 = nimCopy(null, xHEX60gensym87_1811944571, NTI1811940164);
                    resultHEX60gensym87_1811944567 = nimCopy(null, HEX26_1845493855(a_1811944572, b_1811944573), NTI1845493817);
                    i_1795162402 = addInt(i_1795162402, 1);
                    if (!(((x_1811944555).length == L_1795162403))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            result_1811944558 = nimCopy(null, resultHEX60gensym87_1811944567, NTI452985127);

          return result_1811944558;

        }
        
function HEX3Aanonymous_1811944631(letter_1811944646) {
          var result_1811944649 = ({rows: [], baseline: 0, width: 0, flag: 0});

            result_1811944649 = nimCopy(result_1811944649, toTextRectOneLine_1845493829(inFont_1828716764(((letter_1811944646) | 0), font_1811943808), 0, 1), NTI1845493764);

          return result_1811944649;

        }

      var result_1811943806 = null;

        var colontmp__1795162383 = nimCopy(null, pair_1811943803, NTI1828717100);
        var name_1811943807 = nimCopy(null, colontmp__1795162383["Field0"], NTI33554439);
        var font_1811943808 = colontmp__1795162383["Field1"];
        result_1811943806 = map_1811943667(HEX7C_1862272049(HEX3CHEX3C_1811944162(HEX3CHEX3C_1811944079(HEX3EHEX3E_1811943900(HEX3EHEX3E_1811943983(HEX3EHEX3E_1811943900(HEX3EHEX3E_1811943817(s_1862271087(name_1811943807), ws_1811942140), c_1862271209(123)), ws_1811942140), alpha_1811943616), ws_1811942140), c_1862271209(125)), HEX3EHEX3E_1811943900(HEX3EHEX3E_1811943817(s_1862271087(name_1811943807), map_1811942083(HEX26_1811941849(map_1811941604(HEX2A_1811940942(whitespace_1862272030, HEX2EHEX2E_939524947(1, 2147483647).a), HEX3Aanonymous_1811944422), HEX2A_1811941428(HEX7C_1811941326(map_1811941086(whitespace_1862272030, HEX3Aanonymous_1811944311), nop_1811940950()), subInt(HEX2EHEX2E_939524947(1, 2147483647).b, HEX2EHEX2E_939524947(1, 2147483647).a))), HEX3Aanonymous_1811944520)), alpha_1811943616)), HEX3Aanonymous_1811944631);

      return result_1811943806;

    }
    
function HEX3Aanonymous_1811944833(entry_1811944836) {
        var Temporary1;
        
function HEX3Aanonymous_1811945000(x_1811945016) {
          var result_1811945019 = ({rows: [], baseline: 0, width: 0, flag: 0});

            result_1811945019 = nimCopy(result_1811945019, val_1811944841, NTI1845493764);

          return result_1811945019;

        }
          
function HEX3Aanonymous_1811945096(x_1811945112) {
            var result_1811945115 = ({rows: [], baseline: 0, width: 0, flag: 0});

              result_1811945115 = nimCopy(result_1811945115, val_1811944841, NTI1845493764);

            return result_1811945115;

          }

      var result_1811944839 = null;

        var colontmp__1795162409 = nimCopy(null, entry_1811944836, NTI1828716555);
        var key_1811944840 = nimCopy(null, colontmp__1795162409["Field0"], NTI33554439);
        var val_1811944841 = nimCopy(null, colontmp__1795162409["Field1"], NTI1845493764);
        if ((key_1811944840[chckIndx(0, 0, (key_1811944840).length - 1)] == 92)) {
        Temporary1 = map_1811945029(HEX3CHEX3C_1811944915(s_1862271087(key_1811944840), HEX21_1811944858(letter_1862272123)), HEX3Aanonymous_1811945000);
        }
        else {
        Temporary1 = map_1811945029(s_1862271087(key_1811944840), HEX3Aanonymous_1811945096);
        }
        
        result_1811944839 = Temporary1;

      return result_1811944839;

    }
    
function HEX3Aanonymous_1811946112(x_1811946132) {
      var result_1811946135 = [];

        result_1811946135 = nimCopy(null, [nimCopy(null, x_1811946132, NTI1811943756)], NTI1811944311);

      return result_1811946135;

    }
    
function HEX3Aanonymous_1811945592(x_1811945612) {
      var result_1811945615 = [];

        result_1811945615 = nimCopy(null, [x_1811945612], NTI1811943869);

      return result_1811945615;

    }
    
function HEX3Aanonymous_1811946327(x_1811946424) {
      var result_1811946427 = [];

        var resultHEX60gensym124_1811946436 = newSeq_1811946336(0);
        Label1: do {
          var xHEX60gensym124_1811946440 = [];
          var i_1795162456 = 0;
          var L_1795162457 = (x_1811946424).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_1795162456 < L_1795162457)) break Label3;
                xHEX60gensym124_1811946440 = x_1811946424[chckIndx(i_1795162456, 0, (x_1811946424).length - 1)];
                var a_1811946441 = nimCopy(null, resultHEX60gensym124_1811946436, NTI1811944720);
                var b_1811946442 = nimCopy(null, xHEX60gensym124_1811946440, NTI1811943718);
                resultHEX60gensym124_1811946436 = nimCopy(null, HEX26_1811946371(a_1811946441, b_1811946442), NTI1811944743);
                i_1795162456 = addInt(i_1795162456, 1);
                if (!(((x_1811946424).length == L_1795162457))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        result_1811946427 = nimCopy(null, resultHEX60gensym124_1811946436, NTI1811944720);

      return result_1811946427;

    }
    
function HEX3Aanonymous_1811946604(chars_1811946640) {
      var result_1811946643 = [];

        result_1811946643 = nimCopy(null, join_1811946611(chars_1811946640, []), NTI33554439);

      return result_1811946643;

    }
    
function HEX3Aanonymous_1811946722(name_1811946725) {
      var result_1811946728 = false;

        result_1811946728 = contains_1811946771(commands_1828719785, name_1811946725);

      return result_1811946728;

    }
    
function HEX3Aanonymous_1811946854(name_1811946993) {
      var result_1811946996 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811946996 = nimCopy(result_1811946996, HEX5BHEX5D_1811946914(commands_1828719785, name_1811946993), NTI1845493764);

      return result_1811946996;

    }
    
function HEX3Aanonymous_1811947071(entry_1811947074) {
        
function HEX3Aanonymous_1811947090(x_1811947106) {
          var result_1811947109 = ({rows: [], baseline: 0, width: 0, flag: 0});

            result_1811947109 = nimCopy(result_1811947109, val_1811947079, NTI1845493764);

          return result_1811947109;

        }

      var result_1811947077 = null;

        var colontmp__1795162474 = nimCopy(null, entry_1811947074, NTI1828716560);
        var key_1811947078 = nimCopy(null, colontmp__1795162474["Field0"], NTI33554439);
        var val_1811947079 = nimCopy(null, colontmp__1795162474["Field1"], NTI1845493764);
        result_1811947077 = map_1811945029(s_1862271087(key_1811947078), HEX3Aanonymous_1811947090);

      return result_1811947077;

    }
    
function HEX3Aanonymous_1811947184(entry_1811947187) {
        
function HEX3Aanonymous_1811947391(rect_1811947412) {
            var Temporary1;
              var Temporary2;

          var result_1811947415 = ({rows: [], baseline: 0, width: 0, flag: 0});

            var rect_1811947416 = nimCopy(null, rect_1811947412, NTI1845493764);
              if (!(rect_1811947416.width == 1)) Temporary2 = false; else {                Temporary2 = (height_1845493801(rect_1811947416) == 1);              }            if (Temporary2) {
            rect_1811947416.rows[chckIndx(0, 0, (rect_1811947416.rows).length - 1)].push.apply(rect_1811947416.rows[chckIndx(0, 0, (rect_1811947416.rows).length - 1)], val_1811947192.Field0);;
            Temporary1 = rect_1811947416;
            }
            else {
            if (oneLine_1811939341) {
            var fmtRes_1811947421 = [mnewString(0)];
            formatValue_1124073634(fmtRes_1811947421, 0, val_1811947192.Field0, []);
            fmtRes_1811947421[0].push.apply(fmtRes_1811947421[0], makeNimstrLit(" ("));;
            formatValue_1124073634(fmtRes_1811947421, 0, row_1845493795(rect_1811947416), []);
            fmtRes_1811947421[0].push.apply(fmtRes_1811947421[0], makeNimstrLit(")"));;
            Temporary1 = toTextRectOneLine_1845493829(fmtRes_1811947421[0], 0, 0);
            }
            else {
            Temporary1 = stack_1845494644([toTextRectOneLine_1845493829(val_1811947192.Field1, 0, 0), nimCopy(null, rect_1811947416, NTI1845493764)], addInt(1, rect_1811947416.baseline), 0);
            }
            }
            result_1811947415 = nimCopy(result_1811947415, Temporary1, NTI1845493764);

          return result_1811947415;

        }

      var result_1811947190 = null;

        var colontmp__1795162479 = nimCopy(null, entry_1811947187, NTI1828717453);
        var key_1811947191 = nimCopy(null, colontmp__1795162479["Field0"], NTI33554439);
        var val_1811947192 = nimCopy(null, colontmp__1795162479["Field1"], NTI1828717454);
        result_1811947190 = map_1811947430(HEX3EHEX3E_1811947308(HEX3EHEX3E_1811943983(HEX3EHEX3E_1811947212(s_1862271087(key_1811947191), HEX21_1811944858(letter_1862272123)), ws_1811942140), atom_1811942151), HEX3Aanonymous_1811947391);

      return result_1811947190;

    }
    
function HEX3Aanonymous_1811947685(x_1811947705) {
      var result_1811947708 = [];

        result_1811947708 = nimCopy(null, [nimCopy(null, x_1811947705, NTI1845493764)], NTI1811941426);

      return result_1811947708;

    }
    
function HEX3Aanonymous_1811947748(x_1811947768) {
      var result_1811947771 = [];

        result_1811947771 = nimCopy(null, [nimCopy(null, x_1811947768, NTI1845493764)], NTI1811941426);

      return result_1811947771;

    }
    
function HEX3Aanonymous_1811947900(fraction_1811947947) {
        var Temporary1;
            var Temporary2;
            var Temporary3;
              var Temporary4;

      var result_1811947950 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var numerator_1811947951 = nimCopy(null, fraction_1811947947[chckIndx(0, 0, (fraction_1811947947).length - 1)], NTI1845493764);
        var denominator_1811947952 = nimCopy(null, fraction_1811947947[chckIndx(1, 0, (fraction_1811947947).length - 1)], NTI1845493764);
        if (oneLine_1811939341) {
        var fmtRes_1811947957 = [mnewString(0)];
        formatValue_1124073634(fmtRes_1811947957, 0, rowAsAtom_1845493798(numerator_1811947951), []);
        fmtRes_1811947957[0].push.apply(fmtRes_1811947957[0], makeNimstrLit(" / "));;
        formatValue_1124073634(fmtRes_1811947957, 0, rowAsAtom_1845493798(denominator_1811947952), []);
        Temporary1 = toTextRectOneLine_1845493829(fmtRes_1811947957[0], 0, 0);
        }
        else {
          var width_1811947962 = max_1811947914(numerator_1811947951.width, denominator_1811947952.width);
          var fractionLine_1811947963 = nsuRepeatStr(makeNimstrLit("\xE2\x94\x80"), width_1811947962);
          var flag_1811947964 = 5;
            if (!(numerator_1811947951.flag == 5)) Temporary3 = false; else {              Temporary3 = (numerator_1811947951.width == width_1811947962);            }            if (Temporary3) Temporary2 = true; else {              if (!(denominator_1811947952.flag == 5)) Temporary4 = false; else {                Temporary4 = (denominator_1811947952.width == width_1811947962);              }              Temporary2 = Temporary4;            }          if (Temporary2) {
          fractionLine_1811947963 = nimCopy(null, (makeNimstrLit("\xE2\x95\xB6") || []).concat(fractionLine_1811947963 || [],makeNimstrLit("\xE2\x95\xB4") || []), NTI33554439);
          flag_1811947964 = 0;
          }
          
        Temporary1 = withFlag_1845494730(stack_1845494644([nimCopy(null, numerator_1811947951, NTI1845493764), toTextRectOneLine_1845493829(fractionLine_1811947963, 0, 0), nimCopy(null, denominator_1811947952, NTI1845493764)], height_1845493801(numerator_1811947951), 0), flag_1811947964);
        }
        
        result_1811947950 = nimCopy(result_1811947950, Temporary1, NTI1845493764);

      return result_1811947950;

    }
    
function HEX3Aanonymous_1811948131(x_1811948151) {
      var result_1811948154 = [];

        result_1811948154 = nimCopy(null, [nimCopy(null, x_1811948151, NTI1845493764)], NTI1811941426);

      return result_1811948154;

    }
    
function HEX3Aanonymous_1811948194(x_1811948214) {
      var result_1811948217 = [];

        result_1811948217 = nimCopy(null, [nimCopy(null, x_1811948214, NTI1845493764)], NTI1811941426);

      return result_1811948217;

    }

function bigDelimiter_1811939343(delimiter_1811939344, height_1811939345, baseline_1811939346) {
  var result_1811939347 = ({rows: [], baseline: 0, width: 0, flag: 0});

    result_1811939347.rows = nimCopy(null, newSeq_452985301(height_1811939345), NTI452985127);
    result_1811939347.width = 1;
    result_1811939347.baseline = baseline_1811939346;
    switch (toJSStr(delimiter_1811939344)) {
    case "{":
      if ((height_1811939345 == 2)) {
      result_1811939347.rows[chckIndx(0, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xB0"), NTI33554439);
      result_1811939347.rows[chckIndx(1, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xB1"), NTI33554439);
      }
      else {
        result_1811939347.rows[chckIndx(0, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xA7"), NTI33554439);
        Label1: do {
          var i_1811940731 = 0;
          var colontmp__1795162522 = 0;
          colontmp__1795162522 = subInt(height_1811939345, 1);
          var i_1795162523 = 1;
          Label2: do {
              Label3: while (true) {
              if (!(i_1795162523 < colontmp__1795162522)) break Label3;
                i_1811940731 = i_1795162523;
                result_1811939347.rows[chckIndx(i_1811940731, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xAA"), NTI33554439);
                i_1795162523 = addInt(i_1795162523, 1);
              }
          } while (false);
        } while (false);
        result_1811939347.rows[chckIndx(divInt(height_1811939345, 2), 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xA8"), NTI33554439);
        HEX5BHEX5DHEX3D_1811940732(result_1811939347.rows, 1, makeNimstrLit("\xE2\x8E\xA9"));
      }
      
      break;
    case "}":
      if ((height_1811939345 == 2)) {
      result_1811939347.rows[chckIndx(0, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xB1"), NTI33554439);
      result_1811939347.rows[chckIndx(1, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xB0"), NTI33554439);
      }
      else {
        result_1811939347.rows[chckIndx(0, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xAB"), NTI33554439);
        Label4: do {
          var i_1811940744 = 0;
          var colontmp__1795162526 = 0;
          colontmp__1795162526 = subInt(height_1811939345, 1);
          var i_1795162527 = 1;
          Label5: do {
              Label6: while (true) {
              if (!(i_1795162527 < colontmp__1795162526)) break Label6;
                i_1811940744 = i_1795162527;
                result_1811939347.rows[chckIndx(i_1811940744, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xAA"), NTI33554439);
                i_1795162527 = addInt(i_1795162527, 1);
              }
          } while (false);
        } while (false);
        result_1811939347.rows[chckIndx(divInt(height_1811939345, 2), 0, (result_1811939347.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x8E\xAC"), NTI33554439);
        HEX5BHEX5DHEX3D_1811940732(result_1811939347.rows, 1, makeNimstrLit("\xE2\x8E\xAD"));
      }
      
      break;
    case "⟨":
      result_1811939347.width = chckRange(divInt(addInt(height_1811939345, 1), 2), 0, 2147483647);
      var widthDec_1811940750 = subInt(result_1811939347.width, 1);
      if ((modInt(height_1811939345, 2) == 1)) {
      result_1811939347.rows[chckIndx(divInt(height_1811939345, 2), 0, (result_1811939347.rows).length - 1)] = nimCopy(null, (makeNimstrLit("\xE2\x9F\xA8") || []).concat(nsuRepeatStr(makeNimstrLit(" "), chckRange(divInt(height_1811939345, 2), 0, 2147483647)) || []), NTI33554439);
      }
      
      Label7: do {
        var i_1811940755 = 0;
        var colontmp__1795162530 = 0;
        colontmp__1795162530 = divInt(height_1811939345, 2);
        var i_1795162531 = 0;
        Label8: do {
            Label9: while (true) {
            if (!(i_1795162531 < colontmp__1795162530)) break Label9;
              i_1811940755 = i_1795162531;
              result_1811939347.rows[chckIndx(i_1811940755, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, (nsuRepeatStr(makeNimstrLit(" "), chckRange(subInt(widthDec_1811940750, i_1811940755), 0, 2147483647)) || []).concat(makeNimstrLit("\xE2\x95\xB1") || [],nsuRepeatStr(makeNimstrLit(" "), chckRange(i_1811940755, 0, 2147483647)) || []), NTI33554439);
              result_1811939347.rows[chckIndx(subInt(subInt(height_1811939345, 1), i_1811940755), 0, (result_1811939347.rows).length - 1)] = nimCopy(null, (nsuRepeatStr(makeNimstrLit(" "), chckRange(subInt(widthDec_1811940750, i_1811940755), 0, 2147483647)) || []).concat(makeNimstrLit("\xE2\x95\xB2") || [],nsuRepeatStr(makeNimstrLit(" "), chckRange(i_1811940755, 0, 2147483647)) || []), NTI33554439);
              i_1795162531 = addInt(i_1795162531, 1);
            }
        } while (false);
      } while (false);
      break;
    case "⟩":
      result_1811939347.width = chckRange(divInt(addInt(height_1811939345, 1), 2), 0, 2147483647);
      var widthDec_1811940756 = subInt(result_1811939347.width, 1);
      if ((modInt(height_1811939345, 2) == 1)) {
      result_1811939347.rows[chckIndx(divInt(height_1811939345, 2), 0, (result_1811939347.rows).length - 1)] = nimCopy(null, (nsuRepeatStr(makeNimstrLit(" "), chckRange(divInt(height_1811939345, 2), 0, 2147483647)) || []).concat(makeNimstrLit("\xE2\x9F\xA9") || []), NTI33554439);
      }
      
      Label10: do {
        var i_1811940761 = 0;
        var colontmp__1795162534 = 0;
        colontmp__1795162534 = divInt(height_1811939345, 2);
        var i_1795162535 = 0;
        Label11: do {
            Label12: while (true) {
            if (!(i_1795162535 < colontmp__1795162534)) break Label12;
              i_1811940761 = i_1795162535;
              result_1811939347.rows[chckIndx(i_1811940761, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, (nsuRepeatStr(makeNimstrLit(" "), chckRange(i_1811940761, 0, 2147483647)) || []).concat(makeNimstrLit("\xE2\x95\xB2") || [],nsuRepeatStr(makeNimstrLit(" "), chckRange(subInt(widthDec_1811940756, i_1811940761), 0, 2147483647)) || []), NTI33554439);
              result_1811939347.rows[chckIndx(subInt(subInt(height_1811939345, 1), i_1811940761), 0, (result_1811939347.rows).length - 1)] = nimCopy(null, (nsuRepeatStr(makeNimstrLit(" "), chckRange(i_1811940761, 0, 2147483647)) || []).concat(makeNimstrLit("\xE2\x95\xB1") || [],nsuRepeatStr(makeNimstrLit(" "), chckRange(subInt(widthDec_1811940756, i_1811940761), 0, 2147483647)) || []), NTI33554439);
              i_1795162535 = addInt(i_1795162535, 1);
            }
        } while (false);
      } while (false);
      break;
    default: 
      var colontmp__1795162541 = HEX5BHEX5D_1811940815(delimiterParts_1811940719, delimiter_1811939344);
      var top_1811940885 = nimCopy(null, colontmp__1795162541["Field0"], NTI33554439);
      var mid_1811940886 = nimCopy(null, colontmp__1795162541["Field1"], NTI33554439);
      var bottom_1811940887 = nimCopy(null, colontmp__1795162541["Field2"], NTI33554439);
      result_1811939347.rows[chckIndx(0, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, top_1811940885, NTI33554439);
      Label13: do {
        var i_1811940892 = 0;
        var colontmp__1795162538 = 0;
        colontmp__1795162538 = subInt(height_1811939345, 1);
        var i_1795162539 = 1;
        Label14: do {
            Label15: while (true) {
            if (!(i_1795162539 < colontmp__1795162538)) break Label15;
              i_1811940892 = i_1795162539;
              result_1811939347.rows[chckIndx(i_1811940892, 0, (result_1811939347.rows).length - 1)] = nimCopy(null, mid_1811940886, NTI33554439);
              i_1795162539 = addInt(i_1795162539, 1);
            }
        } while (false);
      } while (false);
      HEX5BHEX5DHEX3D_1811940732(result_1811939347.rows, 1, bottom_1811940887);
      break;
    }

  return result_1811939347;

}
    
function HEX3Aanonymous_1811948272(nk_1811948295) {
        var Temporary1;

      var result_1811948298 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var n_1811948299 = nimCopy(null, nk_1811948295[chckIndx(0, 0, (nk_1811948295).length - 1)], NTI1845493764);
        var k_1811948300 = nimCopy(null, nk_1811948295[chckIndx(1, 0, (nk_1811948295).length - 1)], NTI1845493764);
        if (oneLine_1811939341) {
        var fmtRes_1811948305 = [mnewString(0)];
        fmtRes_1811948305[0].push.apply(fmtRes_1811948305[0], makeNimstrLit("C("));;
        formatValue_1124073634(fmtRes_1811948305, 0, row_1845493795(n_1811948299), []);
        fmtRes_1811948305[0].push.apply(fmtRes_1811948305[0], makeNimstrLit(", "));;
        formatValue_1124073634(fmtRes_1811948305, 0, row_1845493795(k_1811948300), []);
        fmtRes_1811948305[0].push.apply(fmtRes_1811948305[0], makeNimstrLit(")"));;
        Temporary1 = toTextRectOneLine_1845493829(fmtRes_1811948305[0], 0, 0);
        }
        else {
          var inside_1811948306 = stack_1845494644([nimCopy(null, n_1811948299, NTI1845493764), nimCopy(null, k_1811948300, NTI1845493764)], height_1845493801(n_1811948299), 0);
        Temporary1 = join_1845493947([bigDelimiter_1811939343(makeNimstrLit("("), height_1845493801(inside_1811948306), chckRange(inside_1811948306.baseline, 0, 2147483647)), nimCopy(null, inside_1811948306, NTI1845493764), bigDelimiter_1811939343(makeNimstrLit(")"), height_1845493801(inside_1811948306), chckRange(inside_1811948306.baseline, 0, 2147483647))]);
        }
        
        result_1811948298 = nimCopy(result_1811948298, Temporary1, NTI1845493764);

      return result_1811948298;

    }
    
function HEX3Aanonymous_1811948343(arg_1811948512) {
        var Temporary1;
          var Temporary2;

      var result_1811948515 = ({rows: [], baseline: 0, width: 0, flag: 0});

        if (oneLine_1811939341) {
        var fmtRes_1811948520 = [mnewString(0)];
        fmtRes_1811948520[0].push.apply(fmtRes_1811948520[0], makeNimstrLit("\xE2\x88\x9A"));;
        formatValue_1124073634(fmtRes_1811948520, 0, rowAsAtom_1845493798(arg_1811948512), []);
        Temporary1 = toTextRectOneLine_1845493829(fmtRes_1811948520[0], 0, 0);
        }
        else {
          var overbar_1811948521 = toTextRectOneLine_1845493829(nsuRepeatStr(makeNimstrLit("_"), arg_1811948512.width), 0, 0);
          if ((height_1845493801(arg_1811948512) == 1)) {
          Temporary2 = {rows: [makeNimstrLit("\xE2\x88\x9A")], baseline: 0, width: 1, flag: 0};
          }
          else {
            Label3: do {
              var resultHEX60gensym169_1811948536 = [];
              Label4: do {
                var xHEX60gensym169_1811948537 = 0;
                var colontmp__1795162159 = 0;
                colontmp__1795162159 = divInt(height_1845493801(arg_1811948512), 2);
                var res_1795162160 = colontmp__1795162159;
                Label5: do {
                    Label6: while (true) {
                    if (!(1 <= res_1795162160)) break Label6;
                      xHEX60gensym169_1811948537 = res_1795162160;
                      resultHEX60gensym169_1811948536.push(xHEX60gensym169_1811948537);;
                      res_1795162160 = subInt(res_1795162160, 1);
                    }
                } while (false);
              } while (false);
              var HEX3Atmp_1811948561 = nimCopy(null, resultHEX60gensym169_1811948536, NTI1811946369);
              var iHEX60gensym170_1811948564 = 0;
              var resultHEX60gensym170_1811948571 = newSeq_1845494075(chckRange((HEX3Atmp_1811948561).length, 0, 2147483647));
              Label7: do {
                var it_1811948575 = 0;
                var i_1795162164 = 0;
                var L_1795162165 = (HEX3Atmp_1811948561).length;
                Label8: do {
                    Label9: while (true) {
                    if (!(i_1795162164 < L_1795162165)) break Label9;
                      it_1811948575 = HEX3Atmp_1811948561[chckIndx(i_1795162164, 0, (HEX3Atmp_1811948561).length - 1)];
                      resultHEX60gensym170_1811948571[chckIndx(iHEX60gensym170_1811948564, 0, (resultHEX60gensym170_1811948571).length - 1)] = nimCopy(resultHEX60gensym170_1811948571[chckIndx(iHEX60gensym170_1811948564, 0, (resultHEX60gensym170_1811948571).length - 1)], toTextRect_1845493810(makeNimstrLit("\xE2\x95\xB2"), addInt(subInt(arg_1811948512.baseline, height_1845493801(arg_1811948512)), it_1811948575), 0), NTI1845493764);
                      iHEX60gensym170_1811948564 = addInt(iHEX60gensym170_1811948564, 1);
                      i_1795162164 = addInt(i_1795162164, 1);
                      if (!(((HEX3Atmp_1811948561).length == L_1795162165))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
            } while (false);
            Label10: do {
              var resultHEX60gensym173_1811948594 = [];
              Label11: do {
                var xHEX60gensym173_1811948595 = 0;
                var colontmp__1795162169 = 0;
                colontmp__1795162169 = height_1845493801(arg_1811948512);
                var res_1795162170 = 1;
                Label12: do {
                    Label13: while (true) {
                    if (!(res_1795162170 <= colontmp__1795162169)) break Label13;
                      xHEX60gensym173_1811948595 = res_1795162170;
                      resultHEX60gensym173_1811948594.push(xHEX60gensym173_1811948595);;
                      res_1795162170 = addInt(res_1795162170, 1);
                    }
                } while (false);
              } while (false);
              var HEX3Atmp_1811948619 = nimCopy(null, resultHEX60gensym173_1811948594, NTI1811946424);
              var iHEX60gensym174_1811948622 = 0;
              var resultHEX60gensym174_1811948629 = newSeq_1845494075(chckRange((HEX3Atmp_1811948619).length, 0, 2147483647));
              Label14: do {
                var it_1811948633 = 0;
                var i_1795162173 = 0;
                var L_1795162174 = (HEX3Atmp_1811948619).length;
                Label15: do {
                    Label16: while (true) {
                    if (!(i_1795162173 < L_1795162174)) break Label16;
                      it_1811948633 = HEX3Atmp_1811948619[chckIndx(i_1795162173, 0, (HEX3Atmp_1811948619).length - 1)];
                      resultHEX60gensym174_1811948629[chckIndx(iHEX60gensym174_1811948622, 0, (resultHEX60gensym174_1811948629).length - 1)] = nimCopy(resultHEX60gensym174_1811948629[chckIndx(iHEX60gensym174_1811948622, 0, (resultHEX60gensym174_1811948629).length - 1)], toTextRect_1845493810(makeNimstrLit("\xE2\x95\xB1"), addInt(subInt(arg_1811948512.baseline, height_1845493801(arg_1811948512)), it_1811948633), 0), NTI1845493764);
                      iHEX60gensym174_1811948622 = addInt(iHEX60gensym174_1811948622, 1);
                      i_1795162173 = addInt(i_1795162173, 1);
                      if (!(((HEX3Atmp_1811948619).length == L_1795162174))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
            } while (false);
          Temporary2 = join_1845493947(HEX26_1811943322(resultHEX60gensym170_1811948571, resultHEX60gensym174_1811948629));
          }
          
          var symbol_1811948642 = nimCopy(null, Temporary2, NTI1845493764);
        Temporary1 = join_1845493947([nimCopy(null, symbol_1811948642, NTI1845493764), stack_1845494644([nimCopy(null, overbar_1811948521, NTI1845493764), nimCopy(null, arg_1811948512, NTI1845493764)], addInt(arg_1811948512.baseline, 1), 1)]);
        }
        
        result_1811948515 = nimCopy(result_1811948515, Temporary1, NTI1845493764);

      return result_1811948515;

    }
    
function HEX3Aanonymous_1811948679(arg_1811948725) {
        var Temporary1;

      var result_1811948728 = ({rows: [], baseline: 0, width: 0, flag: 0});

        if (oneLine_1811939341) {
        var fmtRes_1811948733 = [mnewString(0)];
        fmtRes_1811948733[0].push.apply(fmtRes_1811948733[0], makeNimstrLit("["));;
        formatValue_1124073634(fmtRes_1811948733, 0, row_1845493795(arg_1811948725), []);
        fmtRes_1811948733[0].push.apply(fmtRes_1811948733[0], makeNimstrLit("]"));;
        Temporary1 = toTextRectOneLine_1845493829(fmtRes_1811948733[0], 0, 0);
        }
        else {
          var horizontal_1811948734 = toTextRectOneLine_1845493829(nsuRepeatStr(makeNimstrLit("\xE2\x94\x80"), arg_1811948725.width), 0, 0);
          var sandwich_1811948735 = stack_1845494644([nimCopy(null, horizontal_1811948734, NTI1845493764), nimCopy(null, arg_1811948725, NTI1845493764), nimCopy(null, horizontal_1811948734, NTI1845493764)], addInt(arg_1811948725.baseline, 1), 1);
          var left_1811948736 = ({rows: [], baseline: 0, width: 0, flag: 0});
          left_1811948736.rows = nimCopy(null, newSeq_452985301(height_1845493801(sandwich_1811948735)), NTI452985127);
          left_1811948736.width = 1;
          left_1811948736.baseline = sandwich_1811948735.baseline;
          Label2: do {
            var i_1811948748 = 0;
            var colontmp__1795162177 = 0;
            colontmp__1795162177 = subInt(height_1845493801(sandwich_1811948735), 1);
            var i_1795162178 = 1;
            Label3: do {
                Label4: while (true) {
                if (!(i_1795162178 < colontmp__1795162177)) break Label4;
                  i_1811948748 = i_1795162178;
                  left_1811948736.rows[chckIndx(i_1811948748, 0, (left_1811948736.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x94\x82"), NTI33554439);
                  i_1795162178 = addInt(i_1795162178, 1);
                }
            } while (false);
          } while (false);
          var right_1811948749 = nimCopy(null, left_1811948736, NTI1845493764);
          left_1811948736.rows[chckIndx(0, 0, (left_1811948736.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x94\x8C"), NTI33554439);
          HEX5BHEX5DHEX3D_1811940732(left_1811948736.rows, 1, makeNimstrLit("\xE2\x94\x94"));
          right_1811948749.rows[chckIndx(0, 0, (right_1811948749.rows).length - 1)] = nimCopy(null, makeNimstrLit("\xE2\x94\x90"), NTI33554439);
          HEX5BHEX5DHEX3D_1811940732(right_1811948749.rows, 1, makeNimstrLit("\xE2\x94\x98"));
        Temporary1 = join_1845493947([nimCopy(null, left_1811948736, NTI1845493764), nimCopy(null, sandwich_1811948735, NTI1845493764), nimCopy(null, right_1811948749, NTI1845493764)]);
        }
        
        result_1811948728 = nimCopy(result_1811948728, Temporary1, NTI1845493764);

      return result_1811948728;

    }
    
function HEX3Aanonymous_1811948804(entry_1811948807) {
        
function HEX3Aanonymous_1811948838(rect_1811948865) {
            var Temporary1;

          var result_1811948868 = ({rows: [], baseline: 0, width: 0, flag: 0});

            var rect_1811948869 = nimCopy(null, rect_1811948865, NTI1845493764);
            if (oneLine_1811939341) {
            var fmtRes_1811948874 = [mnewString(0)];
            formatValue_1124073634(fmtRes_1811948874, 0, one_1811948813, []);
            fmtRes_1811948874[0].push.apply(fmtRes_1811948874[0], makeNimstrLit("["));;
            formatValue_1124073634(fmtRes_1811948874, 0, row_1845493795(rect_1811948869), []);
            fmtRes_1811948874[0].push.apply(fmtRes_1811948874[0], makeNimstrLit("]"));;
            Temporary1 = toTextRectOneLine_1845493829(fmtRes_1811948874[0], 0, 0);
            }
            else {
            if ((rect_1811948869.width <= 1)) {
            Temporary1 = withFlag_1845494730(stack_1845494644([nimCopy(null, rect_1811948869, NTI1845493764), toTextRectOneLine_1845493829(one_1811948813, 0, 0)], height_1845493801(rect_1811948869), 0), 2);
            }
            else {
              var arrow_1811948875 = [toTextRectOneLine_1845493829(left_1811948814, 0, 0)];
              Label2: do {
                var __1811948880 = 0;
                var colontmp__1795162181 = 0;
                colontmp__1795162181 = subInt(rect_1811948869.width, 2);
                var i_1795162182 = 0;
                Label3: do {
                    Label4: while (true) {
                    if (!(i_1795162182 < colontmp__1795162181)) break Label4;
                      __1811948880 = i_1795162182;
                      HEX26HEX3D_1845494610(arrow_1811948875[0], toTextRectOneLine_1845493829(middle_1811948815, 0, 0));
                      i_1795162182 = addInt(i_1795162182, 1);
                    }
                } while (false);
              } while (false);
              HEX26HEX3D_1845494610(arrow_1811948875[0], toTextRectOneLine_1845493829(right_1811948816, 0, 0));
            Temporary1 = withFlag_1845494730(stack_1845494644([nimCopy(null, rect_1811948869, NTI1845493764), nimCopy(null, arrow_1811948875[0], NTI1845493764)], height_1845493801(rect_1811948869), 0), 2);
            }
            }
            result_1811948868 = nimCopy(result_1811948868, Temporary1, NTI1845493764);

          return result_1811948868;

        }

      var result_1811948810 = null;

        var colontmp__1795162546 = nimCopy(null, entry_1811948807, NTI1828717060);
        var key_1811948811 = nimCopy(null, colontmp__1795162546["Field0"], NTI33554439);
        var val_1811948812 = nimCopy(null, colontmp__1795162546["Field1"], NTI1828717061);
        var colontmp__1795162547 = nimCopy(null, val_1811948812, NTI1828717061);
        var one_1811948813 = nimCopy(null, colontmp__1795162547["Field0"], NTI33554439);
        var left_1811948814 = nimCopy(null, colontmp__1795162547["Field1"], NTI33554439);
        var middle_1811948815 = nimCopy(null, colontmp__1795162547["Field2"], NTI33554439);
        var right_1811948816 = nimCopy(null, colontmp__1795162547["Field3"], NTI33554439);
        result_1811948810 = map_1811947430(HEX3EHEX3E_1811947995(s_1862271087(key_1811948811), atom_1811942151), HEX3Aanonymous_1811948838);

      return result_1811948810;

    }
    
function HEX3Aanonymous_1811949013(x_1811949033) {
      var result_1811949036 = [];

        result_1811949036 = nimCopy(null, [nimCopy(null, x_1811949033, NTI1845493764)], NTI1811941426);

      return result_1811949036;

    }
    
function HEX3Aanonymous_1811949076(x_1811949096) {
      var result_1811949099 = [];

        result_1811949099 = nimCopy(null, [nimCopy(null, x_1811949096, NTI1845493764)], NTI1811941426);

      return result_1811949099;

    }
    
function HEX3Aanonymous_1811949207(x_1811949227) {
      var result_1811949230 = [];

        result_1811949230 = nimCopy(null, [nimCopy(null, x_1811949227, NTI1845493764)], NTI1811941426);

      return result_1811949230;

    }
    
function HEX3Aanonymous_1811949368(things_1811949387) {
      var result_1811949390 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var inside_1811949391 = nimCopy(null, things_1811949387[chckIndx(1, 0, (things_1811949387).length - 1)], NTI1845493764);
        var left_1811949392 = nimCopy(null, things_1811949387[chckIndx(0, 0, (things_1811949387).length - 1)], NTI1845493764);
        var right_1811949393 = nimCopy(null, things_1811949387[chckIndx(2, 0, (things_1811949387).length - 1)], NTI1845493764);
        if ((1 < height_1845493801(inside_1811949391))) {
        left_1811949392 = nimCopy(left_1811949392, bigDelimiter_1811939343(row_1845493795(left_1811949392), height_1845493801(inside_1811949391), chckRange(inside_1811949391.baseline, 0, 2147483647)), NTI1845493764);
        right_1811949393 = nimCopy(right_1811949393, bigDelimiter_1811939343(row_1845493795(right_1811949393), height_1845493801(inside_1811949391), chckRange(inside_1811949391.baseline, 0, 2147483647)), NTI1845493764);
        }
        
        result_1811949390 = nimCopy(result_1811949390, join_1845493947([nimCopy(null, left_1811949392, NTI1845493764), nimCopy(null, inside_1811949391, NTI1845493764), nimCopy(null, right_1811949393, NTI1845493764)]), NTI1845493764);

      return result_1811949390;

    }
    
function HEX3Aanonymous_1811950126(sup_1811950142) {
      var result_1811950145 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811950145 = nimCopy(result_1811950145, withFlag_1845494730(sup_1811950142, 7), NTI1845493764);

      return result_1811950145;

    }
    
function HEX3Aanonymous_1811950354(x_1811950374) {
      var result_1811950377 = [];

        result_1811950377 = nimCopy(null, [nimCopy(null, x_1811950374, NTI1811943756)], NTI1811944311);

      return result_1811950377;

    }
    
function HEX3Aanonymous_1811950235(x_1811950255) {
      var result_1811950258 = [];

        result_1811950258 = nimCopy(null, [x_1811950255], NTI1811943869);

      return result_1811950258;

    }
    
function HEX3Aanonymous_1811950452(x_1811950487) {
      var result_1811950490 = [];

        var resultHEX60gensym217_1811950499 = newSeq_1811946336(0);
        Label1: do {
          var xHEX60gensym217_1811950503 = [];
          var i_1795162563 = 0;
          var L_1795162564 = (x_1811950487).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_1795162563 < L_1795162564)) break Label3;
                xHEX60gensym217_1811950503 = x_1811950487[chckIndx(i_1795162563, 0, (x_1811950487).length - 1)];
                var a_1811950504 = nimCopy(null, resultHEX60gensym217_1811950499, NTI1811944720);
                var b_1811950505 = nimCopy(null, xHEX60gensym217_1811950503, NTI1811943718);
                resultHEX60gensym217_1811950499 = nimCopy(null, HEX26_1811946371(a_1811950504, b_1811950505), NTI1811944743);
                i_1795162563 = addInt(i_1795162563, 1);
                if (!(((x_1811950487).length == L_1795162564))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        result_1811950490 = nimCopy(null, resultHEX60gensym217_1811950499, NTI1811944720);

      return result_1811950490;

    }
    
function HEX3Aanonymous_1811950533(primes_1811950552) {
      var result_1811950555 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811950555 = nimCopy(result_1811950555, withFlag_1845494730(toTextRectOneLine_1845493829(nsuRepeatStr(makeNimstrLit("\xE2\x80\xB2"), chckRange((primes_1811950552).length, 0, 2147483647)), 0, 0), 7), NTI1845493764);

      return result_1811950555;

    }
    
function HEX3Aanonymous_1811950651(sub_1811950667) {
      var result_1811950670 = ({rows: [], baseline: 0, width: 0, flag: 0});

        result_1811950670 = nimCopy(result_1811950670, withFlag_1845494730(sub_1811950667, 6), NTI1845493764);

      return result_1811950670;

    }
    
function HEX3Aanonymous_1811951128(x_1811951148) {
      var result_1811951151 = [];

        result_1811951151 = nimCopy(null, [nimCopy(null, x_1811951148, NTI1845493764)], NTI1811941426);

      return result_1811951151;

    }
    
function HEX3Aanonymous_1811950772(x_1811950792) {
      var result_1811950795 = [];

        result_1811950795 = nimCopy(null, [nimCopy(null, x_1811950792, NTI1845493764)], NTI1811941426);

      return result_1811950795;

    }
    
function HEX3Aanonymous_1811950835(x_1811950855) {
      var result_1811950858 = [];

        result_1811950858 = nimCopy(null, [nimCopy(null, x_1811950855, NTI1845493764)], NTI1811941426);

      return result_1811950858;

    }
    
function HEX3Aanonymous_1811950952(x_1811950972) {
      var result_1811950975 = [];

        result_1811950975 = nimCopy(null, [nimCopy(null, x_1811950972, NTI1845493764)], NTI1811941426);

      return result_1811950975;

    }
    
function HEX3Aanonymous_1811951015(x_1811951035) {
      var result_1811951038 = [];

        result_1811951038 = nimCopy(null, [nimCopy(null, x_1811951035, NTI1845493764)], NTI1811941426);

      return result_1811951038;

    }

function translateIfPossible_1811949793(str_1811949794, table_1811949797) {
  var result_1811949799 = ({val: [], has: false});

  BeforeRet: do {
    var resultHEX60gensym200_1811949809 = [];
    Label1: do {
      var xHEX60gensym200_1811949810 = 0;
      var i_1795162570 = 0;
      var result_1795162571 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162570 < (str_1811949794).length)) break Label3;
            if ((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] <= 127)) {
            result_1795162571 = chckRange(str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)], -2147483648, 2147483647);
            i_1795162570 = addInt(i_1795162570, 1);
            }
            else {
            if (((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] >>> 5) == 6)) {
            if ((i_1795162570 <= subInt((str_1811949794).length, 2))) {
            result_1795162571 = chckRange((((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] & 31) << 6) | (str_1811949794[chckIndx(addInt(i_1795162570, 1), 0, (str_1811949794).length - 1)] & 63)), -2147483648, 2147483647);
            i_1795162570 = addInt(i_1795162570, 2);
            }
            else {
              result_1795162571 = 65533;
              i_1795162570 = addInt(i_1795162570, 1);
            }
            
            }
            else {
            if (((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] >>> 4) == 14)) {
            if ((i_1795162570 <= subInt((str_1811949794).length, 3))) {
            result_1795162571 = chckRange(((((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] & 15) << 12) | ((str_1811949794[chckIndx(addInt(i_1795162570, 1), 0, (str_1811949794).length - 1)] & 63) << 6)) | (str_1811949794[chckIndx(addInt(i_1795162570, 2), 0, (str_1811949794).length - 1)] & 63)), -2147483648, 2147483647);
            i_1795162570 = addInt(i_1795162570, 3);
            }
            else {
              result_1795162571 = 65533;
              i_1795162570 = addInt(i_1795162570, 1);
            }
            
            }
            else {
            if (((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] >>> 3) == 30)) {
            if ((i_1795162570 <= subInt((str_1811949794).length, 4))) {
            result_1795162571 = chckRange((((((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] & 7) << 18) | ((str_1811949794[chckIndx(addInt(i_1795162570, 1), 0, (str_1811949794).length - 1)] & 63) << 12)) | ((str_1811949794[chckIndx(addInt(i_1795162570, 2), 0, (str_1811949794).length - 1)] & 63) << 6)) | (str_1811949794[chckIndx(addInt(i_1795162570, 3), 0, (str_1811949794).length - 1)] & 63)), -2147483648, 2147483647);
            i_1795162570 = addInt(i_1795162570, 4);
            }
            else {
              result_1795162571 = 65533;
              i_1795162570 = addInt(i_1795162570, 1);
            }
            
            }
            else {
            if (((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] >>> 2) == 62)) {
            if ((i_1795162570 <= subInt((str_1811949794).length, 5))) {
            result_1795162571 = chckRange(((((((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] & 3) << 24) | ((str_1811949794[chckIndx(addInt(i_1795162570, 1), 0, (str_1811949794).length - 1)] & 63) << 18)) | ((str_1811949794[chckIndx(addInt(i_1795162570, 2), 0, (str_1811949794).length - 1)] & 63) << 12)) | ((str_1811949794[chckIndx(addInt(i_1795162570, 3), 0, (str_1811949794).length - 1)] & 63) << 6)) | (str_1811949794[chckIndx(addInt(i_1795162570, 4), 0, (str_1811949794).length - 1)] & 63)), -2147483648, 2147483647);
            i_1795162570 = addInt(i_1795162570, 5);
            }
            else {
              result_1795162571 = 65533;
              i_1795162570 = addInt(i_1795162570, 1);
            }
            
            }
            else {
            if (((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] >>> 1) == 126)) {
            if ((i_1795162570 <= subInt((str_1811949794).length, 6))) {
            result_1795162571 = chckRange((((((((str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)] & 1) << 30) | ((str_1811949794[chckIndx(addInt(i_1795162570, 1), 0, (str_1811949794).length - 1)] & 63) << 24)) | ((str_1811949794[chckIndx(addInt(i_1795162570, 2), 0, (str_1811949794).length - 1)] & 63) << 18)) | ((str_1811949794[chckIndx(addInt(i_1795162570, 3), 0, (str_1811949794).length - 1)] & 63) << 12)) | ((str_1811949794[chckIndx(addInt(i_1795162570, 4), 0, (str_1811949794).length - 1)] & 63) << 6)) | (str_1811949794[chckIndx(addInt(i_1795162570, 5), 0, (str_1811949794).length - 1)] & 63)), -2147483648, 2147483647);
            i_1795162570 = addInt(i_1795162570, 6);
            }
            else {
              result_1795162571 = 65533;
              i_1795162570 = addInt(i_1795162570, 1);
            }
            
            }
            else {
              result_1795162571 = chckRange(str_1811949794[chckIndx(i_1795162570, 0, (str_1811949794).length - 1)], -2147483648, 2147483647);
              i_1795162570 = addInt(i_1795162570, 1);
            }
            }}}}}
            xHEX60gensym200_1811949810 = result_1795162571;
            resultHEX60gensym200_1811949809.push(xHEX60gensym200_1811949810);;
          }
      } while (false);
    } while (false);
    var runes_1811949815 = nimCopy(null, resultHEX60gensym200_1811949809, NTI1811947329);
      var resultHEX60gensym201_1811949817 = true;
      Label4: do {
        var it_1811949821 = 0;
        var i_1795162575 = 0;
        var L_1795162576 = (runes_1811949815).length;
        Label5: do {
            Label6: while (true) {
            if (!(i_1795162575 < L_1795162576)) break Label6;
              it_1811949821 = runes_1811949815[chckIndx(i_1795162575, 0, (runes_1811949815).length - 1)];
              if (!(contains_1811949864(table_1811949797, it_1811949821))) {
              resultHEX60gensym201_1811949817 = false;
              break Label4;
              }
              
              i_1795162575 = addInt(i_1795162575, 1);
              if (!(((runes_1811949815).length == L_1795162576))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    if (resultHEX60gensym201_1811949817) {
    Label7: do {
      var iHEX60gensym203_1811950028 = 0;
      var resultHEX60gensym203_1811950035 = newSeq_452985301(chckRange((runes_1811949815).length, 0, 2147483647));
      Label8: do {
        var it_1811950039 = 0;
        var i_1795162580 = 0;
        var L_1795162581 = (runes_1811949815).length;
        Label9: do {
            Label10: while (true) {
            if (!(i_1795162580 < L_1795162581)) break Label10;
              it_1811950039 = runes_1811949815[chckIndx(i_1795162580, 0, (runes_1811949815).length - 1)];
              resultHEX60gensym203_1811950035[chckIndx(iHEX60gensym203_1811950028, 0, (resultHEX60gensym203_1811950035).length - 1)] = nimCopy(null, HEX5BHEX5D_1811949949(table_1811949797, it_1811950039), NTI33554439);
              iHEX60gensym203_1811950028 = addInt(iHEX60gensym203_1811950028, 1);
              i_1795162580 = addInt(i_1795162580, 1);
              if (!(((runes_1811949815).length == L_1795162581))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    result_1811949799 = nimCopy(result_1811949799, some_1728053767(nsuJoinSep(resultHEX60gensym203_1811950035, [])), NTI1275068493);
    break BeforeRet;
    }
    
  } while (false);

  return result_1811949799;

}
    
function HEX3Aanonymous_1811951214(operands_1811951290) {
        var Temporary1;
          var Temporary2;
          var Temporary3;

      var result_1811951293 = ({rows: [], baseline: 0, width: 0, flag: 0});

        var base_1811951294 = nimCopy(null, operands_1811951290[chckIndx(0, 0, (operands_1811951290).length - 1)], NTI1845493764);
        var flag_1811951295 = base_1811951294.flag;
        base_1811951294.flag = 0;
        switch ((operands_1811951290).length) {
        case 1:
          Temporary1 = base_1811951294;
          break;
        case 3:
          if ((operands_1811951290[chckIndx(1, 0, (operands_1811951290).length - 1)].flag == 7)) {
          Temporary2 = {Field0: nimCopy(null, operands_1811951290[chckIndx(1, 0, (operands_1811951290).length - 1)], NTI1845493764), Field1: nimCopy(null, operands_1811951290[chckIndx(2, 0, (operands_1811951290).length - 1)], NTI1845493764)};
          }
          else {
          Temporary2 = {Field0: nimCopy(null, operands_1811951290[chckIndx(2, 0, (operands_1811951290).length - 1)], NTI1845493764), Field1: nimCopy(null, operands_1811951290[chckIndx(1, 0, (operands_1811951290).length - 1)], NTI1845493764)};
          }
          
          var colontmp__1795162567 = nimCopy(null, Temporary2, NTI1811948542);
          var sup_1811951303 = nimCopy(null, colontmp__1795162567["Field0"], NTI1845493764);
          var sub_1811951304 = nimCopy(null, colontmp__1795162567["Field1"], NTI1845493764);
          if (oneLine_1811939341) {
          var str_1811951305 = row_1845493795(base_1811951294);
          if (!(isEmpty_1845493807(sub_1811951304))) {
          str_1811951305.push.apply(str_1811951305, get_1744830691(translateIfPossible_1811949793(row_1845493795(sub_1811951304), subscripts_1828718263), (makeNimstrLit("_") || []).concat(rowAsAtom_1845493798(sub_1811951304) || [])));;
          }
          
          if (!(isEmpty_1845493807(sup_1811951303))) {
          str_1811951305.push.apply(str_1811951305, get_1744830691(translateIfPossible_1811949793(row_1845493795(sup_1811951303), superscripts_1828718258), (makeNimstrLit("^") || []).concat(rowAsAtom_1845493798(sup_1811951303) || [])));;
          }
          
          Temporary3 = toTextRectOneLine_1845493829(str_1811951305, 0, 0);
          }
          else {
          if ((ConstSet142[flag_1811951295] != undefined)) {
          Temporary3 = stack_1845494644([nimCopy(null, sup_1811951303, NTI1845493764), nimCopy(null, base_1811951294, NTI1845493764), nimCopy(null, sub_1811951304, NTI1845493764)], addInt(base_1811951294.baseline, height_1845493801(sup_1811951303)), 0);
          }
          else {
          Temporary3 = HEX26_1845494597(base_1811951294, stack_1845494644([extendDown_1845493889(sup_1811951303, height_1845493801(base_1811951294)), nimCopy(null, sub_1811951304, NTI1845493764)], addInt(base_1811951294.baseline, height_1845493801(sup_1811951303)), 1));
          }
          }
          Temporary1 = Temporary3;
          break;
        default: 
          Temporary1 = ({rows: [], baseline: 0, width: 0, flag: 0});
          break;
        }
        result_1811951293 = nimCopy(result_1811951293, withFlag_1845494730(Temporary1, flag_1811951295), NTI1845493764);

      return result_1811951293;

    }
    var Temporary16;
    var Temporary17;
      var Temporary18;

  var result_1811939342 = [];

    var ws_1811942140 = map_1811942083(HEX26_1811941849(map_1811941604(HEX2A_1811940942(whitespace_1862272030, HEX2EHEX2E_939524947(0, 2147483647).a), HEX3Aanonymous_1811941784), HEX2A_1811941428(HEX7C_1811941326(map_1811941086(whitespace_1862272030, HEX3Aanonymous_1811941272), nop_1811940950()), subInt(HEX2EHEX2E_939524947(0, 2147483647).b, HEX2EHEX2E_939524947(0, 2147483647).a))), HEX3Aanonymous_1811941999);
    var atom_1811942151 = {body: null};
    var expr_1811943593 = map_1811943500(map_1811943406(HEX26_1811943133(map_1811942888(HEX2A_1811942196(atom_1811942151, HEX2EHEX2E_939524947(0, 2147483647).a), HEX3Aanonymous_1811943068), HEX2A_1811942712(HEX7C_1811942610(map_1811942358(atom_1811942151, HEX3Aanonymous_1811942556), nop_1811942204()), subInt(HEX2EHEX2E_939524947(0, 2147483647).b, HEX2EHEX2E_939524947(0, 2147483647).a))), HEX3Aanonymous_1811943283), HEX3Aanonymous_1811943471);
    var alpha_1811943616 = HEX7C_1862272049(c_1862271383(HEX2EHEX2E_1828718278(65, 90)), c_1862271383(HEX2EHEX2E_1828718278(97, 122)));
    var digit_1811943724 = map_1811943667(c_1862271383(HEX2EHEX2E_1828718278(48, 57)), HEX3Aanonymous_1811943630);
    var sHEX60gensym88_1811944725 = map_1811944690(fontsByName_1828716669, HEX3Aanonymous_1811943800);
    if (!((0 < (sHEX60gensym88_1811944725).length))) {
    failedAssertImpl_218103864(makeNimstrLit("sequtils.nim(895, 10) `s`gensym88.len > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym88_1811944735 = null;
    resultHEX60gensym88_1811944735 = sHEX60gensym88_1811944725[chckIndx(0, 0, (sHEX60gensym88_1811944725).length - 1)];
    Label1: do {
      var iHEX60gensym88_1811944743 = 0;
      var colontmp__1795162142 = 0;
      colontmp__1795162142 = (sHEX60gensym88_1811944725).length;
      var i_1795162143 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(i_1795162143 < colontmp__1795162142)) break Label3;
            iHEX60gensym88_1811944743 = i_1795162143;
            var a_1811944744 = resultHEX60gensym88_1811944735;
            var b_1811944745 = sHEX60gensym88_1811944725[chckIndx(iHEX60gensym88_1811944743, 0, (sHEX60gensym88_1811944725).length - 1)];
            resultHEX60gensym88_1811944735 = HEX7C_1811944754(a_1811944744, b_1811944745);
            i_1795162143 = addInt(i_1795162143, 1);
          }
      } while (false);
    } while (false);
    var latinLetter_1811944832 = HEX7C_1811944754(map_1811943667(alpha_1811943616, HEX3Aanonymous_1811943733), resultHEX60gensym88_1811944735);
    var sHEX60gensym98_1811945167 = map_1811945141(delimiters_1828716667, HEX3Aanonymous_1811944833);
    var nHEX60gensym98_1811945171 = (sHEX60gensym98_1811945167).length;
    if (!((0 < nHEX60gensym98_1811945171))) {
    failedAssertImpl_218103864(makeNimstrLit("sequtils.nim(965, 10) `n`gensym98 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym98_1811945177 = sHEX60gensym98_1811945167[chckIndx(subInt(nHEX60gensym98_1811945171, 1), 0, (sHEX60gensym98_1811945167).length - 1)];
    Label4: do {
      var iHEX60gensym98_1811945183 = 0;
      var colontmp__1795162146 = 0;
      colontmp__1795162146 = subInt(nHEX60gensym98_1811945171, 2);
      var res_1795162147 = colontmp__1795162146;
      Label5: do {
          Label6: while (true) {
          if (!(0 <= res_1795162147)) break Label6;
            iHEX60gensym98_1811945183 = res_1795162147;
            var a_1811945184 = sHEX60gensym98_1811945167[chckIndx(iHEX60gensym98_1811945183, 0, (sHEX60gensym98_1811945167).length - 1)];
            var b_1811945185 = resultHEX60gensym98_1811945177;
            resultHEX60gensym98_1811945177 = HEX7C_1811944754(a_1811945184, b_1811945185);
            res_1795162147 = subInt(res_1795162147, 1);
          }
      } while (false);
    } while (false);
    var delimiter_1811945198 = resultHEX60gensym98_1811945177;
    var command_1811947070 = map_1811945029(validate_1811946791(map_1811946657(HEX3EHEX3E_1811946521(c_1862271209(92), map_1811946456(HEX26_1811946177(map_1811945932(HEX2A_1811945239(letter_1862272123, HEX2EHEX2E_939524947(1, 2147483647).a), HEX3Aanonymous_1811946112), HEX2A_1811945756(HEX7C_1811945654(map_1811945418(letter_1862272123, HEX3Aanonymous_1811945592), nop_1811945247()), subInt(HEX2EHEX2E_939524947(1, 2147483647).b, HEX2EHEX2E_939524947(1, 2147483647).a))), HEX3Aanonymous_1811946327)), HEX3Aanonymous_1811946604), HEX3Aanonymous_1811946722, makeNimstrLit("a command")), HEX3Aanonymous_1811946854);
    var sHEX60gensym131_1811947136 = map_1811945141(nonCommands_1828719809, HEX3Aanonymous_1811947071);
    var nHEX60gensym131_1811947140 = (sHEX60gensym131_1811947136).length;
    if (!((0 < nHEX60gensym131_1811947140))) {
    failedAssertImpl_218103864(makeNimstrLit("sequtils.nim(965, 10) `n`gensym131 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym131_1811947146 = sHEX60gensym131_1811947136[chckIndx(subInt(nHEX60gensym131_1811947140, 1), 0, (sHEX60gensym131_1811947136).length - 1)];
    Label7: do {
      var iHEX60gensym131_1811947152 = 0;
      var colontmp__1795162150 = 0;
      colontmp__1795162150 = subInt(nHEX60gensym131_1811947140, 2);
      var res_1795162151 = colontmp__1795162150;
      Label8: do {
          Label9: while (true) {
          if (!(0 <= res_1795162151)) break Label9;
            iHEX60gensym131_1811947152 = res_1795162151;
            var a_1811947153 = sHEX60gensym131_1811947136[chckIndx(iHEX60gensym131_1811947152, 0, (sHEX60gensym131_1811947136).length - 1)];
            var b_1811947154 = resultHEX60gensym131_1811947146;
            resultHEX60gensym131_1811947146 = HEX7C_1811944754(a_1811947153, b_1811947154);
            res_1795162151 = subInt(res_1795162151, 1);
          }
      } while (false);
    } while (false);
    var nonCommand_1811947167 = resultHEX60gensym131_1811947146;
    var sHEX60gensym140_1811947523 = map_1811947496(simpleDiacritics_1828716894, HEX3Aanonymous_1811947184);
    var nHEX60gensym140_1811947527 = (sHEX60gensym140_1811947523).length;
    if (!((0 < nHEX60gensym140_1811947527))) {
    failedAssertImpl_218103864(makeNimstrLit("sequtils.nim(965, 10) `n`gensym140 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym140_1811947533 = sHEX60gensym140_1811947523[chckIndx(subInt(nHEX60gensym140_1811947527, 1), 0, (sHEX60gensym140_1811947523).length - 1)];
    Label10: do {
      var iHEX60gensym140_1811947539 = 0;
      var colontmp__1795162154 = 0;
      colontmp__1795162154 = subInt(nHEX60gensym140_1811947527, 2);
      var res_1795162155 = colontmp__1795162154;
      Label11: do {
          Label12: while (true) {
          if (!(0 <= res_1795162155)) break Label12;
            iHEX60gensym140_1811947539 = res_1795162155;
            var a_1811947540 = sHEX60gensym140_1811947523[chckIndx(iHEX60gensym140_1811947539, 0, (sHEX60gensym140_1811947523).length - 1)];
            var b_1811947541 = resultHEX60gensym140_1811947533;
            resultHEX60gensym140_1811947533 = HEX7C_1811944754(a_1811947540, b_1811947541);
            res_1795162155 = subInt(res_1795162155, 1);
          }
      } while (false);
    } while (false);
    var simpleDiacritic_1811947554 = resultHEX60gensym140_1811947533;
    var frac_1811948070 = HEX3EHEX3E_1811947995(HEX7C_1811947563(HEX7C_1811947563(HEX7C_1811947563(s_1862271087(makeNimstrLit("\\frac")), s_1862271087(makeNimstrLit("\\tfrac"))), s_1862271087(makeNimstrLit("\\dfrac"))), s_1862271087(makeNimstrLit("\\cfrac"))), map_1811943500(HEX26_1811947805(map_1811942358(atom_1811942151, HEX3Aanonymous_1811947685), map_1811942358(atom_1811942151, HEX3Aanonymous_1811947748)), HEX3Aanonymous_1811947900));
    var binom_1811948334 = HEX3EHEX3E_1811947995(HEX7C_1811947563(HEX7C_1811947563(HEX7C_1811947563(s_1862271087(makeNimstrLit("\\binom")), s_1862271087(makeNimstrLit("\\tbinom"))), s_1862271087(makeNimstrLit("\\dbinom"))), s_1862271087(makeNimstrLit("\\cbinom"))), map_1811943500(HEX26_1811947805(map_1811942358(atom_1811942151, HEX3Aanonymous_1811948131), map_1811942358(atom_1811942151, HEX3Aanonymous_1811948194)), HEX3Aanonymous_1811948272));
    var sqrt_1811948670 = HEX3EHEX3E_1811947995(s_1862271087(makeNimstrLit("\\sqrt")), map_1811947430(atom_1811942151, HEX3Aanonymous_1811948343));
    var boxed_1811948787 = HEX3EHEX3E_1811947995(s_1862271087(makeNimstrLit("\\boxed")), map_1811947430(atom_1811942151, HEX3Aanonymous_1811948679));
    var sHEX60gensym185_1811948931 = map_1811948904(extensibleArrowParts_1828716668, HEX3Aanonymous_1811948804);
    var nHEX60gensym185_1811948935 = (sHEX60gensym185_1811948931).length;
    if (!((0 < nHEX60gensym185_1811948935))) {
    failedAssertImpl_218103864(makeNimstrLit("sequtils.nim(965, 10) `n`gensym185 > 0` Can\'t fold empty sequences"));
    }
    
    var resultHEX60gensym185_1811948941 = sHEX60gensym185_1811948931[chckIndx(subInt(nHEX60gensym185_1811948935, 1), 0, (sHEX60gensym185_1811948931).length - 1)];
    Label13: do {
      var iHEX60gensym185_1811948947 = 0;
      var colontmp__1795162185 = 0;
      colontmp__1795162185 = subInt(nHEX60gensym185_1811948935, 2);
      var res_1795162186 = colontmp__1795162185;
      Label14: do {
          Label15: while (true) {
          if (!(0 <= res_1795162186)) break Label15;
            iHEX60gensym185_1811948947 = res_1795162186;
            var a_1811948948 = sHEX60gensym185_1811948931[chckIndx(iHEX60gensym185_1811948947, 0, (sHEX60gensym185_1811948931).length - 1)];
            var b_1811948949 = resultHEX60gensym185_1811948941;
            resultHEX60gensym185_1811948941 = HEX7C_1811944754(a_1811948948, b_1811948949);
            res_1795162186 = subInt(res_1795162186, 1);
          }
      } while (false);
    } while (false);
    var extensibleArrow_1811948962 = resultHEX60gensym185_1811948941;
    var leftright_1811949409 = map_1811943500(HEX3EHEX3E_1811949285(HEX3EHEX3E_1811943817(s_1862271087(makeNimstrLit("\\left")), ws_1811942140), HEX26_1811947805(HEX26_1811947805(map_1811942358(delimiter_1811945198, HEX3Aanonymous_1811949013), map_1811942358(HEX3EHEX3E_1811947308(ws_1811942140, expr_1811943593), HEX3Aanonymous_1811949076)), map_1811942358(HEX3EHEX3E_1811947308(HEX3EHEX3E_1811943817(s_1862271087(makeNimstrLit("\\right")), ws_1811942140), delimiter_1811945198), HEX3Aanonymous_1811949207))), HEX3Aanonymous_1811949368);
    var bracedExpr_1811949576 = HEX3CHEX3C_1811949501(HEX3EHEX3E_1811949418(c_1862271209(123), expr_1811943593), c_1862271209(125));
    var atom1_1811949792 = HEX3CHEX3C_1811949717(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(HEX7C_1811944754(bracedExpr_1811949576, leftright_1811949409), digit_1811943724), latinLetter_1811944832), command_1811947070), nonCommand_1811947167), simpleDiacritic_1811947554), frac_1811948070), binom_1811948334), sqrt_1811948670), boxed_1811948787), extensibleArrow_1811948962), ws_1811942140);
    var superscript_1811950629 = HEX7C_1811944754(map_1811947430(HEX3EHEX3E_1811949418(c_1862271209(94), atom1_1811949792), HEX3Aanonymous_1811950126), map_1811950568(map_1811946456(HEX26_1811946177(map_1811945932(HEX2A_1811945239(c_1862271209(39), HEX2EHEX2E_939524947(1, 2147483647).a), HEX3Aanonymous_1811950354), HEX2A_1811945756(HEX7C_1811945654(map_1811945418(c_1862271209(39), HEX3Aanonymous_1811950235), nop_1811945247()), subInt(HEX2EHEX2E_939524947(1, 2147483647).b, HEX2EHEX2E_939524947(1, 2147483647).a))), HEX3Aanonymous_1811950452), HEX3Aanonymous_1811950533));
    var subscript_1811950686 = map_1811947430(HEX3EHEX3E_1811949418(c_1862271209(95), atom1_1811949792), HEX3Aanonymous_1811950651);
    atom_1811942151.body = map_1811943500(HEX26_1811947805(map_1811942358(atom1_1811949792, HEX3Aanonymous_1811951128), HEX7C_1811942610(HEX7C_1811942610(HEX26_1811947805(map_1811942358(superscript_1811950629, HEX3Aanonymous_1811950772), map_1811942358(HEX7C_1811944754(subscript_1811950686, nop_1811950696()), HEX3Aanonymous_1811950835)), HEX26_1811947805(map_1811942358(subscript_1811950686, HEX3Aanonymous_1811950952), map_1811942358(HEX7C_1811944754(superscript_1811950629, nop_1811950696()), HEX3Aanonymous_1811951015))), nop_1811942204())), HEX3Aanonymous_1811951214).body;
    var completeExpr_1811951444 = HEX3CHEX3C_1811951369(expr_1811943593, eof_1862272028);
    var parsed_1811951457 = parse_1811942404(completeExpr_1811951444, latex_1811939340);
    if ((parsed_1811951457.kind == 0)) {
    var Temporary17 = parsed_1811951457;
    if (ConstSet146[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'ParseResult\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1862270997)); }
    Temporary16 = HEX24_1845493792(Temporary17.value);
    }
    else {
      var colontmp__1795162586 = lineInfo_1811951462(parsed_1811951457);
      var lnNum_1811951491 = colontmp__1795162586["Field0"];
      var colNum_1811951492 = colontmp__1795162586["Field1"];
      var showing_1811951493 = (makeNimstrLit("    ") || []).concat((Temporary18 = nsuSplitLines(latex_1811939340, false), Temporary18)[chckIndx(subInt(lnNum_1811951491, 1), 0, (Temporary18).length - 1)] || [],makeNimstrLit("\x0A") || [],nsuRepeatChar(32, chckRange(addInt(colNum_1811951492, 3), 0, 2147483647)) || [],makeNimstrLit("^") || []);
      var fmtRes_1811951494 = [mnewString(0)];
      fmtRes_1811951494[0].push.apply(fmtRes_1811951494[0], makeNimstrLit("Parse error at line "));;
      formatValue_1325400109(fmtRes_1811951494, 0, lnNum_1811951491, []);
      fmtRes_1811951494[0].push.apply(fmtRes_1811951494[0], makeNimstrLit(", column "));;
      formatValue_1325400109(fmtRes_1811951494, 0, colNum_1811951492, []);
      fmtRes_1811951494[0].push.apply(fmtRes_1811951494[0], makeNimstrLit("\x0A"));;
      formatValue_1124073634(fmtRes_1811951494, 0, showing_1811951493, []);
      raiseException({message: nimCopy(null, fmtRes_1811951494[0], NTI33554439), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1811939342 = nimCopy(null, Temporary16, NTI33554439);

  return result_1811939342;

}

function matext(latex_1795162121, opts_1795162122) {
  var result_1795162123 = null;

    var opts_1795162124 = opts_1795162122;
    if ((opts_1795162124 == undefined)) {
    opts_1795162124 = {};
    }
    
    result_1795162123 = toJSStr(render_1811939339(cstrToNimstr(latex_1795162121), (opts_1795162124.oneLine)));

  return result_1795162123;

}
export default matext;

function nextPowerOfTwo_704643275(x_704643276) {
  var result_704643277 = 0;

    result_704643277 = (x_704643276 - 1);
    result_704643277 = (result_704643277 | (result_704643277 >> 16));
    result_704643277 = (result_704643277 | (result_704643277 >> 8));
    result_704643277 = (result_704643277 | (result_704643277 >> 4));
    result_704643277 = (result_704643277 | (result_704643277 >> 2));
    result_704643277 = (result_704643277 | (result_704643277 >> 1));
    result_704643277 += (1 + ((x_704643276 <= 0) ? 1 : 0));

  return result_704643277;

}

function slotsNeeded_1157627946(count_1157627947) {
  var result_1157627948 = 0;

    result_1157627948 = nextPowerOfTwo_704643275(addInt(divInt(mulInt(count_1157627947, 3), 2), 4));

  return result_1157627948;

}

function rawGet_1308623047(t_1308623050, key_1308623051, hc_1308623052, hc_1308623052_Idx) {
            var Temporary3;

  var result_1308623053 = 0;

  BeforeRet: do {
    hc_1308623052[hc_1308623052_Idx] = hash_1056965030(key_1308623051);
    if ((hc_1308623052[hc_1308623052_Idx] == 0)) {
    hc_1308623052[hc_1308623052_Idx] = 314159265;
    }
    
    if (((t_1308623050.data).length == 0)) {
    result_1308623053 = -1;
    break BeforeRet;
    }
    
    var h_1308623065 = (hc_1308623052[hc_1308623052_Idx] & (t_1308623050.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1308623050.data[chckIndx(h_1308623065, 0, (t_1308623050.data).length - 1)].Field0)) break Label2;
            if (!(t_1308623050.data[chckIndx(h_1308623065, 0, (t_1308623050.data).length - 1)].Field0 == hc_1308623052[hc_1308623052_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1308623050.data[chckIndx(h_1308623065, 0, (t_1308623050.data).length - 1)].Field1, key_1308623051);            }          if (Temporary3) {
          result_1308623053 = h_1308623065;
          break BeforeRet;
          }
          
          h_1308623065 = nextTry_1157627938(h_1308623065, (t_1308623050.data).length - 1);
        }
    } while (false);
    result_1308623053 = subInt(-1, h_1308623065);
  } while (false);

  return result_1308623053;

}

function mustRehash_1694499149(t_1694499151) {
  var result_1694499152 = false;

    if (!((t_1694499151.counter < (t_1694499151.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1694499152 = ((mulInt((t_1694499151.data).length, 2) < mulInt(t_1694499151.counter, 3)) || (subInt((t_1694499151.data).length, t_1694499151.counter) < 4));

  return result_1694499152;

}

function rawInsert_1694499598(t_1694499602, data_1694499603, data_1694499603_Idx, key_1694499604, val_1694499605, hc_1694499606, h_1694499607) {
    data_1694499603[data_1694499603_Idx][chckIndx(h_1694499607, 0, (data_1694499603[data_1694499603_Idx]).length - 1)].Field1 = nimCopy(null, key_1694499604, NTI33554439);
    data_1694499603[data_1694499603_Idx][chckIndx(h_1694499607, 0, (data_1694499603[data_1694499603_Idx]).length - 1)].Field2 = val_1694499605;
    data_1694499603[data_1694499603_Idx][chckIndx(h_1694499607, 0, (data_1694499603[data_1694499603_Idx]).length - 1)].Field0 = hc_1694499606;

  
}

function enlarge_1694499304(t_1694499307) {
    var n_1694499310 = [];
    n_1694499310 = new Array(chckRange(mulInt((t_1694499307.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1694499307.data).length, 2), 0, 2147483647) ; ++i) { n_1694499310[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1694499307.data; t_1694499307.data = n_1694499310; n_1694499310 = Temporary1;    Label2: do {
      var i_1694499374 = 0;
      var colontmp__486541065 = 0;
      colontmp__486541065 = (n_1694499310).length - 1;
      var res_486541066 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_486541066 <= colontmp__486541065)) break Label4;
            i_1694499374 = res_486541066;
            var eh_1694499428 = n_1694499310[chckIndx(i_1694499374, 0, (n_1694499310).length - 1)].Field0;
            if (isFilled_1157627935(eh_1694499428)) {
            var j_1694499432 = (eh_1694499428 & (t_1694499307.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_1157627935(t_1694499307.data[chckIndx(j_1694499432, 0, (t_1694499307.data).length - 1)].Field0)) break Label6;
                  j_1694499432 = nextTry_1157627938(j_1694499432, (t_1694499307.data).length - 1);
                }
            } while (false);
            rawInsert_1694499598(t_1694499307, t_1694499307, "data", n_1694499310[chckIndx(i_1694499374, 0, (n_1694499310).length - 1)].Field1, n_1694499310[chckIndx(i_1694499374, 0, (n_1694499310).length - 1)].Field2, eh_1694499428, j_1694499432);
            }
            
            res_486541066 = addInt(res_486541066, 1);
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_1694499768(t_1694499771, key_1694499772, hc_1694499773) {
  var result_1694499774 = 0;

  BeforeRet: do {
    if (((t_1694499771.data).length == 0)) {
    result_1694499774 = -1;
    break BeforeRet;
    }
    
    var h_1694499825 = (hc_1694499773 & (t_1694499771.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1694499771.data[chckIndx(h_1694499825, 0, (t_1694499771.data).length - 1)].Field0)) break Label2;
          if (((t_1694499771.data[chckIndx(h_1694499825, 0, (t_1694499771.data).length - 1)].Field0 == hc_1694499773) && eqStrings(t_1694499771.data[chckIndx(h_1694499825, 0, (t_1694499771.data).length - 1)].Field1, key_1694499772))) {
          result_1694499774 = h_1694499825;
          break BeforeRet;
          }
          
          h_1694499825 = nextTry_1157627938(h_1694499825, (t_1694499771.data).length - 1);
        }
    } while (false);
    result_1694499774 = subInt(-1, h_1694499825);
  } while (false);

  return result_1694499774;

}

function HEX5BHEX5DHEX3D_1694498976(t_1694498979, key_1694498980, val_1694498981) {
    if (((t_1694498979.data).length == 0)) {
    var correctSizeHEX60gensym8_1694499030 = slotsNeeded_1157627946(32);
    t_1694498979.counter = 0;
    t_1694498979.data = new Array(chckRange(correctSizeHEX60gensym8_1694499030, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1694499030, 0, 2147483647) ; ++i) { t_1694498979.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1694499035 = [0];
    var index_1694499042 = rawGet_1308623047(t_1694498979, key_1694498980, hc_1694499035, 0);
    if ((0 <= index_1694499042)) {
    t_1694498979.data[chckIndx(index_1694499042, 0, (t_1694498979.data).length - 1)].Field2 = val_1694498981;
    }
    else {
      if (((t_1694498979.data).length == 0)) {
      var correctSizeHEX60gensym11_1694499144 = slotsNeeded_1157627946(32);
      t_1694498979.counter = 0;
      t_1694498979.data = new Array(chckRange(correctSizeHEX60gensym11_1694499144, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1694499144, 0, 2147483647) ; ++i) { t_1694498979.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1694499149(t_1694498979)) {
      enlarge_1694499304(t_1694498979);
      index_1694499042 = rawGetKnownHC_1694499768(t_1694498979, key_1694498980, hc_1694499035[0]);
      }
      
      index_1694499042 = subInt(-1, index_1694499042);
      rawInsert_1694499598(t_1694498979, t_1694498979, "data", key_1694498980, val_1694498981, hc_1694499035[0], index_1694499042);
      t_1694498979.counter = addInt(t_1694498979.counter, 1);
    }
    

  
}

function HEX3DHEX3D_1711276056(x_1711276058, y_1711276059) {
  var result_1711276060 = false;

  BeforeRet: do {
    if (!((x_1711276058.kind == y_1711276059.kind))) {
    result_1711276060 = false;
    break BeforeRet;
    }
    
    if (!((x_1711276058.base == y_1711276059.base))) {
    result_1711276060 = false;
    break BeforeRet;
    }
    
    result_1711276060 = true;
    break BeforeRet;
  } while (false);

  return result_1711276060;

}

function nsuStrip(s_654313691, leading_654313692, trailing_654313693, chars_654313694) {
          var Temporary5;

  var result_654313695 = [];

    var first_654313696 = 0;
    var last_654313697 = subInt((s_654313691).length, 1);
    if (leading_654313692) {
    Label1: do {
        Label2: while (true) {
        if (!((first_654313696 <= last_654313697) && (chars_654313694[s_654313691[chckIndx(first_654313696, 0, (s_654313691).length - 1)]] != undefined))) break Label2;
          first_654313696 = addInt(first_654313696, 1);
        }
    } while (false);
    }
    
    if (trailing_654313693) {
    Label3: do {
        Label4: while (true) {
          if (!(first_654313696 <= last_654313697)) Temporary5 = false; else {            Temporary5 = (chars_654313694[s_654313691[chckIndx(last_654313697, 0, (s_654313691).length - 1)]] != undefined);          }        if (!Temporary5) break Label4;
          last_654313697 = subInt(last_654313697, 1);
        }
    } while (false);
    }
    
    result_654313695 = nimCopy(null, substr_33557922(s_654313691, first_654313696, last_654313697), NTI33554439);

  return result_654313695;

}

function skipBalancedText_1325400151(body_1325400152, i_1325400153, i_1325400153_Idx) {
    var brackets_1325400154 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1325400153[i_1325400153_Idx] <= (body_1325400152).length - 1)) break Label2;
          switch (body_1325400152[chckIndx(i_1325400153[i_1325400153_Idx], 0, (body_1325400152).length - 1)]) {
          case 91:
            brackets_1325400154 = addInt(brackets_1325400154, 1);
            break;
          case 93:
            if ((brackets_1325400154 == 0)) {
            break Label1;
            }
            
            brackets_1325400154 = subInt(brackets_1325400154, 1);
            break;
          default: 
            break;
          }
          i_1325400153[i_1325400153_Idx] = addInt(i_1325400153[i_1325400153_Idx], 1);
        }
    } while (false);

  
}

function parseXidocArgument_1325400347(body_1325400348, i_1325400349, i_1325400349_Idx) {
  var result_1325400350 = [];

    var start_1325400351 = i_1325400349[i_1325400349_Idx];
    Label1: do {
        Label2: while (true) {
        if (!(i_1325400349[i_1325400349_Idx] <= (body_1325400348).length - 1)) break Label2;
          switch (body_1325400348[chckIndx(i_1325400349[i_1325400349_Idx], 0, (body_1325400348).length - 1)]) {
          case 59:
            break Label1;
            break;
          case 91:
            i_1325400349[i_1325400349_Idx] = addInt(i_1325400349[i_1325400349_Idx], 1);
            skipBalancedText_1325400151(body_1325400348, i_1325400349, i_1325400349_Idx);
            if (!((body_1325400348[chckIndx(i_1325400349[i_1325400349_Idx], 0, (body_1325400348).length - 1)] == 93))) {
            failedAssertImpl_218103864(makeNimstrLit("parser.nim(121, 14) `body[i] == \']\'` "));
            }
            
            break;
          default: 
            break;
          }
          i_1325400349[i_1325400349_Idx] = addInt(i_1325400349[i_1325400349_Idx], 1);
        }
    } while (false);
    result_1325400350 = nimCopy(null, nsuStrip(HEX5BHEX5D_939524972(body_1325400348, HEX2EHEX2E_939524947(start_1325400351, subInt(i_1325400349[i_1325400349_Idx], 1))), true, true, ConstSet149), NTI33554439);

  return result_1325400350;

}

function nsuEndsWith(s_654312756, suffix_654312757) {
          var Temporary3;

  var result_654312758 = false;

  BeforeRet: do {
    var suffixLenHEX60gensym148_654312764 = (suffix_654312757).length;
    var sLenHEX60gensym148_654312765 = (s_654312756).length;
    var iHEX60gensym148_654312766 = 0;
    var jHEX60gensym148_654312767 = subInt(sLenHEX60gensym148_654312765, suffixLenHEX60gensym148_654312764);
    Label1: do {
        Label2: while (true) {
          if (!(0 <= addInt(iHEX60gensym148_654312766, jHEX60gensym148_654312767))) Temporary3 = false; else {            Temporary3 = (addInt(iHEX60gensym148_654312766, jHEX60gensym148_654312767) < sLenHEX60gensym148_654312765);          }        if (!Temporary3) break Label2;
          if (!((s_654312756[chckIndx(addInt(iHEX60gensym148_654312766, jHEX60gensym148_654312767), 0, (s_654312756).length - 1)] == suffix_654312757[chckIndx(iHEX60gensym148_654312766, 0, (suffix_654312757).length - 1)]))) {
          result_654312758 = false;
          break BeforeRet;
          }
          
          iHEX60gensym148_654312766 = addInt(iHEX60gensym148_654312766, 1);
        }
    } while (false);
    if ((suffixLenHEX60gensym148_654312764 <= iHEX60gensym148_654312766)) {
    result_654312758 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_654312758;

}

function allCharsInSet_654312827(s_654312828, theSet_654312829) {
  var result_654312830 = false;

  BeforeRet: do {
    Label1: do {
      var c_654312831 = 0;
      var i_486541105 = 0;
      var L_486541106 = (s_654312828).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541105 < L_486541106)) break Label3;
            c_654312831 = s_654312828[chckIndx(i_486541105, 0, (s_654312828).length - 1)];
            if (!((theSet_654312829[c_654312831] != undefined))) {
            result_654312830 = false;
            break BeforeRet;
            }
            
            i_486541105 = addInt(i_486541105, 1);
            if (!(((s_654312828).length == L_486541106))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_654312830 = true;
    break BeforeRet;
  } while (false);

  return result_654312830;

}

function nsuIsEmptyOrWhitespace(s_654313746) {
  var result_654313747 = false;

    result_654313747 = allCharsInSet_654312827(s_654313746, ConstSet151);

  return result_654313747;

}

function HEX5BHEX5D_1325400408(s_1325400410, i_1325400411) {
  var result_1325400412 = null;
  var result_1325400412_Idx = 0;

    result_1325400412 = s_1325400410; result_1325400412_Idx = chckIndx(subInt((s_1325400410).length, i_1325400411), 0, (s_1325400410).length - 1);

  return [result_1325400412, result_1325400412_Idx];

}

function pop_1325400416(s_1325400418, s_1325400418_Idx) {
  var result_1325400419 = [];

    var L_1325400423 = subInt((s_1325400418[s_1325400418_Idx]).length, 1);
    result_1325400419 = nimCopy(null, s_1325400418[s_1325400418_Idx][chckIndx(L_1325400423, 0, (s_1325400418[s_1325400418_Idx]).length - 1)], NTI33554439);
    if (s_1325400418[s_1325400418_Idx].length < chckRange(L_1325400423, 0, 2147483647)) { for (var i = s_1325400418[s_1325400418_Idx].length ; i < chckRange(L_1325400423, 0, 2147483647) ; ++i) s_1325400418[s_1325400418_Idx].push([]); }
               else { s_1325400418[s_1325400418_Idx].length = chckRange(L_1325400423, 0, 2147483647); };

  return result_1325400419;

}

function parseXidocArguments_1325400388(body_1325400389) {
      var Temporary3;
        var Temporary4;

  var result_1325400390 = [[]];

    var i_1325400391 = [0];
    Label1: do {
        Label2: while (true) {
        if (!(i_1325400391[0] <= (body_1325400389).length - 1)) break Label2;
          result_1325400390[0].push(parseXidocArgument_1325400347(body_1325400389, i_1325400391, 0));;
          i_1325400391[0] = addInt(i_1325400391[0], 1);
        }
    } while (false);
    if (nsuEndsWith(body_1325400389, makeNimstrLit(";"))) {
    result_1325400390[0].push([]);;
    }
    
      if (!nsuEndsWith(nsuStrip(body_1325400389, false, true, ConstSet150), makeNimstrLit("\x0A"))) Temporary3 = false; else {        Temporary3 = nsuIsEmptyOrWhitespace((Temporary4 = HEX5BHEX5D_1325400408(result_1325400390[0], 1), Temporary4)[0][Temporary4[1]]);      }    if (Temporary3) {
    var _ = pop_1325400416(result_1325400390, 0);
    }
    

  return result_1325400390[0];

}

function none_1711276092() {
  var result_1711276099 = ({val: 0, has: false});

  return result_1711276099;

}

function isNone_1711276140(self_1711276142) {
  var result_1711276143 = false;

    result_1711276143 = !(self_1711276142.has);

  return result_1711276143;

}

function some_1711276145(val_1711276147) {
  var result_1711276148 = ({val: 0, has: false});

    result_1711276148.has = true;
    result_1711276148.val = val_1711276147;

  return result_1711276148;

}

function HEX3DHEX3D_1711276215(x_1711276217, y_1711276218) {
  var result_1711276219 = false;

  BeforeRet: do {
    if (!((x_1711276217.a == y_1711276218.a))) {
    result_1711276219 = false;
    break BeforeRet;
    }
    
    if (!((x_1711276217.b == y_1711276218.b))) {
    result_1711276219 = false;
    break BeforeRet;
    }
    
    result_1711276219 = true;
    break BeforeRet;
  } while (false);

  return result_1711276219;

}

function isSome_1711276234(self_1711276236) {
  var result_1711276237 = false;

    result_1711276237 = self_1711276236.has;

  return result_1711276237;

}

function len_1711276307(x_1711276310) {
  var result_1711276311 = 0;

    result_1711276311 = nimMax(0, addInt(subInt(x_1711276310.b, x_1711276310.a), 1));

  return result_1711276311;

}

function HEX5BHEX5D_1711276411(s_1711276415, x_1711276416) {
  var result_1711276417 = [];

    var a_1711276419 = x_1711276416.a;
    var L_1711276421 = addInt(subInt(x_1711276416.b, a_1711276419), 1);
    result_1711276417 = new Array(chckRange(L_1711276421, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1711276421, 0, 2147483647) ; ++i) { result_1711276417[i] = ({kind: 0, base: 0}); }    Label1: do {
      var i_1711276430 = 0;
      var i_486541109 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541109 < L_1711276421)) break Label3;
            i_1711276430 = i_486541109;
            result_1711276417[chckIndx(i_1711276430, 0, (result_1711276417).length - 1)] = nimCopy(result_1711276417[chckIndx(i_1711276430, 0, (result_1711276417).length - 1)], s_1711276415[chckIndx(addInt(i_1711276430, a_1711276419), 0, (s_1711276415).length - 1)], NTI1275068423);
            i_486541109 = addInt(i_486541109, 1);
          }
      } while (false);
    } while (false);

  return result_1711276417;

}

function get_1711276361(self_1711276363) {
  var result_1711276364 = null;
  var result_1711276364_Idx = 0;

  BeforeRet: do {
    if (isNone_1711276140(self_1711276363)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1006632980, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1711276364 = self_1711276363; result_1711276364_Idx = "val";
    break BeforeRet;
  } while (false);

  return [result_1711276364, result_1711276364_Idx];

}

function parseXidocWhitespace_1325400228(body_1325400229, i_1325400230, i_1325400230_Idx) {
          var Temporary3;
          var Temporary4;

  var result_1325400231 = ({kind: 0, str: [], newline: false, name: [], arg: []});

    var newline_1325400232 = false;
    Label1: do {
        Label2: while (true) {
          if (!(i_1325400230[i_1325400230_Idx] <= (body_1325400229).length - 1)) Temporary3 = false; else {            Temporary3 = (ConstSet152[body_1325400229[chckIndx(i_1325400230[i_1325400230_Idx], 0, (body_1325400229).length - 1)]] != undefined);          }        if (!Temporary3) break Label2;
          if (newline_1325400232) Temporary4 = true; else {            Temporary4 = (body_1325400229[chckIndx(i_1325400230[i_1325400230_Idx], 0, (body_1325400229).length - 1)] == 10);          }          newline_1325400232 = Temporary4;
          i_1325400230[i_1325400230_Idx] = addInt(i_1325400230[i_1325400230_Idx], 1);
        }
    } while (false);
    result_1325400231 = nimCopy(result_1325400231, {kind: 1, newline: newline_1325400232, str: [], name: [], arg: []}, NTI1325400068);

  return result_1325400231;

}

function parseXidocStringHelper_1325400167(body_1325400168, i_1325400169, i_1325400169_Idx) {
          var Temporary3;

  var result_1325400170 = [];

    var start_1325400171 = i_1325400169[i_1325400169_Idx];
    Label1: do {
        Label2: while (true) {
          if (!(i_1325400169[i_1325400169_Idx] <= (body_1325400168).length - 1)) Temporary3 = false; else {            Temporary3 = !((ConstSet153[body_1325400168[chckIndx(i_1325400169[i_1325400169_Idx], 0, (body_1325400168).length - 1)]] != undefined));          }        if (!Temporary3) break Label2;
          i_1325400169[i_1325400169_Idx] = addInt(i_1325400169[i_1325400169_Idx], 1);
        }
    } while (false);
    result_1325400170 = nimCopy(null, HEX5BHEX5D_939524972(body_1325400168, HEX2EHEX2E_939524947(start_1325400171, subInt(i_1325400169[i_1325400169_Idx], 1))), NTI33554439);

  return result_1325400170;

}

function lineContext_1325400087(body_1325400088, i_1325400089) {
  var result_1325400093 = {Field0: 0, Field1: 0, Field2: []};

    var lns_1325400094 = nsuSplitLines(body_1325400088, false);
    var lnIndex_1325400095 = 0;
    var lenSum_1325400096 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(addInt(lenSum_1325400096, (lns_1325400094[chckIndx(lnIndex_1325400095, 0, (lns_1325400094).length - 1)]).length) <= i_1325400089)) break Label2;
          lenSum_1325400096 = addInt(lenSum_1325400096, addInt((lns_1325400094[chckIndx(lnIndex_1325400095, 0, (lns_1325400094).length - 1)]).length, 1));
          lnIndex_1325400095 = addInt(lnIndex_1325400095, 1);
        }
    } while (false);
    var colIndex_1325400105 = subInt(i_1325400089, lenSum_1325400096);
    result_1325400093.Field0 = addInt(lnIndex_1325400095, 1);
    result_1325400093.Field1 = addInt(colIndex_1325400105, 1);
    var fmtRes_1325400106 = [mnewString(0)];
    formatValue_1124073634(fmtRes_1325400106, 0, nsuRepeatChar(32, chckRange((HEX24_335544323(result_1325400093.Field0)).length, 0, 2147483647)), []);
    fmtRes_1325400106[0].push.apply(fmtRes_1325400106[0], makeNimstrLit(" \xE2\x94\x82 "));;
    formatValue_1124073634(fmtRes_1325400106, 0, nsuRepeatChar(32, chckRange(colIndex_1325400105, 0, 2147483647)), []);
    fmtRes_1325400106[0].push.apply(fmtRes_1325400106[0], makeNimstrLit("^"));;
    var caret_1325400107 = nimCopy(null, fmtRes_1325400106[0], NTI33554439);
    var fmtRes_1325400108 = [mnewString(0)];
    formatValue_1325400109(fmtRes_1325400108, 0, result_1325400093.Field0, []);
    fmtRes_1325400108[0].push.apply(fmtRes_1325400108[0], makeNimstrLit(" \xE2\x94\x82 "));;
    formatValue_1124073634(fmtRes_1325400108, 0, lns_1325400094[chckIndx(lnIndex_1325400095, 0, (lns_1325400094).length - 1)], []);
    fmtRes_1325400108[0].push.apply(fmtRes_1325400108[0], makeNimstrLit("\x0A"));;
    formatValue_1124073634(fmtRes_1325400108, 0, caret_1325400107, []);
    result_1325400093.Field2 = nimCopy(null, fmtRes_1325400108[0], NTI33554439);

  return result_1325400093;

}

function parseXidocCommand_1325400241(body_1325400242, i_1325400243, i_1325400243_Idx) {
  var result_1325400244 = ({kind: 0, str: [], newline: false, name: [], arg: []});

    if (!((body_1325400242[chckIndx(i_1325400243[i_1325400243_Idx], 0, (body_1325400242).length - 1)] == 91))) {
    failedAssertImpl_218103864(makeNimstrLit("parser.nim(82, 10) `body[i] == \'[\'` "));
    }
    
    i_1325400243[i_1325400243_Idx] = addInt(i_1325400243[i_1325400243_Idx], 1);
    var name_1325400254 = parseXidocStringHelper_1325400167(body_1325400242, i_1325400243, i_1325400243_Idx);
    if (((body_1325400242).length - 1 < i_1325400243[i_1325400243_Idx])) {
    raiseException({message: makeNimstrLit("Parse error: Unexpected end of file (did you forget to close a bracket?)"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if ((body_1325400242[chckIndx(i_1325400243[i_1325400243_Idx], 0, (body_1325400242).length - 1)] == 91)) {
    var colontmp__486541120 = lineContext_1325400087(body_1325400242, i_1325400243[i_1325400243_Idx]);
    var lnNum_1325400255 = colontmp__486541120["Field0"];
    var colNum_1325400256 = colontmp__486541120["Field1"];
    var msg_1325400257 = nimCopy(null, colontmp__486541120["Field2"], NTI33554439);
    var fmtRes_1325400258 = [mnewString(0)];
    fmtRes_1325400258[0].push.apply(fmtRes_1325400258[0], makeNimstrLit("Parse error: Unexpected \'[\' in command name at position "));;
    formatValue_1325400109(fmtRes_1325400258, 0, lnNum_1325400255, []);
    fmtRes_1325400258[0].push.apply(fmtRes_1325400258[0], makeNimstrLit(":"));;
    formatValue_1325400109(fmtRes_1325400258, 0, colNum_1325400256, []);
    fmtRes_1325400258[0].push.apply(fmtRes_1325400258[0], makeNimstrLit("\x0A"));;
    formatValue_1124073634(fmtRes_1325400258, 0, msg_1325400257, []);
    raiseException({message: nimCopy(null, fmtRes_1325400258[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var argStart_1325400269 = i_1325400243[i_1325400243_Idx];
    skipBalancedText_1325400151(body_1325400242, i_1325400243, i_1325400243_Idx);
    if (((body_1325400242).length - 1 < i_1325400243[i_1325400243_Idx])) {
    raiseException({message: makeNimstrLit("Parse error: Unexpected end of file (did you forget to close a bracket?)"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1325400244 = nimCopy(result_1325400244, {kind: 2, name: nimCopy(null, name_1325400254, NTI33554439), arg: HEX5BHEX5D_939524972(body_1325400242, HEX2EHEX2E_939524947(argStart_1325400269, subInt(i_1325400243[i_1325400243_Idx], 1))), str: [], newline: false}, NTI1325400068);
    i_1325400243[i_1325400243_Idx] = addInt(i_1325400243[i_1325400243_Idx], 1);

  return result_1325400244;

}

function parseXidocString_1325400203(body_1325400204, i_1325400205, i_1325400205_Idx) {
  var result_1325400206 = ({kind: 0, str: [], newline: false, name: [], arg: []});

    result_1325400206 = nimCopy(result_1325400206, {kind: 0, str: parseXidocStringHelper_1325400167(body_1325400204, i_1325400205, i_1325400205_Idx), newline: false, name: [], arg: []}, NTI1325400068);

  return result_1325400206;

}

function parseXidoc_1325400324(body_1325400325, verbose_1325400326) {
          var Temporary3;

  var result_1325400327 = [];

    var i_1325400328 = [0];
    Label1: do {
        Label2: while (true) {
        if (!(i_1325400328[0] <= (body_1325400325).length - 1)) break Label2;
          switch (body_1325400325[chckIndx(i_1325400328[0], 0, (body_1325400325).length - 1)]) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
            Temporary3 = parseXidocWhitespace_1325400228(body_1325400325, i_1325400328, 0);
            break;
          case 91:
            Temporary3 = parseXidocCommand_1325400241(body_1325400325, i_1325400328, 0);
            break;
          case 93:
            var colontmp__486541122 = lineContext_1325400087(body_1325400325, i_1325400328[0]);
            var lnNum_1325400329 = colontmp__486541122["Field0"];
            var colNum_1325400330 = colontmp__486541122["Field1"];
            var msg_1325400331 = nimCopy(null, colontmp__486541122["Field2"], NTI33554439);
            var fmtRes_1325400332 = [mnewString(0)];
            fmtRes_1325400332[0].push.apply(fmtRes_1325400332[0], makeNimstrLit("Parse error: Unexpected \']\' at position "));;
            formatValue_1325400109(fmtRes_1325400332, 0, lnNum_1325400329, []);
            fmtRes_1325400332[0].push.apply(fmtRes_1325400332[0], makeNimstrLit(":"));;
            formatValue_1325400109(fmtRes_1325400332, 0, colNum_1325400330, []);
            fmtRes_1325400332[0].push.apply(fmtRes_1325400332[0], makeNimstrLit("\x0A"));;
            formatValue_1124073634(fmtRes_1325400332, 0, msg_1325400331, []);
            raiseException({message: nimCopy(null, fmtRes_1325400332[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
            break;
          default: 
            Temporary3 = parseXidocString_1325400203(body_1325400325, i_1325400328, 0);
            break;
          }
          var Temporary4 = nimCopy(null, Temporary3, NTI1325400068);
          result_1325400327.push(Temporary4);;
        }
    } while (false);

  return result_1325400327;

}

function HEX5BHEX5D_33557758(s_33557759, s_33557759_Idx, i_33557760) {
  var result_33557761 = null;
  var result_33557761_Idx = 0;

    result_33557761 = s_33557759[s_33557759_Idx]; result_33557761_Idx = chckIndx(subInt((s_33557759[s_33557759_Idx]).length, i_33557760), 0, (s_33557759[s_33557759_Idx]).length - 1);

  return [result_33557761, result_33557761_Idx];

}

function find_872415280(a_872415283, item_872415284) {
  var result_872415285 = 0;

  BeforeRet: do {
    result_872415285 = 0;
    Label1: do {
      var i_872415289 = [];
      var i_486541125 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541125 < (a_872415283).length)) break Label3;
            i_872415289 = a_872415283[chckIndx(i_486541125, 0, (a_872415283).length - 1)];
            if (eqStrings(i_872415289, item_872415284)) {
            break BeforeRet;
            }
            
            result_872415285 = addInt(result_872415285, 1);
            i_486541125 = addInt(i_486541125, 1);
          }
      } while (false);
    } while (false);
    result_872415285 = -1;
  } while (false);

  return result_872415285;

}

function contains_872415275(a_872415277, item_872415278) {
  var result_872415279 = false;

  BeforeRet: do {
    result_872415279 = (0 <= find_872415280(a_872415277, item_872415278));
    break BeforeRet;
  } while (false);

  return result_872415279;

}

function find_1308622904(a_1308622907, item_1308622908) {
  var result_1308622909 = 0;

  BeforeRet: do {
    result_1308622909 = 0;
    Label1: do {
      var i_1308622921 = 0;
      var i_486541129 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541129 < (a_1308622907).length)) break Label3;
            i_1308622921 = a_1308622907[chckIndx(i_486541129, 0, (a_1308622907).length - 1)];
            if ((i_1308622921 == item_1308622908)) {
            break BeforeRet;
            }
            
            result_1308622909 = addInt(result_1308622909, 1);
            i_486541129 = addInt(i_486541129, 1);
          }
      } while (false);
    } while (false);
    result_1308622909 = -1;
  } while (false);

  return result_1308622909;

}

function contains_1308622899(a_1308622901, item_1308622902) {
  var result_1308622903 = false;

  BeforeRet: do {
    result_1308622903 = (0 <= find_1308622904(a_1308622901, item_1308622902));
    break BeforeRet;
  } while (false);

  return result_1308622903;

}

function HEX5BHEX5DHEX3D_33557773(s_33557774, s_33557774_Idx, i_33557775, x_33557776) {
    s_33557774[s_33557774_Idx][chckIndx(subInt((s_33557774[s_33557774_Idx]).length, i_33557775), 0, (s_33557774[s_33557774_Idx]).length - 1)] = x_33557776;

  
}

function addIfNeeded_1308622887(s1_1308622888, s1_1308622888_Idx, s2_1308622889) {
    var Temporary1;
      var Temporary2;

  BeforeRet: do {
    if (eqStrings(s1_1308622888[s1_1308622888_Idx], [])) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = (Temporary2 = HEX5BHEX5D_33557758(s1_1308622888, s1_1308622888_Idx, 1), Temporary2)[0][Temporary2[1]];
    }
    
    var s1Last_1308622890 = Temporary1;
    if ((contains_872415275([makeNimstrLit(" "), makeNimstrLit("\x0A")], s2_1308622889) && contains_1308622899([32, 10], s1Last_1308622890))) {
    if ((eqStrings(s2_1308622889, makeNimstrLit("\x0A")) && (s1Last_1308622890 == 32))) {
    HEX5BHEX5DHEX3D_33557773(s1_1308622888, s1_1308622888_Idx, 1, 10);
    }
    
    break BeforeRet;
    }
    
    s1_1308622888[s1_1308622888_Idx].push.apply(s1_1308622888[s1_1308622888_Idx], s2_1308622889);;
  } while (false);

  
}

function nsuContinuesWith(s_654312773, substr_654312774, start_654312775) {
            var Temporary3;

  var result_654312776 = false;

  BeforeRet: do {
    var i_654312777 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_654312774).length <= i_654312777)) {
          result_654312776 = true;
          break BeforeRet;
          }
          
            if (((s_654312773).length <= addInt(i_654312777, start_654312775))) Temporary3 = true; else {              Temporary3 = !((s_654312773[chckIndx(addInt(i_654312777, start_654312775), 0, (s_654312773).length - 1)] == substr_654312774[chckIndx(i_654312777, 0, (substr_654312774).length - 1)]));            }          if (Temporary3) {
          result_654312776 = false;
          break BeforeRet;
          }
          
          i_654312777 = addInt(i_654312777, 1);
        }
    } while (false);
  } while (false);

  return result_654312776;

}

function multiReplace_654313162(s_654313163, replacements_654313164) {
                      var Temporary10;

  var result_654313165 = [];

    result_654313165 = nimCopy(null, mnewString(0), NTI33554439);
    var i_654313166 = 0;
    var fastChk_654313167 = nimCopy(null, ConstSet157, NTI654312627);
    Label1: do {
      var sub_654313180 = [];
      var by_654313181 = [];
      var i_486541132 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541132 < (replacements_654313164).length)) break Label3;
            sub_654313180 = replacements_654313164[chckIndx(i_486541132, 0, (replacements_654313164).length - 1)]["Field0"];
            by_654313181 = replacements_654313164[chckIndx(i_486541132, 0, (replacements_654313164).length - 1)]["Field1"];
            if ((0 < (sub_654313180).length)) {
            fastChk_654313167[sub_654313180[chckIndx(0, 0, (sub_654313180).length - 1)]] = true;
            }
            
            i_486541132 = addInt(i_486541132, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
        Label5: while (true) {
        if (!(i_654313166 < (s_654313163).length)) break Label5;
          Label6: do {
            if ((fastChk_654313167[s_654313163[chckIndx(i_654313166, 0, (s_654313163).length - 1)]] != undefined)) {
            Label7: do {
              var sub_654313194 = [];
              var by_654313195 = [];
              var i_486541136 = 0;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_486541136 < (replacements_654313164).length)) break Label9;
                    sub_654313194 = replacements_654313164[chckIndx(i_486541136, 0, (replacements_654313164).length - 1)]["Field0"];
                    by_654313195 = replacements_654313164[chckIndx(i_486541136, 0, (replacements_654313164).length - 1)]["Field1"];
                      if (!(0 < (sub_654313194).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_654313163, sub_654313194, chckRange(i_654313166, 0, 2147483647));                      }                    if (Temporary10) {
                    result_654313165.push.apply(result_654313165, by_654313195);;
                    i_654313166 = addInt(i_654313166, (sub_654313194).length);
                    break Label6;
                    }
                    
                    i_486541136 = addInt(i_486541136, 1);
                  }
              } while (false);
            } while (false);
            }
            
            addChar(result_654313165, s_654313163[chckIndx(i_654313166, 0, (s_654313163).length - 1)]);;
            i_654313166 = addInt(i_654313166, 1);
          } while (false);
        }
    } while (false);

  return result_654313165;

}

function escapeText_1308622856(text_1308622857, target_1308622858) {
    var Temporary1;

  var result_1308622859 = [];

    switch (target_1308622858) {
    case 0:
      Temporary1 = multiReplace_654313162(text_1308622857, [{Field0: makeNimstrLit("<"), Field1: makeNimstrLit("&lt;")}, {Field0: makeNimstrLit("&"), Field1: makeNimstrLit("&amp;")}, {Field0: makeNimstrLit("\""), Field1: makeNimstrLit("&quot;")}]);
      break;
    case 1:
      Temporary1 = text_1308622857;
      break;
    case 2:
      Temporary1 = text_1308622857;
      break;
    }
    result_1308622859 = nimCopy(null, Temporary1, NTI33554439);

  return result_1308622859;

}

function isWhitespaceSensitive_1275068517(target_1275068518) {
  var result_1275068519 = false;

    result_1275068519 = (target_1275068518 == 2);

  return result_1275068519;

}

function hasKey_1308623040(t_1308623043, key_1308623044) {
  var result_1308623045 = false;

    var hc_1308623046 = [0];
    result_1308623045 = (0 <= rawGet_1308623047(t_1308623043, key_1308623044, hc_1308623046, 0));

  return result_1308623045;

}

function some_1308623189(val_1308623191) {
  var result_1308623195 = ({val: null});

    if (!(!((val_1308623191 == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("options.nim(129, 5) `not val.isNil` "));
    }
    
    result_1308623195.val = val_1308623191;

  return result_1308623195;

}

function HEX5BHEX5D_1308623144(t_1308623147, key_1308623148) {
  var result_1308623149 = null;

    var hcHEX60gensym20_1308623150 = [0];
    var indexHEX60gensym20_1308623157 = rawGet_1308623047(t_1308623147, key_1308623148, hcHEX60gensym20_1308623150, 0);
    if ((0 <= indexHEX60gensym20_1308623157)) {
    result_1308623149 = t_1308623147.data[chckIndx(indexHEX60gensym20_1308623157, 0, (t_1308623147.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1308623158(key_1308623148);
    }
    

  return result_1308623149;

}

function none_1308623288() {
  var result_1308623294 = ({val: null});

  return result_1308623294;

}

function isSome_1308623310(self_1308623312) {
  var result_1308623313 = false;

    result_1308623313 = !((self_1308623312.val == null));

  return result_1308623313;

}

function unsafeGet_1308623322(self_1308623324) {
  var result_1308623325 = null;

    if (!(isSome_1308623310(self_1308623324))) {
    failedAssertImpl_218103864(makeNimstrLit("options.nim(371, 10) `self.isSome` "));
    }
    
    result_1308623325 = self_1308623324["val"];

  return result_1308623325;

}

function pop_1308623354(s_1308623356, s_1308623356_Idx) {
  var result_1308623357 = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})});

    var L_1308623361 = subInt((s_1308623356[s_1308623356_Idx]).length, 1);
    result_1308623357 = nimCopy(result_1308623357, s_1308623356[s_1308623356_Idx][chckIndx(L_1308623361, 0, (s_1308623356[s_1308623356_Idx]).length - 1)], NTI1275068425);
    if (s_1308623356[s_1308623356_Idx].length < chckRange(L_1308623361, 0, 2147483647)) { for (var i = s_1308623356[s_1308623356_Idx].length ; i < chckRange(L_1308623361, 0, 2147483647) ; ++i) s_1308623356[s_1308623356_Idx].push(({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})})); }
               else { s_1308623356[s_1308623356_Idx].length = chckRange(L_1308623361, 0, 2147483647); };

  return result_1308623357;

}

function add_1308623370(x_1308623372, x_1308623372_Idx, y_1308623373) {
    var Temporary1;

    var xl_1308623378 = (x_1308623372[x_1308623372_Idx]).length;
    if (x_1308623372[x_1308623372_Idx].length < (Temporary1 = chckRange(addInt(xl_1308623378, (y_1308623373).length), 0, 2147483647), Temporary1)) { for (var i = x_1308623372[x_1308623372_Idx].length ; i < Temporary1 ; ++i) x_1308623372[x_1308623372_Idx].push(({typ: 0, str: [], list: [], opt: ({val: null})})); }
               else { x_1308623372[x_1308623372_Idx].length = Temporary1; };
    Label2: do {
      var i_1308623394 = 0;
      var colontmp__486541144 = 0;
      colontmp__486541144 = (y_1308623373).length - 1;
      var res_486541145 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_486541145 <= colontmp__486541144)) break Label4;
            i_1308623394 = res_486541145;
            x_1308623372[x_1308623372_Idx][chckIndx(addInt(xl_1308623378, i_1308623394), 0, (x_1308623372[x_1308623372_Idx]).length - 1)] = nimCopy(x_1308623372[x_1308623372_Idx][chckIndx(addInt(xl_1308623378, i_1308623394), 0, (x_1308623372[x_1308623372_Idx]).length - 1)], y_1308623373[chckIndx(i_1308623394, 0, (y_1308623373).length - 1)], NTI1275068421);
            res_486541145 = addInt(res_486541145, 1);
          }
      } while (false);
    } while (false);

  
}

function expand_1308622953(doc_1308622954, str_1308622955, typ_1308622956) {
                var Temporary4;
                var Temporary5;
                var Temporary6;
                var Temporary7;
                var Temporary8;
                var Temporary9;
                var Temporary10;
                  var Temporary11;
                  var Temporary12;
                var Temporary13;
              var Temporary14;
              
function HEX3Aanonymous_1308622988() {
                var result_1308622989 = ({val: null});

                BeforeRet: do {
                  Label1: do {
                    var iHEX60gensym6_1308622998 = 0;
                    var colontmp__486541140 = 0;
                    colontmp__486541140 = subInt((doc_1308622954.stack).length, 1);
                    var res_486541141 = colontmp__486541140;
                    Label2: do {
                        Label3: while (true) {
                        if (!(0 <= res_486541141)) break Label3;
                          iHEX60gensym6_1308622998 = res_486541141;
                          var frameHEX60gensym6_1308622999 = nimCopy(null, doc_1308622954.stack[chckIndx(iHEX60gensym6_1308622998, 0, (doc_1308622954.stack).length - 1)], NTI1275068425);
                          if (hasKey_1308623040(frameHEX60gensym6_1308622999.commands, name_1308622985)) {
                          result_1308622989 = nimCopy(result_1308622989, some_1308623189(HEX5BHEX5D_1308623144(frameHEX60gensym6_1308622999.commands, name_1308622985)), NTI1308623088);
                          break BeforeRet;
                          }
                          
                          res_486541141 = subInt(res_486541141, 1);
                        }
                    } while (false);
                  } while (false);
                  result_1308622989 = nimCopy(result_1308622989, none_1308623288(), NTI1308623088);
                } while (false);

                return result_1308622989;

              }
              var Temporary15;
              var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
                  var Temporary22;
                  var Temporary23;
                  var Temporary24;
                  var Temporary26;
                  var Temporary27;

  var result_1308622957 = ({typ: 0, str: [], list: [], opt: ({val: null})});

    result_1308622957 = nimCopy(result_1308622957, {typ: typ_1308622956, str: [], list: [], opt: ({val: null})}, NTI1275068421);
    Label1: do {
      var node_1308622979 = ({kind: 0, str: [], newline: false, name: [], arg: []});
      var colontmp__486541112 = [];
      colontmp__486541112 = parseXidoc_1325400324(str_1308622955, doc_1308622954.verbose);
      var i_486541114 = 0;
      var L_486541115 = (colontmp__486541112).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541114 < L_486541115)) break Label3;
            node_1308622979 = colontmp__486541112[chckIndx(i_486541114, 0, (colontmp__486541112).length - 1)];
            switch (node_1308622979.kind) {
            case 0:
              switch (typ_1308622956) {
              case 0:
                var Temporary4 = result_1308622957;
                if (ConstSet154[Temporary4.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary4.typ, NTI1275068420)); }
                var Temporary5 = node_1308622979;
                if (ConstSet155[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1325400067)); }
                addIfNeeded_1308622887(Temporary4, "str", Temporary5.str);
                break;
              case 1:
                var Temporary6 = result_1308622957;
                if (ConstSet156[Temporary6.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary6.typ, NTI1275068420)); }
                var Temporary7 = node_1308622979;
                if (ConstSet158[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1325400067)); }
                addIfNeeded_1308622887(Temporary6, "str", escapeText_1308622856(Temporary7.str, doc_1308622954.target));
                break;
              case 2:
                var Temporary8 = result_1308622957;
                if (ConstSet159[Temporary8.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary8.typ, NTI1275068420)); }
                var Temporary9 = node_1308622979;
                if (ConstSet160[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1325400067)); }
                Temporary8.list.push({typ: 0, str: nimCopy(null, Temporary9.str, NTI33554439), list: [], opt: ({val: null})});;
                break;
              case 3:
                break;
              }
              break;
            case 1:
              switch (typ_1308622956) {
              case 0:
              case 1:
                  var Temporary12 = node_1308622979;
                  if (ConstSet161[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'newline\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1325400067)); }
                  if (!Temporary12.newline) Temporary11 = false; else {                    Temporary11 = !(isWhitespaceSensitive_1275068517(doc_1308622954.target));                  }                if (Temporary11) {
                Temporary10 = makeNimstrLit("\x0A");
                }
                else {
                Temporary10 = makeNimstrLit(" ");
                }
                
                var whitespace_1308622984 = nimCopy(null, Temporary10, NTI33554439);
                var Temporary13 = result_1308622957;
                if (ConstSet162[Temporary13.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary13.typ, NTI1275068420)); }
                addIfNeeded_1308622887(Temporary13, "str", whitespace_1308622984);
                break;
              case 2:
                break;
              case 3:
                break;
              }
              break;
            case 2:
              var Temporary14 = node_1308622979;
              if (ConstSet163[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1325400067)); }
              var name_1308622985 = nimCopy(null, Temporary14.name, NTI33554439);
              var command_1308623305 = nimCopy(null, HEX3Aanonymous_1308622988(), NTI1308623088);
              if (isSome_1308623310(command_1308623305)) {
              var command_1308623347 = unsafeGet_1308623322(command_1308623305);
              var Temporary15 = node_1308622979;
              if (ConstSet164[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1325400067)); }
              var frame_1308623348 = {cmdName: nimCopy(null, name_1308622985, NTI33554439), cmdArg: nimCopy(null, Temporary15.arg, NTI33554439), args: ({data: [], counter: 0}), commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})};
              var Temporary16 = nimCopy(null, frame_1308623348, NTI1275068425);
              doc_1308622954.stack.push(Temporary16);;
              var Temporary17 = node_1308622979;
              if (ConstSet165[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arg\' is not accessible for type \'XidocNode\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1325400067)); }
              var val_1308623353 = command_1308623347(Temporary17.arg);
              var _ = pop_1308623354(doc_1308622954, "stack");
              switch (typ_1308622956) {
              case 0:
                switch (val_1308623353.typ) {
                case 0:
                case 1:
                  var Temporary18 = result_1308622957;
                  if (ConstSet166[Temporary18.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary18.typ, NTI1275068420)); }
                  var Temporary19 = val_1308623353;
                  if (ConstSet167[Temporary19.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary19.typ, NTI1275068420)); }
                  addIfNeeded_1308622887(Temporary18, "str", Temporary19.str);
                  break;
                case 2:
                  raiseException({message: makeNimstrLit("Cannot convert a List to a String"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                  break;
                case 3:
                  break;
                }
                break;
              case 1:
                switch (val_1308623353.typ) {
                case 0:
                  var Temporary20 = result_1308622957;
                  if (ConstSet168[Temporary20.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary20.typ, NTI1275068420)); }
                  var Temporary21 = val_1308623353;
                  if (ConstSet169[Temporary21.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary21.typ, NTI1275068420)); }
                  addIfNeeded_1308622887(Temporary20, "str", escapeText_1308622856(Temporary21.str, doc_1308622954.target));
                  break;
                case 1:
                  var Temporary22 = result_1308622957;
                  if (ConstSet170[Temporary22.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary22.typ, NTI1275068420)); }
                  var Temporary23 = val_1308623353;
                  if (ConstSet171[Temporary23.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary23.typ, NTI1275068420)); }
                  addIfNeeded_1308622887(Temporary22, "str", Temporary23.str);
                  break;
                case 2:
                  raiseException({message: makeNimstrLit("Cannot convert a List to a Markup"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                  break;
                case 3:
                  break;
                }
                break;
              case 2:
                switch (val_1308623353.typ) {
                case 0:
                case 1:
                  var Temporary24 = result_1308622957;
                  if (ConstSet172[Temporary24.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary24.typ, NTI1275068420)); }
                  var Temporary25 = nimCopy(null, val_1308623353, NTI1275068421);
                  Temporary24.list.push(Temporary25);;
                  break;
                case 2:
                  var Temporary26 = result_1308622957;
                  if (ConstSet173[Temporary26.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary26.typ, NTI1275068420)); }
                  var Temporary27 = val_1308623353;
                  if (ConstSet174[Temporary27.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary27.typ, NTI1275068420)); }
                  add_1308623370(Temporary26, "list", Temporary27.list);
                  break;
                case 3:
                  break;
                }
                break;
              case 3:
                break;
              }
              }
              else {
                var fmtRes_1308623407 = [mnewString(0)];
                fmtRes_1308623407[0].push.apply(fmtRes_1308623407[0], makeNimstrLit("Command not found: "));;
                formatValue_1124073634(fmtRes_1308623407, 0, name_1308622985, []);
                raiseException({message: nimCopy(null, fmtRes_1308623407[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
              }
              
              break;
            }
            i_486541114 = addInt(i_486541114, 1);
            if (!(((colontmp__486541112).length == L_486541115))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_1308622957;

}

function map_1711276553(s_1711276556, op_1711276558) {
  var result_1711276559 = [];

    result_1711276559 = new Array(chckRange((s_1711276556).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1711276556).length, 0, 2147483647) ; ++i) { result_1711276559[i] = ({typ: 0, str: [], list: [], opt: ({val: null})}); }    Label1: do {
      var i_1711276574 = 0;
      var colontmp__486541148 = 0;
      colontmp__486541148 = (s_1711276556).length;
      var i_486541149 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541149 < colontmp__486541148)) break Label3;
            i_1711276574 = i_486541149;
            result_1711276559[chckIndx(i_1711276574, 0, (result_1711276559).length - 1)] = nimCopy(result_1711276559[chckIndx(i_1711276574, 0, (result_1711276559).length - 1)], op_1711276558(s_1711276556[chckIndx(i_1711276574, 0, (s_1711276556).length - 1)]), NTI1275068421);
            i_486541149 = addInt(i_486541149, 1);
          }
      } while (false);
    } while (false);

  return result_1711276559;

}

function HEX5BHEX5D_1711276501(s_1711276505, x_1711276506) {
  var result_1711276507 = [];

    var a_1711276509 = x_1711276506.a;
    var L_1711276514 = addInt(subInt(subInt((s_1711276505).length, x_1711276506.b), a_1711276509), 1);
    result_1711276507 = new Array(chckRange(L_1711276514, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1711276514, 0, 2147483647) ; ++i) { result_1711276507[i] = []; }    Label1: do {
      var i_1711276523 = 0;
      var i_486541152 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541152 < L_1711276514)) break Label3;
            i_1711276523 = i_486541152;
            result_1711276507[chckIndx(i_1711276523, 0, (result_1711276507).length - 1)] = nimCopy(null, s_1711276505[chckIndx(addInt(i_1711276523, a_1711276509), 0, (s_1711276505).length - 1)], NTI33554439);
            i_486541152 = addInt(i_486541152, 1);
          }
      } while (false);
    } while (false);

  return result_1711276507;

}

function HEX5BHEX5D_1711276605(s_1711276609, x_1711276610) {
  var result_1711276611 = [];

    var a_1711276613 = x_1711276610.a;
    var L_1711276618 = addInt(subInt(subInt((s_1711276609).length, x_1711276610.b), a_1711276613), 1);
    result_1711276611 = new Array(chckRange(L_1711276618, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1711276618, 0, 2147483647) ; ++i) { result_1711276611[i] = ({kind: 0, base: 0}); }    Label1: do {
      var i_1711276627 = 0;
      var i_486541155 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541155 < L_1711276618)) break Label3;
            i_1711276627 = i_486541155;
            result_1711276611[chckIndx(i_1711276627, 0, (result_1711276611).length - 1)] = nimCopy(result_1711276611[chckIndx(i_1711276627, 0, (result_1711276611).length - 1)], s_1711276609[chckIndx(addInt(i_1711276627, a_1711276613), 0, (s_1711276609).length - 1)], NTI1275068423);
            i_486541155 = addInt(i_486541155, 1);
          }
      } while (false);
    } while (false);

  return result_1711276611;

}

function HEX5BHEX5D_1711276654(s_1711276656, i_1711276657) {
  var result_1711276658 = [];

    result_1711276658 = nimCopy(null, s_1711276656[chckIndx(subInt((s_1711276656).length, i_1711276657), 0, (s_1711276656).length - 1)], NTI33554439);

  return result_1711276658;

}

function new_1711276785() {
  var result_1711276788 = null;

  BeforeRet: do {
    var r_1711276790 = null;
    r_1711276790 = ({typ: 0, str: [], list: [], opt: ({val: null})});
    result_1711276788 = r_1711276790;
    break BeforeRet;
  } while (false);

  return result_1711276788;

}

function some_1711276804(val_1711276806) {
  var result_1711276807 = ({val: null});

    if (!(!((val_1711276806 == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("options.nim(129, 5) `not val.isNil` "));
    }
    
    result_1711276807.val = val_1711276806;

  return result_1711276807;

}

function none_1711276821() {
  var result_1711276827 = ({val: null});

  return result_1711276827;

}

function expandArguments_1711276046(doc_1711276047, name_1711276048, arg_1711276049, types_1711276050) {
        var Temporary4;
        var Temporary7;
              
function expandIfNeeded_1711276332(doc_1711276333, arg_1711276334, typ_1711276335) {
                  var Temporary1;

                var result_1711276336 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                  if ((typ_1711276335.kind == 3)) {
                  Temporary1 = {typ: 0, str: nimCopy(null, arg_1711276334, NTI33554439), list: [], opt: ({val: null})};
                  }
                  else {
                  Temporary1 = expand_1308622953(doc_1711276333, arg_1711276334, typ_1711276335.base);
                  }
                  
                  result_1711276336 = nimCopy(result_1711276336, Temporary1, NTI1275068421);

                return result_1711276336;

              }
      var Temporary12;
      
function HEX3Aanonymous_1711276542(arg_1711276549) {
        var result_1711276552 = ({typ: 0, str: [], list: [], opt: ({val: null})});

          result_1711276552 = nimCopy(result_1711276552, expand_1308622953(doc_1711276047, arg_1711276549, base_1711276491), NTI1275068421);

        return result_1711276552;

      }
        var Temporary15;
              var Temporary18;

  var result_1711276051 = [];

  BeforeRet: do {
    if ((((types_1711276050).length == 1) && HEX3DHEX3D_1711276056(types_1711276050[chckIndx(0, 0, (types_1711276050).length - 1)], Literal_1275068564))) {
    result_1711276051 = nimCopy(null, [{typ: 0, str: nimCopy(null, arg_1711276049, NTI33554439), list: [], opt: ({val: null})}], NTI1711276051);
    break BeforeRet;
    }
    
    if ((((types_1711276050).length == 1) && HEX3DHEX3D_1711276056(types_1711276050[chckIndx(0, 0, (types_1711276050).length - 1)], Raw_1275068563))) {
    result_1711276051 = nimCopy(null, [{typ: 0, str: nsuStrip(arg_1711276049, true, true, ConstSet148), list: [], opt: ({val: null})}], NTI1711276051);
    break BeforeRet;
    }
    
    var args_1711276091 = parseXidocArguments_1325400388(arg_1711276049);
    var starPos_1711276100 = [none_1711276092()];
    var questionPos_1711276111 = nimCopy(null, HEX2EHEX2E_939524947(0, -1), NTI721420349);
    Label1: do {
      var index_1711276134 = 0;
      var typ_1711276135 = ({kind: 0, base: 0});
      var i_486541071 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541071 < (types_1711276050).length)) break Label3;
            index_1711276134 = i_486541071;
            typ_1711276135 = nimCopy(typ_1711276135, types_1711276050[chckIndx(i_486541071, 0, (types_1711276050).length - 1)], NTI1275068423);
            switch (typ_1711276135.kind) {
            case 2:
              if (isNone_1711276140(starPos_1711276100[0])) {
              starPos_1711276100[0] = nimCopy(starPos_1711276100[0], some_1711276145(index_1711276134), NTI1711276065);
              }
              else {
                raiseException({message: makeNimstrLit("There can only be one star parameter"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
              }
              
              break Label1;
              break;
            case 1:
              if (HEX3DHEX3D_1711276215(questionPos_1711276111, HEX2EHEX2E_939524947(0, -1))) {
              questionPos_1711276111 = nimCopy(questionPos_1711276111, HEX2EHEX2E_939524947(index_1711276134, index_1711276134), NTI721420349);
              }
              else {
                questionPos_1711276111.b = index_1711276134;
              }
              
              break;
            case 0:
            case 3:
            case 4:
              break;
            }
            i_486541071 = addInt(i_486541071, 1);
          }
      } while (false);
    } while (false);
    if (isSome_1711276234(starPos_1711276100[0])) {
    var minLen_1711276242 = subInt((types_1711276050).length, 1);
    if (((args_1711276091).length < minLen_1711276242)) {
    raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 arguments, $3 given"), [nimCopy(null, name_1711276048, NTI33554439), HEX24_335544323(minLen_1711276242), HEX24_335544323((args_1711276091).length)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    }
    else {
      var minLen_1711276318 = subInt((types_1711276050).length, len_1711276307(questionPos_1711276111));
      var maxLen_1711276322 = (types_1711276050).length;
        if (((args_1711276091).length < minLen_1711276318)) Temporary4 = true; else {          Temporary4 = (maxLen_1711276322 < (args_1711276091).length);        }      if (Temporary4) {
      raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs at least $2 and at most $3 arguments, $4 given"), [nimCopy(null, name_1711276048, NTI33554439), HEX24_335544323(minLen_1711276318), HEX24_335544323(maxLen_1711276322), HEX24_335544323((args_1711276091).length)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
    }
    
    if (isSome_1711276234(starPos_1711276100[0])) {
    Label5: do {
      Label6: do {
        var index_1711276463 = 0;
        var typ_1711276464 = ({kind: 0, base: 0});
        var colontmp__486541074 = [];
        colontmp__486541074 = HEX5BHEX5D_1711276411(types_1711276050, HEX2EHEX2E_939524947(0, subInt((Temporary7 = get_1711276361(starPos_1711276100[0]), Temporary7)[0][Temporary7[1]], 1)));
        var i_486541076 = 0;
        var L_486541077 = (colontmp__486541074).length;
        Label8: do {
            Label9: while (true) {
            if (!(i_486541076 < L_486541077)) break Label9;
              index_1711276463 = i_486541076;
              typ_1711276464 = nimCopy(typ_1711276464, colontmp__486541074[chckIndx(i_486541076, 0, (colontmp__486541074).length - 1)], NTI1275068423);
              var val_1711276465 = expandIfNeeded_1711276332(doc_1711276047, args_1711276091[chckIndx(index_1711276463, 0, (args_1711276091).length - 1)], typ_1711276464);
              var Temporary10 = nimCopy(null, val_1711276465, NTI1275068421);
              result_1711276051.push(Temporary10);;
              i_486541076 = addInt(i_486541076, 1);
              if (!(((colontmp__486541074).length == L_486541077))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    Label11: do {
      var start_1711276486 = (Temporary12 = get_1711276361(starPos_1711276100[0]), Temporary12)[0][Temporary12[1]];
      var ende_1711276490 = subInt((types_1711276050).length, start_1711276486);
      var base_1711276491 = types_1711276050[chckIndx(start_1711276486, 0, (types_1711276050).length - 1)].base;
      var vals_1711276575 = map_1711276553(HEX5BHEX5D_1711276501(args_1711276091, HEX2EHEX2E_872415312(start_1711276486, ende_1711276490)), HEX3Aanonymous_1711276542);
      result_1711276051.push({typ: 2, list: nimCopy(null, vals_1711276575, NTI1711276375), str: [], opt: ({val: null})});;
    } while (false);
    Label13: do {
      Label14: do {
        var index_1711276633 = 0;
        var typ_1711276634 = ({kind: 0, base: 0});
        var colontmp__486541080 = [];
        colontmp__486541080 = HEX5BHEX5D_1711276605(types_1711276050, HEX2EHEX2E_872415312(addInt((Temporary15 = get_1711276361(starPos_1711276100[0]), Temporary15)[0][Temporary15[1]], 1), 1));
        var i_486541081 = 0;
        var L_486541082 = (colontmp__486541080).length;
        Label16: do {
            Label17: while (true) {
            if (!(i_486541081 < L_486541082)) break Label17;
              index_1711276633 = i_486541081;
              typ_1711276634 = nimCopy(typ_1711276634, colontmp__486541080[chckIndx(i_486541081, 0, (colontmp__486541080).length - 1)], NTI1275068423);
              var index_1711276653 = subInt(subInt(subInt((types_1711276050).length, index_1711276633), (Temporary18 = get_1711276361(starPos_1711276100[0]), Temporary18)[0][Temporary18[1]]), 1);
              var val_1711276662 = expandIfNeeded_1711276332(doc_1711276047, HEX5BHEX5D_1711276654(args_1711276091, index_1711276653), typ_1711276634);
              var Temporary19 = nimCopy(null, val_1711276662, NTI1275068421);
              result_1711276051.push(Temporary19);;
              i_486541081 = addInt(i_486541081, 1);
              if (!(((colontmp__486541080).length == L_486541082))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    }
    else {
      Label20: do {
        Label21: do {
          var index_1711276693 = 0;
          var typ_1711276694 = ({kind: 0, base: 0});
          var colontmp__486541085 = [];
          colontmp__486541085 = HEX5BHEX5D_1711276411(types_1711276050, HEX2EHEX2E_939524947(0, subInt(questionPos_1711276111.a, 1)));
          var i_486541086 = 0;
          var L_486541087 = (colontmp__486541085).length;
          Label22: do {
              Label23: while (true) {
              if (!(i_486541086 < L_486541087)) break Label23;
                index_1711276693 = i_486541086;
                typ_1711276694 = nimCopy(typ_1711276694, colontmp__486541085[chckIndx(i_486541086, 0, (colontmp__486541085).length - 1)], NTI1275068423);
                var val_1711276695 = expandIfNeeded_1711276332(doc_1711276047, args_1711276091[chckIndx(index_1711276693, 0, (args_1711276091).length - 1)], typ_1711276694);
                var Temporary24 = nimCopy(null, val_1711276695, NTI1275068421);
                result_1711276051.push(Temporary24);;
                i_486541086 = addInt(i_486541086, 1);
                if (!(((colontmp__486541085).length == L_486541087))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Label25: do {
        var minLen_1711276763 = subInt((types_1711276050).length, len_1711276307(questionPos_1711276111));
        var start_1711276764 = questionPos_1711276111.a;
        Label26: do {
          var index_1711276780 = 0;
          var typ_1711276781 = ({kind: 0, base: 0});
          var colontmp__486541090 = [];
          colontmp__486541090 = HEX5BHEX5D_1711276411(types_1711276050, questionPos_1711276111);
          var i_486541091 = 0;
          var L_486541092 = (colontmp__486541090).length;
          Label27: do {
              Label28: while (true) {
              if (!(i_486541091 < L_486541092)) break Label28;
                index_1711276780 = i_486541091;
                typ_1711276781 = nimCopy(typ_1711276781, colontmp__486541090[chckIndx(i_486541091, 0, (colontmp__486541090).length - 1)], NTI1275068423);
                if ((index_1711276780 < subInt((args_1711276091).length, minLen_1711276763))) {
                var val_1711276803 = new_1711276785();
                val_1711276803 = nimCopy(val_1711276803, expand_1308622953(doc_1711276047, args_1711276091[chckIndx(addInt(start_1711276764, index_1711276780), 0, (args_1711276091).length - 1)], typ_1711276781.base), NTI1275068421);
                result_1711276051.push({typ: 3, opt: some_1711276804(val_1711276803), str: [], list: []});;
                }
                else {
                result_1711276051.push({typ: 3, opt: none_1711276821(), str: [], list: []});;
                }
                
                i_486541091 = addInt(i_486541091, 1);
                if (!(((colontmp__486541090).length == L_486541092))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Label29: do {
        Label30: do {
          var index_1711276853 = 0;
          var typ_1711276854 = ({kind: 0, base: 0});
          var colontmp__486541095 = [];
          colontmp__486541095 = HEX5BHEX5D_1711276605(types_1711276050, HEX2EHEX2E_872415312(addInt(questionPos_1711276111.b, 1), 1));
          var i_486541096 = 0;
          var L_486541097 = (colontmp__486541095).length;
          Label31: do {
              Label32: while (true) {
              if (!(i_486541096 < L_486541097)) break Label32;
                index_1711276853 = i_486541096;
                typ_1711276854 = nimCopy(typ_1711276854, colontmp__486541095[chckIndx(i_486541096, 0, (colontmp__486541095).length - 1)], NTI1275068423);
                var index_1711276858 = subInt(subInt(subInt((types_1711276050).length, index_1711276853), questionPos_1711276111.b), 1);
                var val_1711276863 = expandIfNeeded_1711276332(doc_1711276047, HEX5BHEX5D_1711276654(args_1711276091, index_1711276858), typ_1711276854);
                var Temporary33 = nimCopy(null, val_1711276863, NTI1275068421);
                result_1711276051.push(Temporary33);;
                i_486541096 = addInt(i_486541096, 1);
                if (!(((colontmp__486541095).length == L_486541097))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
    }
    
  } while (false);

  return result_1711276051;

}

function to_1694498913(val_1694498915) {
    var Temporary1;

  var result_1694498917 = [];

    var Temporary1 = val_1694498915;
    if (ConstSet175[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1275068420)); }
    result_1694498917 = nimCopy(null, Temporary1.str, NTI33554439);

  return result_1694498917;

}

function HEX21_1275068536(typ_1275068537) {
  var result_1275068538 = ({kind: 0, base: 0});

    result_1275068538.kind = 0;
    result_1275068538.base = typ_1275068537;

  return result_1275068538;

}

function slotsNeeded_1040187441(count_1040187442) {
  var result_1040187443 = 0;

    result_1040187443 = nextPowerOfTwo_704643275(addInt(divInt(mulInt(count_1040187442, 3), 2), 4));

  return result_1040187443;

}

function isFilled_1040187430(hcode_1040187431) {
  var result_1040187432 = false;

    result_1040187432 = !((hcode_1040187431 == 0));

  return result_1040187432;

}

function nextTry_1040187433(h_1040187434, maxHash_1040187435) {
  var result_1040187436 = 0;

    result_1040187436 = (addInt(h_1040187434, 1) & maxHash_1040187435);

  return result_1040187436;

}

function rawGet_1778388125(t_1778388127, key_1778388128, hc_1778388129, hc_1778388129_Idx) {
            var Temporary3;

  var result_1778388130 = 0;

  BeforeRet: do {
    hc_1778388129[hc_1778388129_Idx] = hash_1056965030(key_1778388128);
    if ((hc_1778388129[hc_1778388129_Idx] == 0)) {
    hc_1778388129[hc_1778388129_Idx] = 314159265;
    }
    
    if (((t_1778388127.data).length == 0)) {
    result_1778388130 = -1;
    break BeforeRet;
    }
    
    var h_1778388192 = (hc_1778388129[hc_1778388129_Idx] & (t_1778388127.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1040187430(t_1778388127.data[chckIndx(h_1778388192, 0, (t_1778388127.data).length - 1)].Field0)) break Label2;
            if (!(t_1778388127.data[chckIndx(h_1778388192, 0, (t_1778388127.data).length - 1)].Field0 == hc_1778388129[hc_1778388129_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1778388127.data[chckIndx(h_1778388192, 0, (t_1778388127.data).length - 1)].Field2, key_1778388128);            }          if (Temporary3) {
          result_1778388130 = h_1778388192;
          break BeforeRet;
          }
          
          h_1778388192 = nextTry_1040187433(h_1778388192, (t_1778388127.data).length - 1);
        }
    } while (false);
    result_1778388130 = subInt(-1, h_1778388192);
  } while (false);

  return result_1778388130;

}

function mustRehash_1778388386(t_1778388388) {
  var result_1778388389 = false;

    if (!((t_1778388388.counter < (t_1778388388.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1778388389 = ((mulInt((t_1778388388.data).length, 2) < mulInt(t_1778388388.counter, 3)) || (subInt((t_1778388388.data).length, t_1778388388.counter) < 4));

  return result_1778388389;

}

function rawGetKnownHC_1778388881(t_1778388884, key_1778388885, hc_1778388886) {
  var result_1778388887 = 0;

  BeforeRet: do {
    if (((t_1778388884.data).length == 0)) {
    result_1778388887 = -1;
    break BeforeRet;
    }
    
    var h_1778388949 = (hc_1778388886 & (t_1778388884.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1040187430(t_1778388884.data[chckIndx(h_1778388949, 0, (t_1778388884.data).length - 1)].Field0)) break Label2;
          if (((t_1778388884.data[chckIndx(h_1778388949, 0, (t_1778388884.data).length - 1)].Field0 == hc_1778388886) && eqStrings(t_1778388884.data[chckIndx(h_1778388949, 0, (t_1778388884.data).length - 1)].Field2, key_1778388885))) {
          result_1778388887 = h_1778388949;
          break BeforeRet;
          }
          
          h_1778388949 = nextTry_1040187433(h_1778388949, (t_1778388884.data).length - 1);
        }
    } while (false);
    result_1778388887 = subInt(-1, h_1778388949);
  } while (false);

  return result_1778388887;

}

function rawInsert_1778389250(s_1778389252, data_1778389253, data_1778389253_Idx, key_1778389254, hc_1778389255, h_1778389256) {
    if (((data_1778389253[data_1778389253_Idx]).length == 0)) {
    var correctSizeHEX60gensym197_1778389316 = slotsNeeded_1040187441(64);
    s_1778389252.first = -1;
    s_1778389252.last = -1;
    s_1778389252.counter = 0;
    s_1778389252.data = new Array(chckRange(correctSizeHEX60gensym197_1778389316, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym197_1778389316, 0, 2147483647) ; ++i) { s_1778389252.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    data_1778389253[data_1778389253_Idx][chckIndx(h_1778389256, 0, (data_1778389253[data_1778389253_Idx]).length - 1)].Field2 = nimCopy(null, key_1778389254, NTI33554439);
    data_1778389253[data_1778389253_Idx][chckIndx(h_1778389256, 0, (data_1778389253[data_1778389253_Idx]).length - 1)].Field0 = hc_1778389255;
    data_1778389253[data_1778389253_Idx][chckIndx(h_1778389256, 0, (data_1778389253[data_1778389253_Idx]).length - 1)].Field1 = -1;
    if ((s_1778389252.first < 0)) {
    s_1778389252.first = h_1778389256;
    }
    
    if ((0 <= s_1778389252.last)) {
    data_1778389253[data_1778389253_Idx][chckIndx(s_1778389252.last, 0, (data_1778389253[data_1778389253_Idx]).length - 1)].Field1 = h_1778389256;
    }
    
    s_1778389252.last = h_1778389256;

  
}

function enlarge_1778388580(s_1778388582) {
    var n_1778388584 = [];
    n_1778388584 = new Array(chckRange(mulInt((s_1778388582.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_1778388582.data).length, 2), 0, 2147483647) ; ++i) { n_1778388584[i] = {Field0: 0, Field1: 0, Field2: []}; }    var h_1778388647 = s_1778388582.first;
    s_1778388582.first = -1;
    s_1778388582.last = -1;
    var Temporary1 = s_1778388582.data; s_1778388582.data = n_1778388584; n_1778388584 = Temporary1;    Label2: do {
        Label3: while (true) {
        if (!(0 <= h_1778388647)) break Label3;
          var nxt_1778388709 = n_1778388584[chckIndx(h_1778388647, 0, (n_1778388584).length - 1)].Field1;
          if (isFilled_1040187430(n_1778388584[chckIndx(h_1778388647, 0, (n_1778388584).length - 1)].Field0)) {
          var j_1778389124 = subInt(-1, rawGetKnownHC_1778388881(s_1778388582, n_1778388584[chckIndx(h_1778388647, 0, (n_1778388584).length - 1)].Field2, n_1778388584[chckIndx(h_1778388647, 0, (n_1778388584).length - 1)].Field0));
          rawInsert_1778389250(s_1778388582, s_1778388582, "data", n_1778388584[chckIndx(h_1778388647, 0, (n_1778388584).length - 1)].Field2, n_1778388584[chckIndx(h_1778388647, 0, (n_1778388584).length - 1)].Field0, j_1778389124);
          }
          
          h_1778388647 = nxt_1778388709;
        }
    } while (false);

  
}

function incl_1778388038(s_1778388040, key_1778388041) {
    if (((s_1778388040.data).length == 0)) {
    var correctSizeHEX60gensym188_1778388102 = slotsNeeded_1040187441(64);
    s_1778388040.first = -1;
    s_1778388040.last = -1;
    s_1778388040.counter = 0;
    s_1778388040.data = new Array(chckRange(correctSizeHEX60gensym188_1778388102, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym188_1778388102, 0, 2147483647) ; ++i) { s_1778388040.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_1778388117 = [0];
    var index_1778388385 = rawGet_1778388125(s_1778388040, key_1778388041, hc_1778388117, 0);
    if ((index_1778388385 < 0)) {
    if (mustRehash_1778388386(s_1778388040)) {
    enlarge_1778388580(s_1778388040);
    index_1778388385 = rawGetKnownHC_1778388881(s_1778388040, key_1778388041, hc_1778388117[0]);
    }
    
    rawInsert_1778389250(s_1778388040, s_1778388040, "data", key_1778388041, hc_1778388117[0], subInt(-1, index_1778388385));
    s_1778388040.counter = addInt(s_1778388040.counter, 1);
    }
    

  
}

function HEX7BHEX7D_1711277194(cmd_1711277195, arg_1711277196) {
    var Temporary1;

  var result_1711277197 = [];

    if (nsuStartsWith(cmd_1711277195, makeNimstrLit("\\"))) {
    Temporary1 = [];
    }
    else {
    Temporary1 = makeNimstrLit("\\");
    }
    
    result_1711277197 = nimCopy(null, (Temporary1 || []).concat(cmd_1711277195 || [],makeNimstrLit("{") || [],arg_1711277196 || [],makeNimstrLit("}") || []), NTI33554439);

  return result_1711277197;

}

function translate_1291845675(phrase_1291845676, lang_1291845677) {
  var result_1291845678 = [];

    result_1291845678 = nimCopy(null, translations_1291845656[chckIndx(phrase_1291845676, 0, (translations_1291845656).length - 1)][chckIndx(lang_1291845677, 0, (translations_1291845656[chckIndx(phrase_1291845676, 0, (translations_1291845656).length - 1)]).length - 1)], NTI33554439);

  return result_1291845678;

}

function isSome_1191182935(self_1191182937) {
  var result_1191182938 = false;

    result_1191182938 = self_1191182937.has;

  return result_1191182938;

}

function isNone_1191182960(self_1191182962) {
  var result_1191182963 = false;

    result_1191182963 = !(self_1191182962.has);

  return result_1191182963;

}

function get_1191182952(self_1191182954) {
  var result_1191182955 = 0;

    if (isNone_1191182960(self_1191182954)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1006632980, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191182955 = self_1191182954["val"];

  return result_1191182955;

}

function HEX5BHEX5D_1728053628(s_1728053630, i_1728053631) {
  var result_1728053632 = null;

    result_1728053632 = s_1728053630[chckIndx(subInt((s_1728053630).length, i_1728053631), 0, (s_1728053630).length - 1)];

  return result_1728053632;

}

function HEX3F_1275068557(typ_1275068558) {
  var result_1275068559 = ({kind: 0, base: 0});

    result_1275068559.kind = 1;
    result_1275068559.base = typ_1275068558;

  return result_1275068559;

}

function isNone_1258291253(self_1258291255) {
  var result_1258291256 = false;

    result_1258291256 = !(self_1258291255.has);

  return result_1258291256;

}

function get_1728053657(self_1728053659) {
  var result_1728053660 = [];

    if (isNone_1258291253(self_1728053659)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1006632980, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1728053660 = self_1728053659["val"];

  return result_1728053660;

}

function isSome_1728053759(self_1728053761) {
  var result_1728053762 = false;

    result_1728053762 = !((self_1728053761.val == null));

  return result_1728053762;

}

function none_1728053772() {
  var result_1728053779 = ({val: [], has: false});

  return result_1728053779;

}

function map_1728053748(self_1728053751, callback_1728053753) {
    var Temporary1;

  var result_1728053754 = ({val: [], has: false});

    if (isSome_1728053759(self_1728053751)) {
    Temporary1 = some_1728053767(callback_1728053753(self_1728053751.val));
    }
    else {
    Temporary1 = none_1728053772();
    }
    
    result_1728053754 = nimCopy(result_1728053754, Temporary1, NTI1275068493);

  return result_1728053754;

}

function to_1728053714(val_1728053717) {
    var Temporary1;
    
function HEX3Aanonymous_1728053724(x_1728053735) {
      var result_1728053738 = [];

        result_1728053738 = nimCopy(null, to_1694498913(x_1728053735), NTI33554439);

      return result_1728053738;

    }

  var result_1728053719 = ({val: [], has: false});

    var Temporary1 = val_1728053717;
    if (ConstSet176[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'opt\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1275068420)); }
    result_1728053719 = nimCopy(result_1728053719, map_1728053748(Temporary1.opt, HEX3Aanonymous_1728053724), NTI1275068493);

  return result_1728053719;

}

function unsafeGet_1761608185(self_1761608187) {
  var result_1761608188 = [];

    if (!(isSome_1728053623(self_1761608187))) {
    failedAssertImpl_218103864(makeNimstrLit("options.nim(371, 10) `self.isSome` "));
    }
    
    result_1761608188 = self_1761608187["val"];

  return result_1761608188;

}

function binarySearch_939525109(c_939525110, tab_939525111, len_939525112, stride_939525113) {
      var Temporary3;

  var result_939525114 = 0;

  BeforeRet: do {
    var n_939525115 = len_939525112;
    var t_939525116 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(1 < n_939525115)) break Label2;
          var m_939525117 = divInt(n_939525115, 2);
          var p_939525118 = addInt(t_939525116, mulInt(m_939525117, stride_939525113));
          if ((tab_939525111[chckIndx(p_939525118, 0, (tab_939525111).length - 1)] <= ((c_939525110) | 0))) {
          t_939525116 = p_939525118;
          n_939525115 = subInt(n_939525115, m_939525117);
          }
          else {
            n_939525115 = m_939525117;
          }
          
        }
    } while (false);
      if (!!((n_939525115 == 0))) Temporary3 = false; else {        Temporary3 = (tab_939525111[chckIndx(t_939525116, 0, (tab_939525111).length - 1)] <= ((c_939525110) | 0));      }    if (Temporary3) {
    result_939525114 = t_939525116;
    break BeforeRet;
    }
    
    result_939525114 = -1;
    break BeforeRet;
  } while (false);

  return result_939525114;

}

function nucisUpper(c_939525239) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525240 = false;

  BeforeRet: do {
    var c_939525241 = c_939525239;
    var p_939525249 = binarySearch_939525109(c_939525241, toLowerRanges_939525019, 45, 3);
      if (!(0 <= p_939525249)) Temporary2 = false; else {        Temporary2 = (toLowerRanges_939525019[chckIndx(p_939525249, 0, (toLowerRanges_939525019).length - 1)] <= ((c_939525241) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525241) | 0) <= toLowerRanges_939525019[chckIndx(addInt(p_939525249, 1), 0, (toLowerRanges_939525019).length - 1)]);      }    if (Temporary1) {
    result_939525240 = true;
    break BeforeRet;
    }
    
    p_939525249 = binarySearch_939525109(c_939525241, toLowerSinglets_939525020, 610, 2);
      if (!(0 <= p_939525249)) Temporary3 = false; else {        Temporary3 = (((c_939525241) | 0) == toLowerSinglets_939525020[chckIndx(p_939525249, 0, (toLowerSinglets_939525020).length - 1)]);      }    if (Temporary3) {
    result_939525240 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525240;

}

function nucisLower(c_939525220) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525221 = false;

  BeforeRet: do {
    var c_939525222 = c_939525220;
    var p_939525230 = binarySearch_939525109(c_939525222, toUpperRanges_939525021, 46, 3);
      if (!(0 <= p_939525230)) Temporary2 = false; else {        Temporary2 = (toUpperRanges_939525021[chckIndx(p_939525230, 0, (toUpperRanges_939525021).length - 1)] <= ((c_939525222) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525222) | 0) <= toUpperRanges_939525021[chckIndx(addInt(p_939525230, 1), 0, (toUpperRanges_939525021).length - 1)]);      }    if (Temporary1) {
    result_939525221 = true;
    break BeforeRet;
    }
    
    p_939525230 = binarySearch_939525109(c_939525222, toUpperSinglets_939525022, 624, 2);
      if (!(0 <= p_939525230)) Temporary3 = false; else {        Temporary3 = (((c_939525222) | 0) == toUpperSinglets_939525022[chckIndx(p_939525230, 0, (toUpperSinglets_939525022).length - 1)]);      }    if (Temporary3) {
    result_939525221 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525221;

}

function nucisAlpha(c_939525258) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525259 = false;

  BeforeRet: do {
    if ((nucisUpper(c_939525258) || nucisLower(c_939525258))) {
    result_939525259 = true;
    break BeforeRet;
    }
    
    var c_939525260 = c_939525258;
    var p_939525269 = binarySearch_939525109(c_939525260, alphaRanges_939525024, 471, 2);
      if (!(0 <= p_939525269)) Temporary2 = false; else {        Temporary2 = (alphaRanges_939525024[chckIndx(p_939525269, 0, (alphaRanges_939525024).length - 1)] <= ((c_939525260) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525260) | 0) <= alphaRanges_939525024[chckIndx(addInt(p_939525269, 1), 0, (alphaRanges_939525024).length - 1)]);      }    if (Temporary1) {
    result_939525259 = true;
    break BeforeRet;
    }
    
    p_939525269 = binarySearch_939525109(c_939525260, alphaSinglets_939525025, 147, 1);
      if (!(0 <= p_939525269)) Temporary3 = false; else {        Temporary3 = (((c_939525260) | 0) == alphaSinglets_939525025[chckIndx(p_939525269, 0, (alphaSinglets_939525025).length - 1)]);      }    if (Temporary3) {
    result_939525259 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525259;

}

function nucisTitle(c_939525297) {
  var result_939525298 = false;

  BeforeRet: do {
    result_939525298 = (nucisUpper(c_939525297) && nucisLower(c_939525297));
    break BeforeRet;
  } while (false);

  return result_939525298;

}

function nucisWhiteSpace(c_939525300) {
      var Temporary1;
      var Temporary2;

  var result_939525301 = false;

  BeforeRet: do {
    var c_939525302 = c_939525300;
    var p_939525311 = binarySearch_939525109(c_939525302, spaceRanges_939525026, 10, 2);
      if (!(0 <= p_939525311)) Temporary2 = false; else {        Temporary2 = (spaceRanges_939525026[chckIndx(p_939525311, 0, (spaceRanges_939525026).length - 1)] <= ((c_939525302) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525302) | 0) <= spaceRanges_939525026[chckIndx(addInt(p_939525311, 1), 0, (spaceRanges_939525026).length - 1)]);      }    if (Temporary1) {
    result_939525301 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_939525301;

}

function nuctoLower(c_939525120) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_939525121 = 0;

  BeforeRet: do {
    var c_939525122 = c_939525120;
    var p_939525131 = binarySearch_939525109(c_939525122, toLowerRanges_939525019, 45, 3);
      if (!(0 <= p_939525131)) Temporary2 = false; else {        Temporary2 = (toLowerRanges_939525019[chckIndx(p_939525131, 0, (toLowerRanges_939525019).length - 1)] <= ((c_939525122) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_939525122) | 0) <= toLowerRanges_939525019[chckIndx(addInt(p_939525131, 1), 0, (toLowerRanges_939525019).length - 1)]);      }    if (Temporary1) {
    result_939525121 = ((subInt(addInt(((c_939525122) | 0), toLowerRanges_939525019[chckIndx(addInt(p_939525131, 2), 0, (toLowerRanges_939525019).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    p_939525131 = binarySearch_939525109(c_939525122, toLowerSinglets_939525020, 610, 2);
      if (!(0 <= p_939525131)) Temporary3 = false; else {        Temporary3 = (((c_939525122) | 0) == toLowerSinglets_939525020[chckIndx(p_939525131, 0, (toLowerSinglets_939525020).length - 1)]);      }    if (Temporary3) {
    result_939525121 = ((subInt(addInt(((c_939525122) | 0), toLowerSinglets_939525020[chckIndx(addInt(p_939525131, 1), 0, (toLowerSinglets_939525020).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    result_939525121 = c_939525122;
    break BeforeRet;
  } while (false);

  return result_939525121;

}

function npegsrawMatch(s_1207960237, p_1207960238, start_1207960239, c_1207960240) {
    
function matchIt_1207960292(sHEX60gensym26_1207960293, pHEX60gensym26_1207960294, startHEX60gensym26_1207960295, cHEX60gensym26_1207960296) {
          var Temporary1;
                    var Temporary5;
                      var Temporary6;
                      var Temporary7;
                var Temporary10;
                  var Temporary11;
                  var Temporary12;
                var Temporary13;
                var Temporary14;
                  var Temporary15;
                  var Temporary16;
                  var Temporary17;
                var Temporary18;
                var Temporary19;
                var Temporary20;
                var Temporary21;
                  var Temporary22;
                  var Temporary23;
                  var Temporary24;
                var Temporary25;
                var Temporary26;
                var Temporary27;
                var Temporary28;
                var Temporary29;
                var Temporary30;
                  var Temporary31;
                  var Temporary32;
                  var Temporary33;
                var Temporary34;
                var Temporary35;
                var Temporary36;
                var Temporary37;
                var Temporary38;
                var Temporary39;
                var Temporary40;
                var Temporary41;
                  var Temporary42;
                  var Temporary43;
                  var Temporary44;
                var Temporary45;
                var Temporary46;
                var Temporary47;
                var Temporary48;
                var Temporary49;
                var Temporary50;
                var Temporary51;
                var Temporary52;
                var Temporary53;
                var Temporary54;
                  var Temporary55;
                  var Temporary56;
                  var Temporary57;
                var Temporary58;
                var Temporary59;
                var Temporary60;
                var Temporary61;
                var Temporary62;
                var Temporary63;
                var Temporary64;
                var Temporary65;
                var Temporary66;
                var Temporary67;
                var Temporary68;
                var Temporary69;
                  var Temporary70;
                  var Temporary71;
                var Temporary74;
                      var Temporary77;
                        var Temporary78;
                        var Temporary79;
                      var Temporary80;
                      var Temporary81;
                        var Temporary82;
                        var Temporary83;
                        var Temporary84;
                      var Temporary85;
                      var Temporary86;
                      var Temporary87;
                      var Temporary88;
                        var Temporary89;
                        var Temporary90;
                        var Temporary91;
                      var Temporary92;
                      var Temporary93;
                      var Temporary94;
                      var Temporary95;
                      var Temporary96;
                      var Temporary97;
                        var Temporary98;
                        var Temporary99;
                        var Temporary100;
                      var Temporary101;
                      var Temporary102;
                      var Temporary103;
                      var Temporary104;
                      var Temporary105;
                      var Temporary106;
                      var Temporary107;
                      var Temporary108;
                        var Temporary109;
                        var Temporary110;
                        var Temporary111;
                      var Temporary112;
                      var Temporary113;
                      var Temporary114;
                      var Temporary115;
                      var Temporary116;
                      var Temporary117;
                      var Temporary118;
                      var Temporary119;
                      var Temporary120;
                      var Temporary121;
                        var Temporary122;
                        var Temporary123;
                        var Temporary124;
                      var Temporary125;
                      var Temporary126;
                      var Temporary127;
                      var Temporary128;
                      var Temporary129;
                      var Temporary130;
                      var Temporary131;
                      var Temporary132;
                      var Temporary133;
                      var Temporary134;
                      var Temporary135;
                      var Temporary136;
                        var Temporary137;
                        var Temporary138;
                  var Temporary141;
            var Temporary142;
              var Temporary143;
            var Temporary144;
              var Temporary145;
          var Temporary146;
            var Temporary148;
                  var Temporary151;
                  var Temporary152;
            var Temporary154;
                  var Temporary157;
                  var Temporary158;
                var Temporary161;
                var Temporary162;
                var Temporary165;
                var Temporary166;
                var Temporary169;
                var Temporary170;
          var Temporary171;
                var Temporary176;
                  var Temporary177;
          var Temporary178;
          var Temporary179;
          var Temporary180;
          var Temporary181;
          var Temporary182;
          var Temporary183;
            var Temporary184;
            var Temporary185;
              var Temporary186;
              var Temporary187;
            var Temporary188;
            var Temporary189;
          
function matchBackRef_1207960298(sHEX60gensym26_1207960299, pHEX60gensym26_1207960300, startHEX60gensym26_1207960301, cHEX60gensym26_1207960302) {
              var Temporary1;
                var Temporary2;

            var result_1207960303 = 0;

            BeforeRet: do {
              var Temporary1 = pHEX60gensym26_1207960300;
              if (ConstSet267[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'index\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1207959557)); }
              var indexHEX60gensym26_1207960304 = Temporary1.index;
              if ((indexHEX60gensym26_1207960304 < 0)) {
              indexHEX60gensym26_1207960304 = addInt(indexHEX60gensym26_1207960304, cHEX60gensym26_1207960302.ml);
              }
              
                if ((indexHEX60gensym26_1207960304 < 0)) Temporary2 = true; else {                  Temporary2 = (cHEX60gensym26_1207960302.ml <= indexHEX60gensym26_1207960304);                }              if (Temporary2) {
              result_1207960303 = -1;
              break BeforeRet;
              }
              
              var colontmp__486541197 = nimCopy(null, cHEX60gensym26_1207960302.matches[chckIndx(indexHEX60gensym26_1207960304, 0, (cHEX60gensym26_1207960302.matches).length - 1)], NTI1207960085);
              var aHEX60gensym26_1207960309 = colontmp__486541197["Field0"];
              var bHEX60gensym26_1207960310 = colontmp__486541197["Field1"];
              var nHEX60gensym26_1207960311 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              switch (pHEX60gensym26_1207960300.kind) {
              case 25:
                nHEX60gensym26_1207960311 = nimCopy(nHEX60gensym26_1207960311, {kind: 9, term: substr_33557922(sHEX60gensym26_1207960299, aHEX60gensym26_1207960309, bHEX60gensym26_1207960310), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
                break;
              case 27:
                nHEX60gensym26_1207960311 = nimCopy(nHEX60gensym26_1207960311, {kind: 11, term: substr_33557922(sHEX60gensym26_1207960299, aHEX60gensym26_1207960309, bHEX60gensym26_1207960310), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
                break;
              case 26:
                nHEX60gensym26_1207960311 = nimCopy(nHEX60gensym26_1207960311, {kind: 10, term: substr_33557922(sHEX60gensym26_1207960299, aHEX60gensym26_1207960309, bHEX60gensym26_1207960310), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
                break;
              default: 
                if (true) {
                failedAssertImpl_218103864(makeNimstrLit("pegs.nim(579, 19) `false` impossible case"));
                }
                
                break;
              }
              result_1207960303 = matchIt_1207960292(sHEX60gensym26_1207960299, nHEX60gensym26_1207960311, startHEX60gensym26_1207960301, cHEX60gensym26_1207960302);
            } while (false);

            return result_1207960303;

          }

      var result_1207960297 = 0;

      BeforeRet: do {
        switch (pHEX60gensym26_1207960294.kind) {
        case 0:
          result_1207960297 = 0;
          break;
        case 1:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          result_1207960297 = 1;
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 2:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          result_1207960297 = runeLenAt_939524161(sHEX60gensym26_1207960293, chckRange(startHEX60gensym26_1207960295, 0, 2147483647));
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 4:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          var aHEX60gensym26_1207960317 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
          aHEX60gensym26_1207960317 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 1);
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
          aHEX60gensym26_1207960317 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 2);
          }
          else {
            aHEX60gensym26_1207960317 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
          aHEX60gensym26_1207960317 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 3);
          }
          else {
            aHEX60gensym26_1207960317 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
          aHEX60gensym26_1207960317 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 4);
          }
          else {
            aHEX60gensym26_1207960317 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
          aHEX60gensym26_1207960317 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 5);
          }
          else {
            aHEX60gensym26_1207960317 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
          aHEX60gensym26_1207960317 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 6);
          }
          else {
            aHEX60gensym26_1207960317 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
            aHEX60gensym26_1207960317 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
            result_1207960297 = addInt(result_1207960297, 1);
          }
          }}}}}
          if (nucisAlpha(aHEX60gensym26_1207960317)) {
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          }
          else {
            result_1207960297 = -1;
          }
          
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 5:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          var aHEX60gensym26_1207960530 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
          aHEX60gensym26_1207960530 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 1);
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
          aHEX60gensym26_1207960530 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 2);
          }
          else {
            aHEX60gensym26_1207960530 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
          aHEX60gensym26_1207960530 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 3);
          }
          else {
            aHEX60gensym26_1207960530 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
          aHEX60gensym26_1207960530 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 4);
          }
          else {
            aHEX60gensym26_1207960530 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
          aHEX60gensym26_1207960530 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 5);
          }
          else {
            aHEX60gensym26_1207960530 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
          aHEX60gensym26_1207960530 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 6);
          }
          else {
            aHEX60gensym26_1207960530 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
            aHEX60gensym26_1207960530 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
            result_1207960297 = addInt(result_1207960297, 1);
          }
          }}}}}
          if (nucisLower(aHEX60gensym26_1207960530)) {
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          }
          else {
            result_1207960297 = -1;
          }
          
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 6:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          var aHEX60gensym26_1207960743 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
          aHEX60gensym26_1207960743 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 1);
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
          aHEX60gensym26_1207960743 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 2);
          }
          else {
            aHEX60gensym26_1207960743 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
          aHEX60gensym26_1207960743 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 3);
          }
          else {
            aHEX60gensym26_1207960743 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
          aHEX60gensym26_1207960743 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 4);
          }
          else {
            aHEX60gensym26_1207960743 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
          aHEX60gensym26_1207960743 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 5);
          }
          else {
            aHEX60gensym26_1207960743 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
          aHEX60gensym26_1207960743 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 6);
          }
          else {
            aHEX60gensym26_1207960743 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
            aHEX60gensym26_1207960743 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
            result_1207960297 = addInt(result_1207960297, 1);
          }
          }}}}}
          if (nucisUpper(aHEX60gensym26_1207960743)) {
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          }
          else {
            result_1207960297 = -1;
          }
          
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 7:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          var aHEX60gensym26_1207960956 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
          aHEX60gensym26_1207960956 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 1);
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
          aHEX60gensym26_1207960956 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 2);
          }
          else {
            aHEX60gensym26_1207960956 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
          aHEX60gensym26_1207960956 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 3);
          }
          else {
            aHEX60gensym26_1207960956 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
          aHEX60gensym26_1207960956 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 4);
          }
          else {
            aHEX60gensym26_1207960956 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
          aHEX60gensym26_1207960956 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 5);
          }
          else {
            aHEX60gensym26_1207960956 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
          aHEX60gensym26_1207960956 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 6);
          }
          else {
            aHEX60gensym26_1207960956 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
            aHEX60gensym26_1207960956 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
            result_1207960297 = addInt(result_1207960297, 1);
          }
          }}}}}
          if (nucisTitle(aHEX60gensym26_1207960956)) {
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          }
          else {
            result_1207960297 = -1;
          }
          
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 8:
          if ((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) {
          var aHEX60gensym26_1207961169 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
          aHEX60gensym26_1207961169 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 1);
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
          aHEX60gensym26_1207961169 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 2);
          }
          else {
            aHEX60gensym26_1207961169 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
          aHEX60gensym26_1207961169 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 3);
          }
          else {
            aHEX60gensym26_1207961169 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
          aHEX60gensym26_1207961169 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 4);
          }
          else {
            aHEX60gensym26_1207961169 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
          aHEX60gensym26_1207961169 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 5);
          }
          else {
            aHEX60gensym26_1207961169 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
          if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
          if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
          aHEX60gensym26_1207961169 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
          result_1207960297 = addInt(result_1207960297, 6);
          }
          else {
            aHEX60gensym26_1207961169 = 65533;
            result_1207960297 = addInt(result_1207960297, 1);
          }
          
          }
          else {
            aHEX60gensym26_1207961169 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
            result_1207960297 = addInt(result_1207960297, 1);
          }
          }}}}}
          if (nucisWhiteSpace(aHEX60gensym26_1207961169)) {
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          }
          else {
            result_1207960297 = -1;
          }
          
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 20:
          result_1207960297 = subInt((sHEX60gensym26_1207960293).length, startHEX60gensym26_1207960295);
          break;
        case 3:
          if (((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length) && (sHEX60gensym26_1207960293[chckIndx(startHEX60gensym26_1207960295, 0, (sHEX60gensym26_1207960293).length - 1)] == 10))) {
          result_1207960297 = 1;
          }
          else {
          if (((startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length) && (sHEX60gensym26_1207960293[chckIndx(startHEX60gensym26_1207960295, 0, (sHEX60gensym26_1207960293).length - 1)] == 13))) {
          if (((addInt(startHEX60gensym26_1207960295, 1) < (sHEX60gensym26_1207960293).length) && (sHEX60gensym26_1207960293[chckIndx(addInt(startHEX60gensym26_1207960295, 1), 0, (sHEX60gensym26_1207960293).length - 1)] == 10))) {
          result_1207960297 = 2;
          }
          else {
            result_1207960297 = 1;
          }
          
          }
          else {
            result_1207960297 = -1;
          }
          }
          break;
        case 9:
          var Temporary1 = pHEX60gensym26_1207960294;
          if (ConstSet177[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1207959557)); }
          result_1207960297 = (Temporary1.term).length;
          Label2: do {
            var iHEX60gensym26_1207961386 = 0;
            var colontmp__486541170 = 0;
            colontmp__486541170 = subInt(result_1207960297, 1);
            var res_486541171 = 0;
            Label3: do {
                Label4: while (true) {
                if (!(res_486541171 <= colontmp__486541170)) break Label4;
                  iHEX60gensym26_1207961386 = res_486541171;
                    if (((sHEX60gensym26_1207960293).length <= addInt(startHEX60gensym26_1207960295, iHEX60gensym26_1207961386))) Temporary5 = true; else {                      var Temporary6 = pHEX60gensym26_1207960294;
                      if (ConstSet178[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1207959557)); }
                      Temporary5 = !(((Temporary7 = Temporary6.term, Temporary7)[chckIndx(iHEX60gensym26_1207961386, 0, (Temporary7).length - 1)] == sHEX60gensym26_1207960293[chckIndx(addInt(startHEX60gensym26_1207960295, iHEX60gensym26_1207961386), 0, (sHEX60gensym26_1207960293).length - 1)]));                    }                  if (Temporary5) {
                  result_1207960297 = -1;
                  break Label2;
                  }
                  
                  res_486541171 = addInt(res_486541171, 1);
                }
            } while (false);
          } while (false);
          break;
        case 10:
          var iHEX60gensym26_1207961387 = 0;
          var aHEX60gensym26_1207961388 = 0;
          var bHEX60gensym26_1207961389 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          Label8: do {
              Label9: while (true) {
                var Temporary10 = pHEX60gensym26_1207960294;
                if (ConstSet179[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1207959557)); }
              if (!(iHEX60gensym26_1207961387 < (Temporary10.term).length)) break Label9;
                if (((sHEX60gensym26_1207960293).length <= result_1207960297)) {
                result_1207960297 = -1;
                break Label8;
                }
                
                  var Temporary11 = pHEX60gensym26_1207960294;
                  if (ConstSet180[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1207959557)); }
                if (((Temporary12 = Temporary11.term, Temporary12)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary12).length - 1)] <= 127)) {
                var Temporary13 = pHEX60gensym26_1207960294;
                if (ConstSet181[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI1207959557)); }
                aHEX60gensym26_1207961388 = chckRange((Temporary14 = Temporary13.term, Temporary14)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary14).length - 1)], -2147483648, 2147483647);
                iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                else {
                  var Temporary15 = pHEX60gensym26_1207960294;
                  if (ConstSet182[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1207959557)); }
                if ((((Temporary16 = Temporary15.term, Temporary16)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary16).length - 1)] >>> 5) == 6)) {
                  var Temporary17 = pHEX60gensym26_1207960294;
                  if (ConstSet183[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1207959557)); }
                if ((iHEX60gensym26_1207961387 <= subInt((Temporary17.term).length, 2))) {
                var Temporary18 = pHEX60gensym26_1207960294;
                if (ConstSet184[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1207959557)); }
                var Temporary20 = pHEX60gensym26_1207960294;
                if (ConstSet185[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI1207959557)); }
                aHEX60gensym26_1207961388 = chckRange(((((Temporary19 = Temporary18.term, Temporary19)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary19).length - 1)] & 31) << 6) | ((Temporary21 = Temporary20.term, Temporary21)[chckIndx(addInt(iHEX60gensym26_1207961387, 1), 0, (Temporary21).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 2);
                }
                else {
                  aHEX60gensym26_1207961388 = 65533;
                  iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                
                }
                else {
                  var Temporary22 = pHEX60gensym26_1207960294;
                  if (ConstSet186[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI1207959557)); }
                if ((((Temporary23 = Temporary22.term, Temporary23)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary23).length - 1)] >>> 4) == 14)) {
                  var Temporary24 = pHEX60gensym26_1207960294;
                  if (ConstSet187[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI1207959557)); }
                if ((iHEX60gensym26_1207961387 <= subInt((Temporary24.term).length, 3))) {
                var Temporary25 = pHEX60gensym26_1207960294;
                if (ConstSet188[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI1207959557)); }
                var Temporary27 = pHEX60gensym26_1207960294;
                if (ConstSet189[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI1207959557)); }
                var Temporary29 = pHEX60gensym26_1207960294;
                if (ConstSet190[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI1207959557)); }
                aHEX60gensym26_1207961388 = chckRange((((((Temporary26 = Temporary25.term, Temporary26)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary26).length - 1)] & 15) << 12) | (((Temporary28 = Temporary27.term, Temporary28)[chckIndx(addInt(iHEX60gensym26_1207961387, 1), 0, (Temporary28).length - 1)] & 63) << 6)) | ((Temporary30 = Temporary29.term, Temporary30)[chckIndx(addInt(iHEX60gensym26_1207961387, 2), 0, (Temporary30).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 3);
                }
                else {
                  aHEX60gensym26_1207961388 = 65533;
                  iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                
                }
                else {
                  var Temporary31 = pHEX60gensym26_1207960294;
                  if (ConstSet191[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI1207959557)); }
                if ((((Temporary32 = Temporary31.term, Temporary32)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary32).length - 1)] >>> 3) == 30)) {
                  var Temporary33 = pHEX60gensym26_1207960294;
                  if (ConstSet192[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI1207959557)); }
                if ((iHEX60gensym26_1207961387 <= subInt((Temporary33.term).length, 4))) {
                var Temporary34 = pHEX60gensym26_1207960294;
                if (ConstSet193[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI1207959557)); }
                var Temporary36 = pHEX60gensym26_1207960294;
                if (ConstSet194[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI1207959557)); }
                var Temporary38 = pHEX60gensym26_1207960294;
                if (ConstSet195[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI1207959557)); }
                var Temporary40 = pHEX60gensym26_1207960294;
                if (ConstSet196[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI1207959557)); }
                aHEX60gensym26_1207961388 = chckRange(((((((Temporary35 = Temporary34.term, Temporary35)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary35).length - 1)] & 7) << 18) | (((Temporary37 = Temporary36.term, Temporary37)[chckIndx(addInt(iHEX60gensym26_1207961387, 1), 0, (Temporary37).length - 1)] & 63) << 12)) | (((Temporary39 = Temporary38.term, Temporary39)[chckIndx(addInt(iHEX60gensym26_1207961387, 2), 0, (Temporary39).length - 1)] & 63) << 6)) | ((Temporary41 = Temporary40.term, Temporary41)[chckIndx(addInt(iHEX60gensym26_1207961387, 3), 0, (Temporary41).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 4);
                }
                else {
                  aHEX60gensym26_1207961388 = 65533;
                  iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                
                }
                else {
                  var Temporary42 = pHEX60gensym26_1207960294;
                  if (ConstSet197[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI1207959557)); }
                if ((((Temporary43 = Temporary42.term, Temporary43)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary43).length - 1)] >>> 2) == 62)) {
                  var Temporary44 = pHEX60gensym26_1207960294;
                  if (ConstSet198[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI1207959557)); }
                if ((iHEX60gensym26_1207961387 <= subInt((Temporary44.term).length, 5))) {
                var Temporary45 = pHEX60gensym26_1207960294;
                if (ConstSet199[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI1207959557)); }
                var Temporary47 = pHEX60gensym26_1207960294;
                if (ConstSet200[Temporary47.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary47.kind, NTI1207959557)); }
                var Temporary49 = pHEX60gensym26_1207960294;
                if (ConstSet201[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI1207959557)); }
                var Temporary51 = pHEX60gensym26_1207960294;
                if (ConstSet202[Temporary51.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary51.kind, NTI1207959557)); }
                var Temporary53 = pHEX60gensym26_1207960294;
                if (ConstSet203[Temporary53.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary53.kind, NTI1207959557)); }
                aHEX60gensym26_1207961388 = chckRange((((((((Temporary46 = Temporary45.term, Temporary46)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary46).length - 1)] & 3) << 24) | (((Temporary48 = Temporary47.term, Temporary48)[chckIndx(addInt(iHEX60gensym26_1207961387, 1), 0, (Temporary48).length - 1)] & 63) << 18)) | (((Temporary50 = Temporary49.term, Temporary50)[chckIndx(addInt(iHEX60gensym26_1207961387, 2), 0, (Temporary50).length - 1)] & 63) << 12)) | (((Temporary52 = Temporary51.term, Temporary52)[chckIndx(addInt(iHEX60gensym26_1207961387, 3), 0, (Temporary52).length - 1)] & 63) << 6)) | ((Temporary54 = Temporary53.term, Temporary54)[chckIndx(addInt(iHEX60gensym26_1207961387, 4), 0, (Temporary54).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 5);
                }
                else {
                  aHEX60gensym26_1207961388 = 65533;
                  iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                
                }
                else {
                  var Temporary55 = pHEX60gensym26_1207960294;
                  if (ConstSet204[Temporary55.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary55.kind, NTI1207959557)); }
                if ((((Temporary56 = Temporary55.term, Temporary56)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary56).length - 1)] >>> 1) == 126)) {
                  var Temporary57 = pHEX60gensym26_1207960294;
                  if (ConstSet205[Temporary57.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary57.kind, NTI1207959557)); }
                if ((iHEX60gensym26_1207961387 <= subInt((Temporary57.term).length, 6))) {
                var Temporary58 = pHEX60gensym26_1207960294;
                if (ConstSet206[Temporary58.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary58.kind, NTI1207959557)); }
                var Temporary60 = pHEX60gensym26_1207960294;
                if (ConstSet207[Temporary60.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary60.kind, NTI1207959557)); }
                var Temporary62 = pHEX60gensym26_1207960294;
                if (ConstSet208[Temporary62.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary62.kind, NTI1207959557)); }
                var Temporary64 = pHEX60gensym26_1207960294;
                if (ConstSet209[Temporary64.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary64.kind, NTI1207959557)); }
                var Temporary66 = pHEX60gensym26_1207960294;
                if (ConstSet210[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI1207959557)); }
                var Temporary68 = pHEX60gensym26_1207960294;
                if (ConstSet211[Temporary68.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary68.kind, NTI1207959557)); }
                aHEX60gensym26_1207961388 = chckRange(((((((((Temporary59 = Temporary58.term, Temporary59)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary59).length - 1)] & 1) << 30) | (((Temporary61 = Temporary60.term, Temporary61)[chckIndx(addInt(iHEX60gensym26_1207961387, 1), 0, (Temporary61).length - 1)] & 63) << 24)) | (((Temporary63 = Temporary62.term, Temporary63)[chckIndx(addInt(iHEX60gensym26_1207961387, 2), 0, (Temporary63).length - 1)] & 63) << 18)) | (((Temporary65 = Temporary64.term, Temporary65)[chckIndx(addInt(iHEX60gensym26_1207961387, 3), 0, (Temporary65).length - 1)] & 63) << 12)) | (((Temporary67 = Temporary66.term, Temporary67)[chckIndx(addInt(iHEX60gensym26_1207961387, 4), 0, (Temporary67).length - 1)] & 63) << 6)) | ((Temporary69 = Temporary68.term, Temporary69)[chckIndx(addInt(iHEX60gensym26_1207961387, 5), 0, (Temporary69).length - 1)] & 63)), -2147483648, 2147483647);
                iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 6);
                }
                else {
                  aHEX60gensym26_1207961388 = 65533;
                  iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                
                }
                else {
                  var Temporary70 = pHEX60gensym26_1207960294;
                  if (ConstSet212[Temporary70.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary70.kind, NTI1207959557)); }
                  aHEX60gensym26_1207961388 = chckRange((Temporary71 = Temporary70.term, Temporary71)[chckIndx(iHEX60gensym26_1207961387, 0, (Temporary71).length - 1)], -2147483648, 2147483647);
                  iHEX60gensym26_1207961387 = addInt(iHEX60gensym26_1207961387, 1);
                }
                }}}}}
                if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
                bHEX60gensym26_1207961389 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
                result_1207960297 = addInt(result_1207960297, 1);
                }
                else {
                if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
                if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
                bHEX60gensym26_1207961389 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                result_1207960297 = addInt(result_1207960297, 2);
                }
                else {
                  bHEX60gensym26_1207961389 = 65533;
                  result_1207960297 = addInt(result_1207960297, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
                if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
                bHEX60gensym26_1207961389 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                result_1207960297 = addInt(result_1207960297, 3);
                }
                else {
                  bHEX60gensym26_1207961389 = 65533;
                  result_1207960297 = addInt(result_1207960297, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
                if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
                bHEX60gensym26_1207961389 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                result_1207960297 = addInt(result_1207960297, 4);
                }
                else {
                  bHEX60gensym26_1207961389 = 65533;
                  result_1207960297 = addInt(result_1207960297, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
                if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
                bHEX60gensym26_1207961389 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                result_1207960297 = addInt(result_1207960297, 5);
                }
                else {
                  bHEX60gensym26_1207961389 = 65533;
                  result_1207960297 = addInt(result_1207960297, 1);
                }
                
                }
                else {
                if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
                if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
                bHEX60gensym26_1207961389 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                result_1207960297 = addInt(result_1207960297, 6);
                }
                else {
                  bHEX60gensym26_1207961389 = 65533;
                  result_1207960297 = addInt(result_1207960297, 1);
                }
                
                }
                else {
                  bHEX60gensym26_1207961389 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
                  result_1207960297 = addInt(result_1207960297, 1);
                }
                }}}}}
                if (!(HEX3DHEX3D_939525015(nuctoLower(aHEX60gensym26_1207961388), nuctoLower(bHEX60gensym26_1207961389)))) {
                result_1207960297 = -1;
                break Label8;
                }
                
              }
          } while (false);
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          break;
        case 11:
          var iHEX60gensym26_1207961810 = 0;
          var aHEX60gensym26_1207961811 = 0;
          var bHEX60gensym26_1207961812 = 0;
          result_1207960297 = startHEX60gensym26_1207960295;
          Label72: do {
              Label73: while (true) {
                var Temporary74 = pHEX60gensym26_1207960294;
                if (ConstSet213[Temporary74.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary74.kind, NTI1207959557)); }
              if (!(iHEX60gensym26_1207961810 < (Temporary74.term).length)) break Label73;
                Label75: do {
                    Label76: while (true) {
                      var Temporary77 = pHEX60gensym26_1207960294;
                      if (ConstSet214[Temporary77.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary77.kind, NTI1207959557)); }
                    if (!(iHEX60gensym26_1207961810 < (Temporary77.term).length)) break Label76;
                        var Temporary78 = pHEX60gensym26_1207960294;
                        if (ConstSet215[Temporary78.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary78.kind, NTI1207959557)); }
                      if (((Temporary79 = Temporary78.term, Temporary79)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary79).length - 1)] <= 127)) {
                      var Temporary80 = pHEX60gensym26_1207960294;
                      if (ConstSet216[Temporary80.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary80.kind, NTI1207959557)); }
                      aHEX60gensym26_1207961811 = chckRange((Temporary81 = Temporary80.term, Temporary81)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary81).length - 1)], -2147483648, 2147483647);
                      iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      else {
                        var Temporary82 = pHEX60gensym26_1207960294;
                        if (ConstSet217[Temporary82.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary82.kind, NTI1207959557)); }
                      if ((((Temporary83 = Temporary82.term, Temporary83)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary83).length - 1)] >>> 5) == 6)) {
                        var Temporary84 = pHEX60gensym26_1207960294;
                        if (ConstSet218[Temporary84.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary84.kind, NTI1207959557)); }
                      if ((iHEX60gensym26_1207961810 <= subInt((Temporary84.term).length, 2))) {
                      var Temporary85 = pHEX60gensym26_1207960294;
                      if (ConstSet219[Temporary85.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary85.kind, NTI1207959557)); }
                      var Temporary87 = pHEX60gensym26_1207960294;
                      if (ConstSet220[Temporary87.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary87.kind, NTI1207959557)); }
                      aHEX60gensym26_1207961811 = chckRange(((((Temporary86 = Temporary85.term, Temporary86)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary86).length - 1)] & 31) << 6) | ((Temporary88 = Temporary87.term, Temporary88)[chckIndx(addInt(iHEX60gensym26_1207961810, 1), 0, (Temporary88).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 2);
                      }
                      else {
                        aHEX60gensym26_1207961811 = 65533;
                        iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      
                      }
                      else {
                        var Temporary89 = pHEX60gensym26_1207960294;
                        if (ConstSet221[Temporary89.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary89.kind, NTI1207959557)); }
                      if ((((Temporary90 = Temporary89.term, Temporary90)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary90).length - 1)] >>> 4) == 14)) {
                        var Temporary91 = pHEX60gensym26_1207960294;
                        if (ConstSet222[Temporary91.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary91.kind, NTI1207959557)); }
                      if ((iHEX60gensym26_1207961810 <= subInt((Temporary91.term).length, 3))) {
                      var Temporary92 = pHEX60gensym26_1207960294;
                      if (ConstSet223[Temporary92.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary92.kind, NTI1207959557)); }
                      var Temporary94 = pHEX60gensym26_1207960294;
                      if (ConstSet224[Temporary94.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary94.kind, NTI1207959557)); }
                      var Temporary96 = pHEX60gensym26_1207960294;
                      if (ConstSet225[Temporary96.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary96.kind, NTI1207959557)); }
                      aHEX60gensym26_1207961811 = chckRange((((((Temporary93 = Temporary92.term, Temporary93)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary93).length - 1)] & 15) << 12) | (((Temporary95 = Temporary94.term, Temporary95)[chckIndx(addInt(iHEX60gensym26_1207961810, 1), 0, (Temporary95).length - 1)] & 63) << 6)) | ((Temporary97 = Temporary96.term, Temporary97)[chckIndx(addInt(iHEX60gensym26_1207961810, 2), 0, (Temporary97).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 3);
                      }
                      else {
                        aHEX60gensym26_1207961811 = 65533;
                        iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      
                      }
                      else {
                        var Temporary98 = pHEX60gensym26_1207960294;
                        if (ConstSet226[Temporary98.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary98.kind, NTI1207959557)); }
                      if ((((Temporary99 = Temporary98.term, Temporary99)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary99).length - 1)] >>> 3) == 30)) {
                        var Temporary100 = pHEX60gensym26_1207960294;
                        if (ConstSet227[Temporary100.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary100.kind, NTI1207959557)); }
                      if ((iHEX60gensym26_1207961810 <= subInt((Temporary100.term).length, 4))) {
                      var Temporary101 = pHEX60gensym26_1207960294;
                      if (ConstSet228[Temporary101.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary101.kind, NTI1207959557)); }
                      var Temporary103 = pHEX60gensym26_1207960294;
                      if (ConstSet229[Temporary103.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary103.kind, NTI1207959557)); }
                      var Temporary105 = pHEX60gensym26_1207960294;
                      if (ConstSet230[Temporary105.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary105.kind, NTI1207959557)); }
                      var Temporary107 = pHEX60gensym26_1207960294;
                      if (ConstSet231[Temporary107.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary107.kind, NTI1207959557)); }
                      aHEX60gensym26_1207961811 = chckRange(((((((Temporary102 = Temporary101.term, Temporary102)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary102).length - 1)] & 7) << 18) | (((Temporary104 = Temporary103.term, Temporary104)[chckIndx(addInt(iHEX60gensym26_1207961810, 1), 0, (Temporary104).length - 1)] & 63) << 12)) | (((Temporary106 = Temporary105.term, Temporary106)[chckIndx(addInt(iHEX60gensym26_1207961810, 2), 0, (Temporary106).length - 1)] & 63) << 6)) | ((Temporary108 = Temporary107.term, Temporary108)[chckIndx(addInt(iHEX60gensym26_1207961810, 3), 0, (Temporary108).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 4);
                      }
                      else {
                        aHEX60gensym26_1207961811 = 65533;
                        iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      
                      }
                      else {
                        var Temporary109 = pHEX60gensym26_1207960294;
                        if (ConstSet232[Temporary109.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary109.kind, NTI1207959557)); }
                      if ((((Temporary110 = Temporary109.term, Temporary110)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary110).length - 1)] >>> 2) == 62)) {
                        var Temporary111 = pHEX60gensym26_1207960294;
                        if (ConstSet233[Temporary111.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary111.kind, NTI1207959557)); }
                      if ((iHEX60gensym26_1207961810 <= subInt((Temporary111.term).length, 5))) {
                      var Temporary112 = pHEX60gensym26_1207960294;
                      if (ConstSet234[Temporary112.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary112.kind, NTI1207959557)); }
                      var Temporary114 = pHEX60gensym26_1207960294;
                      if (ConstSet235[Temporary114.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary114.kind, NTI1207959557)); }
                      var Temporary116 = pHEX60gensym26_1207960294;
                      if (ConstSet236[Temporary116.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary116.kind, NTI1207959557)); }
                      var Temporary118 = pHEX60gensym26_1207960294;
                      if (ConstSet237[Temporary118.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary118.kind, NTI1207959557)); }
                      var Temporary120 = pHEX60gensym26_1207960294;
                      if (ConstSet238[Temporary120.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary120.kind, NTI1207959557)); }
                      aHEX60gensym26_1207961811 = chckRange((((((((Temporary113 = Temporary112.term, Temporary113)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary113).length - 1)] & 3) << 24) | (((Temporary115 = Temporary114.term, Temporary115)[chckIndx(addInt(iHEX60gensym26_1207961810, 1), 0, (Temporary115).length - 1)] & 63) << 18)) | (((Temporary117 = Temporary116.term, Temporary117)[chckIndx(addInt(iHEX60gensym26_1207961810, 2), 0, (Temporary117).length - 1)] & 63) << 12)) | (((Temporary119 = Temporary118.term, Temporary119)[chckIndx(addInt(iHEX60gensym26_1207961810, 3), 0, (Temporary119).length - 1)] & 63) << 6)) | ((Temporary121 = Temporary120.term, Temporary121)[chckIndx(addInt(iHEX60gensym26_1207961810, 4), 0, (Temporary121).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 5);
                      }
                      else {
                        aHEX60gensym26_1207961811 = 65533;
                        iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      
                      }
                      else {
                        var Temporary122 = pHEX60gensym26_1207960294;
                        if (ConstSet239[Temporary122.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary122.kind, NTI1207959557)); }
                      if ((((Temporary123 = Temporary122.term, Temporary123)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary123).length - 1)] >>> 1) == 126)) {
                        var Temporary124 = pHEX60gensym26_1207960294;
                        if (ConstSet240[Temporary124.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary124.kind, NTI1207959557)); }
                      if ((iHEX60gensym26_1207961810 <= subInt((Temporary124.term).length, 6))) {
                      var Temporary125 = pHEX60gensym26_1207960294;
                      if (ConstSet241[Temporary125.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary125.kind, NTI1207959557)); }
                      var Temporary127 = pHEX60gensym26_1207960294;
                      if (ConstSet242[Temporary127.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary127.kind, NTI1207959557)); }
                      var Temporary129 = pHEX60gensym26_1207960294;
                      if (ConstSet243[Temporary129.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary129.kind, NTI1207959557)); }
                      var Temporary131 = pHEX60gensym26_1207960294;
                      if (ConstSet244[Temporary131.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary131.kind, NTI1207959557)); }
                      var Temporary133 = pHEX60gensym26_1207960294;
                      if (ConstSet245[Temporary133.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary133.kind, NTI1207959557)); }
                      var Temporary135 = pHEX60gensym26_1207960294;
                      if (ConstSet246[Temporary135.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary135.kind, NTI1207959557)); }
                      aHEX60gensym26_1207961811 = chckRange(((((((((Temporary126 = Temporary125.term, Temporary126)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary126).length - 1)] & 1) << 30) | (((Temporary128 = Temporary127.term, Temporary128)[chckIndx(addInt(iHEX60gensym26_1207961810, 1), 0, (Temporary128).length - 1)] & 63) << 24)) | (((Temporary130 = Temporary129.term, Temporary130)[chckIndx(addInt(iHEX60gensym26_1207961810, 2), 0, (Temporary130).length - 1)] & 63) << 18)) | (((Temporary132 = Temporary131.term, Temporary132)[chckIndx(addInt(iHEX60gensym26_1207961810, 3), 0, (Temporary132).length - 1)] & 63) << 12)) | (((Temporary134 = Temporary133.term, Temporary134)[chckIndx(addInt(iHEX60gensym26_1207961810, 4), 0, (Temporary134).length - 1)] & 63) << 6)) | ((Temporary136 = Temporary135.term, Temporary136)[chckIndx(addInt(iHEX60gensym26_1207961810, 5), 0, (Temporary136).length - 1)] & 63)), -2147483648, 2147483647);
                      iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 6);
                      }
                      else {
                        aHEX60gensym26_1207961811 = 65533;
                        iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      
                      }
                      else {
                        var Temporary137 = pHEX60gensym26_1207960294;
                        if (ConstSet247[Temporary137.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary137.kind, NTI1207959557)); }
                        aHEX60gensym26_1207961811 = chckRange((Temporary138 = Temporary137.term, Temporary138)[chckIndx(iHEX60gensym26_1207961810, 0, (Temporary138).length - 1)], -2147483648, 2147483647);
                        iHEX60gensym26_1207961810 = addInt(iHEX60gensym26_1207961810, 1);
                      }
                      }}}}}
                      if (!(HEX3DHEX3D_939525015(aHEX60gensym26_1207961811, 95))) {
                      break Label75;
                      }
                      
                    }
                } while (false);
                Label139: do {
                    Label140: while (true) {
                    if (!(result_1207960297 < (sHEX60gensym26_1207960293).length)) break Label140;
                      if ((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] <= 127)) {
                      bHEX60gensym26_1207961812 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
                      result_1207960297 = addInt(result_1207960297, 1);
                      }
                      else {
                      if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 5) == 6)) {
                      if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 2))) {
                      bHEX60gensym26_1207961812 = chckRange((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 31) << 6) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1207960297 = addInt(result_1207960297, 2);
                      }
                      else {
                        bHEX60gensym26_1207961812 = 65533;
                        result_1207960297 = addInt(result_1207960297, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 4) == 14)) {
                      if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 3))) {
                      bHEX60gensym26_1207961812 = chckRange(((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 15) << 12) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1207960297 = addInt(result_1207960297, 3);
                      }
                      else {
                        bHEX60gensym26_1207961812 = 65533;
                        result_1207960297 = addInt(result_1207960297, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 3) == 30)) {
                      if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 4))) {
                      bHEX60gensym26_1207961812 = chckRange((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 7) << 18) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1207960297 = addInt(result_1207960297, 4);
                      }
                      else {
                        bHEX60gensym26_1207961812 = 65533;
                        result_1207960297 = addInt(result_1207960297, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 2) == 62)) {
                      if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 5))) {
                      bHEX60gensym26_1207961812 = chckRange(((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 3) << 24) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1207960297 = addInt(result_1207960297, 5);
                      }
                      else {
                        bHEX60gensym26_1207961812 = 65533;
                        result_1207960297 = addInt(result_1207960297, 1);
                      }
                      
                      }
                      else {
                      if (((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] >>> 1) == 126)) {
                      if ((result_1207960297 <= subInt((sHEX60gensym26_1207960293).length, 6))) {
                      bHEX60gensym26_1207961812 = chckRange((((((((sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)] & 1) << 30) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 1), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 24)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 2), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 18)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 3), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 12)) | ((sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 4), 0, (sHEX60gensym26_1207960293).length - 1)] & 63) << 6)) | (sHEX60gensym26_1207960293[chckIndx(addInt(result_1207960297, 5), 0, (sHEX60gensym26_1207960293).length - 1)] & 63)), -2147483648, 2147483647);
                      result_1207960297 = addInt(result_1207960297, 6);
                      }
                      else {
                        bHEX60gensym26_1207961812 = 65533;
                        result_1207960297 = addInt(result_1207960297, 1);
                      }
                      
                      }
                      else {
                        bHEX60gensym26_1207961812 = chckRange(sHEX60gensym26_1207960293[chckIndx(result_1207960297, 0, (sHEX60gensym26_1207960293).length - 1)], -2147483648, 2147483647);
                        result_1207960297 = addInt(result_1207960297, 1);
                      }
                      }}}}}
                      if (!(HEX3DHEX3D_939525015(bHEX60gensym26_1207961812, 95))) {
                      break Label139;
                      }
                      
                    }
                } while (false);
                if (((sHEX60gensym26_1207960293).length <= result_1207960297)) {
                  var Temporary141 = pHEX60gensym26_1207960294;
                  if (ConstSet248[Temporary141.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary141.kind, NTI1207959557)); }
                if (((Temporary141.term).length <= iHEX60gensym26_1207961810)) {
                break Label72;
                }
                else {
                  result_1207960297 = -1;
                  break Label72;
                }
                
                }
                else {
                if (!(HEX3DHEX3D_939525015(nuctoLower(aHEX60gensym26_1207961811), nuctoLower(bHEX60gensym26_1207961812)))) {
                result_1207960297 = -1;
                break Label72;
                }
                }
              }
          } while (false);
          result_1207960297 = subInt(result_1207960297, startHEX60gensym26_1207960295);
          break;
        case 12:
            if (!(startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) Temporary142 = false; else {              var Temporary143 = pHEX60gensym26_1207960294;
              if (ConstSet249[Temporary143.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary143.kind, NTI1207959557)); }
              Temporary142 = (Temporary143.ch == sHEX60gensym26_1207960293[chckIndx(startHEX60gensym26_1207960295, 0, (sHEX60gensym26_1207960293).length - 1)]);            }          if (Temporary142) {
          result_1207960297 = 1;
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 13:
            if (!(startHEX60gensym26_1207960295 < (sHEX60gensym26_1207960293).length)) Temporary144 = false; else {              var Temporary145 = pHEX60gensym26_1207960294;
              if (ConstSet250[Temporary145.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary145.kind, NTI1207959557)); }
              Temporary144 = (Temporary145.charChoice[sHEX60gensym26_1207960293[chckIndx(startHEX60gensym26_1207960295, 0, (sHEX60gensym26_1207960293).length - 1)]] != undefined);            }          if (Temporary144) {
          result_1207960297 = 1;
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 14:
          var oldMlHEX60gensym26_1207962237 = cHEX60gensym26_1207960296.ml;
          var Temporary146 = pHEX60gensym26_1207960294;
          if (ConstSet251[Temporary146.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nt\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary146.kind, NTI1207959557)); }
          result_1207960297 = matchIt_1207960292(sHEX60gensym26_1207960293, Temporary146.nt.rule, startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
          if ((result_1207960297 < 0)) {
          cHEX60gensym26_1207960296.ml = oldMlHEX60gensym26_1207962237;
          }
          
          break;
        case 15:
          var oldMlHEX60gensym26_1207962238 = cHEX60gensym26_1207960296.ml;
          result_1207960297 = 0;
          Label147: do {
            var iHEX60gensym26_1207962246 = 0;
            var colontmp__486541178 = 0;
            var Temporary148 = pHEX60gensym26_1207960294;
            if (ConstSet252[Temporary148.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary148.kind, NTI1207959557)); }
            colontmp__486541178 = (Temporary148.sons).length - 1;
            var res_486541179 = 0;
            Label149: do {
                Label150: while (true) {
                if (!(res_486541179 <= colontmp__486541178)) break Label150;
                  iHEX60gensym26_1207962246 = res_486541179;
                  var Temporary151 = pHEX60gensym26_1207960294;
                  if (ConstSet253[Temporary151.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary151.kind, NTI1207959557)); }
                  var xHEX60gensym26_1207962247 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary152 = Temporary151.sons, Temporary152)[chckIndx(iHEX60gensym26_1207962246, 0, (Temporary152).length - 1)], addInt(startHEX60gensym26_1207960295, result_1207960297), cHEX60gensym26_1207960296);
                  if ((xHEX60gensym26_1207962247 < 0)) {
                  cHEX60gensym26_1207960296.ml = oldMlHEX60gensym26_1207962238;
                  result_1207960297 = -1;
                  break Label147;
                  }
                  else {
                  result_1207960297 = addInt(result_1207960297, xHEX60gensym26_1207962247);
                  }
                  
                  res_486541179 = addInt(res_486541179, 1);
                }
            } while (false);
          } while (false);
          break;
        case 16:
          var oldMlHEX60gensym26_1207962252 = cHEX60gensym26_1207960296.ml;
          Label153: do {
            var iHEX60gensym26_1207962260 = 0;
            var colontmp__486541182 = 0;
            var Temporary154 = pHEX60gensym26_1207960294;
            if (ConstSet254[Temporary154.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary154.kind, NTI1207959557)); }
            colontmp__486541182 = (Temporary154.sons).length - 1;
            var res_486541183 = 0;
            Label155: do {
                Label156: while (true) {
                if (!(res_486541183 <= colontmp__486541182)) break Label156;
                  iHEX60gensym26_1207962260 = res_486541183;
                  var Temporary157 = pHEX60gensym26_1207960294;
                  if (ConstSet255[Temporary157.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary157.kind, NTI1207959557)); }
                  result_1207960297 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary158 = Temporary157.sons, Temporary158)[chckIndx(iHEX60gensym26_1207962260, 0, (Temporary158).length - 1)], startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
                  if ((0 <= result_1207960297)) {
                  break Label153;
                  }
                  
                  cHEX60gensym26_1207960296.ml = oldMlHEX60gensym26_1207962252;
                  res_486541183 = addInt(res_486541183, 1);
                }
            } while (false);
          } while (false);
          break;
        case 28:
          var oldMlHEX60gensym26_1207962261 = cHEX60gensym26_1207960296.ml;
          result_1207960297 = 0;
          Label159: do {
              Label160: while (true) {
              if (!(addInt(startHEX60gensym26_1207960295, result_1207960297) <= (sHEX60gensym26_1207960293).length)) break Label160;
                var Temporary161 = pHEX60gensym26_1207960294;
                if (ConstSet256[Temporary161.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary161.kind, NTI1207959557)); }
                var xHEX60gensym26_1207962262 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary162 = Temporary161.sons, Temporary162)[chckIndx(0, 0, (Temporary162).length - 1)], addInt(startHEX60gensym26_1207960295, result_1207960297), cHEX60gensym26_1207960296);
                if ((0 <= xHEX60gensym26_1207962262)) {
                result_1207960297 = addInt(result_1207960297, xHEX60gensym26_1207962262);
                break BeforeRet;
                }
                
                result_1207960297 = addInt(result_1207960297, 1);
              }
          } while (false);
          result_1207960297 = -1;
          cHEX60gensym26_1207960296.ml = oldMlHEX60gensym26_1207962261;
          break;
        case 29:
          var idxHEX60gensym26_1207962271 = cHEX60gensym26_1207960296.ml;
          cHEX60gensym26_1207960296.ml = addInt(cHEX60gensym26_1207960296.ml, 1);
          result_1207960297 = 0;
          Label163: do {
              Label164: while (true) {
              if (!(addInt(startHEX60gensym26_1207960295, result_1207960297) <= (sHEX60gensym26_1207960293).length)) break Label164;
                var Temporary165 = pHEX60gensym26_1207960294;
                if (ConstSet257[Temporary165.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary165.kind, NTI1207959557)); }
                var xHEX60gensym26_1207962276 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary166 = Temporary165.sons, Temporary166)[chckIndx(0, 0, (Temporary166).length - 1)], addInt(startHEX60gensym26_1207960295, result_1207960297), cHEX60gensym26_1207960296);
                if ((0 <= xHEX60gensym26_1207962276)) {
                if ((idxHEX60gensym26_1207962271 < 20)) {
                var colontmp__486541187 = startHEX60gensym26_1207960295;
                var colontmp__486541188 = subInt(addInt(startHEX60gensym26_1207960295, result_1207960297), 1);
                cHEX60gensym26_1207960296.matches[chckIndx(idxHEX60gensym26_1207962271, 0, (cHEX60gensym26_1207960296.matches).length - 1)] = nimCopy(cHEX60gensym26_1207960296.matches[chckIndx(idxHEX60gensym26_1207962271, 0, (cHEX60gensym26_1207960296.matches).length - 1)], {Field0: colontmp__486541187, Field1: colontmp__486541188}, NTI1207960085);
                }
                
                result_1207960297 = addInt(result_1207960297, xHEX60gensym26_1207962276);
                break BeforeRet;
                }
                
                result_1207960297 = addInt(result_1207960297, 1);
              }
          } while (false);
          result_1207960297 = -1;
          cHEX60gensym26_1207960296.ml = idxHEX60gensym26_1207962271;
          break;
        case 17:
          result_1207960297 = 0;
          Label167: do {
              Label168: while (true) {
              if (!true) break Label168;
                var Temporary169 = pHEX60gensym26_1207960294;
                if (ConstSet258[Temporary169.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary169.kind, NTI1207959557)); }
                var xHEX60gensym26_1207962285 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary170 = Temporary169.sons, Temporary170)[chckIndx(0, 0, (Temporary170).length - 1)], addInt(startHEX60gensym26_1207960295, result_1207960297), cHEX60gensym26_1207960296);
                if ((xHEX60gensym26_1207962285 <= 0)) {
                break Label167;
                }
                
                result_1207960297 = addInt(result_1207960297, xHEX60gensym26_1207962285);
              }
          } while (false);
          break;
        case 18:
          result_1207960297 = 0;
          var Temporary171 = pHEX60gensym26_1207960294;
          if (ConstSet259[Temporary171.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary171.kind, NTI1207959557)); }
          var chHEX60gensym26_1207962290 = Temporary171.ch;
          Label172: do {
              Label173: while (true) {
              if (!((addInt(startHEX60gensym26_1207960295, result_1207960297) < (sHEX60gensym26_1207960293).length) && (chHEX60gensym26_1207962290 == sHEX60gensym26_1207960293[chckIndx(addInt(startHEX60gensym26_1207960295, result_1207960297), 0, (sHEX60gensym26_1207960293).length - 1)]))) break Label173;
                result_1207960297 = addInt(result_1207960297, 1);
              }
          } while (false);
          break;
        case 19:
          result_1207960297 = 0;
          Label174: do {
              Label175: while (true) {
                if (!(addInt(startHEX60gensym26_1207960295, result_1207960297) < (sHEX60gensym26_1207960293).length)) Temporary176 = false; else {                  var Temporary177 = pHEX60gensym26_1207960294;
                  if (ConstSet260[Temporary177.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary177.kind, NTI1207959557)); }
                  Temporary176 = (Temporary177.charChoice[sHEX60gensym26_1207960293[chckIndx(addInt(startHEX60gensym26_1207960295, result_1207960297), 0, (sHEX60gensym26_1207960293).length - 1)]] != undefined);                }              if (!Temporary176) break Label175;
                result_1207960297 = addInt(result_1207960297, 1);
              }
          } while (false);
          break;
        case 21:
          var Temporary178 = pHEX60gensym26_1207960294;
          if (ConstSet261[Temporary178.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary178.kind, NTI1207959557)); }
          result_1207960297 = nimMax(0, matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary179 = Temporary178.sons, Temporary179)[chckIndx(0, 0, (Temporary179).length - 1)], startHEX60gensym26_1207960295, cHEX60gensym26_1207960296));
          break;
        case 22:
          var oldMlHEX60gensym26_1207962303 = cHEX60gensym26_1207960296.ml;
          var Temporary180 = pHEX60gensym26_1207960294;
          if (ConstSet262[Temporary180.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary180.kind, NTI1207959557)); }
          result_1207960297 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary181 = Temporary180.sons, Temporary181)[chckIndx(0, 0, (Temporary181).length - 1)], startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
          if ((0 <= result_1207960297)) {
          result_1207960297 = 0;
          }
          else {
            cHEX60gensym26_1207960296.ml = oldMlHEX60gensym26_1207962303;
          }
          
          break;
        case 23:
          var oldMlHEX60gensym26_1207962304 = cHEX60gensym26_1207960296.ml;
          var Temporary182 = pHEX60gensym26_1207960294;
          if (ConstSet263[Temporary182.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary182.kind, NTI1207959557)); }
          result_1207960297 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary183 = Temporary182.sons, Temporary183)[chckIndx(0, 0, (Temporary183).length - 1)], startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
          if ((result_1207960297 < 0)) {
          result_1207960297 = 0;
          }
          else {
            cHEX60gensym26_1207960296.ml = oldMlHEX60gensym26_1207962304;
            result_1207960297 = -1;
          }
          
          break;
        case 24:
            var Temporary185 = pHEX60gensym26_1207960294;
            if (ConstSet264[Temporary185.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary185.kind, NTI1207959557)); }
            if (((Temporary185.sons).length == 0)) Temporary184 = true; else {              var Temporary186 = pHEX60gensym26_1207960294;
              if (ConstSet265[Temporary186.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary186.kind, NTI1207959557)); }
              Temporary184 = ((Temporary187 = Temporary186.sons, Temporary187)[chckIndx(0, 0, (Temporary187).length - 1)].kind == 0);            }          if (Temporary184) {
          cHEX60gensym26_1207960296.ml = subInt(cHEX60gensym26_1207960296.ml, 1);
          var colontmp__486541192 = 0;
          var colontmp__486541193 = 0;
          cHEX60gensym26_1207960296.matches[chckIndx(cHEX60gensym26_1207960296.ml, 0, (cHEX60gensym26_1207960296.matches).length - 1)] = nimCopy(cHEX60gensym26_1207960296.matches[chckIndx(cHEX60gensym26_1207960296.ml, 0, (cHEX60gensym26_1207960296.matches).length - 1)], {Field0: colontmp__486541192, Field1: colontmp__486541193}, NTI1207960085);
          result_1207960297 = 0;
          }
          else {
            var idxHEX60gensym26_1207962316 = cHEX60gensym26_1207960296.ml;
            var Temporary188 = pHEX60gensym26_1207960294;
            if (ConstSet266[Temporary188.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary188.kind, NTI1207959557)); }
            result_1207960297 = matchIt_1207960292(sHEX60gensym26_1207960293, (Temporary189 = Temporary188.sons, Temporary189)[chckIndx(0, 0, (Temporary189).length - 1)], startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
            if ((0 <= result_1207960297)) {
            cHEX60gensym26_1207960296.ml = addInt(cHEX60gensym26_1207960296.ml, 1);
            if ((idxHEX60gensym26_1207962316 < 20)) {
            var colontmp__486541194 = startHEX60gensym26_1207960295;
            var colontmp__486541195 = subInt(addInt(startHEX60gensym26_1207960295, result_1207960297), 1);
            cHEX60gensym26_1207960296.matches[chckIndx(idxHEX60gensym26_1207962316, 0, (cHEX60gensym26_1207960296.matches).length - 1)] = nimCopy(cHEX60gensym26_1207960296.matches[chckIndx(idxHEX60gensym26_1207962316, 0, (cHEX60gensym26_1207960296.matches).length - 1)], {Field0: colontmp__486541194, Field1: colontmp__486541195}, NTI1207960085);
            }
            
            }
            
          }
          
          break;
        case 25:
          result_1207960297 = matchBackRef_1207960298(sHEX60gensym26_1207960293, pHEX60gensym26_1207960294, startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
          break;
        case 26:
          result_1207960297 = matchBackRef_1207960298(sHEX60gensym26_1207960293, pHEX60gensym26_1207960294, startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
          break;
        case 27:
          result_1207960297 = matchBackRef_1207960298(sHEX60gensym26_1207960293, pHEX60gensym26_1207960294, startHEX60gensym26_1207960295, cHEX60gensym26_1207960296);
          break;
        case 32:
          if ((cHEX60gensym26_1207960296.origStart == startHEX60gensym26_1207960295)) {
          result_1207960297 = 0;
          }
          else {
            result_1207960297 = -1;
          }
          
          break;
        case 30:
        case 31:
          if (true) {
          failedAssertImpl_218103864(makeNimstrLit("pegs.nim(861, 31) `false` "));
          }
          
          break;
        }
      } while (false);

      return result_1207960297;

    }

  var result_1207960241 = 0;

    result_1207960241 = matchIt_1207960292(s_1207960237, p_1207960238, start_1207960239, c_1207960240);

  return result_1207960241;

}

function substr_33557934(s_33557935, first_33557936) {
  var result_33557937 = [];

    result_33557937 = nimCopy(null, substr_33557922(s_33557935, first_33557936, (s_33557935).length - 1), NTI33554439);

  return result_33557937;

}

function npegsreplacef(s_1207962563, sub_1207962564, by_1207962565) {
  var result_1207962566 = [[]];

    result_1207962566[0] = nimCopy(null, [], NTI33554439);
    var i_1207962567 = 0;
    var caps_1207962568 = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];
    var c_1207962569 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    Label1: do {
        Label2: while (true) {
        if (!(i_1207962567 < (s_1207962563).length)) break Label2;
          c_1207962569[0].ml = 0;
          var x_1207962570 = npegsrawMatch(s_1207962563, sub_1207962564, i_1207962567, c_1207962569[0]);
          if ((x_1207962570 <= 0)) {
          addChar(result_1207962566[0], s_1207962563[chckIndx(i_1207962567, 0, (s_1207962563).length - 1)]);;
          i_1207962567 = addInt(i_1207962567, 1);
          }
          else {
            Label3: do {
              var kHEX60gensym579_1207962582 = 0;
              var colontmp__486541166 = 0;
              colontmp__486541166 = subInt(c_1207962569[0].ml, 1);
              var res_486541167 = 0;
              Label4: do {
                  Label5: while (true) {
                  if (!(res_486541167 <= colontmp__486541166)) break Label5;
                    kHEX60gensym579_1207962582 = res_486541167;
                    var startIdxHEX60gensym579_1207962583 = c_1207962569[0].matches[chckIndx(kHEX60gensym579_1207962582, 0, (c_1207962569[0].matches).length - 1)]["Field0"];
                    var endIdxHEX60gensym579_1207962584 = c_1207962569[0].matches[chckIndx(kHEX60gensym579_1207962582, 0, (c_1207962569[0].matches).length - 1)]["Field1"];
                    if (!((startIdxHEX60gensym579_1207962583 == -1))) {
                    caps_1207962568[chckIndx(kHEX60gensym579_1207962582, 0, (caps_1207962568).length - 1)] = nimCopy(null, substr_33557922(s_1207962563, startIdxHEX60gensym579_1207962583, endIdxHEX60gensym579_1207962584), NTI33554439);
                    }
                    else {
                      caps_1207962568[chckIndx(kHEX60gensym579_1207962582, 0, (caps_1207962568).length - 1)] = nimCopy(null, [], NTI33554439);
                    }
                    
                    res_486541167 = addInt(res_486541167, 1);
                  }
              } while (false);
            } while (false);
            nsuAddf(result_1207962566, 0, by_1207962565, caps_1207962568);
            i_1207962567 = addInt(i_1207962567, x_1207962570);
          }
          
        }
    } while (false);
    result_1207962566[0].push.apply(result_1207962566[0], substr_33557934(s_1207962563, i_1207962567));;

  return result_1207962566[0];

}

function init_1207962806(L_1207962807, input_1207962808, filename_1207962809, line_1207962810, col_1207962811) {
    L_1207962807.buf = nimCopy(null, input_1207962808, NTI33554439);
    L_1207962807.bufpos = 0;
    L_1207962807.lineNumber = line_1207962810;
    L_1207962807.colOffset = col_1207962811;
    L_1207962807.lineStart = 0;
    L_1207962807.filename = nimCopy(null, filename_1207962809, NTI33554439);

  
}

function handleCR_1207962776(L_1207962777, pos_1207962778) {
      var Temporary1;

  var result_1207962779 = 0;

    if (!((L_1207962777.buf[chckIndx(pos_1207962778, 0, (L_1207962777.buf).length - 1)] == 13))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(1453, 9) `L.buf[pos] == \'\\r\'` "));
    }
    
    L_1207962777.lineNumber = addInt(L_1207962777.lineNumber, 1);
    result_1207962779 = addInt(pos_1207962778, 1);
      if (!(result_1207962779 < (L_1207962777.buf).length)) Temporary1 = false; else {        Temporary1 = (L_1207962777.buf[chckIndx(result_1207962779, 0, (L_1207962777.buf).length - 1)] == 10);      }    if (Temporary1) {
    result_1207962779 = addInt(result_1207962779, 1);
    }
    
    L_1207962777.lineStart = result_1207962779;

  return result_1207962779;

}

function handleLF_1207962793(L_1207962794, pos_1207962795) {
  var result_1207962796 = 0;

    if (!((L_1207962794.buf[chckIndx(pos_1207962795, 0, (L_1207962794.buf).length - 1)] == 10))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(1460, 9) `L.buf[pos] == \'\\n\'` "));
    }
    
    L_1207962794.lineNumber = addInt(L_1207962794.lineNumber, 1);
    result_1207962796 = addInt(pos_1207962795, 1);
    L_1207962794.lineStart = result_1207962796;

  return result_1207962796;

}

function skip_1207962934(c_1207962935) {
                  var Temporary5;

    var pos_1207962936 = c_1207962935.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!(pos_1207962936 < (c_1207962935.buf).length)) break Label2;
          switch (c_1207962935.buf[chckIndx(pos_1207962936, 0, (c_1207962935.buf).length - 1)]) {
          case 32:
          case 9:
            pos_1207962936 = addInt(pos_1207962936, 1);
            break;
          case 35:
            Label3: do {
                Label4: while (true) {
                  if (!(pos_1207962936 < (c_1207962935.buf).length)) Temporary5 = false; else {                    Temporary5 = !((ConstSet269[c_1207962935.buf[chckIndx(pos_1207962936, 0, (c_1207962935.buf).length - 1)]] != undefined));                  }                if (!Temporary5) break Label4;
                  pos_1207962936 = addInt(pos_1207962936, 1);
                }
            } while (false);
            break;
          case 13:
            pos_1207962936 = handleCR_1207962776(c_1207962935, pos_1207962936);
            break;
          case 10:
            pos_1207962936 = handleLF_1207962793(c_1207962935, pos_1207962936);
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);
    c_1207962935.bufpos = pos_1207962936;

  
}

function handleHexChar_1224736769(c_1224736770, x_1224736771, x_1224736771_Idx) {
  var result_1224736772 = false;

    result_1224736772 = true;
    switch (c_1224736770) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1224736771[x_1224736771_Idx] = ((x_1224736771[x_1224736771_Idx] << 4) | subInt(c_1224736770, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1224736771[x_1224736771_Idx] = ((x_1224736771[x_1224736771_Idx] << 4) | addInt(subInt(c_1224736770, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1224736771[x_1224736771_Idx] = ((x_1224736771[x_1224736771_Idx] << 4) | addInt(subInt(c_1224736770, 65), 10));
      break;
    default: 
      result_1224736772 = false;
      break;
    }

  return result_1224736772;

}

function getEscapedChar_1207962835(c_1207962836, tok_1207962837) {
            var Temporary3;
            var Temporary4;
        var Temporary5;

  BeforeRet: do {
    c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
    if (((c_1207962836.buf).length <= c_1207962836.bufpos)) {
    tok_1207962837.kind = 0;
    break BeforeRet;
    }
    
    switch (c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)]) {
    case 114:
    case 82:
    case 99:
    case 67:
      addChar(tok_1207962837.literal, 13);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 108:
    case 76:
      addChar(tok_1207962837.literal, 10);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 102:
    case 70:
      addChar(tok_1207962837.literal, 12);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 101:
    case 69:
      addChar(tok_1207962837.literal, 27);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 97:
    case 65:
      addChar(tok_1207962837.literal, 7);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 98:
    case 66:
      addChar(tok_1207962837.literal, 8);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 118:
    case 86:
      addChar(tok_1207962837.literal, 11);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 116:
    case 84:
      addChar(tok_1207962837.literal, 9);;
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      break;
    case 120:
    case 88:
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      if (((c_1207962836.buf).length <= c_1207962836.bufpos)) {
      tok_1207962837.kind = 0;
      break BeforeRet;
      }
      
      var xi_1207962878 = [0];
      if (handleHexChar_1224736769(c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)], xi_1207962878, 0)) {
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      if (handleHexChar_1224736769(c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)], xi_1207962878, 0)) {
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      }
      
      }
      
      if ((xi_1207962878[0] == 0)) {
      tok_1207962837.kind = 0;
      }
      else {
      addChar(tok_1207962837.literal, chckRange(xi_1207962878[0], 0, 255));;
      }
      
      break;
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      var val_1207962893 = subInt(c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)], 48);
      c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      var i_1207962898 = 1;
      Label1: do {
          Label2: while (true) {
            if (!(c_1207962836.bufpos < (c_1207962836.buf).length)) Temporary4 = false; else {              Temporary4 = (i_1207962898 <= 3);            }            if (!Temporary4) Temporary3 = false; else {              Temporary3 = (ConstSet271[c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)]] != undefined);            }          if (!Temporary3) break Label2;
            val_1207962893 = subInt(addInt(mulInt(val_1207962893, 10), c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)]), 48);
            c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
            i_1207962898 = addInt(i_1207962898, 1);
          }
      } while (false);
        if (!(0 < val_1207962893)) Temporary5 = false; else {          Temporary5 = (val_1207962893 <= 255);        }      if (Temporary5) {
      addChar(tok_1207962837.literal, chckRange(val_1207962893, 0, 255));;
      }
      else {
        tok_1207962837.kind = 0;
      }
      
      break;
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      tok_1207962837.kind = 0;
      break;
    default: 
      if ((ConstSet272[c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)]] != undefined)) {
      tok_1207962837.kind = 0;
      }
      else {
        addChar(tok_1207962837.literal, c_1207962836.buf[chckIndx(c_1207962836.bufpos, 0, (c_1207962836.buf).length - 1)]);;
        c_1207962836.bufpos = addInt(c_1207962836.bufpos, 1);
      }
      
      break;
    }
  } while (false);

  
}

function getCharSet_1207962993(c_1207962994, tok_1207962995) {
            var Temporary3;

    tok_1207962995.kind = 6;
    tok_1207962995.charset = nimCopy(tok_1207962995.charset, ConstSet270, NTI1207964933);
    var pos_1207962996 = addInt(c_1207962994.bufpos, 1);
    var caret_1207962997 = false;
    if ((pos_1207962996 < (c_1207962994.buf).length)) {
    if ((c_1207962994.buf[chckIndx(pos_1207962996, 0, (c_1207962994.buf).length - 1)] == 94)) {
    pos_1207962996 = addInt(pos_1207962996, 1);
    caret_1207962997 = true;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!(pos_1207962996 < (c_1207962994.buf).length)) break Label2;
          var ch_1207963002 = 0;
          switch (c_1207962994.buf[chckIndx(pos_1207962996, 0, (c_1207962994.buf).length - 1)]) {
          case 93:
            if ((pos_1207962996 < (c_1207962994.buf).length)) {
            pos_1207962996 = addInt(pos_1207962996, 1);
            }
            
            break Label1;
            break;
          case 92:
            c_1207962994.bufpos = pos_1207962996;
            getEscapedChar_1207962835(c_1207962994, tok_1207962995);
            pos_1207962996 = c_1207962994.bufpos;
            ch_1207963002 = tok_1207962995.literal[chckIndx(subInt((tok_1207962995.literal).length, 1), 0, (tok_1207962995.literal).length - 1)];
            break;
          case 13:
          case 10:
          case 0:
            tok_1207962995.kind = 0;
            break Label1;
            break;
          default: 
            ch_1207963002 = c_1207962994.buf[chckIndx(pos_1207962996, 0, (c_1207962994.buf).length - 1)];
            pos_1207962996 = addInt(pos_1207962996, 1);
            break;
          }
          tok_1207962995.charset[ch_1207963002] = true;
          if ((c_1207962994.buf[chckIndx(pos_1207962996, 0, (c_1207962994.buf).length - 1)] == 45)) {
            if (!(addInt(pos_1207962996, 1) < (c_1207962994.buf).length)) Temporary3 = false; else {              Temporary3 = (c_1207962994.buf[chckIndx(addInt(pos_1207962996, 1), 0, (c_1207962994.buf).length - 1)] == 93);            }          if (Temporary3) {
          tok_1207962995.charset[45] = true;
          pos_1207962996 = addInt(pos_1207962996, 1);
          }
          else {
            if ((addInt(pos_1207962996, 1) < (c_1207962994.buf).length)) {
            pos_1207962996 = addInt(pos_1207962996, 1);
            }
            else {
              break Label1;
            }
            
            var ch2_1207963027 = 0;
            switch (c_1207962994.buf[chckIndx(pos_1207962996, 0, (c_1207962994.buf).length - 1)]) {
            case 92:
              c_1207962994.bufpos = pos_1207962996;
              getEscapedChar_1207962835(c_1207962994, tok_1207962995);
              pos_1207962996 = c_1207962994.bufpos;
              ch2_1207963027 = tok_1207962995.literal[chckIndx(subInt((tok_1207962995.literal).length, 1), 0, (tok_1207962995.literal).length - 1)];
              break;
            case 13:
            case 10:
            case 0:
              tok_1207962995.kind = 0;
              break Label1;
              break;
            default: 
              if ((addInt(pos_1207962996, 1) < (c_1207962994.buf).length)) {
              ch2_1207963027 = c_1207962994.buf[chckIndx(pos_1207962996, 0, (c_1207962994.buf).length - 1)];
              pos_1207962996 = addInt(pos_1207962996, 1);
              }
              else {
                break Label1;
              }
              
              break;
            }
            Label4: do {
              var i_1207963042 = 0;
              var colontmp__486541202 = 0;
              var colontmp__486541203 = 0;
              colontmp__486541202 = addInt(ch_1207963002, 1);
              colontmp__486541203 = ch2_1207963027;
              var res_486541204 = colontmp__486541202;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_486541204 <= colontmp__486541203)) break Label6;
                    i_1207963042 = res_486541204;
                    tok_1207962995.charset[chckRange(i_1207963042, 0, 255)] = true;
                    res_486541204 = addInt(res_486541204, 1);
                  }
              } while (false);
            } while (false);
          }
          
          }
          
        }
    } while (false);
    }
    
    c_1207962994.bufpos = pos_1207962996;
    if (caret_1207962997) {
    tok_1207962995.charset = nimCopy(tok_1207962995.charset, SetMinus(ConstSet273, tok_1207962995.charset), NTI1207964933);
    }
    

  
}

function getSymbol_1207963051(c_1207963052, tok_1207963053) {
            var Temporary3;

    var pos_1207963054 = c_1207963052.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!(pos_1207963054 < (c_1207963052.buf).length)) break Label2;
          addChar(tok_1207963053.literal, c_1207963052.buf[chckIndx(pos_1207963054, 0, (c_1207963052.buf).length - 1)]);;
          pos_1207963054 = addInt(pos_1207963054, 1);
            if (!(pos_1207963054 < (c_1207963052.buf).length)) Temporary3 = false; else {              Temporary3 = !((ConstSet275[c_1207963052.buf[chckIndx(pos_1207963054, 0, (c_1207963052.buf).length - 1)]] != undefined));            }          if (Temporary3) {
          break Label1;
          }
          
        }
    } while (false);
    c_1207963052.bufpos = pos_1207963054;
    tok_1207963053.kind = 4;

  
}

function getBuiltin_1207963063(c_1207963064, tok_1207963065) {
      var Temporary1;

      if (!(addInt(c_1207963064.bufpos, 1) < (c_1207963064.buf).length)) Temporary1 = false; else {        Temporary1 = (ConstSet274[c_1207963064.buf[chckIndx(addInt(c_1207963064.bufpos, 1), 0, (c_1207963064.buf).length - 1)]] != undefined);      }    if (Temporary1) {
    c_1207963064.bufpos = addInt(c_1207963064.bufpos, 1);
    getSymbol_1207963051(c_1207963064, tok_1207963065);
    tok_1207963065.kind = 21;
    }
    else {
      tok_1207963065.kind = 22;
      getEscapedChar_1207962835(c_1207963064, tok_1207963065);
    }
    

  
}

function getString_1207962949(c_1207962950, tok_1207962951) {
    tok_1207962951.kind = 5;
    var pos_1207962952 = addInt(c_1207962950.bufpos, 1);
    var quote_1207962953 = c_1207962950.buf[chckIndx(subInt(pos_1207962952, 1), 0, (c_1207962950.buf).length - 1)];
    Label1: do {
        Label2: while (true) {
        if (!(pos_1207962952 < (c_1207962950.buf).length)) break Label2;
          switch (c_1207962950.buf[chckIndx(pos_1207962952, 0, (c_1207962950.buf).length - 1)]) {
          case 92:
            c_1207962950.bufpos = pos_1207962952;
            getEscapedChar_1207962835(c_1207962950, tok_1207962951);
            pos_1207962952 = c_1207962950.bufpos;
            break;
          case 13:
          case 10:
          case 0:
            tok_1207962951.kind = 0;
            break Label1;
            break;
          default: 
            if ((c_1207962950.buf[chckIndx(pos_1207962952, 0, (c_1207962950.buf).length - 1)] == quote_1207962953)) {
            pos_1207962952 = addInt(pos_1207962952, 1);
            break Label1;
            }
            else {
              addChar(tok_1207962951.literal, c_1207962950.buf[chckIndx(pos_1207962952, 0, (c_1207962950.buf).length - 1)]);;
              pos_1207962952 = addInt(pos_1207962952, 1);
            }
            
            break;
          }
        }
    } while (false);
    c_1207962950.bufpos = pos_1207962952;

  
}

function getDollar_1207962962(c_1207962963, tok_1207962964) {
      var Temporary1;
      var Temporary2;
          var Temporary5;

    var pos_1207962965 = addInt(c_1207962963.bufpos, 1);
    var neg_1207962966 = false;
      if (!(pos_1207962965 < (c_1207962963.buf).length)) Temporary1 = false; else {        Temporary1 = (c_1207962963.buf[chckIndx(pos_1207962965, 0, (c_1207962963.buf).length - 1)] == 94);      }    if (Temporary1) {
    neg_1207962966 = true;
    pos_1207962965 = addInt(pos_1207962965, 1);
    }
    
      if (!(pos_1207962965 < (c_1207962963.buf).length)) Temporary2 = false; else {        Temporary2 = (ConstSet276[c_1207962963.buf[chckIndx(pos_1207962965, 0, (c_1207962963.buf).length - 1)]] != undefined);      }    if (Temporary2) {
    tok_1207962964.kind = 23;
    tok_1207962964.index = 0;
    Label3: do {
        Label4: while (true) {
          if (!(pos_1207962965 < (c_1207962963.buf).length)) Temporary5 = false; else {            Temporary5 = (ConstSet277[c_1207962963.buf[chckIndx(pos_1207962965, 0, (c_1207962963.buf).length - 1)]] != undefined);          }        if (!Temporary5) break Label4;
          tok_1207962964.index = subInt(addInt(mulInt(tok_1207962964.index, 10), c_1207962963.buf[chckIndx(pos_1207962965, 0, (c_1207962963.buf).length - 1)]), 48);
          pos_1207962965 = addInt(pos_1207962965, 1);
        }
    } while (false);
    if (neg_1207962966) {
    tok_1207962964.index = negInt(tok_1207962964.index);
    }
    
    }
    else {
      if (neg_1207962966) {
      pos_1207962965 = subInt(pos_1207962965, 1);
      }
      
      tok_1207962964.kind = 24;
    }
    
    c_1207962963.bufpos = pos_1207962965;

  
}

function getTok_1207963074(c_1207963075, tok_1207963076) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
        var Temporary7;

  BeforeRet: do {
    tok_1207963076.kind = 0;
    tok_1207963076.modifier = 0;
    (tok_1207963076.literal.length = 0);
    skip_1207962934(c_1207963075);
    if (((c_1207963075.buf).length <= c_1207963075.bufpos)) {
    tok_1207963076.kind = 1;
    tok_1207963076.literal = nimCopy(null, makeNimstrLit("[EOF]"), NTI33554439);
    addChar(tok_1207963076.literal, 0);;
    c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
    break BeforeRet;
    }
    
    switch (c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)]) {
    case 123:
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
        if (!(c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)] == 64)) Temporary2 = false; else {          Temporary2 = (addInt(c_1207963075.bufpos, 2) < (c_1207963075.buf).length);        }        if (!Temporary2) Temporary1 = false; else {          Temporary1 = (c_1207963075.buf[chckIndx(addInt(c_1207963075.bufpos, 1), 0, (c_1207963075.buf).length - 1)] == 125);        }      if (Temporary1) {
      tok_1207963076.kind = 11;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 2);
      tok_1207963076.literal.push.apply(tok_1207963076.literal, makeNimstrLit("{@}"));;
      }
      else {
        if (!(c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)] == 125)) Temporary3 = false; else {          Temporary3 = (c_1207963075.bufpos < (c_1207963075.buf).length);        }      if (Temporary3) {
      tok_1207963076.kind = 12;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      tok_1207963076.literal.push.apply(tok_1207963076.literal, makeNimstrLit("{}"));;
      }
      else {
        tok_1207963076.kind = 9;
        addChar(tok_1207963076.literal, 123);;
      }
      }
      break;
    case 125:
      tok_1207963076.kind = 10;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 125);;
      break;
    case 91:
      getCharSet_1207962993(c_1207963075, tok_1207963076);
      break;
    case 40:
      tok_1207963076.kind = 7;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 40);;
      break;
    case 41:
      tok_1207963076.kind = 8;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 41);;
      break;
    case 46:
      tok_1207963076.kind = 2;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 46);;
      break;
    case 95:
      tok_1207963076.kind = 3;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 95);;
      break;
    case 92:
      getBuiltin_1207963063(c_1207963075, tok_1207963076);
      break;
    case 39:
    case 34:
      getString_1207962949(c_1207963075, tok_1207963076);
      break;
    case 36:
      getDollar_1207962962(c_1207963075, tok_1207963076);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      getSymbol_1207963051(c_1207963075, tok_1207963076);
      if (((c_1207963075.buf).length <= c_1207963075.bufpos)) {
      break BeforeRet;
      }
      
        if ((ConstSet278[c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)]] != undefined)) Temporary4 = true; else {          if (!(c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)] == 36)) Temporary6 = false; else {            Temporary6 = (addInt(c_1207963075.bufpos, 1) < (c_1207963075.buf).length);          }          if (!Temporary6) Temporary5 = false; else {            Temporary5 = (ConstSet279[c_1207963075.buf[chckIndx(addInt(c_1207963075.bufpos, 1), 0, (c_1207963075.buf).length - 1)]] != undefined);          }          Temporary4 = Temporary5;        }      if (Temporary4) {
      switch (toJSStr(tok_1207963076.literal)) {
      case "i":
        tok_1207963076.modifier = 2;
        break;
      case "y":
        tok_1207963076.modifier = 3;
        break;
      case "v":
        tok_1207963076.modifier = 1;
        break;
      default: 
        break;
      }
      (tok_1207963076.literal.length = 0);
      if ((c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)] == 36)) {
      getDollar_1207962962(c_1207963075, tok_1207963076);
      }
      else {
      getString_1207962949(c_1207963075, tok_1207963076);
      }
      
      if ((tok_1207963076.modifier == 0)) {
      tok_1207963076.kind = 0;
      }
      
      }
      
      break;
    case 43:
      tok_1207963076.kind = 16;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 43);;
      break;
    case 42:
      tok_1207963076.kind = 15;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 43);;
      break;
    case 60:
        if (!(addInt(c_1207963075.bufpos, 2) < (c_1207963075.buf).length)) Temporary7 = false; else {          Temporary7 = (c_1207963075.buf[chckIndx(addInt(c_1207963075.bufpos, 1), 0, (c_1207963075.buf).length - 1)] == 45);        }      if (Temporary7) {
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 2);
      tok_1207963076.kind = 13;
      tok_1207963076.literal.push.apply(tok_1207963076.literal, makeNimstrLit("<-"));;
      }
      else {
      addChar(tok_1207963076.literal, 60);;
      }
      
      break;
    case 47:
      tok_1207963076.kind = 14;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 47);;
      break;
    case 63:
      tok_1207963076.kind = 19;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 63);;
      break;
    case 33:
      tok_1207963076.kind = 18;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 33);;
      break;
    case 38:
      tok_1207963076.kind = 17;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 33);;
      break;
    case 64:
      tok_1207963076.kind = 20;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 64);;
      if ((c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)] == 64)) {
      tok_1207963076.kind = 11;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 64);;
      }
      
      break;
    case 94:
      tok_1207963076.kind = 25;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      addChar(tok_1207963076.literal, 94);;
      break;
    default: 
      if (((c_1207963075.buf).length <= c_1207963075.bufpos)) {
      tok_1207963076.kind = 1;
      tok_1207963076.literal = nimCopy(null, makeNimstrLit("[EOF]"), NTI33554439);
      }
      
      addChar(tok_1207963076.literal, c_1207963075.buf[chckIndx(c_1207963075.bufpos, 0, (c_1207963075.buf).length - 1)]);;
      c_1207963075.bufpos = addInt(c_1207963075.bufpos, 1);
      break;
    }
  } while (false);

  
}

function getLine_1207962815(L_1207962816) {
  var result_1207962817 = 0;

    result_1207962817 = L_1207962816.lineNumber;

  return result_1207962817;

}

function getColumn_1207962812(L_1207962813) {
  var result_1207962814 = 0;

    result_1207962814 = addInt(absInt(subInt(L_1207962813.bufpos, L_1207962813.lineStart)), L_1207962813.colOffset);

  return result_1207962814;

}

function errorStr_1207962818(L_1207962819, msg_1207962820, line_1207962821, col_1207962822) {
    var Temporary1;
    var Temporary2;

  var result_1207962823 = [];

    if ((line_1207962821 < 0)) {
    Temporary1 = getLine_1207962815(L_1207962819);
    }
    else {
    Temporary1 = line_1207962821;
    }
    
    var line_1207962824 = Temporary1;
    if ((col_1207962822 < 0)) {
    Temporary2 = getColumn_1207962812(L_1207962819);
    }
    else {
    Temporary2 = col_1207962822;
    }
    
    var col_1207962825 = Temporary2;
    result_1207962823 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1($2, $3) Error: $4"), [nimCopy(null, L_1207962819.filename, NTI33554439), HEX24_335544323(line_1207962824), HEX24_335544323(col_1207962825), nimCopy(null, msg_1207962820, NTI33554439)]), NTI33554439);

  return result_1207962823;

}

function pegError_1207963199(p_1207963200, msg_1207963201, line_1207963202, col_1207963203) {
    var e_1207963204 = null;
    e_1207963204 = ({m_type: NTI1207965176, parent: null, name: null, message: [], trace: [], up: null});
    e_1207963204.message = nimCopy(null, errorStr_1207962818(p_1207963200, msg_1207963201, line_1207963202, col_1207963203), NTI33554439);
    raiseException(e_1207963204, "EInvalidPeg");

  
}

function getTok_1207963247(p_1207963248) {
    getTok_1207963074(p_1207963248, p_1207963248.tok);
    if ((p_1207963248.tok.kind == 0)) {
    pegError_1207963199(p_1207963248, (makeNimstrLit("\'") || []).concat(p_1207963248.tok.literal || [],makeNimstrLit("\' is invalid token") || []), -1, -1);
    }
    

  
}

function npegsOptional(a_1207959903) {
  var result_1207959904 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if ((ConstSet280[a_1207959903.kind] != undefined)) {
    result_1207959904 = nimCopy(result_1207959904, a_1207959903, NTI1207959560);
    }
    else {
      result_1207959904 = nimCopy(result_1207959904, {kind: 21, sons: [nimCopy(null, a_1207959903, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);
    }
    

  return result_1207959904;

}

function npegsAndPredicate(a_1207959971) {
  var result_1207959972 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959972 = nimCopy(result_1207959972, {kind: 22, sons: [nimCopy(null, a_1207959971, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);

  return result_1207959972;

}

function npegsNotPredicate(a_1207959978) {
  var result_1207959979 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959979 = nimCopy(result_1207959979, {kind: 23, sons: [nimCopy(null, a_1207959978, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);

  return result_1207959979;

}

function npegsSearch(a_1207959936) {
  var result_1207959937 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959937 = nimCopy(result_1207959937, {kind: 28, sons: [nimCopy(null, a_1207959936, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);

  return result_1207959937;

}

function npgegsCapturedSearch(a_1207959943) {
  var result_1207959944 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959944 = nimCopy(result_1207959944, {kind: 29, sons: [nimCopy(null, a_1207959943, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);

  return result_1207959944;

}

function len_1207959808(a_1207959809) {
    var Temporary1;

  var result_1207959810 = 0;

  BeforeRet: do {
    var Temporary1 = a_1207959809;
    if (ConstSet282[Temporary1.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1207959557)); }
    result_1207959810 = (Temporary1.sons).length;
    break BeforeRet;
  } while (false);

  return result_1207959810;

}

function npegstermStr(t_1207959777) {
  var result_1207959778 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(((t_1207959777).length == 1))) {
    result_1207959778 = nimCopy(result_1207959778, {kind: 9, term: nimCopy(null, t_1207959777, NTI33554439), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
    }
    else {
      result_1207959778 = nimCopy(result_1207959778, {kind: 12, ch: t_1207959777[chckIndx(0, 0, (t_1207959777).length - 1)], term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
    }
    

  return result_1207959778;

}

function add_1207959814(d_1207959815, s_1207959816) {
    var Temporary1;

    var Temporary1 = d_1207959815;
    if (ConstSet292[Temporary1.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1207959557)); }
    var Temporary2 = nimCopy(null, s_1207959816, NTI1207959560);
    Temporary1.sons.push(Temporary2);;

  
}

function addSequence_1207959873(dest_1207959874, elem_1207959875) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;

    var L_1207959876 = subInt(len_1207959808(dest_1207959874), 1);
      if (!(0 <= L_1207959876)) Temporary1 = false; else {        var Temporary2 = dest_1207959874;
        if (ConstSet283[Temporary2.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1207959557)); }
        Temporary1 = ((Temporary3 = Temporary2.sons, Temporary3)[chckIndx(L_1207959876, 0, (Temporary3).length - 1)].kind == 9);      }    if (Temporary1) {
    switch (elem_1207959875.kind) {
    case 9:
      var Temporary4 = dest_1207959874;
      if (ConstSet284[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1207959557)); }
      var Temporary6 = dest_1207959874;
      if (ConstSet286[Temporary6.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1207959557)); }
      var Temporary8 = (Temporary7 = Temporary6.sons, Temporary7)[chckIndx(L_1207959876, 0, (Temporary7).length - 1)];
      if (ConstSet285[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1207959557)); }
      var Temporary9 = elem_1207959875;
      if (ConstSet287[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1207959557)); }
      (Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1207959876, 0, (Temporary5).length - 1)] = nimCopy((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1207959876, 0, (Temporary5).length - 1)], npegstermStr((Temporary8.term || []).concat(Temporary9.term || [])), NTI1207959560);
      break;
    case 12:
      var Temporary10 = dest_1207959874;
      if (ConstSet288[Temporary10.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1207959557)); }
      var Temporary12 = dest_1207959874;
      if (ConstSet290[Temporary12.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1207959557)); }
      var Temporary14 = (Temporary13 = Temporary12.sons, Temporary13)[chckIndx(L_1207959876, 0, (Temporary13).length - 1)];
      if (ConstSet289[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'term\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1207959557)); }
      var Temporary15 = elem_1207959875;
      if (ConstSet291[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1207959557)); }
      (Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1207959876, 0, (Temporary11).length - 1)] = nimCopy((Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1207959876, 0, (Temporary11).length - 1)], npegstermStr((Temporary14.term || []).concat([Temporary15.ch])), NTI1207959560);
      break;
    default: 
      add_1207959814(dest_1207959874, elem_1207959875);
      break;
    }
    }
    else {
    add_1207959814(dest_1207959874, elem_1207959875);
    }
    

  
}

function npegssequence(a_1207959882) {
              var Temporary5;
    var Temporary8;
    var Temporary9;

  var result_1207959883 = [({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})];

    result_1207959883[0] = nimCopy(result_1207959883[0], {kind: 15, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);
    Label1: do {
      var xHEX60gensym12_1207959893 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
      var i_486541225 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541225 < (a_1207959882).length)) break Label3;
            xHEX60gensym12_1207959893 = a_1207959882[chckIndx(i_486541225, 0, (a_1207959882).length - 1)];
            if ((xHEX60gensym12_1207959893.kind == 15)) {
            Label4: do {
              var yHEX60gensym12_1207959901 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              var colontmp__486541219 = [];
              var Temporary5 = xHEX60gensym12_1207959893;
              if (ConstSet281[Temporary5.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1207959557)); }
              colontmp__486541219 = Temporary5.sons;
              var i_486541221 = 0;
              var L_486541222 = (colontmp__486541219).length;
              Label6: do {
                  Label7: while (true) {
                  if (!(i_486541221 < L_486541222)) break Label7;
                    yHEX60gensym12_1207959901 = colontmp__486541219[chckIndx(i_486541221, 0, (colontmp__486541219).length - 1)];
                    addSequence_1207959873(result_1207959883[0], yHEX60gensym12_1207959901);
                    i_486541221 = addInt(i_486541221, 1);
                    if (!(((colontmp__486541219).length == L_486541222))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            }
            else {
            addSequence_1207959873(result_1207959883[0], xHEX60gensym12_1207959893);
            }
            
            i_486541225 = addInt(i_486541225, 1);
          }
      } while (false);
    } while (false);
    if ((len_1207959808(result_1207959883[0]) == 1)) {
    var Temporary8 = result_1207959883[0];
    if (ConstSet293[Temporary8.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1207959557)); }
    result_1207959883[0] = nimCopy(result_1207959883[0], (Temporary9 = Temporary8.sons, Temporary9)[chckIndx(0, 0, (Temporary9).length - 1)], NTI1207959560);
    }
    

  return result_1207959883[0];

}

function token_1207963335(terminal_1207963336, p_1207963337) {
  var result_1207963338 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if ((p_1207963337.skip.kind == 0)) {
    result_1207963338 = nimCopy(result_1207963338, terminal_1207963336, NTI1207959560);
    }
    else {
      result_1207963338 = nimCopy(result_1207963338, npegssequence([nimCopy(null, p_1207963337.skip, NTI1207959560), nimCopy(null, terminal_1207963336, NTI1207959560)]), NTI1207959560);
    }
    

  return result_1207963338;

}

function npegstermIgnoreCase(t_1207959780) {
  var result_1207959781 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959781 = nimCopy(result_1207959781, {kind: 10, term: nimCopy(null, t_1207959780, NTI33554439), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959781;

}

function npegstermIgnoreStyle(t_1207959783) {
  var result_1207959784 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959784 = nimCopy(result_1207959784, {kind: 11, term: nimCopy(null, t_1207959783, NTI33554439), ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959784;

}

function modifiedTerm_1207963306(s_1207963307, m_1207963308) {
  var result_1207963309 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (m_1207963308) {
    case 0:
    case 1:
      result_1207963309 = nimCopy(result_1207963309, npegstermStr(s_1207963307), NTI1207959560);
      break;
    case 2:
      result_1207963309 = nimCopy(result_1207963309, npegstermIgnoreCase(s_1207963307), NTI1207959560);
      break;
    case 3:
      result_1207963309 = nimCopy(result_1207963309, npegstermIgnoreStyle(s_1207963307), NTI1207959560);
      break;
    }

  return result_1207963309;

}

function arrowIsNextTok_1207963179(c_1207963180) {
  var result_1207963181 = false;

  BeforeRet: do {
    var pos_1207963182 = c_1207963180.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!((pos_1207963182 < (c_1207963180.buf).length) && (ConstSet294[c_1207963180.buf[chckIndx(pos_1207963182, 0, (c_1207963180.buf).length - 1)]] != undefined))) break Label2;
          pos_1207963182 = addInt(pos_1207963182, 1);
        }
    } while (false);
    if (((c_1207963180.buf).length <= addInt(pos_1207963182, 1))) {
    break BeforeRet;
    }
    
    result_1207963181 = ((c_1207963180.buf[chckIndx(pos_1207963182, 0, (c_1207963180.buf).length - 1)] == 60) && (c_1207963180.buf[chckIndx(addInt(pos_1207963182, 1), 0, (c_1207963180.buf).length - 1)] == 45));
  } while (false);

  return result_1207963181;

}

function npegsnewNonTerminal(name_1207960062, line_1207960063, column_1207960064) {
  var result_1207960065 = null;

    result_1207960065 = {name: nimCopy(null, name_1207960062, NTI33554439), line: line_1207960063, col: column_1207960064, flags: {}, rule: ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})};

  return result_1207960065;

}

function getNonTerminal_1207963272(p_1207963273, name_1207963274) {
  var result_1207963275 = null;

  BeforeRet: do {
    Label1: do {
      var i_1207963283 = 0;
      var colontmp__486541229 = 0;
      colontmp__486541229 = (p_1207963273.nonterms).length - 1;
      var res_486541230 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486541230 <= colontmp__486541229)) break Label3;
            i_1207963283 = res_486541230;
            result_1207963275 = p_1207963273.nonterms[chckIndx(i_1207963283, 0, (p_1207963273.nonterms).length - 1)];
            if ((nsuCmpIgnoreStyle(result_1207963275.name, name_1207963274) == 0)) {
            break BeforeRet;
            }
            
            res_486541230 = addInt(res_486541230, 1);
          }
      } while (false);
    } while (false);
    result_1207963275 = npegsnewNonTerminal(name_1207963274, getLine_1207962815(p_1207963273), getColumn_1207962812(p_1207963273));
    p_1207963273.nonterms.push(result_1207963275);;
  } while (false);

  return result_1207963275;

}

function spaceCost_1207960032(n_1207960033) {
              var Temporary4;
              var Temporary5;

  var result_1207960034 = 0;

    switch (n_1207960033.kind) {
    case 0:
      break;
    case 9:
    case 10:
    case 11:
    case 12:
    case 18:
    case 13:
    case 19:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 20:
    case 25:
    case 26:
    case 27:
      result_1207960034 = 1;
      break;
    case 14:
      result_1207960034 = 6;
      break;
    default: 
      Label1: do {
        var i_1207960039 = 0;
        var colontmp__486541233 = 0;
        colontmp__486541233 = subInt(len_1207959808(n_1207960033), 1);
        var res_486541234 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(res_486541234 <= colontmp__486541233)) break Label3;
              i_1207960039 = res_486541234;
              var Temporary4 = n_1207960033;
              if (ConstSet295[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1207959557)); }
              result_1207960034 = addInt(result_1207960034, spaceCost_1207960032((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(i_1207960039, 0, (Temporary5).length - 1)]));
              if ((5 <= result_1207960034)) {
              break Label1;
              }
              
              res_486541234 = addInt(res_486541234, 1);
            }
        } while (false);
      } while (false);
      break;
    }

  return result_1207960034;

}

function npegsnonterminal(n_1207960045) {
      var Temporary1;

  var result_1207960046 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((n_1207960045 == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(350, 10) `n != nil` "));
    }
    
      if (!(n_1207960045.flags[0] != undefined)) Temporary1 = false; else {        Temporary1 = (spaceCost_1207960032(n_1207960045.rule) < 5);      }    if (Temporary1) {
    result_1207960046 = nimCopy(result_1207960046, n_1207960045.rule, NTI1207959560);
    }
    else {
      result_1207960046 = nimCopy(result_1207960046, {kind: 14, nt: n_1207960045, term: [], ch: 0, charChoice: null, index: 0, sons: []}, NTI1207959560);
    }
    

  return result_1207960046;

}

function npegscharSet(s_1207959794) {
    var Temporary1;
    var Temporary2;

  var result_1207959795 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((s_1207959794[0] != undefined)))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(167, 10) `\'\\x00\' notin s` "));
    }
    
    result_1207959795 = nimCopy(result_1207959795, {kind: 13, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
    var Temporary1 = result_1207959795;
    if (ConstSet296[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1207959557)); }
    Temporary1.charChoice = {};
    var Temporary2 = result_1207959795;
    if (ConstSet297[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1207959557)); }
    Temporary2.charChoice = nimCopy(Temporary2.charChoice, s_1207959794, NTI1207959565);

  return result_1207959795;

}

function seqExpr_1207963374(p_1207963375) {
  var result_1207963376 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207963376 = nimCopy(result_1207963376, primary_1207963343(p_1207963375), NTI1207959560);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (p_1207963375.tok.kind) {
          case 17:
          case 18:
          case 20:
          case 5:
          case 6:
          case 7:
          case 9:
          case 2:
          case 3:
          case 21:
          case 22:
          case 24:
          case 23:
          case 25:
          case 11:
          case 12:
            result_1207963376 = nimCopy(result_1207963376, npegssequence([nimCopy(null, result_1207963376, NTI1207959560), primary_1207963343(p_1207963375)]), NTI1207959560);
            break;
          case 4:
            if (!(arrowIsNextTok_1207963179(p_1207963375))) {
            result_1207963376 = nimCopy(result_1207963376, npegssequence([nimCopy(null, result_1207963376, NTI1207959560), primary_1207963343(p_1207963375)]), NTI1207959560);
            }
            else {
              break Label1;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);

  return result_1207963376;

}

function addChoice_1207959821(dest_1207959822, elem_1207959823) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;

    var L_1207959824 = subInt(len_1207959808(dest_1207959822), 1);
      if (!(0 <= L_1207959824)) Temporary1 = false; else {        var Temporary2 = dest_1207959822;
        if (ConstSet299[Temporary2.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1207959557)); }
        Temporary1 = ((Temporary3 = Temporary2.sons, Temporary3)[chckIndx(L_1207959824, 0, (Temporary3).length - 1)].kind == 13);      }    if (Temporary1) {
    switch (elem_1207959823.kind) {
    case 13:
      var Temporary4 = dest_1207959822;
      if (ConstSet300[Temporary4.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1207959557)); }
      var Temporary6 = dest_1207959822;
      if (ConstSet302[Temporary6.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1207959557)); }
      var Temporary8 = (Temporary7 = Temporary6.sons, Temporary7)[chckIndx(L_1207959824, 0, (Temporary7).length - 1)];
      if (ConstSet301[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1207959557)); }
      var Temporary9 = elem_1207959823;
      if (ConstSet303[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1207959557)); }
      (Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1207959824, 0, (Temporary5).length - 1)] = nimCopy((Temporary5 = Temporary4.sons, Temporary5)[chckIndx(L_1207959824, 0, (Temporary5).length - 1)], npegscharSet(SetPlus(Temporary8.charChoice, Temporary9.charChoice)), NTI1207959560);
      break;
    case 12:
      var Temporary10 = dest_1207959822;
      if (ConstSet304[Temporary10.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1207959557)); }
      var Temporary12 = dest_1207959822;
      if (ConstSet306[Temporary12.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1207959557)); }
      var Temporary14 = (Temporary13 = Temporary12.sons, Temporary13)[chckIndx(L_1207959824, 0, (Temporary13).length - 1)];
      if (ConstSet305[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1207959557)); }
      var Temporary15 = elem_1207959823;
      if (ConstSet307[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1207959557)); }
      (Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1207959824, 0, (Temporary11).length - 1)] = nimCopy((Temporary11 = Temporary10.sons, Temporary11)[chckIndx(L_1207959824, 0, (Temporary11).length - 1)], npegscharSet(SetPlus(Temporary14.charChoice, setConstr(Temporary15.ch))), NTI1207959560);
      break;
    default: 
      add_1207959814(dest_1207959822, elem_1207959823);
      break;
    }
    }
    else {
    add_1207959814(dest_1207959822, elem_1207959823);
    }
    

  
}

function npegsOrderedChoice(a_1207959844) {
              var Temporary5;
    var Temporary8;
    var Temporary9;

  var result_1207959845 = [({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []})];

    result_1207959845[0] = nimCopy(result_1207959845[0], {kind: 16, sons: [], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);
    Label1: do {
      var xHEX60gensym10_1207959864 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
      var i_486541244 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541244 < (a_1207959844).length)) break Label3;
            xHEX60gensym10_1207959864 = a_1207959844[chckIndx(i_486541244, 0, (a_1207959844).length - 1)];
            if ((xHEX60gensym10_1207959864.kind == 16)) {
            Label4: do {
              var yHEX60gensym10_1207959872 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});
              var colontmp__486541240 = [];
              var Temporary5 = xHEX60gensym10_1207959864;
              if (ConstSet298[Temporary5.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1207959557)); }
              colontmp__486541240 = Temporary5.sons;
              var i_486541241 = 0;
              var L_486541242 = (colontmp__486541240).length;
              Label6: do {
                  Label7: while (true) {
                  if (!(i_486541241 < L_486541242)) break Label7;
                    yHEX60gensym10_1207959872 = colontmp__486541240[chckIndx(i_486541241, 0, (colontmp__486541240).length - 1)];
                    addChoice_1207959821(result_1207959845[0], yHEX60gensym10_1207959872);
                    i_486541241 = addInt(i_486541241, 1);
                    if (!(((colontmp__486541240).length == L_486541242))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            }
            else {
            addChoice_1207959821(result_1207959845[0], xHEX60gensym10_1207959864);
            }
            
            i_486541244 = addInt(i_486541244, 1);
          }
      } while (false);
    } while (false);
    if ((len_1207959808(result_1207959845[0]) == 1)) {
    var Temporary8 = result_1207959845[0];
    if (ConstSet308[Temporary8.kind]!==undefined) { raiseFieldError2(makeNimstrLit("field \'sons\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1207959557)); }
    result_1207959845[0] = nimCopy(result_1207959845[0], (Temporary9 = Temporary8.sons, Temporary9)[chckIndx(0, 0, (Temporary9).length - 1)], NTI1207959560);
    }
    

  return result_1207959845[0];

}

function parseExpr_1207963270(p_1207963271) {
  var result_1207963379 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207963379 = nimCopy(result_1207963379, seqExpr_1207963374(p_1207963271), NTI1207959560);
    Label1: do {
        Label2: while (true) {
        if (!(p_1207963271.tok.kind == 14)) break Label2;
          getTok_1207963247(p_1207963271);
          result_1207963379 = nimCopy(result_1207963379, npegsOrderedChoice([nimCopy(null, result_1207963379, NTI1207959560), seqExpr_1207963374(p_1207963271)]), NTI1207959560);
        }
    } while (false);

  return result_1207963379;

}

function eat_1207963263(p_1207963264, kind_1207963265) {
    if ((p_1207963264.tok.kind == kind_1207963265)) {
    getTok_1207963247(p_1207963264);
    }
    else {
    pegError_1207963199(p_1207963264, (tokKindToStr_1207962766[chckIndx(kind_1207963265, 0, (tokKindToStr_1207962766).length - 1)] || []).concat(makeNimstrLit(" expected") || []), -1, -1);
    }
    

  
}

function npegsCapture(a_1207960005) {
  var result_1207960006 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207960006 = nimCopy(result_1207960006, {kind: 24, sons: [nimCopy(null, a_1207960005, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);

  return result_1207960006;

}

function any_1207959984() {
  var result_1207959985 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959985 = nimCopy(result_1207959985, {kind: 1, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959985;

}

function anyRune_1207959986() {
  var result_1207959987 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959987 = nimCopy(result_1207959987, {kind: 2, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959987;

}

function newLine_1207959988() {
  var result_1207959989 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959989 = nimCopy(result_1207959989, {kind: 3, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959989;

}

function npegsGreedyRep(a_1207959924) {
      var Temporary1;
      var Temporary2;

  var result_1207959925 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (a_1207959924.kind) {
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      if (true) {
      failedAssertImpl_218103864(makeNimstrLit("pegs.nim(234, 12) `false` "));
      }
      
      break;
    case 12:
      var Temporary1 = a_1207959924;
      if (ConstSet318[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'ch\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1207959557)); }
      result_1207959925 = nimCopy(result_1207959925, {kind: 18, ch: Temporary1.ch, term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
      break;
    case 13:
      var Temporary2 = a_1207959924;
      if (ConstSet319[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'charChoice\' is not accessible for type \'Peg\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1207959557)); }
      result_1207959925 = nimCopy(result_1207959925, {kind: 19, charChoice: Temporary2.charChoice, term: [], ch: 0, nt: null, index: 0, sons: []}, NTI1207959560);
      break;
    case 1:
    case 2:
      result_1207959925 = nimCopy(result_1207959925, {kind: 20, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);
      break;
    default: 
      result_1207959925 = nimCopy(result_1207959925, {kind: 17, sons: [nimCopy(null, a_1207959924, NTI1207959560)], term: [], ch: 0, charChoice: null, nt: null, index: 0}, NTI1207959560);
      break;
    }

  return result_1207959925;

}

function unicodeLetter_1207959990() {
  var result_1207959991 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959991 = nimCopy(result_1207959991, {kind: 4, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959991;

}

function unicodeUpper_1207959994() {
  var result_1207959995 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959995 = nimCopy(result_1207959995, {kind: 6, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959995;

}

function unicodeLower_1207959992() {
  var result_1207959993 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959993 = nimCopy(result_1207959993, {kind: 5, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959993;

}

function unicodeTitle_1207959996() {
  var result_1207959997 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959997 = nimCopy(result_1207959997, {kind: 7, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959997;

}

function unicodeWhitespace_1207959998() {
  var result_1207959999 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207959999 = nimCopy(result_1207959999, {kind: 8, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959999;

}

function builtin_1207963316(p_1207963317) {
  var result_1207963318 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    switch (toJSStr(p_1207963317.tok.literal)) {
    case "n":
      result_1207963318 = nimCopy(result_1207963318, newLine_1207959988(), NTI1207959560);
      break;
    case "d":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet309), NTI1207959560);
      break;
    case "D":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet310), NTI1207959560);
      break;
    case "s":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet311), NTI1207959560);
      break;
    case "S":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet312), NTI1207959560);
      break;
    case "w":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet313), NTI1207959560);
      break;
    case "W":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet314), NTI1207959560);
      break;
    case "a":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet315), NTI1207959560);
      break;
    case "A":
      result_1207963318 = nimCopy(result_1207963318, npegscharSet(ConstSet316), NTI1207959560);
      break;
    case "ident":
      result_1207963318 = nimCopy(result_1207963318, npegssequence([npegscharSet(ConstSet317), npegsGreedyRep(npegscharSet(ConstSet320))]), NTI1207959560);
      break;
    case "letter":
      result_1207963318 = nimCopy(result_1207963318, unicodeLetter_1207959990(), NTI1207959560);
      break;
    case "upper":
      result_1207963318 = nimCopy(result_1207963318, unicodeUpper_1207959994(), NTI1207959560);
      break;
    case "lower":
      result_1207963318 = nimCopy(result_1207963318, unicodeLower_1207959992(), NTI1207959560);
      break;
    case "title":
      result_1207963318 = nimCopy(result_1207963318, unicodeTitle_1207959996(), NTI1207959560);
      break;
    case "white":
      result_1207963318 = nimCopy(result_1207963318, unicodeWhitespace_1207959998(), NTI1207959560);
      break;
    default: 
      pegError_1207963199(p_1207963317, (makeNimstrLit("unknown built-in: ") || []).concat(p_1207963317.tok.literal || []), -1, -1);
      break;
    }

  return result_1207963318;

}

function npegstermChar(t_1207959786) {
  var result_1207959787 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (!(!((t_1207959786 == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("pegs.nim(162, 10) `t != \'\\x00\'` "));
    }
    
    result_1207959787 = nimCopy(result_1207959787, {kind: 12, ch: t_1207959786, term: [], charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207959787;

}

function endAnchor_1207960002() {
  var result_1207960003 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207960003 = nimCopy(result_1207960003, npegsNotPredicate(any_1207959984()), NTI1207959560);

  return result_1207960003;

}

function startAnchor_1207960000() {
  var result_1207960001 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207960001 = nimCopy(result_1207960001, {kind: 32, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}, NTI1207959560);

  return result_1207960001;

}

function npegsbackref(index_1207960012, reverse_1207960013) {
    var Temporary1;

  var result_1207960014 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1207960013) {
    Temporary1 = negInt(index_1207960012);
    }
    else {
    Temporary1 = subInt(index_1207960012, 1);
    }
    
    result_1207960014 = nimCopy(result_1207960014, {kind: 25, index: nimCopy(null, chckRange(Temporary1, -20, 19), NTI1207959567), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1207959560);

  return result_1207960014;

}

function npegsbackrefIgnoreCase(index_1207960025, reverse_1207960026) {
    var Temporary1;

  var result_1207960027 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1207960026) {
    Temporary1 = negInt(index_1207960025);
    }
    else {
    Temporary1 = subInt(index_1207960025, 1);
    }
    
    result_1207960027 = nimCopy(result_1207960027, {kind: 26, index: nimCopy(null, chckRange(Temporary1, -20, 19), NTI1207959567), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1207959560);

  return result_1207960027;

}

function npegsbackrefIgnoreStyle(index_1207960029, reverse_1207960030) {
    var Temporary1;

  var result_1207960031 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    if (reverse_1207960030) {
    Temporary1 = negInt(index_1207960029);
    }
    else {
    Temporary1 = subInt(index_1207960029, 1);
    }
    
    result_1207960031 = nimCopy(result_1207960031, {kind: 27, index: nimCopy(null, chckRange(Temporary1, -20, 19), NTI1207959567), term: [], ch: 0, charChoice: null, nt: null, sons: []}, NTI1207959560);

  return result_1207960031;

}

function modifiedBackref_1207963310(s_1207963311, m_1207963312) {
    var Temporary1;

  var result_1207963313 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    var reverse_1207963314 = (s_1207963311 < 0);
    if (reverse_1207963314) {
    Temporary1 = negInt(s_1207963311);
    }
    else {
    Temporary1 = s_1207963311;
    }
    
    var index_1207963315 = Temporary1;
    switch (m_1207963312) {
    case 0:
    case 1:
      result_1207963313 = nimCopy(result_1207963313, npegsbackref(chckRange(index_1207963315, 1, 20), reverse_1207963314), NTI1207959560);
      break;
    case 2:
      result_1207963313 = nimCopy(result_1207963313, npegsbackrefIgnoreCase(chckRange(index_1207963315, 1, 20), reverse_1207963314), NTI1207959560);
      break;
    case 3:
      result_1207963313 = nimCopy(result_1207963313, npegsbackrefIgnoreStyle(chckRange(index_1207963315, 1, 20), reverse_1207963314), NTI1207959560);
      break;
    }

  return result_1207963313;

}

function npegsGreedyPosRep(a_1207959950) {
  var result_1207959951 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

  BeforeRet: do {
    result_1207959951 = nimCopy(result_1207959951, npegssequence([nimCopy(null, a_1207959950, NTI1207959560), npegsGreedyRep(a_1207959950)]), NTI1207959560);
    break BeforeRet;
  } while (false);

  return result_1207959951;

}

function primary_1207963343(p_1207963344) {
        var Temporary1;

  var result_1207963345 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

  BeforeRet: do {
    switch (p_1207963344.tok.kind) {
    case 17:
      getTok_1207963247(p_1207963344);
      result_1207963345 = nimCopy(result_1207963345, npegsAndPredicate(primary_1207963343(p_1207963344)), NTI1207959560);
      break BeforeRet;
      break;
    case 18:
      getTok_1207963247(p_1207963344);
      result_1207963345 = nimCopy(result_1207963345, npegsNotPredicate(primary_1207963343(p_1207963344)), NTI1207959560);
      break BeforeRet;
      break;
    case 20:
      getTok_1207963247(p_1207963344);
      result_1207963345 = nimCopy(result_1207963345, npegsSearch(primary_1207963343(p_1207963344)), NTI1207959560);
      break BeforeRet;
      break;
    case 11:
      getTok_1207963247(p_1207963344);
      result_1207963345 = nimCopy(result_1207963345, npgegsCapturedSearch(token_1207963335(primary_1207963343(p_1207963344), p_1207963344)), NTI1207959560);
      break BeforeRet;
      break;
    default: 
      break;
    }
    switch (p_1207963344.tok.kind) {
    case 4:
      if (p_1207963344.identIsVerbatim) {
      var m_1207963346 = p_1207963344.tok.modifier;
      if ((m_1207963346 == 0)) {
      m_1207963346 = p_1207963344.modifier;
      }
      
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(modifiedTerm_1207963306(p_1207963344.tok.literal, m_1207963346), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      }
      else {
      if (!(arrowIsNextTok_1207963179(p_1207963344))) {
      var nt_1207963351 = getNonTerminal_1207963272(p_1207963344, p_1207963344.tok.literal);
      nt_1207963351.flags[1] = true;
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(npegsnonterminal(nt_1207963351), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      }
      else {
      pegError_1207963199(p_1207963344, (makeNimstrLit("expression expected, but found: ") || []).concat(p_1207963344.tok.literal || []), -1, -1);
      }
      }
      break;
    case 5:
      var m_1207963356 = p_1207963344.tok.modifier;
      if ((m_1207963356 == 0)) {
      m_1207963356 = p_1207963344.modifier;
      }
      
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(modifiedTerm_1207963306(p_1207963344.tok.literal, m_1207963356), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 6:
      if ((p_1207963344.tok.charset[0] != undefined)) {
      pegError_1207963199(p_1207963344, makeNimstrLit("binary zero (\'\\0\') not allowed in character class"), -1, -1);
      }
      
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(npegscharSet(p_1207963344.tok.charset), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 7:
      getTok_1207963247(p_1207963344);
      result_1207963345 = nimCopy(result_1207963345, parseExpr_1207963270(p_1207963344), NTI1207959560);
      eat_1207963263(p_1207963344, 8);
      break;
    case 9:
      getTok_1207963247(p_1207963344);
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(npegsCapture(parseExpr_1207963270(p_1207963344)), p_1207963344), NTI1207959560);
      eat_1207963263(p_1207963344, 10);
      p_1207963344.captures = addInt(p_1207963344.captures, 1);
      break;
    case 12:
      result_1207963345 = nimCopy(result_1207963345, npegsCapture({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 2:
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(any_1207959984(), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 3:
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(anyRune_1207959986(), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 21:
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(builtin_1207963316(p_1207963344), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 22:
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(npegstermChar(p_1207963344.tok.literal[chckIndx(0, 0, (p_1207963344.tok.literal).length - 1)]), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 24:
      result_1207963345 = nimCopy(result_1207963345, endAnchor_1207960002(), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 25:
      result_1207963345 = nimCopy(result_1207963345, startAnchor_1207960000(), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    case 23:
        if ((p_1207963344.captures < absInt(p_1207963344.tok.index))) Temporary1 = true; else {          Temporary1 = (p_1207963344.tok.index == 0);        }      if (Temporary1) {
      pegError_1207963199(p_1207963344, (makeNimstrLit("invalid back reference index: ") || []).concat(HEX24_335544323(p_1207963344.tok.index) || []), -1, -1);
      }
      
      var m_1207963369 = p_1207963344.tok.modifier;
      if ((m_1207963369 == 0)) {
      m_1207963369 = p_1207963344.modifier;
      }
      
      result_1207963345 = nimCopy(result_1207963345, token_1207963335(modifiedBackref_1207963310(p_1207963344.tok.index, m_1207963369), p_1207963344), NTI1207959560);
      getTok_1207963247(p_1207963344);
      break;
    default: 
      pegError_1207963199(p_1207963344, (makeNimstrLit("expression expected, but found: ") || []).concat(p_1207963344.tok.literal || []), -1, -1);
      getTok_1207963247(p_1207963344);
      break;
    }
    Label2: do {
        Label3: while (true) {
        if (!true) break Label3;
          switch (p_1207963344.tok.kind) {
          case 19:
            result_1207963345 = nimCopy(result_1207963345, npegsOptional(result_1207963345), NTI1207959560);
            getTok_1207963247(p_1207963344);
            break;
          case 15:
            result_1207963345 = nimCopy(result_1207963345, npegsGreedyRep(result_1207963345), NTI1207959560);
            getTok_1207963247(p_1207963344);
            break;
          case 16:
            result_1207963345 = nimCopy(result_1207963345, npegsGreedyPosRep(result_1207963345), NTI1207959560);
            getTok_1207963247(p_1207963344);
            break;
          default: 
            break Label2;
            break;
          }
        }
    } while (false);
  } while (false);

  return result_1207963345;

}

function parseRule_1207963384(p_1207963385) {
      var Temporary1;

  var result_1207963386 = null;

      if (!(p_1207963385.tok.kind == 4)) Temporary1 = false; else {        Temporary1 = arrowIsNextTok_1207963179(p_1207963385);      }    if (Temporary1) {
    result_1207963386 = getNonTerminal_1207963272(p_1207963385, p_1207963385.tok.literal);
    if ((result_1207963386.flags[0] != undefined)) {
    pegError_1207963199(p_1207963385, (makeNimstrLit("attempt to redefine: ") || []).concat(result_1207963386.name || []), -1, -1);
    }
    
    result_1207963386.line = getLine_1207962815(p_1207963385);
    result_1207963386.col = getColumn_1207962812(p_1207963385);
    getTok_1207963247(p_1207963385);
    eat_1207963263(p_1207963385, 13);
    result_1207963386.rule = nimCopy(result_1207963386.rule, parseExpr_1207963270(p_1207963385), NTI1207959560);
    result_1207963386.flags[0] = true;
    }
    else {
    pegError_1207963199(p_1207963385, (makeNimstrLit("rule expected, but found: ") || []).concat(p_1207963385.tok.literal || []), -1, -1);
    }
    

  return result_1207963386;

}

function rawParse_1207963399(p_1207963400) {
      var Temporary3;
              var Temporary9;

  var result_1207963401 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    Label1: do {
        Label2: while (true) {
        if (!(p_1207963400.tok.kind == 21)) break Label2;
          switch (toJSStr(p_1207963400.tok.literal)) {
          case "i":
            p_1207963400.modifier = 2;
            getTok_1207963247(p_1207963400);
            break;
          case "y":
            p_1207963400.modifier = 3;
            getTok_1207963247(p_1207963400);
            break;
          case "skip":
            getTok_1207963247(p_1207963400);
            p_1207963400.skip = nimCopy(p_1207963400.skip, npegsOptional(primary_1207963343(p_1207963400)), NTI1207959560);
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);
      if (!(p_1207963400.tok.kind == 4)) Temporary3 = false; else {        Temporary3 = arrowIsNextTok_1207963179(p_1207963400);      }    if (Temporary3) {
    result_1207963401 = nimCopy(result_1207963401, parseRule_1207963384(p_1207963400).rule, NTI1207959560);
    Label4: do {
        Label5: while (true) {
        if (!!((p_1207963400.tok.kind == 1))) break Label5;
          var _ = parseRule_1207963384(p_1207963400);
        }
    } while (false);
    }
    else {
      p_1207963400.identIsVerbatim = true;
      result_1207963401 = nimCopy(result_1207963401, parseExpr_1207963270(p_1207963400), NTI1207959560);
    }
    
    if (!((p_1207963400.tok.kind == 1))) {
    pegError_1207963199(p_1207963400, (makeNimstrLit("EOF expected, but found: ") || []).concat(p_1207963400.tok.literal || []), -1, -1);
    }
    
    Label6: do {
      var i_1207963425 = 0;
      var colontmp__486541213 = 0;
      colontmp__486541213 = (p_1207963400.nonterms).length - 1;
      var res_486541214 = 0;
      Label7: do {
          Label8: while (true) {
          if (!(res_486541214 <= colontmp__486541213)) break Label8;
            i_1207963425 = res_486541214;
            var nt_1207963426 = p_1207963400.nonterms[chckIndx(i_1207963425, 0, (p_1207963400.nonterms).length - 1)];
            if (!((nt_1207963426.flags[0] != undefined))) {
            pegError_1207963199(p_1207963400, (makeNimstrLit("undeclared identifier: ") || []).concat(nt_1207963426.name || []), nt_1207963426.line, nt_1207963426.col);
            }
            else {
              if (!!((nt_1207963426.flags[1] != undefined))) Temporary9 = false; else {                Temporary9 = (0 < i_1207963425);              }            if (Temporary9) {
            pegError_1207963199(p_1207963400, (makeNimstrLit("unused rule: ") || []).concat(nt_1207963426.name || []), nt_1207963426.line, nt_1207963426.col);
            }
            }
            res_486541214 = addInt(res_486541214, 1);
          }
      } while (false);
    } while (false);

  return result_1207963401;

}

function parsePeg_1207963435(pattern_1207963436, filename_1207963437, line_1207963438, col_1207963439) {
  var result_1207963440 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    var p_1207963441 = [({m_type: NTI1207965177, tok: ({kind: 0, modifier: 0, literal: [], charset: {}, index: 0}), nonterms: [], modifier: 0, captures: 0, identIsVerbatim: false, skip: ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []}), bufpos: 0, buf: [], lineNumber: 0, lineStart: 0, colOffset: 0, filename: []})];
    init_1207962806(p_1207963441[0], pattern_1207963436, filename_1207963437, line_1207963438, col_1207963439);
    p_1207963441[0].tok.kind = 0;
    p_1207963441[0].tok.modifier = 0;
    p_1207963441[0].tok.literal = nimCopy(null, [], NTI33554439);
    p_1207963441[0].tok.charset = nimCopy(p_1207963441[0].tok.charset, ConstSet268, NTI1207964933);
    p_1207963441[0].nonterms = nimCopy(null, [], NTI1207965362);
    p_1207963441[0].identIsVerbatim = false;
    getTok_1207963247(p_1207963441[0]);
    result_1207963440 = nimCopy(result_1207963440, rawParse_1207963399(p_1207963441[0]), NTI1207959560);

  return result_1207963440;

}

function peg_1207963446(pattern_1207963447) {
  var result_1207963448 = ({kind: 0, term: [], ch: 0, charChoice: null, nt: null, index: 0, sons: []});

    result_1207963448 = nimCopy(result_1207963448, parsePeg_1207963435(pattern_1207963447, makeNimstrLit("pattern"), 1, 0), NTI1207959560);

  return result_1207963448;

}

function mathCommands_1778384910(doc_1778384911) {

function underCmd_1778384919(arg_1778384920) {
  var result_1778384921 = [];

    var fmtRes_1778384922 = [mnewString(0)];
    fmtRes_1778384922[0].push.apply(fmtRes_1778384922[0], makeNimstrLit("["));;
    formatValue_1124073634(fmtRes_1778384922, 0, arg_1778384920, []);
    fmtRes_1778384922[0].push.apply(fmtRes_1778384922[0], makeNimstrLit("]"));;
    result_1778384921 = nimCopy(null, fmtRes_1778384922[0], NTI33554439);

  return result_1778384921;

}
    
function HEX3Aanonymous_1778384928(arg_1778384929) {
      var result_1778384930 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [_] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778384918 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("_"), arg_1778384929, [HEX21_1275068536(0)]);
        result_1778384930 = nimCopy(result_1778384930, {typ: 0, str: underCmd_1778384919(to_1694498913(vals_1778384918[chckIndx(0, 0, (vals_1778384918).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778384930;

    }

function fracCmd_1778384986(a_1778384988, b_1778384989) {
    var Temporary1;

  var result_1778384990 = [];

    if (isSome_1728053623(a_1778384988)) {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{$1}{$2}"), [nimCopy(null, get_1728053657(a_1778384988), NTI33554439), nimCopy(null, b_1778384989, NTI33554439)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{1}{$1}"), [nimCopy(null, b_1778384989, NTI33554439)]);
    }
    
    result_1778384990 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778384990;

}
    
function HEX3Aanonymous_1778385018(arg_1778385019) {
      var result_1778385020 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [/] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778384985 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("/"), arg_1778385019, [HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778385020 = nimCopy(result_1778385020, {typ: 0, str: fracCmd_1778384986(to_1728053714(vals_1778384985[chckIndx(0, 0, (vals_1778384985).length - 1)]), to_1694498913(vals_1778384985[chckIndx(1, 0, (vals_1778384985).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385020;

    }

function dotCmd_1778385086(arg_1778385087) {
  var result_1778385088 = [];

    result_1778385088 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left($1\\right)}"), arg_1778385087), NTI33554439);

  return result_1778385088;

}
    
function HEX3Aanonymous_1778385094(arg_1778385095) {
      var result_1778385096 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [.] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385085 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("."), arg_1778385095, [HEX21_1275068536(0)]);
        result_1778385096 = nimCopy(result_1778385096, {typ: 0, str: dotCmd_1778385086(to_1694498913(vals_1778385085[chckIndx(0, 0, (vals_1778385085).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385096;

    }

function bracketsCmd_1778385152(arg_1778385153) {
  var result_1778385154 = [];

    result_1778385154 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left[$1\\right]}"), arg_1778385153), NTI33554439);

  return result_1778385154;

}
    
function HEX3Aanonymous_1778385160(arg_1778385161) {
      var result_1778385162 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [()] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385151 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("()"), arg_1778385161, [HEX21_1275068536(0)]);
        result_1778385162 = nimCopy(result_1778385162, {typ: 0, str: bracketsCmd_1778385152(to_1694498913(vals_1778385151[chckIndx(0, 0, (vals_1778385151).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385162;

    }

function bracesCmd_1778385218(x_1778385219, y_1778385221) {
    var Temporary1;

  var result_1778385222 = [];

    if (isSome_1728053623(y_1778385221)) {
    var y_1778385237 = nimCopy(null, unsafeGet_1761608185(y_1778385221), NTI33554439);
    Temporary1 = (makeNimstrLit("\\,\\middle|\\,") || []).concat(y_1778385237 || []);
    }
    else {
    Temporary1 = [];
    }
    
    result_1778385222 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left\\{$1\\right\\}}"), (x_1778385219 || []).concat(Temporary1 || [])), NTI33554439);

  return result_1778385222;

}
    
function HEX3Aanonymous_1778385243(arg_1778385244) {
      var result_1778385245 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [{}] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385217 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("{}"), arg_1778385244, [HEX21_1275068536(0), HEX3F_1275068557(0)]);
        result_1778385245 = nimCopy(result_1778385245, {typ: 0, str: bracesCmd_1778385218(to_1694498913(vals_1778385217[chckIndx(0, 0, (vals_1778385217).length - 1)]), to_1728053714(vals_1778385217[chckIndx(1, 0, (vals_1778385217).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385245;

    }

function anglesCmd_1778385311(arg_1778385312) {
  var result_1778385313 = [];

    result_1778385313 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left\\langle $1\\right\\rangle}"), arg_1778385312), NTI33554439);

  return result_1778385313;

}
    
function HEX3Aanonymous_1778385319(arg_1778385320) {
      var result_1778385321 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [<>] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385310 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("<>"), arg_1778385320, [HEX21_1275068536(0)]);
        result_1778385321 = nimCopy(result_1778385321, {typ: 0, str: anglesCmd_1778385311(to_1694498913(vals_1778385310[chckIndx(0, 0, (vals_1778385310).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385321;

    }

function pipeCmd_1778385377(arg_1778385378) {
  var result_1778385379 = [];

    result_1778385379 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left\\lvert $1\\right\\rvert}"), arg_1778385378), NTI33554439);

  return result_1778385379;

}
    
function HEX3Aanonymous_1778385385(arg_1778385386) {
      var result_1778385387 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [|] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385376 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("|"), arg_1778385386, [HEX21_1275068536(0)]);
        result_1778385387 = nimCopy(result_1778385387, {typ: 0, str: pipeCmd_1778385377(to_1694498913(vals_1778385376[chckIndx(0, 0, (vals_1778385376).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385387;

    }

function pipePipeCmd_1778385443(arg_1778385444) {
  var result_1778385445 = [];

    result_1778385445 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left\\lVert $1\\right\\rVert}"), arg_1778385444), NTI33554439);

  return result_1778385445;

}
    
function HEX3Aanonymous_1778385451(arg_1778385452) {
      var result_1778385453 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [||] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385442 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("||"), arg_1778385452, [HEX21_1275068536(0)]);
        result_1778385453 = nimCopy(result_1778385453, {typ: 0, str: pipePipeCmd_1778385443(to_1694498913(vals_1778385442[chckIndx(0, 0, (vals_1778385442).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385453;

    }

function vDotCmd_1778385509(arg_1778385510) {
  var result_1778385511 = [];

    result_1778385511 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\overgroup{\\undergroup{$1}}}"), arg_1778385510), NTI33554439);

  return result_1778385511;

}
    
function HEX3Aanonymous_1778385517(arg_1778385518) {
      var result_1778385519 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [v.] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385508 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("v."), arg_1778385518, [HEX21_1275068536(0)]);
        result_1778385519 = nimCopy(result_1778385519, {typ: 0, str: vDotCmd_1778385509(to_1694498913(vals_1778385508[chckIndx(0, 0, (vals_1778385508).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385519;

    }

function floorCmd_1778385575(arg_1778385576) {
  var result_1778385577 = [];

    result_1778385577 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left\\lfloor $1\\right\\rfloor}"), arg_1778385576), NTI33554439);

  return result_1778385577;

}
    
function HEX3Aanonymous_1778385583(arg_1778385584) {
      var result_1778385585 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [floor] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385574 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("floor"), arg_1778385584, [HEX21_1275068536(0)]);
        result_1778385585 = nimCopy(result_1778385585, {typ: 0, str: floorCmd_1778385575(to_1694498913(vals_1778385574[chckIndx(0, 0, (vals_1778385574).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385585;

    }

function ceilCmd_1778385641(arg_1778385642) {
  var result_1778385643 = [];

    result_1778385643 = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{\\left\\lceil $1\\right\\rceil}"), arg_1778385642), NTI33554439);

  return result_1778385643;

}
    
function HEX3Aanonymous_1778385649(arg_1778385650) {
      var result_1778385651 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [ceil] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385640 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("ceil"), arg_1778385650, [HEX21_1275068536(0)]);
        result_1778385651 = nimCopy(result_1778385651, {typ: 0, str: ceilCmd_1778385641(to_1694498913(vals_1778385640[chckIndx(0, 0, (vals_1778385640).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385651;

    }

function intCmd_1778385707(lb_1778385709, ub_1778385711, expr_1778385712, varname_1778385713) {
    var Temporary1;
    var Temporary2;

  var result_1778385714 = [];

    if (isSome_1728053623(lb_1778385709)) {
    if (isSome_1728053623(ub_1778385711)) {
    Temporary2 = nsuFormatOpenArray(makeNimstrLit("\\int_{$1}^{$2}$3\\,\\mathrm d$4"), [nimCopy(null, get_1728053657(lb_1778385709), NTI33554439), nimCopy(null, get_1728053657(ub_1778385711), NTI33554439), nimCopy(null, expr_1778385712, NTI33554439), nimCopy(null, varname_1778385713, NTI33554439)]);
    }
    else {
    Temporary2 = nsuFormatOpenArray(makeNimstrLit("\\int_{$1}$2\\,\\mathrm d$3"), [nimCopy(null, get_1728053657(lb_1778385709), NTI33554439), nimCopy(null, expr_1778385712, NTI33554439), nimCopy(null, varname_1778385713, NTI33554439)]);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\int $1\\,\\mathrm d$2"), [nimCopy(null, expr_1778385712, NTI33554439), nimCopy(null, varname_1778385713, NTI33554439)]);
    }
    
    result_1778385714 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778385714;

}
    
function HEX3Aanonymous_1778385779(arg_1778385780) {
      var result_1778385781 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [int] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385706 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("int"), arg_1778385780, [HEX3F_1275068557(0), HEX3F_1275068557(0), HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1778385781 = nimCopy(result_1778385781, {typ: 0, str: intCmd_1778385707(to_1728053714(vals_1778385706[chckIndx(0, 0, (vals_1778385706).length - 1)]), to_1728053714(vals_1778385706[chckIndx(1, 0, (vals_1778385706).length - 1)]), to_1694498913(vals_1778385706[chckIndx(2, 0, (vals_1778385706).length - 1)]), to_1694498913(vals_1778385706[chckIndx(3, 0, (vals_1778385706).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385781;

    }

function intdCmd_1778385861(varname_1778385862, lb_1778385864, ub_1778385866, expr_1778385867) {
  var result_1778385868 = [];

    result_1778385868 = nimCopy(null, intCmd_1778385707(lb_1778385864, ub_1778385866, expr_1778385867, varname_1778385862), NTI33554439);

  return result_1778385868;

}
    
function HEX3Aanonymous_1778385874(arg_1778385875) {
      var result_1778385876 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [intd] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385860 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("intd"), arg_1778385875, [HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778385876 = nimCopy(result_1778385876, {typ: 0, str: intdCmd_1778385861(to_1694498913(vals_1778385860[chckIndx(0, 0, (vals_1778385860).length - 1)]), to_1728053714(vals_1778385860[chckIndx(1, 0, (vals_1778385860).length - 1)]), to_1728053714(vals_1778385860[chckIndx(2, 0, (vals_1778385860).length - 1)]), to_1694498913(vals_1778385860[chckIndx(3, 0, (vals_1778385860).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778385876;

    }

function dintCmd_1778385956(varname_1778385957, lb_1778385959, ub_1778385961, expr_1778385962) {
    var Temporary1;
    var Temporary2;

  var result_1778385963 = [];

    if (isSome_1728053623(lb_1778385959)) {
    if (isSome_1728053623(ub_1778385961)) {
    Temporary2 = nsuFormatOpenArray(makeNimstrLit("\\int_{$1}^{$2}\\mathrm d$4\\,$3"), [nimCopy(null, get_1728053657(lb_1778385959), NTI33554439), nimCopy(null, get_1728053657(ub_1778385961), NTI33554439), nimCopy(null, expr_1778385962, NTI33554439), nimCopy(null, varname_1778385957, NTI33554439)]);
    }
    else {
    Temporary2 = nsuFormatOpenArray(makeNimstrLit("\\int_{$1}\\mathrm d$3\\,$2"), [nimCopy(null, get_1728053657(lb_1778385959), NTI33554439), nimCopy(null, expr_1778385962, NTI33554439), nimCopy(null, varname_1778385957, NTI33554439)]);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\int\\mathrm d$2\\,$1"), [nimCopy(null, expr_1778385962, NTI33554439), nimCopy(null, varname_1778385957, NTI33554439)]);
    }
    
    result_1778385963 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778385963;

}
    
function HEX3Aanonymous_1778386028(arg_1778386029) {
      var result_1778386030 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [dint] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778385955 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("dint"), arg_1778386029, [HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778386030 = nimCopy(result_1778386030, {typ: 0, str: dintCmd_1778385956(to_1694498913(vals_1778385955[chckIndx(0, 0, (vals_1778385955).length - 1)]), to_1728053714(vals_1778385955[chckIndx(1, 0, (vals_1778385955).length - 1)]), to_1728053714(vals_1778385955[chckIndx(2, 0, (vals_1778385955).length - 1)]), to_1694498913(vals_1778385955[chckIndx(3, 0, (vals_1778385955).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386030;

    }

function limCmd_1778386110(varname_1778386112, point_1778386114, set_1778386116) {
    var Temporary1;

  var result_1778386117 = [];

    if (isSome_1728053623(set_1778386116)) {
    var set_1778386132 = nimCopy(null, unsafeGet_1761608185(set_1778386116), NTI33554439);
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\lim_{\\substack{$1\\to $2\\\\$1\\in $3}}"), [get_1744830691(varname_1778386112, makeNimstrLit("n")), get_1744830691(point_1778386114, makeNimstrLit("\\infty")), nimCopy(null, set_1778386132, NTI33554439)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\lim_{$1\\to $2}"), [get_1744830691(varname_1778386112, makeNimstrLit("n")), get_1744830691(point_1778386114, makeNimstrLit("\\infty"))]);
    }
    
    result_1778386117 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778386117;

}
    
function HEX3Aanonymous_1778386202(arg_1778386203) {
      var result_1778386204 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [lim] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386109 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("lim"), arg_1778386203, [HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1778386204 = nimCopy(result_1778386204, {typ: 0, str: limCmd_1778386110(to_1728053714(vals_1778386109[chckIndx(0, 0, (vals_1778386109).length - 1)]), to_1728053714(vals_1778386109[chckIndx(1, 0, (vals_1778386109).length - 1)]), to_1728053714(vals_1778386109[chckIndx(2, 0, (vals_1778386109).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386204;

    }

function liminfCmd_1778386286(varname_1778386288, point_1778386290) {
  var result_1778386291 = [];

    result_1778386291 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\liminf_{$1\\to $2}"), [get_1744830691(varname_1778386288, makeNimstrLit("n")), get_1744830691(point_1778386290, makeNimstrLit("\\infty"))]), NTI33554439);

  return result_1778386291;

}
    
function HEX3Aanonymous_1778386329(arg_1778386330) {
      var result_1778386331 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [liminf] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386285 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("liminf"), arg_1778386330, [HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1778386331 = nimCopy(result_1778386331, {typ: 0, str: liminfCmd_1778386286(to_1728053714(vals_1778386285[chckIndx(0, 0, (vals_1778386285).length - 1)]), to_1728053714(vals_1778386285[chckIndx(1, 0, (vals_1778386285).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386331;

    }

function limsupCmd_1778386403(varname_1778386405, point_1778386407) {
  var result_1778386408 = [];

    result_1778386408 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\limsup_{$1\\to $2}"), [get_1744830691(varname_1778386405, makeNimstrLit("n")), get_1744830691(point_1778386407, makeNimstrLit("\\infty"))]), NTI33554439);

  return result_1778386408;

}
    
function HEX3Aanonymous_1778386446(arg_1778386447) {
      var result_1778386448 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [limsup] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386402 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("limsup"), arg_1778386447, [HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1778386448 = nimCopy(result_1778386448, {typ: 0, str: limsupCmd_1778386403(to_1728053714(vals_1778386402[chckIndx(0, 0, (vals_1778386402).length - 1)]), to_1728053714(vals_1778386402[chckIndx(1, 0, (vals_1778386402).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386448;

    }

function sumCmd_1778386520(varname_1778386522, lowerBound_1778386524, upperBound_1778386526) {
  var result_1778386527 = [];

    result_1778386527 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\sum_{$1=$2}^{$3}"), [get_1744830691(varname_1778386522, makeNimstrLit("n")), get_1744830691(lowerBound_1778386524, makeNimstrLit("1")), get_1744830691(upperBound_1778386526, makeNimstrLit("\\infty"))]), NTI33554439);

  return result_1778386527;

}
    
function HEX3Aanonymous_1778386581(arg_1778386582) {
      var result_1778386583 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [sum] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386519 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("sum"), arg_1778386582, [HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1778386583 = nimCopy(result_1778386583, {typ: 0, str: sumCmd_1778386520(to_1728053714(vals_1778386519[chckIndx(0, 0, (vals_1778386519).length - 1)]), to_1728053714(vals_1778386519[chckIndx(1, 0, (vals_1778386519).length - 1)]), to_1728053714(vals_1778386519[chckIndx(2, 0, (vals_1778386519).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386583;

    }

function ddCmd_1778386665(x_1778386666) {
  var result_1778386667 = [];

    result_1778386667 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("{\\mathrm d$1}"), [nimCopy(null, x_1778386666, NTI33554439)]), NTI33554439);

  return result_1778386667;

}
    
function HEX3Aanonymous_1778386673(arg_1778386674) {
      var result_1778386675 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [dd] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386664 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("dd"), arg_1778386674, [HEX21_1275068536(0)]);
        result_1778386675 = nimCopy(result_1778386675, {typ: 0, str: ddCmd_1778386665(to_1694498913(vals_1778386664[chckIndx(0, 0, (vals_1778386664).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386675;

    }

function ddExpCmd_1778386731(n_1778386732, x_1778386733) {
  var result_1778386734 = [];

    result_1778386734 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("{\\mathrm d^{$1}$2}"), [nimCopy(null, n_1778386732, NTI33554439), nimCopy(null, x_1778386733, NTI33554439)]), NTI33554439);

  return result_1778386734;

}
    
function HEX3Aanonymous_1778386740(arg_1778386741) {
      var result_1778386742 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [dd^] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386730 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("dd^"), arg_1778386741, [HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1778386742 = nimCopy(result_1778386742, {typ: 0, str: ddExpCmd_1778386731(to_1694498913(vals_1778386730[chckIndx(0, 0, (vals_1778386730).length - 1)]), to_1694498913(vals_1778386730[chckIndx(1, 0, (vals_1778386730).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386742;

    }

function dvCmd_1778386802(f_1778386804, x_1778386805) {
    var Temporary1;

  var result_1778386806 = [];

    if (isSome_1728053623(f_1778386804)) {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d$1}{\\mathrm d$2}"), [nimCopy(null, get_1728053657(f_1778386804), NTI33554439), nimCopy(null, x_1778386805, NTI33554439)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d}{\\mathrm d$1}"), [nimCopy(null, x_1778386805, NTI33554439)]);
    }
    
    result_1778386806 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778386806;

}
    
function HEX3Aanonymous_1778386834(arg_1778386835) {
      var result_1778386836 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [dv] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386801 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("dv"), arg_1778386835, [HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778386836 = nimCopy(result_1778386836, {typ: 0, str: dvCmd_1778386802(to_1728053714(vals_1778386801[chckIndx(0, 0, (vals_1778386801).length - 1)]), to_1694498913(vals_1778386801[chckIndx(1, 0, (vals_1778386801).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386836;

    }

function dvExpCmd_1778386902(n_1778386903, f_1778386905, x_1778386906) {
    var Temporary1;

  var result_1778386907 = [];

    if (isSome_1728053623(f_1778386905)) {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d^{$1}$2}{\\mathrm d$3^{$1}}"), [nimCopy(null, n_1778386903, NTI33554439), nimCopy(null, get_1728053657(f_1778386905), NTI33554439), nimCopy(null, x_1778386906, NTI33554439)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\mathrm d^{$1}}{\\mathrm d$2^{$1}}"), [nimCopy(null, n_1778386903, NTI33554439), nimCopy(null, x_1778386906, NTI33554439)]);
    }
    
    result_1778386907 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778386907;

}
    
function HEX3Aanonymous_1778386935(arg_1778386936) {
      var result_1778386937 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [dv^] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778386901 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("dv^"), arg_1778386936, [HEX21_1275068536(0), HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778386937 = nimCopy(result_1778386937, {typ: 0, str: dvExpCmd_1778386902(to_1694498913(vals_1778386901[chckIndx(0, 0, (vals_1778386901).length - 1)]), to_1728053714(vals_1778386901[chckIndx(1, 0, (vals_1778386901).length - 1)]), to_1694498913(vals_1778386901[chckIndx(2, 0, (vals_1778386901).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778386937;

    }

function pdvCmd_1778387007(f_1778387009, x_1778387010) {
    var Temporary1;

  var result_1778387011 = [];

    if (isSome_1728053623(f_1778387009)) {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial $1}{\\partial $2}"), [nimCopy(null, get_1728053657(f_1778387009), NTI33554439), nimCopy(null, x_1778387010, NTI33554439)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial}{\\partial $1}"), [nimCopy(null, x_1778387010, NTI33554439)]);
    }
    
    result_1778387011 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778387011;

}
    
function HEX3Aanonymous_1778387039(arg_1778387040) {
      var result_1778387041 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [pdv] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387006 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("pdv"), arg_1778387040, [HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778387041 = nimCopy(result_1778387041, {typ: 0, str: pdvCmd_1778387007(to_1728053714(vals_1778387006[chckIndx(0, 0, (vals_1778387006).length - 1)]), to_1694498913(vals_1778387006[chckIndx(1, 0, (vals_1778387006).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387041;

    }

function pdvExpCmd_1778387107(n_1778387108, f_1778387110, x_1778387111) {
    var Temporary1;

  var result_1778387112 = [];

    if (isSome_1728053623(f_1778387110)) {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial^{$1}$2}{\\partial $3^{$1}}"), [nimCopy(null, n_1778387108, NTI33554439), nimCopy(null, get_1728053657(f_1778387110), NTI33554439), nimCopy(null, x_1778387111, NTI33554439)]);
    }
    else {
    Temporary1 = nsuFormatOpenArray(makeNimstrLit("\\frac{\\partial^{$1}}{\\partial $2^{$1}}"), [nimCopy(null, n_1778387108, NTI33554439), nimCopy(null, x_1778387111, NTI33554439)]);
    }
    
    result_1778387112 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778387112;

}
    
function HEX3Aanonymous_1778387140(arg_1778387141) {
      var result_1778387142 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [pdv^] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387106 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("pdv^"), arg_1778387141, [HEX21_1275068536(0), HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1778387142 = nimCopy(result_1778387142, {typ: 0, str: pdvExpCmd_1778387107(to_1694498913(vals_1778387106[chckIndx(0, 0, (vals_1778387106).length - 1)]), to_1728053714(vals_1778387106[chckIndx(1, 0, (vals_1778387106).length - 1)]), to_1694498913(vals_1778387106[chckIndx(2, 0, (vals_1778387106).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387142;

    }

function matCmd_1778387212(arg_1778387213) {
  var result_1778387214 = [];

    result_1778387214 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{matrix}$1\\end{matrix}"), [nimCopy(null, arg_1778387213, NTI33554439)]), NTI33554439);

  return result_1778387214;

}
    
function HEX3Aanonymous_1778387220(arg_1778387221) {
      var result_1778387222 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [mat] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387211 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("mat"), arg_1778387221, [HEX21_1275068536(0)]);
        result_1778387222 = nimCopy(result_1778387222, {typ: 0, str: matCmd_1778387212(to_1694498913(vals_1778387211[chckIndx(0, 0, (vals_1778387211).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387222;

    }

function dotMatCmd_1778387278(arg_1778387279) {
  var result_1778387280 = [];

    result_1778387280 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{pmatrix}$1\\end{pmatrix}"), [nimCopy(null, arg_1778387279, NTI33554439)]), NTI33554439);

  return result_1778387280;

}
    
function HEX3Aanonymous_1778387286(arg_1778387287) {
      var result_1778387288 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [.mat] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387277 = expandArguments_1711276046(doc_1778384911, makeNimstrLit(".mat"), arg_1778387287, [HEX21_1275068536(0)]);
        result_1778387288 = nimCopy(result_1778387288, {typ: 0, str: dotMatCmd_1778387278(to_1694498913(vals_1778387277[chckIndx(0, 0, (vals_1778387277).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387288;

    }

function bracketsMatCmd_1778387344(arg_1778387345) {
  var result_1778387346 = [];

    result_1778387346 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{bmatrix}$1\\end{bmatrix}"), [nimCopy(null, arg_1778387345, NTI33554439)]), NTI33554439);

  return result_1778387346;

}
    
function HEX3Aanonymous_1778387352(arg_1778387353) {
      var result_1778387354 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [(mat)] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387343 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("(mat)"), arg_1778387353, [HEX21_1275068536(0)]);
        result_1778387354 = nimCopy(result_1778387354, {typ: 0, str: bracketsMatCmd_1778387344(to_1694498913(vals_1778387343[chckIndx(0, 0, (vals_1778387343).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387354;

    }

function pipesMatCmd_1778387410(arg_1778387411) {
  var result_1778387412 = [];

    result_1778387412 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{vmatrix}$1\\end{vmatrix}"), [nimCopy(null, arg_1778387411, NTI33554439)]), NTI33554439);

  return result_1778387412;

}
    
function HEX3Aanonymous_1778387418(arg_1778387419) {
      var result_1778387420 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [|mat|] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387409 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("|mat|"), arg_1778387419, [HEX21_1275068536(0)]);
        result_1778387420 = nimCopy(result_1778387420, {typ: 0, str: pipesMatCmd_1778387410(to_1694498913(vals_1778387409[chckIndx(0, 0, (vals_1778387409).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387420;

    }

function pipePipesMatCmd_1778387476(arg_1778387477) {
  var result_1778387478 = [];

    result_1778387478 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\begin{Vmatrix}$1\\end{Vmatrix}"), [nimCopy(null, arg_1778387477, NTI33554439)]), NTI33554439);

  return result_1778387478;

}
    
function HEX3Aanonymous_1778387484(arg_1778387485) {
      var result_1778387486 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [||mat||] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387475 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("||mat||"), arg_1778387485, [HEX21_1275068536(0)]);
        result_1778387486 = nimCopy(result_1778387486, {typ: 0, str: pipePipesMatCmd_1778387476(to_1694498913(vals_1778387475[chckIndx(0, 0, (vals_1778387475).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387486;

    }

function unitCmd_1778387542(number_1778387544, unit_1778387545) {
    var Temporary1;

  var result_1778387546 = [];

    var unitRendered_1778387547 = npegsreplacef(npegsreplacef(unit_1778387545, peg_1207963446(makeNimstrLit("^{\\letter+}")), makeNimstrLit("\\mathrm{$1}")), peg_1207963446(makeNimstrLit("{!\\letter[^\\\\]}{\\letter+}")), makeNimstrLit("$1\\mathrm{$2}"));
    if (isSome_1728053623(number_1778387544)) {
    Temporary1 = (get_1728053657(number_1778387544) || []).concat(makeNimstrLit("\\,") || [],unitRendered_1778387547 || []);
    }
    else {
    Temporary1 = unitRendered_1778387547;
    }
    
    result_1778387546 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778387546;

}
    
function HEX3Aanonymous_1778387575(arg_1778387576) {
      var result_1778387577 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [unit] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387541 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("unit"), arg_1778387576, [HEX3F_1275068557(0), HEX21_1275068536(1)]);
        result_1778387577 = nimCopy(result_1778387577, {typ: 0, str: unitCmd_1778387542(to_1728053714(vals_1778387541[chckIndx(0, 0, (vals_1778387541).length - 1)]), to_1694498913(vals_1778387541[chckIndx(1, 0, (vals_1778387541).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387577;

    }

function inlineMathCmd_1778387643(arg_1778387644) {
  var result_1778387645 = [];

    raiseException({message: makeNimstrLit("Math can\'t be nested inside math"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    result_1778387645 = nimCopy(null, [], NTI33554439);

  return result_1778387645;

}
    
function HEX3Aanonymous_1778387651(arg_1778387652) {
      var result_1778387653 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [$] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387642 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("$"), arg_1778387652, [{kind: 4, base: 0}]);
        result_1778387653 = nimCopy(result_1778387653, {typ: 1, str: inlineMathCmd_1778387643(to_1694498913(vals_1778387642[chckIndx(0, 0, (vals_1778387642).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387653;

    }

function blockMathCmd_1778387709(arg_1778387710) {
  var result_1778387711 = [];

    raiseException({message: makeNimstrLit("Math can\'t be nested inside math"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    result_1778387711 = nimCopy(null, [], NTI33554439);

  return result_1778387711;

}
    
function HEX3Aanonymous_1778387717(arg_1778387718) {
      var result_1778387719 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [$$] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387708 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("$$"), arg_1778387718, [{kind: 4, base: 0}]);
        result_1778387719 = nimCopy(result_1778387719, {typ: 1, str: blockMathCmd_1778387709(to_1694498913(vals_1778387708[chckIndx(0, 0, (vals_1778387708).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387719;

    }

function alignedMathCmd_1778387775(arg_1778387776) {
  var result_1778387777 = [];

    raiseException({message: makeNimstrLit("Math can\'t be nested inside math"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    result_1778387777 = nimCopy(null, [], NTI33554439);

  return result_1778387777;

}
    
function HEX3Aanonymous_1778387783(arg_1778387784) {
      var result_1778387785 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778384911.safeMode) {
        raiseException({message: makeNimstrLit("The [$$&] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778387774 = expandArguments_1711276046(doc_1778384911, makeNimstrLit("$$&"), arg_1778387784, [{kind: 4, base: 0}]);
        result_1778387785 = nimCopy(result_1778387785, {typ: 1, str: alignedMathCmd_1778387775(to_1694498913(vals_1778387774[chckIndx(0, 0, (vals_1778387774).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778387785;

    }

  var result_1778384914 = ({data: [], counter: 0});

    var commands_1778384917 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("_"), HEX3Aanonymous_1778384928);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("/"), HEX3Aanonymous_1778385018);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("."), HEX3Aanonymous_1778385094);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("()"), HEX3Aanonymous_1778385160);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("{}"), HEX3Aanonymous_1778385243);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("<>"), HEX3Aanonymous_1778385319);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("|"), HEX3Aanonymous_1778385385);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("||"), HEX3Aanonymous_1778385451);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("v."), HEX3Aanonymous_1778385517);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("floor"), HEX3Aanonymous_1778385583);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("ceil"), HEX3Aanonymous_1778385649);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("int"), HEX3Aanonymous_1778385779);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("intd"), HEX3Aanonymous_1778385874);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("dint"), HEX3Aanonymous_1778386028);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("lim"), HEX3Aanonymous_1778386202);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("liminf"), HEX3Aanonymous_1778386329);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("limsup"), HEX3Aanonymous_1778386446);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("sum"), HEX3Aanonymous_1778386581);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("dd"), HEX3Aanonymous_1778386673);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("dd^"), HEX3Aanonymous_1778386740);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("dv"), HEX3Aanonymous_1778386834);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("dv^"), HEX3Aanonymous_1778386935);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("pdv"), HEX3Aanonymous_1778387039);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("pdv^"), HEX3Aanonymous_1778387140);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("mat"), HEX3Aanonymous_1778387220);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit(".mat"), HEX3Aanonymous_1778387286);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("(mat)"), HEX3Aanonymous_1778387352);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("|mat|"), HEX3Aanonymous_1778387418);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("||mat||"), HEX3Aanonymous_1778387484);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("unit"), HEX3Aanonymous_1778387575);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("$"), HEX3Aanonymous_1778387651);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("$$"), HEX3Aanonymous_1778387717);
    HEX5BHEX5DHEX3D_1694498976(commands_1778384917[0], makeNimstrLit("$$&"), HEX3Aanonymous_1778387783);
    result_1778384914 = nimCopy(result_1778384914, commands_1778384917[0], NTI1275068467);

  return result_1778384914;

}

function rawGet_1577058444(t_1577058447, key_1577058448, hc_1577058449, hc_1577058449_Idx) {
            var Temporary3;

  var result_1577058450 = 0;

  BeforeRet: do {
    hc_1577058449[hc_1577058449_Idx] = hash_1056965030(key_1577058448);
    if ((hc_1577058449[hc_1577058449_Idx] == 0)) {
    hc_1577058449[hc_1577058449_Idx] = 314159265;
    }
    
    if (((t_1577058447.data).length == 0)) {
    result_1577058450 = -1;
    break BeforeRet;
    }
    
    var h_1577058501 = (hc_1577058449[hc_1577058449_Idx] & (t_1577058447.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1577058447.data[chckIndx(h_1577058501, 0, (t_1577058447.data).length - 1)].Field0)) break Label2;
            if (!(t_1577058447.data[chckIndx(h_1577058501, 0, (t_1577058447.data).length - 1)].Field0 == hc_1577058449[hc_1577058449_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1577058447.data[chckIndx(h_1577058501, 0, (t_1577058447.data).length - 1)].Field1, key_1577058448);            }          if (Temporary3) {
          result_1577058450 = h_1577058501;
          break BeforeRet;
          }
          
          h_1577058501 = nextTry_1157627938(h_1577058501, (t_1577058447.data).length - 1);
        }
    } while (false);
    result_1577058450 = subInt(-1, h_1577058501);
  } while (false);

  return result_1577058450;

}

function getOrDefault_1778387960(t_1778387963, key_1778387964, default_1778387965) {
    var Temporary1;

  var result_1778387966 = [];

    var hcHEX60gensym186_1778387969 = [0];
    var indexHEX60gensym186_1778387976 = rawGet_1577058444(t_1778387963, key_1778387964, hcHEX60gensym186_1778387969, 0);
    if ((0 <= indexHEX60gensym186_1778387976)) {
    Temporary1 = t_1778387963.data[chckIndx(indexHEX60gensym186_1778387976, 0, (t_1778387963.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1778387965;
    }
    
    result_1778387966 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778387966;

}

function renderMathKatex_1577061554(math_1577061555, displayMode_1577061556, trust_1577061557) {
  var result_1577061558 = [];

    var opts_1577061559 = {};
    opts_1577061559["throwOnError"] = false;
    opts_1577061559["displayMode"] = displayMode_1577061556;
    opts_1577061559["trust"] = trust_1577061557;
    result_1577061558 = nimCopy(null, cstrToNimstr(katex.renderToString(toJSStr(math_1577061555), opts_1577061559)), NTI33554439);

  return result_1577061558;

}

function matext_1795162115(latex_1795162116, oneLine_1795162117) {
  var result_1795162118 = [];

    result_1795162118 = nimCopy(null, render_1811939339(latex_1795162116, oneLine_1795162117), NTI33554439);

  return result_1795162118;

}

function isNimException_33556520() {
    return lastJSError && lastJSError.m_type;

  
}

function renderMath_1778387873(doc_1778387874, latex_1778387875, displayMode_1778387876, addDelimiters_1778387877) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary8;

  var result_1778387878 = [];

    switch (doc_1778387874.target) {
    case 0:
      incl_1778388038(doc_1778387874.addToHead, nsuFormatSingleElem(makeNimstrLit("<link rel=\"stylesheet\" href=\"$1\" integrity=\"sha384-Juol1FqnotbkyZUT5Z7gUPjQ9gzlwCENvUZTpQBAPxtusdwFLRy382PSDx5UUJ4/\" crossorigin=\"anonymous\">"), getOrDefault_1778387960(doc_1778387874.settings, makeNimstrLit("katex-stylesheet-path"), makeNimstrLit("https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/katex.min.css"))));
      if (displayMode_1778387876) {
      var Temporary2 = doc_1778387874;
      if (ConstSet321[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit("xd-block-math{display:block}"));
      }
      
      if (displayMode_1778387876) {
      Temporary3 = makeNimstrLit("<xd-block-math>$1</xd-block-math>");
      }
      else {
      Temporary3 = makeNimstrLit("<xd-inline-math>$1</xd-inline-math>");
      }
      
      var format_1778389610 = nimCopy(null, Temporary3, NTI33554439);
      Temporary1 = nsuFormatSingleElem(format_1778389610, renderMathKatex_1577061554(latex_1778387875, displayMode_1778387876, !(doc_1778387874.safeMode)));
      break;
    case 1:
      incl_1778388038(doc_1778387874.addToHead, makeNimstrLit("\\usepackage{amsmath}"));
      incl_1778388038(doc_1778387874.addToHead, makeNimstrLit("\\usepackage{amssymb}"));
      if (displayMode_1778387876) {
      Temporary4 = makeNimstrLit("\\[$1\\]");
      }
      else {
      Temporary4 = makeNimstrLit("\\($1\\)");
      }
      
      var format_1778389657 = nimCopy(null, Temporary4, NTI33554439);
      if (addDelimiters_1778387877) {
      Temporary5 = nsuFormatSingleElem(format_1778389657, latex_1778387875);
      }
      else {
      Temporary5 = latex_1778387875;
      }
      
      Temporary1 = Temporary5;
      break;
    case 2:
++excHandler;
      Temporary8 = framePtr;
      try {
      Temporary6 = matext_1795162115(latex_1778387875, false);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      framePtr = Temporary8;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555125))) {
      raiseException({message: nsuFormatSingleElem(makeNimstrLit("Error when parsing math: $1"), latex_1778387875), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      framePtr = Temporary8;
      }
      var math_1778389658 = nimCopy(null, Temporary6, NTI33554439);
      var fmtRes_1778389659 = [mnewString(0)];
      fmtRes_1778389659[0].push.apply(fmtRes_1778389659[0], makeNimstrLit("\x0A```\x0A"));;
      formatValue_1124073634(fmtRes_1778389659, 0, math_1778389658, []);
      fmtRes_1778389659[0].push.apply(fmtRes_1778389659[0], makeNimstrLit("\x0A```\x0A"));;
      Temporary1 = fmtRes_1778389659[0];
      break;
    }
    result_1778387878 = nimCopy(null, Temporary1, NTI33554439);

  return result_1778387878;

}

function env_1711277202(name_1711277203, content_1711277204) {
  var result_1711277205 = [];

    result_1711277205 = nimCopy(null, (makeNimstrLit("\\begin{") || []).concat(name_1711277203 || [],makeNimstrLit("}") || [],content_1711277204 || [],makeNimstrLit("\\end{") || [],name_1711277203 || [],makeNimstrLit("}") || []), NTI33554439);

  return result_1711277205;

}

function hasKey_1677721908(t_1677721911, key_1677721912) {
  var result_1677721913 = false;

    var hc_1677721914 = [0];
    result_1677721913 = (0 <= rawGet_1577058444(t_1677721911, key_1677721912, hc_1677721914, 0));

  return result_1677721913;

}

function HEX5BHEX5D_1191183540(t_1191183543, key_1191183544) {
  var result_1191183545 = [];

    var hcHEX60gensym20_1191183546 = [0];
    var indexHEX60gensym20_1191183553 = rawGet_1577058444(t_1191183543, key_1191183544, hcHEX60gensym20_1191183546, 0);
    if ((0 <= indexHEX60gensym20_1191183553)) {
    result_1191183545 = nimCopy(null, t_1191183543.data[chckIndx(indexHEX60gensym20_1191183553, 0, (t_1191183543.data).length - 1)].Field2, NTI33554439);
    }
    else {
    raiseKeyError_1308623158(key_1191183544);
    }
    

  return result_1191183545;

}

function renderStr_1308623448(doc_1308623449, str_1308623450) {
    var Temporary1;

  var result_1308623451 = [];

    var Temporary1 = expand_1308622953(doc_1308623449, str_1308623450, 1);
    if (ConstSet323[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1275068420)); }
    result_1308623451 = nimCopy(null, Temporary1.str, NTI33554439);

  return result_1308623451;

}

function expandStr_1308623444(doc_1308623445, str_1308623446) {
    var Temporary1;

  var result_1308623447 = [];

    var Temporary1 = expand_1308622953(doc_1308623445, str_1308623446, 0);
    if (ConstSet324[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1275068420)); }
    result_1308623447 = nimCopy(null, Temporary1.str, NTI33554439);

  return result_1308623447;

}

function checkboxCommands_1694498822(doc_1694498823) {

function dashCmd_1694498855(arg_1694498856) {
    var Temporary1;

  var result_1694498857 = [];

    switch (doc_1694498823.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<li class=\"xd-checkbox-unchecked\">") || []).concat(arg_1694498856 || [],makeNimstrLit("</li>") || []);
      break;
    case 1:
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the LaTeX target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the Gemtext target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1694498857 = nimCopy(null, Temporary1, NTI33554439);

  return result_1694498857;

}
    
function HEX3Aanonymous_1694498902(arg_1694498903) {
      var result_1694498904 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1694498823.safeMode) {
        raiseException({message: makeNimstrLit("The [-] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1694498851 = expandArguments_1711276046(doc_1694498823, makeNimstrLit("-"), arg_1694498903, [HEX21_1275068536(1)]);
        result_1694498904 = nimCopy(result_1694498904, {typ: 1, str: dashCmd_1694498855(to_1694498913(vals_1694498851[chckIndx(0, 0, (vals_1694498851).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1694498904;

    }

function vCmd_1694500006(arg_1694500007) {
    var Temporary1;

  var result_1694500008 = [];

    switch (doc_1694498823.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<li class=\"xd-checkbox-checked\">") || []).concat(arg_1694500007 || [],makeNimstrLit("</li>") || []);
      break;
    case 1:
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the LaTeX target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the Gemtext target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1694500008 = nimCopy(null, Temporary1, NTI33554439);

  return result_1694500008;

}
    
function HEX3Aanonymous_1694500014(arg_1694500015) {
      var result_1694500016 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1694498823.safeMode) {
        raiseException({message: makeNimstrLit("The [v] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1694500005 = expandArguments_1711276046(doc_1694498823, makeNimstrLit("v"), arg_1694500015, [HEX21_1275068536(1)]);
        result_1694500016 = nimCopy(result_1694500016, {typ: 1, str: vCmd_1694500006(to_1694498913(vals_1694500005[chckIndx(0, 0, (vals_1694500005).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1694500016;

    }

function xCmd_1694500072(arg_1694500073) {
    var Temporary1;

  var result_1694500074 = [];

    switch (doc_1694498823.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<li class=\"xd-checkbox-crossed\">") || []).concat(arg_1694500073 || [],makeNimstrLit("</li>") || []);
      break;
    case 1:
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the LaTeX target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the Gemtext target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1694500074 = nimCopy(null, Temporary1, NTI33554439);

  return result_1694500074;

}
    
function HEX3Aanonymous_1694500080(arg_1694500081) {
      var result_1694500082 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1694498823.safeMode) {
        raiseException({message: makeNimstrLit("The [x] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1694500071 = expandArguments_1711276046(doc_1694498823, makeNimstrLit("x"), arg_1694500081, [HEX21_1275068536(1)]);
        result_1694500082 = nimCopy(result_1694500082, {typ: 1, str: xCmd_1694500072(to_1694498913(vals_1694500071[chckIndx(0, 0, (vals_1694500071).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1694500082;

    }

  var result_1694498826 = ({data: [], counter: 0});

    var commands_1694498829 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1694498829[0], makeNimstrLit("-"), HEX3Aanonymous_1694498902);
    HEX5BHEX5DHEX3D_1694498976(commands_1694498829[0], makeNimstrLit("v"), HEX3Aanonymous_1694500014);
    HEX5BHEX5DHEX3D_1694498976(commands_1694498829[0], makeNimstrLit("x"), HEX3Aanonymous_1694500080);
    result_1694498826 = nimCopy(result_1694498826, commands_1694498829[0], NTI1275068467);

  return result_1694498826;

}

function contains_1191184342(t_1191184345, key_1191184346) {
  var result_1191184347 = false;

  BeforeRet: do {
    result_1191184347 = hasKey_1677721908(t_1191184345, key_1191184346);
    break BeforeRet;
  } while (false);

  return result_1191184347;

}

function highlightCode_1577061575(code_1577061576, lang_1577061577) {
  var result_1577061578 = [];

    result_1577061578 = nimCopy(null, code_1577061576, NTI33554439);

  return result_1577061578;

}

function nsuSplitWhitespace(s_654312064, maxsplit_654312065) {
  var result_654312066 = [];

    result_654312066 = nimCopy(null, [], NTI654311921);
    Label1: do {
      var xHEX60gensym77_654312072 = [];
      var lastHEX60gensym59_1694498874 = 0;
      var splitsHEX60gensym59_1694498875 = maxsplit_654312065;
      if (false) {
      failedAssertImpl_218103864(makeNimstrLit("strutils.nim(381, 9) `not (\'\\x00\' in Whitespace)` "));
      }
      
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym59_1694498874 < (s_654312064).length)) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym59_1694498874 < (s_654312064).length) && (ConstSet328[s_654312064[chckIndx(lastHEX60gensym59_1694498874, 0, (s_654312064).length - 1)]] != undefined))) break Label5;
                  lastHEX60gensym59_1694498874 = addInt(lastHEX60gensym59_1694498874, 1);
                }
            } while (false);
            var firstHEX60gensym59_1694498878 = lastHEX60gensym59_1694498874;
            Label6: do {
                Label7: while (true) {
                if (!((lastHEX60gensym59_1694498874 < (s_654312064).length) && !((ConstSet329[s_654312064[chckIndx(lastHEX60gensym59_1694498874, 0, (s_654312064).length - 1)]] != undefined)))) break Label7;
                  lastHEX60gensym59_1694498874 = addInt(lastHEX60gensym59_1694498874, 1);
                }
            } while (false);
            if ((firstHEX60gensym59_1694498878 <= subInt(lastHEX60gensym59_1694498874, 1))) {
            if ((splitsHEX60gensym59_1694498875 == 0)) {
            lastHEX60gensym59_1694498874 = (s_654312064).length;
            }
            
            xHEX60gensym77_654312072 = substr_33557922(s_654312064, firstHEX60gensym59_1694498878, subInt(lastHEX60gensym59_1694498874, 1));
            var Temporary8 = nimCopy(null, xHEX60gensym77_654312072, NTI33554439);
            result_654312066.push(Temporary8);;
            if ((splitsHEX60gensym59_1694498875 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym59_1694498875 = subInt(splitsHEX60gensym59_1694498875, 1);
            }
            
          }
      } while (false);
    } while (false);

  return result_654312066;

}

function initTable_1577061471(initialSize_1577061474) {
  var result_1577061475 = ({data: [], counter: 0});

    var correctSizeHEX60gensym30_1577061477 = slotsNeeded_1157627946(chckRange(initialSize_1577061474, 0, 2147483647));
    result_1577061475.counter = 0;
    result_1577061475.data = new Array(chckRange(correctSizeHEX60gensym30_1577061477, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_1577061477, 0, 2147483647) ; ++i) { result_1577061475.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1577061475;

}

function mustRehash_1577058789(t_1577058791) {
  var result_1577058792 = false;

    if (!((t_1577058791.counter < (t_1577058791.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1577058792 = ((mulInt((t_1577058791.data).length, 2) < mulInt(t_1577058791.counter, 3)) || (subInt((t_1577058791.data).length, t_1577058791.counter) < 4));

  return result_1577058792;

}

function rawInsert_1577059238(t_1577059242, data_1577059243, data_1577059243_Idx, key_1577059244, val_1577059245, hc_1577059246, h_1577059247) {
    data_1577059243[data_1577059243_Idx][chckIndx(h_1577059247, 0, (data_1577059243[data_1577059243_Idx]).length - 1)].Field1 = nimCopy(null, key_1577059244, NTI33554439);
    data_1577059243[data_1577059243_Idx][chckIndx(h_1577059247, 0, (data_1577059243[data_1577059243_Idx]).length - 1)].Field2 = nimCopy(null, val_1577059245, NTI33554439);
    data_1577059243[data_1577059243_Idx][chckIndx(h_1577059247, 0, (data_1577059243[data_1577059243_Idx]).length - 1)].Field0 = hc_1577059246;

  
}

function enlarge_1577058944(t_1577058947) {
    var n_1577058950 = [];
    n_1577058950 = new Array(chckRange(mulInt((t_1577058947.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1577058947.data).length, 2), 0, 2147483647) ; ++i) { n_1577058950[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1577058947.data; t_1577058947.data = n_1577058950; n_1577058950 = Temporary1;    Label2: do {
      var i_1577059014 = 0;
      var colontmp__1577059683 = 0;
      colontmp__1577059683 = (n_1577058950).length - 1;
      var res_1577059685 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_1577059685 <= colontmp__1577059683)) break Label4;
            i_1577059014 = res_1577059685;
            var eh_1577059068 = n_1577058950[chckIndx(i_1577059014, 0, (n_1577058950).length - 1)].Field0;
            if (isFilled_1157627935(eh_1577059068)) {
            var j_1577059072 = (eh_1577059068 & (t_1577058947.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_1157627935(t_1577058947.data[chckIndx(j_1577059072, 0, (t_1577058947.data).length - 1)].Field0)) break Label6;
                  j_1577059072 = nextTry_1157627938(j_1577059072, (t_1577058947.data).length - 1);
                }
            } while (false);
            rawInsert_1577059238(t_1577058947, t_1577058947, "data", n_1577058950[chckIndx(i_1577059014, 0, (n_1577058950).length - 1)].Field1, n_1577058950[chckIndx(i_1577059014, 0, (n_1577058950).length - 1)].Field2, eh_1577059068, j_1577059072);
            }
            
            res_1577059685 = addInt(res_1577059685, 1);
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_1577059407(t_1577059410, key_1577059411, hc_1577059412) {
  var result_1577059413 = 0;

  BeforeRet: do {
    if (((t_1577059410.data).length == 0)) {
    result_1577059413 = -1;
    break BeforeRet;
    }
    
    var h_1577059464 = (hc_1577059412 & (t_1577059410.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1577059410.data[chckIndx(h_1577059464, 0, (t_1577059410.data).length - 1)].Field0)) break Label2;
          if (((t_1577059410.data[chckIndx(h_1577059464, 0, (t_1577059410.data).length - 1)].Field0 == hc_1577059412) && eqStrings(t_1577059410.data[chckIndx(h_1577059464, 0, (t_1577059410.data).length - 1)].Field1, key_1577059411))) {
          result_1577059413 = h_1577059464;
          break BeforeRet;
          }
          
          h_1577059464 = nextTry_1157627938(h_1577059464, (t_1577059410.data).length - 1);
        }
    } while (false);
    result_1577059413 = subInt(-1, h_1577059464);
  } while (false);

  return result_1577059413;

}

function HEX5BHEX5DHEX3D_1577058383(t_1577058386, key_1577058387, val_1577058388) {
    if (((t_1577058386.data).length == 0)) {
    var correctSizeHEX60gensym1_1577058438 = slotsNeeded_1157627946(32);
    t_1577058386.counter = 0;
    t_1577058386.data = new Array(chckRange(correctSizeHEX60gensym1_1577058438, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1577058438, 0, 2147483647) ; ++i) { t_1577058386.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1577058443 = [0];
    var index_1577058682 = rawGet_1577058444(t_1577058386, key_1577058387, hc_1577058443, 0);
    if ((0 <= index_1577058682)) {
    t_1577058386.data[chckIndx(index_1577058682, 0, (t_1577058386.data).length - 1)].Field2 = nimCopy(null, val_1577058388, NTI33554439);
    }
    else {
      if (((t_1577058386.data).length == 0)) {
      var correctSizeHEX60gensym6_1577058784 = slotsNeeded_1157627946(32);
      t_1577058386.counter = 0;
      t_1577058386.data = new Array(chckRange(correctSizeHEX60gensym6_1577058784, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1577058784, 0, 2147483647) ; ++i) { t_1577058386.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1577058789(t_1577058386)) {
      enlarge_1577058944(t_1577058386);
      index_1577058682 = rawGetKnownHC_1577059407(t_1577058386, key_1577058387, hc_1577058443[0]);
      }
      
      index_1577058682 = subInt(-1, index_1577058682);
      rawInsert_1577059238(t_1577058386, t_1577058386, "data", key_1577058387, val_1577058388, hc_1577058443[0], index_1577058682);
      t_1577058386.counter = addInt(t_1577058386.counter, 1);
    }
    

  
}

function toTable_1577061466(pairs_1577061469) {
  var result_1577061470 = [({data: [], counter: 0})];

    result_1577061470[0] = nimCopy(result_1577061470[0], initTable_1577061471((pairs_1577061469).length), NTI1275068452);
    Label1: do {
      var key_1577061488 = [];
      var val_1577061489 = [];
      var i_1577061547 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1577061547 < (pairs_1577061469).length)) break Label3;
            key_1577061488 = pairs_1577061469[chckIndx(i_1577061547, 0, (pairs_1577061469).length - 1)]["Field0"];
            val_1577061489 = pairs_1577061469[chckIndx(i_1577061547, 0, (pairs_1577061469).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1577058383(result_1577061470[0], key_1577061488, val_1577061489);
            i_1577061547 = addInt(i_1577061547, 1);
          }
      } while (false);
    } while (false);

  return result_1577061470[0];

}

function zip_1191185044(s1_1191185047, s2_1191185048) {
  var result_1191185049 = [];

    var mHEX60gensym8_1191185056 = nimMin((s1_1191185047).length, (s2_1191185048).length);
    result_1191185049 = new Array(chckRange(mHEX60gensym8_1191185056, 0, 2147483647)); for (var i = 0 ; i < chckRange(mHEX60gensym8_1191185056, 0, 2147483647) ; ++i) { result_1191185049[i] = {Field0: [], Field1: []}; }    Label1: do {
      var iHEX60gensym8_1191185065 = 0;
      var i_486541258 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541258 < mHEX60gensym8_1191185056)) break Label3;
            iHEX60gensym8_1191185065 = i_486541258;
            var colontmp__486541256 = nimCopy(null, s1_1191185047[chckIndx(iHEX60gensym8_1191185065, 0, (s1_1191185047).length - 1)], NTI33554439);
            var colontmp__486541257 = nimCopy(null, s2_1191185048[chckIndx(iHEX60gensym8_1191185065, 0, (s2_1191185048).length - 1)], NTI33554439);
            result_1191185049[chckIndx(iHEX60gensym8_1191185065, 0, (result_1191185049).length - 1)] = nimCopy(result_1191185049[chckIndx(iHEX60gensym8_1191185065, 0, (result_1191185049).length - 1)], {Field0: nimCopy(null, colontmp__486541256, NTI33554439), Field1: nimCopy(null, colontmp__486541257, NTI33554439)}, NTI1191184245);
            i_486541258 = addInt(i_486541258, 1);
          }
      } while (false);
    } while (false);

  return result_1191185049;

}

function HEX2A_1275068560(typ_1275068561) {
  var result_1275068562 = ({kind: 0, base: 0});

    result_1275068562.kind = 2;
    result_1275068562.base = typ_1275068561;

  return result_1275068562;

}

function map_1761607853(s_1761607856, op_1761607858) {
  var result_1761607859 = [];

    result_1761607859 = new Array(chckRange((s_1761607856).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1761607856).length, 0, 2147483647) ; ++i) { result_1761607859[i] = []; }    Label1: do {
      var i_1761607874 = 0;
      var colontmp__486541261 = 0;
      colontmp__486541261 = (s_1761607856).length;
      var i_486541262 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541262 < colontmp__486541261)) break Label3;
            i_1761607874 = i_486541262;
            result_1761607859[chckIndx(i_1761607874, 0, (result_1761607859).length - 1)] = nimCopy(null, op_1761607858(s_1761607856[chckIndx(i_1761607874, 0, (s_1761607856).length - 1)]), NTI33554439);
            i_486541262 = addInt(i_486541262, 1);
          }
      } while (false);
    } while (false);

  return result_1761607859;

}

function to_1761607826(val_1761607829) {
    var Temporary1;
    
function HEX3Aanonymous_1761607832(x_1761607844) {
      var result_1761607847 = [];

        result_1761607847 = nimCopy(null, to_1694498913(x_1761607844), NTI33554439);

      return result_1761607847;

    }

  var result_1761607831 = [];

    var Temporary1 = val_1761607829;
    if (ConstSet330[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1275068420)); }
    result_1761607831 = nimCopy(null, map_1761607853(Temporary1.list, HEX3Aanonymous_1761607832), NTI1761607842);

  return result_1761607831;

}

function nsuSplitChar(s_654311915, sep_654311916, maxsplit_654311917) {
  var result_654311918 = [];

    result_654311918 = nimCopy(null, [], NTI654311762);
    Label1: do {
      var xHEX60gensym67_654311924 = [];
      var lastHEX60gensym34_486541271 = 0;
      var splitsHEX60gensym34_486541272 = maxsplit_654311917;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym34_486541271 <= (s_654311915).length)) break Label3;
            var firstHEX60gensym34_486541274 = lastHEX60gensym34_486541271;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym34_486541271 < (s_654311915).length) && !((s_654311915[chckIndx(lastHEX60gensym34_486541271, 0, (s_654311915).length - 1)] == sep_654311916)))) break Label5;
                  lastHEX60gensym34_486541271 = addInt(lastHEX60gensym34_486541271, 1);
                }
            } while (false);
            if ((splitsHEX60gensym34_486541272 == 0)) {
            lastHEX60gensym34_486541271 = (s_654311915).length;
            }
            
            xHEX60gensym67_654311924 = substr_33557922(s_654311915, firstHEX60gensym34_486541274, subInt(lastHEX60gensym34_486541271, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym67_654311924, NTI33554439);
            result_654311918.push(Temporary6);;
            if ((splitsHEX60gensym34_486541272 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym34_486541272 = subInt(splitsHEX60gensym34_486541272, 1);
            lastHEX60gensym34_486541271 = addInt(lastHEX60gensym34_486541271, 1);
          }
      } while (false);
    } while (false);

  return result_654311918;

}

function parseFloatNative_33557269(a_33557270) {
  var result_33557271 = 0.0;

    var a2_33557272 = toJSStr(a_33557270);
      result_33557271 = Number(a2_33557272);
  

  return result_33557271;

}

function npuParseFloat(s_687866268, number_687866269, number_687866269_Idx, start_687866270) {
  var result_687866271 = 0;

    var bf_687866272 = [0.0];
    result_687866271 = nimParseBiggestFloat(s_687866268, bf_687866272, 0, start_687866270);
    if (!((result_687866271 == 0))) {
    number_687866269[number_687866269_Idx] = bf_687866272[0];
    }
    

  return result_687866271;

}

function nsuParseFloat(s_654312242) {
      var Temporary1;

  var result_654312243 = [0.0];

    result_654312243[0] = 0.0;
    var L_654312244 = npuParseFloat(s_654312242, result_654312243, 0, 0);
      if (!((L_654312244 == (s_654312242).length))) Temporary1 = true; else {        Temporary1 = (L_654312244 == 0);      }    if (Temporary1) {
    raiseException({message: (makeNimstrLit("invalid float: ") || []).concat(s_654312242 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_654312243[0];

}

function filter_1744830516(self_1744830518, callback_1744830520) {
    var Temporary1;

  var result_1744830521 = ({val: [], has: false});

    if ((isSome_1728053623(self_1744830518) && !(callback_1744830520(self_1744830518.val)))) {
    Temporary1 = none_1728053772();
    }
    else {
    Temporary1 = self_1744830518;
    }
    
    result_1744830521 = nimCopy(result_1744830521, Temporary1, NTI1275068493);

  return result_1744830521;

}

function isSome_1744830659(self_1744830661) {
  var result_1744830662 = false;

    result_1744830662 = self_1744830661.has;

  return result_1744830662;

}

function isNone_1744830675(self_1744830677) {
  var result_1744830678 = false;

    result_1744830678 = !(self_1744830677.has);

  return result_1744830678;

}

function HEX3DHEX3D_1744830649(a_1744830651, b_1744830652) {
  var result_1744830653 = false;

    result_1744830653 = (((isSome_1744830659(a_1744830651) && isSome_1744830659(b_1744830652)) && (a_1744830651.val == b_1744830652.val)) || (isNone_1744830675(a_1744830651) && isNone_1744830675(b_1744830652)));

  return result_1744830653;

}

function some_1744830571(val_1744830573) {
  var result_1744830574 = ({val: false, has: false});

    result_1744830574.has = true;
    result_1744830574.val = val_1744830573;

  return result_1744830574;

}

function none_1744830585() {
  var result_1744830592 = ({val: false, has: false});

  return result_1744830592;

}

function map_1744830553(self_1744830556, callback_1744830558) {
    var Temporary1;

  var result_1744830563 = ({val: false, has: false});

    if (isSome_1728053623(self_1744830556)) {
    Temporary1 = some_1744830571(callback_1744830558(self_1744830556.val));
    }
    else {
    Temporary1 = none_1744830585();
    }
    
    result_1744830563 = nimCopy(result_1744830563, Temporary1, NTI1744830547);

  return result_1744830563;

}

function nimFloatToString_352321654(a_352321655) {
  var result_352321656 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_352321655))
      result_352321656 = a_352321655 === 0 && 1 / a_352321655 < 0 ? "-0.0" : a_352321655+".0"
    else {
      result_352321656 = a_352321655+""
      if(nimOnlyDigitsOrMinus(result_352321656)){
        result_352321656 = a_352321655+".0"
      }
    }
  

  return result_352321656;

}

function addFloat_33557373(result_33557375, result_33557375_Idx, x_33557376) {
    add_33556420(result_33557375, result_33557375_Idx, nimFloatToString_352321654(x_33557376));

  
}

function HEX24_33557369(x_33557371) {
  var result_33557372 = [[]];

    addFloat_33557373(result_33557372, 0, x_33557371);

  return result_33557372[0];

}

function nsuformatBiggestFloat(f_654313336, format_654313337, precision_654313338, decimalSep_654313339) {
  var result_654313340 = [];

    var precision_654313341 = precision_654313338;
    if ((precision_654313341 == -1)) {
    precision_654313341 = 6;
    }
    
    var res_654313342 = null;
    switch (format_654313337) {
    case 0:
      res_654313342 = f_654313336.toString();
      break;
    case 1:
      res_654313342 = f_654313336.toFixed(precision_654313341);
      break;
    case 2:
      res_654313342 = f_654313336.toExponential(precision_654313341);
      break;
    }
    result_654313340 = nimCopy(null, cstrToNimstr(res_654313342), NTI33554439);
    if (((1.0 / f_654313336) == -Infinity)) {
    result_654313340 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_654313342) || []), NTI33554439);
    }
    
    Label1: do {
      var i_654313347 = 0;
      var colontmp__486541283 = 0;
      colontmp__486541283 = (result_654313340).length;
      var i_486541284 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541284 < colontmp__486541283)) break Label3;
            i_654313347 = i_486541284;
            if ((ConstSet339[result_654313340[chckIndx(i_654313347, 0, (result_654313340).length - 1)]] != undefined)) {
            result_654313340[chckIndx(i_654313347, 0, (result_654313340).length - 1)] = decimalSep_654313339;
            }
            
            i_486541284 = addInt(i_486541284, 1);
          }
      } while (false);
    } while (false);

  return result_654313340;

}

function insert_33557862(x_33557863, x_33557863_Idx, item_33557864, i_33557865) {
    var xl_33557866 = (x_33557863[x_33557863_Idx]).length;
    (x_33557863[x_33557863_Idx].length = chckRange(addInt(xl_33557866, (item_33557864).length), 0, 2147483647));
    var j_33557867 = subInt(xl_33557866, 1);
    Label1: do {
        Label2: while (true) {
        if (!(i_33557865 <= j_33557867)) break Label2;
          x_33557863[x_33557863_Idx][chckIndx(addInt(j_33557867, (item_33557864).length), 0, (x_33557863[x_33557863_Idx]).length - 1)] = x_33557863[x_33557863_Idx][chckIndx(j_33557867, 0, (x_33557863[x_33557863_Idx]).length - 1)];
          j_33557867 = subInt(j_33557867, 1);
        }
    } while (false);
    j_33557867 = 0;
    Label3: do {
        Label4: while (true) {
        if (!(j_33557867 < (item_33557864).length)) break Label4;
          x_33557863[x_33557863_Idx][chckIndx(addInt(j_33557867, i_33557865), 0, (x_33557863[x_33557863_Idx]).length - 1)] = item_33557864[chckIndx(j_33557867, 0, (item_33557864).length - 1)];
          j_33557867 = addInt(j_33557867, 1);
        }
    } while (false);

  
}

function nsuToUpperAsciiChar(c_654311511) {
  var result_654311512 = 0;

    if ((ConstSet341[c_654311511] != undefined)) {
    result_654311512 = (c_654311511 ^ 32);
    }
    else {
      result_654311512 = c_654311511;
    }
    

  return result_654311512;

}

function nsuToUpperAsciiStr(s_654311518) {
  var result_654311519 = [];

    result_654311519 = nimCopy(null, mnewString(chckRange((s_654311518).length, 0, 2147483647)), NTI33554439);
    Label1: do {
      var iHEX60gensym11_654311525 = 0;
      var colontmp__486541289 = 0;
      colontmp__486541289 = subInt((s_654311518).length, 1);
      var res_486541290 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486541290 <= colontmp__486541289)) break Label3;
            iHEX60gensym11_654311525 = res_486541290;
            result_654311519[chckIndx(iHEX60gensym11_654311525, 0, (result_654311519).length - 1)] = nsuToUpperAsciiChar(s_654311518[chckIndx(iHEX60gensym11_654311525, 0, (s_654311518).length - 1)]);
            res_486541290 = addInt(res_486541290, 1);
          }
      } while (false);
    } while (false);

  return result_654311519;

}

function formatValue_1744830759(result_1744830761, result_1744830761_Idx, value_1744830762, specifier_1744830763) {
    var Temporary1;

  BeforeRet: do {
    if (((specifier_1744830763).length == 0)) {
    result_1744830761[result_1744830761_Idx].push.apply(result_1744830761[result_1744830761_Idx], HEX24_33557369(value_1744830762));;
    break BeforeRet;
    }
    
    var spec_1744830767 = parseStandardFormatSpecifier_1124073530(specifier_1744830763, 0, false);
    var fmode_1744830768 = 0;
    switch (spec_1744830767.typ) {
    case 101:
    case 69:
      fmode_1744830768 = 2;
      break;
    case 102:
    case 70:
      fmode_1744830768 = 1;
      break;
    case 103:
    case 71:
      fmode_1744830768 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_1744830767.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_1744830770 = [nsuformatBiggestFloat(value_1744830762, fmode_1744830768, chckRange(spec_1744830767.precision, -1, 32), 46)];
    var sign_1744830771 = false;
    if ((0.0 <= value_1744830762)) {
    if (!((spec_1744830767.sign == 45))) {
    sign_1744830771 = true;
    if ((value_1744830762 == 0.0)) {
    if (((1.0 / value_1744830762) == Infinity)) {
    insert_33557862(f_1744830770, 0, nimCharToStr(spec_1744830767.sign), 0);
    }
    
    }
    else {
    insert_33557862(f_1744830770, 0, nimCharToStr(spec_1744830767.sign), 0);
    }
    
    }
    
    }
    else {
      sign_1744830771 = true;
    }
    
    if (spec_1744830767.padWithZero) {
    var signStr_1744830772 = [];
    if (sign_1744830771) {
    signStr_1744830772 = nimCopy(null, nimCharToStr(f_1744830770[0][chckIndx(0, 0, (f_1744830770[0]).length - 1)]), NTI33554439);
    f_1744830770[0] = nimCopy(null, HEX5BHEX5D_939527322(f_1744830770[0], HEX2EHEX2E_872415312(1, 1)), NTI33554439);
    }
    
    var toFill_1744830794 = subInt(subInt(spec_1744830767.minimumWidth, (f_1744830770[0]).length), (sign_1744830771 ? 1 : 0));
    if ((0 < toFill_1744830794)) {
    f_1744830770[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1744830794, 0, 2147483647)) || []).concat(f_1744830770[0] || []), NTI33554439);
    }
    
    if (sign_1744830771) {
    f_1744830770[0] = nimCopy(null, (signStr_1744830772 || []).concat(f_1744830770[0] || []), NTI33554439);
    }
    
    }
    
    if ((spec_1744830767.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_1744830767.align;
    }
    
    var align_1744830795 = Temporary1;
    var res_1744830796 = alignString_1124073492(f_1744830770[0], spec_1744830767.minimumWidth, align_1744830795, spec_1744830767.fill);
    if ((ConstSet340[spec_1744830767.typ] != undefined)) {
    result_1744830761[result_1744830761_Idx].push.apply(result_1744830761[result_1744830761_Idx], nsuToUpperAsciiStr(res_1744830796));;
    }
    else {
    result_1744830761[result_1744830761_Idx].push.apply(result_1744830761[result_1744830761_Idx], res_1744830796);;
    }
    
  } while (false);

  
}

function drawCommands_1744830472(doc_1744830473) {

function parseFloat_1744830485(x_1744830486) {
    var Temporary1;
    var Temporary3;

  var result_1744830487 = 0.0;

++excHandler;
    Temporary3 = framePtr;
    try {
    Temporary1 = nsuParseFloat(x_1744830486);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary3;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555125))) {
    var fmtRes_1744830488 = [mnewString(0)];
    fmtRes_1744830488[0].push.apply(fmtRes_1744830488[0], makeNimstrLit("Invalid number: "));;
    formatValue_1124073634(fmtRes_1744830488, 0, x_1744830486, []);
    raiseException({message: nimCopy(null, fmtRes_1744830488[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary3;
    }
    result_1744830487 = Temporary1;

  return result_1744830487;

}

function parseXY_1744830489(xy_1744830490) {
    var Temporary2;

  var result_1744830491 = {Field0: 0.0, Field1: 0.0};

++excHandler;
    Temporary2 = framePtr;
    try {
    var xy_1744830492 = nsuSplitChar(xy_1744830490, 44, -1);
    result_1744830491.Field0 = parseFloat_1744830485(xy_1744830492[chckIndx(0, 0, (xy_1744830492).length - 1)]);
    result_1744830491.Field1 = parseFloat_1744830485(xy_1744830492[chckIndx(1, 0, (xy_1744830492).length - 1)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555125)||isObj(lastJSError.m_type, NTI33555128))) {
    var fmtRes_1744830493 = [mnewString(0)];
    fmtRes_1744830493[0].push.apply(fmtRes_1744830493[0], makeNimstrLit("Invalid coordinates: "));;
    formatValue_1124073634(fmtRes_1744830493, 0, xy_1744830490, []);
    raiseException({message: nimCopy(null, fmtRes_1744830493[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary2;
    }

  return result_1744830491;

}

function CarCmd_1744830496(a_1744830497, r_1744830498, width_1744830500, color_1744830502, fill_1744830504) {
    
function nonEmpty_1744830508(s_1744830509) {
      var result_1744830510 = false;

        result_1744830510 = !(eqStrings(s_1744830509, []));

      return result_1744830510;

    }
    var Temporary1;
    var Temporary2;

  var result_1744830505 = [];

    var a_1744830506 = parseXY_1744830489(a_1744830497);
    var r_1744830507 = parseFloat_1744830485(r_1744830498);
    if (HEX3DHEX3D_1744830649(map_1744830553(fill_1744830504, nonEmpty_1744830508), some_1744830571(true))) {
    Temporary1 = makeNimstrLit("0");
    }
    else {
    Temporary1 = makeNimstrLit("3");
    }
    
    var width_1744830703 = get_1744830691(filter_1744830516(width_1744830500, nonEmpty_1744830508), Temporary1);
    var color_1744830730 = get_1744830691(filter_1744830516(color_1744830502, nonEmpty_1744830508), makeNimstrLit("currentColor"));
    var fill_1744830757 = get_1744830691(filter_1744830516(fill_1744830504, nonEmpty_1744830508), makeNimstrLit("transparent"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744830758 = [mnewString(0)];
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit("<circle cx="));;
      formatValue_1744830759(fmtRes_1744830758, 0, (a_1744830506.Field0 + r_1744830507), []);
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit(" cy="));;
      formatValue_1744830759(fmtRes_1744830758, 0, (a_1744830506.Field1 + r_1744830507), []);
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit(" r="));;
      formatValue_1744830759(fmtRes_1744830758, 0, r_1744830507, []);
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744830758, 0, width_1744830703, []);
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744830758, 0, color_1744830730, []);
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit("\" fill=\""));;
      formatValue_1124073634(fmtRes_1744830758, 0, fill_1744830757, []);
      fmtRes_1744830758[0].push.apply(fmtRes_1744830758[0], makeNimstrLit("\" />"));;
      Temporary2 = fmtRes_1744830758[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744830505 = nimCopy(null, Temporary2, NTI33554439);

  return result_1744830505;

}
    
function HEX3Aanonymous_1744830852(arg_1744830853) {
      var result_1744830854 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Car] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744830495 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Car"), arg_1744830853, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744830854 = nimCopy(result_1744830854, {typ: 1, str: CarCmd_1744830496(to_1694498913(vals_1744830495[chckIndx(0, 0, (vals_1744830495).length - 1)]), to_1694498913(vals_1744830495[chckIndx(1, 0, (vals_1744830495).length - 1)]), to_1728053714(vals_1744830495[chckIndx(2, 0, (vals_1744830495).length - 1)]), to_1728053714(vals_1744830495[chckIndx(3, 0, (vals_1744830495).length - 1)]), to_1728053714(vals_1744830495[chckIndx(4, 0, (vals_1744830495).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744830854;

    }

function CcrCmd_1744830953(c_1744830954, r_1744830955, width_1744830957, color_1744830959, fill_1744830961) {
    
function nonEmpty_1744830965(s_1744830966) {
      var result_1744830967 = false;

        result_1744830967 = !(eqStrings(s_1744830966, []));

      return result_1744830967;

    }
    var Temporary1;
    var Temporary2;

  var result_1744830962 = [];

    var c_1744830963 = parseXY_1744830489(c_1744830954);
    var r_1744830964 = parseFloat_1744830485(r_1744830955);
    if (HEX3DHEX3D_1744830649(map_1744830553(fill_1744830961, nonEmpty_1744830965), some_1744830571(true))) {
    Temporary1 = makeNimstrLit("0");
    }
    else {
    Temporary1 = makeNimstrLit("3");
    }
    
    var width_1744831060 = get_1744830691(filter_1744830516(width_1744830957, nonEmpty_1744830965), Temporary1);
    var color_1744831087 = get_1744830691(filter_1744830516(color_1744830959, nonEmpty_1744830965), makeNimstrLit("currentColor"));
    var fill_1744831114 = get_1744830691(filter_1744830516(fill_1744830961, nonEmpty_1744830965), makeNimstrLit("transparent"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744831115 = [mnewString(0)];
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit("<circle cx="));;
      formatValue_1744830759(fmtRes_1744831115, 0, c_1744830963.Field0, []);
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit(" cy="));;
      formatValue_1744830759(fmtRes_1744831115, 0, c_1744830963.Field1, []);
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit(" r="));;
      formatValue_1744830759(fmtRes_1744831115, 0, r_1744830964, []);
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744831115, 0, width_1744831060, []);
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744831115, 0, color_1744831087, []);
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit("\" fill=\""));;
      formatValue_1124073634(fmtRes_1744831115, 0, fill_1744831114, []);
      fmtRes_1744831115[0].push.apply(fmtRes_1744831115[0], makeNimstrLit("\" />"));;
      Temporary2 = fmtRes_1744831115[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744830962 = nimCopy(null, Temporary2, NTI33554439);

  return result_1744830962;

}
    
function HEX3Aanonymous_1744831136(arg_1744831137) {
      var result_1744831138 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Ccr] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744830952 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Ccr"), arg_1744831137, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744831138 = nimCopy(result_1744831138, {typ: 1, str: CcrCmd_1744830953(to_1694498913(vals_1744830952[chckIndx(0, 0, (vals_1744830952).length - 1)]), to_1694498913(vals_1744830952[chckIndx(1, 0, (vals_1744830952).length - 1)]), to_1728053714(vals_1744830952[chckIndx(2, 0, (vals_1744830952).length - 1)]), to_1728053714(vals_1744830952[chckIndx(3, 0, (vals_1744830952).length - 1)]), to_1728053714(vals_1744830952[chckIndx(4, 0, (vals_1744830952).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744831138;

    }

function LabCmd_1744831228(a_1744831229, b_1744831230, width_1744831232, color_1744831234) {
    
function nonEmpty_1744831238(s_1744831239) {
      var result_1744831240 = false;

        result_1744831240 = !(eqStrings(s_1744831239, []));

      return result_1744831240;

    }
    var Temporary1;

  var result_1744831235 = [];

    var a_1744831236 = parseXY_1744830489(a_1744831229);
    var b_1744831237 = parseXY_1744830489(b_1744831230);
    var width_1744831267 = get_1744830691(filter_1744830516(width_1744831232, nonEmpty_1744831238), makeNimstrLit("3"));
    var color_1744831294 = get_1744830691(filter_1744830516(color_1744831234, nonEmpty_1744831238), makeNimstrLit("currentColor"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744831295 = [mnewString(0)];
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit("<line x1="));;
      formatValue_1744830759(fmtRes_1744831295, 0, a_1744831236.Field0, []);
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit(" y1="));;
      formatValue_1744830759(fmtRes_1744831295, 0, a_1744831236.Field1, []);
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit(" x2="));;
      formatValue_1744830759(fmtRes_1744831295, 0, b_1744831237.Field0, []);
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit(" y2="));;
      formatValue_1744830759(fmtRes_1744831295, 0, b_1744831237.Field1, []);
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744831295, 0, width_1744831267, []);
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744831295, 0, color_1744831294, []);
      fmtRes_1744831295[0].push.apply(fmtRes_1744831295[0], makeNimstrLit("\" />"));;
      Temporary1 = fmtRes_1744831295[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744831235 = nimCopy(null, Temporary1, NTI33554439);

  return result_1744831235;

}
    
function HEX3Aanonymous_1744831321(arg_1744831322) {
      var result_1744831323 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Lab] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744831227 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Lab"), arg_1744831322, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744831323 = nimCopy(result_1744831323, {typ: 1, str: LabCmd_1744831228(to_1694498913(vals_1744831227[chckIndx(0, 0, (vals_1744831227).length - 1)]), to_1694498913(vals_1744831227[chckIndx(1, 0, (vals_1744831227).length - 1)]), to_1728053714(vals_1744831227[chckIndx(2, 0, (vals_1744831227).length - 1)]), to_1728053714(vals_1744831227[chckIndx(3, 0, (vals_1744831227).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744831323;

    }

function LauCmd_1744831412(a_1744831413, u_1744831414, width_1744831416, color_1744831418) {
    
function nonEmpty_1744831422(s_1744831423) {
      var result_1744831424 = false;

        result_1744831424 = !(eqStrings(s_1744831423, []));

      return result_1744831424;

    }
    var Temporary1;

  var result_1744831419 = [];

    var a_1744831420 = parseXY_1744830489(a_1744831413);
    var u_1744831421 = parseXY_1744830489(u_1744831414);
    var width_1744831451 = get_1744830691(filter_1744830516(width_1744831416, nonEmpty_1744831422), makeNimstrLit("3"));
    var color_1744831478 = get_1744830691(filter_1744830516(color_1744831418, nonEmpty_1744831422), makeNimstrLit("currentColor"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744831479 = [mnewString(0)];
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit("<line x1="));;
      formatValue_1744830759(fmtRes_1744831479, 0, a_1744831420.Field0, []);
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit(" y1="));;
      formatValue_1744830759(fmtRes_1744831479, 0, a_1744831420.Field1, []);
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit(" x2="));;
      formatValue_1744830759(fmtRes_1744831479, 0, (a_1744831420.Field0 + u_1744831421.Field0), []);
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit(" y2="));;
      formatValue_1744830759(fmtRes_1744831479, 0, (a_1744831420.Field1 + u_1744831421.Field1), []);
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744831479, 0, width_1744831451, []);
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744831479, 0, color_1744831478, []);
      fmtRes_1744831479[0].push.apply(fmtRes_1744831479[0], makeNimstrLit("\" />"));;
      Temporary1 = fmtRes_1744831479[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744831419 = nimCopy(null, Temporary1, NTI33554439);

  return result_1744831419;

}
    
function HEX3Aanonymous_1744831505(arg_1744831506) {
      var result_1744831507 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Lau] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744831411 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Lau"), arg_1744831506, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744831507 = nimCopy(result_1744831507, {typ: 1, str: LauCmd_1744831412(to_1694498913(vals_1744831411[chckIndx(0, 0, (vals_1744831411).length - 1)]), to_1694498913(vals_1744831411[chckIndx(1, 0, (vals_1744831411).length - 1)]), to_1728053714(vals_1744831411[chckIndx(2, 0, (vals_1744831411).length - 1)]), to_1728053714(vals_1744831411[chckIndx(3, 0, (vals_1744831411).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744831507;

    }

function LcuCmd_1744831587(c_1744831588, u_1744831589, width_1744831591, color_1744831593) {
    
function nonEmpty_1744831597(s_1744831598) {
      var result_1744831599 = false;

        result_1744831599 = !(eqStrings(s_1744831598, []));

      return result_1744831599;

    }
    var Temporary1;

  var result_1744831594 = [];

    var c_1744831595 = parseXY_1744830489(c_1744831588);
    var u_1744831596 = parseXY_1744830489(u_1744831589);
    var width_1744831626 = get_1744830691(filter_1744830516(width_1744831591, nonEmpty_1744831597), makeNimstrLit("3"));
    var color_1744831653 = get_1744830691(filter_1744830516(color_1744831593, nonEmpty_1744831597), makeNimstrLit("currentColor"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744831654 = [mnewString(0)];
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit("<line x1="));;
      formatValue_1744830759(fmtRes_1744831654, 0, (c_1744831595.Field0 - u_1744831596.Field0), []);
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit(" y1="));;
      formatValue_1744830759(fmtRes_1744831654, 0, (c_1744831595.Field1 - u_1744831596.Field1), []);
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit(" x2="));;
      formatValue_1744830759(fmtRes_1744831654, 0, (c_1744831595.Field0 + u_1744831596.Field0), []);
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit(" y2="));;
      formatValue_1744830759(fmtRes_1744831654, 0, (c_1744831595.Field1 + u_1744831596.Field1), []);
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744831654, 0, width_1744831626, []);
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744831654, 0, color_1744831653, []);
      fmtRes_1744831654[0].push.apply(fmtRes_1744831654[0], makeNimstrLit("\" />"));;
      Temporary1 = fmtRes_1744831654[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744831594 = nimCopy(null, Temporary1, NTI33554439);

  return result_1744831594;

}
    
function HEX3Aanonymous_1744831680(arg_1744831681) {
      var result_1744831682 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Lcu] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744831586 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Lcu"), arg_1744831681, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744831682 = nimCopy(result_1744831682, {typ: 1, str: LcuCmd_1744831587(to_1694498913(vals_1744831586[chckIndx(0, 0, (vals_1744831586).length - 1)]), to_1694498913(vals_1744831586[chckIndx(1, 0, (vals_1744831586).length - 1)]), to_1728053714(vals_1744831586[chckIndx(2, 0, (vals_1744831586).length - 1)]), to_1728053714(vals_1744831586[chckIndx(3, 0, (vals_1744831586).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744831682;

    }

function RabCmd_1744831762(a_1744831763, b_1744831764, width_1744831766, color_1744831768, fill_1744831770) {
    
function nonEmpty_1744831774(s_1744831775) {
      var result_1744831776 = false;

        result_1744831776 = !(eqStrings(s_1744831775, []));

      return result_1744831776;

    }
    var Temporary1;
    var Temporary2;

  var result_1744831771 = [];

    var a_1744831772 = parseXY_1744830489(a_1744831763);
    var b_1744831773 = parseXY_1744830489(b_1744831764);
    if (HEX3DHEX3D_1744830649(map_1744830553(fill_1744831770, nonEmpty_1744831774), some_1744830571(true))) {
    Temporary1 = makeNimstrLit("0");
    }
    else {
    Temporary1 = makeNimstrLit("3");
    }
    
    var width_1744831869 = get_1744830691(filter_1744830516(width_1744831766, nonEmpty_1744831774), Temporary1);
    var color_1744831896 = get_1744830691(filter_1744830516(color_1744831768, nonEmpty_1744831774), makeNimstrLit("currentColor"));
    var fill_1744831923 = get_1744830691(filter_1744830516(fill_1744831770, nonEmpty_1744831774), makeNimstrLit("transparent"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744831924 = [mnewString(0)];
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit("<rect x="));;
      formatValue_1744830759(fmtRes_1744831924, 0, a_1744831772.Field0, []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit(" y="));;
      formatValue_1744830759(fmtRes_1744831924, 0, a_1744831772.Field1, []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit(" width="));;
      formatValue_1744830759(fmtRes_1744831924, 0, (b_1744831773.Field0 - a_1744831772.Field0), []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit(" height="));;
      formatValue_1744830759(fmtRes_1744831924, 0, (b_1744831773.Field1 - a_1744831772.Field1), []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744831924, 0, width_1744831869, []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744831924, 0, color_1744831896, []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit("\" fill=\""));;
      formatValue_1124073634(fmtRes_1744831924, 0, fill_1744831923, []);
      fmtRes_1744831924[0].push.apply(fmtRes_1744831924[0], makeNimstrLit("\" />"));;
      Temporary2 = fmtRes_1744831924[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744831771 = nimCopy(null, Temporary2, NTI33554439);

  return result_1744831771;

}
    
function HEX3Aanonymous_1744831950(arg_1744831951) {
      var result_1744831952 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Rab] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744831761 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Rab"), arg_1744831951, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744831952 = nimCopy(result_1744831952, {typ: 1, str: RabCmd_1744831762(to_1694498913(vals_1744831761[chckIndx(0, 0, (vals_1744831761).length - 1)]), to_1694498913(vals_1744831761[chckIndx(1, 0, (vals_1744831761).length - 1)]), to_1728053714(vals_1744831761[chckIndx(2, 0, (vals_1744831761).length - 1)]), to_1728053714(vals_1744831761[chckIndx(3, 0, (vals_1744831761).length - 1)]), to_1728053714(vals_1744831761[chckIndx(4, 0, (vals_1744831761).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744831952;

    }

function RauCmd_1744832042(a_1744832043, u_1744832044, width_1744832046, color_1744832048, fill_1744832050) {
    
function nonEmpty_1744832054(s_1744832055) {
      var result_1744832056 = false;

        result_1744832056 = !(eqStrings(s_1744832055, []));

      return result_1744832056;

    }
    var Temporary1;
    var Temporary2;

  var result_1744832051 = [];

    var a_1744832052 = parseXY_1744830489(a_1744832043);
    var u_1744832053 = parseXY_1744830489(u_1744832044);
    if (HEX3DHEX3D_1744830649(map_1744830553(fill_1744832050, nonEmpty_1744832054), some_1744830571(true))) {
    Temporary1 = makeNimstrLit("0");
    }
    else {
    Temporary1 = makeNimstrLit("3");
    }
    
    var width_1744832149 = get_1744830691(filter_1744830516(width_1744832046, nonEmpty_1744832054), Temporary1);
    var color_1744832176 = get_1744830691(filter_1744830516(color_1744832048, nonEmpty_1744832054), makeNimstrLit("currentColor"));
    var fill_1744832203 = get_1744830691(filter_1744830516(fill_1744832050, nonEmpty_1744832054), makeNimstrLit("transparent"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744832204 = [mnewString(0)];
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit("<rect x="));;
      formatValue_1744830759(fmtRes_1744832204, 0, a_1744832052.Field0, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit(" y="));;
      formatValue_1744830759(fmtRes_1744832204, 0, a_1744832052.Field1, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit(" width="));;
      formatValue_1744830759(fmtRes_1744832204, 0, u_1744832053.Field0, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit(" height="));;
      formatValue_1744830759(fmtRes_1744832204, 0, u_1744832053.Field1, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744832204, 0, width_1744832149, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744832204, 0, color_1744832176, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit("\" fill=\""));;
      formatValue_1124073634(fmtRes_1744832204, 0, fill_1744832203, []);
      fmtRes_1744832204[0].push.apply(fmtRes_1744832204[0], makeNimstrLit("\" />"));;
      Temporary2 = fmtRes_1744832204[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744832051 = nimCopy(null, Temporary2, NTI33554439);

  return result_1744832051;

}
    
function HEX3Aanonymous_1744832230(arg_1744832231) {
      var result_1744832232 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Rau] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744832041 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Rau"), arg_1744832231, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744832232 = nimCopy(result_1744832232, {typ: 1, str: RauCmd_1744832042(to_1694498913(vals_1744832041[chckIndx(0, 0, (vals_1744832041).length - 1)]), to_1694498913(vals_1744832041[chckIndx(1, 0, (vals_1744832041).length - 1)]), to_1728053714(vals_1744832041[chckIndx(2, 0, (vals_1744832041).length - 1)]), to_1728053714(vals_1744832041[chckIndx(3, 0, (vals_1744832041).length - 1)]), to_1728053714(vals_1744832041[chckIndx(4, 0, (vals_1744832041).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744832232;

    }

function RcuCmd_1744832322(c_1744832323, u_1744832324, width_1744832326, color_1744832328, fill_1744832330) {
    
function nonEmpty_1744832334(s_1744832335) {
      var result_1744832336 = false;

        result_1744832336 = !(eqStrings(s_1744832335, []));

      return result_1744832336;

    }
    var Temporary1;
    var Temporary2;

  var result_1744832331 = [];

    var c_1744832332 = parseXY_1744830489(c_1744832323);
    var u_1744832333 = parseXY_1744830489(u_1744832324);
    if (HEX3DHEX3D_1744830649(map_1744830553(fill_1744832330, nonEmpty_1744832334), some_1744830571(true))) {
    Temporary1 = makeNimstrLit("0");
    }
    else {
    Temporary1 = makeNimstrLit("3");
    }
    
    var width_1744832429 = get_1744830691(filter_1744830516(width_1744832326, nonEmpty_1744832334), Temporary1);
    var color_1744832456 = get_1744830691(filter_1744830516(color_1744832328, nonEmpty_1744832334), makeNimstrLit("currentColor"));
    var fill_1744832483 = get_1744830691(filter_1744830516(fill_1744832330, nonEmpty_1744832334), makeNimstrLit("transparent"));
    switch (doc_1744830473.target) {
    case 0:
      var fmtRes_1744832484 = [mnewString(0)];
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit("<rect x="));;
      formatValue_1744830759(fmtRes_1744832484, 0, (c_1744832332.Field0 - u_1744832333.Field0), []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit(" y="));;
      formatValue_1744830759(fmtRes_1744832484, 0, (c_1744832332.Field1 - u_1744832333.Field1), []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit(" width="));;
      formatValue_1744830759(fmtRes_1744832484, 0, (2.0 * u_1744832333.Field0), []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit(" height="));;
      formatValue_1744830759(fmtRes_1744832484, 0, (2.0 * u_1744832333.Field1), []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit(" stroke-width=\""));;
      formatValue_1124073634(fmtRes_1744832484, 0, width_1744832429, []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit("\" stroke=\""));;
      formatValue_1124073634(fmtRes_1744832484, 0, color_1744832456, []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit("\" fill=\""));;
      formatValue_1124073634(fmtRes_1744832484, 0, fill_1744832483, []);
      fmtRes_1744832484[0].push.apply(fmtRes_1744832484[0], makeNimstrLit("\" />"));;
      Temporary2 = fmtRes_1744832484[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1744832331 = nimCopy(null, Temporary2, NTI33554439);

  return result_1744832331;

}
    
function HEX3Aanonymous_1744832510(arg_1744832511) {
      var result_1744832512 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1744830473.safeMode) {
        raiseException({message: makeNimstrLit("The [Rcu] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1744832321 = expandArguments_1711276046(doc_1744830473, makeNimstrLit("Rcu"), arg_1744832511, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX3F_1275068557(0)]);
        result_1744832512 = nimCopy(result_1744832512, {typ: 1, str: RcuCmd_1744832322(to_1694498913(vals_1744832321[chckIndx(0, 0, (vals_1744832321).length - 1)]), to_1694498913(vals_1744832321[chckIndx(1, 0, (vals_1744832321).length - 1)]), to_1728053714(vals_1744832321[chckIndx(2, 0, (vals_1744832321).length - 1)]), to_1728053714(vals_1744832321[chckIndx(3, 0, (vals_1744832321).length - 1)]), to_1728053714(vals_1744832321[chckIndx(4, 0, (vals_1744832321).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1744832512;

    }

  var result_1744830476 = ({data: [], counter: 0});

    var commands_1744830479 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Car"), HEX3Aanonymous_1744830852);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Ccr"), HEX3Aanonymous_1744831136);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Lab"), HEX3Aanonymous_1744831321);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Lau"), HEX3Aanonymous_1744831505);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Lcu"), HEX3Aanonymous_1744831680);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Rab"), HEX3Aanonymous_1744831950);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Rau"), HEX3Aanonymous_1744832230);
    HEX5BHEX5DHEX3D_1694498976(commands_1744830479[0], makeNimstrLit("Rcu"), HEX3Aanonymous_1744832510);
    result_1744830476 = nimCopy(result_1744830476, commands_1744830479[0], NTI1275068467);

  return result_1744830476;

}

function map_1191186855(s_1191186858, op_1191186860) {
  var result_1191186861 = [];

    result_1191186861 = new Array(chckRange((s_1191186858).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1191186858).length, 0, 2147483647) ; ++i) { result_1191186861[i] = ({typ: 0, str: [], list: [], opt: ({val: null})}); }    Label1: do {
      var i_1191186876 = 0;
      var colontmp__486541301 = 0;
      colontmp__486541301 = (s_1191186858).length;
      var i_486541302 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541302 < colontmp__486541301)) break Label3;
            i_1191186876 = i_486541302;
            result_1191186861[chckIndx(i_1191186876, 0, (result_1191186861).length - 1)] = nimCopy(result_1191186861[chckIndx(i_1191186876, 0, (result_1191186861).length - 1)], op_1191186860(s_1191186858[chckIndx(i_1191186876, 0, (s_1191186858).length - 1)]), NTI1275068421);
            i_486541302 = addInt(i_486541302, 1);
          }
      } while (false);
    } while (false);

  return result_1191186861;

}

function to_1191186840(val_1191186842) {
  var result_1191186844 = ({typ: 0, str: [], list: [], opt: ({val: null})});

    result_1191186844 = nimCopy(result_1191186844, val_1191186842, NTI1275068421);

  return result_1191186844;

}

function to_1191186827(val_1191186830) {
    var Temporary1;
    
function HEX3Aanonymous_1191186833(x_1191186846) {
      var result_1191186849 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        result_1191186849 = nimCopy(result_1191186849, to_1191186840(x_1191186846), NTI1275068421);

      return result_1191186849;

    }

  var result_1191186832 = [];

    var Temporary1 = val_1191186830;
    if (ConstSet344[Temporary1.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'list\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary1.typ, NTI1275068420)); }
    result_1191186832 = nimCopy(null, map_1191186855(Temporary1.list, HEX3Aanonymous_1191186833), NTI1191185730);

  return result_1191186832;

}

function nosisAbsolute(path_1476395149) {
  var result_1476395150 = false;

  BeforeRet: do {
    if (((path_1476395149).length == 0)) {
    result_1476395150 = false;
    break BeforeRet;
    }
    
    result_1476395150 = (path_1476395149[chckIndx(0, 0, (path_1476395149).length - 1)] == 47);
  } while (false);

  return result_1476395150;

}

function HEX5BHEX5D_33557725(s_33557726, i_33557727) {
  var result_33557728 = 0;

    result_33557728 = s_33557726[chckIndx(subInt((s_33557726).length, i_33557727), 0, (s_33557726).length - 1)];

  return result_33557728;

}

function normalizePathEnd_1476395054(path_1476395055, path_1476395055_Idx, trailingSep_1476395056) {
            var Temporary3;
            var Temporary4;

  BeforeRet: do {
    if (((path_1476395055[path_1476395055_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1476395057 = (path_1476395055[path_1476395055_Idx]).length;
    Label1: do {
        Label2: while (true) {
        if (!(1 <= i_1476395057)) break Label2;
          if ((ConstSet347[path_1476395055[path_1476395055_Idx][chckIndx(subInt(i_1476395057, 1), 0, (path_1476395055[path_1476395055_Idx]).length - 1)]] != undefined)) {
          i_1476395057 = subInt(i_1476395057, 1);
          }
          else {
            if (!(path_1476395055[path_1476395055_Idx][chckIndx(subInt(i_1476395057, 1), 0, (path_1476395055[path_1476395055_Idx]).length - 1)] == 46)) Temporary4 = false; else {              Temporary4 = (2 <= i_1476395057);            }            if (!Temporary4) Temporary3 = false; else {              Temporary3 = (ConstSet348[path_1476395055[path_1476395055_Idx][chckIndx(subInt(i_1476395057, 2), 0, (path_1476395055[path_1476395055_Idx]).length - 1)]] != undefined);            }          if (Temporary3) {
          i_1476395057 = subInt(i_1476395057, 1);
          }
          else {
            break Label1;
          }
          }
        }
    } while (false);
    if (trailingSep_1476395056) {
    (path_1476395055[path_1476395055_Idx].length = chckRange(i_1476395057, 0, 2147483647));
    addChar(path_1476395055[path_1476395055_Idx], 47);;
    }
    else {
    if ((0 < i_1476395057)) {
    (path_1476395055[path_1476395055_Idx].length = chckRange(i_1476395057, 0, 2147483647));
    }
    else {
      path_1476395055[path_1476395055_Idx] = nimCopy(null, makeNimstrLit("/"), NTI33554439);
    }
    }
  } while (false);

  
}

function hasNext_1493172230(it_1493172231, x_1493172232) {
  var result_1493172233 = false;

    result_1493172233 = (it_1493172231.i < (x_1493172232).length);

  return result_1493172233;

}

function next_1493172234(it_1493172235, x_1493172236) {
      var Temporary1;
            var Temporary4;
          var Temporary7;

  var result_1493172237 = {Field0: 0, Field1: 0};

    it_1493172235.prev = it_1493172235.i;
      if (!!(it_1493172235.notFirst)) Temporary1 = false; else {        Temporary1 = (ConstSet350[x_1493172236[chckIndx(it_1493172235.i, 0, (x_1493172236).length - 1)]] != undefined);      }    if (Temporary1) {
    it_1493172235.i = addInt(it_1493172235.i, 1);
    }
    else {
      Label2: do {
          Label3: while (true) {
            if (!(it_1493172235.i < (x_1493172236).length)) Temporary4 = false; else {              Temporary4 = !((ConstSet351[x_1493172236[chckIndx(it_1493172235.i, 0, (x_1493172236).length - 1)]] != undefined));            }          if (!Temporary4) break Label3;
            it_1493172235.i = addInt(it_1493172235.i, 1);
          }
      } while (false);
    }
    
    if ((it_1493172235.prev < it_1493172235.i)) {
    var colontmp__1392508938 = it_1493172235.prev;
    var colontmp__1392508939 = subInt(it_1493172235.i, 1);
    result_1493172237 = nimCopy(result_1493172237, {Field0: colontmp__1392508938, Field1: colontmp__1392508939}, NTI1493172231);
    }
    else {
    if (hasNext_1493172230(it_1493172235, x_1493172236)) {
    result_1493172237 = nimCopy(result_1493172237, next_1493172234(it_1493172235, x_1493172236), NTI1493172231);
    }
    }
    Label5: do {
        Label6: while (true) {
          if (!(it_1493172235.i < (x_1493172236).length)) Temporary7 = false; else {            Temporary7 = (ConstSet352[x_1493172236[chckIndx(it_1493172235.i, 0, (x_1493172236).length - 1)]] != undefined);          }        if (!Temporary7) break Label6;
          it_1493172235.i = addInt(it_1493172235.i, 1);
        }
    } while (false);
    it_1493172235.notFirst = true;

  return result_1493172237;

}

function isSlash_1493172287(x_1493172288, bounds_1493172289) {
  var result_1493172290 = false;

    result_1493172290 = ((bounds_1493172289["Field1"] == bounds_1493172289["Field0"]) && (ConstSet353[x_1493172288[chckIndx(bounds_1493172289["Field0"], 0, (x_1493172288).length - 1)]] != undefined));

  return result_1493172290;

}

function isDotDot_1493172283(x_1493172284, bounds_1493172285) {
  var result_1493172286 = false;

    result_1493172286 = (((bounds_1493172285["Field1"] == addInt(bounds_1493172285["Field0"], 1)) && (x_1493172284[chckIndx(bounds_1493172285["Field0"], 0, (x_1493172284).length - 1)] == 46)) && (x_1493172284[chckIndx(addInt(bounds_1493172285["Field0"], 1), 0, (x_1493172284).length - 1)] == 46));

  return result_1493172286;

}

function isDot_1493172279(x_1493172280, bounds_1493172281) {
  var result_1493172282 = false;

    result_1493172282 = ((bounds_1493172281["Field1"] == bounds_1493172281["Field0"]) && (x_1493172280[chckIndx(bounds_1493172281["Field0"], 0, (x_1493172280).length - 1)] == 46));

  return result_1493172282;

}

function addNormalizePath_1493172295(x_1493172296, result_1493172297, result_1493172297_Idx, state_1493172298, state_1493172298_Idx, dirSep_1493172299) {
            var Temporary5;
            var Temporary6;
                var Temporary9;
              var Temporary10;
            var Temporary11;
      var Temporary12;

    var it_1493172300 = [({i: 0, prev: 0, notFirst: false})];
    it_1493172300[0].notFirst = (0 < (state_1493172298[state_1493172298_Idx] >> 1));
    if (it_1493172300[0].notFirst) {
    Label1: do {
        Label2: while (true) {
        if (!((it_1493172300[0].i < (x_1493172296).length) && (ConstSet349[x_1493172296[chckIndx(it_1493172300[0].i, 0, (x_1493172296).length - 1)]] != undefined))) break Label2;
          it_1493172300[0].i = addInt(it_1493172300[0].i, 1);
        }
    } while (false);
    }
    
    Label3: do {
        Label4: while (true) {
        if (!hasNext_1493172230(it_1493172300[0], x_1493172296)) break Label4;
          var b_1493172313 = next_1493172234(it_1493172300[0], x_1493172296);
            if (!((state_1493172298[state_1493172298_Idx] >> 1) == 0)) Temporary5 = false; else {              Temporary5 = isSlash_1493172287(x_1493172296, b_1493172313);            }          if (Temporary5) {
            if (((result_1493172297[result_1493172297_Idx]).length == 0)) Temporary6 = true; else {              Temporary6 = !((ConstSet354[result_1493172297[result_1493172297_Idx][chckIndx(subInt((result_1493172297[result_1493172297_Idx]).length, 1), 0, (result_1493172297[result_1493172297_Idx]).length - 1)]] != undefined));            }          if (Temporary6) {
          addChar(result_1493172297[result_1493172297_Idx], dirSep_1493172299);;
          }
          
          state_1493172298[state_1493172298_Idx] = (state_1493172298[state_1493172298_Idx] | 1);
          }
          else {
          if (isDotDot_1493172283(x_1493172296, b_1493172313)) {
          if ((1 <= (state_1493172298[state_1493172298_Idx] >> 1))) {
          var d_1493172326 = (result_1493172297[result_1493172297_Idx]).length;
          Label7: do {
              Label8: while (true) {
                if (!((state_1493172298[state_1493172298_Idx] & 1) < subInt(d_1493172326, 1))) Temporary9 = false; else {                  Temporary9 = !((ConstSet355[result_1493172297[result_1493172297_Idx][chckIndx(subInt(d_1493172326, 1), 0, (result_1493172297[result_1493172297_Idx]).length - 1)]] != undefined));                }              if (!Temporary9) break Label8;
                d_1493172326 = subInt(d_1493172326, 1);
              }
          } while (false);
          if ((0 < d_1493172326)) {
          (result_1493172297[result_1493172297_Idx].length = chckRange(subInt(d_1493172326, 1), 0, 2147483647));
          state_1493172298[state_1493172298_Idx] = subInt(state_1493172298[state_1493172298_Idx], 2);
          }
          
          }
          else {
              if (!(0 < (result_1493172297[result_1493172297_Idx]).length)) Temporary10 = false; else {                Temporary10 = !((ConstSet356[result_1493172297[result_1493172297_Idx][chckIndx(subInt((result_1493172297[result_1493172297_Idx]).length, 1), 0, (result_1493172297[result_1493172297_Idx]).length - 1)]] != undefined));              }            if (Temporary10) {
            addChar(result_1493172297[result_1493172297_Idx], dirSep_1493172299);;
            }
            
            result_1493172297[result_1493172297_Idx].push.apply(result_1493172297[result_1493172297_Idx], substr_33557922(x_1493172296, b_1493172313["Field0"], b_1493172313["Field1"]));;
          }
          
          }
          else {
          if (isDot_1493172279(x_1493172296, b_1493172313)) {
          }
          else {
          if ((b_1493172313["Field0"] <= b_1493172313["Field1"])) {
            if (!(0 < (result_1493172297[result_1493172297_Idx]).length)) Temporary11 = false; else {              Temporary11 = !((ConstSet357[result_1493172297[result_1493172297_Idx][chckIndx(subInt((result_1493172297[result_1493172297_Idx]).length, 1), 0, (result_1493172297[result_1493172297_Idx]).length - 1)]] != undefined));            }          if (Temporary11) {
          addChar(result_1493172297[result_1493172297_Idx], dirSep_1493172299);;
          }
          
          result_1493172297[result_1493172297_Idx].push.apply(result_1493172297[result_1493172297_Idx], substr_33557922(x_1493172296, b_1493172313["Field0"], b_1493172313["Field1"]));;
          state_1493172298[state_1493172298_Idx] = addInt(state_1493172298[state_1493172298_Idx], 2);
          }
          }}}
        }
    } while (false);
      if (!eqStrings(result_1493172297[result_1493172297_Idx], [])) Temporary12 = false; else {        Temporary12 = !(eqStrings(x_1493172296, []));      }    if (Temporary12) {
    result_1493172297[result_1493172297_Idx] = nimCopy(null, makeNimstrLit("."), NTI33554439);
    }
    

  
}

function joinPathImpl_1476395085(result_1476395086, result_1476395086_Idx, state_1476395087, state_1476395087_Idx, tail_1476395088) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
        var Temporary4;
          var Temporary5;

    if (!(0 < (tail_1476395088).length)) Temporary2 = false; else {      Temporary2 = (ConstSet345[HEX5BHEX5D_33557725(tail_1476395088, 1)] != undefined);    }    if (Temporary2) Temporary1 = true; else {      if (!((tail_1476395088).length == 0)) Temporary3 = false; else {        if (!(0 < (result_1476395086[result_1476395086_Idx]).length)) Temporary4 = false; else {          Temporary4 = (ConstSet346[(Temporary5 = HEX5BHEX5D_33557758(result_1476395086, result_1476395086_Idx, 1), Temporary5)[0][Temporary5[1]]] != undefined);        }        Temporary3 = Temporary4;      }      Temporary1 = Temporary3;    }    var trailingSep_1476395097 = Temporary1;
    normalizePathEnd_1476395054(result_1476395086, result_1476395086_Idx, false);
    addNormalizePath_1493172295(tail_1476395088, result_1476395086, result_1476395086_Idx, state_1476395087, state_1476395087_Idx, 47);
    normalizePathEnd_1476395054(result_1476395086, result_1476395086_Idx, trailingSep_1476395097);

  
}

function nosjoinPath(head_1476395099, tail_1476395100) {
  var result_1476395101 = [[]];

    result_1476395101[0] = nimCopy(null, mnewString(0), NTI33554439);
    var state_1476395102 = [0];
    joinPathImpl_1476395085(result_1476395101, 0, state_1476395102, 0, head_1476395099);
    joinPathImpl_1476395085(result_1476395101, 0, state_1476395102, 0, tail_1476395100);

  return result_1476395101[0];

}

function absolutePath_1476395650(path_1476395651, root_1476395652) {
    var Temporary1;

  var result_1476395653 = [];

    if (nosisAbsolute(path_1476395651)) {
    Temporary1 = path_1476395651;
    }
    else {
      if (!(nosisAbsolute(root_1476395652))) {
      raiseException({message: (makeNimstrLit("The specified root is not absolute: ") || []).concat(root_1476395652 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1476395652, path_1476395651);
    }
    
    result_1476395653 = nimCopy(null, Temporary1, NTI33554439);

  return result_1476395653;

}

function nosgetCurrentDir() {
  var result_1476395642 = [];

    if (true) {
    failedAssertImpl_218103864(makeNimstrLit("os.nim(1379, 16) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1476395642;

}

function npegsmatchLenCapture(s_1207962403, pattern_1207962404, matches_1207962405, start_1207962406) {
  var result_1207962407 = 0;

    var c_1207962408 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    c_1207962408[0].origStart = start_1207962406;
    result_1207962407 = npegsrawMatch(s_1207962403, pattern_1207962404, start_1207962406, c_1207962408[0]);
    if ((0 <= result_1207962407)) {
    Label1: do {
      var kHEX60gensym565_1207962416 = 0;
      var colontmp__486541309 = 0;
      colontmp__486541309 = subInt(c_1207962408[0].ml, 1);
      var res_486541310 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486541310 <= colontmp__486541309)) break Label3;
            kHEX60gensym565_1207962416 = res_486541310;
            var startIdxHEX60gensym565_1207962417 = c_1207962408[0].matches[chckIndx(kHEX60gensym565_1207962416, 0, (c_1207962408[0].matches).length - 1)]["Field0"];
            var endIdxHEX60gensym565_1207962418 = c_1207962408[0].matches[chckIndx(kHEX60gensym565_1207962416, 0, (c_1207962408[0].matches).length - 1)]["Field1"];
            if (!((startIdxHEX60gensym565_1207962417 == -1))) {
            matches_1207962405[chckIndx(kHEX60gensym565_1207962416, 0, (matches_1207962405).length - 1)] = nimCopy(null, substr_33557922(s_1207962403, startIdxHEX60gensym565_1207962417, endIdxHEX60gensym565_1207962418), NTI33554439);
            }
            else {
              matches_1207962405[chckIndx(kHEX60gensym565_1207962416, 0, (matches_1207962405).length - 1)] = nimCopy(null, [], NTI33554439);
            }
            
            res_486541310 = addInt(res_486541310, 1);
          }
      } while (false);
    } while (false);
    }
    

  return result_1207962407;

}

function npegsmatchCapture(s_1207962435, pattern_1207962436, matches_1207962437, start_1207962438) {
  var result_1207962439 = false;

    result_1207962439 = !((npegsmatchLenCapture(s_1207962435, pattern_1207962436, matches_1207962437, start_1207962438) == -1));

  return result_1207962439;

}

function HEX2F_1476395124(head_1476395125, tail_1476395126) {
  var result_1476395127 = [];

    result_1476395127 = nimCopy(null, nosjoinPath(head_1476395125, tail_1476395126), NTI33554439);

  return result_1476395127;

}

function nossplitPath(path_1476395129) {
    var Temporary4;

  var result_1476395132 = {Field0: [], Field1: []};

    var sepPos_1476395133 = -1;
    Label1: do {
      var i_1476395139 = 0;
      var colontmp__486541313 = 0;
      colontmp__486541313 = subInt((path_1476395129).length, 1);
      var res_486541314 = colontmp__486541313;
      Label2: do {
          Label3: while (true) {
          if (!(0 <= res_486541314)) break Label3;
            i_1476395139 = res_486541314;
            if ((ConstSet359[path_1476395129[chckIndx(i_1476395139, 0, (path_1476395129).length - 1)]] != undefined)) {
            sepPos_1476395133 = i_1476395139;
            break Label1;
            }
            
            res_486541314 = subInt(res_486541314, 1);
          }
      } while (false);
    } while (false);
    if ((0 <= sepPos_1476395133)) {
    if ((1 <= sepPos_1476395133)) {
    Temporary4 = subInt(sepPos_1476395133, 1);
    }
    else {
    Temporary4 = 0;
    }
    
    result_1476395132.Field0 = nimCopy(null, substr_33557922(path_1476395129, 0, Temporary4), NTI33554439);
    result_1476395132.Field1 = nimCopy(null, substr_33557934(path_1476395129, addInt(sepPos_1476395133, 1)), NTI33554439);
    }
    else {
      result_1476395132.Field0 = nimCopy(null, [], NTI33554439);
      result_1476395132.Field1 = nimCopy(null, path_1476395129, NTI33554439);
    }
    

  return result_1476395132;

}

function open_452985194(f_452985195, f_452985195_Idx, filename_452985196, mode_452985197, bufSize_452985198) {
    var Temporary1;
      var Temporary2;

  var result_452985199 = false;

    var p_452985200 = (Temporary1 = fopen(toJSStr(filename_452985196), FormatOpen_452985184[chckIndx(mode_452985197, 0, (FormatOpen_452985184).length - 1)]), Temporary1)[0], p_452985200_Idx = Temporary1[1];
    if (!((p_452985200 == null && p_452985200_Idx == 0))) {
    var f2_452985201 = p_452985200;
    result_452985199 = true;
    f_452985195[f_452985195_Idx] = p_452985200;
      if (!(0 < bufSize_452985198)) Temporary2 = false; else {        Temporary2 = (bufSize_452985198 <= 2147483647);      }    if (Temporary2) {
    var _ = setvbuf(f_452985195[f_452985195_Idx], null, 0, _IOFBF, (bufSize_452985198 >>> 0));
    }
    else {
    if ((bufSize_452985198 == 0)) {
    var _ = setvbuf(f_452985195[f_452985195_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_452985199;

}

function rawFileSize_452985150(file_452985151) {
  var result_452985152 = 0;

    var oldPos_452985153 = ftello(file_452985151);
    var _ = fseeko(file_452985151, 0, 2);
    result_452985152 = ftello(file_452985151);
    var _ = fseeko(file_452985151, oldPos_452985153, 0);

  return result_452985152;

}

function raiseEIO_452984912(msg_452984913) {
    raiseException({message: nimCopy(null, msg_452984913, NTI33554439), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_452984957(f_452984958) {
    if (!((ferror(f_452984958) == 0))) {
    var msg_452984959 = (makeNimstrLit("errno: ") || []).concat(HEX24_335544323(((errno) | 0)) || [],makeNimstrLit(" `") || [],cstrToNimstr(strerror(errno)) || [],makeNimstrLit("`") || []);
    clearerr(f_452984958);
    raiseEIO_452984912(msg_452984959);
    }
    

  
}

function readBuffer_452984960(f_452984961, buffer_452984962, buffer_452984962_Idx, len_452984963) {
  var result_452984964 = 0;

    result_452984964 = (fread(buffer_452984962, buffer_452984962_Idx, 1, (len_452984963 >>> 0), f_452984961) | 0);
    if (!((result_452984964 == len_452984963))) {
    checkErr_452984957(f_452984961);
    }
    

  return result_452984964;

}

function endOfFile_452985154(f_452985155) {
  var result_452985156 = false;

  BeforeRet: do {
    var c_452985157 = fgetc(f_452985155);
    var _ = ungetc(c_452985157, f_452985155);
    result_452985156 = (c_452985157 < 0);
    break BeforeRet;
  } while (false);

  return result_452985156;

}

function readAllBuffer_452985145(file_452985146) {
  var result_452985147 = [];

    result_452985147 = nimCopy(null, [], NTI33554439);
    var buffer_452985148 = mnewString(4000);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_452985149 = readBuffer_452984960(file_452985146, buffer_452985148, chckIndx(0, 0, (buffer_452985148).length - 1), 4000);
          if ((bytesRead_452985149 == 4000)) {
          result_452985147.push.apply(result_452985147, buffer_452985148);;
          }
          else {
            (buffer_452985148.length = chckRange(bytesRead_452985149, 0, 2147483647));
            result_452985147.push.apply(result_452985147, buffer_452985148);;
            break Label1;
          }
          
        }
    } while (false);

  return result_452985147;

}

function readAllFile_452985158(file_452985159, len_452985160) {
  var result_452985161 = [];

    result_452985161 = nimCopy(null, mnewString(chckRange(len_452985160, 0, 2147483647)), NTI33554439);
    var bytes_452985162 = readBuffer_452984960(file_452985159, result_452985161, chckIndx(0, 0, (result_452985161).length - 1), chckRange(len_452985160, 0, 2147483647));
    if (endOfFile_452985154(file_452985159)) {
    if ((bytes_452985162 < len_452985160)) {
    (result_452985161.length = chckRange(bytes_452985162, 0, 2147483647));
    }
    
    }
    else {
    result_452985161.push.apply(result_452985161, readAllBuffer_452985145(file_452985159));;
    }
    

  return result_452985161;

}

function readAll_452985167(file_452985168) {
  var result_452985169 = [];

    var len_452985170 = rawFileSize_452985150(file_452985168);
    if ((0 < len_452985170)) {
    result_452985169 = nimCopy(null, readAllFile_452985158(file_452985168, len_452985170), NTI33554439);
    }
    else {
      result_452985169 = nimCopy(null, readAllBuffer_452985145(file_452985168), NTI33554439);
    }
    

  return result_452985169;

}

function close_452985037(f_452985038) {
    if (!((f_452985038 == null))) {
    var _ = fclose(f_452985038);
    }
    

  
}

function readFile_452985260(filename_452985261) {
    var Temporary2;

  var result_452985262 = [];

    var f_452985263 = [null];
    if (open_452985194(f_452985263, 0, filename_452985261, 0, -1)) {
    Temporary2 = framePtr;
    try {
    result_452985262 = nimCopy(null, readAll_452985167(f_452985263[0]), NTI33554439);
    } finally {
    framePtr = Temporary2;
    close_452985037(f_452985263[0]);
    }
    }
    else {
      raiseException({message: (makeNimstrLit("cannot open: ") || []).concat(filename_452985261 || []), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_452985262;

}

function some_1191187918(val_1191187920) {
  var result_1191187921 = ({val: 0, has: false});

    result_1191187921.has = true;
    result_1191187921.val = val_1191187920;

  return result_1191187921;

}

function acquire_1426063427(lock_1426063428) {
  
}

function addAtExit_1409286160(quitProc_1409286162) {
            window.onbeforeunload = quitProc_1409286162;
      

  
}

function release_1426063429(lock_1426063430) {
  
}

function callClosures_1409286181() {
    var Temporary2;
              var Temporary6;
              var Temporary7;

    acquire_1426063427(gFunsLock_1409286158[0]);
    Temporary2 = framePtr;
    try {
    Label3: do {
      var i_1409286191 = 0;
      var colontmp__486541334 = 0;
      colontmp__486541334 = subInt((gFuns_1409286159[0]).length, 1);
      var res_486541335 = colontmp__486541334;
      Label4: do {
          Label5: while (true) {
          if (!(0 <= res_486541335)) break Label5;
            i_1409286191 = res_486541335;
            var fun_1409286192 = nimCopy(null, gFuns_1409286159[0][chckIndx(i_1409286191, 0, (gFuns_1409286159[0]).length - 1)], NTI1409286148);
            switch (fun_1409286192.kind) {
            case 0:
              var Temporary6 = fun_1409286192;
              if (ConstSet360[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fun1\' is not accessible for type \'Fun\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1409286147)); }
              Temporary6.fun1();
              break;
            case 1:
              var Temporary7 = fun_1409286192;
              if (ConstSet361[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fun2\' is not accessible for type \'Fun\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1409286147)); }
              Temporary7.fun2();
              break;
            }
            res_486541335 = subInt(res_486541335, 1);
          }
      } while (false);
    } while (false);
    } finally {
    framePtr = Temporary2;
    release_1426063429(gFunsLock_1409286158[0]);
    }

  
}

function addExitProc_1409286210(cl_1409286212) {
    var Temporary2;

    acquire_1426063427(gFunsLock_1409286158[0]);
    Temporary2 = framePtr;
    try {
    if (((gFuns_1409286159[0]).length == 0)) {
    addAtExit_1409286160(callClosures_1409286181);
    }
    
    gFuns_1409286159[0].push({kind: 0, fun1: cl_1409286212, fun2: null});;
    } finally {
    framePtr = Temporary2;
    release_1426063429(gFunsLock_1409286158[0]);
    }

  
}

function initEnv_1392508994() {
    if (globalThis.alreadyExecutedHEX60gensym1_1392508996 === undefined) {
      globalThis.alreadyExecutedHEX60gensym1_1392508996 = [false];
    }
    if (!(alreadyExecutedHEX60gensym1_1392508996[0])) {
    alreadyExecutedHEX60gensym1_1392508996[0] = true;
    var _ = janet_init();
    addExitProc_1409286210(janet_deinit);
    }
    

  
}

function newSeq_1392509039(len_1392509041) {
  var result_1392509042 = [];

    result_1392509042 = new Array(len_1392509041); for (var i = 0 ; i < len_1392509041 ; ++i) { result_1392509042[i] = ({}); }
  return result_1392509042;

}

function janetCall_1392509006(function_1392509007, args_1392509008, path_1392509009) {
  var result_1392509010 = [];

    initEnv_1392508994();
    var env_1392509011 = janet_core_env(null);
    var functionValue_1392509012 = [({})];
    if (!((janet_dobytes(env_1392509011, toJSStr(function_1392509007), (((function_1392509007).length) | 0), toJSStr(path_1392509009), functionValue_1392509012[0]) == 0))) {
    raiseException({message: nsuFormatOpenArray(makeNimstrLit("Error while evaluating Janet function (see above): $1"), [nimCopy(null, function_1392509007, NTI33554439)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if (!(janet_checktype(functionValue_1392509012[0], JANET_FUNCTION))) {
    raiseException({message: nsuFormatOpenArray(makeNimstrLit("Invalid Janet function: $1"), [nimCopy(null, function_1392509007, NTI33554439)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var f_1392509013 = janet_unwrap_function(functionValue_1392509012[0]);
    Label1: do {
      var iHEX60gensym5_1392509035 = 0;
      var resultHEX60gensym5_1392509065 = newSeq_1392509039(chckRange((args_1392509008).length, 0, 2147483647));
      Label2: do {
        var it_1392509069 = [];
        var i_486541331 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(i_486541331 < (args_1392509008).length)) break Label4;
              it_1392509069 = args_1392509008[chckIndx(i_486541331, 0, (args_1392509008).length - 1)];
              resultHEX60gensym5_1392509065[chckIndx(iHEX60gensym5_1392509035, 0, (resultHEX60gensym5_1392509065).length - 1)] = nimCopy(resultHEX60gensym5_1392509065[chckIndx(iHEX60gensym5_1392509035, 0, (resultHEX60gensym5_1392509065).length - 1)], janet_cstringv(toJSStr(it_1392509069)), NTI1392508945);
              iHEX60gensym5_1392509035 = addInt(iHEX60gensym5_1392509035, 1);
              i_486541331 = addInt(i_486541331, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    var wrappedArgs_1392509074 = nimCopy(null, resultHEX60gensym5_1392509065, NTI1392509013);
    var value_1392509075 = [({})];
    if ((janet_pcall(f_1392509013, (((args_1392509008).length) | 0), wrappedArgs_1392509074[chckIndx(0, 0, (wrappedArgs_1392509074).length - 1)], value_1392509075[0], null, 0) == JANET_SIGNAL_ERROR)) {
    raiseException({message: nsuFormatOpenArray(makeNimstrLit("Error while calling Janet function: $1\x0A$2"), [nimCopy(null, function_1392509007, NTI33554439), cstrToNimstr(janet_unwrap_string(value_1392509075[0]))]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if (!(janet_checktype(value_1392509075[0], JANET_STRING))) {
    raiseException({message: nsuFormatOpenArray(makeNimstrLit("Returned value from Janet function is not a string: $1"), [nimCopy(null, function_1392509007, NTI33554439)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1392509010 = nimCopy(null, cstrToNimstr(janet_unwrap_string(value_1392509075[0])), NTI33554439);

  return result_1392509010;

}

function janetEval_1392509106(code_1392509107, values_1392509108, path_1392509109) {
    var Temporary4;

  var result_1392509110 = [];

    initEnv_1392508994();
    var env_1392509111 = janet_core_env(null);
    Label1: do {
      var name_1392509115 = [];
      var val_1392509116 = [];
      var i_486541342 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541342 < (values_1392509108).length)) break Label3;
            name_1392509115 = values_1392509108[chckIndx(i_486541342, 0, (values_1392509108).length - 1)]["Field0"];
            val_1392509116 = values_1392509108[chckIndx(i_486541342, 0, (values_1392509108).length - 1)]["Field1"];
            janet_def_sm(env_1392509111, toJSStr(name_1392509115), janet_cstringv(toJSStr(val_1392509116)), "", toJSStr(path_1392509109), 0);
            i_486541342 = addInt(i_486541342, 1);
          }
      } while (false);
    } while (false);
    var value_1392509117 = [({})];
    if (!((janet_dobytes(env_1392509111, toJSStr(code_1392509107), (((code_1392509107).length) | 0), toJSStr(path_1392509109), value_1392509117[0]) == 0))) {
    raiseException({message: makeNimstrLit("Error while evaluating Janet code (see above)"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    if (janet_checktype(value_1392509117[0], JANET_STRING)) {
    Temporary4 = cstrToNimstr(janet_unwrap_string(value_1392509117[0]));
    }
    else {
    if (janet_checktype(value_1392509117[0], JANET_NIL)) {
    Temporary4 = [];
    }
    else {
      raiseException({message: makeNimstrLit("Returned value from Janet code is not a string or nil"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    }
    result_1392509110 = nimCopy(null, Temporary4, NTI33554439);

  return result_1392509110;

}

function jsCall_1577061579(code_1577061580, args_1577061581) {
  var result_1577061582 = [];

    raiseException({message: makeNimstrLit("JavaScript evaluation is currently not available when using JavaScript (how ironic)"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_1577061582;

}

function jsEval_1577061583(code_1577061584, values_1577061585) {
  var result_1577061586 = [];

    raiseException({message: makeNimstrLit("JavaScript evaluation is currently not available when using JavaScript (how ironic)"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_1577061586;

}

function jsCommands_1761607688(doc_1761607689) {

function forCmd_1761607697(name_1761607698, container_1761607699, body_1761607700) {
  var result_1761607701 = [];

    var fmtRes_1761607702 = [mnewString(0)];
    fmtRes_1761607702[0].push.apply(fmtRes_1761607702[0], makeNimstrLit("for(const "));;
    formatValue_1124073634(fmtRes_1761607702, 0, name_1761607698, []);
    fmtRes_1761607702[0].push.apply(fmtRes_1761607702[0], makeNimstrLit(" of "));;
    formatValue_1124073634(fmtRes_1761607702, 0, container_1761607699, []);
    fmtRes_1761607702[0].push.apply(fmtRes_1761607702[0], makeNimstrLit("){"));;
    formatValue_1124073634(fmtRes_1761607702, 0, body_1761607700, []);
    fmtRes_1761607702[0].push.apply(fmtRes_1761607702[0], makeNimstrLit("}"));;
    result_1761607701 = nimCopy(null, fmtRes_1761607702[0], NTI33554439);

  return result_1761607701;

}
    
function HEX3Aanonymous_1761607708(arg_1761607709) {
      var result_1761607710 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [for] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761607696 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("for"), arg_1761607709, [HEX21_1275068536(0), HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1761607710 = nimCopy(result_1761607710, {typ: 0, str: forCmd_1761607697(to_1694498913(vals_1761607696[chckIndx(0, 0, (vals_1761607696).length - 1)]), to_1694498913(vals_1761607696[chckIndx(1, 0, (vals_1761607696).length - 1)]), to_1694498913(vals_1761607696[chckIndx(2, 0, (vals_1761607696).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761607710;

    }

function ifCmd_1761607783(condition_1761607784, body_1761607785, elses_1761607786) {
  var result_1761607787 = [];

    var fmtRes_1761607788 = [mnewString(0)];
    fmtRes_1761607788[0].push.apply(fmtRes_1761607788[0], makeNimstrLit("if("));;
    formatValue_1124073634(fmtRes_1761607788, 0, condition_1761607784, []);
    fmtRes_1761607788[0].push.apply(fmtRes_1761607788[0], makeNimstrLit("){"));;
    formatValue_1124073634(fmtRes_1761607788, 0, body_1761607785, []);
    fmtRes_1761607788[0].push.apply(fmtRes_1761607788[0], makeNimstrLit("}"));;
    result_1761607787 = nimCopy(null, fmtRes_1761607788[0], NTI33554439);
    Label1: do {
      var i_1761607796 = 0;
      var colontmp__486541358 = 0;
      colontmp__486541358 = divInt((elses_1761607786).length, 2);
      var i_486541359 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541359 < colontmp__486541358)) break Label3;
            i_1761607796 = i_486541359;
            var fmtRes_1761607797 = [mnewString(0)];
            fmtRes_1761607797[0].push.apply(fmtRes_1761607797[0], makeNimstrLit("else if("));;
            formatValue_1124073634(fmtRes_1761607797, 0, elses_1761607786[chckIndx(mulInt(2, i_1761607796), 0, (elses_1761607786).length - 1)], []);
            fmtRes_1761607797[0].push.apply(fmtRes_1761607797[0], makeNimstrLit("){"));;
            formatValue_1124073634(fmtRes_1761607797, 0, elses_1761607786[chckIndx(addInt(mulInt(2, i_1761607796), 1), 0, (elses_1761607786).length - 1)], []);
            fmtRes_1761607797[0].push.apply(fmtRes_1761607797[0], makeNimstrLit("}"));;
            result_1761607787.push.apply(result_1761607787, fmtRes_1761607797[0]);;
            i_486541359 = addInt(i_486541359, 1);
          }
      } while (false);
    } while (false);
    if ((modInt((elses_1761607786).length, 2) == 1)) {
    var fmtRes_1761607801 = [mnewString(0)];
    fmtRes_1761607801[0].push.apply(fmtRes_1761607801[0], makeNimstrLit("else{"));;
    formatValue_1124073634(fmtRes_1761607801, 0, HEX5BHEX5D_1711276654(elses_1761607786, 1), []);
    fmtRes_1761607801[0].push.apply(fmtRes_1761607801[0], makeNimstrLit("}"));;
    result_1761607787.push.apply(result_1761607787, fmtRes_1761607801[0]);;
    }
    

  return result_1761607787;

}
    
function HEX3Aanonymous_1761607811(arg_1761607812) {
      var result_1761607813 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [if] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761607782 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("if"), arg_1761607812, [HEX21_1275068536(0), HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1761607813 = nimCopy(result_1761607813, {typ: 0, str: ifCmd_1761607783(to_1694498913(vals_1761607782[chckIndx(0, 0, (vals_1761607782).length - 1)]), to_1694498913(vals_1761607782[chckIndx(1, 0, (vals_1761607782).length - 1)]), to_1761607826(vals_1761607782[chckIndx(2, 0, (vals_1761607782).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761607813;

    }

function ifExprCmd_1761607931(condition_1761607932, expr_1761607933, elses_1761607934) {
  var result_1761607935 = [];

    var fmtRes_1761607936 = [mnewString(0)];
    formatValue_1124073634(fmtRes_1761607936, 0, condition_1761607932, []);
    fmtRes_1761607936[0].push.apply(fmtRes_1761607936[0], makeNimstrLit("?"));;
    formatValue_1124073634(fmtRes_1761607936, 0, expr_1761607933, []);
    result_1761607935 = nimCopy(null, fmtRes_1761607936[0], NTI33554439);
    if (!((modInt((elses_1761607934).length, 2) == 1))) {
    raiseException({message: makeNimstrLit("[if=] requires an else clause"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    Label1: do {
      var i_1761607947 = 0;
      var colontmp__486541362 = 0;
      colontmp__486541362 = divInt((elses_1761607934).length, 2);
      var i_486541363 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541363 < colontmp__486541362)) break Label3;
            i_1761607947 = i_486541363;
            var fmtRes_1761607948 = [mnewString(0)];
            fmtRes_1761607948[0].push.apply(fmtRes_1761607948[0], makeNimstrLit(":"));;
            formatValue_1124073634(fmtRes_1761607948, 0, elses_1761607934[chckIndx(mulInt(2, i_1761607947), 0, (elses_1761607934).length - 1)], []);
            fmtRes_1761607948[0].push.apply(fmtRes_1761607948[0], makeNimstrLit("?"));;
            formatValue_1124073634(fmtRes_1761607948, 0, elses_1761607934[chckIndx(addInt(mulInt(2, i_1761607947), 1), 0, (elses_1761607934).length - 1)], []);
            result_1761607935.push.apply(result_1761607935, fmtRes_1761607948[0]);;
            i_486541363 = addInt(i_486541363, 1);
          }
      } while (false);
    } while (false);
    var fmtRes_1761607949 = [mnewString(0)];
    fmtRes_1761607949[0].push.apply(fmtRes_1761607949[0], makeNimstrLit(":"));;
    formatValue_1124073634(fmtRes_1761607949, 0, HEX5BHEX5D_1711276654(elses_1761607934, 1), []);
    result_1761607935.push.apply(result_1761607935, fmtRes_1761607949[0]);;

  return result_1761607935;

}
    
function HEX3Aanonymous_1761607959(arg_1761607960) {
      var result_1761607961 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [if=] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761607930 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("if="), arg_1761607960, [HEX21_1275068536(0), HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1761607961 = nimCopy(result_1761607961, {typ: 0, str: ifExprCmd_1761607931(to_1694498913(vals_1761607930[chckIndx(0, 0, (vals_1761607930).length - 1)]), to_1694498913(vals_1761607930[chckIndx(1, 0, (vals_1761607930).length - 1)]), to_1761607826(vals_1761607930[chckIndx(2, 0, (vals_1761607930).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761607961;

    }

function iifCmd_1761608026(body_1761608027) {
  var result_1761608028 = [];

    var fmtRes_1761608029 = [mnewString(0)];
    fmtRes_1761608029[0].push.apply(fmtRes_1761608029[0], makeNimstrLit("(()=>{"));;
    formatValue_1124073634(fmtRes_1761608029, 0, body_1761608027, []);
    fmtRes_1761608029[0].push.apply(fmtRes_1761608029[0], makeNimstrLit("})()"));;
    result_1761608028 = nimCopy(null, fmtRes_1761608029[0], NTI33554439);

  return result_1761608028;

}
    
function HEX3Aanonymous_1761608035(arg_1761608036) {
      var result_1761608037 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [iif] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761608025 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("iif"), arg_1761608036, [HEX21_1275068536(0)]);
        result_1761608037 = nimCopy(result_1761608037, {typ: 0, str: iifCmd_1761608026(to_1694498913(vals_1761608025[chckIndx(0, 0, (vals_1761608025).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761608037;

    }

function letCmd_1761608093(name_1761608094, value_1761608095) {
  var result_1761608096 = [];

    var fmtRes_1761608097 = [mnewString(0)];
    fmtRes_1761608097[0].push.apply(fmtRes_1761608097[0], makeNimstrLit("const "));;
    formatValue_1124073634(fmtRes_1761608097, 0, name_1761608094, []);
    fmtRes_1761608097[0].push.apply(fmtRes_1761608097[0], makeNimstrLit("="));;
    formatValue_1124073634(fmtRes_1761608097, 0, value_1761608095, []);
    fmtRes_1761608097[0].push.apply(fmtRes_1761608097[0], makeNimstrLit(";"));;
    result_1761608096 = nimCopy(null, fmtRes_1761608097[0], NTI33554439);

  return result_1761608096;

}
    
function HEX3Aanonymous_1761608103(arg_1761608104) {
      var result_1761608105 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [let] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761608092 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("let"), arg_1761608104, [HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1761608105 = nimCopy(result_1761608105, {typ: 0, str: letCmd_1761608093(to_1694498913(vals_1761608092[chckIndx(0, 0, (vals_1761608092).length - 1)]), to_1694498913(vals_1761608092[chckIndx(1, 0, (vals_1761608092).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761608105;

    }

function rangeCmd_1761608165(name_1761608166, n_1761608167, m_1761608169, r_1761608171, body_1761608172) {
    var Temporary1;
    var Temporary2;

  var result_1761608173 = [];

    if (isSome_1728053623(m_1761608169)) {
    var m_1761608201 = nimCopy(null, unsafeGet_1761608185(m_1761608169), NTI33554439);
    if (isSome_1728053623(r_1761608171)) {
    var r_1761608216 = nimCopy(null, unsafeGet_1761608185(r_1761608171), NTI33554439);
    var fmtRes_1761608217 = [mnewString(0)];
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit("for(let "));;
    formatValue_1124073634(fmtRes_1761608217, 0, name_1761608166, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit("="));;
    formatValue_1124073634(fmtRes_1761608217, 0, n_1761608167, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit(";"));;
    formatValue_1124073634(fmtRes_1761608217, 0, name_1761608166, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit("<"));;
    formatValue_1124073634(fmtRes_1761608217, 0, m_1761608201, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit(";"));;
    formatValue_1124073634(fmtRes_1761608217, 0, name_1761608166, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit("+="));;
    formatValue_1124073634(fmtRes_1761608217, 0, r_1761608216, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit("){"));;
    formatValue_1124073634(fmtRes_1761608217, 0, body_1761608172, []);
    fmtRes_1761608217[0].push.apply(fmtRes_1761608217[0], makeNimstrLit("}"));;
    Temporary2 = fmtRes_1761608217[0];
    }
    else {
      var fmtRes_1761608218 = [mnewString(0)];
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit("for(let "));;
      formatValue_1124073634(fmtRes_1761608218, 0, name_1761608166, []);
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit("="));;
      formatValue_1124073634(fmtRes_1761608218, 0, n_1761608167, []);
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit(";"));;
      formatValue_1124073634(fmtRes_1761608218, 0, name_1761608166, []);
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit("<"));;
      formatValue_1124073634(fmtRes_1761608218, 0, m_1761608201, []);
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit(";++"));;
      formatValue_1124073634(fmtRes_1761608218, 0, name_1761608166, []);
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit("){"));;
      formatValue_1124073634(fmtRes_1761608218, 0, body_1761608172, []);
      fmtRes_1761608218[0].push.apply(fmtRes_1761608218[0], makeNimstrLit("}"));;
    Temporary2 = fmtRes_1761608218[0];
    }
    
    Temporary1 = Temporary2;
    }
    else {
      var fmtRes_1761608219 = [mnewString(0)];
      fmtRes_1761608219[0].push.apply(fmtRes_1761608219[0], makeNimstrLit("for(let "));;
      formatValue_1124073634(fmtRes_1761608219, 0, name_1761608166, []);
      fmtRes_1761608219[0].push.apply(fmtRes_1761608219[0], makeNimstrLit("=0;"));;
      formatValue_1124073634(fmtRes_1761608219, 0, name_1761608166, []);
      fmtRes_1761608219[0].push.apply(fmtRes_1761608219[0], makeNimstrLit("<"));;
      formatValue_1124073634(fmtRes_1761608219, 0, n_1761608167, []);
      fmtRes_1761608219[0].push.apply(fmtRes_1761608219[0], makeNimstrLit(";++"));;
      formatValue_1124073634(fmtRes_1761608219, 0, name_1761608166, []);
      fmtRes_1761608219[0].push.apply(fmtRes_1761608219[0], makeNimstrLit("){"));;
      formatValue_1124073634(fmtRes_1761608219, 0, body_1761608172, []);
      fmtRes_1761608219[0].push.apply(fmtRes_1761608219[0], makeNimstrLit("}"));;
    Temporary1 = fmtRes_1761608219[0];
    }
    
    result_1761608173 = nimCopy(null, Temporary1, NTI33554439);

  return result_1761608173;

}
    
function HEX3Aanonymous_1761608225(arg_1761608226) {
      var result_1761608227 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [range] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761608164 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("range"), arg_1761608226, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0), HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1761608227 = nimCopy(result_1761608227, {typ: 0, str: rangeCmd_1761608165(to_1694498913(vals_1761608164[chckIndx(0, 0, (vals_1761608164).length - 1)]), to_1694498913(vals_1761608164[chckIndx(1, 0, (vals_1761608164).length - 1)]), to_1728053714(vals_1761608164[chckIndx(2, 0, (vals_1761608164).length - 1)]), to_1728053714(vals_1761608164[chckIndx(3, 0, (vals_1761608164).length - 1)]), to_1694498913(vals_1761608164[chckIndx(4, 0, (vals_1761608164).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761608227;

    }

function switchCmd_1761608311(name_1761608312, cases_1761608313) {
            var Temporary4;

  var result_1761608314 = [];

    if (!((modInt((cases_1761608313).length, 2) == 0))) {
    raiseException({message: makeNimstrLit("Extra arguments to [switch] must come in pairs"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var fmtRes_1761608318 = [mnewString(0)];
    fmtRes_1761608318[0].push.apply(fmtRes_1761608318[0], makeNimstrLit("switch("));;
    formatValue_1124073634(fmtRes_1761608318, 0, name_1761608312, []);
    fmtRes_1761608318[0].push.apply(fmtRes_1761608318[0], makeNimstrLit("){"));;
    result_1761608314 = nimCopy(null, fmtRes_1761608318[0], NTI33554439);
    Label1: do {
      var i_1761608326 = 0;
      var colontmp__486541366 = 0;
      colontmp__486541366 = divInt((cases_1761608313).length, 2);
      var i_486541367 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541367 < colontmp__486541366)) break Label3;
            i_1761608326 = i_486541367;
            if (eqStrings(cases_1761608313[chckIndx(mulInt(2, i_1761608326), 0, (cases_1761608313).length - 1)], makeNimstrLit("default"))) {
            Temporary4 = makeNimstrLit("default");
            }
            else {
            Temporary4 = (makeNimstrLit("case ") || []).concat(cases_1761608313[chckIndx(mulInt(2, i_1761608326), 0, (cases_1761608313).length - 1)] || []);
            }
            
            var label_1761608327 = nimCopy(null, Temporary4, NTI33554439);
            var fmtRes_1761608328 = [mnewString(0)];
            formatValue_1124073634(fmtRes_1761608328, 0, label_1761608327, []);
            fmtRes_1761608328[0].push.apply(fmtRes_1761608328[0], makeNimstrLit(":{"));;
            formatValue_1124073634(fmtRes_1761608328, 0, cases_1761608313[chckIndx(addInt(mulInt(2, i_1761608326), 1), 0, (cases_1761608313).length - 1)], []);
            fmtRes_1761608328[0].push.apply(fmtRes_1761608328[0], makeNimstrLit("}break;"));;
            result_1761608314.push.apply(result_1761608314, fmtRes_1761608328[0]);;
            i_486541367 = addInt(i_486541367, 1);
          }
      } while (false);
    } while (false);
    result_1761608314.push.apply(result_1761608314, makeNimstrLit("}"));;

  return result_1761608314;

}
    
function HEX3Aanonymous_1761608334(arg_1761608335) {
      var result_1761608336 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [switch] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761608310 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("switch"), arg_1761608335, [HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1761608336 = nimCopy(result_1761608336, {typ: 0, str: switchCmd_1761608311(to_1694498913(vals_1761608310[chckIndx(0, 0, (vals_1761608310).length - 1)]), to_1761607826(vals_1761608310[chckIndx(1, 0, (vals_1761608310).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761608336;

    }

function varCmd_1761608397(name_1761608398, value_1761608400) {
    var Temporary1;

  var result_1761608401 = [];

    if (isSome_1728053623(value_1761608400)) {
    var value_1761608416 = nimCopy(null, unsafeGet_1761608185(value_1761608400), NTI33554439);
    var fmtRes_1761608417 = [mnewString(0)];
    fmtRes_1761608417[0].push.apply(fmtRes_1761608417[0], makeNimstrLit("let "));;
    formatValue_1124073634(fmtRes_1761608417, 0, name_1761608398, []);
    fmtRes_1761608417[0].push.apply(fmtRes_1761608417[0], makeNimstrLit("="));;
    formatValue_1124073634(fmtRes_1761608417, 0, value_1761608416, []);
    fmtRes_1761608417[0].push.apply(fmtRes_1761608417[0], makeNimstrLit(";"));;
    Temporary1 = fmtRes_1761608417[0];
    }
    else {
      var fmtRes_1761608418 = [mnewString(0)];
      fmtRes_1761608418[0].push.apply(fmtRes_1761608418[0], makeNimstrLit("let "));;
      formatValue_1124073634(fmtRes_1761608418, 0, name_1761608398, []);
      fmtRes_1761608418[0].push.apply(fmtRes_1761608418[0], makeNimstrLit(";"));;
    Temporary1 = fmtRes_1761608418[0];
    }
    
    result_1761608401 = nimCopy(null, Temporary1, NTI33554439);

  return result_1761608401;

}
    
function HEX3Aanonymous_1761608424(arg_1761608425) {
      var result_1761608426 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1761607689.safeMode) {
        raiseException({message: makeNimstrLit("The [var] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1761608396 = expandArguments_1711276046(doc_1761607689, makeNimstrLit("var"), arg_1761608425, [HEX21_1275068536(0), HEX3F_1275068557(0)]);
        result_1761608426 = nimCopy(result_1761608426, {typ: 0, str: varCmd_1761608397(to_1694498913(vals_1761608396[chckIndx(0, 0, (vals_1761608396).length - 1)]), to_1728053714(vals_1761608396[chckIndx(1, 0, (vals_1761608396).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1761608426;

    }

  var result_1761607692 = ({data: [], counter: 0});

    var commands_1761607695 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("for"), HEX3Aanonymous_1761607708);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("if"), HEX3Aanonymous_1761607811);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("if="), HEX3Aanonymous_1761607959);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("iif"), HEX3Aanonymous_1761608035);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("let"), HEX3Aanonymous_1761608103);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("range"), HEX3Aanonymous_1761608225);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("switch"), HEX3Aanonymous_1761608334);
    HEX5BHEX5DHEX3D_1694498976(commands_1761607695[0], makeNimstrLit("var"), HEX3Aanonymous_1761608424);
    result_1761607692 = nimCopy(result_1761607692, commands_1761607695[0], NTI1275068467);

  return result_1761607692;

}

function nsuToLowerAsciiChar(c_654311492) {
  var result_654311493 = 0;

    if ((ConstSet363[c_654311492] != undefined)) {
    result_654311493 = (c_654311492 ^ 32);
    }
    else {
      result_654311493 = c_654311492;
    }
    

  return result_654311493;

}

function nsuToLowerAsciiStr(s_654311502) {
  var result_654311503 = [];

    result_654311503 = nimCopy(null, mnewString(chckRange((s_654311502).length, 0, 2147483647)), NTI33554439);
    Label1: do {
      var iHEX60gensym7_654311509 = 0;
      var colontmp__486541370 = 0;
      colontmp__486541370 = subInt((s_654311502).length, 1);
      var res_486541371 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486541371 <= colontmp__486541370)) break Label3;
            iHEX60gensym7_654311509 = res_486541371;
            result_654311503[chckIndx(iHEX60gensym7_654311509, 0, (result_654311503).length - 1)] = nsuToLowerAsciiChar(s_654311502[chckIndx(iHEX60gensym7_654311509, 0, (s_654311502).length - 1)]);
            res_486541371 = addInt(res_486541371, 1);
          }
      } while (false);
    } while (false);

  return result_654311503;

}

function proofCommands_1778389660(doc_1778389661) {

function dotLeftCmd_1778389669(arg_1778389670) {
  var result_1778389671 = [];

    result_1778389671 = nimCopy(null, (makeNimstrLit("<div class=\"xd-subproof\">") || []).concat(renderMath_1778387873(doc_1778389661, makeNimstrLit("(\\Leftarrow)"), false, true) || [],makeNimstrLit(" ") || [],arg_1778389670 || [],makeNimstrLit("</div>") || []), NTI33554439);

  return result_1778389671;

}
    
function HEX3Aanonymous_1778389677(arg_1778389678) {
      var result_1778389679 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778389661.safeMode) {
        raiseException({message: makeNimstrLit("The [.<] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778389668 = expandArguments_1711276046(doc_1778389661, makeNimstrLit(".<"), arg_1778389678, [HEX21_1275068536(1)]);
        result_1778389679 = nimCopy(result_1778389679, {typ: 1, str: dotLeftCmd_1778389669(to_1694498913(vals_1778389668[chckIndx(0, 0, (vals_1778389668).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778389679;

    }

function dotRightCmd_1778389735(arg_1778389736) {
  var result_1778389737 = [];

    result_1778389737 = nimCopy(null, (makeNimstrLit("<div class=\"xd-subproof\">") || []).concat(renderMath_1778387873(doc_1778389661, makeNimstrLit("(\\Rightarrow)"), false, true) || [],makeNimstrLit(" ") || [],arg_1778389736 || [],makeNimstrLit("</div>") || []), NTI33554439);

  return result_1778389737;

}
    
function HEX3Aanonymous_1778389743(arg_1778389744) {
      var result_1778389745 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1778389661.safeMode) {
        raiseException({message: makeNimstrLit("The [.>] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1778389734 = expandArguments_1711276046(doc_1778389661, makeNimstrLit(".>"), arg_1778389744, [HEX21_1275068536(1)]);
        result_1778389745 = nimCopy(result_1778389745, {typ: 1, str: dotRightCmd_1778389735(to_1694498913(vals_1778389734[chckIndx(0, 0, (vals_1778389734).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1778389745;

    }

  var result_1778389664 = ({data: [], counter: 0});

    var commands_1778389667 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1778389667[0], makeNimstrLit(".<"), HEX3Aanonymous_1778389677);
    HEX5BHEX5DHEX3D_1694498976(commands_1778389667[0], makeNimstrLit(".>"), HEX3Aanonymous_1778389743);
    result_1778389664 = nimCopy(result_1778389664, commands_1778389667[0], NTI1275068467);

  return result_1778389664;

}

function nsuUnindent(s_654312561, count_654312566, padding_654312567) {
            var Temporary6;
                      var Temporary10;

  var result_654312568 = [];

    result_654312568 = nimCopy(null, [], NTI33554439);
    var i_654312569 = 0;
    Label1: do {
      var line_654312570 = [];
      var first_486541386 = 0;
      var last_486541387 = 0;
      var eolpos_486541388 = 0;
      Label2: do {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((last_486541387 < (s_654312561).length) && !((ConstSet367[s_654312561[chckIndx(last_486541387, 0, (s_654312561).length - 1)]] != undefined)))) break Label5;
                  last_486541387 = addInt(last_486541387, 1);
                }
            } while (false);
            eolpos_486541388 = last_486541387;
            if ((last_486541387 < (s_654312561).length)) {
            if ((s_654312561[chckIndx(last_486541387, 0, (s_654312561).length - 1)] == 10)) {
            last_486541387 = addInt(last_486541387, 1);
            }
            else {
            if ((s_654312561[chckIndx(last_486541387, 0, (s_654312561).length - 1)] == 13)) {
            last_486541387 = addInt(last_486541387, 1);
            if (((last_486541387 < (s_654312561).length) && (s_654312561[chckIndx(last_486541387, 0, (s_654312561).length - 1)] == 10))) {
            last_486541387 = addInt(last_486541387, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_486541387, 1);
            }
            else {
            Temporary6 = subInt(eolpos_486541388, 1);
            }
            
            line_654312570 = substr_33557922(s_654312561, first_486541386, Temporary6);
            if (!((i_654312569 == 0))) {
            result_654312568.push.apply(result_654312568, makeNimstrLit("\x0A"));;
            }
            
            var indentCount_654312571 = 0;
            Label7: do {
              var j_654312576 = 0;
              var colontmp__486541383 = 0;
              colontmp__486541383 = count_654312566;
              var i_486541384 = 0;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_486541384 < colontmp__486541383)) break Label9;
                    j_654312576 = i_486541384;
                    indentCount_654312571 = addInt(indentCount_654312571, 1);
                      if (((line_654312570).length <= subInt(addInt(j_654312576, (padding_654312567).length), 1))) Temporary10 = true; else {                        Temporary10 = !(eqStrings(HEX5BHEX5D_939524972(line_654312570, HEX2EHEX2E_939524947(j_654312576, subInt(addInt(j_654312576, (padding_654312567).length), 1))), padding_654312567));                      }                    if (Temporary10) {
                    indentCount_654312571 = j_654312576;
                    break Label7;
                    }
                    
                    i_486541384 = addInt(i_486541384, 1);
                  }
              } while (false);
            } while (false);
            result_654312568.push.apply(result_654312568, HEX5BHEX5D_939527322(line_654312570, HEX2EHEX2E_872415312(mulInt(indentCount_654312571, (padding_654312567).length), 1)));;
            i_654312569 = addInt(i_654312569, 1);
            if ((eolpos_486541388 == last_486541387)) {
            break Label2;
            }
            
            first_486541386 = last_486541387;
          }
      } while (false);
    } while (false);

  return result_654312568;

}

function nsuDedent(s_654312644, count_654312645) {
  var result_654312646 = [];

    result_654312646 = nimCopy(null, nsuUnindent(s_654312644, count_654312645, makeNimstrLit(" ")), NTI33554439);

  return result_654312646;

}

function indentation_654312625(s_654312626) {
            var Temporary6;

  var result_654312627 = 0;

    result_654312627 = 2147483647;
    Label1: do {
      var line_654312632 = [];
      var first_486541397 = 0;
      var last_486541398 = 0;
      var eolpos_486541399 = 0;
      Label2: do {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((last_486541398 < (s_654312626).length) && !((ConstSet368[s_654312626[chckIndx(last_486541398, 0, (s_654312626).length - 1)]] != undefined)))) break Label5;
                  last_486541398 = addInt(last_486541398, 1);
                }
            } while (false);
            eolpos_486541399 = last_486541398;
            if ((last_486541398 < (s_654312626).length)) {
            if ((s_654312626[chckIndx(last_486541398, 0, (s_654312626).length - 1)] == 10)) {
            last_486541398 = addInt(last_486541398, 1);
            }
            else {
            if ((s_654312626[chckIndx(last_486541398, 0, (s_654312626).length - 1)] == 13)) {
            last_486541398 = addInt(last_486541398, 1);
            if (((last_486541398 < (s_654312626).length) && (s_654312626[chckIndx(last_486541398, 0, (s_654312626).length - 1)] == 10))) {
            last_486541398 = addInt(last_486541398, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_486541398, 1);
            }
            else {
            Temporary6 = subInt(eolpos_486541399, 1);
            }
            
            line_654312632 = substr_33557922(s_654312626, first_486541397, Temporary6);
            Label7: do {
              var i_654312633 = 0;
              var c_654312634 = 0;
              var i_486541394 = 0;
              var L_486541395 = (line_654312632).length;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_486541394 < L_486541395)) break Label9;
                    i_654312633 = i_486541394;
                    c_654312634 = line_654312632[chckIndx(i_486541394, 0, (line_654312632).length - 1)];
                    if ((result_654312627 <= i_654312633)) {
                    break Label7;
                    }
                    else {
                    if (!((c_654312634 == 32))) {
                    result_654312627 = chckRange(i_654312633, 0, 2147483647);
                    break Label7;
                    }
                    }
                    i_486541394 = addInt(i_486541394, 1);
                    if (!(((line_654312632).length == L_486541395))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(192, 11) `len(a) == L` the length of the string changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            if ((eolpos_486541399 == last_486541398)) {
            break Label2;
            }
            
            first_486541397 = last_486541398;
          }
      } while (false);
    } while (false);
    if ((result_654312627 == 2147483647)) {
    result_654312627 = 0;
    }
    

  return result_654312627;

}

function nsuRemoveSuffixString(s_654312816, s_654312816_Idx, suffix_654312817) {
    var newLen_654312818 = (s_654312816[s_654312816_Idx]).length;
    if (nsuEndsWith(s_654312816[s_654312816_Idx], suffix_654312817)) {
    newLen_654312818 = subInt(newLen_654312818, (suffix_654312817).length);
    (s_654312816[s_654312816_Idx].length = chckRange(newLen_654312818, 0, 2147483647));
    }
    

  
}

function isEmpty_1157627932(hcode_1157627933) {
  var result_1157627934 = false;

    result_1157627934 = (hcode_1157627933 == 0);

  return result_1157627934;

}

function del_1191191239(t_1191191242, key_1191191243) {
                    var Temporary6;
                    var Temporary7;
                    var Temporary8;
                      var Temporary9;
                      var Temporary10;

    var hc_1191191244 = [0];
    var i_1191191251 = rawGet_1577058444(t_1191191242, key_1191191243, hc_1191191244, 0);
    var mskHEX60gensym36_1191191255 = (t_1191191242.data).length - 1;
    if ((0 <= i_1191191251)) {
    t_1191191242.counter = subInt(t_1191191242.counter, 1);
    Label1: do {
      Label2: do {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1191191261 = i_1191191251;
            var rHEX60gensym36_1191191262 = jHEX60gensym36_1191191261;
            t_1191191242.data[chckIndx(i_1191191251, 0, (t_1191191242.data).length - 1)].Field0 = 0;
            t_1191191242.data[chckIndx(i_1191191251, 0, (t_1191191242.data).length - 1)].Field1 = nimCopy(null, [], NTI33554439);
            t_1191191242.data[chckIndx(i_1191191251, 0, (t_1191191242.data).length - 1)].Field2 = nimCopy(null, [], NTI33554439);
            Label4: do {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1191191251 = (addInt(i_1191191251, 1) & mskHEX60gensym36_1191191255);
                  if (isEmpty_1157627932(t_1191191242.data[chckIndx(i_1191191251, 0, (t_1191191242.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1191191262 = (t_1191191242.data[chckIndx(i_1191191251, 0, (t_1191191242.data).length - 1)].Field0 & mskHEX60gensym36_1191191255);
                    if (!(rHEX60gensym36_1191191262 <= i_1191191251)) Temporary8 = false; else {                      Temporary8 = (jHEX60gensym36_1191191261 < rHEX60gensym36_1191191262);                    }                    if (Temporary8) Temporary7 = true; else {                      if (!(jHEX60gensym36_1191191261 < rHEX60gensym36_1191191262)) Temporary9 = false; else {                        Temporary9 = (i_1191191251 < jHEX60gensym36_1191191261);                      }                      Temporary7 = Temporary9;                    }                    if (Temporary7) Temporary6 = true; else {                      if (!(i_1191191251 < jHEX60gensym36_1191191261)) Temporary10 = false; else {                        Temporary10 = (rHEX60gensym36_1191191262 <= i_1191191251);                      }                      Temporary6 = Temporary10;                    }                  if (!(Temporary6)) {
                  break Label4;
                  }
                  
                }
            } while (false);
            t_1191191242.data[chckIndx(jHEX60gensym36_1191191261, 0, (t_1191191242.data).length - 1)] = nimCopy(t_1191191242.data[chckIndx(jHEX60gensym36_1191191261, 0, (t_1191191242.data).length - 1)], t_1191191242.data[chckIndx(i_1191191251, 0, (t_1191191242.data).length - 1)], NTI1275068458);
          }
      } while (false);
    } while (false);
    }
    

  
}

function xidocWarning_1258291212(msge_1258291213) {
  
}

function newSeq_1191192832(len_1191192834) {
  var result_1191192835 = [];

    result_1191192835 = new Array(len_1191192834); for (var i = 0 ; i < len_1191192834 ; ++i) { result_1191192835[i] = ({typ: 0, str: [], list: [], opt: ({val: null})}); }
  return result_1191192835;

}

function cssCommands_1728053255(doc_1728053256) {

function underCmd_1728053264(arg_1728053265) {
  var result_1728053266 = [];

    var fmtRes_1728053267 = [mnewString(0)];
    fmtRes_1728053267[0].push.apply(fmtRes_1728053267[0], makeNimstrLit("["));;
    formatValue_1124073634(fmtRes_1728053267, 0, arg_1728053265, []);
    fmtRes_1728053267[0].push.apply(fmtRes_1728053267[0], makeNimstrLit("]"));;
    result_1728053266 = nimCopy(null, fmtRes_1728053267[0], NTI33554439);

  return result_1728053266;

}
    
function HEX3Aanonymous_1728053273(arg_1728053274) {
      var result_1728053275 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1728053256.safeMode) {
        raiseException({message: makeNimstrLit("The [_] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1728053263 = expandArguments_1711276046(doc_1728053256, makeNimstrLit("_"), arg_1728053274, [HEX21_1275068536(0)]);
        result_1728053275 = nimCopy(result_1728053275, {typ: 0, str: underCmd_1728053264(to_1694498913(vals_1728053263[chckIndx(0, 0, (vals_1728053263).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1728053275;

    }

function declCmd_1728053331(prop_1728053332, val_1728053333) {
  var result_1728053334 = [];

    result_1728053334 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1:$2;"), [nimCopy(null, prop_1728053332, NTI33554439), nimCopy(null, val_1728053333, NTI33554439)]), NTI33554439);

  return result_1728053334;

}
    
function HEX3Aanonymous_1728053340(arg_1728053341) {
      var result_1728053342 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1728053256.safeMode) {
        raiseException({message: makeNimstrLit("The [:] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1728053330 = expandArguments_1711276046(doc_1728053256, makeNimstrLit(":"), arg_1728053341, [HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1728053342 = nimCopy(result_1728053342, {typ: 0, str: declCmd_1728053331(to_1694498913(vals_1728053330[chckIndx(0, 0, (vals_1728053330).length - 1)]), to_1694498913(vals_1728053330[chckIndx(1, 0, (vals_1728053330).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1728053342;

    }

function declImportantCmd_1728053411(prop_1728053412, val_1728053413) {
  var result_1728053414 = [];

    result_1728053414 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1:$2 !important;"), [nimCopy(null, prop_1728053412, NTI33554439), nimCopy(null, val_1728053413, NTI33554439)]), NTI33554439);

  return result_1728053414;

}
    
function HEX3Aanonymous_1728053420(arg_1728053421) {
      var result_1728053422 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1728053256.safeMode) {
        raiseException({message: makeNimstrLit("The [:!] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1728053410 = expandArguments_1711276046(doc_1728053256, makeNimstrLit(":!"), arg_1728053421, [HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1728053422 = nimCopy(result_1728053422, {typ: 0, str: declImportantCmd_1728053411(to_1694498913(vals_1728053410[chckIndx(0, 0, (vals_1728053410).length - 1)]), to_1694498913(vals_1728053410[chckIndx(1, 0, (vals_1728053410).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1728053422;

    }

function hStarCmd_1728053482() {
  var result_1728053483 = [];

    result_1728053483 = nimCopy(null, makeNimstrLit("h1,h2,h3,h4,h5,h6"), NTI33554439);

  return result_1728053483;

}
    
function HEX3Aanonymous_1728053489(arg_1728053490) {
      var result_1728053491 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1728053256.safeMode) {
        raiseException({message: makeNimstrLit("The [h*] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1728053481 = expandArguments_1711276046(doc_1728053256, makeNimstrLit("h*"), arg_1728053490, []);
        result_1728053491 = nimCopy(result_1728053491, {typ: 0, str: hStarCmd_1728053482(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1728053491;

    }

function ruleCmd_1728053543(selector_1728053544, decls_1728053545) {
  var result_1728053546 = [];

    result_1728053546 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1{$2}"), [nimCopy(null, selector_1728053544, NTI33554439), nimCopy(null, decls_1728053545, NTI33554439)]), NTI33554439);

  return result_1728053546;

}
    
function HEX3Aanonymous_1728053552(arg_1728053553) {
      var result_1728053554 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1728053256.safeMode) {
        raiseException({message: makeNimstrLit("The [rule] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1728053542 = expandArguments_1711276046(doc_1728053256, makeNimstrLit("rule"), arg_1728053553, [HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1728053554 = nimCopy(result_1728053554, {typ: 0, str: ruleCmd_1728053543(to_1694498913(vals_1728053542[chckIndx(0, 0, (vals_1728053542).length - 1)]), to_1694498913(vals_1728053542[chckIndx(1, 0, (vals_1728053542).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1728053554;

    }

function varCmd_1728053614(name_1728053615, val_1728053617) {
    var Temporary1;
    var Temporary2;

  var result_1728053618 = [];

    if (isSome_1728053623(val_1728053617)) {
    if (eqStrings(HEX5BHEX5D_1728053628(doc_1728053256.stack, 2).cmdName, makeNimstrLit("style"))) {
    Temporary2 = nsuFormatOpenArray(makeNimstrLit(":root{--$1:$2;}"), [nimCopy(null, name_1728053615, NTI33554439), nimCopy(null, get_1728053657(val_1728053617), NTI33554439)]);
    }
    else {
    Temporary2 = nsuFormatOpenArray(makeNimstrLit("--$1:$2;"), [nimCopy(null, name_1728053615, NTI33554439), nimCopy(null, get_1728053657(val_1728053617), NTI33554439)]);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    Temporary1 = nsuFormatSingleElem(makeNimstrLit("var(--$1)"), name_1728053615);
    }
    
    result_1728053618 = nimCopy(null, Temporary1, NTI33554439);

  return result_1728053618;

}
    
function HEX3Aanonymous_1728053698(arg_1728053699) {
      var result_1728053700 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1728053256.safeMode) {
        raiseException({message: makeNimstrLit("The [var] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1728053613 = expandArguments_1711276046(doc_1728053256, makeNimstrLit("var"), arg_1728053699, [HEX21_1275068536(0), HEX3F_1275068557(0)]);
        result_1728053700 = nimCopy(result_1728053700, {typ: 0, str: varCmd_1728053614(to_1694498913(vals_1728053613[chckIndx(0, 0, (vals_1728053613).length - 1)]), to_1728053714(vals_1728053613[chckIndx(1, 0, (vals_1728053613).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1728053700;

    }

  var result_1728053259 = ({data: [], counter: 0});

    var commands_1728053262 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1728053262[0], makeNimstrLit("_"), HEX3Aanonymous_1728053273);
    HEX5BHEX5DHEX3D_1694498976(commands_1728053262[0], makeNimstrLit(":"), HEX3Aanonymous_1728053340);
    HEX5BHEX5DHEX3D_1694498976(commands_1728053262[0], makeNimstrLit(":!"), HEX3Aanonymous_1728053420);
    HEX5BHEX5DHEX3D_1694498976(commands_1728053262[0], makeNimstrLit("h*"), HEX3Aanonymous_1728053489);
    HEX5BHEX5DHEX3D_1694498976(commands_1728053262[0], makeNimstrLit("rule"), HEX3Aanonymous_1728053552);
    HEX5BHEX5DHEX3D_1694498976(commands_1728053262[0], makeNimstrLit("var"), HEX3Aanonymous_1728053698);
    result_1728053259 = nimCopy(result_1728053259, commands_1728053262[0], NTI1275068467);

  return result_1728053259;

}

function HEX5BHEX5D_1677722024(t_1677722027, key_1677722028) {
  var result_1677722029 = null;
  var result_1677722029_Idx = 0;

    var hcHEX60gensym22_1677722030 = [0];
    var indexHEX60gensym22_1677722037 = rawGet_1577058444(t_1677722027, key_1677722028, hcHEX60gensym22_1677722030, 0);
    if ((0 <= indexHEX60gensym22_1677722037)) {
    result_1677722029 = t_1677722027.data[chckIndx(indexHEX60gensym22_1677722037, 0, (t_1677722027.data).length - 1)]; result_1677722029_Idx = "Field2";
    }
    else {
    raiseKeyError_1308623158(key_1677722028);
    }
    

  return [result_1677722029, result_1677722029_Idx];

}

function defaultCommands_1191182369(doc_1191182370) {

function commentCmd_1191182393(arg_1191182394) {
  var result_1191182395 = [];

  return result_1191182395;

}
    
function HEX3Aanonymous_1191182401(arg_1191182402) {
      var result_1191182403 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182392 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("#"), arg_1191182402, [{kind: 4, base: 0}]);
        result_1191182403 = nimCopy(result_1191182403, {typ: 0, str: commentCmd_1191182393(to_1694498913(vals_1191182392[chckIndx(0, 0, (vals_1191182392).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182403;

    }

function semiCmd_1191182459() {
  var result_1191182460 = [];

    result_1191182460 = nimCopy(null, makeNimstrLit(";"), NTI33554439);

  return result_1191182460;

}
    
function HEX3Aanonymous_1191182466(arg_1191182467) {
      var result_1191182468 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182458 = expandArguments_1711276046(doc_1191182370, makeNimstrLit(";"), arg_1191182467, []);
        result_1191182468 = nimCopy(result_1191182468, {typ: 0, str: semiCmd_1191182459(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182468;

    }

function bracketsCmd_1191182520(arg_1191182521) {
  var result_1191182522 = [];

    result_1191182522 = nimCopy(null, (makeNimstrLit("[") || []).concat(arg_1191182521 || [],makeNimstrLit("]") || []), NTI33554439);

  return result_1191182522;

}
    
function HEX3Aanonymous_1191182528(arg_1191182529) {
      var result_1191182530 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182519 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("()"), arg_1191182529, [HEX21_1275068536(1)]);
        result_1191182530 = nimCopy(result_1191182530, {typ: 1, str: bracketsCmd_1191182520(to_1694498913(vals_1191182519[chckIndx(0, 0, (vals_1191182519).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182530;

    }

function leftBracketCmd_1191182586() {
  var result_1191182587 = [];

    result_1191182587 = nimCopy(null, makeNimstrLit("["), NTI33554439);

  return result_1191182587;

}
    
function HEX3Aanonymous_1191182593(arg_1191182594) {
      var result_1191182595 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182585 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("("), arg_1191182594, []);
        result_1191182595 = nimCopy(result_1191182595, {typ: 0, str: leftBracketCmd_1191182586(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182595;

    }

function rightBracketCmd_1191182647() {
  var result_1191182648 = [];

    result_1191182648 = nimCopy(null, makeNimstrLit("]"), NTI33554439);

  return result_1191182648;

}
    
function HEX3Aanonymous_1191182654(arg_1191182655) {
      var result_1191182656 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182646 = expandArguments_1711276046(doc_1191182370, makeNimstrLit(")"), arg_1191182655, []);
        result_1191182656 = nimCopy(result_1191182656, {typ: 0, str: rightBracketCmd_1191182647(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182656;

    }

function enDashCmd_1191182708() {
  var result_1191182709 = [];

    result_1191182709 = nimCopy(null, makeNimstrLit("\xE2\x80\x93"), NTI33554439);

  return result_1191182709;

}
    
function HEX3Aanonymous_1191182715(arg_1191182716) {
      var result_1191182717 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182707 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("--"), arg_1191182716, []);
        result_1191182717 = nimCopy(result_1191182717, {typ: 0, str: enDashCmd_1191182708(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182717;

    }

function emDashCmd_1191182769() {
  var result_1191182770 = [];

    result_1191182770 = nimCopy(null, makeNimstrLit("\xE2\x80\x94"), NTI33554439);

  return result_1191182770;

}
    
function HEX3Aanonymous_1191182776(arg_1191182777) {
      var result_1191182778 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182768 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("---"), arg_1191182777, []);
        result_1191182778 = nimCopy(result_1191182778, {typ: 0, str: emDashCmd_1191182769(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182778;

    }

function ellipsisCmd_1191182830() {
  var result_1191182831 = [];

    result_1191182831 = nimCopy(null, makeNimstrLit("\xE2\x80\xA6"), NTI33554439);

  return result_1191182831;

}
    
function HEX3Aanonymous_1191182837(arg_1191182838) {
      var result_1191182839 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182829 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("..."), arg_1191182838, []);
        result_1191182839 = nimCopy(result_1191182839, {typ: 0, str: ellipsisCmd_1191182830(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182839;

    }

function quoteCmd_1191182891(arg_1191182892) {
    var Temporary1;
      
function HEX3Aanonymous_1191182919() {
        var result_1191182920 = 0;

        BeforeRet: do {
          Label1: do {
            var iHEX60gensym13_1191182929 = 0;
            var colontmp__486541161 = 0;
            colontmp__486541161 = subInt((doc_1191182370.stack).length, 1);
            var res_486541162 = colontmp__486541161;
            Label2: do {
                Label3: while (true) {
                if (!(0 <= res_486541162)) break Label3;
                  iHEX60gensym13_1191182929 = res_486541162;
                  var frameHEX60gensym13_1191182930 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym13_1191182929, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                  if (isSome_1191182935(frameHEX60gensym13_1191182930.lang)) {
                  result_1191182920 = get_1191182952(frameHEX60gensym13_1191182930.lang);
                  break BeforeRet;
                  }
                  
                  res_486541162 = subInt(res_486541162, 1);
                }
            } while (false);
          } while (false);
        } while (false);

        return result_1191182920;

      }

  var result_1191182893 = [];

    switch (doc_1191182370.target) {
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{csquotes}"));
      Temporary1 = HEX7BHEX7D_1711277194(makeNimstrLit("enquote"), arg_1191182892);
      break;
    default: 
      Temporary1 = nsuFormatSingleElem(translate_1291845675(9, HEX3Aanonymous_1191182919()), arg_1191182892);
      break;
    }
    result_1191182893 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191182893;

}
    
function HEX3Aanonymous_1191182980(arg_1191182981) {
      var result_1191182982 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191182890 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("\""), arg_1191182981, [HEX21_1275068536(1)]);
        result_1191182982 = nimCopy(result_1191182982, {typ: 1, str: quoteCmd_1191182891(to_1694498913(vals_1191182890[chckIndx(0, 0, (vals_1191182890).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191182982;

    }

function inlineMathCmd_1191183038(math_1191183039) {
  var result_1191183040 = [];

    result_1191183040 = nimCopy(null, renderMath_1778387873(doc_1191182370, math_1191183039, false, true), NTI33554439);

  return result_1191183040;

}
    
function HEX3Aanonymous_1191183046(arg_1191183047) {
      var result_1191183048 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, mathCommands_1778384910(doc_1191182370), NTI1275068467);
        var vals_1191183037 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("$"), arg_1191183047, [HEX21_1275068536(0)]);
        result_1191183048 = nimCopy(result_1191183048, {typ: 1, str: inlineMathCmd_1191183038(to_1694498913(vals_1191183037[chckIndx(0, 0, (vals_1191183037).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183048;

    }

function blockMathCmd_1191183108(math_1191183109) {
  var result_1191183110 = [];

    result_1191183110 = nimCopy(null, renderMath_1778387873(doc_1191182370, math_1191183109, true, true), NTI33554439);

  return result_1191183110;

}
    
function HEX3Aanonymous_1191183116(arg_1191183117) {
      var result_1191183118 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, mathCommands_1778384910(doc_1191182370), NTI1275068467);
        var vals_1191183107 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("$$"), arg_1191183117, [HEX21_1275068536(0)]);
        result_1191183118 = nimCopy(result_1191183118, {typ: 1, str: blockMathCmd_1191183108(to_1694498913(vals_1191183107[chckIndx(0, 0, (vals_1191183107).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183118;

    }

function alignedMathCmd_1191183178(math_1191183179) {
  var result_1191183180 = [];

    result_1191183180 = nimCopy(null, renderMath_1778387873(doc_1191182370, env_1711277202(makeNimstrLit("align*"), math_1191183179), true, false), NTI33554439);

  return result_1191183180;

}
    
function HEX3Aanonymous_1191183186(arg_1191183187) {
      var result_1191183188 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, mathCommands_1778384910(doc_1191182370), NTI1275068467);
        var vals_1191183177 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("$$&"), arg_1191183187, [HEX21_1275068536(0)]);
        result_1191183188 = nimCopy(result_1191183188, {typ: 1, str: alignedMathCmd_1191183178(to_1694498913(vals_1191183177[chckIndx(0, 0, (vals_1191183177).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183188;

    }

function LaTeXCmd_1191183248() {
    var Temporary1;
      var Temporary2;

  var result_1191183249 = [];

    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet322[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-latex{text-transform:uppercase;font-size:1em;}.xd-latex>sub{vertical-align:-0.5ex;margin-left:-0.1667em;margin-right:-0.125em;}.xd-latex>sup{font-size:0.85em;vertical-align:0.15em;margin-left:-0.36em;margin-right:-0.15em;}"));
      Temporary1 = makeNimstrLit("<span class=\"xd-latex\">L<sup>a</sup>T<sub>e</sub>X</span>");
      break;
    case 1:
      Temporary1 = makeNimstrLit("\\LaTeX{}");
      break;
    case 2:
      Temporary1 = makeNimstrLit("LaTeX");
      break;
    }
    result_1191183249 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191183249;

}
    
function HEX3Aanonymous_1191183278(arg_1191183279) {
      var result_1191183280 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191183247 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("LaTeX"), arg_1191183279, []);
        result_1191183280 = nimCopy(result_1191183280, {typ: 1, str: LaTeXCmd_1191183248(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183280;

    }

function addToHeadCmd_1191183332(arg_1191183333) {
  var result_1191183334 = [];

    incl_1778388038(doc_1191182370.addToHead, arg_1191183333);

  return result_1191183334;

}
    
function HEX3Aanonymous_1191183363(arg_1191183364) {
      var result_1191183365 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [add-to-head] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191183331 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("add-to-head"), arg_1191183364, [HEX21_1275068536(1)]);
        result_1191183365 = nimCopy(result_1191183365, {typ: 0, str: addToHeadCmd_1191183332(to_1694498913(vals_1191183331[chckIndx(0, 0, (vals_1191183331).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183365;

    }

function argRawCmd_1191183421(name_1191183422) {
    name_1191183422 = nimCopy(null, name_1191183422, NTI33554439);
    
function HEX3Aanonymous_1191183426() {
      var result_1191183427 = ({val: [], has: false});

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym35_1191183436 = 0;
          var colontmp__486541248 = 0;
          colontmp__486541248 = subInt((doc_1191182370.stack).length, 1);
          var res_486541249 = colontmp__486541248;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541249)) break Label3;
                iHEX60gensym35_1191183436 = res_486541249;
                var frameHEX60gensym35_1191183437 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym35_1191183436, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (hasKey_1677721908(frameHEX60gensym35_1191183437.args, name_1191183422)) {
                result_1191183427 = nimCopy(result_1191183427, some_1728053767(HEX5BHEX5D_1191183540(frameHEX60gensym35_1191183437.args, name_1191183422)), NTI1275068493);
                break BeforeRet;
                }
                
                res_486541249 = subInt(res_486541249, 1);
              }
          } while (false);
        } while (false);
        result_1191183427 = nimCopy(result_1191183427, none_1728053772(), NTI1275068493);
      } while (false);

      return result_1191183427;

    }
    var Temporary1;

  var result_1191183423 = [];

    var arg_1191183686 = nimCopy(null, HEX3Aanonymous_1191183426(), NTI1275068493);
    if (isSome_1728053623(arg_1191183686)) {
    var arg_1191183701 = nimCopy(null, unsafeGet_1761608185(arg_1191183686), NTI33554439);
    Temporary1 = arg_1191183701;
    }
    else {
      var fmtRes_1191183702 = [mnewString(0)];
      fmtRes_1191183702[0].push.apply(fmtRes_1191183702[0], makeNimstrLit("Parameter not found: "));;
      formatValue_1124073634(fmtRes_1191183702, 0, name_1191183422, []);
      raiseException({message: nimCopy(null, fmtRes_1191183702[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    result_1191183423 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191183423;

}
    
function HEX3Aanonymous_1191183708(arg_1191183709) {
      var result_1191183710 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [arg-raw] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191183420 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("arg-raw"), arg_1191183709, [HEX21_1275068536(0)]);
        result_1191183710 = nimCopy(result_1191183710, {typ: 0, str: argRawCmd_1191183421(to_1694498913(vals_1191183420[chckIndx(0, 0, (vals_1191183420).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183710;

    }

function argCmd_1191183766(name_1191183767) {
  var result_1191183768 = [];

    result_1191183768 = nimCopy(null, renderStr_1308623448(doc_1191182370, argRawCmd_1191183421(name_1191183767)), NTI33554439);

  return result_1191183768;

}
    
function HEX3Aanonymous_1191183774(arg_1191183775) {
      var result_1191183776 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191183765 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("arg"), arg_1191183775, [HEX21_1275068536(0)]);
        result_1191183776 = nimCopy(result_1191183776, {typ: 1, str: argCmd_1191183766(to_1694498913(vals_1191183765[chckIndx(0, 0, (vals_1191183765).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183776;

    }

function argExpandCmd_1191183832(name_1191183833) {
  var result_1191183834 = [];

    result_1191183834 = nimCopy(null, expandStr_1308623444(doc_1191182370, argRawCmd_1191183421(name_1191183833)), NTI33554439);

  return result_1191183834;

}
    
function HEX3Aanonymous_1191183840(arg_1191183841) {
      var result_1191183842 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [arg-expand] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191183831 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("arg-expand"), arg_1191183841, [HEX21_1275068536(0)]);
        result_1191183842 = nimCopy(result_1191183842, {typ: 0, str: argExpandCmd_1191183832(to_1694498913(vals_1191183831[chckIndx(0, 0, (vals_1191183831).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183842;

    }

function argRawEscapeCmd_1191183898(name_1191183899) {
  var result_1191183900 = [];

    result_1191183900 = nimCopy(null, escapeText_1308622856(argRawCmd_1191183421(name_1191183899), doc_1191182370.target), NTI33554439);

  return result_1191183900;

}
    
function HEX3Aanonymous_1191183906(arg_1191183907) {
      var result_1191183908 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [arg-raw-escape] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191183897 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("arg-raw-escape"), arg_1191183907, [HEX21_1275068536(0)]);
        result_1191183908 = nimCopy(result_1191183908, {typ: 1, str: argRawEscapeCmd_1191183898(to_1694498913(vals_1191183897[chckIndx(0, 0, (vals_1191183897).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183908;

    }

function bfCmd_1191183964(arg_1191183965) {
    var Temporary1;

  var result_1191183966 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<b>") || []).concat(arg_1191183965 || [],makeNimstrLit("</b>") || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_1711277194(makeNimstrLit("textbf"), arg_1191183965);
      break;
    case 2:
      Temporary1 = arg_1191183965;
      break;
    }
    result_1191183966 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191183966;

}
    
function HEX3Aanonymous_1191183972(arg_1191183973) {
      var result_1191183974 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191183963 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("bf"), arg_1191183973, [HEX21_1275068536(1)]);
        result_1191183974 = nimCopy(result_1191183974, {typ: 1, str: bfCmd_1191183964(to_1694498913(vals_1191183963[chckIndx(0, 0, (vals_1191183963).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191183974;

    }

function blockQuoteCmd_1191184030(quote_1191184031, author_1191184033) {
    var Temporary1;
      var Temporary2;

  var result_1191184034 = [];

    switch (doc_1191182370.target) {
    case 0:
      if (isSome_1728053623(author_1191184033)) {
      var author_1191184049 = nimCopy(null, unsafeGet_1761608185(author_1191184033), NTI33554439);
      Temporary2 = (makeNimstrLit("<p>") || []).concat(quote_1191184031 || [],makeNimstrLit("</p><p><cite>") || [],author_1191184049 || [],makeNimstrLit("</cite></p>") || []);
      }
      else {
      Temporary2 = quote_1191184031;
      }
      
      Temporary1 = (makeNimstrLit("<blockquote>") || []).concat(Temporary2 || [],makeNimstrLit("</blockquote>") || []);
      break;
    case 1:
      Temporary1 = env_1711277202(makeNimstrLit("quote"), quote_1191184031);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A> $1\x0A"), quote_1191184031);
      break;
    }
    result_1191184034 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191184034;

}
    
function HEX3Aanonymous_1191184055(arg_1191184056) {
      var result_1191184057 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191184029 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("block-quote"), arg_1191184056, [HEX21_1275068536(1), HEX3F_1275068557(1)]);
        result_1191184057 = nimCopy(result_1191184057, {typ: 1, str: blockQuoteCmd_1191184030(to_1694498913(vals_1191184029[chckIndx(0, 0, (vals_1191184029).length - 1)]), to_1728053714(vals_1191184029[chckIndx(1, 0, (vals_1191184029).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191184057;

    }

function checkboxesCmd_1191184123(arg_1191184124) {
    var Temporary1;
      var Temporary2;

  var result_1191184125 = [];

    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet325[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-checkbox-unchecked{list-style-type:\"\xE2\x98\x90 \"}.xd-checkbox-checked{list-style-type:\"\xE2\x98\x91 \"}.xd-checkbox-crossed{list-style-type:\"\xE2\x98\x92 \"}"));
      Temporary1 = (makeNimstrLit("<ul class=\"xd-checkboxes\">") || []).concat(arg_1191184124 || [],makeNimstrLit("</ul>") || []);
      break;
    default: 
      raiseException({message: makeNimstrLit("Checkboxes are currently not supported for the LaTeX target"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191184125 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191184125;

}
    
function HEX3Aanonymous_1191184154(arg_1191184155) {
      var result_1191184156 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, checkboxCommands_1694498822(doc_1191182370), NTI1275068467);
        var vals_1191184122 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("checkboxes"), arg_1191184155, [HEX21_1275068536(0)]);
        result_1191184156 = nimCopy(result_1191184156, {typ: 1, str: checkboxesCmd_1191184123(to_1694498913(vals_1191184122[chckIndx(0, 0, (vals_1191184122).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191184156;

    }

function applySyntaxHighlightingTheme_1191184215() {
    var Temporary1;

    var theme_1191184288 = getOrDefault_1778387960(doc_1191182370.settings, makeNimstrLit("syntax-highlighting-theme"), makeNimstrLit("default"));
    if (!(contains_1191184342(prismCss_1191182368, theme_1191184288))) {
    raiseException({message: (makeNimstrLit("Invalid syntax highlighting theme: ") || []).concat(theme_1191184288 || []), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var Temporary1 = doc_1191182370;
    if (ConstSet326[Temporary1.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary1.target, NTI1275068419)); }
    incl_1778388038(Temporary1.addToStyle, HEX5BHEX5D_1191183540(prismCss_1191182368, theme_1191184288));

  
}

function codeCmd_1191184439(lang_1191184441, code_1191184442) {
    var Temporary1;
      var Temporary2;

  var result_1191184443 = [];

    switch (doc_1191182370.target) {
    case 0:
      applySyntaxHighlightingTheme_1191184215();
      if (isSome_1728053623(lang_1191184441)) {
      var lang_1191184458 = nimCopy(null, unsafeGet_1761608185(lang_1191184441), NTI33554439);
      var fmtRes_1191184459 = [mnewString(0)];
      fmtRes_1191184459[0].push.apply(fmtRes_1191184459[0], makeNimstrLit("language-"));;
      formatValue_1124073634(fmtRes_1191184459, 0, lang_1191184458, []);
      Temporary2 = (makeNimstrLit("<code class=\"") || []).concat(fmtRes_1191184459[0] || [],makeNimstrLit("\">") || [],highlightCode_1577061575(code_1191184442, lang_1191184458) || [],makeNimstrLit("</code>") || []);
      }
      else {
      Temporary2 = (makeNimstrLit("<code>") || []).concat(escapeText_1308622856(code_1191184442, doc_1191182370.target) || [],makeNimstrLit("</code>") || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_1711277194(makeNimstrLit("texttt"), code_1191184442);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A```\x0A{$1}\x0A```\x0A"), code_1191184442);
      break;
    }
    result_1191184443 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191184443;

}
    
function HEX3Aanonymous_1191184465(arg_1191184466) {
      var result_1191184467 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191184438 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("code"), arg_1191184466, [HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1191184467 = nimCopy(result_1191184467, {typ: 1, str: codeCmd_1191184439(to_1728053714(vals_1191184438[chckIndx(0, 0, (vals_1191184438).length - 1)]), to_1694498913(vals_1191184438[chckIndx(1, 0, (vals_1191184438).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191184467;

    }

function codeBlockCmd_1191184533(lang_1191184535, code_1191184536) {
    var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1191184537 = [];

    switch (doc_1191182370.target) {
    case 0:
      applySyntaxHighlightingTheme_1191184215();
      if (isSome_1728053623(lang_1191184535)) {
      var lang_1191184552 = nimCopy(null, unsafeGet_1761608185(lang_1191184535), NTI33554439);
      var fmtRes_1191184553 = [mnewString(0)];
      fmtRes_1191184553[0].push.apply(fmtRes_1191184553[0], makeNimstrLit("language-"));;
      formatValue_1124073634(fmtRes_1191184553, 0, lang_1191184552, []);
      var fmtRes_1191184554 = [mnewString(0)];
      fmtRes_1191184554[0].push.apply(fmtRes_1191184554[0], makeNimstrLit("language-"));;
      formatValue_1124073634(fmtRes_1191184554, 0, lang_1191184552, []);
      Temporary2 = (makeNimstrLit("<pre class=\"") || []).concat(fmtRes_1191184553[0] || [],makeNimstrLit("\"><code class=\"") || [],fmtRes_1191184554[0] || [],makeNimstrLit("\">") || [],highlightCode_1577061575(code_1191184536, lang_1191184552) || [],makeNimstrLit("</code></pre>") || []);
      }
      else {
      Temporary2 = (makeNimstrLit("<pre><code>") || []).concat(escapeText_1308622856(code_1191184536, doc_1191182370.target) || [],makeNimstrLit("</code></pre>") || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{minted}"));
      if (isSome_1728053623(lang_1191184535)) {
      var lang_1191184592 = nimCopy(null, unsafeGet_1761608185(lang_1191184535), NTI33554439);
      Temporary3 = nsuFormatSingleElem(makeNimstrLit("{$1}"), lang_1191184592);
      }
      else {
      Temporary3 = [];
      }
      
      Temporary1 = (env_1711277202(makeNimstrLit("minted"), (Temporary3 || []).concat(makeNimstrLit("\x0A") || [],code_1191184536 || [])) || []).concat(makeNimstrLit("\x0A") || []);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A```\x0A{$1}\x0A```\x0A"), code_1191184536);
      break;
    }
    result_1191184537 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191184537;

}
    
function HEX3Aanonymous_1191184598(arg_1191184599) {
      var result_1191184600 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191184532 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("code-block"), arg_1191184599, [HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1191184600 = nimCopy(result_1191184600, {typ: 1, str: codeBlockCmd_1191184533(to_1728053714(vals_1191184532[chckIndx(0, 0, (vals_1191184532).length - 1)]), to_1694498913(vals_1191184532[chckIndx(1, 0, (vals_1191184532).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191184600;

    }

function colorCmd_1191184666(color_1191184667, text_1191184668) {
    var Temporary1;

  var result_1191184669 = [];

    switch (doc_1191182370.target) {
    case 0:
      var fmtRes_1191184670 = [mnewString(0)];
      fmtRes_1191184670[0].push.apply(fmtRes_1191184670[0], makeNimstrLit("color:"));;
      formatValue_1124073634(fmtRes_1191184670, 0, color_1191184667, []);
      Temporary1 = (makeNimstrLit("<span style=\"") || []).concat(fmtRes_1191184670[0] || [],makeNimstrLit("\">") || [],text_1191184668 || [],makeNimstrLit("</span>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage[svgnames]{xcolor}"));
      Temporary1 = HEX7BHEX7D_1711277194(HEX7BHEX7D_1711277194(makeNimstrLit("textcolor"), color_1191184667), text_1191184668);
      break;
    case 2:
      Temporary1 = text_1191184668;
      break;
    }
    result_1191184669 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191184669;

}
    
function HEX3Aanonymous_1191184699(arg_1191184700) {
      var result_1191184701 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [color] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191184665 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("color"), arg_1191184700, [HEX21_1275068536(0), HEX21_1275068536(1)]);
        result_1191184701 = nimCopy(result_1191184701, {typ: 1, str: colorCmd_1191184666(to_1694498913(vals_1191184665[chckIndx(0, 0, (vals_1191184665).length - 1)]), to_1694498913(vals_1191184665[chckIndx(1, 0, (vals_1191184665).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191184701;

    }

function corollaryCmd_1191184769(thNameHEX60gensym79_1191184771, contentHEX60gensym79_1191184772) {
    
function HEX3Aanonymous_1191184777() {
      var result_1191184778 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym84_1191184787 = 0;
          var colontmp__486541252 = 0;
          colontmp__486541252 = subInt((doc_1191182370.stack).length, 1);
          var res_486541253 = colontmp__486541252;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541253)) break Label3;
                iHEX60gensym84_1191184787 = res_486541253;
                var frameHEX60gensym84_1191184788 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym84_1191184787, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym84_1191184788.lang)) {
                result_1191184778 = get_1191182952(frameHEX60gensym84_1191184788.lang);
                break BeforeRet;
                }
                
                res_486541253 = subInt(res_486541253, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191184778;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191184773 = [];

    var contentHEX60gensym79_1191184774 = renderStr_1308623448(doc_1191182370, contentHEX60gensym79_1191184772);
    var wordHEX60gensym79_1191184811 = translate_1291845675(0, HEX3Aanonymous_1191184777());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet327[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191184835 = mnewString(0);
      fmtRes_1191184835.push.apply(fmtRes_1191184835, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym79_1191184771)) {
      var thNameHEX60gensym79_1191184850 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym79_1191184771), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym79_1191184811, NTI33554439), nimCopy(null, thNameHEX60gensym79_1191184850, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym79_1191184811, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191184835, makeNimstrLit("corollary")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym79_1191184774) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDcorollary}"), wordHEX60gensym79_1191184811) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDcorollary"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym79_1191184774));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym79_1191184771)) {
      var thNameHEX60gensym79_1191184911 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym79_1191184771), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym79_1191184811, NTI33554439), nimCopy(null, thNameHEX60gensym79_1191184911, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym79_1191184811, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym79_1191184774, NTI33554439)]);
      break;
    }
    result_1191184773 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191184773;

}
    
function HEX3Aanonymous_1191184917(arg_1191184918) {
      var result_1191184919 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191184768 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("corollary"), arg_1191184918, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191184919 = nimCopy(result_1191184919, {typ: 1, str: corollaryCmd_1191184769(to_1728053714(vals_1191184768[chckIndx(0, 0, (vals_1191184768).length - 1)]), to_1694498913(vals_1191184768[chckIndx(1, 0, (vals_1191184768).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191184919;

    }

function defCmd_1191184988(name_1191184989, paramList_1191184991, body_1191184992) {
    var Temporary1;
    name_1191184989 = nimCopy(null, name_1191184989, NTI33554439);
    body_1191184992 = nimCopy(null, body_1191184992, NTI33554439);
    
function HEX3Aanonymous_1191185024(arg_1191185025) {
        var Temporary1;

      var result_1191185026 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        if (eqStrings(arg_1191185025, [])) {
        Temporary1 = [];
        }
        else {
        Temporary1 = parseXidocArguments_1325400388(arg_1191185025);
        }
        
        var argsList_1191185031 = nimCopy(null, Temporary1, NTI1325400262);
        if (!(((argsList_1191185031).length == (params_1191185014).length))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs exactly $2 arguments, $3 given"), [nimCopy(null, name_1191184989, NTI33554439), HEX24_335544323((params_1191185014).length), HEX24_335544323((argsList_1191185031).length)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var argsTable_1191185070 = toTable_1577061466(zip_1191185044(params_1191185014, argsList_1191185031));
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).args = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).args, argsTable_1191185070, NTI1275068452);
        result_1191185026 = nimCopy(result_1191185026, {typ: 1, str: renderStr_1308623448(doc_1191182370, body_1191184992), list: [], opt: ({val: null})}, NTI1275068421);

      return result_1191185026;

    }

  var result_1191184993 = [];

    if (isSome_1728053623(paramList_1191184991)) {
    var paramList_1191185009 = nimCopy(null, unsafeGet_1761608185(paramList_1191184991), NTI33554439);
    Temporary1 = nsuSplitWhitespace(paramList_1191185009, -1);
    }
    else {
    Temporary1 = [];
    }
    
    var params_1191185014 = nimCopy(null, Temporary1, NTI654311910);
    HEX5BHEX5DHEX3D_1694498976(HEX5BHEX5D_1728053628(doc_1191182370.stack, 2).commands, name_1191184989, HEX3Aanonymous_1191185024);

  return result_1191184993;

}
    
function HEX3Aanonymous_1191185127(arg_1191185128) {
      var result_1191185129 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191184987 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("def"), arg_1191185128, [HEX21_1275068536(0), HEX3F_1275068557(0), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191185129 = nimCopy(result_1191185129, {typ: 1, str: defCmd_1191184988(to_1694498913(vals_1191184987[chckIndx(0, 0, (vals_1191184987).length - 1)]), to_1728053714(vals_1191184987[chckIndx(1, 0, (vals_1191184987).length - 1)]), to_1694498913(vals_1191184987[chckIndx(2, 0, (vals_1191184987).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191185129;

    }

function defGlobalCmd_1191185199(name_1191185200, paramList_1191185202, body_1191185203) {
    var Temporary1;
    name_1191185200 = nimCopy(null, name_1191185200, NTI33554439);
    body_1191185203 = nimCopy(null, body_1191185203, NTI33554439);
    
function HEX3Aanonymous_1191185231(arg_1191185232) {
        var Temporary1;

      var result_1191185233 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        if (eqStrings(arg_1191185232, [])) {
        Temporary1 = [];
        }
        else {
        Temporary1 = parseXidocArguments_1325400388(arg_1191185232);
        }
        
        var argsList_1191185238 = nimCopy(null, Temporary1, NTI1325400262);
        if (!(((argsList_1191185238).length == (params_1191185225).length))) {
        raiseException({message: nsuFormatOpenArray(makeNimstrLit("Command $1 needs exactly $2 arguments, $3 given"), [nimCopy(null, name_1191185200, NTI33554439), HEX24_335544323((params_1191185225).length), HEX24_335544323((argsList_1191185238).length)]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var argsTable_1191185260 = toTable_1577061466(zip_1191185044(params_1191185225, argsList_1191185238));
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).args = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).args, argsTable_1191185260, NTI1275068452);
        result_1191185233 = nimCopy(result_1191185233, {typ: 1, str: renderStr_1308623448(doc_1191182370, body_1191185203), list: [], opt: ({val: null})}, NTI1275068421);

      return result_1191185233;

    }

  var result_1191185204 = [];

    if (isSome_1728053623(paramList_1191185202)) {
    var paramList_1191185220 = nimCopy(null, unsafeGet_1761608185(paramList_1191185202), NTI33554439);
    Temporary1 = nsuSplitWhitespace(paramList_1191185220, -1);
    }
    else {
    Temporary1 = [];
    }
    
    var params_1191185225 = nimCopy(null, Temporary1, NTI654311910);
    HEX5BHEX5DHEX3D_1694498976(doc_1191182370.stack[chckIndx(0, 0, (doc_1191182370.stack).length - 1)].commands, name_1191185200, HEX3Aanonymous_1191185231);

  return result_1191185204;

}
    
function HEX3Aanonymous_1191185317(arg_1191185318) {
      var result_1191185319 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [def-global] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191185198 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("def-global"), arg_1191185318, [HEX21_1275068536(0), HEX3F_1275068557(0), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191185319 = nimCopy(result_1191185319, {typ: 1, str: defGlobalCmd_1191185199(to_1694498913(vals_1191185198[chckIndx(0, 0, (vals_1191185198).length - 1)]), to_1728053714(vals_1191185198[chckIndx(1, 0, (vals_1191185198).length - 1)]), to_1694498913(vals_1191185198[chckIndx(2, 0, (vals_1191185198).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191185319;

    }

function descriptionListCmd_1191185389(args_1191185390) {
    var Temporary4;

  var result_1191185391 = [];

    if (!((modInt((args_1191185390).length, 2) == 0))) {
    raiseException({message: makeNimstrLit("Arguments to description-list must come in pairs"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var defs_1191185395 = [];
    Label1: do {
      var i_1191185403 = 0;
      var colontmp__486540924 = 0;
      colontmp__486540924 = divInt((args_1191185390).length, 2);
      var i_486540925 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486540925 < colontmp__486540924)) break Label3;
            i_1191185403 = i_486540925;
            defs_1191185395.push([nimCopy(null, args_1191185390[chckIndx(mulInt(2, i_1191185403), 0, (args_1191185390).length - 1)], NTI33554439), nimCopy(null, args_1191185390[chckIndx(addInt(mulInt(2, i_1191185403), 1), 0, (args_1191185390).length - 1)], NTI33554439)]);;
            i_486540925 = addInt(i_486540925, 1);
          }
      } while (false);
    } while (false);
    switch (doc_1191182370.target) {
    case 0:
      Label5: do {
        var iHEX60gensym115_1191185456 = 0;
        var resultHEX60gensym115_1191185463 = newSeq_452985301(chckRange((defs_1191185395).length, 0, 2147483647));
        Label6: do {
          var it_1191185467 = [[], []];
          var i_486540935 = 0;
          var L_486540936 = (defs_1191185395).length;
          Label7: do {
              Label8: while (true) {
              if (!(i_486540935 < L_486540936)) break Label8;
                it_1191185467 = defs_1191185395[chckIndx(i_486540935, 0, (defs_1191185395).length - 1)];
                resultHEX60gensym115_1191185463[chckIndx(iHEX60gensym115_1191185456, 0, (resultHEX60gensym115_1191185463).length - 1)] = nimCopy(null, (makeNimstrLit("<dt>") || []).concat(it_1191185467[chckIndx(0, 0, (it_1191185467).length - 1)] || [],makeNimstrLit("</dt><dd>") || [],it_1191185467[chckIndx(1, 0, (it_1191185467).length - 1)] || [],makeNimstrLit("</dd>") || []), NTI33554439);
                iHEX60gensym115_1191185456 = addInt(iHEX60gensym115_1191185456, 1);
                i_486540935 = addInt(i_486540935, 1);
                if (!(((defs_1191185395).length == L_486540936))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary4 = (makeNimstrLit("<dl>") || []).concat(nsuJoinSep(resultHEX60gensym115_1191185463, []) || [],makeNimstrLit("</dl>") || []);
      break;
    case 1:
      Label9: do {
        var iHEX60gensym120_1191185493 = 0;
        var resultHEX60gensym120_1191185500 = newSeq_452985301(chckRange((defs_1191185395).length, 0, 2147483647));
        Label10: do {
          var it_1191185504 = [[], []];
          var i_486540940 = 0;
          var L_486540941 = (defs_1191185395).length;
          Label11: do {
              Label12: while (true) {
              if (!(i_486540940 < L_486540941)) break Label12;
                it_1191185504 = defs_1191185395[chckIndx(i_486540940, 0, (defs_1191185395).length - 1)];
                resultHEX60gensym120_1191185500[chckIndx(iHEX60gensym120_1191185493, 0, (resultHEX60gensym120_1191185500).length - 1)] = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("\\item[$1] $2"), it_1191185504), NTI33554439);
                iHEX60gensym120_1191185493 = addInt(iHEX60gensym120_1191185493, 1);
                i_486540940 = addInt(i_486540940, 1);
                if (!(((defs_1191185395).length == L_486540941))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary4 = env_1711277202(makeNimstrLit("description"), nsuJoinSep(resultHEX60gensym120_1191185500, []));
      break;
    case 2:
      Label13: do {
        var iHEX60gensym123_1191185530 = 0;
        var resultHEX60gensym123_1191185537 = newSeq_452985301(chckRange((defs_1191185395).length, 0, 2147483647));
        Label14: do {
          var it_1191185541 = [[], []];
          var i_486540945 = 0;
          var L_486540946 = (defs_1191185395).length;
          Label15: do {
              Label16: while (true) {
              if (!(i_486540945 < L_486540946)) break Label16;
                it_1191185541 = defs_1191185395[chckIndx(i_486540945, 0, (defs_1191185395).length - 1)];
                resultHEX60gensym123_1191185537[chckIndx(iHEX60gensym123_1191185530, 0, (resultHEX60gensym123_1191185537).length - 1)] = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("* $1: $2"), it_1191185541), NTI33554439);
                iHEX60gensym123_1191185530 = addInt(iHEX60gensym123_1191185530, 1);
                i_486540945 = addInt(i_486540945, 1);
                if (!(((defs_1191185395).length == L_486540946))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary4 = nsuFormatSingleElem(makeNimstrLit("\x0A$1\x0A"), nsuJoinSep(resultHEX60gensym123_1191185537, makeNimstrLit("\x0A")));
      break;
    }
    result_1191185391 = nimCopy(null, Temporary4, NTI33554439);

  return result_1191185391;

}
    
function HEX3Aanonymous_1191185569(arg_1191185570) {
      var result_1191185571 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191185388 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("description-list"), arg_1191185570, [HEX2A_1275068560(1)]);
        result_1191185571 = nimCopy(result_1191185571, {typ: 1, str: descriptionListCmd_1191185389(to_1761607826(vals_1191185388[chckIndx(0, 0, (vals_1191185388).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191185571;

    }

function dfnCmd_1191185636(thNameHEX60gensym126_1191185638, contentHEX60gensym126_1191185639) {
    
function HEX3Aanonymous_1191185644() {
      var result_1191185645 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym131_1191185654 = 0;
          var colontmp__486541265 = 0;
          colontmp__486541265 = subInt((doc_1191182370.stack).length, 1);
          var res_486541266 = colontmp__486541265;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541266)) break Label3;
                iHEX60gensym131_1191185654 = res_486541266;
                var frameHEX60gensym131_1191185655 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym131_1191185654, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym131_1191185655.lang)) {
                result_1191185645 = get_1191182952(frameHEX60gensym131_1191185655.lang);
                break BeforeRet;
                }
                
                res_486541266 = subInt(res_486541266, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191185645;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191185640 = [];

    var contentHEX60gensym126_1191185641 = renderStr_1308623448(doc_1191182370, contentHEX60gensym126_1191185639);
    var wordHEX60gensym126_1191185678 = translate_1291845675(1, HEX3Aanonymous_1191185644());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet331[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191185702 = mnewString(0);
      fmtRes_1191185702.push.apply(fmtRes_1191185702, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym126_1191185638)) {
      var thNameHEX60gensym126_1191185717 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym126_1191185638), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym126_1191185678, NTI33554439), nimCopy(null, thNameHEX60gensym126_1191185717, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym126_1191185678, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191185702, makeNimstrLit("dfn")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym126_1191185641) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDdfn}"), wordHEX60gensym126_1191185678) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDdfn"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym126_1191185641));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym126_1191185638)) {
      var thNameHEX60gensym126_1191185778 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym126_1191185638), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym126_1191185678, NTI33554439), nimCopy(null, thNameHEX60gensym126_1191185778, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym126_1191185678, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym126_1191185641, NTI33554439)]);
      break;
    }
    result_1191185640 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191185640;

}
    
function HEX3Aanonymous_1191185784(arg_1191185785) {
      var result_1191185786 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191185635 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("dfn"), arg_1191185785, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191185786 = nimCopy(result_1191185786, {typ: 1, str: dfnCmd_1191185636(to_1728053714(vals_1191185635[chckIndx(0, 0, (vals_1191185635).length - 1)]), to_1694498913(vals_1191185635[chckIndx(1, 0, (vals_1191185635).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191185786;

    }

function drawCmd_1191185852(width_1191185854, height_1191185856, desc_1191185857) {
    var Temporary1;

  var result_1191185858 = [];

    switch (doc_1191182370.target) {
    case 0:
      var fmtRes_1191185859 = [mnewString(0)];
      fmtRes_1191185859[0].push.apply(fmtRes_1191185859[0], makeNimstrLit("<svg width=\""));;
      formatValue_1124073634(fmtRes_1191185859, 0, get_1744830691(width_1191185854, makeNimstrLit("360")), []);
      fmtRes_1191185859[0].push.apply(fmtRes_1191185859[0], makeNimstrLit("\" height=\""));;
      formatValue_1124073634(fmtRes_1191185859, 0, get_1744830691(height_1191185856, makeNimstrLit("360")), []);
      fmtRes_1191185859[0].push.apply(fmtRes_1191185859[0], makeNimstrLit("\" viewBox=\"0 0 360 360\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">"));;
      formatValue_1124073634(fmtRes_1191185859, 0, desc_1191185857, []);
      fmtRes_1191185859[0].push.apply(fmtRes_1191185859[0], makeNimstrLit("</svg>"));;
      Temporary1 = fmtRes_1191185859[0];
      break;
    case 1:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("Drawing is currently not implemented in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191185858 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191185858;

}
    
function HEX3Aanonymous_1191185897(arg_1191185898) {
      var result_1191185899 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [draw] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, drawCommands_1744830472(doc_1191182370), NTI1275068467);
        var vals_1191185851 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("draw"), arg_1191185898, [HEX3F_1275068557(0), HEX3F_1275068557(0), HEX21_1275068536(0)]);
        result_1191185899 = nimCopy(result_1191185899, {typ: 1, str: drawCmd_1191185852(to_1728053714(vals_1191185851[chckIndx(0, 0, (vals_1191185851).length - 1)]), to_1728053714(vals_1191185851[chckIndx(1, 0, (vals_1191185851).length - 1)]), to_1694498913(vals_1191185851[chckIndx(2, 0, (vals_1191185851).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191185899;

    }

function emptyFaviconCmd_1191185979() {
  var result_1191185980 = [];

    if ((doc_1191182370.target == 0)) {
    incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("<link rel=\"icon\" href=\"data:,\" />"));
    }
    

  return result_1191185980;

}
    
function HEX3Aanonymous_1191186013(arg_1191186014) {
      var result_1191186015 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191185978 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("empty-favicon"), arg_1191186014, []);
        result_1191186015 = nimCopy(result_1191186015, {typ: 0, str: emptyFaviconCmd_1191185979(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186015;

    }

function exampleCmd_1191186075(thNameHEX60gensym147_1191186077, contentHEX60gensym147_1191186078) {
    
function HEX3Aanonymous_1191186083() {
      var result_1191186084 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym152_1191186093 = 0;
          var colontmp__486541293 = 0;
          colontmp__486541293 = subInt((doc_1191182370.stack).length, 1);
          var res_486541294 = colontmp__486541293;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541294)) break Label3;
                iHEX60gensym152_1191186093 = res_486541294;
                var frameHEX60gensym152_1191186094 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym152_1191186093, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym152_1191186094.lang)) {
                result_1191186084 = get_1191182952(frameHEX60gensym152_1191186094.lang);
                break BeforeRet;
                }
                
                res_486541294 = subInt(res_486541294, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191186084;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191186079 = [];

    var contentHEX60gensym147_1191186080 = renderStr_1308623448(doc_1191182370, contentHEX60gensym147_1191186078);
    var wordHEX60gensym147_1191186117 = translate_1291845675(2, HEX3Aanonymous_1191186083());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet342[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191186141 = mnewString(0);
      fmtRes_1191186141.push.apply(fmtRes_1191186141, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym147_1191186077)) {
      var thNameHEX60gensym147_1191186156 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym147_1191186077), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym147_1191186117, NTI33554439), nimCopy(null, thNameHEX60gensym147_1191186156, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym147_1191186117, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191186141, makeNimstrLit("example")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym147_1191186080) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDexample}"), wordHEX60gensym147_1191186117) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDexample"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym147_1191186080));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym147_1191186077)) {
      var thNameHEX60gensym147_1191186217 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym147_1191186077), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym147_1191186117, NTI33554439), nimCopy(null, thNameHEX60gensym147_1191186217, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym147_1191186117, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym147_1191186080, NTI33554439)]);
      break;
    }
    result_1191186079 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191186079;

}
    
function HEX3Aanonymous_1191186223(arg_1191186224) {
      var result_1191186225 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191186074 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("example"), arg_1191186224, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191186225 = nimCopy(result_1191186225, {typ: 1, str: exampleCmd_1191186075(to_1728053714(vals_1191186074[chckIndx(0, 0, (vals_1191186074).length - 1)]), to_1694498913(vals_1191186074[chckIndx(1, 0, (vals_1191186074).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186225;

    }

function exerciseCmd_1191186299(thNameHEX60gensym155_1191186301, contentHEX60gensym155_1191186302) {
    
function HEX3Aanonymous_1191186307() {
      var result_1191186308 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym160_1191186317 = 0;
          var colontmp__486541297 = 0;
          colontmp__486541297 = subInt((doc_1191182370.stack).length, 1);
          var res_486541298 = colontmp__486541297;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541298)) break Label3;
                iHEX60gensym160_1191186317 = res_486541298;
                var frameHEX60gensym160_1191186318 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym160_1191186317, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym160_1191186318.lang)) {
                result_1191186308 = get_1191182952(frameHEX60gensym160_1191186318.lang);
                break BeforeRet;
                }
                
                res_486541298 = subInt(res_486541298, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191186308;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191186303 = [];

    var contentHEX60gensym155_1191186304 = renderStr_1308623448(doc_1191182370, contentHEX60gensym155_1191186302);
    var wordHEX60gensym155_1191186341 = translate_1291845675(3, HEX3Aanonymous_1191186307());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet343[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191186365 = mnewString(0);
      fmtRes_1191186365.push.apply(fmtRes_1191186365, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym155_1191186301)) {
      var thNameHEX60gensym155_1191186380 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym155_1191186301), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym155_1191186341, NTI33554439), nimCopy(null, thNameHEX60gensym155_1191186380, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym155_1191186341, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191186365, makeNimstrLit("exercise")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym155_1191186304) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDexercise}"), wordHEX60gensym155_1191186341) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDexercise"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym155_1191186304));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym155_1191186301)) {
      var thNameHEX60gensym155_1191186441 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym155_1191186301), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym155_1191186341, NTI33554439), nimCopy(null, thNameHEX60gensym155_1191186441, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym155_1191186341, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym155_1191186304, NTI33554439)]);
      break;
    }
    result_1191186303 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191186303;

}
    
function HEX3Aanonymous_1191186447(arg_1191186448) {
      var result_1191186449 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191186298 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("exercise"), arg_1191186448, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191186449 = nimCopy(result_1191186449, {typ: 1, str: exerciseCmd_1191186299(to_1728053714(vals_1191186298[chckIndx(0, 0, (vals_1191186298).length - 1)]), to_1694498913(vals_1191186298[chckIndx(1, 0, (vals_1191186298).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186449;

    }

function expandCmd_1191186515(arg_1191186516) {
  var result_1191186517 = [];

    result_1191186517 = nimCopy(null, expandStr_1308623444(doc_1191182370, arg_1191186516), NTI33554439);

  return result_1191186517;

}
    
function HEX3Aanonymous_1191186523(arg_1191186524) {
      var result_1191186525 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [expand] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191186514 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("expand"), arg_1191186524, [HEX21_1275068536(0)]);
        result_1191186525 = nimCopy(result_1191186525, {typ: 0, str: expandCmd_1191186515(to_1694498913(vals_1191186514[chckIndx(0, 0, (vals_1191186514).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186525;

    }

function figureCmd_1191186581(content_1191186582, caption_1191186584) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191186585 = [];

    switch (doc_1191182370.target) {
    case 0:
      if (isSome_1728053623(caption_1191186584)) {
      var caption_1191186600 = nimCopy(null, unsafeGet_1761608185(caption_1191186584), NTI33554439);
      Temporary2 = (makeNimstrLit("<figure>") || []).concat(content_1191186582 || [],makeNimstrLit("<figcaption>") || [],caption_1191186600 || [],makeNimstrLit("</figcaption></figure>") || []);
      }
      else {
      Temporary2 = (makeNimstrLit("<figure>") || []).concat(content_1191186582 || [],makeNimstrLit("</figure>") || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      if (isSome_1728053623(caption_1191186584)) {
      var caption_1191186615 = nimCopy(null, unsafeGet_1761608185(caption_1191186584), NTI33554439);
      Temporary3 = HEX7BHEX7D_1711277194(makeNimstrLit("caption"), caption_1191186615);
      }
      else {
      Temporary3 = [];
      }
      
      Temporary1 = env_1711277202(makeNimstrLit("figure"), (makeNimstrLit("[h]\\centering") || []).concat(content_1191186582 || [],Temporary3 || []));
      break;
    case 2:
      if (isSome_1728053623(caption_1191186584)) {
      var caption_1191186630 = nimCopy(null, unsafeGet_1761608185(caption_1191186584), NTI33554439);
      Temporary4 = (makeNimstrLit("\x0A") || []).concat(caption_1191186630 || []);
      }
      else {
      Temporary4 = [];
      }
      
      Temporary1 = (makeNimstrLit("\x0A") || []).concat(content_1191186582 || [],Temporary4 || []);
      break;
    }
    result_1191186585 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191186585;

}
    
function HEX3Aanonymous_1191186636(arg_1191186637) {
      var result_1191186638 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191186580 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("figure"), arg_1191186637, [HEX21_1275068536(1), HEX3F_1275068557(1)]);
        result_1191186638 = nimCopy(result_1191186638, {typ: 1, str: figureCmd_1191186581(to_1694498913(vals_1191186580[chckIndx(0, 0, (vals_1191186580).length - 1)]), to_1728053714(vals_1191186580[chckIndx(1, 0, (vals_1191186580).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186638;

    }

function forEachCmd_1191186704(name_1191186705, list_1191186706, tmpl_1191186707) {
            
function HEX3Aanonymous_1191186741(__1191186753) {
              var result_1191186756 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                result_1191186756 = nimCopy(result_1191186756, itemCopy_1191186731, NTI1275068421);

              return result_1191186756;

            }

  var result_1191186708 = [];

    var results_1191186709 = [];
    Label1: do {
      var item_1191186730 = ({typ: 0, str: [], list: [], opt: ({val: null})});
      var i_486540950 = 0;
      var L_486540951 = (list_1191186706).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486540950 < L_486540951)) break Label3;
            item_1191186730 = list_1191186706[chckIndx(i_486540950, 0, (list_1191186706).length - 1)];
            var itemCopy_1191186731 = nimCopy(null, item_1191186730, NTI1275068421);
            HEX5BHEX5DHEX3D_1694498976(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, name_1191186705, HEX3Aanonymous_1191186741);
            results_1191186709.push(expand_1308622953(doc_1191182370, tmpl_1191186707, item_1191186730.typ));;
            i_486540950 = addInt(i_486540950, 1);
            if (!(((list_1191186706).length == L_486540951))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_1191186708 = nimCopy(null, results_1191186709, NTI1191185608);

  return result_1191186708;

}
    
function HEX3Aanonymous_1191186816(arg_1191186817) {
      var result_1191186818 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191186703 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("for-each"), arg_1191186817, [HEX21_1275068536(0), HEX21_1275068536(2), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191186818 = nimCopy(result_1191186818, {typ: 2, list: forEachCmd_1191186704(to_1694498913(vals_1191186703[chckIndx(0, 0, (vals_1191186703).length - 1)]), to_1191186827(vals_1191186703[chckIndx(1, 0, (vals_1191186703).length - 1)]), to_1694498913(vals_1191186703[chckIndx(2, 0, (vals_1191186703).length - 1)])), str: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186818;

    }

function getDocPathAbsoluteCmd_1191186937() {
    var Temporary1;

  var result_1191186938 = [];

    var path_1191186939 = nimCopy(null, doc_1191182370.stack[chckIndx(0, 0, (doc_1191182370.stack).length - 1)].path, NTI1275068493);
    if (isSome_1728053623(path_1191186939)) {
    var path_1191186954 = nimCopy(null, unsafeGet_1761608185(path_1191186939), NTI33554439);
    Temporary1 = absolutePath_1476395650(path_1191186954, nosgetCurrentDir());
    }
    else {
    Temporary1 = [];
    }
    
    result_1191186938 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191186938;

}
    
function HEX3Aanonymous_1191186960(arg_1191186961) {
      var result_1191186962 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [get-doc-path-absolute] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191186936 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("get-doc-path-absolute"), arg_1191186961, []);
        result_1191186962 = nimCopy(result_1191186962, {typ: 0, str: getDocPathAbsoluteCmd_1191186937(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191186962;

    }

function getDocPathRelativeToContainingCmd_1191187014(arg_1191187015) {
  var result_1191187016 = [];

    result_1191187016 = nimCopy(null, [], NTI33554439);

  return result_1191187016;

}
    
function HEX3Aanonymous_1191187022(arg_1191187023) {
      var result_1191187024 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [get-doc-path-relative-to-containing] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191187013 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("get-doc-path-relative-to-containing"), arg_1191187023, [HEX21_1275068536(0)]);
        result_1191187024 = nimCopy(result_1191187024, {typ: 0, str: getDocPathRelativeToContainingCmd_1191187014(to_1694498913(vals_1191187013[chckIndx(0, 0, (vals_1191187013).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187024;

    }

function headerRowCmd_1191187080(entries_1191187081) {
    var Temporary4;

  var result_1191187082 = [];

      var resultHEX60gensym194_1191187084 = false;
      Label1: do {
        var it_1191187088 = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})});
        var i_486540955 = 0;
        var L_486540956 = (doc_1191182370.stack).length;
        Label2: do {
            Label3: while (true) {
            if (!(i_486540955 < L_486540956)) break Label3;
              it_1191187088 = doc_1191182370.stack[chckIndx(i_486540955, 0, (doc_1191182370.stack).length - 1)];
              if (eqStrings(it_1191187088.cmdName, makeNimstrLit("table"))) {
              resultHEX60gensym194_1191187084 = true;
              break Label1;
              }
              
              i_486540955 = addInt(i_486540955, 1);
              if (!(((doc_1191182370.stack).length == L_486540956))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    if (!(resultHEX60gensym194_1191187084)) {
    raiseException({message: makeNimstrLit("The header-row command has to be inside a table command"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    switch (doc_1191182370.target) {
    case 0:
      Label5: do {
        var iHEX60gensym196_1191187110 = 0;
        var resultHEX60gensym196_1191187117 = newSeq_452985301(chckRange((entries_1191187081).length, 0, 2147483647));
        Label6: do {
          var it_1191187121 = [];
          var i_486540965 = 0;
          var L_486540966 = (entries_1191187081).length;
          Label7: do {
              Label8: while (true) {
              if (!(i_486540965 < L_486540966)) break Label8;
                it_1191187121 = entries_1191187081[chckIndx(i_486540965, 0, (entries_1191187081).length - 1)];
                resultHEX60gensym196_1191187117[chckIndx(iHEX60gensym196_1191187110, 0, (resultHEX60gensym196_1191187117).length - 1)] = nimCopy(null, (makeNimstrLit("<th>") || []).concat(it_1191187121 || [],makeNimstrLit("</th>") || []), NTI33554439);
                iHEX60gensym196_1191187110 = addInt(iHEX60gensym196_1191187110, 1);
                i_486540965 = addInt(i_486540965, 1);
                if (!(((entries_1191187081).length == L_486540966))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary4 = (makeNimstrLit("<tr>") || []).concat(nsuJoinSep(resultHEX60gensym196_1191187117, []) || [],makeNimstrLit("</tr>") || []);
      break;
    case 1:
      Temporary4 = nsuFormatSingleElem(makeNimstrLit("$1\\\\\\midrule "), nsuJoinSep(entries_1191187081, makeNimstrLit("&")));
      break;
    case 2:
      raiseException({message: makeNimstrLit("Tables are currently not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191187082 = nimCopy(null, Temporary4, NTI33554439);

  return result_1191187082;

}
    
function HEX3Aanonymous_1191187131(arg_1191187132) {
      var result_1191187133 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191187079 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("header-row"), arg_1191187132, [HEX2A_1275068560(1)]);
        result_1191187133 = nimCopy(result_1191187133, {typ: 1, str: headerRowCmd_1191187080(to_1761607826(vals_1191187079[chckIndx(0, 0, (vals_1191187079).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187133;

    }

function hideCmd_1191187190(arg_1191187191) {
  var result_1191187192 = [];

  return result_1191187192;

}
    
function HEX3Aanonymous_1191187198(arg_1191187199) {
      var result_1191187200 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191187189 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("hide"), arg_1191187199, [HEX21_1275068536(0)]);
        result_1191187200 = nimCopy(result_1191187200, {typ: 0, str: hideCmd_1191187190(to_1694498913(vals_1191187189[chckIndx(0, 0, (vals_1191187189).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187200;

    }

function hintCmd_1191187264(thNameHEX60gensym202_1191187266, contentHEX60gensym202_1191187267) {
    
function HEX3Aanonymous_1191187272() {
      var result_1191187273 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym207_1191187282 = 0;
          var colontmp__486541305 = 0;
          colontmp__486541305 = subInt((doc_1191182370.stack).length, 1);
          var res_486541306 = colontmp__486541305;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541306)) break Label3;
                iHEX60gensym207_1191187282 = res_486541306;
                var frameHEX60gensym207_1191187283 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym207_1191187282, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym207_1191187283.lang)) {
                result_1191187273 = get_1191182952(frameHEX60gensym207_1191187283.lang);
                break BeforeRet;
                }
                
                res_486541306 = subInt(res_486541306, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191187273;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191187268 = [];

    var contentHEX60gensym202_1191187269 = renderStr_1308623448(doc_1191182370, contentHEX60gensym202_1191187267);
    var wordHEX60gensym202_1191187306 = translate_1291845675(4, HEX3Aanonymous_1191187272());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet358[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191187330 = mnewString(0);
      fmtRes_1191187330.push.apply(fmtRes_1191187330, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym202_1191187266)) {
      var thNameHEX60gensym202_1191187345 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym202_1191187266), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym202_1191187306, NTI33554439), nimCopy(null, thNameHEX60gensym202_1191187345, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym202_1191187306, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191187330, makeNimstrLit("hint")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym202_1191187269) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDhint}"), wordHEX60gensym202_1191187306) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDhint"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym202_1191187269));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym202_1191187266)) {
      var thNameHEX60gensym202_1191187406 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym202_1191187266), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym202_1191187306, NTI33554439), nimCopy(null, thNameHEX60gensym202_1191187406, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym202_1191187306, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym202_1191187269, NTI33554439)]);
      break;
    }
    result_1191187268 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191187268;

}
    
function HEX3Aanonymous_1191187412(arg_1191187413) {
      var result_1191187414 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191187263 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("hint"), arg_1191187413, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191187414 = nimCopy(result_1191187414, {typ: 1, str: hintCmd_1191187264(to_1728053714(vals_1191187263[chckIndx(0, 0, (vals_1191187263).length - 1)]), to_1694498913(vals_1191187263[chckIndx(1, 0, (vals_1191187263).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187414;

    }

function htmlAddAttrsCmd_1191187480(args_1191187481, tag_1191187482) {
    var Temporary1;

  var result_1191187483 = [];

    switch (doc_1191182370.target) {
    case 0:
      var matches_1191187484 = [[], []];
      if (!(npegsmatchCapture(tag_1191187482, peg_1207963446(makeNimstrLit("{\'<\' [a-zA-Z-]+} {.*}")), matches_1191187484, 0))) {
      raiseException({message: makeNimstrLit("Can\'t add HTML attribute to something that isn\'t an HTML tag"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
      var attrs_1191187492 = newSeq_452985301(0);
      var classes_1191187500 = newSeq_452985301(0);
      Label2: do {
        var arg_1191187504 = [];
        var i_486540969 = 0;
        var L_486540970 = (args_1191187481).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_486540969 < L_486540970)) break Label4;
              arg_1191187504 = args_1191187481[chckIndx(i_486540969, 0, (args_1191187481).length - 1)];
              if (nsuStartsWith(arg_1191187504, makeNimstrLit("#"))) {
              attrs_1191187492.push(nsuFormatSingleElem(makeNimstrLit("id=\"$1\""), HEX5BHEX5D_939527322(arg_1191187504, HEX2EHEX2E_872415312(1, 1))));;
              }
              else {
              if (nsuStartsWith(arg_1191187504, makeNimstrLit("."))) {
              classes_1191187500.push(HEX5BHEX5D_939527322(arg_1191187504, HEX2EHEX2E_872415312(1, 1)));;
              }
              else {
                var Temporary5 = nimCopy(null, arg_1191187504, NTI33554439);
              attrs_1191187492.push(Temporary5);;
              }
              }
              i_486540969 = addInt(i_486540969, 1);
              if (!(((args_1191187481).length == L_486540970))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      if (!(((classes_1191187500).length == 0))) {
      attrs_1191187492.push(nsuFormatSingleElem(makeNimstrLit("class=\"$1\""), nsuJoinSep(classes_1191187500, makeNimstrLit(" "))));;
      }
      
      Temporary1 = nsuJoinSep(matches_1191187484, (makeNimstrLit(" ") || []).concat(nsuJoinSep(attrs_1191187492, makeNimstrLit(" ")) || []));
      break;
    default: 
      Temporary1 = tag_1191187482;
      break;
    }
    result_1191187483 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191187483;

}
    
function HEX3Aanonymous_1191187565(arg_1191187566) {
      var result_1191187567 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [html-add-attrs] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191187479 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("html-add-attrs"), arg_1191187566, [HEX2A_1275068560(0), HEX21_1275068536(1)]);
        result_1191187567 = nimCopy(result_1191187567, {typ: 1, str: htmlAddAttrsCmd_1191187480(to_1761607826(vals_1191187479[chckIndx(0, 0, (vals_1191187479).length - 1)]), to_1694498913(vals_1191187479[chckIndx(1, 0, (vals_1191187479).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187567;

    }

function ifHtmlCmd_1191187628(arg_1191187629) {
    var Temporary1;

  var result_1191187630 = [];

    if ((doc_1191182370.target == 0)) {
    Temporary1 = renderStr_1308623448(doc_1191182370, arg_1191187629);
    }
    else {
    Temporary1 = [];
    }
    
    result_1191187630 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191187630;

}
    
function HEX3Aanonymous_1191187640(arg_1191187641) {
      var result_1191187642 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191187627 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("if-html"), arg_1191187641, [{kind: 3, base: 0}]);
        result_1191187642 = nimCopy(result_1191187642, {typ: 1, str: ifHtmlCmd_1191187628(to_1694498913(vals_1191187627[chckIndx(0, 0, (vals_1191187627).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187642;

    }

function ifLatexCmd_1191187698(arg_1191187699) {
    var Temporary1;

  var result_1191187700 = [];

    if ((doc_1191182370.target == 1)) {
    Temporary1 = renderStr_1308623448(doc_1191182370, arg_1191187699);
    }
    else {
    Temporary1 = [];
    }
    
    result_1191187700 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191187700;

}
    
function HEX3Aanonymous_1191187710(arg_1191187711) {
      var result_1191187712 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191187697 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("if-latex"), arg_1191187711, [{kind: 3, base: 0}]);
        result_1191187712 = nimCopy(result_1191187712, {typ: 1, str: ifLatexCmd_1191187698(to_1694498913(vals_1191187697[chckIndx(0, 0, (vals_1191187697).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187712;

    }

function ifGemtextCmd_1191187768(arg_1191187769) {
    var Temporary1;

  var result_1191187770 = [];

    if ((doc_1191182370.target == 2)) {
    Temporary1 = renderStr_1308623448(doc_1191182370, arg_1191187769);
    }
    else {
    Temporary1 = [];
    }
    
    result_1191187770 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191187770;

}
    
function HEX3Aanonymous_1191187780(arg_1191187781) {
      var result_1191187782 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191187767 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("if-gemtext"), arg_1191187781, [{kind: 3, base: 0}]);
        result_1191187782 = nimCopy(result_1191187782, {typ: 1, str: ifGemtextCmd_1191187768(to_1694498913(vals_1191187767[chckIndx(0, 0, (vals_1191187767).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191187782;

    }

function includeCmd_1191187838(filename_1191187839, args_1191187840) {
    
function HEX3Aanonymous_1191187847() {
      var result_1191187848 = [];

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym235_1191187857 = 0;
          var colontmp__486541317 = 0;
          colontmp__486541317 = subInt((doc_1191182370.stack).length, 1);
          var res_486541318 = colontmp__486541317;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541318)) break Label3;
                iHEX60gensym235_1191187857 = res_486541318;
                var frameHEX60gensym235_1191187858 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym235_1191187857, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1728053623(frameHEX60gensym235_1191187858.path)) {
                result_1191187848 = nimCopy(null, get_1728053657(frameHEX60gensym235_1191187858.path), NTI33554439);
                break BeforeRet;
                }
                
                res_486541318 = subInt(res_486541318, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191187848;

    }
    var Temporary1;
    var Temporary3;
    
function HEX3Aanonymous_1191187884() {
      var result_1191187885 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym236_1191187894 = 0;
          var colontmp__486541322 = 0;
          colontmp__486541322 = subInt((doc_1191182370.stack).length, 1);
          var res_486541323 = colontmp__486541322;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541323)) break Label3;
                iHEX60gensym236_1191187894 = res_486541323;
                var frameHEX60gensym236_1191187895 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym236_1191187894, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym236_1191187895.lang)) {
                result_1191187885 = get_1191182952(frameHEX60gensym236_1191187895.lang);
                break BeforeRet;
                }
                
                res_486541323 = subInt(res_486541323, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191187885;

    }

  var result_1191187841 = [];

    if (!((modInt((args_1191187840).length, 2) == 0))) {
    raiseException({message: makeNimstrLit("Additional arguments to include must come in pairs"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var path_1191187881 = HEX2F_1476395124(nossplitPath(HEX3Aanonymous_1191187847()).Field0, filename_1191187839);
++excHandler;
    Temporary3 = framePtr;
    try {
    var subdoc_1191187930 = {body: readFile_452985260(path_1191187881), target: doc_1191182370.target, snippet: true, stack: [{cmdName: makeNimstrLit("[top]"), lang: some_1191187918(HEX3Aanonymous_1191187884()), path: some_1728053767(path_1191187881), args: ({data: [], counter: 0}), cmdArg: [], commands: ({data: [], counter: 0})}], addToHead: ({data: [], counter: 0, first: 0, last: 0}), safeMode: false, settings: ({data: [], counter: 0}), templateArgs: ({data: [], counter: 0}), verbose: false, addToStyle: ({data: [], counter: 0, first: 0, last: 0})};
    subdoc_1191187930.stack[chckIndx(0, 0, (subdoc_1191187930.stack).length - 1)].commands = nimCopy(subdoc_1191187930.stack[chckIndx(0, 0, (subdoc_1191187930.stack).length - 1)].commands, defaultCommands_1191182369(subdoc_1191187930), NTI1275068467);
    Label4: do {
      var i_1191187938 = 0;
      var colontmp__486540973 = 0;
      colontmp__486540973 = divInt((args_1191187840).length, 2);
      var i_486540974 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(i_486540974 < colontmp__486540973)) break Label6;
            i_1191187938 = i_486540974;
            HEX5BHEX5DHEX3D_1577058383(subdoc_1191187930.templateArgs, args_1191187840[chckIndx(mulInt(2, i_1191187938), 0, (args_1191187840).length - 1)], args_1191187840[chckIndx(addInt(mulInt(2, i_1191187938), 1), 0, (args_1191187840).length - 1)]);
            i_486540974 = addInt(i_486540974, 1);
          }
      } while (false);
    } while (false);
    Temporary1 = renderStr_1308623448(subdoc_1191187930, subdoc_1191187930.body);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary3;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555115))) {
    var fmtRes_1191187985 = [mnewString(0)];
    fmtRes_1191187985[0].push.apply(fmtRes_1191187985[0], makeNimstrLit("Cannot open file "));;
    formatValue_1124073634(fmtRes_1191187985, 0, filename_1191187839, []);
    fmtRes_1191187985[0].push.apply(fmtRes_1191187985[0], makeNimstrLit("\x0A(resolved as "));;
    formatValue_1124073634(fmtRes_1191187985, 0, path_1191187881, []);
    fmtRes_1191187985[0].push.apply(fmtRes_1191187985[0], makeNimstrLit(")"));;
    raiseException({message: nimCopy(null, fmtRes_1191187985[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary3;
    }
    result_1191187841 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191187841;

}
    
function HEX3Aanonymous_1191188039(arg_1191188040) {
      var result_1191188041 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [include] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191187837 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("include"), arg_1191188040, [HEX21_1275068536(0), HEX2A_1275068560(1)]);
        result_1191188041 = nimCopy(result_1191188041, {typ: 1, str: includeCmd_1191187838(to_1694498913(vals_1191187837[chckIndx(0, 0, (vals_1191187837).length - 1)]), to_1761607826(vals_1191187837[chckIndx(1, 0, (vals_1191187837).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188041;

    }

function injectCmd_1191188102(filename_1191188103) {
    
function HEX3Aanonymous_1191188107() {
      var result_1191188108 = [];

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym242_1191188117 = 0;
          var colontmp__486541326 = 0;
          colontmp__486541326 = subInt((doc_1191182370.stack).length, 1);
          var res_486541327 = colontmp__486541326;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541327)) break Label3;
                iHEX60gensym242_1191188117 = res_486541327;
                var frameHEX60gensym242_1191188118 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym242_1191188117, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1728053623(frameHEX60gensym242_1191188118.path)) {
                result_1191188108 = nimCopy(null, get_1728053657(frameHEX60gensym242_1191188118.path), NTI33554439);
                break BeforeRet;
                }
                
                res_486541327 = subInt(res_486541327, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191188108;

    }
    var Temporary1;
    var Temporary3;

  var result_1191188104 = [];

    var path_1191188141 = HEX2F_1476395124(nossplitPath(HEX3Aanonymous_1191188107()).Field0, filename_1191188103);
    HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).path = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).path, some_1728053767(path_1191188141), NTI1275068493);
++excHandler;
    Temporary3 = framePtr;
    try {
    Temporary1 = renderStr_1308623448(doc_1191182370, readFile_452985260(path_1191188141));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary3;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555115))) {
    var fmtRes_1191188149 = [mnewString(0)];
    fmtRes_1191188149[0].push.apply(fmtRes_1191188149[0], makeNimstrLit("Cannot open file "));;
    formatValue_1124073634(fmtRes_1191188149, 0, filename_1191188103, []);
    fmtRes_1191188149[0].push.apply(fmtRes_1191188149[0], makeNimstrLit("\x0A(resolved as "));;
    formatValue_1124073634(fmtRes_1191188149, 0, path_1191188141, []);
    fmtRes_1191188149[0].push.apply(fmtRes_1191188149[0], makeNimstrLit(")"));;
    raiseException({message: nimCopy(null, fmtRes_1191188149[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary3;
    }
    result_1191188104 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191188104;

}
    
function HEX3Aanonymous_1191188155(arg_1191188156) {
      var result_1191188157 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [inject] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188101 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("inject"), arg_1191188156, [HEX21_1275068536(0)]);
        result_1191188157 = nimCopy(result_1191188157, {typ: 1, str: injectCmd_1191188102(to_1694498913(vals_1191188101[chckIndx(0, 0, (vals_1191188101).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188157;

    }

function itCmd_1191188213(arg_1191188214) {
    var Temporary1;

  var result_1191188215 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<i>") || []).concat(arg_1191188214 || [],makeNimstrLit("</i>") || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_1711277194(makeNimstrLit("textit"), arg_1191188214);
      break;
    case 2:
      Temporary1 = arg_1191188214;
      break;
    }
    result_1191188215 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191188215;

}
    
function HEX3Aanonymous_1191188221(arg_1191188222) {
      var result_1191188223 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191188212 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("it"), arg_1191188222, [HEX21_1275068536(1)]);
        result_1191188223 = nimCopy(result_1191188223, {typ: 1, str: itCmd_1191188213(to_1694498913(vals_1191188212[chckIndx(0, 0, (vals_1191188212).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188223;

    }

function janetCallCmd_1191188279(function_1191188280, args_1191188281) {
    
function HEX3Aanonymous_1191188285() {
      var result_1191188286 = [];

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym253_1191188295 = 0;
          var colontmp__486541338 = 0;
          colontmp__486541338 = subInt((doc_1191182370.stack).length, 1);
          var res_486541339 = colontmp__486541338;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541339)) break Label3;
                iHEX60gensym253_1191188295 = res_486541339;
                var frameHEX60gensym253_1191188296 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym253_1191188295, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1728053623(frameHEX60gensym253_1191188296.path)) {
                result_1191188286 = nimCopy(null, get_1728053657(frameHEX60gensym253_1191188296.path), NTI33554439);
                break BeforeRet;
                }
                
                res_486541339 = subInt(res_486541339, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191188286;

    }

  var result_1191188282 = [];

    result_1191188282 = nimCopy(null, janetCall_1392509006(function_1191188280, args_1191188281, HEX3Aanonymous_1191188285()), NTI33554439);

  return result_1191188282;

}
    
function HEX3Aanonymous_1191188324(arg_1191188325) {
      var result_1191188326 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [janet-call] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188278 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("janet-call"), arg_1191188325, [HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1191188326 = nimCopy(result_1191188326, {typ: 0, str: janetCallCmd_1191188279(to_1694498913(vals_1191188278[chckIndx(0, 0, (vals_1191188278).length - 1)]), to_1761607826(vals_1191188278[chckIndx(1, 0, (vals_1191188278).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188326;

    }

function janetEvalCmd_1191188387(code_1191188388, args_1191188389) {
    
function HEX3Aanonymous_1191188416() {
      var result_1191188417 = [];

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym262_1191188426 = 0;
          var colontmp__486541345 = 0;
          colontmp__486541345 = subInt((doc_1191182370.stack).length, 1);
          var res_486541346 = colontmp__486541345;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541346)) break Label3;
                iHEX60gensym262_1191188426 = res_486541346;
                var frameHEX60gensym262_1191188427 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym262_1191188426, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1728053623(frameHEX60gensym262_1191188427.path)) {
                result_1191188417 = nimCopy(null, get_1728053657(frameHEX60gensym262_1191188427.path), NTI33554439);
                break BeforeRet;
                }
                
                res_486541346 = subInt(res_486541346, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191188417;

    }

  var result_1191188390 = [];

    if (!((modInt((args_1191188389).length, 2) == 0))) {
    raiseException({message: makeNimstrLit("Arguments to janet-eval must come in pairs of name; value"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var values_1191188401 = [];
    Label1: do {
      var i_1191188409 = 0;
      var colontmp__486540977 = 0;
      colontmp__486540977 = divInt((args_1191188389).length, 2);
      var i_486540978 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486540978 < colontmp__486540977)) break Label3;
            i_1191188409 = i_486540978;
            values_1191188401.push({Field0: nimCopy(null, args_1191188389[chckIndx(mulInt(2, i_1191188409), 0, (args_1191188389).length - 1)], NTI33554439), Field1: nimCopy(null, args_1191188389[chckIndx(addInt(mulInt(2, i_1191188409), 1), 0, (args_1191188389).length - 1)], NTI33554439)});;
            i_486540978 = addInt(i_486540978, 1);
          }
      } while (false);
    } while (false);
    result_1191188390 = nimCopy(null, janetEval_1392509106(code_1191188388, values_1191188401, HEX3Aanonymous_1191188416()), NTI33554439);

  return result_1191188390;

}
    
function HEX3Aanonymous_1191188455(arg_1191188456) {
      var result_1191188457 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [janet-eval] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188386 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("janet-eval"), arg_1191188456, [HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1191188457 = nimCopy(result_1191188457, {typ: 0, str: janetEvalCmd_1191188387(to_1694498913(vals_1191188386[chckIndx(0, 0, (vals_1191188386).length - 1)]), to_1761607826(vals_1191188386[chckIndx(1, 0, (vals_1191188386).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188457;

    }

function joinCmd_1191188518(sep_1191188519, list_1191188520) {
              var Temporary5;

  var result_1191188521 = [];

    Label1: do {
      var iHEX60gensym268_1191188543 = 0;
      var resultHEX60gensym268_1191188550 = newSeq_452985301(chckRange((list_1191188520).length, 0, 2147483647));
      Label2: do {
        var it_1191188554 = ({typ: 0, str: [], list: [], opt: ({val: null})});
        var i_486541350 = 0;
        var L_486541351 = (list_1191188520).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_486541350 < L_486541351)) break Label4;
              it_1191188554 = list_1191188520[chckIndx(i_486541350, 0, (list_1191188520).length - 1)];
              var Temporary5 = it_1191188554;
              if (ConstSet362[Temporary5.typ]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'XidocValue\' using \'typ = "), reprDiscriminant(Temporary5.typ, NTI1275068420)); }
              resultHEX60gensym268_1191188550[chckIndx(iHEX60gensym268_1191188543, 0, (resultHEX60gensym268_1191188550).length - 1)] = nimCopy(null, Temporary5.str, NTI33554439);
              iHEX60gensym268_1191188543 = addInt(iHEX60gensym268_1191188543, 1);
              i_486541350 = addInt(i_486541350, 1);
              if (!(((list_1191188520).length == L_486541351))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    result_1191188521 = nimCopy(null, nsuJoinSep(resultHEX60gensym268_1191188550, sep_1191188519), NTI33554439);

  return result_1191188521;

}
    
function HEX3Aanonymous_1191188564(arg_1191188565) {
      var result_1191188566 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191188517 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("join"), arg_1191188565, [HEX21_1275068536(1), HEX21_1275068536(2)]);
        result_1191188566 = nimCopy(result_1191188566, {typ: 1, str: joinCmd_1191188518(to_1694498913(vals_1191188517[chckIndx(0, 0, (vals_1191188517).length - 1)]), to_1191186827(vals_1191188517[chckIndx(1, 0, (vals_1191188517).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188566;

    }

function jsCallCmd_1191188627(function_1191188628, args_1191188629) {
  var result_1191188630 = [];

    result_1191188630 = nimCopy(null, jsCall_1577061579(function_1191188628, args_1191188629), NTI33554439);

  return result_1191188630;

}
    
function HEX3Aanonymous_1191188636(arg_1191188637) {
      var result_1191188638 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [js-call] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188626 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("js-call"), arg_1191188637, [HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1191188638 = nimCopy(result_1191188638, {typ: 0, str: jsCallCmd_1191188627(to_1694498913(vals_1191188626[chckIndx(0, 0, (vals_1191188626).length - 1)]), to_1761607826(vals_1191188626[chckIndx(1, 0, (vals_1191188626).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188638;

    }

function jsEvalCmd_1191188699(code_1191188700, args_1191188701) {
  var result_1191188702 = [];

    if (!((modInt((args_1191188701).length, 2) == 0))) {
    raiseException({message: makeNimstrLit("Arguments to js-eval must come in pairs of name; value"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    var values_1191188712 = [];
    Label1: do {
      var i_1191188720 = 0;
      var colontmp__486541354 = 0;
      colontmp__486541354 = divInt((args_1191188701).length, 2);
      var i_486541355 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541355 < colontmp__486541354)) break Label3;
            i_1191188720 = i_486541355;
            values_1191188712.push({Field0: nimCopy(null, args_1191188701[chckIndx(mulInt(2, i_1191188720), 0, (args_1191188701).length - 1)], NTI33554439), Field1: nimCopy(null, args_1191188701[chckIndx(addInt(mulInt(2, i_1191188720), 1), 0, (args_1191188701).length - 1)], NTI33554439)});;
            i_486541355 = addInt(i_486541355, 1);
          }
      } while (false);
    } while (false);
    result_1191188702 = nimCopy(null, jsEval_1577061583(code_1191188700, values_1191188712), NTI33554439);

  return result_1191188702;

}
    
function HEX3Aanonymous_1191188730(arg_1191188731) {
      var result_1191188732 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [js-eval] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188698 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("js-eval"), arg_1191188731, [HEX21_1275068536(0), HEX2A_1275068560(0)]);
        result_1191188732 = nimCopy(result_1191188732, {typ: 0, str: jsEvalCmd_1191188699(to_1694498913(vals_1191188698[chckIndx(0, 0, (vals_1191188698).length - 1)]), to_1761607826(vals_1191188698[chckIndx(1, 0, (vals_1191188698).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188732;

    }

function jsModuleCmd_1191188793(js_1191188794) {
  var result_1191188795 = [];

    switch (doc_1191182370.target) {
    case 0:
      HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, jsCommands_1761607688(doc_1191182370), NTI1275068467);
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("<script type=\"module\">") || []).concat(expandStr_1308623444(doc_1191182370, js_1191188794) || [],makeNimstrLit("</script>") || []));
      break;
    default: 
      break;
    }

  return result_1191188795;

}
    
function HEX3Aanonymous_1191188828(arg_1191188829) {
      var result_1191188830 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [js-module] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188792 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("js-module"), arg_1191188829, [{kind: 3, base: 0}]);
        result_1191188830 = nimCopy(result_1191188830, {typ: 0, str: jsModuleCmd_1191188793(to_1694498913(vals_1191188792[chckIndx(0, 0, (vals_1191188792).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188830;

    }

function jsModuleRawCmd_1191188886(js_1191188887) {
  var result_1191188888 = [];

    if ((doc_1191182370.target == 0)) {
    incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("<script type=\"module\">") || []).concat(js_1191188887 || [],makeNimstrLit("</script>") || []));
    }
    

  return result_1191188888;

}
    
function HEX3Aanonymous_1191188921(arg_1191188922) {
      var result_1191188923 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [js-module-raw] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191188885 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("js-module-raw"), arg_1191188922, [{kind: 3, base: 0}]);
        result_1191188923 = nimCopy(result_1191188923, {typ: 0, str: jsModuleRawCmd_1191188886(to_1694498913(vals_1191188885[chckIndx(0, 0, (vals_1191188885).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188923;

    }

function langCmd_1191188979(langStr_1191188980, body_1191188981) {
    var Temporary1;

  var result_1191188982 = [];

    switch (toJSStr(nsuToLowerAsciiStr(langStr_1191188980))) {
    case "en":
    case "english":
      Temporary1 = 0;
      break;
    case "cs":
    case "cz":
    case "czech":
      Temporary1 = 1;
      break;
    case "de":
    case "german":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: nsuFormatSingleElem(makeNimstrLit("Unknown language: $1"), langStr_1191188980), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    var lang_1191188983 = Temporary1;
    HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).lang = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).lang, some_1191187918(lang_1191188983), NTI1275068480);
    result_1191188982 = nimCopy(null, renderStr_1308623448(doc_1191182370, body_1191188981), NTI33554439);

  return result_1191188982;

}
    
function HEX3Aanonymous_1191188996(arg_1191188997) {
      var result_1191188998 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191188978 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("lang"), arg_1191188997, [HEX21_1275068536(0), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191188998 = nimCopy(result_1191188998, {typ: 1, str: langCmd_1191188979(to_1694498913(vals_1191188978[chckIndx(0, 0, (vals_1191188978).length - 1)]), to_1694498913(vals_1191188978[chckIndx(1, 0, (vals_1191188978).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191188998;

    }

function lemmaCmd_1191189066(thNameHEX60gensym299_1191189068, contentHEX60gensym299_1191189069) {
    
function HEX3Aanonymous_1191189074() {
      var result_1191189075 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym304_1191189084 = 0;
          var colontmp__486541374 = 0;
          colontmp__486541374 = subInt((doc_1191182370.stack).length, 1);
          var res_486541375 = colontmp__486541374;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541375)) break Label3;
                iHEX60gensym304_1191189084 = res_486541375;
                var frameHEX60gensym304_1191189085 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym304_1191189084, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym304_1191189085.lang)) {
                result_1191189075 = get_1191182952(frameHEX60gensym304_1191189085.lang);
                break BeforeRet;
                }
                
                res_486541375 = subInt(res_486541375, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191189075;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191189070 = [];

    var contentHEX60gensym299_1191189071 = renderStr_1308623448(doc_1191182370, contentHEX60gensym299_1191189069);
    var wordHEX60gensym299_1191189108 = translate_1291845675(7, HEX3Aanonymous_1191189074());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet364[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191189132 = mnewString(0);
      fmtRes_1191189132.push.apply(fmtRes_1191189132, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym299_1191189068)) {
      var thNameHEX60gensym299_1191189147 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym299_1191189068), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym299_1191189108, NTI33554439), nimCopy(null, thNameHEX60gensym299_1191189147, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym299_1191189108, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191189132, makeNimstrLit("lemma")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym299_1191189071) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDlemma}"), wordHEX60gensym299_1191189108) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDlemma"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym299_1191189071));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym299_1191189068)) {
      var thNameHEX60gensym299_1191189208 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym299_1191189068), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym299_1191189108, NTI33554439), nimCopy(null, thNameHEX60gensym299_1191189208, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym299_1191189108, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym299_1191189071, NTI33554439)]);
      break;
    }
    result_1191189070 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191189070;

}
    
function HEX3Aanonymous_1191189214(arg_1191189215) {
      var result_1191189216 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191189065 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("lemma"), arg_1191189215, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191189216 = nimCopy(result_1191189216, {typ: 1, str: lemmaCmd_1191189066(to_1728053714(vals_1191189065[chckIndx(0, 0, (vals_1191189065).length - 1)]), to_1694498913(vals_1191189065[chckIndx(1, 0, (vals_1191189065).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189216;

    }

function linesCmd_1191189282(lns_1191189283) {
  var result_1191189284 = [];

    result_1191189284 = nimCopy(null, nsuJoinSep(lns_1191189283, seps_1191189285[chckIndx(doc_1191182370.target, 0, (seps_1191189285).length - 1)]), NTI33554439);

  return result_1191189284;

}
    
function HEX3Aanonymous_1191189309(arg_1191189310) {
      var result_1191189311 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191189281 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("lines"), arg_1191189310, [HEX2A_1275068560(1)]);
        result_1191189311 = nimCopy(result_1191189311, {typ: 1, str: linesCmd_1191189282(to_1761607826(vals_1191189281[chckIndx(0, 0, (vals_1191189281).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189311;

    }

function linkCmd_1191189368(name_1191189370, url_1191189371) {
    var Temporary1;
      var Temporary2;

  var result_1191189372 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<a href=\"") || []).concat(url_1191189371 || [],makeNimstrLit("\">") || [],get_1744830691(name_1191189370, url_1191189371) || [],makeNimstrLit("</a>") || []);
      break;
    case 1:
      Temporary1 = get_1744830691(name_1191189370, []);
      break;
    case 2:
      if (isSome_1728053623(name_1191189370)) {
      var name_1191189419 = nimCopy(null, unsafeGet_1761608185(name_1191189370), NTI33554439);
      Temporary2 = nsuFormatOpenArray(makeNimstrLit("\x0A=> $1 $2"), [nimCopy(null, url_1191189371, NTI33554439), nimCopy(null, name_1191189419, NTI33554439)]);
      }
      else {
      Temporary2 = nsuFormatOpenArray(makeNimstrLit("\x0A=> $1"), [nimCopy(null, url_1191189371, NTI33554439)]);
      }
      
      Temporary1 = Temporary2;
      break;
    }
    result_1191189372 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191189372;

}
    
function HEX3Aanonymous_1191189425(arg_1191189426) {
      var result_1191189427 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191189367 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("link"), arg_1191189426, [HEX3F_1275068557(1), HEX21_1275068536(0)]);
        result_1191189427 = nimCopy(result_1191189427, {typ: 1, str: linkCmd_1191189368(to_1728053714(vals_1191189367[chckIndx(0, 0, (vals_1191189367).length - 1)]), to_1694498913(vals_1191189367[chckIndx(1, 0, (vals_1191189367).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189427;

    }

function linkImageCmd_1191189493(alt_1191189494, url_1191189495, link_1191189497) {
    var Temporary1;
      var Temporary2;

  var result_1191189498 = [];

    switch (doc_1191182370.target) {
    case 0:
      if (isSome_1728053623(link_1191189497)) {
      var link_1191189513 = nimCopy(null, unsafeGet_1761608185(link_1191189497), NTI33554439);
      Temporary2 = (makeNimstrLit("<a href=\"") || []).concat(link_1191189513 || [],makeNimstrLit("\"><img src=\"") || [],url_1191189495 || [],makeNimstrLit("\" alt=\"") || [],alt_1191189494 || [],makeNimstrLit("\" /></a>") || []);
      }
      else {
      Temporary2 = (makeNimstrLit("<img src=\"") || []).concat(url_1191189495 || [],makeNimstrLit("\" alt=\"") || [],alt_1191189494 || [],makeNimstrLit("\" />") || []);
      }
      
      Temporary1 = Temporary2;
      break;
    case 1:
      raiseException({message: makeNimstrLit("Linking images is not supported in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      if (isSome_1728053623(link_1191189497)) {
      raiseException({message: makeNimstrLit("Linking images with an additional link is not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A=> $1 \xF0\x9E\x96\xBC $2"), [nimCopy(null, url_1191189495, NTI33554439), nimCopy(null, alt_1191189494, NTI33554439)]);
      break;
    }
    result_1191189498 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191189498;

}
    
function HEX3Aanonymous_1191189526(arg_1191189527) {
      var result_1191189528 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [link-image] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191189492 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("link-image"), arg_1191189527, [HEX21_1275068536(0), HEX21_1275068536(0), HEX3F_1275068557(0)]);
        result_1191189528 = nimCopy(result_1191189528, {typ: 1, str: linkImageCmd_1191189493(to_1694498913(vals_1191189492[chckIndx(0, 0, (vals_1191189492).length - 1)]), to_1694498913(vals_1191189492[chckIndx(1, 0, (vals_1191189492).length - 1)]), to_1728053714(vals_1191189492[chckIndx(2, 0, (vals_1191189492).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189528;

    }

function linkStylesheetCmd_1191189598(url_1191189599) {
  var result_1191189600 = [];

    if ((doc_1191182370.target == 0)) {
    incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("<link rel=\"stylesheet\" href=\"") || []).concat(url_1191189599 || [],makeNimstrLit("\" />") || []));
    }
    

  return result_1191189600;

}
    
function HEX3Aanonymous_1191189633(arg_1191189634) {
      var result_1191189635 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [link-stylesheet] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191189597 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("link-stylesheet"), arg_1191189634, [HEX21_1275068536(0)]);
        result_1191189635 = nimCopy(result_1191189635, {typ: 0, str: linkStylesheetCmd_1191189598(to_1694498913(vals_1191189597[chckIndx(0, 0, (vals_1191189597).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189635;

    }

function listCmd_1191189691(items_1191189692) {
    var Temporary1;

  var result_1191189693 = [];

    switch (doc_1191182370.target) {
    case 0:
      Label2: do {
        var iHEX60gensym332_1191189715 = 0;
        var resultHEX60gensym332_1191189722 = newSeq_452985301(chckRange((items_1191189692).length, 0, 2147483647));
        Label3: do {
          var it_1191189726 = [];
          var i_486540987 = 0;
          var L_486540988 = (items_1191189692).length;
          Label4: do {
              Label5: while (true) {
              if (!(i_486540987 < L_486540988)) break Label5;
                it_1191189726 = items_1191189692[chckIndx(i_486540987, 0, (items_1191189692).length - 1)];
                resultHEX60gensym332_1191189722[chckIndx(iHEX60gensym332_1191189715, 0, (resultHEX60gensym332_1191189722).length - 1)] = nimCopy(null, (makeNimstrLit("<li>") || []).concat(it_1191189726 || [],makeNimstrLit("</li>") || []), NTI33554439);
                iHEX60gensym332_1191189715 = addInt(iHEX60gensym332_1191189715, 1);
                i_486540987 = addInt(i_486540987, 1);
                if (!(((items_1191189692).length == L_486540988))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = (makeNimstrLit("<ul>") || []).concat(nsuJoinSep(resultHEX60gensym332_1191189722, []) || [],makeNimstrLit("</ul>") || []);
      break;
    case 1:
      Label6: do {
        var iHEX60gensym335_1191189752 = 0;
        var resultHEX60gensym335_1191189759 = newSeq_452985301(chckRange((items_1191189692).length, 0, 2147483647));
        Label7: do {
          var it_1191189763 = [];
          var i_486540992 = 0;
          var L_486540993 = (items_1191189692).length;
          Label8: do {
              Label9: while (true) {
              if (!(i_486540992 < L_486540993)) break Label9;
                it_1191189763 = items_1191189692[chckIndx(i_486540992, 0, (items_1191189692).length - 1)];
                resultHEX60gensym335_1191189759[chckIndx(iHEX60gensym335_1191189752, 0, (resultHEX60gensym335_1191189759).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\item $1"), it_1191189763), NTI33554439);
                iHEX60gensym335_1191189752 = addInt(iHEX60gensym335_1191189752, 1);
                i_486540992 = addInt(i_486540992, 1);
                if (!(((items_1191189692).length == L_486540993))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = env_1711277202(makeNimstrLit("itemize"), nsuJoinSep(resultHEX60gensym335_1191189759, []));
      break;
    case 2:
      Label10: do {
        var iHEX60gensym338_1191189789 = 0;
        var resultHEX60gensym338_1191189796 = newSeq_452985301(chckRange((items_1191189692).length, 0, 2147483647));
        Label11: do {
          var it_1191189800 = [];
          var i_486540997 = 0;
          var L_486540998 = (items_1191189692).length;
          Label12: do {
              Label13: while (true) {
              if (!(i_486540997 < L_486540998)) break Label13;
                it_1191189800 = items_1191189692[chckIndx(i_486540997, 0, (items_1191189692).length - 1)];
                resultHEX60gensym338_1191189796[chckIndx(iHEX60gensym338_1191189789, 0, (resultHEX60gensym338_1191189796).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("* $1"), it_1191189800), NTI33554439);
                iHEX60gensym338_1191189789 = addInt(iHEX60gensym338_1191189789, 1);
                i_486540997 = addInt(i_486540997, 1);
                if (!(((items_1191189692).length == L_486540998))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A$1\x0A"), nsuJoinSep(resultHEX60gensym338_1191189796, makeNimstrLit("\x0A")));
      break;
    }
    result_1191189693 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191189693;

}
    
function HEX3Aanonymous_1191189810(arg_1191189811) {
      var result_1191189812 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191189690 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("list"), arg_1191189811, [HEX2A_1275068560(1)]);
        result_1191189812 = nimCopy(result_1191189812, {typ: 1, str: listCmd_1191189691(to_1761607826(vals_1191189690[chckIndx(0, 0, (vals_1191189690).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189812;

    }

function listDirsCmd_1191189869(arg_1191189870) {
  var result_1191189871 = [];

    raiseException({message: makeNimstrLit("The list-dirs command is not available when using JavaScript"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_1191189871;

}
    
function HEX3Aanonymous_1191189877(arg_1191189878) {
      var result_1191189879 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [list-dirs] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191189868 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("list-dirs"), arg_1191189878, [HEX21_1275068536(0)]);
        result_1191189879 = nimCopy(result_1191189879, {typ: 2, list: listDirsCmd_1191189869(to_1694498913(vals_1191189868[chckIndx(0, 0, (vals_1191189868).length - 1)])), str: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189879;

    }

function listFilesCmd_1191189935(arg_1191189936) {
  var result_1191189937 = [];

    raiseException({message: makeNimstrLit("The list-files command is not available when using JavaScript"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");

  return result_1191189937;

}
    
function HEX3Aanonymous_1191189943(arg_1191189944) {
      var result_1191189945 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [list-files] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191189934 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("list-files"), arg_1191189944, [HEX21_1275068536(0)]);
        result_1191189945 = nimCopy(result_1191189945, {typ: 2, list: listFilesCmd_1191189935(to_1694498913(vals_1191189934[chckIndx(0, 0, (vals_1191189934).length - 1)])), str: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191189945;

    }

function matextCmd_1191190001(arg_1191190002) {
    var Temporary1;
    var Temporary3;
    var Temporary4;

  var result_1191190003 = [];

++excHandler;
    Temporary3 = framePtr;
    try {
    Temporary1 = matext_1795162115(arg_1191190002, false);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary3;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555125))) {
    raiseException({message: nsuFormatSingleElem(makeNimstrLit("Error when parsing math: $1"), arg_1191190002), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary3;
    }
    var math_1191190004 = nimCopy(null, Temporary1, NTI33554439);
    switch (doc_1191182370.target) {
    case 0:
      Temporary4 = (makeNimstrLit("<pre class=\"xd-matext\">") || []).concat(math_1191190004 || [],makeNimstrLit("</pre>") || []);
      break;
    case 1:
      Temporary4 = (env_1711277202(makeNimstrLit("verbatim"), math_1191190004) || []).concat(makeNimstrLit("\x0A") || []);
      break;
    case 2:
      Temporary4 = nsuFormatSingleElem(makeNimstrLit("\x0A```\x0A{$1}\x0A```\x0A"), math_1191190004);
      break;
    }
    result_1191190003 = nimCopy(null, Temporary4, NTI33554439);

  return result_1191190003;

}
    
function HEX3Aanonymous_1191190010(arg_1191190011) {
      var result_1191190012 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [matext] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191190000 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("matext"), arg_1191190011, [HEX21_1275068536(0)]);
        result_1191190012 = nimCopy(result_1191190012, {typ: 1, str: matextCmd_1191190001(to_1694498913(vals_1191190000[chckIndx(0, 0, (vals_1191190000).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190012;

    }

function msCmd_1191190068(arg_1191190069) {
    var Temporary1;

  var result_1191190070 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<code>") || []).concat(arg_1191190069 || [],makeNimstrLit("</code>") || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_1711277194(makeNimstrLit("texttt"), arg_1191190069);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A```\x0A{$1}\x0A```\x0A"), arg_1191190069);
      break;
    }
    result_1191190070 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191190070;

}
    
function HEX3Aanonymous_1191190076(arg_1191190077) {
      var result_1191190078 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190067 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("ms"), arg_1191190077, [HEX21_1275068536(1)]);
        result_1191190078 = nimCopy(result_1191190078, {typ: 1, str: msCmd_1191190068(to_1694498913(vals_1191190067[chckIndx(0, 0, (vals_1191190067).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190078;

    }

function orderedListCmd_1191190134(items_1191190135) {
    var Temporary1;

  var result_1191190136 = [];

    switch (doc_1191182370.target) {
    case 0:
      Label2: do {
        var iHEX60gensym363_1191190158 = 0;
        var resultHEX60gensym363_1191190165 = newSeq_452985301(chckRange((items_1191190135).length, 0, 2147483647));
        Label3: do {
          var it_1191190169 = [];
          var i_486541007 = 0;
          var L_486541008 = (items_1191190135).length;
          Label4: do {
              Label5: while (true) {
              if (!(i_486541007 < L_486541008)) break Label5;
                it_1191190169 = items_1191190135[chckIndx(i_486541007, 0, (items_1191190135).length - 1)];
                resultHEX60gensym363_1191190165[chckIndx(iHEX60gensym363_1191190158, 0, (resultHEX60gensym363_1191190165).length - 1)] = nimCopy(null, (makeNimstrLit("<li>") || []).concat(it_1191190169 || [],makeNimstrLit("</li>") || []), NTI33554439);
                iHEX60gensym363_1191190158 = addInt(iHEX60gensym363_1191190158, 1);
                i_486541007 = addInt(i_486541007, 1);
                if (!(((items_1191190135).length == L_486541008))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = (makeNimstrLit("<ol>") || []).concat(nsuJoinSep(resultHEX60gensym363_1191190165, []) || [],makeNimstrLit("</ol>") || []);
      break;
    case 1:
      Label6: do {
        var iHEX60gensym366_1191190195 = 0;
        var resultHEX60gensym366_1191190202 = newSeq_452985301(chckRange((items_1191190135).length, 0, 2147483647));
        Label7: do {
          var it_1191190206 = [];
          var i_486541012 = 0;
          var L_486541013 = (items_1191190135).length;
          Label8: do {
              Label9: while (true) {
              if (!(i_486541012 < L_486541013)) break Label9;
                it_1191190206 = items_1191190135[chckIndx(i_486541012, 0, (items_1191190135).length - 1)];
                resultHEX60gensym366_1191190202[chckIndx(iHEX60gensym366_1191190195, 0, (resultHEX60gensym366_1191190202).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\item $1"), it_1191190206), NTI33554439);
                iHEX60gensym366_1191190195 = addInt(iHEX60gensym366_1191190195, 1);
                i_486541012 = addInt(i_486541012, 1);
                if (!(((items_1191190135).length == L_486541013))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = env_1711277202(makeNimstrLit("enumerate"), nsuJoinSep(resultHEX60gensym366_1191190202, []));
      break;
    case 2:
      Label10: do {
        var iHEX60gensym369_1191190232 = 0;
        var resultHEX60gensym369_1191190239 = newSeq_452985301(chckRange((items_1191190135).length, 0, 2147483647));
        Label11: do {
          var it_1191190243 = [];
          var i_486541017 = 0;
          var L_486541018 = (items_1191190135).length;
          Label12: do {
              Label13: while (true) {
              if (!(i_486541017 < L_486541018)) break Label13;
                it_1191190243 = items_1191190135[chckIndx(i_486541017, 0, (items_1191190135).length - 1)];
                resultHEX60gensym369_1191190239[chckIndx(iHEX60gensym369_1191190232, 0, (resultHEX60gensym369_1191190239).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("* $1"), it_1191190243), NTI33554439);
                iHEX60gensym369_1191190232 = addInt(iHEX60gensym369_1191190232, 1);
                i_486541017 = addInt(i_486541017, 1);
                if (!(((items_1191190135).length == L_486541018))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A$1\x0A"), nsuJoinSep(resultHEX60gensym369_1191190239, makeNimstrLit("\x0A")));
      break;
    }
    result_1191190136 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191190136;

}
    
function HEX3Aanonymous_1191190253(arg_1191190254) {
      var result_1191190255 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190133 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("ordered-list"), arg_1191190254, [HEX2A_1275068560(1)]);
        result_1191190255 = nimCopy(result_1191190255, {typ: 1, str: orderedListCmd_1191190134(to_1761607826(vals_1191190133[chckIndx(0, 0, (vals_1191190133).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190255;

    }

function pCmd_1191190312(arg_1191190313) {
    var Temporary1;

  var result_1191190314 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<p>") || []).concat(arg_1191190313 || [],makeNimstrLit("</p>") || []);
      break;
    case 1:
      Temporary1 = (makeNimstrLit("\\par ") || []).concat(arg_1191190313 || []);
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A\x0A$1"), arg_1191190313);
      break;
    }
    result_1191190314 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191190314;

}
    
function HEX3Aanonymous_1191190320(arg_1191190321) {
      var result_1191190322 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190311 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("p"), arg_1191190321, [HEX21_1275068536(1)]);
        result_1191190322 = nimCopy(result_1191190322, {typ: 1, str: pCmd_1191190312(to_1694498913(vals_1191190311[chckIndx(0, 0, (vals_1191190311).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190322;

    }

function passCmd_1191190378(arg_1191190379) {
  var result_1191190380 = [];

    result_1191190380 = nimCopy(null, arg_1191190379, NTI33554439);

  return result_1191190380;

}
    
function HEX3Aanonymous_1191190386(arg_1191190387) {
      var result_1191190388 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [pass] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191190377 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("pass"), arg_1191190387, [HEX21_1275068536(0)]);
        result_1191190388 = nimCopy(result_1191190388, {typ: 1, str: passCmd_1191190378(to_1694498913(vals_1191190377[chckIndx(0, 0, (vals_1191190377).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190388;

    }

function passRawCmd_1191190444(arg_1191190445) {
  var result_1191190446 = [];

    result_1191190446 = nimCopy(null, arg_1191190445, NTI33554439);

  return result_1191190446;

}
    
function HEX3Aanonymous_1191190452(arg_1191190453) {
      var result_1191190454 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [pass-raw] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191190443 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("pass-raw"), arg_1191190453, [{kind: 3, base: 0}]);
        result_1191190454 = nimCopy(result_1191190454, {typ: 1, str: passRawCmd_1191190444(to_1694498913(vals_1191190443[chckIndx(0, 0, (vals_1191190443).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190454;

    }

function proofCmd_1191190518(thNameHEX60gensym382_1191190520, contentHEX60gensym382_1191190521) {
    
function HEX3Aanonymous_1191190534() {
      var result_1191190535 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym389_1191190544 = 0;
          var colontmp__486541378 = 0;
          colontmp__486541378 = subInt((doc_1191182370.stack).length, 1);
          var res_486541379 = colontmp__486541378;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541379)) break Label3;
                iHEX60gensym389_1191190544 = res_486541379;
                var frameHEX60gensym389_1191190545 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym389_1191190544, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym389_1191190545.lang)) {
                result_1191190535 = get_1191182952(frameHEX60gensym389_1191190545.lang);
                break BeforeRet;
                }
                
                res_486541379 = subInt(res_486541379, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191190535;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191190522 = [];

    HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, proofCommands_1778389660(doc_1191182370), NTI1275068467);
    var contentHEX60gensym382_1191190531 = renderStr_1308623448(doc_1191182370, contentHEX60gensym382_1191190521);
    var wordHEX60gensym382_1191190568 = translate_1291845675(8, HEX3Aanonymous_1191190534());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet365[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191190592 = mnewString(0);
      fmtRes_1191190592.push.apply(fmtRes_1191190592, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym382_1191190520)) {
      var thNameHEX60gensym382_1191190607 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym382_1191190520), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym382_1191190568, NTI33554439), nimCopy(null, thNameHEX60gensym382_1191190607, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym382_1191190568, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191190592, makeNimstrLit("proof")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym382_1191190531) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDproof}"), wordHEX60gensym382_1191190568) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDproof"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym382_1191190531));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym382_1191190520)) {
      var thNameHEX60gensym382_1191190668 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym382_1191190520), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym382_1191190568, NTI33554439), nimCopy(null, thNameHEX60gensym382_1191190668, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym382_1191190568, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym382_1191190531, NTI33554439)]);
      break;
    }
    result_1191190522 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191190522;

}
    
function HEX3Aanonymous_1191190674(arg_1191190675) {
      var result_1191190676 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190517 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("proof"), arg_1191190675, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191190676 = nimCopy(result_1191190676, {typ: 1, str: proofCmd_1191190518(to_1728053714(vals_1191190517[chckIndx(0, 0, (vals_1191190517).length - 1)]), to_1694498913(vals_1191190517[chckIndx(1, 0, (vals_1191190517).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190676;

    }

function propsCmd_1191190742(items_1191190743) {
    var Temporary1;

  var result_1191190744 = [];

    switch (doc_1191182370.target) {
    case 0:
      Label2: do {
        var iHEX60gensym395_1191190766 = 0;
        var resultHEX60gensym395_1191190773 = newSeq_452985301(chckRange((items_1191190743).length, 0, 2147483647));
        Label3: do {
          var it_1191190777 = [];
          var i_486541027 = 0;
          var L_486541028 = (items_1191190743).length;
          Label4: do {
              Label5: while (true) {
              if (!(i_486541027 < L_486541028)) break Label5;
                it_1191190777 = items_1191190743[chckIndx(i_486541027, 0, (items_1191190743).length - 1)];
                resultHEX60gensym395_1191190773[chckIndx(iHEX60gensym395_1191190766, 0, (resultHEX60gensym395_1191190773).length - 1)] = nimCopy(null, (makeNimstrLit("<li>") || []).concat(it_1191190777 || [],makeNimstrLit("</li>") || []), NTI33554439);
                iHEX60gensym395_1191190766 = addInt(iHEX60gensym395_1191190766, 1);
                i_486541027 = addInt(i_486541027, 1);
                if (!(((items_1191190743).length == L_486541028))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = (makeNimstrLit("<ul>") || []).concat(nsuJoinSep(resultHEX60gensym395_1191190773, []) || [],makeNimstrLit("</ul>") || []);
      break;
    case 1:
      Label6: do {
        var iHEX60gensym398_1191190803 = 0;
        var resultHEX60gensym398_1191190810 = newSeq_452985301(chckRange((items_1191190743).length, 0, 2147483647));
        Label7: do {
          var it_1191190814 = [];
          var i_486541032 = 0;
          var L_486541033 = (items_1191190743).length;
          Label8: do {
              Label9: while (true) {
              if (!(i_486541032 < L_486541033)) break Label9;
                it_1191190814 = items_1191190743[chckIndx(i_486541032, 0, (items_1191190743).length - 1)];
                resultHEX60gensym398_1191190810[chckIndx(iHEX60gensym398_1191190803, 0, (resultHEX60gensym398_1191190810).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("\\item $1"), it_1191190814), NTI33554439);
                iHEX60gensym398_1191190803 = addInt(iHEX60gensym398_1191190803, 1);
                i_486541032 = addInt(i_486541032, 1);
                if (!(((items_1191190743).length == L_486541033))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = env_1711277202(makeNimstrLit("itemize"), nsuJoinSep(resultHEX60gensym398_1191190810, []));
      break;
    case 2:
      Label10: do {
        var iHEX60gensym401_1191190840 = 0;
        var resultHEX60gensym401_1191190847 = newSeq_452985301(chckRange((items_1191190743).length, 0, 2147483647));
        Label11: do {
          var it_1191190851 = [];
          var i_486541037 = 0;
          var L_486541038 = (items_1191190743).length;
          Label12: do {
              Label13: while (true) {
              if (!(i_486541037 < L_486541038)) break Label13;
                it_1191190851 = items_1191190743[chckIndx(i_486541037, 0, (items_1191190743).length - 1)];
                resultHEX60gensym401_1191190847[chckIndx(iHEX60gensym401_1191190840, 0, (resultHEX60gensym401_1191190847).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("* $1"), it_1191190851), NTI33554439);
                iHEX60gensym401_1191190840 = addInt(iHEX60gensym401_1191190840, 1);
                i_486541037 = addInt(i_486541037, 1);
                if (!(((items_1191190743).length == L_486541038))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A$1\x0A"), nsuJoinSep(resultHEX60gensym401_1191190847, makeNimstrLit("\x0A")));
      break;
    }
    result_1191190744 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191190744;

}
    
function HEX3Aanonymous_1191190861(arg_1191190862) {
      var result_1191190863 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190741 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("props"), arg_1191190862, [HEX2A_1275068560(1)]);
        result_1191190863 = nimCopy(result_1191190863, {typ: 1, str: propsCmd_1191190742(to_1761607826(vals_1191190741[chckIndx(0, 0, (vals_1191190741).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190863;

    }

function rawCmd_1191190920(arg_1191190921) {
  var result_1191190922 = [];

    result_1191190922 = nimCopy(null, arg_1191190921, NTI33554439);

  return result_1191190922;

}
    
function HEX3Aanonymous_1191190928(arg_1191190929) {
      var result_1191190930 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190919 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("raw"), arg_1191190929, [{kind: 3, base: 0}]);
        result_1191190930 = nimCopy(result_1191190930, {typ: 0, str: rawCmd_1191190920(to_1694498913(vals_1191190919[chckIndx(0, 0, (vals_1191190919).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190930;

    }

function rawDedentCmd_1191190986(arg_1191190987) {
  var result_1191190988 = [];

    var HEX3Atmp_1191190989 = nsuStrip(arg_1191190987, true, true, ConstSet366);
    result_1191190988 = nimCopy(null, nsuDedent(HEX3Atmp_1191190989, indentation_654312625(HEX3Atmp_1191190989)), NTI33554439);

  return result_1191190988;

}
    
function HEX3Aanonymous_1191190995(arg_1191190996) {
      var result_1191190997 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191190985 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("raw<"), arg_1191190996, [{kind: 4, base: 0}]);
        result_1191190997 = nimCopy(result_1191190997, {typ: 0, str: rawDedentCmd_1191190986(to_1694498913(vals_1191190985[chckIndx(0, 0, (vals_1191190985).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191190997;

    }

function renderCmd_1191191053(arg_1191191054) {
  var result_1191191055 = [];

    result_1191191055 = nimCopy(null, renderStr_1308623448(doc_1191182370, arg_1191191054), NTI33554439);

  return result_1191191055;

}
    
function HEX3Aanonymous_1191191061(arg_1191191062) {
      var result_1191191063 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191191052 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("render"), arg_1191191062, [HEX21_1275068536(0)]);
        result_1191191063 = nimCopy(result_1191191063, {typ: 1, str: renderCmd_1191191053(to_1694498913(vals_1191191052[chckIndx(0, 0, (vals_1191191052).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191191063;

    }

function replaceSuffixCmd_1191191119(sub_1191191120, by_1191191121, str_1191191122) {
  var result_1191191123 = [];

    var str_1191191124 = [nimCopy(null, str_1191191122, NTI33554439)];
    if (nsuEndsWith(str_1191191124[0], sub_1191191120)) {
    nsuRemoveSuffixString(str_1191191124, 0, sub_1191191120);
    str_1191191124[0].push.apply(str_1191191124[0], by_1191191121);;
    }
    
    result_1191191123 = nimCopy(null, str_1191191124[0], NTI33554439);

  return result_1191191123;

}
    
function HEX3Aanonymous_1191191130(arg_1191191131) {
      var result_1191191132 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191191118 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("replace-suffix"), arg_1191191131, [HEX21_1275068536(0), HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1191191132 = nimCopy(result_1191191132, {typ: 0, str: replaceSuffixCmd_1191191119(to_1694498913(vals_1191191118[chckIndx(0, 0, (vals_1191191118).length - 1)]), to_1694498913(vals_1191191118[chckIndx(1, 0, (vals_1191191118).length - 1)]), to_1694498913(vals_1191191118[chckIndx(2, 0, (vals_1191191118).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191191132;

    }

function resetCmd_1191191196(key_1191191197) {
  var result_1191191198 = [];

    del_1191191239(doc_1191182370.settings, key_1191191197);

  return result_1191191198;

}
    
function HEX3Aanonymous_1191191782(arg_1191191783) {
      var result_1191191784 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [reset] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191191195 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("reset"), arg_1191191783, [HEX21_1275068536(0)]);
        result_1191191784 = nimCopy(result_1191191784, {typ: 0, str: resetCmd_1191191196(to_1694498913(vals_1191191195[chckIndx(0, 0, (vals_1191191195).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191191784;

    }

function rowCmd_1191191840(entries_1191191841) {
    var Temporary4;

  var result_1191191842 = [];

      var resultHEX60gensym421_1191191844 = false;
      Label1: do {
        var it_1191191848 = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})});
        var i_486541041 = 0;
        var L_486541042 = (doc_1191182370.stack).length;
        Label2: do {
            Label3: while (true) {
            if (!(i_486541041 < L_486541042)) break Label3;
              it_1191191848 = doc_1191182370.stack[chckIndx(i_486541041, 0, (doc_1191182370.stack).length - 1)];
              if (eqStrings(it_1191191848.cmdName, makeNimstrLit("table"))) {
              resultHEX60gensym421_1191191844 = true;
              break Label1;
              }
              
              i_486541041 = addInt(i_486541041, 1);
              if (!(((doc_1191182370.stack).length == L_486541042))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    if (!(resultHEX60gensym421_1191191844)) {
    raiseException({message: makeNimstrLit("The row command has to be inside a table command"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    
    switch (doc_1191182370.target) {
    case 0:
      Label5: do {
        var iHEX60gensym423_1191191870 = 0;
        var resultHEX60gensym423_1191191877 = newSeq_452985301(chckRange((entries_1191191841).length, 0, 2147483647));
        Label6: do {
          var it_1191191881 = [];
          var i_486541051 = 0;
          var L_486541052 = (entries_1191191841).length;
          Label7: do {
              Label8: while (true) {
              if (!(i_486541051 < L_486541052)) break Label8;
                it_1191191881 = entries_1191191841[chckIndx(i_486541051, 0, (entries_1191191841).length - 1)];
                resultHEX60gensym423_1191191877[chckIndx(iHEX60gensym423_1191191870, 0, (resultHEX60gensym423_1191191877).length - 1)] = nimCopy(null, (makeNimstrLit("<td>") || []).concat(it_1191191881 || [],makeNimstrLit("</td>") || []), NTI33554439);
                iHEX60gensym423_1191191870 = addInt(iHEX60gensym423_1191191870, 1);
                i_486541051 = addInt(i_486541051, 1);
                if (!(((entries_1191191841).length == L_486541052))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
      } while (false);
      Temporary4 = (makeNimstrLit("<tr>") || []).concat(nsuJoinSep(resultHEX60gensym423_1191191877, []) || [],makeNimstrLit("</tr>") || []);
      break;
    case 1:
      Temporary4 = nsuFormatSingleElem(makeNimstrLit("$1\\\\"), nsuJoinSep(entries_1191191841, makeNimstrLit("&")));
      break;
    case 2:
      raiseException({message: makeNimstrLit("Tables are currently not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191191842 = nimCopy(null, Temporary4, NTI33554439);

  return result_1191191842;

}
    
function HEX3Aanonymous_1191191891(arg_1191191892) {
      var result_1191191893 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191191839 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("row"), arg_1191191892, [HEX2A_1275068560(1)]);
        result_1191191893 = nimCopy(result_1191191893, {typ: 1, str: rowCmd_1191191840(to_1761607826(vals_1191191839[chckIndx(0, 0, (vals_1191191839).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191191893;

    }

function sectionCmd_1191191950(name_1191191952, content_1191191953) {
    var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_1191191954 = [];

    var resultHEX60gensym431_1191191956 = 0;
    Label1: do {
      var it_1191191960 = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})});
      var i_486541055 = 0;
      var L_486541056 = (doc_1191182370.stack).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541055 < L_486541056)) break Label3;
            it_1191191960 = doc_1191182370.stack[chckIndx(i_486541055, 0, (doc_1191182370.stack).length - 1)];
            if (eqStrings(it_1191191960.cmdName, makeNimstrLit("section"))) {
            resultHEX60gensym431_1191191956 = addInt(resultHEX60gensym431_1191191956, 1);
            }
            
            i_486541055 = addInt(i_486541055, 1);
            if (!(((doc_1191182370.stack).length == L_486541056))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    var depth_1191191965 = resultHEX60gensym431_1191191956;
    switch (doc_1191182370.target) {
    case 0:
      if (isSome_1728053623(name_1191191952)) {
      var name_1191191980 = nimCopy(null, unsafeGet_1761608185(name_1191191952), NTI33554439);
      switch (depth_1191191965) {
      case 1:
        Temporary6 = makeNimstrLit("h2");
        break;
      case 2:
        Temporary6 = makeNimstrLit("h3");
        break;
      case 3:
        Temporary6 = makeNimstrLit("h4");
        break;
      case 4:
        Temporary6 = makeNimstrLit("h5");
        break;
      default: 
        Temporary6 = makeNimstrLit("h6");
        break;
      }
      var headingTag_1191191981 = nimCopy(null, Temporary6, NTI33554439);
      Temporary5 = (makeNimstrLit("<section>") || []).concat(nsuFormatOpenArray(makeNimstrLit("<$1 class=\"xd-section-heading\">$2</$1>$3"), [nimCopy(null, headingTag_1191191981, NTI33554439), nimCopy(null, name_1191191980, NTI33554439), nimCopy(null, content_1191191953, NTI33554439)]) || [],makeNimstrLit("</section>") || []);
      }
      else {
      Temporary5 = (makeNimstrLit("<section>") || []).concat(content_1191191953 || [],makeNimstrLit("</section>") || []);
      }
      
      Temporary4 = Temporary5;
      break;
    case 1:
      switch (depth_1191191965) {
      case 1:
        Temporary7 = makeNimstrLit("section");
        break;
      case 2:
        Temporary7 = makeNimstrLit("subsection");
        break;
      case 3:
        Temporary7 = makeNimstrLit("subsubsection");
        break;
      default: 
        raiseException({message: makeNimstrLit("Sections can only be nested 3 levels deep in LaTeX"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        break;
      }
      var cmd_1191191982 = nimCopy(null, Temporary7, NTI33554439);
      if (isSome_1728053623(name_1191191952)) {
      var name_1191191997 = nimCopy(null, unsafeGet_1761608185(name_1191191952), NTI33554439);
      Temporary8 = nsuFormatOpenArray(makeNimstrLit("\\$1*{$2}$3"), [nimCopy(null, cmd_1191191982, NTI33554439), nimCopy(null, name_1191191997, NTI33554439), nimCopy(null, content_1191191953, NTI33554439)]);
      }
      else {
      Temporary8 = nsuFormatOpenArray(makeNimstrLit("\\$1*{}$2"), [nimCopy(null, cmd_1191191982, NTI33554439), nimCopy(null, content_1191191953, NTI33554439)]);
      }
      
      Temporary4 = Temporary8;
      break;
    case 2:
      if (isSome_1728053623(name_1191191952)) {
      var name_1191192012 = nimCopy(null, unsafeGet_1761608185(name_1191191952), NTI33554439);
      switch (depth_1191191965) {
      case 1:
        Temporary10 = makeNimstrLit("## ");
        break;
      case 2:
        Temporary10 = makeNimstrLit("### ");
        break;
      default: 
        Temporary10 = [];
        break;
      }
      var prefix_1191192013 = nimCopy(null, Temporary10, NTI33554439);
      Temporary9 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1$2\x0A\x0A$3"), [nimCopy(null, prefix_1191192013, NTI33554439), nimCopy(null, name_1191192012, NTI33554439), nimCopy(null, content_1191191953, NTI33554439)]);
      }
      else {
      Temporary9 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1"), [nimCopy(null, content_1191191953, NTI33554439)]);
      }
      
      Temporary4 = Temporary9;
      break;
    }
    result_1191191954 = nimCopy(null, Temporary4, NTI33554439);

  return result_1191191954;

}
    
function HEX3Aanonymous_1191192019(arg_1191192020) {
      var result_1191192021 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191191949 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("section"), arg_1191192020, [HEX3F_1275068557(1), HEX21_1275068536(1)]);
        result_1191192021 = nimCopy(result_1191192021, {typ: 1, str: sectionCmd_1191191950(to_1728053714(vals_1191191949[chckIndx(0, 0, (vals_1191191949).length - 1)]), to_1694498913(vals_1191191949[chckIndx(1, 0, (vals_1191191949).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192021;

    }

function setCmd_1191192087(key_1191192088, val_1191192089) {
  var result_1191192090 = [];

    HEX5BHEX5DHEX3D_1577058383(doc_1191182370.settings, key_1191192088, val_1191192089);

  return result_1191192090;

}
    
function HEX3Aanonymous_1191192142(arg_1191192143) {
      var result_1191192144 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [set] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        var vals_1191192086 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("set"), arg_1191192143, [HEX21_1275068536(0), HEX21_1275068536(0)]);
        result_1191192144 = nimCopy(result_1191192144, {typ: 0, str: setCmd_1191192087(to_1694498913(vals_1191192086[chckIndx(0, 0, (vals_1191192086).length - 1)]), to_1694498913(vals_1191192086[chckIndx(1, 0, (vals_1191192086).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192144;

    }

function setDocLangCmd_1191192204(arg_1191192205) {
    var Temporary1;

  var result_1191192206 = [];

    switch (toJSStr(nsuToLowerAsciiStr(arg_1191192205))) {
    case "en":
    case "english":
      Temporary1 = 0;
      break;
    case "cs":
    case "cz":
    case "czech":
      Temporary1 = 1;
      break;
    case "de":
    case "german":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: nsuFormatSingleElem(makeNimstrLit("Unknown language: $1"), arg_1191192205), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    doc_1191182370.stack[chckIndx(0, 0, (doc_1191182370.stack).length - 1)].lang = nimCopy(doc_1191182370.stack[chckIndx(0, 0, (doc_1191182370.stack).length - 1)].lang, some_1191187918(Temporary1), NTI1275068480);

  return result_1191192206;

}
    
function HEX3Aanonymous_1191192215(arg_1191192216) {
      var result_1191192217 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192203 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("set-doc-lang"), arg_1191192216, [HEX21_1275068536(0)]);
        result_1191192217 = nimCopy(result_1191192217, {typ: 0, str: setDocLangCmd_1191192204(to_1694498913(vals_1191192203[chckIndx(0, 0, (vals_1191192203).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192217;

    }

function setSyntaxHighlightingThemeCmd_1191192273(theme_1191192274) {
  var result_1191192275 = [];

    xidocWarning_1258291212(makeNimstrLit("[set-syntax-highlighting-theme] is deprecated. Use [set syntax-highlighting-theme] instead."));
    result_1191192275 = nimCopy(null, setCmd_1191192087(makeNimstrLit("syntax-highlighting-theme"), theme_1191192274), NTI33554439);

  return result_1191192275;

}
    
function HEX3Aanonymous_1191192281(arg_1191192282) {
      var result_1191192283 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192272 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("set-syntax-highlighting-theme"), arg_1191192282, [HEX21_1275068536(0)]);
        result_1191192283 = nimCopy(result_1191192283, {typ: 1, str: setSyntaxHighlightingThemeCmd_1191192273(to_1694498913(vals_1191192272[chckIndx(0, 0, (vals_1191192272).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192283;

    }

function setTitleCmd_1191192339(arg_1191192340) {
  var result_1191192341 = [];

    switch (doc_1191182370.target) {
    case 0:
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("<title>") || []).concat(arg_1191192340 || [],makeNimstrLit("</title>") || []));
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, HEX7BHEX7D_1711277194(makeNimstrLit("title"), arg_1191192340));
      break;
    default: 
      break;
    }

  return result_1191192341;

}
    
function HEX3Aanonymous_1191192393(arg_1191192394) {
      var result_1191192395 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192338 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("set-title"), arg_1191192394, [HEX21_1275068536(0)]);
        result_1191192395 = nimCopy(result_1191192395, {typ: 0, str: setTitleCmd_1191192339(to_1694498913(vals_1191192338[chckIndx(0, 0, (vals_1191192338).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192395;

    }

function showTitleCmd_1191192451(arg_1191192452) {
    var Temporary1;

  var result_1191192453 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<h1>") || []).concat(arg_1191192452 || [],makeNimstrLit("</h1>") || []);
      break;
    case 1:
      Temporary1 = makeNimstrLit("\\maketitle");
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("\x0A# $1\x0A\x0A"), arg_1191192452);
      break;
    }
    result_1191192453 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191192453;

}
    
function HEX3Aanonymous_1191192459(arg_1191192460) {
      var result_1191192461 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192450 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("show-title"), arg_1191192460, [HEX21_1275068536(0)]);
        result_1191192461 = nimCopy(result_1191192461, {typ: 1, str: showTitleCmd_1191192451(to_1694498913(vals_1191192450[chckIndx(0, 0, (vals_1191192450).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192461;

    }

function solutionCmd_1191192525(thNameHEX60gensym450_1191192527, contentHEX60gensym450_1191192528) {
    
function HEX3Aanonymous_1191192533() {
      var result_1191192534 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym455_1191192543 = 0;
          var colontmp__486541405 = 0;
          colontmp__486541405 = subInt((doc_1191182370.stack).length, 1);
          var res_486541406 = colontmp__486541405;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541406)) break Label3;
                iHEX60gensym455_1191192543 = res_486541406;
                var frameHEX60gensym455_1191192544 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym455_1191192543, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym455_1191192544.lang)) {
                result_1191192534 = get_1191182952(frameHEX60gensym455_1191192544.lang);
                break BeforeRet;
                }
                
                res_486541406 = subInt(res_486541406, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191192534;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191192529 = [];

    var contentHEX60gensym450_1191192530 = renderStr_1308623448(doc_1191182370, contentHEX60gensym450_1191192528);
    var wordHEX60gensym450_1191192567 = translate_1291845675(10, HEX3Aanonymous_1191192533());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet369[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191192591 = mnewString(0);
      fmtRes_1191192591.push.apply(fmtRes_1191192591, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym450_1191192527)) {
      var thNameHEX60gensym450_1191192606 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym450_1191192527), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym450_1191192567, NTI33554439), nimCopy(null, thNameHEX60gensym450_1191192606, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym450_1191192567, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191192591, makeNimstrLit("solution")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym450_1191192530) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDsolution}"), wordHEX60gensym450_1191192567) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDsolution"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym450_1191192530));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym450_1191192527)) {
      var thNameHEX60gensym450_1191192667 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym450_1191192527), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym450_1191192567, NTI33554439), nimCopy(null, thNameHEX60gensym450_1191192667, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym450_1191192567, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym450_1191192530, NTI33554439)]);
      break;
    }
    result_1191192529 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191192529;

}
    
function HEX3Aanonymous_1191192673(arg_1191192674) {
      var result_1191192675 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192524 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("solution"), arg_1191192674, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191192675 = nimCopy(result_1191192675, {typ: 1, str: solutionCmd_1191192525(to_1728053714(vals_1191192524[chckIndx(0, 0, (vals_1191192524).length - 1)]), to_1694498913(vals_1191192524[chckIndx(1, 0, (vals_1191192524).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192675;

    }

function spaceCmd_1191192741() {
  var result_1191192742 = [];

    result_1191192742 = nimCopy(null, makeNimstrLit(" "), NTI33554439);

  return result_1191192742;

}
    
function HEX3Aanonymous_1191192748(arg_1191192749) {
      var result_1191192750 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192740 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("space"), arg_1191192749, []);
        result_1191192750 = nimCopy(result_1191192750, {typ: 0, str: spaceCmd_1191192741(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192750;

    }

function splitCmd_1191192802(sep_1191192803, str_1191192804) {
  var result_1191192805 = [];

    Label1: do {
      var HEX3Atmp_1191192825 = nsuSplitString(str_1191192804, sep_1191192803, -1);
      var iHEX60gensym463_1191192828 = 0;
      var resultHEX60gensym463_1191192840 = newSeq_1191192832(chckRange((HEX3Atmp_1191192825).length, 0, 2147483647));
      Label2: do {
        var it_1191192844 = [];
        var i_486541410 = 0;
        var L_486541411 = (HEX3Atmp_1191192825).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_486541410 < L_486541411)) break Label4;
              it_1191192844 = HEX3Atmp_1191192825[chckIndx(i_486541410, 0, (HEX3Atmp_1191192825).length - 1)];
              resultHEX60gensym463_1191192840[chckIndx(iHEX60gensym463_1191192828, 0, (resultHEX60gensym463_1191192840).length - 1)] = nimCopy(resultHEX60gensym463_1191192840[chckIndx(iHEX60gensym463_1191192828, 0, (resultHEX60gensym463_1191192840).length - 1)], {typ: 0, str: nimCopy(null, it_1191192844, NTI33554439), list: [], opt: ({val: null})}, NTI1275068421);
              iHEX60gensym463_1191192828 = addInt(iHEX60gensym463_1191192828, 1);
              i_486541410 = addInt(i_486541410, 1);
              if (!(((HEX3Atmp_1191192825).length == L_486541411))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    result_1191192805 = nimCopy(null, resultHEX60gensym463_1191192840, NTI1191190062);

  return result_1191192805;

}
    
function HEX3Aanonymous_1191192854(arg_1191192855) {
      var result_1191192856 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192801 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("split"), arg_1191192855, [HEX21_1275068536(1), HEX21_1275068536(0)]);
        result_1191192856 = nimCopy(result_1191192856, {typ: 2, list: splitCmd_1191192802(to_1694498913(vals_1191192801[chckIndx(0, 0, (vals_1191192801).length - 1)]), to_1694498913(vals_1191192801[chckIndx(1, 0, (vals_1191192801).length - 1)])), str: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192856;

    }

function spoilerCmd_1191192916(title_1191192917, content_1191192918) {
    var Temporary1;

  var result_1191192919 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<details class=\"xd-spoiler\"><summary>") || []).concat(title_1191192917 || [],makeNimstrLit("</summary>") || [],content_1191192918 || [],makeNimstrLit("</details>") || []);
      break;
    case 1:
      raiseException({message: makeNimstrLit("The spoiler command is not supported in the LaTeX backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    case 2:
      raiseException({message: makeNimstrLit("The spoiler command is not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191192919 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191192919;

}
    
function HEX3Aanonymous_1191192925(arg_1191192926) {
      var result_1191192927 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192915 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("spoiler"), arg_1191192926, [HEX21_1275068536(1), HEX21_1275068536(1)]);
        result_1191192927 = nimCopy(result_1191192927, {typ: 1, str: spoilerCmd_1191192916(to_1694498913(vals_1191192915[chckIndx(0, 0, (vals_1191192915).length - 1)]), to_1694498913(vals_1191192915[chckIndx(1, 0, (vals_1191192915).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191192927;

    }

function spoilerHintCmd_1191192987(name_1191192989, content_1191192990) {
    
function HEX3Aanonymous_1191192994() {
      var result_1191192995 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym475_1191193004 = 0;
          var colontmp__486541414 = 0;
          colontmp__486541414 = subInt((doc_1191182370.stack).length, 1);
          var res_486541415 = colontmp__486541414;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541415)) break Label3;
                iHEX60gensym475_1191193004 = res_486541415;
                var frameHEX60gensym475_1191193005 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym475_1191193004, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym475_1191193005.lang)) {
                result_1191192995 = get_1191182952(frameHEX60gensym475_1191193005.lang);
                break BeforeRet;
                }
                
                res_486541415 = subInt(res_486541415, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191192995;

    }
    var Temporary1;
      var Temporary2;

  var result_1191192991 = [];

    var word_1191193028 = translate_1291845675(4, HEX3Aanonymous_1191192994());
    switch (doc_1191182370.target) {
    case 0:
      if (isSome_1728053623(name_1191192989)) {
      var name_1191193043 = nimCopy(null, unsafeGet_1761608185(name_1191192989), NTI33554439);
      Temporary2 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, word_1191193028, NTI33554439), nimCopy(null, name_1191193043, NTI33554439)]);
      }
      else {
      Temporary2 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, word_1191193028, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<details class=\"xd-spoiler xd-theorem-like xd-hint\"><summary><strong>") || []).concat(Temporary2 || [],makeNimstrLit("</strong></summary>") || [],content_1191192990 || [],makeNimstrLit("</details>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem{XDspoilerhint}"), word_1191193028));
      Temporary1 = env_1711277202(makeNimstrLit("XDspoilerhint"), content_1191192990);
      break;
    case 2:
      raiseException({message: makeNimstrLit("The spoiler-hint command is not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191192991 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191192991;

}
    
function HEX3Aanonymous_1191193095(arg_1191193096) {
      var result_1191193097 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191192986 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("spoiler-hint"), arg_1191193096, [HEX3F_1275068557(1), HEX21_1275068536(1)]);
        result_1191193097 = nimCopy(result_1191193097, {typ: 1, str: spoilerHintCmd_1191192987(to_1728053714(vals_1191192986[chckIndx(0, 0, (vals_1191192986).length - 1)]), to_1694498913(vals_1191192986[chckIndx(1, 0, (vals_1191192986).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193097;

    }

function spoilerSolutionCmd_1191193163(name_1191193165, content_1191193166) {
    
function HEX3Aanonymous_1191193170() {
      var result_1191193171 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym482_1191193180 = 0;
          var colontmp__486541418 = 0;
          colontmp__486541418 = subInt((doc_1191182370.stack).length, 1);
          var res_486541419 = colontmp__486541418;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541419)) break Label3;
                iHEX60gensym482_1191193180 = res_486541419;
                var frameHEX60gensym482_1191193181 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym482_1191193180, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym482_1191193181.lang)) {
                result_1191193171 = get_1191182952(frameHEX60gensym482_1191193181.lang);
                break BeforeRet;
                }
                
                res_486541419 = subInt(res_486541419, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191193171;

    }
    var Temporary1;
      var Temporary2;

  var result_1191193167 = [];

    var word_1191193204 = translate_1291845675(10, HEX3Aanonymous_1191193170());
    switch (doc_1191182370.target) {
    case 0:
      if (isSome_1728053623(name_1191193165)) {
      var name_1191193219 = nimCopy(null, unsafeGet_1761608185(name_1191193165), NTI33554439);
      Temporary2 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, word_1191193204, NTI33554439), nimCopy(null, name_1191193219, NTI33554439)]);
      }
      else {
      Temporary2 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, word_1191193204, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<details class=\"xd-spoiler xd-theorem-like xd-solution\"><summary><strong>") || []).concat(Temporary2 || [],makeNimstrLit("</strong></summary>") || [],content_1191193166 || [],makeNimstrLit("</details>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem{XDspoilersolution}"), word_1191193204));
      Temporary1 = env_1711277202(makeNimstrLit("XDspoilersolution"), content_1191193166);
      break;
    case 2:
      raiseException({message: makeNimstrLit("The spoiler-solution command is not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191193167 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191193167;

}
    
function HEX3Aanonymous_1191193271(arg_1191193272) {
      var result_1191193273 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191193162 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("spoiler-solution"), arg_1191193272, [HEX3F_1275068557(1), HEX21_1275068536(1)]);
        result_1191193273 = nimCopy(result_1191193273, {typ: 1, str: spoilerSolutionCmd_1191193163(to_1728053714(vals_1191193162[chckIndx(0, 0, (vals_1191193162).length - 1)]), to_1694498913(vals_1191193162[chckIndx(1, 0, (vals_1191193162).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193273;

    }

function styleCmd_1191193339(arg_1191193340) {
      var Temporary1;

  var result_1191193341 = [];

    switch (doc_1191182370.target) {
    case 0:
      var Temporary1 = doc_1191182370;
      if (ConstSet370[Temporary1.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary1.target, NTI1275068419)); }
      incl_1778388038(Temporary1.addToStyle, arg_1191193340);
      break;
    default: 
      break;
    }

  return result_1191193341;

}
    
function HEX3Aanonymous_1191193370(arg_1191193371) {
      var result_1191193372 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        if (doc_1191182370.safeMode) {
        raiseException({message: makeNimstrLit("The [style] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
        }
        
        HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands = nimCopy(HEX5BHEX5D_1728053628(doc_1191182370.stack, 1).commands, cssCommands_1728053255(doc_1191182370), NTI1275068467);
        var vals_1191193338 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("style"), arg_1191193371, [HEX21_1275068536(0)]);
        result_1191193372 = nimCopy(result_1191193372, {typ: 0, str: styleCmd_1191193339(to_1694498913(vals_1191193338[chckIndx(0, 0, (vals_1191193338).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193372;

    }

function tableCmd_1191193432(spec_1191193434, content_1191193435) {
    var Temporary1;
      var Temporary2;

  var result_1191193436 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<table>") || []).concat(content_1191193435 || [],makeNimstrLit("</table>") || []);
      break;
    case 1:
      if (isSome_1728053623(spec_1191193434)) {
      var spec_1191193451 = nimCopy(null, unsafeGet_1761608185(spec_1191193434), NTI33554439);
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{booktabs}"));
      Temporary2 = env_1711277202(makeNimstrLit("table"), (makeNimstrLit("{") || []).concat(spec_1191193451 || [],makeNimstrLit("}\\toprule ") || [],content_1191193435 || [],makeNimstrLit("\\bottomrule") || []));
      }
      else {
        raiseException({message: makeNimstrLit("Tables in LaTeX currently require a spec"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      }
      
      Temporary1 = Temporary2;
      break;
    case 2:
      raiseException({message: makeNimstrLit("Tables are currently not supported in the Gemtext backend"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
      break;
    }
    result_1191193436 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191193436;

}
    
function HEX3Aanonymous_1191193480(arg_1191193481) {
      var result_1191193482 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191193431 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("table"), arg_1191193481, [HEX3F_1275068557(0), HEX21_1275068536(1)]);
        result_1191193482 = nimCopy(result_1191193482, {typ: 1, str: tableCmd_1191193432(to_1728053714(vals_1191193431[chckIndx(0, 0, (vals_1191193431).length - 1)]), to_1694498913(vals_1191193431[chckIndx(1, 0, (vals_1191193431).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193482;

    }

function templateArgCmd_1191193548(arg_1191193549) {
    var Temporary1;
    var Temporary3;
    var Temporary4;

  var result_1191193550 = [];

++excHandler;
    Temporary3 = framePtr;
    try {
    Temporary1 = (Temporary4 = HEX5BHEX5D_1677722024(doc_1191182370.templateArgs, arg_1191193549), Temporary4)[0][Temporary4[1]];
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary3;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555126))) {
    var fmtRes_1191193613 = [mnewString(0)];
    fmtRes_1191193613[0].push.apply(fmtRes_1191193613[0], makeNimstrLit("Template argument not found: "));;
    formatValue_1124073634(fmtRes_1191193613, 0, arg_1191193549, []);
    raiseException({message: nimCopy(null, fmtRes_1191193613[0], NTI33554439), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary3;
    }
    result_1191193550 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191193550;

}
    
function HEX3Aanonymous_1191193619(arg_1191193620) {
      var result_1191193621 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191193547 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("template-arg"), arg_1191193620, [HEX21_1275068536(1)]);
        result_1191193621 = nimCopy(result_1191193621, {typ: 1, str: templateArgCmd_1191193548(to_1694498913(vals_1191193547[chckIndx(0, 0, (vals_1191193547).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193621;

    }

function termCmd_1191193677(arg_1191193678) {
    var Temporary1;

  var result_1191193679 = [];

    switch (doc_1191182370.target) {
    case 0:
      Temporary1 = (makeNimstrLit("<dfn>") || []).concat(arg_1191193678 || [],makeNimstrLit("</dfn>") || []);
      break;
    case 1:
      Temporary1 = HEX7BHEX7D_1711277194(makeNimstrLit("textit"), arg_1191193678);
      break;
    case 2:
      Temporary1 = arg_1191193678;
      break;
    }
    result_1191193679 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191193679;

}
    
function HEX3Aanonymous_1191193685(arg_1191193686) {
      var result_1191193687 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191193676 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("term"), arg_1191193686, [HEX21_1275068536(1)]);
        result_1191193687 = nimCopy(result_1191193687, {typ: 1, str: termCmd_1191193677(to_1694498913(vals_1191193676[chckIndx(0, 0, (vals_1191193676).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193687;

    }

function theoremCmd_1191193751(thNameHEX60gensym503_1191193753, contentHEX60gensym503_1191193754) {
    
function HEX3Aanonymous_1191193759() {
      var result_1191193760 = 0;

      BeforeRet: do {
        Label1: do {
          var iHEX60gensym508_1191193769 = 0;
          var colontmp__486541422 = 0;
          colontmp__486541422 = subInt((doc_1191182370.stack).length, 1);
          var res_486541423 = colontmp__486541422;
          Label2: do {
              Label3: while (true) {
              if (!(0 <= res_486541423)) break Label3;
                iHEX60gensym508_1191193769 = res_486541423;
                var frameHEX60gensym508_1191193770 = nimCopy(null, doc_1191182370.stack[chckIndx(iHEX60gensym508_1191193769, 0, (doc_1191182370.stack).length - 1)], NTI1275068425);
                if (isSome_1191182935(frameHEX60gensym508_1191193770.lang)) {
                result_1191193760 = get_1191182952(frameHEX60gensym508_1191193770.lang);
                break BeforeRet;
                }
                
                res_486541423 = subInt(res_486541423, 1);
              }
          } while (false);
        } while (false);
      } while (false);

      return result_1191193760;

    }
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1191193755 = [];

    var contentHEX60gensym503_1191193756 = renderStr_1308623448(doc_1191182370, contentHEX60gensym503_1191193754);
    var wordHEX60gensym503_1191193793 = translate_1291845675(11, HEX3Aanonymous_1191193759());
    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet371[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-theorem-like{margin:1rem 0}.xd-theorem-like>p{margin:0.5rem 0}"));
      var fmtRes_1191193817 = mnewString(0);
      fmtRes_1191193817.push.apply(fmtRes_1191193817, makeNimstrLit("xd-theorem-like xd-$1"));;
      if (isSome_1728053623(thNameHEX60gensym503_1191193753)) {
      var thNameHEX60gensym503_1191193832 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym503_1191193753), NTI33554439);
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)."), [nimCopy(null, wordHEX60gensym503_1191193793, NTI33554439), nimCopy(null, thNameHEX60gensym503_1191193832, NTI33554439)]);
      }
      else {
      Temporary3 = nsuFormatOpenArray(makeNimstrLit("$1."), [nimCopy(null, wordHEX60gensym503_1191193793, NTI33554439)]);
      }
      
      Temporary1 = (makeNimstrLit("<div class=\"") || []).concat(nsuFormatSingleElem(fmtRes_1191193817, makeNimstrLit("theorem")) || [],makeNimstrLit("\"><strong>") || [],Temporary3 || [],makeNimstrLit("</strong> ") || [],nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym503_1191193756) || [],makeNimstrLit("</div>") || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage{amsthm}"));
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("\\theoremstyle{definition}") || []).concat(HEX7BHEX7D_1711277194(makeNimstrLit("\\newtheorem*{XDtheorem}"), wordHEX60gensym503_1191193793) || []));
      Temporary1 = env_1711277202(makeNimstrLit("XDtheorem"), nsuFormatSingleElem(makeNimstrLit("$1"), contentHEX60gensym503_1191193756));
      break;
    case 2:
      if (isSome_1728053623(thNameHEX60gensym503_1191193753)) {
      var thNameHEX60gensym503_1191193893 = nimCopy(null, unsafeGet_1761608185(thNameHEX60gensym503_1191193753), NTI33554439);
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1 ($2)"), [nimCopy(null, wordHEX60gensym503_1191193793, NTI33554439), nimCopy(null, thNameHEX60gensym503_1191193893, NTI33554439)]);
      }
      else {
      Temporary4 = nsuFormatOpenArray(makeNimstrLit("$1"), [nimCopy(null, wordHEX60gensym503_1191193793, NTI33554439)]);
      }
      
      Temporary1 = nsuFormatOpenArray(makeNimstrLit("\x0A\x0A$1. $2"), [nimCopy(null, Temporary4, NTI33554439), nimCopy(null, contentHEX60gensym503_1191193756, NTI33554439)]);
      break;
    }
    result_1191193755 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191193755;

}
    
function HEX3Aanonymous_1191193899(arg_1191193900) {
      var result_1191193901 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191193750 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("theorem"), arg_1191193900, [HEX3F_1275068557(1), nimCopy(null, Raw_1275068563, NTI1275068423)]);
        result_1191193901 = nimCopy(result_1191193901, {typ: 1, str: theoremCmd_1191193751(to_1728053714(vals_1191193750[chckIndx(0, 0, (vals_1191193750).length - 1)]), to_1694498913(vals_1191193750[chckIndx(1, 0, (vals_1191193750).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191193901;

    }

function titleCmd_1191193967(title_1191193968, author_1191193970) {
    var Temporary1;
      var Temporary2;

  var result_1191193971 = [];

    switch (doc_1191182370.target) {
    case 0:
      incl_1778388038(doc_1191182370.addToHead, (makeNimstrLit("<title>") || []).concat(title_1191193968 || [],makeNimstrLit("</title>") || []));
      if (isSome_1728053623(author_1191193970)) {
      var author_1191194009 = nimCopy(null, unsafeGet_1761608185(author_1191193970), NTI33554439);
      Temporary2 = (makeNimstrLit("<address>") || []).concat(author_1191194009 || [],makeNimstrLit("</address>") || []);
      }
      else {
      Temporary2 = [];
      }
      
      Temporary1 = (makeNimstrLit("<h1>") || []).concat(title_1191193968 || [],makeNimstrLit("</h1>") || [],Temporary2 || []);
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, HEX7BHEX7D_1711277194(makeNimstrLit("title"), title_1191193968));
      if (isSome_1728053623(author_1191193970)) {
      var author_1191194047 = nimCopy(null, unsafeGet_1761608185(author_1191193970), NTI33554439);
      incl_1778388038(doc_1191182370.addToHead, HEX7BHEX7D_1711277194(makeNimstrLit("author"), author_1191194047));
      }
      else {
      }
      
      Temporary1 = makeNimstrLit("\\maketitle");
      break;
    case 2:
      Temporary1 = nsuFormatSingleElem(makeNimstrLit("# $1\x0A\x0A"), title_1191193968);
      break;
    }
    result_1191193971 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191193971;

}
    
function HEX3Aanonymous_1191194076(arg_1191194077) {
      var result_1191194078 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191193966 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("title"), arg_1191194077, [HEX21_1275068536(1), HEX3F_1275068557(1)]);
        result_1191194078 = nimCopy(result_1191194078, {typ: 1, str: titleCmd_1191193967(to_1694498913(vals_1191193966[chckIndx(0, 0, (vals_1191193966).length - 1)]), to_1728053714(vals_1191193966[chckIndx(1, 0, (vals_1191193966).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191194078;

    }

function unitCmd_1191194144(number_1191194146, unit_1191194147) {
    var Temporary1;

  var result_1191194148 = [];

    if (isSome_1728053623(number_1191194146)) {
    var number_1191194163 = nimCopy(null, unsafeGet_1761608185(number_1191194146), NTI33554439);
    Temporary1 = (number_1191194163 || []).concat(makeNimstrLit("\xE2\x80\x89") || [],unit_1191194147 || []);
    }
    else {
    Temporary1 = unit_1191194147;
    }
    
    result_1191194148 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191194148;

}
    
function HEX3Aanonymous_1191194169(arg_1191194170) {
      var result_1191194171 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191194143 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("unit"), arg_1191194170, [HEX3F_1275068557(1), HEX21_1275068536(1)]);
        result_1191194171 = nimCopy(result_1191194171, {typ: 1, str: unitCmd_1191194144(to_1728053714(vals_1191194143[chckIndx(0, 0, (vals_1191194143).length - 1)]), to_1694498913(vals_1191194143[chckIndx(1, 0, (vals_1191194143).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191194171;

    }

function xidocCmd_1191194237() {
    var Temporary1;
      var Temporary2;

  var result_1191194238 = [];

    switch (doc_1191182370.target) {
    case 0:
      var Temporary2 = doc_1191182370;
      if (ConstSet372[Temporary2.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary2.target, NTI1275068419)); }
      incl_1778388038(Temporary2.addToStyle, makeNimstrLit(".xd-logo{color:#d0c;font-weight:bold}"));
      Temporary1 = makeNimstrLit("<span class=\"xd-logo\">\xCE\xBE</span>");
      break;
    case 1:
      incl_1778388038(doc_1191182370.addToHead, makeNimstrLit("\\usepackage[svgnames]{xcolor}"));
      Temporary1 = makeNimstrLit("\\textcolor{#d0c}{\\(\\xi\\)}");
      break;
    case 2:
      Temporary1 = makeNimstrLit("[\xCE\xBE]");
      break;
    }
    result_1191194238 = nimCopy(null, Temporary1, NTI33554439);

  return result_1191194238;

}
    
function HEX3Aanonymous_1191194290(arg_1191194291) {
      var result_1191194292 = ({typ: 0, str: [], list: [], opt: ({val: null})});

      BeforeRet: do {
        var vals_1191194236 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("xidoc"), arg_1191194291, []);
        result_1191194292 = nimCopy(result_1191194292, {typ: 1, str: xidocCmd_1191194237(), list: [], opt: ({val: null})}, NTI1275068421);
        break BeforeRet;
      } while (false);

      return result_1191194292;

    }

function generateHtmlTag_1191194343(tag_1191194344, args_1191194345, body_1191194346, paired_1191194347) {
    var Temporary5;

  var result_1191194348 = [];

    var attrs_1191194356 = newSeq_452985301(0);
    var classes_1191194364 = newSeq_452985301(0);
    Label1: do {
      var arg_1191194368 = [];
      var i_486541426 = 0;
      var L_486541427 = (args_1191194345).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541426 < L_486541427)) break Label3;
            arg_1191194368 = args_1191194345[chckIndx(i_486541426, 0, (args_1191194345).length - 1)];
            if (nsuStartsWith(arg_1191194368, makeNimstrLit("#"))) {
            attrs_1191194356.push(nsuFormatSingleElem(makeNimstrLit("id=\"$1\""), HEX5BHEX5D_939527322(arg_1191194368, HEX2EHEX2E_872415312(1, 1))));;
            }
            else {
            if (nsuStartsWith(arg_1191194368, makeNimstrLit("."))) {
            classes_1191194364.push(HEX5BHEX5D_939527322(arg_1191194368, HEX2EHEX2E_872415312(1, 1)));;
            }
            else {
              var Temporary4 = nimCopy(null, arg_1191194368, NTI33554439);
            attrs_1191194356.push(Temporary4);;
            }
            }
            i_486541426 = addInt(i_486541426, 1);
            if (!(((args_1191194345).length == L_486541427))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    if (!(((classes_1191194364).length == 0))) {
    attrs_1191194356.push(nsuFormatSingleElem(makeNimstrLit("class=\"$1\""), nsuJoinSep(classes_1191194364, makeNimstrLit(" "))));;
    }
    
    if (paired_1191194347) {
    Temporary5 = nsuFormatOpenArray(makeNimstrLit("<$1>$2</$3>"), [nsuJoinSep(HEX26_1845493855([nimCopy(null, tag_1191194344, NTI33554439)], attrs_1191194356), makeNimstrLit(" ")), nimCopy(null, body_1191194346, NTI33554439), nimCopy(null, tag_1191194344, NTI33554439)]);
    }
    else {
    Temporary5 = nsuFormatOpenArray(makeNimstrLit("<$1 />"), [nsuJoinSep(HEX26_1845493855([nimCopy(null, tag_1191194344, NTI33554439)], attrs_1191194356), makeNimstrLit(" "))]);
    }
    
    result_1191194348 = nimCopy(null, Temporary5, NTI33554439);

  return result_1191194348;

}

function tagCmd_1191194441(tag_1191194442, args_1191194443, body_1191194444) {
  var result_1191194445 = [];

    result_1191194445 = nimCopy(null, generateHtmlTag_1191194343(tag_1191194442, args_1191194443, body_1191194444, true), NTI33554439);

  return result_1191194445;

}
      
function HEX3Aanonymous_1191194451(arg_1191194452) {
        var result_1191194453 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        BeforeRet: do {
          if (doc_1191182370.safeMode) {
          raiseException({message: makeNimstrLit("The [<>] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
          var vals_1191194440 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("<>"), arg_1191194452, [HEX21_1275068536(0), HEX2A_1275068560(0), HEX21_1275068536(1)]);
          result_1191194453 = nimCopy(result_1191194453, {typ: 1, str: tagCmd_1191194441(to_1694498913(vals_1191194440[chckIndx(0, 0, (vals_1191194440).length - 1)]), to_1761607826(vals_1191194440[chckIndx(1, 0, (vals_1191194440).length - 1)]), to_1694498913(vals_1191194440[chckIndx(2, 0, (vals_1191194440).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
          break BeforeRet;
        } while (false);

        return result_1191194453;

      }
              
function HEX3Aanonymous_1191194521(tag_1191194522) {
                  tag_1191194522 = nimCopy(null, tag_1191194522, NTI33554439);

function theTagCmd_1191194529(args_1191194530) {
  var result_1191194531 = [];

    result_1191194531 = nimCopy(null, generateHtmlTag_1191194343(tag_1191194522, args_1191194530, [], false), NTI33554439);

  return result_1191194531;

}
                  
function HEX3Aanonymous_1191194537(arg_1191194538) {
                    var result_1191194539 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                    BeforeRet: do {
                      if (doc_1191182370.safeMode) {
                      var fmtRes_1191194527 = [mnewString(0)];
                      fmtRes_1191194527[0].push.apply(fmtRes_1191194527[0], makeNimstrLit("<"));;
                      formatValue_1124073634(fmtRes_1191194527, 0, tag_1191194522, []);
                      fmtRes_1191194527[0].push.apply(fmtRes_1191194527[0], makeNimstrLit(">"));;
                      raiseException({message: nsuFormatSingleElem(makeNimstrLit("The [$1] command is not allowed in safe mode"), fmtRes_1191194527[0]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                      }
                      
                      var fmtRes_1191194527 = [mnewString(0)];
                      fmtRes_1191194527[0].push.apply(fmtRes_1191194527[0], makeNimstrLit("<"));;
                      formatValue_1124073634(fmtRes_1191194527, 0, tag_1191194522, []);
                      fmtRes_1191194527[0].push.apply(fmtRes_1191194527[0], makeNimstrLit(">"));;
                      var vals_1191194528 = expandArguments_1711276046(doc_1191182370, fmtRes_1191194527[0], arg_1191194538, [HEX2A_1275068560(0)]);
                      result_1191194539 = nimCopy(result_1191194539, {typ: 1, str: theTagCmd_1191194529(to_1761607826(vals_1191194528[chckIndx(0, 0, (vals_1191194528).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
                      break BeforeRet;
                    } while (false);

                    return result_1191194539;

                  }

function theTagCmd_1191194597(args_1191194598, body_1191194599) {
  var result_1191194600 = [];

    result_1191194600 = nimCopy(null, generateHtmlTag_1191194343(tag_1191194522, args_1191194598, body_1191194599, true), NTI33554439);

  return result_1191194600;

}
                    
function HEX3Aanonymous_1191194606(arg_1191194607) {
                      var result_1191194608 = ({typ: 0, str: [], list: [], opt: ({val: null})});

                      BeforeRet: do {
                        if (doc_1191182370.safeMode) {
                        var fmtRes_1191194595 = [mnewString(0)];
                        fmtRes_1191194595[0].push.apply(fmtRes_1191194595[0], makeNimstrLit("<"));;
                        formatValue_1124073634(fmtRes_1191194595, 0, tag_1191194522, []);
                        fmtRes_1191194595[0].push.apply(fmtRes_1191194595[0], makeNimstrLit(">"));;
                        raiseException({message: nsuFormatSingleElem(makeNimstrLit("The [$1] command is not allowed in safe mode"), fmtRes_1191194595[0]), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
                        }
                        
                        var fmtRes_1191194595 = [mnewString(0)];
                        fmtRes_1191194595[0].push.apply(fmtRes_1191194595[0], makeNimstrLit("<"));;
                        formatValue_1124073634(fmtRes_1191194595, 0, tag_1191194522, []);
                        fmtRes_1191194595[0].push.apply(fmtRes_1191194595[0], makeNimstrLit(">"));;
                        var vals_1191194596 = expandArguments_1711276046(doc_1191182370, fmtRes_1191194595[0], arg_1191194607, [HEX2A_1275068560(0), HEX21_1275068536(1)]);
                        result_1191194608 = nimCopy(result_1191194608, {typ: 1, str: theTagCmd_1191194597(to_1761607826(vals_1191194596[chckIndx(0, 0, (vals_1191194596).length - 1)]), to_1694498913(vals_1191194596[chckIndx(1, 0, (vals_1191194596).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
                        break BeforeRet;
                      } while (false);

                      return result_1191194608;

                    }

                  if (contains_872415275(htmlSelfClosingTags_1191182363, tag_1191194522)) {
                  var fmtRes_1191194527 = [mnewString(0)];
                  fmtRes_1191194527[0].push.apply(fmtRes_1191194527[0], makeNimstrLit("<"));;
                  formatValue_1124073634(fmtRes_1191194527, 0, tag_1191194522, []);
                  fmtRes_1191194527[0].push.apply(fmtRes_1191194527[0], makeNimstrLit(">"));;
                  HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], fmtRes_1191194527[0], HEX3Aanonymous_1191194537);
                  }
                  else {
                    var fmtRes_1191194595 = [mnewString(0)];
                    fmtRes_1191194595[0].push.apply(fmtRes_1191194595[0], makeNimstrLit("<"));;
                    formatValue_1124073634(fmtRes_1191194595, 0, tag_1191194522, []);
                    fmtRes_1191194595[0].push.apply(fmtRes_1191194595[0], makeNimstrLit(">"));;
                    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], fmtRes_1191194595[0], HEX3Aanonymous_1191194606);
                  }
                  

                
              }

function backslashCmd_1191194671(command_1191194672, args_1191194673) {
  var result_1191194674 = [];

    Label1: do {
      var iHEX60gensym552_1191194696 = 0;
      var resultHEX60gensym552_1191194703 = newSeq_452985301(chckRange((args_1191194673).length, 0, 2147483647));
      Label2: do {
        var it_1191194707 = [];
        var i_486541431 = 0;
        var L_486541432 = (args_1191194673).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_486541431 < L_486541432)) break Label4;
              it_1191194707 = args_1191194673[chckIndx(i_486541431, 0, (args_1191194673).length - 1)];
              resultHEX60gensym552_1191194703[chckIndx(iHEX60gensym552_1191194696, 0, (resultHEX60gensym552_1191194703).length - 1)] = nimCopy(null, nsuFormatSingleElem(makeNimstrLit("{$1}"), it_1191194707), NTI33554439);
              iHEX60gensym552_1191194696 = addInt(iHEX60gensym552_1191194696, 1);
              i_486541431 = addInt(i_486541431, 1);
              if (!(((args_1191194673).length == L_486541432))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
    result_1191194674 = nimCopy(null, (makeNimstrLit("\\") || []).concat(command_1191194672 || [],nsuJoinSep(resultHEX60gensym552_1191194703, []) || []), NTI33554439);

  return result_1191194674;

}
      
function HEX3Aanonymous_1191194717(arg_1191194718) {
        var result_1191194719 = ({typ: 0, str: [], list: [], opt: ({val: null})});

        BeforeRet: do {
          if (doc_1191182370.safeMode) {
          raiseException({message: makeNimstrLit("The [\\] command is not allowed in safe mode"), m_type: NTI1258291205, parent: null, name: null, trace: [], up: null}, "XidocError:ObjectType");
          }
          
          var vals_1191194670 = expandArguments_1711276046(doc_1191182370, makeNimstrLit("\\"), arg_1191194718, [HEX21_1275068536(0), HEX2A_1275068560(1)]);
          result_1191194719 = nimCopy(result_1191194719, {typ: 1, str: backslashCmd_1191194671(to_1694498913(vals_1191194670[chckIndx(0, 0, (vals_1191194670).length - 1)]), to_1761607826(vals_1191194670[chckIndx(1, 0, (vals_1191194670).length - 1)])), list: [], opt: ({val: null})}, NTI1275068421);
          break BeforeRet;
        } while (false);

        return result_1191194719;

      }

  var result_1191182373 = ({data: [], counter: 0});

    var commands_1191182376 = [({data: [], counter: 0})];
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("#"), HEX3Aanonymous_1191182401);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit(";"), HEX3Aanonymous_1191182466);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("()"), HEX3Aanonymous_1191182528);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("("), HEX3Aanonymous_1191182593);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit(")"), HEX3Aanonymous_1191182654);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("--"), HEX3Aanonymous_1191182715);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("---"), HEX3Aanonymous_1191182776);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("..."), HEX3Aanonymous_1191182837);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("\""), HEX3Aanonymous_1191182980);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("$"), HEX3Aanonymous_1191183046);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("$$"), HEX3Aanonymous_1191183116);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("$$&"), HEX3Aanonymous_1191183186);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("LaTeX"), HEX3Aanonymous_1191183278);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("add-to-head"), HEX3Aanonymous_1191183363);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("arg-raw"), HEX3Aanonymous_1191183708);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("arg"), HEX3Aanonymous_1191183774);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("arg-expand"), HEX3Aanonymous_1191183840);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("arg-raw-escape"), HEX3Aanonymous_1191183906);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("bf"), HEX3Aanonymous_1191183972);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("block-quote"), HEX3Aanonymous_1191184055);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("checkboxes"), HEX3Aanonymous_1191184154);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("code"), HEX3Aanonymous_1191184465);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("code-block"), HEX3Aanonymous_1191184598);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("color"), HEX3Aanonymous_1191184699);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("corollary"), HEX3Aanonymous_1191184917);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("def"), HEX3Aanonymous_1191185127);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("def-global"), HEX3Aanonymous_1191185317);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("description-list"), HEX3Aanonymous_1191185569);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("dfn"), HEX3Aanonymous_1191185784);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("draw"), HEX3Aanonymous_1191185897);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("empty-favicon"), HEX3Aanonymous_1191186013);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("example"), HEX3Aanonymous_1191186223);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("exercise"), HEX3Aanonymous_1191186447);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("expand"), HEX3Aanonymous_1191186523);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("figure"), HEX3Aanonymous_1191186636);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("for-each"), HEX3Aanonymous_1191186816);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("get-doc-path-absolute"), HEX3Aanonymous_1191186960);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("get-doc-path-relative-to-containing"), HEX3Aanonymous_1191187022);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("header-row"), HEX3Aanonymous_1191187131);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("hide"), HEX3Aanonymous_1191187198);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("hint"), HEX3Aanonymous_1191187412);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("html-add-attrs"), HEX3Aanonymous_1191187565);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("if-html"), HEX3Aanonymous_1191187640);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("if-latex"), HEX3Aanonymous_1191187710);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("if-gemtext"), HEX3Aanonymous_1191187780);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("include"), HEX3Aanonymous_1191188039);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("inject"), HEX3Aanonymous_1191188155);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("it"), HEX3Aanonymous_1191188221);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("janet-call"), HEX3Aanonymous_1191188324);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("janet-eval"), HEX3Aanonymous_1191188455);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("join"), HEX3Aanonymous_1191188564);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("js-call"), HEX3Aanonymous_1191188636);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("js-eval"), HEX3Aanonymous_1191188730);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("js-module"), HEX3Aanonymous_1191188828);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("js-module-raw"), HEX3Aanonymous_1191188921);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("lang"), HEX3Aanonymous_1191188996);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("lemma"), HEX3Aanonymous_1191189214);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("lines"), HEX3Aanonymous_1191189309);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("link"), HEX3Aanonymous_1191189425);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("link-image"), HEX3Aanonymous_1191189526);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("link-stylesheet"), HEX3Aanonymous_1191189633);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("list"), HEX3Aanonymous_1191189810);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("list-dirs"), HEX3Aanonymous_1191189877);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("list-files"), HEX3Aanonymous_1191189943);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("matext"), HEX3Aanonymous_1191190010);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("ms"), HEX3Aanonymous_1191190076);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("ordered-list"), HEX3Aanonymous_1191190253);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("p"), HEX3Aanonymous_1191190320);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("pass"), HEX3Aanonymous_1191190386);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("pass-raw"), HEX3Aanonymous_1191190452);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("proof"), HEX3Aanonymous_1191190674);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("props"), HEX3Aanonymous_1191190861);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("raw"), HEX3Aanonymous_1191190928);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("raw<"), HEX3Aanonymous_1191190995);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("render"), HEX3Aanonymous_1191191061);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("replace-suffix"), HEX3Aanonymous_1191191130);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("reset"), HEX3Aanonymous_1191191782);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("row"), HEX3Aanonymous_1191191891);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("section"), HEX3Aanonymous_1191192019);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("set"), HEX3Aanonymous_1191192142);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("set-doc-lang"), HEX3Aanonymous_1191192215);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("set-syntax-highlighting-theme"), HEX3Aanonymous_1191192281);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("set-title"), HEX3Aanonymous_1191192393);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("show-title"), HEX3Aanonymous_1191192459);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("solution"), HEX3Aanonymous_1191192673);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("space"), HEX3Aanonymous_1191192748);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("split"), HEX3Aanonymous_1191192854);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("spoiler"), HEX3Aanonymous_1191192925);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("spoiler-hint"), HEX3Aanonymous_1191193095);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("spoiler-solution"), HEX3Aanonymous_1191193271);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("style"), HEX3Aanonymous_1191193370);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("table"), HEX3Aanonymous_1191193480);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("template-arg"), HEX3Aanonymous_1191193619);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("term"), HEX3Aanonymous_1191193685);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("theorem"), HEX3Aanonymous_1191193899);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("title"), HEX3Aanonymous_1191194076);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("unit"), HEX3Aanonymous_1191194169);
    HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("xidoc"), HEX3Aanonymous_1191194290);
    switch (doc_1191182370.target) {
    case 0:
      HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("<>"), HEX3Aanonymous_1191194451);
      Label1: do {
        var tag_1191194520 = [];
        var i_486541059 = 0;
        var L_486541060 = 130;
        Label2: do {
            Label3: while (true) {
            if (!(i_486541059 < L_486541060)) break Label3;
              tag_1191194520 = htmlTags_1191182362[chckIndx(i_486541059, 0, (htmlTags_1191182362).length - 1)];
              HEX3Aanonymous_1191194521(tag_1191194520);
              i_486541059 = addInt(i_486541059, 1);
              if (!((130 == L_486541060))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      break;
    case 1:
      HEX5BHEX5DHEX3D_1694498976(commands_1191182376[0], makeNimstrLit("\\"), HEX3Aanonymous_1191194717);
      break;
    default: 
      break;
    }
    result_1191182373 = nimCopy(result_1191182373, commands_1191182376[0], NTI1275068467);

  return result_1191182373;

}

function get_1258291245(self_1258291247) {
  var result_1258291248 = null;
  var result_1258291248_Idx = 0;

  BeforeRet: do {
    if (isNone_1258291253(self_1258291247)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1006632980, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1258291248 = self_1258291247; result_1258291248_Idx = "val";
    break BeforeRet;
  } while (false);

  return [result_1258291248, result_1258291248_Idx];

}

function HEX5BHEX5D_1258291295(s_1258291299, x_1258291300) {
  var result_1258291301 = [];

    var a_1258291303 = x_1258291300.a;
    var L_1258291309 = addInt(subInt(subInt((s_1258291299).length, x_1258291300.b), a_1258291303), 1);
    result_1258291301 = new Array(chckRange(L_1258291309, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1258291309, 0, 2147483647) ; ++i) { result_1258291301[i] = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})}); }    Label1: do {
      var i_1258291318 = 0;
      var i_486541440 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486541440 < L_1258291309)) break Label3;
            i_1258291318 = i_486541440;
            result_1258291301[chckIndx(i_1258291318, 0, (result_1258291301).length - 1)] = nimCopy(result_1258291301[chckIndx(i_1258291318, 0, (result_1258291301).length - 1)], s_1258291299[chckIndx(addInt(i_1258291318, a_1258291303), 0, (s_1258291299).length - 1)], NTI1275068425);
            i_486541440 = addInt(i_486541440, 1);
          }
      } while (false);
    } while (false);

  return result_1258291301;

}

function npegsreplace(s_1207962599, sub_1207962600, by_1207962601) {
  var result_1207962602 = [];

    result_1207962602 = nimCopy(null, [], NTI33554439);
    var i_1207962603 = 0;
    var c_1207962604 = [({matches: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], ml: 0, origStart: 0})];
    Label1: do {
        Label2: while (true) {
        if (!(i_1207962603 < (s_1207962599).length)) break Label2;
          var x_1207962605 = npegsrawMatch(s_1207962599, sub_1207962600, i_1207962603, c_1207962604[0]);
          if ((x_1207962605 <= 0)) {
          addChar(result_1207962602, s_1207962599[chckIndx(i_1207962603, 0, (s_1207962599).length - 1)]);;
          i_1207962603 = addInt(i_1207962603, 1);
          }
          else {
            result_1207962602.push.apply(result_1207962602, by_1207962601);;
            i_1207962603 = addInt(i_1207962603, x_1207962605);
          }
          
        }
    } while (false);
    result_1207962602.push.apply(result_1207962602, substr_33557934(s_1207962599, i_1207962603));;

  return result_1207962602;

}

function nsuCountChar(s_654313038, sub_654313039) {
  var result_654313040 = 0;

    result_654313040 = 0;
    Label1: do {
      var c_654313041 = 0;
      var i_1258291230 = 0;
      var L_1258291231 = (s_654313038).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_1258291230 < L_1258291231)) break Label3;
            c_654313041 = s_654313038[chckIndx(i_1258291230, 0, (s_654313038).length - 1)];
            if ((c_654313041 == sub_654313039)) {
            result_654313040 = addInt(result_654313040, 1);
            }
            
            i_1258291230 = addInt(i_1258291230, 1);
            if (!(((s_654313038).length == L_1258291231))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_654313040;

}

function format_1258291214(err_1258291215, doc_1258291216, termColors_1258291217) {
    var Temporary1;

  var result_1258291218 = null;

  BeforeRet: do {
    var msg_1258291222 = [];
    if (termColors_1258291217) {
    msg_1258291222.push.apply(msg_1258291222, makeNimstrLit("\x1B[91m"));;
    }
    
    var fmtRes_1258291227 = [mnewString(0)];
    fmtRes_1258291227[0].push.apply(fmtRes_1258291227[0], makeNimstrLit("Error while rendering file "));;
    formatValue_1124073634(fmtRes_1258291227, 0, (Temporary1 = get_1258291245(doc_1258291216.stack[chckIndx(0, 0, (doc_1258291216.stack).length - 1)].path), Temporary1)[0][Temporary1[1]], []);
    fmtRes_1258291227[0].push.apply(fmtRes_1258291227[0], makeNimstrLit("\x0A"));;
    msg_1258291222.push.apply(msg_1258291222, fmtRes_1258291227[0]);;
    if (termColors_1258291217) {
    msg_1258291222.push.apply(msg_1258291222, makeNimstrLit("\x1B[93m"));;
    }
    
    Label2: do {
      var frame_1258291358 = ({args: ({data: [], counter: 0}), cmdArg: [], cmdName: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false}), path: ({val: [], has: false})});
      var colontmp__486541435 = [];
      colontmp__486541435 = HEX5BHEX5D_1258291295(doc_1258291216.stack, HEX2EHEX2E_872415312(1, 1));
      var i_486541436 = 0;
      var L_486541437 = (colontmp__486541435).length;
      Label3: do {
          Label4: while (true) {
          if (!(i_486541436 < L_486541437)) break Label4;
            frame_1258291358 = colontmp__486541435[chckIndx(i_486541436, 0, (colontmp__486541435).length - 1)];
            var truncatedArg_1258291360 = npegsreplace(frame_1258291358.cmdArg, peg_1207963446(makeNimstrLit("\\s+")), makeNimstrLit(" "));
            if ((48 < (truncatedArg_1258291360).length)) {
            truncatedArg_1258291360 = nimCopy(null, HEX5BHEX5D_939524972(truncatedArg_1258291360, HEX2EHEX2E_939524947(0, 47)), NTI33554439);
            truncatedArg_1258291360.push.apply(truncatedArg_1258291360, makeNimstrLit("\xE2\x80\xA6"));;
            var numOpeningBrackets_1258291384 = nsuCountChar(truncatedArg_1258291360, 91);
            var numClosingBrackets_1258291385 = nsuCountChar(truncatedArg_1258291360, 93);
            truncatedArg_1258291360.push.apply(truncatedArg_1258291360, nsuRepeatStr(makeNimstrLit("]\xE2\x80\xA6"), chckRange(subInt(numOpeningBrackets_1258291384, numClosingBrackets_1258291385), 0, 2147483647)));;
            }
            
            var fmtRes_1258291386 = [mnewString(0)];
            fmtRes_1258291386[0].push.apply(fmtRes_1258291386[0], makeNimstrLit("in ["));;
            formatValue_1124073634(fmtRes_1258291386, 0, frame_1258291358.cmdName, []);
            formatValue_1124073634(fmtRes_1258291386, 0, truncatedArg_1258291360, []);
            fmtRes_1258291386[0].push.apply(fmtRes_1258291386[0], makeNimstrLit("]\x0A"));;
            msg_1258291222.push.apply(msg_1258291222, fmtRes_1258291386[0]);;
            i_486541436 = addInt(i_486541436, 1);
            if (!(((colontmp__486541435).length == L_486541437))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    if (termColors_1258291217) {
    msg_1258291222.push.apply(msg_1258291222, makeNimstrLit("\x1B[0m"));;
    }
    
    msg_1258291222.push.apply(msg_1258291222, err_1258291215.message);;
    result_1258291218 = {message: nimCopy(null, msg_1258291222, NTI33554439), m_type: NTI1258291206, parent: null, name: null, trace: [], up: null};
    break BeforeRet;
  } while (false);

  return result_1258291218;

}

function getCurrentException() {
  var result_33556523 = null;

    if (isNimException_33556520()) {
    result_33556523 = lastJSError;
    }
    

  return result_33556523;

}

function len_486539356(s_486539358) {
  var result_486539359 = 0;

    result_486539359 = s_486539358.counter;

  return result_486539359;

}

function HEX5BHEX5D_1711277198(cmd_1711277199, arg_1711277200) {
    var Temporary1;

  var result_1711277201 = [];

    if (nsuStartsWith(cmd_1711277199, makeNimstrLit("\\"))) {
    Temporary1 = [];
    }
    else {
    Temporary1 = makeNimstrLit("\\");
    }
    
    result_1711277201 = nimCopy(null, (Temporary1 || []).concat(cmd_1711277199 || [],makeNimstrLit("[") || [],arg_1711277200 || [],makeNimstrLit("]") || []), NTI33554439);

  return result_1711277201;

}

function renderXidoc_486539279(body_486539280, path_486539281, target_486539282, snippet_486539283, safeMode_486539284, verbose_486539285, colorfulError_486539286) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
        var Temporary5;
          var Temporary6;
        var Temporary8;
      var Temporary16;
        
function HEX3Aanonymous_486540720() {
          var result_486540721 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym19_486540730 = 0;
              var colontmp__486541444 = 0;
              colontmp__486541444 = subInt((doc_486539295.stack).length, 1);
              var res_486541445 = colontmp__486541444;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486541445)) break Label3;
                    iHEX60gensym19_486540730 = res_486541445;
                    var frameHEX60gensym19_486540731 = nimCopy(null, doc_486539295.stack[chckIndx(iHEX60gensym19_486540730, 0, (doc_486539295.stack).length - 1)], NTI1275068425);
                    if (isSome_1191182935(frameHEX60gensym19_486540731.lang)) {
                    result_486540721 = get_1191182952(frameHEX60gensym19_486540731.lang);
                    break BeforeRet;
                    }
                    
                    res_486541445 = subInt(res_486541445, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_486540721;

        }
        
function HEX3Aanonymous_486540758() {
          var result_486540759 = 0;

          BeforeRet: do {
            Label1: do {
              var iHEX60gensym20_486540768 = 0;
              var colontmp__486541448 = 0;
              colontmp__486541448 = subInt((doc_486539295.stack).length, 1);
              var res_486541449 = colontmp__486541448;
              Label2: do {
                  Label3: while (true) {
                  if (!(0 <= res_486541449)) break Label3;
                    iHEX60gensym20_486540768 = res_486541449;
                    var frameHEX60gensym20_486540769 = nimCopy(null, doc_486539295.stack[chckIndx(iHEX60gensym20_486540768, 0, (doc_486539295.stack).length - 1)], NTI1275068425);
                    if (isSome_1191182935(frameHEX60gensym20_486540769.lang)) {
                    result_486540759 = get_1191182952(frameHEX60gensym20_486540769.lang);
                    break BeforeRet;
                    }
                    
                    res_486541449 = subInt(res_486541449, 1);
                  }
              } while (false);
            } while (false);
          } while (false);

          return result_486540759;

        }

  var result_486539287 = [];

  BeforeRet: do {
    var doc_486539295 = {body: nimCopy(null, body_486539280, NTI33554439), target: target_486539282, snippet: snippet_486539283, safeMode: safeMode_486539284, verbose: verbose_486539285, stack: [{cmdName: makeNimstrLit("[top]"), path: some_1728053767(path_486539281), args: ({data: [], counter: 0}), cmdArg: [], commands: ({data: [], counter: 0}), lang: ({val: 0, has: false})}], addToHead: ({data: [], counter: 0, first: 0, last: 0}), settings: ({data: [], counter: 0}), templateArgs: ({data: [], counter: 0}), addToStyle: ({data: [], counter: 0, first: 0, last: 0})};
    doc_486539295.stack[chckIndx(0, 0, (doc_486539295.stack).length - 1)].commands = nimCopy(doc_486539295.stack[chckIndx(0, 0, (doc_486539295.stack).length - 1)].commands, defaultCommands_1191182369(doc_486539295), NTI1275068467);
++excHandler;
    Temporary3 = framePtr;
    try {
    Temporary1 = renderStr_1308623448(doc_486539295, doc_486539295.body);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary3;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1258291205))) {
    raiseException(format_1258291214(getCurrentException(), doc_486539295, colorfulError_486539286), "FormattedXidocError:ObjectType");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary3;
    }
    var rendered_486539296 = nimCopy(null, Temporary1, NTI33554439);
    if (snippet_486539283) {
    result_486539287 = nimCopy(null, rendered_486539296, NTI33554439);
    break BeforeRet;
    }
    else {
        if (!(doc_486539295.target == 0)) Temporary5 = false; else {          var Temporary6 = doc_486539295;
          if (ConstSet373[Temporary6.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary6.target, NTI1275068419)); }
          Temporary5 = !((len_486539356(Temporary6.addToStyle) == 0));        }      if (Temporary5) {
      Label7: do {
        var Temporary8 = doc_486539295;
        if (ConstSet374[Temporary8.target]===undefined) { raiseFieldError2(makeNimstrLit("field \'addToStyle\' is not accessible for type \'Document\' using \'target = "), reprDiscriminant(Temporary8.target, NTI1275068419)); }
        var HEX3Atmp_486540323 = nimCopy(null, Temporary8.addToStyle, NTI1275068507);
        var iHEX60gensym7_486540326 = 0;
        var resultHEX60gensym7_486540388 = newSeq_452985301(chckRange(len_486539356(HEX3Atmp_486540323), 0, 2147483647));
        Label9: do {
          var itHEX60gensym7_486540392 = [];
          var length_486540911 = len_486539356(HEX3Atmp_486540323);
          if ((0 < (HEX3Atmp_486540323.data).length)) {
          var h_486540912 = HEX3Atmp_486540323.first;
          var idx_486540913 = 0;
          Label10: do {
              Label11: while (true) {
              if (!(0 <= h_486540912)) break Label11;
                var nxt_486540915 = HEX3Atmp_486540323.data[chckIndx(h_486540912, 0, (HEX3Atmp_486540323.data).length - 1)].Field1;
                if (isFilled_1040187430(HEX3Atmp_486540323.data[chckIndx(h_486540912, 0, (HEX3Atmp_486540323.data).length - 1)].Field0)) {
                itHEX60gensym7_486540392 = HEX3Atmp_486540323.data[chckIndx(h_486540912, 0, (HEX3Atmp_486540323.data).length - 1)].Field2;
                resultHEX60gensym7_486540388[chckIndx(iHEX60gensym7_486540326, 0, (resultHEX60gensym7_486540388).length - 1)] = nimCopy(null, itHEX60gensym7_486540392, NTI33554439);
                iHEX60gensym7_486540326 = addInt(iHEX60gensym7_486540326, 1);
                if (!((len_486539356(HEX3Atmp_486540323) == length_486540911))) {
                failedAssertImpl_218103864(makeNimstrLit("sets.nim(905, 11) `len(s) == length` the length of the OrderedSet changed while iterating over it"));
                }
                
                idx_486540913 = addInt(idx_486540913, 1);
                }
                
                h_486540912 = nxt_486540915;
              }
          } while (false);
          }
          
        } while (false);
      } while (false);
      incl_1778388038(doc_486539295.addToHead, (makeNimstrLit("<style>") || []).concat(nsuJoinSep(resultHEX60gensym7_486540388, []) || [],makeNimstrLit("</style>") || []));
      }
      
      Label12: do {
        var HEX3Atmp_486540643 = nimCopy(null, doc_486539295.addToHead, NTI1275068507);
        var iHEX60gensym16_486540646 = 0;
        var resultHEX60gensym16_486540708 = newSeq_452985301(chckRange(len_486539356(HEX3Atmp_486540643), 0, 2147483647));
        Label13: do {
          var itHEX60gensym16_486540712 = [];
          var length_486540918 = len_486539356(HEX3Atmp_486540643);
          if ((0 < (HEX3Atmp_486540643.data).length)) {
          var h_486540919 = HEX3Atmp_486540643.first;
          var idx_486540920 = 0;
          Label14: do {
              Label15: while (true) {
              if (!(0 <= h_486540919)) break Label15;
                var nxt_486540922 = HEX3Atmp_486540643.data[chckIndx(h_486540919, 0, (HEX3Atmp_486540643.data).length - 1)].Field1;
                if (isFilled_1040187430(HEX3Atmp_486540643.data[chckIndx(h_486540919, 0, (HEX3Atmp_486540643.data).length - 1)].Field0)) {
                itHEX60gensym16_486540712 = HEX3Atmp_486540643.data[chckIndx(h_486540919, 0, (HEX3Atmp_486540643.data).length - 1)].Field2;
                resultHEX60gensym16_486540708[chckIndx(iHEX60gensym16_486540646, 0, (resultHEX60gensym16_486540708).length - 1)] = nimCopy(null, itHEX60gensym16_486540712, NTI33554439);
                iHEX60gensym16_486540646 = addInt(iHEX60gensym16_486540646, 1);
                if (!((len_486539356(HEX3Atmp_486540643) == length_486540918))) {
                failedAssertImpl_218103864(makeNimstrLit("sets.nim(905, 11) `len(s) == length` the length of the OrderedSet changed while iterating over it"));
                }
                
                idx_486540920 = addInt(idx_486540920, 1);
                }
                
                h_486540919 = nxt_486540922;
              }
          } while (false);
          }
          
        } while (false);
      } while (false);
      var head_486540717 = nsuJoinSep(resultHEX60gensym16_486540708, []);
      switch (doc_486539295.target) {
      case 0:
        var lang_486540754 = translate_1291845675(5, HEX3Aanonymous_486540720());
        var fmtRes_486540755 = [mnewString(0)];
        fmtRes_486540755[0].push.apply(fmtRes_486540755[0], makeNimstrLit("<!DOCTYPE html><html lang=\""));;
        formatValue_1124073634(fmtRes_486540755, 0, lang_486540754, []);
        fmtRes_486540755[0].push.apply(fmtRes_486540755[0], makeNimstrLit("\"><head><meta charset=\"utf-8\"><meta name=\"generator\" content=\"xidoc\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">"));;
        formatValue_1124073634(fmtRes_486540755, 0, head_486540717, []);
        fmtRes_486540755[0].push.apply(fmtRes_486540755[0], makeNimstrLit("</head><body>"));;
        formatValue_1124073634(fmtRes_486540755, 0, rendered_486539296, []);
        fmtRes_486540755[0].push.apply(fmtRes_486540755[0], makeNimstrLit("</body></html>"));;
        Temporary16 = fmtRes_486540755[0];
        break;
      case 1:
        var lang_486540792 = translate_1291845675(6, HEX3Aanonymous_486540758());
        Temporary16 = (HEX7BHEX7D_1711277194(makeNimstrLit("documentclass"), getOrDefault_1778387960(doc_486539295.settings, makeNimstrLit("document-class"), makeNimstrLit("article"))) || []).concat(makeNimstrLit("\\usepackage[utf8]{inputenc}") || [],HEX7BHEX7D_1711277194(HEX5BHEX5D_1711277198(makeNimstrLit("usepackage"), lang_486540792), makeNimstrLit("babel")) || [],makeNimstrLit("\\usepackage{geometry}") || [],head_486540717 || [],makeNimstrLit("\\begin{document}") || [],rendered_486539296 || [],makeNimstrLit("\\end{document}") || []);
        break;
      case 2:
        var fmtRes_486540865 = [mnewString(0)];
        formatValue_1124073634(fmtRes_486540865, 0, head_486540717, []);
        formatValue_1124073634(fmtRes_486540865, 0, rendered_486539296, []);
        Temporary16 = fmtRes_486540865[0];
        break;
      }
    Temporary4 = Temporary16;
    }
    
    result_486539287 = nimCopy(null, Temporary4, NTI33554439);
  } while (false);

  return result_486539287;

}

function getCurrentExceptionMsg_33556533() {
  var result_33556534 = [];

  BeforeRet: do {
    if (!((lastJSError == null))) {
    if (isNimException_33556520()) {
    result_33556534 = nimCopy(null, lastJSError.message, NTI33554439);
    break BeforeRet;
    }
    else {
      var msg_33556539 = null;
            if (lastJSError.message !== undefined) {
        msg_33556539 = lastJSError.message;
      }
      
      if (!((msg_33556539 == null))) {
      result_33556534 = nimCopy(null, cstrToNimstr(msg_33556539), NTI33554439);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556534 = nimCopy(null, [], NTI33554439);
    break BeforeRet;
  } while (false);

  return result_33556534;

}

function renderXidoc(body_486540868, config_486540869) {
    var Temporary2;
    var Temporary3;

  var result_486540870 = null;

  BeforeRet: do {
++excHandler;
    Temporary2 = framePtr;
    try {
    if ((config_486540869 == undefined)) {
    Temporary3 = {};
    }
    else {
    Temporary3 = config_486540869;
    }
    
    var config_486540875 = Temporary3;
    var rendered_486540900 = renderXidoc_486539279(cstrToNimstr(body_486540868), [], 0, (config_486540875.snippet), (config_486540875.safeMode), (config_486540875.verbose), false);
    result_486540870 = toJSStr(rendered_486540900);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1258291206))) {
    throw toJSStr(getCurrentExceptionMsg_33556533())
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary2;
    }
  } while (false);

  return result_486540870;

}
export {renderXidoc};
