[inject head.xd]
[style
  [rule div.error;
    [: display; block]
    [: padding; .5rem]
    [: background; #f00]
  ]
  [rule #code;
    [: box-sizing; border-box]
    [: width; 100%]
    [: min-height; 10rem]
    [: resize; vertical]
    [: font-family; [var monospace]]
  ]
  [rule #code.error;
    [: border; 2px solid #f00]
  ]
  [rule #output.error;
    [: color; #f00]
    [: font-weight; bold]
    [: font-family; [var monospace]]
    [: margin-top; 1rem]
    [: white-space; pre]
  ]
]
[hide [$ x]]
[<noscript> [<div> .error; This page requires JavaScript to work properly.]]
[<textarea> #code; Loading, please wait[...]]
[<div> #output;]
[js-module-raw
  import { renderXidoc } from "/xidoc.min.js";
  const code = document.querySelector("#code")
  const output = document.querySelector("#output")
  const render = () => {
    try {
      output.innerHTML = renderXidoc(code.value, {snippet: true});
      code.classList.remove("error");
      output.classList.remove("error");
    } catch (err) {
      output.innerText = err;
      code.classList.add("error");
      output.classList.add("error");
    }
  }
  code.addEventListener("input", render);
  code.value = "[section Example;\n  You can [bf play] with xidoc here!\n  Just [it edit] the code and it will be automatically updated.\n  Note that some commands [color red; don't work properly] due to the limitations of the JavaScript version of xidoc.\n]";
  render();
]
